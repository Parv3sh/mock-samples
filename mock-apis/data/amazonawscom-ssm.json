{
  "uuid": "b3184002-e148-4d9d-af4d-926966195673",
  "lastMigration": 19,
  "name": "Amazon Simple Systems Manager (SSM)",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "7054e0e6-5e4c-43ce-ac5c-349e92d7b993",
      "documentation": "<p>Adds or overwrites one or more tags for the specified resource. Tags are metadata that you can assign to your documents, managed instances, maintenance windows, Parameter Store parameters, and patch baselines. Tags enable you to categorize your resources in different ways, for example, by purpose, owner, or environment. Each tag consists of a key and an optional value, both of which you define. For example, you could define a set of tags for your account's managed instances that helps you track each instance's owner and stack level. For example:</p> <ul> <li> <p> <code>Key=Owner,Value=DbAdmin</code> </p> </li> <li> <p> <code>Key=Owner,Value=SysAdmin</code> </p> </li> <li> <p> <code>Key=Owner,Value=Dev</code> </p> </li> <li> <p> <code>Key=Stack,Value=Production</code> </p> </li> <li> <p> <code>Key=Stack,Value=Pre-Production</code> </p> </li> <li> <p> <code>Key=Stack,Value=Test</code> </p> </li> </ul> <p>Each resource can have a maximum of 50 tags.</p> <p>We recommend that you devise a set of tag keys that meets your needs for each resource type. Using a consistent set of tag keys makes it easier for you to manage your resources. You can search and filter the resources based on the tags you add. Tags don't have any semantic meaning to and are interpreted strictly as a string of characters. </p> <p>For more information about using tags with Amazon Elastic Compute Cloud (Amazon EC2) instances, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html\">Tagging your Amazon EC2 resources</a> in the <i>Amazon EC2 User Guide</i>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.AddTagsToResource",
      "responses": [
        {
          "uuid": "0047158f-8454-43ad-a5ae-27753b8ef945",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b77135e1-1279-47d9-be58-90e212d934b4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceType",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2776a60b-a25c-436c-8200-c5f68d00a08d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidResourceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b10149bc-edc3-4bcb-a691-d2331853fe12",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3f3cdd50-406b-4e15-93a4-f9673fe738ab",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyTagsError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5a7ad2a3-8597-4f8a-8623-7f20c322a8f8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "TooManyUpdates",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "70d6cb0e-54e0-4375-98d2-6d76bf5db278",
      "documentation": "Associates a related resource to a Systems Manager OpsCenter OpsItem. For example, you can associate an Incident Manager incident or analysis with an OpsItem. Incident Manager is a capability of Amazon Web Services Systems Manager.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.AssociateOpsItemRelatedItem",
      "responses": [
        {
          "uuid": "b7e101d1-3776-4b6f-9f2e-524acf853f73",
          "body": "{\n  \"AssociationId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cf05cbf0-96d2-4437-ad4e-493fe62e395a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c5b9d17c-a8cd-4fec-a2a9-8be2c62b965e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OpsItemNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "64ff512e-8f5e-4a9c-9099-c5f1f61049d9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OpsItemLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d07913f8-6d61-4bd2-8603-32c9ba625012",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OpsItemInvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a4f141f0-ad95-4d77-85c4-29e773f5de73",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "OpsItemRelatedItemAlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "60cf1fec-f948-40d7-9171-346dd4fc90e7",
      "documentation": "Attempts to cancel the command specified by the Command ID. There is no guarantee that the command will be terminated and the underlying process stopped.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.CancelCommand",
      "responses": [
        {
          "uuid": "92d96bf5-9017-43b8-a0d6-806012f45e5c",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d8a3d8f4-6358-45f1-93f1-ec2a02aeafe6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4fd7309f-af08-44e3-a3d9-b03d6e13059e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidCommandId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e835526c-b684-41de-9742-3365bdd4bf02",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInstanceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "13515ad3-4e17-4b17-93be-2f7f74f2c3f6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "DuplicateInstanceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "015a356d-525c-42e8-b23c-95e563af3f2d",
      "documentation": "Stops a maintenance window execution that is already in progress and cancels any tasks in the window that haven't already starting running. Tasks already in progress will continue to completion.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.CancelMaintenanceWindowExecution",
      "responses": [
        {
          "uuid": "fe9ec3a9-0f5c-4200-b118-c925ba132869",
          "body": "{\n  \"WindowExecutionId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a4cec5d9-32d8-4ea1-b132-fb8af6d34f4e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e1595453-2cd7-491b-af3e-cd780a6be206",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9078bb0d-3acd-450f-99a6-05c278986190",
      "documentation": "<p>Generates an activation code and activation ID you can use to register your on-premises server or virtual machine (VM) with Amazon Web Services Systems Manager. Registering these machines with Systems Manager makes it possible to manage them using Systems Manager capabilities. You use the activation code and ID when installing SSM Agent on machines in your hybrid environment. For more information about requirements for managing on-premises instances and VMs using Systems Manager, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-managedinstances.html\">Setting up Amazon Web Services Systems Manager for hybrid environments</a> in the <i>Amazon Web Services Systems Manager User Guide</i>. </p> <note> <p>On-premises servers or VMs that are registered with Systems Manager and Amazon Elastic Compute Cloud (Amazon EC2) instances that you manage with Systems Manager are all called <i>managed instances</i>.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.CreateActivation",
      "responses": [
        {
          "uuid": "9ed5402d-0ff4-4093-9e0b-3d2f9b7ed73b",
          "body": "{\n  \"ActivationId\": \"\",\n  \"ActivationCode\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e7aa16e9-b7f9-4614-b103-d7a033050252",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "694a0be5-bd54-4a66-90fb-b03e7fe5d85b",
      "documentation": "A State Manager association defines the state that you want to maintain on your instances. For example, an association can specify that anti-virus software must be installed and running on your instances, or that certain ports must be closed. For static targets, the association specifies a schedule for when the configuration is reapplied. For dynamic targets, such as an Amazon Web Services resource group or an Amazon Web Services autoscaling group, State Manager, a capability of Amazon Web Services Systems Manager applies the configuration when new instances are added to the group. The association also specifies actions to take when applying the configuration. For example, an association for anti-virus software might run once a day. If the software isn't installed, then State Manager installs it. If the software is installed, but the service isn't running, then the association might instruct State Manager to start the service. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.CreateAssociation",
      "responses": [
        {
          "uuid": "2cccfdc7-f195-4b54-9b44-07f47cc093f7",
          "body": "{\n  \"AssociationDescription\": {\n    \"Name\": \"\",\n    \"InstanceId\": \"\",\n    \"AssociationVersion\": \"\",\n    \"Date\": \"{{faker 'date.recent' 365}}\",\n    \"LastUpdateAssociationDate\": \"{{faker 'date.recent' 365}}\",\n    \"Status\": {\n      \"Date\": \"{{faker 'date.recent' 365}}\",\n      \"Name\": \"\",\n      \"Message\": \"\",\n      \"AdditionalInfo\": \"\"\n    },\n    \"Overview\": {\n      \"Status\": \"\",\n      \"DetailedStatus\": \"\",\n      \"AssociationStatusAggregatedCount\": {}\n    },\n    \"DocumentVersion\": \"\",\n    \"AutomationTargetParameterName\": \"\",\n    \"Parameters\": {},\n    \"AssociationId\": \"\",\n    \"Targets\": [\n      {\n        \"Key\": \"\",\n        \"Values\": [\n          \"\"\n        ]\n      }\n    ],\n    \"ScheduleExpression\": \"\",\n    \"OutputLocation\": {\n      \"S3Location\": {\n        \"OutputS3Region\": \"\",\n        \"OutputS3BucketName\": \"\",\n        \"OutputS3KeyPrefix\": \"\"\n      }\n    },\n    \"LastExecutionDate\": \"{{faker 'date.recent' 365}}\",\n    \"LastSuccessfulExecutionDate\": \"{{faker 'date.recent' 365}}\",\n    \"AssociationName\": \"\",\n    \"MaxErrors\": \"\",\n    \"MaxConcurrency\": \"\",\n    \"ComplianceSeverity\": \"\",\n    \"SyncCompliance\": \"\",\n    \"ApplyOnlyAtCronInterval\": {{faker 'random.boolean'}},\n    \"CalendarNames\": [\n      \"\"\n    ],\n    \"TargetLocations\": [\n      {\n        \"Accounts\": [\n          \"\"\n        ],\n        \"Regions\": [\n          \"\"\n        ],\n        \"TargetLocationMaxConcurrency\": \"\",\n        \"TargetLocationMaxErrors\": \"\",\n        \"ExecutionRoleName\": \"\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9738b37b-fb01-48db-948b-5d99d7cdca3f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AssociationAlreadyExists",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "30ae0ee0-a4ec-4f92-9aa8-d9b743672792",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AssociationLimitExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "45924a1a-7f7d-4ac5-a2f5-101e8eae3b06",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e37ad396-688c-4fda-a130-c1a70eb3d04c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidDocument",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3cfa0fec-2047-421b-8dba-781a2b6d9524",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidDocumentVersion",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2464c0f2-a5a1-4c25-ba26-bdfd35e8620f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidInstanceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "77365be8-c248-497b-bda4-263b5b037b40",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnsupportedPlatformType",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0b1f99b7-8a34-4b45-9a8e-fa64310ae285",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidOutputLocation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ba5750a2-26f2-4435-bc29-2189ac34a6f1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidParameters",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8c5d3584-27ed-4e0b-ad1c-0e78bc58d072",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidTarget",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7f496c8f-aadf-4861-b1ed-3e0576dbee33",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidSchedule",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9ae7884f-b37e-4615-97aa-6548e6dec0f2",
      "documentation": "<p>Associates the specified Amazon Web Services Systems Manager document (SSM document) with the specified instances or targets.</p> <p>When you associate a document with one or more instances using instance IDs or tags, Amazon Web Services Systems Manager Agent (SSM Agent) running on the instance processes the document and configures the instance as specified.</p> <p>If you associate a document with an instance that already has an associated document, the system returns the AssociationAlreadyExists exception.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.CreateAssociationBatch",
      "responses": [
        {
          "uuid": "9cadb0bc-a693-4c11-a23b-ffb025a37023",
          "body": "{\n  \"Successful\": [\n    {\n      \"Name\": \"\",\n      \"InstanceId\": \"\",\n      \"AssociationVersion\": \"\",\n      \"Date\": \"{{faker 'date.recent' 365}}\",\n      \"LastUpdateAssociationDate\": \"{{faker 'date.recent' 365}}\",\n      \"Status\": {\n        \"Date\": \"{{faker 'date.recent' 365}}\",\n        \"Name\": \"\",\n        \"Message\": \"\",\n        \"AdditionalInfo\": \"\"\n      },\n      \"Overview\": {\n        \"Status\": \"\",\n        \"DetailedStatus\": \"\",\n        \"AssociationStatusAggregatedCount\": {}\n      },\n      \"DocumentVersion\": \"\",\n      \"AutomationTargetParameterName\": \"\",\n      \"Parameters\": {},\n      \"AssociationId\": \"\",\n      \"Targets\": [\n        {\n          \"Key\": \"\",\n          \"Values\": [\n            \"\"\n          ]\n        }\n      ],\n      \"ScheduleExpression\": \"\",\n      \"OutputLocation\": {\n        \"S3Location\": {\n          \"OutputS3Region\": \"\",\n          \"OutputS3BucketName\": \"\",\n          \"OutputS3KeyPrefix\": \"\"\n        }\n      },\n      \"LastExecutionDate\": \"{{faker 'date.recent' 365}}\",\n      \"LastSuccessfulExecutionDate\": \"{{faker 'date.recent' 365}}\",\n      \"AssociationName\": \"\",\n      \"MaxErrors\": \"\",\n      \"MaxConcurrency\": \"\",\n      \"ComplianceSeverity\": \"\",\n      \"SyncCompliance\": \"\",\n      \"ApplyOnlyAtCronInterval\": {{faker 'random.boolean'}},\n      \"CalendarNames\": [\n        \"\"\n      ],\n      \"TargetLocations\": [\n        {\n          \"Accounts\": [\n            \"\"\n          ],\n          \"Regions\": [\n            \"\"\n          ],\n          \"TargetLocationMaxConcurrency\": \"\",\n          \"TargetLocationMaxErrors\": \"\",\n          \"ExecutionRoleName\": \"\"\n        }\n      ]\n    }\n  ],\n  \"Failed\": [\n    {\n      \"Entry\": {\n        \"Name\": \"\",\n        \"InstanceId\": \"\",\n        \"Parameters\": {},\n        \"AutomationTargetParameterName\": \"\",\n        \"DocumentVersion\": \"\",\n        \"Targets\": [\n          {\n            \"Key\": \"\",\n            \"Values\": [\n              \"\"\n            ]\n          }\n        ],\n        \"ScheduleExpression\": \"\",\n        \"OutputLocation\": {\n          \"S3Location\": {\n            \"OutputS3Region\": \"\",\n            \"OutputS3BucketName\": \"\",\n            \"OutputS3KeyPrefix\": \"\"\n          }\n        },\n        \"AssociationName\": \"\",\n        \"MaxErrors\": \"\",\n        \"MaxConcurrency\": \"\",\n        \"ComplianceSeverity\": \"\",\n        \"SyncCompliance\": \"\",\n        \"ApplyOnlyAtCronInterval\": {{faker 'random.boolean'}},\n        \"CalendarNames\": [\n          \"\"\n        ],\n        \"TargetLocations\": [\n          {\n            \"Accounts\": [\n              \"\"\n            ],\n            \"Regions\": [\n              \"\"\n            ],\n            \"TargetLocationMaxConcurrency\": \"\",\n            \"TargetLocationMaxErrors\": \"\",\n            \"ExecutionRoleName\": \"\"\n          }\n        ]\n      },\n      \"Message\": \"\",\n      \"Fault\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5fc69d6e-51ce-4a0b-9dc8-757464ac39cc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a01924b2-d092-4755-a426-f2b35be5f4ae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDocument",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5365418b-7681-494e-8c65-0cc77324e1f0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDocumentVersion",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b7525915-0fd0-4130-ab4e-f636cfd9fe39",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidInstanceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "41abd8d2-b12c-483e-8a51-951a8885f850",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidParameters",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a30c77e9-5d3e-46a2-8fdf-f3dd30394f6e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "DuplicateInstanceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f8deeaa3-f7ae-4c17-ad2e-140b3c4cfd75",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "AssociationLimitExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bc6c5b26-e0a6-4de1-8fac-534bf13b68e2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "UnsupportedPlatformType",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "da02dbfc-944c-444c-8ca9-f5ee03ca2bd0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidOutputLocation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9021047b-5a13-4566-a6ac-51d0c8fb6f38",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidTarget",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4ffa55c3-76af-40b0-bf80-ab8994225a31",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidSchedule",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1ddfa348-373d-42f7-bd5a-b9411c15f8ec",
      "documentation": "Creates a Amazon Web Services Systems Manager (SSM document). An SSM document defines the actions that Systems Manager performs on your managed instances. For more information about SSM documents, including information about supported schemas, features, and syntax, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-ssm-docs.html\">Amazon Web Services Systems Manager Documents</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.CreateDocument",
      "responses": [
        {
          "uuid": "60e6fc55-08d6-41ed-bc46-3c681ece6878",
          "body": "{\n  \"DocumentDescription\": {\n    \"Sha1\": \"\",\n    \"Hash\": \"\",\n    \"HashType\": \"\",\n    \"Name\": \"\",\n    \"DisplayName\": \"\",\n    \"VersionName\": \"\",\n    \"Owner\": \"\",\n    \"CreatedDate\": \"{{faker 'date.recent' 365}}\",\n    \"Status\": \"\",\n    \"StatusInformation\": \"\",\n    \"DocumentVersion\": \"\",\n    \"Description\": \"\",\n    \"Parameters\": [\n      {\n        \"Name\": \"\",\n        \"Type\": \"\",\n        \"Description\": \"\",\n        \"DefaultValue\": \"\"\n      }\n    ],\n    \"PlatformTypes\": [\n      \"{{oneOf (array 'Windows' 'Linux')}}\"\n    ],\n    \"DocumentType\": \"\",\n    \"SchemaVersion\": \"\",\n    \"LatestVersion\": \"\",\n    \"DefaultVersion\": \"\",\n    \"DocumentFormat\": \"\",\n    \"TargetType\": \"\",\n    \"Tags\": [\n      {\n        \"Key\": \"\",\n        \"Value\": \"\"\n      }\n    ],\n    \"AttachmentsInformation\": [\n      {\n        \"Name\": \"\"\n      }\n    ],\n    \"Requires\": [\n      {\n        \"Name\": \"\",\n        \"Version\": \"\"\n      }\n    ],\n    \"Author\": \"\",\n    \"ReviewInformation\": [\n      {\n        \"ReviewedTime\": \"{{faker 'date.recent' 365}}\",\n        \"Status\": \"\",\n        \"Reviewer\": \"\"\n      }\n    ],\n    \"ApprovedVersion\": \"\",\n    \"PendingReviewVersion\": \"\",\n    \"ReviewStatus\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8ef315af-824f-4bc7-a2cf-75047e632499",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DocumentAlreadyExists",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "edfa4a04-0134-470d-8dfd-7d145f650e3c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "MaxDocumentSizeExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5b52e66e-3302-4e8e-8f55-69c1182611ff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "27ddb744-7627-4a0b-90cc-6c88fbd57c48",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidDocumentContent",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2f2f4ec0-3134-4242-8281-0ef146a66e1f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "DocumentLimitExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6584ccaf-a256-480d-a6d8-3432eb47ec92",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidDocumentSchemaVersion",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cb480f2d-fa30-49a5-94b2-a4f92928215e",
      "documentation": "<p>Creates a new maintenance window.</p> <note> <p>The value you specify for <code>Duration</code> determines the specific end time for the maintenance window based on the time it begins. No maintenance window tasks are permitted to start after the resulting endtime minus the number of hours you specify for <code>Cutoff</code>. For example, if the maintenance window starts at 3 PM, the duration is three hours, and the value you specify for <code>Cutoff</code> is one hour, no maintenance window tasks can start after 5 PM.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.CreateMaintenanceWindow",
      "responses": [
        {
          "uuid": "2826b5e1-8d55-4aa0-ab2a-643c83830497",
          "body": "{\n  \"WindowId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a186a133-8929-4534-8dd4-3d93839078c9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "IdempotentParameterMismatch",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "81b23e35-54f0-4378-8e79-92a61a6d79d5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3d1b5b8c-105a-4925-b83e-3cc00b5f7c8c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "292ad8e3-ab36-46f4-8e07-4e5f73ed8e58",
      "documentation": "<p>Creates a new OpsItem. You must have permission in Identity and Access Management (IAM) to create a new OpsItem. For more information, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter-getting-started.html\">Getting started with OpsCenter</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p> <p>Operations engineers and IT professionals use Amazon Web Services Systems Manager OpsCenter to view, investigate, and remediate operational issues impacting the performance and health of their Amazon Web Services resources. For more information, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter.html\">Amazon Web Services Systems Manager OpsCenter</a> in the <i>Amazon Web Services Systems Manager User Guide</i>. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.CreateOpsItem",
      "responses": [
        {
          "uuid": "9c9fbec1-b57a-4831-ac4e-7a62c37b759a",
          "body": "{\n  \"OpsItemId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bb0b2d30-23dc-4fce-a616-5ad42b3ec8bf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ed92c0be-1ec4-405d-bd2f-41429cb275cf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OpsItemAlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e528f83c-3f72-44ae-8050-a7903c417d16",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OpsItemLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9cb5907a-f020-4f64-bcde-225ea8547973",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OpsItemInvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3fece942-c526-4250-ad31-d16598dfc2f4",
      "documentation": "If you create a new application in Application Manager, Amazon Web Services Systems Manager calls this API operation to specify information about the new application, including the application type.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.CreateOpsMetadata",
      "responses": [
        {
          "uuid": "ae10459b-aafa-40ca-9688-cc37681aced9",
          "body": "{\n  \"OpsMetadataArn\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2438ae34-fbfd-48cf-a3c3-acd86ceee8ef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "OpsMetadataAlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3fe13a3d-6fe4-4dc9-800a-6eacac7a522f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OpsMetadataTooManyUpdatesException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1dc22066-5118-4090-98fb-7f41cb471252",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OpsMetadataInvalidArgumentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "73a709bc-3d75-49a1-818d-a8c84fa5a995",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OpsMetadataLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f4b64aa5-57f3-4195-89e4-4a1eda5aa9ce",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d1ef5100-b955-40bb-9ca4-cf0243d6563d",
      "documentation": "<p>Creates a patch baseline.</p> <note> <p>For information about valid key-value pairs in <code>PatchFilters</code> for each supported operating system type, see <a>PatchFilter</a>.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.CreatePatchBaseline",
      "responses": [
        {
          "uuid": "322c89f4-5226-4c1c-a0f7-6b5ade39049b",
          "body": "{\n  \"BaselineId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9c9ea4ea-4a93-432c-befb-396f92ca0af6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "IdempotentParameterMismatch",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c89a8419-0c80-4830-980d-3fd8e5d5669c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "56f117e3-48fd-439c-9508-0a273e7bce74",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8af3e1ea-074d-47f7-9ad6-959bdcb49b38",
      "documentation": "<p>A resource data sync helps you view data from multiple sources in a single location. Amazon Web Services Systems Manager offers two types of resource data sync: <code>SyncToDestination</code> and <code>SyncFromSource</code>.</p> <p>You can configure Systems Manager Inventory to use the <code>SyncToDestination</code> type to synchronize Inventory data from multiple Amazon Web Services Regions to a single Amazon Simple Storage Service (Amazon S3) bucket. For more information, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-inventory-datasync.html\">Configuring resource data sync for Inventory</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p> <p>You can configure Systems Manager Explorer to use the <code>SyncFromSource</code> type to synchronize operational work items (OpsItems) and operational data (OpsData) from multiple Amazon Web Services Regions to a single Amazon S3 bucket. This type can synchronize OpsItems and OpsData from multiple Amazon Web Services accounts and Amazon Web Services Regions or <code>EntireOrganization</code> by using Organizations. For more information, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/Explorer-resource-data-sync.html\">Setting up Systems Manager Explorer to display data from multiple accounts and Regions</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p> <p>A resource data sync is an asynchronous operation that returns immediately. After a successful initial sync is completed, the system continuously syncs data. To check the status of a sync, use the <a>ListResourceDataSync</a>.</p> <note> <p>By default, data isn't encrypted in Amazon S3. We strongly recommend that you enable encryption in Amazon S3 to ensure secure data storage. We also recommend that you secure access to the Amazon S3 bucket by creating a restrictive bucket policy. </p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.CreateResourceDataSync",
      "responses": [
        {
          "uuid": "ed5c7456-9d2c-4a5d-9dea-1c2c32149074",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9138a6fe-57db-47d0-b642-918b881b1982",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4dd28fc5-f1ff-4a08-b5ed-44b0a95a589b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceDataSyncCountExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0de5b861-2dda-48fb-b87c-8bccc2e7038f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceDataSyncAlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "347a03b6-41cb-4dc6-bf42-06ee035a4344",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceDataSyncInvalidConfigurationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "12feb6fe-61f6-46b7-acd3-c2526ef81671",
      "documentation": "Deletes an activation. You aren't required to delete an activation. If you delete an activation, you can no longer use it to register additional managed instances. Deleting an activation doesn't de-register managed instances. You must manually de-register managed instances.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DeleteActivation",
      "responses": [
        {
          "uuid": "fc38f7bd-63a0-49a8-b72e-d165921feb40",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c3249a1e-fb49-44de-ac64-d4e7c0c760b1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidActivationId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8417a356-4e4c-459b-bae4-76a4bb1b7c56",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidActivation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fcb04b0f-8f8b-45ef-aea3-687a8ecd5a23",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aab9a156-b6b6-4f3b-8cf2-4aaa8b19cc71",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyUpdates",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9408d97c-53ad-40c4-8801-dc89a027dcbd",
      "documentation": "<p>Disassociates the specified Amazon Web Services Systems Manager document (SSM document) from the specified instance. If you created the association by using the <code>Targets</code> parameter, then you must delete the association by using the association ID.</p> <p>When you disassociate a document from an instance, it doesn't change the configuration of the instance. To change the configuration state of an instance after you disassociate a document, you must create a new document with the desired configuration and associate it with the instance.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DeleteAssociation",
      "responses": [
        {
          "uuid": "fcbb7aaf-64c6-432d-b9ca-2245e31898c5",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "82bab5f8-8189-408f-8220-4a5cf3e236f1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AssociationDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6f37a3f9-ac1f-4500-a159-5edf2abeaf73",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b099e59b-4b87-43a4-963e-e79348851702",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDocument",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0c7be0dd-21ca-4708-9332-6dd114c5d904",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidInstanceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d0545eb4-f9f5-40cc-83d8-9a181ba277c2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "TooManyUpdates",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e8324543-6747-47d0-ad64-f498f4f59ea7",
      "documentation": "<p>Deletes the Amazon Web Services Systems Manager document (SSM document) and all instance associations to the document.</p> <p>Before you delete the document, we recommend that you use <a>DeleteAssociation</a> to disassociate all instances that are associated with the document.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DeleteDocument",
      "responses": [
        {
          "uuid": "c0c47bfe-e7e5-44c6-bdf1-6258cff18025",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ec1f06d7-5b9b-476f-a9c4-4efdb7c2cdc7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b639f75e-71d1-4d75-96be-c31023697a89",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDocument",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a9951b90-813c-48f7-9851-04e00a15676d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDocumentOperation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dae359c2-ec41-47f2-a7c6-32e0979e1792",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "AssociatedInstances",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7e992152-017e-4ca5-ad19-cea789815d31",
      "documentation": "Delete a custom inventory type or the data associated with a custom Inventory type. Deleting a custom inventory type is also referred to as deleting a custom inventory schema.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DeleteInventory",
      "responses": [
        {
          "uuid": "5c551dc7-6f19-46b3-b0f2-d0d65e7525c1",
          "body": "{\n  \"DeletionId\": \"\",\n  \"TypeName\": \"\",\n  \"DeletionSummary\": {\n    \"TotalCount\": {{faker 'random.number'}},\n    \"RemainingCount\": {{faker 'random.number'}},\n    \"SummaryItems\": [\n      {\n        \"Version\": \"\",\n        \"Count\": {{faker 'random.number'}},\n        \"RemainingCount\": {{faker 'random.number'}}\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e1026685-bf8c-4e6c-b54a-5b0fbf07f6b0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4ed595f3-e0cb-40ee-89c4-6cbc6b1dd9fc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidTypeNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f60d04d2-fca0-4971-9dad-d4371eb6538b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidOptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3eee5b6f-38b8-4dc2-b469-4fc826e76a3c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidDeleteInventoryParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "29c7178d-69fc-4776-999d-cdd618e97eec",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidInventoryRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e7a78164-686b-4d69-85a3-0190655074a1",
      "documentation": "Deletes a maintenance window.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DeleteMaintenanceWindow",
      "responses": [
        {
          "uuid": "0a0d4b7d-5463-46fa-8993-82ecd8a636c4",
          "body": "{\n  \"WindowId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d325cdab-e6a2-4bcc-a741-c771dcb25baa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6beedd22-0303-4c3b-9987-4b42c030550a",
      "documentation": "Delete OpsMetadata related to an application.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DeleteOpsMetadata",
      "responses": [
        {
          "uuid": "143a6eac-6edd-4bb8-a3b1-5c40147bb64a",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "80af7b25-c9d5-4b58-9fc4-a28ad68e89ff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "OpsMetadataNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2ce51cc6-5cea-45cb-9920-1abf05256ae1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OpsMetadataInvalidArgumentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ec940556-51fb-49d9-a87c-ce9064eafd8a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c096695d-489e-42d8-bfbe-ca0acc6decdf",
      "documentation": "Delete a parameter from the system. After deleting a parameter, wait for at least 30 seconds to create a parameter with the same name.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DeleteParameter",
      "responses": [
        {
          "uuid": "e52367e5-eca3-45c8-a9e3-3cdd0944df7e",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b89187bb-d440-443b-af35-9b9e60e58e3c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "96ce840e-6100-44ec-9989-e4fd3dab08b9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ParameterNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3cab87f3-de68-4612-bce5-0e2eb974bbd4",
      "documentation": "Delete a list of parameters. After deleting a parameter, wait for at least 30 seconds to create a parameter with the same name.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DeleteParameters",
      "responses": [
        {
          "uuid": "9537eda9-c9c1-48bb-803b-ca112dfaf3ac",
          "body": "{\n  \"DeletedParameters\": [\n    \"\"\n  ],\n  \"InvalidParameters\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1878ae0e-91f8-471e-a031-8324e988f21c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ff7af4d0-8cce-42f1-b8e3-40e280146258",
      "documentation": "Deletes a patch baseline.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DeletePatchBaseline",
      "responses": [
        {
          "uuid": "ea4c363b-a923-4942-88ed-f6abe8b5b53d",
          "body": "{\n  \"BaselineId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "45e14fd2-0c75-462c-9fc7-b78105ec6b70",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5df653b3-2278-4b5b-8ce1-fd33efcdb2ce",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5ec78ce5-7cba-480f-9b51-f663c5dfcee6",
      "documentation": "Deletes a resource data sync configuration. After the configuration is deleted, changes to data on managed instances are no longer synced to or from the target. Deleting a sync configuration doesn't delete data.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DeleteResourceDataSync",
      "responses": [
        {
          "uuid": "d5d504c3-b879-4957-ae6b-fc7d1507df2b",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ba71569c-b67b-4bc3-ba71-4659d4e63c2f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "46de4a23-5209-4725-b8e0-ef9475d093d2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceDataSyncNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bb8e29ea-9575-4243-bb66-aba3dd602371",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceDataSyncInvalidConfigurationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a5b5e50e-931a-4b67-8374-323eb96f6917",
      "documentation": "Removes the server or virtual machine from the list of registered servers. You can reregister the instance again at any time. If you don't plan to use Run Command on the server, we suggest uninstalling SSM Agent first.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DeregisterManagedInstance",
      "responses": [
        {
          "uuid": "8e29c33b-deea-4339-95fe-b769f4131818",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "191a0ab9-e11a-4810-97ac-da96491f103b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInstanceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4eb1e51a-fd3d-48b8-96a2-765d52471ae8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "589b061f-2ff5-4a87-8665-08e772bead1e",
      "documentation": "Removes a patch group from a patch baseline.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DeregisterPatchBaselineForPatchGroup",
      "responses": [
        {
          "uuid": "2e15e229-06e8-4bc9-a2c6-2fefdc08594a",
          "body": "{\n  \"BaselineId\": \"\",\n  \"PatchGroup\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c2ec9836-897c-4ad4-8975-4823831c6f97",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "af8ae6ad-d2d0-46d8-b7cd-8dd76c8e21bd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bf4d1c64-8121-47b3-a5df-d6a7262df178",
      "documentation": "Removes a target from a maintenance window.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DeregisterTargetFromMaintenanceWindow",
      "responses": [
        {
          "uuid": "66a5798f-3cd0-4fc7-aba5-a46d7117238e",
          "body": "{\n  \"WindowId\": \"\",\n  \"WindowTargetId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c5407d48-0c21-4a05-9ea6-8839f8c97c8e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "742b100b-97a5-4c2a-9df4-3bd09f0b58b3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ec6339b7-9fd0-46f7-af1a-24d17a34d71e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TargetInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bcd15856-9cd3-4132-addf-9e5d3cf35fcb",
      "documentation": "Removes a task from a maintenance window.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DeregisterTaskFromMaintenanceWindow",
      "responses": [
        {
          "uuid": "32223da6-1f4b-4ff0-b7ca-a86a134f1a93",
          "body": "{\n  \"WindowId\": \"\",\n  \"WindowTaskId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ea9ef3b5-678c-4fd0-a796-31a33df0958f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dc72ef60-f243-4b2e-823b-c79b1d656ca1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "82cb9b53-c3c1-4397-9059-4b508474014d",
      "documentation": "Describes details about the activation, such as the date and time the activation was created, its expiration date, the Identity and Access Management (IAM) role assigned to the instances in the activation, and the number of instances registered by using this activation.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeActivations",
      "responses": [
        {
          "uuid": "760cf160-a6bb-4f48-86a4-d4256d13c6aa",
          "body": "{\n  \"ActivationList\": [\n    {\n      \"ActivationId\": \"\",\n      \"Description\": \"\",\n      \"DefaultInstanceName\": \"\",\n      \"IamRole\": \"\",\n      \"RegistrationLimit\": {{faker 'random.number'}},\n      \"RegistrationsCount\": {{faker 'random.number'}},\n      \"ExpirationDate\": \"{{faker 'date.recent' 365}}\",\n      \"Expired\": {{faker 'random.boolean'}},\n      \"CreatedDate\": \"{{faker 'date.recent' 365}}\",\n      \"Tags\": [\n        {\n          \"Key\": \"\",\n          \"Value\": \"\"\n        }\n      ]\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "755bacdf-55e9-4b29-afe9-88018b7b2dd3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidFilter",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c0cec6e6-eced-4e24-8c71-e0797816c29f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fa9e0d37-27d3-4f38-a3e8-b3d7e6fa541d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7d59bb86-ebd8-4016-bebc-e4265eac4cf7",
      "documentation": "Describes the association for the specified target or instance. If you created the association by using the <code>Targets</code> parameter, then you must retrieve the association by using the association ID.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeAssociation",
      "responses": [
        {
          "uuid": "46df4d28-8960-4794-abc1-98b41b30bafc",
          "body": "{\n  \"AssociationDescription\": {\n    \"Name\": \"\",\n    \"InstanceId\": \"\",\n    \"AssociationVersion\": \"\",\n    \"Date\": \"{{faker 'date.recent' 365}}\",\n    \"LastUpdateAssociationDate\": \"{{faker 'date.recent' 365}}\",\n    \"Status\": {\n      \"Date\": \"{{faker 'date.recent' 365}}\",\n      \"Name\": \"\",\n      \"Message\": \"\",\n      \"AdditionalInfo\": \"\"\n    },\n    \"Overview\": {\n      \"Status\": \"\",\n      \"DetailedStatus\": \"\",\n      \"AssociationStatusAggregatedCount\": {}\n    },\n    \"DocumentVersion\": \"\",\n    \"AutomationTargetParameterName\": \"\",\n    \"Parameters\": {},\n    \"AssociationId\": \"\",\n    \"Targets\": [\n      {\n        \"Key\": \"\",\n        \"Values\": [\n          \"\"\n        ]\n      }\n    ],\n    \"ScheduleExpression\": \"\",\n    \"OutputLocation\": {\n      \"S3Location\": {\n        \"OutputS3Region\": \"\",\n        \"OutputS3BucketName\": \"\",\n        \"OutputS3KeyPrefix\": \"\"\n      }\n    },\n    \"LastExecutionDate\": \"{{faker 'date.recent' 365}}\",\n    \"LastSuccessfulExecutionDate\": \"{{faker 'date.recent' 365}}\",\n    \"AssociationName\": \"\",\n    \"MaxErrors\": \"\",\n    \"MaxConcurrency\": \"\",\n    \"ComplianceSeverity\": \"\",\n    \"SyncCompliance\": \"\",\n    \"ApplyOnlyAtCronInterval\": {{faker 'random.boolean'}},\n    \"CalendarNames\": [\n      \"\"\n    ],\n    \"TargetLocations\": [\n      {\n        \"Accounts\": [\n          \"\"\n        ],\n        \"Regions\": [\n          \"\"\n        ],\n        \"TargetLocationMaxConcurrency\": \"\",\n        \"TargetLocationMaxErrors\": \"\",\n        \"ExecutionRoleName\": \"\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5e3efac3-9951-475c-bdfc-13009336026b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AssociationDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3f075418-fc9a-4e0f-8bad-005539cd6289",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidAssociationVersion",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0cf4a530-61b1-4767-a808-48f148987e63",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e5c67824-a408-46ec-8867-2e57ab423078",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidDocument",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3572c5e5-696d-427f-a1a0-75cb20451a27",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidInstanceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1fa9152a-7c8a-4e81-9291-64bb2e0ed21c",
      "documentation": "Views information about a specific execution of a specific association.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeAssociationExecutionTargets",
      "responses": [
        {
          "uuid": "7f83fef8-5b60-489e-b9dc-e7a4b4a893a8",
          "body": "{\n  \"AssociationExecutionTargets\": [\n    {\n      \"AssociationId\": \"\",\n      \"AssociationVersion\": \"\",\n      \"ExecutionId\": \"\",\n      \"ResourceId\": \"\",\n      \"ResourceType\": \"\",\n      \"Status\": \"\",\n      \"DetailedStatus\": \"\",\n      \"LastExecutionDate\": \"{{faker 'date.recent' 365}}\",\n      \"OutputSource\": {\n        \"OutputSourceId\": \"\",\n        \"OutputSourceType\": \"\"\n      }\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d4f76d3e-2127-4c63-a033-c87171841d6b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a0e56a26-aaeb-45ed-b593-da0e80d5326d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AssociationDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "55c4d63f-2fc3-429f-bf4c-3786b94e1155",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2b1ccda8-508d-449f-ba17-652ce2feb127",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "AssociationExecutionDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ceed41ec-1213-4be4-a5e0-4b51289a8ddc",
      "documentation": "Views all executions for a specific association ID. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeAssociationExecutions",
      "responses": [
        {
          "uuid": "97dfce7d-2c05-4f1b-9218-5064f6db20eb",
          "body": "{\n  \"AssociationExecutions\": [\n    {\n      \"AssociationId\": \"\",\n      \"AssociationVersion\": \"\",\n      \"ExecutionId\": \"\",\n      \"Status\": \"\",\n      \"DetailedStatus\": \"\",\n      \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastExecutionDate\": \"{{faker 'date.recent' 365}}\",\n      \"ResourceCountByStatus\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b7a579bc-d06d-4888-ab33-e3385aeae7a0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "441f85a4-1fb3-4e4d-a27d-12cef0b8136b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AssociationDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b4c7e90a-cae9-48e4-8d9f-39628e2c15d0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "01d76fe8-3eca-4d8a-8f91-327458c49749",
      "documentation": "Provides details about all active and terminated Automation executions.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeAutomationExecutions",
      "responses": [
        {
          "uuid": "fa5b4699-4274-4c99-9e0d-c280afbeda95",
          "body": "{\n  \"AutomationExecutionMetadataList\": [\n    {\n      \"AutomationExecutionId\": \"\",\n      \"DocumentName\": \"\",\n      \"DocumentVersion\": \"\",\n      \"AutomationExecutionStatus\": \"\",\n      \"ExecutionStartTime\": \"{{faker 'date.recent' 365}}\",\n      \"ExecutionEndTime\": \"{{faker 'date.recent' 365}}\",\n      \"ExecutedBy\": \"\",\n      \"LogFile\": \"\",\n      \"Outputs\": {},\n      \"Mode\": \"\",\n      \"ParentAutomationExecutionId\": \"\",\n      \"CurrentStepName\": \"\",\n      \"CurrentAction\": \"\",\n      \"FailureMessage\": \"\",\n      \"TargetParameterName\": \"\",\n      \"Targets\": [\n        {\n          \"Key\": \"\",\n          \"Values\": [\n            \"\"\n          ]\n        }\n      ],\n      \"TargetMaps\": [\n        {}\n      ],\n      \"ResolvedTargets\": {\n        \"ParameterValues\": [\n          \"\"\n        ],\n        \"Truncated\": {{faker 'random.boolean'}}\n      },\n      \"MaxConcurrency\": \"\",\n      \"MaxErrors\": \"\",\n      \"Target\": \"\",\n      \"AutomationType\": \"\",\n      \"AutomationSubtype\": \"\",\n      \"ScheduledTime\": \"{{faker 'date.recent' 365}}\",\n      \"Runbooks\": [\n        {\n          \"DocumentName\": \"\",\n          \"DocumentVersion\": \"\",\n          \"Parameters\": {},\n          \"TargetParameterName\": \"\",\n          \"Targets\": [\n            {\n              \"Key\": \"\",\n              \"Values\": [\n                \"\"\n              ]\n            }\n          ],\n          \"MaxConcurrency\": \"\",\n          \"MaxErrors\": \"\",\n          \"TargetLocations\": [\n            {\n              \"Accounts\": [\n                \"\"\n              ],\n              \"Regions\": [\n                \"\"\n              ],\n              \"TargetLocationMaxConcurrency\": \"\",\n              \"TargetLocationMaxErrors\": \"\",\n              \"ExecutionRoleName\": \"\"\n            }\n          ]\n        }\n      ],\n      \"OpsItemId\": \"\",\n      \"AssociationId\": \"\",\n      \"ChangeRequestName\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f9351b55-0db7-443f-af81-18cb76a726e1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidFilterKey",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7d5965fe-3a9f-4c78-82dd-4005bab5adf5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidFilterValue",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fc6a762e-5cc9-4705-99aa-4f2e6ddef3e9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "17c35f93-3e35-460b-92d5-aa1d9cccbf5d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f258f767-7695-49ba-8a33-0a57f93df7bd",
      "documentation": "Information about all active and terminated step executions in an Automation workflow.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeAutomationStepExecutions",
      "responses": [
        {
          "uuid": "598c50bf-8224-4552-b28a-b3a558e495fc",
          "body": "{\n  \"StepExecutions\": [\n    {\n      \"StepName\": \"\",\n      \"Action\": \"\",\n      \"TimeoutSeconds\": {{faker 'random.number'}},\n      \"OnFailure\": \"\",\n      \"MaxAttempts\": {{faker 'random.number'}},\n      \"ExecutionStartTime\": \"{{faker 'date.recent' 365}}\",\n      \"ExecutionEndTime\": \"{{faker 'date.recent' 365}}\",\n      \"StepStatus\": \"\",\n      \"ResponseCode\": \"\",\n      \"Inputs\": {},\n      \"Outputs\": {},\n      \"Response\": \"\",\n      \"FailureMessage\": \"\",\n      \"FailureDetails\": {\n        \"FailureStage\": \"\",\n        \"FailureType\": \"\",\n        \"Details\": {}\n      },\n      \"StepExecutionId\": \"\",\n      \"OverriddenParameters\": {},\n      \"IsEnd\": {{faker 'random.boolean'}},\n      \"NextStep\": \"\",\n      \"IsCritical\": {{faker 'random.boolean'}},\n      \"ValidNextSteps\": [\n        \"\"\n      ],\n      \"Targets\": [\n        {\n          \"Key\": \"\",\n          \"Values\": [\n            \"\"\n          ]\n        }\n      ],\n      \"TargetLocation\": {\n        \"Accounts\": [\n          \"\"\n        ],\n        \"Regions\": [\n          \"\"\n        ],\n        \"TargetLocationMaxConcurrency\": \"\",\n        \"TargetLocationMaxErrors\": \"\",\n        \"ExecutionRoleName\": \"\"\n      }\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "89d602dd-a45e-4006-be61-21a59428fcbf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AutomationExecutionNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8369a895-7504-4dcd-bd8f-bd90162afb75",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aec4f698-6504-48cf-a64d-2949fb8db50f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidFilterKey",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8d31ccd8-ce05-4d59-a77a-c8cbc6922aa5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidFilterValue",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "425b4deb-fae2-4c9c-bed8-8a9cd0af15e2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f603088d-9277-4fa4-881c-f430ad8a2d65",
      "documentation": "Lists all patches eligible to be included in a patch baseline.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeAvailablePatches",
      "responses": [
        {
          "uuid": "b337500f-6e17-45f1-a42e-6d0f62a4e8c2",
          "body": "{\n  \"Patches\": [\n    {\n      \"Id\": \"\",\n      \"ReleaseDate\": \"{{faker 'date.recent' 365}}\",\n      \"Title\": \"\",\n      \"Description\": \"\",\n      \"ContentUrl\": \"\",\n      \"Vendor\": \"\",\n      \"ProductFamily\": \"\",\n      \"Product\": \"\",\n      \"Classification\": \"\",\n      \"MsrcSeverity\": \"\",\n      \"KbNumber\": \"\",\n      \"MsrcNumber\": \"\",\n      \"Language\": \"\",\n      \"AdvisoryIds\": [\n        \"\"\n      ],\n      \"BugzillaIds\": [\n        \"\"\n      ],\n      \"CVEIds\": [\n        \"\"\n      ],\n      \"Name\": \"\",\n      \"Epoch\": {{faker 'random.number'}},\n      \"Version\": \"\",\n      \"Release\": \"\",\n      \"Arch\": \"\",\n      \"Severity\": \"\",\n      \"Repository\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "113b9d68-b923-4fbb-8f02-30f39556f314",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "79d30bec-ea62-42d7-b3b9-50be473a153d",
      "documentation": "Describes the specified Amazon Web Services Systems Manager document (SSM document).",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeDocument",
      "responses": [
        {
          "uuid": "4beb919c-73a9-47c0-a197-c1605c07de67",
          "body": "{\n  \"Document\": {\n    \"Sha1\": \"\",\n    \"Hash\": \"\",\n    \"HashType\": \"\",\n    \"Name\": \"\",\n    \"DisplayName\": \"\",\n    \"VersionName\": \"\",\n    \"Owner\": \"\",\n    \"CreatedDate\": \"{{faker 'date.recent' 365}}\",\n    \"Status\": \"\",\n    \"StatusInformation\": \"\",\n    \"DocumentVersion\": \"\",\n    \"Description\": \"\",\n    \"Parameters\": [\n      {\n        \"Name\": \"\",\n        \"Type\": \"\",\n        \"Description\": \"\",\n        \"DefaultValue\": \"\"\n      }\n    ],\n    \"PlatformTypes\": [\n      \"{{oneOf (array 'Windows' 'Linux')}}\"\n    ],\n    \"DocumentType\": \"\",\n    \"SchemaVersion\": \"\",\n    \"LatestVersion\": \"\",\n    \"DefaultVersion\": \"\",\n    \"DocumentFormat\": \"\",\n    \"TargetType\": \"\",\n    \"Tags\": [\n      {\n        \"Key\": \"\",\n        \"Value\": \"\"\n      }\n    ],\n    \"AttachmentsInformation\": [\n      {\n        \"Name\": \"\"\n      }\n    ],\n    \"Requires\": [\n      {\n        \"Name\": \"\",\n        \"Version\": \"\"\n      }\n    ],\n    \"Author\": \"\",\n    \"ReviewInformation\": [\n      {\n        \"ReviewedTime\": \"{{faker 'date.recent' 365}}\",\n        \"Status\": \"\",\n        \"Reviewer\": \"\"\n      }\n    ],\n    \"ApprovedVersion\": \"\",\n    \"PendingReviewVersion\": \"\",\n    \"ReviewStatus\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a4aaca3a-0e08-4c50-a1d7-70ec1e200b5b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c2db2103-4e93-4694-a61f-c7fcd2e1915a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDocument",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "731075fb-a269-44b4-8e34-7e12af6be1a7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDocumentVersion",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "33cc869d-ae44-4a68-b601-751d2de16151",
      "documentation": "Describes the permissions for a Amazon Web Services Systems Manager document (SSM document). If you created the document, you are the owner. If a document is shared, it can either be shared privately (by specifying a user's Amazon Web Services account ID) or publicly (<i>All</i>). ",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeDocumentPermission",
      "responses": [
        {
          "uuid": "5a8c8b2b-8d71-4225-a32b-aa489a723146",
          "body": "{\n  \"AccountIds\": [\n    \"\"\n  ],\n  \"AccountSharingInfoList\": [\n    {\n      \"AccountId\": \"\",\n      \"SharedDocumentVersion\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "29105c41-2425-46e3-8a33-17d642145ee7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "acb3a2c7-ca8f-4fce-86fd-d431b7cddaf2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDocument",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9c1a3603-a971-4f0c-805c-123adc3ec576",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "21a1906e-8f47-4a9d-a200-08ad1cde9b90",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidPermissionType",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bf170b27-b141-4503-a8f5-b41b1b0ee3d2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidDocumentOperation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "80a87fa3-5d58-4316-bff8-c6bc16e37e9e",
      "documentation": "All associations for the instance(s).",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeEffectiveInstanceAssociations",
      "responses": [
        {
          "uuid": "8f261f2b-ed32-424b-a27b-4207fbe0aa30",
          "body": "{\n  \"Associations\": [\n    {\n      \"AssociationId\": \"\",\n      \"InstanceId\": \"\",\n      \"Content\": \"\",\n      \"AssociationVersion\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5e3e1a7a-e358-44f8-8369-0cd6879d205e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5c403076-a19b-42aa-9ae6-3b7bed4da288",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInstanceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d13a52a8-2590-4b6f-b739-72aec014a466",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8bb98cba-0e00-4b31-bd89-078427a62c41",
      "documentation": "Retrieves the current effective patches (the patch and the approval state) for the specified patch baseline. Applies to patch baselines for Windows only.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeEffectivePatchesForPatchBaseline",
      "responses": [
        {
          "uuid": "ac4e5f76-8608-4dd2-846d-b4c1e3e7af4a",
          "body": "{\n  \"EffectivePatches\": [\n    {\n      \"Patch\": {\n        \"Id\": \"\",\n        \"ReleaseDate\": \"{{faker 'date.recent' 365}}\",\n        \"Title\": \"\",\n        \"Description\": \"\",\n        \"ContentUrl\": \"\",\n        \"Vendor\": \"\",\n        \"ProductFamily\": \"\",\n        \"Product\": \"\",\n        \"Classification\": \"\",\n        \"MsrcSeverity\": \"\",\n        \"KbNumber\": \"\",\n        \"MsrcNumber\": \"\",\n        \"Language\": \"\",\n        \"AdvisoryIds\": [\n          \"\"\n        ],\n        \"BugzillaIds\": [\n          \"\"\n        ],\n        \"CVEIds\": [\n          \"\"\n        ],\n        \"Name\": \"\",\n        \"Epoch\": {{faker 'random.number'}},\n        \"Version\": \"\",\n        \"Release\": \"\",\n        \"Arch\": \"\",\n        \"Severity\": \"\",\n        \"Repository\": \"\"\n      },\n      \"PatchStatus\": {\n        \"DeploymentStatus\": \"\",\n        \"ComplianceLevel\": \"\",\n        \"ApprovalDate\": \"{{faker 'date.recent' 365}}\"\n      }\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a5e5b475-9466-4615-b8c5-c8b8648fb146",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d4853ca0-ad99-48d2-a631-c387c3244965",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7cae7ee8-fdf6-4ad2-8d1f-7dc2870a647b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "UnsupportedOperatingSystem",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a25df85f-af8d-4539-92ef-5692bd3b9764",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0c64fc0f-477b-4388-a722-d4e641f2fd65",
      "documentation": "The status of the associations for the instance(s).",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeInstanceAssociationsStatus",
      "responses": [
        {
          "uuid": "6a7add1f-b7ac-40fd-8f0e-a85ebceaa1c3",
          "body": "{\n  \"InstanceAssociationStatusInfos\": [\n    {\n      \"AssociationId\": \"\",\n      \"Name\": \"\",\n      \"DocumentVersion\": \"\",\n      \"AssociationVersion\": \"\",\n      \"InstanceId\": \"\",\n      \"ExecutionDate\": \"{{faker 'date.recent' 365}}\",\n      \"Status\": \"\",\n      \"DetailedStatus\": \"\",\n      \"ExecutionSummary\": \"\",\n      \"ErrorCode\": \"\",\n      \"OutputUrl\": {\n        \"S3OutputUrl\": {\n          \"OutputUrl\": \"\"\n        }\n      },\n      \"AssociationName\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fc33b719-973a-47cc-b303-c31d6a44885c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f76c8101-672c-4827-8446-4f4d29e45df4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInstanceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "36ad36cd-7dfa-4e72-9768-a32b94444991",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e8c568ce-90d2-4a90-9e0d-9650f5d7d897",
      "documentation": "<p>Describes one or more of your instances, including information about the operating system platform, the version of SSM Agent installed on the instance, instance status, and so on.</p> <p>If you specify one or more instance IDs, it returns information for those instances. If you don't specify instance IDs, it returns information for all your instances. If you specify an instance ID that isn't valid or an instance that you don't own, you receive an error.</p> <note> <p>The <code>IamRole</code> field for this API operation is the Identity and Access Management (IAM) role assigned to on-premises instances. This call doesn't return the IAM role for EC2 instances.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeInstanceInformation",
      "responses": [
        {
          "uuid": "76c4c9ba-293c-40e8-a9bf-be92de0a2a11",
          "body": "{\n  \"InstanceInformationList\": [\n    {\n      \"InstanceId\": \"\",\n      \"PingStatus\": \"\",\n      \"LastPingDateTime\": \"{{faker 'date.recent' 365}}\",\n      \"AgentVersion\": \"\",\n      \"IsLatestVersion\": {{faker 'random.boolean'}},\n      \"PlatformType\": \"\",\n      \"PlatformName\": \"\",\n      \"PlatformVersion\": \"\",\n      \"ActivationId\": \"\",\n      \"IamRole\": \"\",\n      \"RegistrationDate\": \"{{faker 'date.recent' 365}}\",\n      \"ResourceType\": \"\",\n      \"Name\": \"\",\n      \"IPAddress\": \"\",\n      \"ComputerName\": \"\",\n      \"AssociationStatus\": \"\",\n      \"LastAssociationExecutionDate\": \"{{faker 'date.recent' 365}}\",\n      \"LastSuccessfulAssociationExecutionDate\": \"{{faker 'date.recent' 365}}\",\n      \"AssociationOverview\": {\n        \"DetailedStatus\": \"\",\n        \"InstanceAssociationStatusAggregatedCount\": {}\n      }\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "af7225dd-e9d3-4ca8-91a5-5ed88982623f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0e5d663e-9ebc-49d8-b5e4-4cb0ecf1c25c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInstanceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "417f4109-0ef3-42c4-9fdf-8d0309adc207",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cd73af73-cc0f-4aa9-a470-b453ceccfe9f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidInstanceInformationFilterValue",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2c7d6864-e27e-46c2-98cd-262c8f811cf4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidFilterKey",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8cace3ae-7f2d-4527-9efb-c001f388ddc0",
      "documentation": "Retrieves the high-level patch state of one or more instances.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeInstancePatchStates",
      "responses": [
        {
          "uuid": "aa10a992-19b0-451a-8253-26ebd9fb6ed9",
          "body": "{\n  \"InstancePatchStates\": [\n    {\n      \"InstanceId\": \"\",\n      \"PatchGroup\": \"\",\n      \"BaselineId\": \"\",\n      \"SnapshotId\": \"\",\n      \"InstallOverrideList\": \"\",\n      \"OwnerInformation\": \"\",\n      \"InstalledCount\": {{faker 'random.number'}},\n      \"InstalledOtherCount\": {{faker 'random.number'}},\n      \"InstalledPendingRebootCount\": {{faker 'random.number'}},\n      \"InstalledRejectedCount\": {{faker 'random.number'}},\n      \"MissingCount\": {{faker 'random.number'}},\n      \"FailedCount\": {{faker 'random.number'}},\n      \"UnreportedNotApplicableCount\": {{faker 'random.number'}},\n      \"NotApplicableCount\": {{faker 'random.number'}},\n      \"OperationStartTime\": \"{{faker 'date.recent' 365}}\",\n      \"OperationEndTime\": \"{{faker 'date.recent' 365}}\",\n      \"Operation\": \"\",\n      \"LastNoRebootInstallOperationTime\": \"{{faker 'date.recent' 365}}\",\n      \"RebootOption\": \"\",\n      \"CriticalNonCompliantCount\": {{faker 'random.number'}},\n      \"SecurityNonCompliantCount\": {{faker 'random.number'}},\n      \"OtherNonCompliantCount\": {{faker 'random.number'}}\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4eaa10b9-40d8-43a7-ba3d-af225e6ecbdc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "820b4975-64c5-4a22-beb0-055b367bdd19",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2ca9657b-37f1-499b-a4e6-9b6936851d84",
      "documentation": "Retrieves the high-level patch state for the instances in the specified patch group.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeInstancePatchStatesForPatchGroup",
      "responses": [
        {
          "uuid": "5985d1e3-2860-47f8-bebd-d57e0a6d52b4",
          "body": "{\n  \"InstancePatchStates\": [\n    {\n      \"InstanceId\": \"\",\n      \"PatchGroup\": \"\",\n      \"BaselineId\": \"\",\n      \"SnapshotId\": \"\",\n      \"InstallOverrideList\": \"\",\n      \"OwnerInformation\": \"\",\n      \"InstalledCount\": {{faker 'random.number'}},\n      \"InstalledOtherCount\": {{faker 'random.number'}},\n      \"InstalledPendingRebootCount\": {{faker 'random.number'}},\n      \"InstalledRejectedCount\": {{faker 'random.number'}},\n      \"MissingCount\": {{faker 'random.number'}},\n      \"FailedCount\": {{faker 'random.number'}},\n      \"UnreportedNotApplicableCount\": {{faker 'random.number'}},\n      \"NotApplicableCount\": {{faker 'random.number'}},\n      \"OperationStartTime\": \"{{faker 'date.recent' 365}}\",\n      \"OperationEndTime\": \"{{faker 'date.recent' 365}}\",\n      \"Operation\": \"\",\n      \"LastNoRebootInstallOperationTime\": \"{{faker 'date.recent' 365}}\",\n      \"RebootOption\": \"\",\n      \"CriticalNonCompliantCount\": {{faker 'random.number'}},\n      \"SecurityNonCompliantCount\": {{faker 'random.number'}},\n      \"OtherNonCompliantCount\": {{faker 'random.number'}}\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "89c4a01e-d3c6-4ee9-9478-7eff68b472a0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "980cd3fe-a55c-4acc-8404-209cef572710",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidFilter",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "93e5dc68-2b1b-40d6-afd5-4071ff71f65e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4efd0fa4-197e-4a2b-885f-09404c9bb457",
      "documentation": "Retrieves information about the patches on the specified instance and their state relative to the patch baseline being used for the instance.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeInstancePatches",
      "responses": [
        {
          "uuid": "2989bba8-d822-4079-bbe6-758005054920",
          "body": "{\n  \"Patches\": [\n    {\n      \"Title\": \"\",\n      \"KBId\": \"\",\n      \"Classification\": \"\",\n      \"Severity\": \"\",\n      \"State\": \"\",\n      \"InstalledTime\": \"{{faker 'date.recent' 365}}\",\n      \"CVEIds\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "313739c4-0b4d-47de-b8d7-af299cff5ffe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "14cb7bb0-8c85-4aeb-b6fe-e4588109139e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInstanceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f5e00f0f-575f-4841-aa93-0615b3cd73a1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidFilter",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9609a8f7-219c-4b13-8edb-e6154ccfdebc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0b79504a-161b-4f96-a616-5983e2facb98",
      "documentation": "Describes a specific delete inventory operation.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeInventoryDeletions",
      "responses": [
        {
          "uuid": "4b9bd893-10b1-49a5-bd27-c698beb41768",
          "body": "{\n  \"InventoryDeletions\": [\n    {\n      \"DeletionId\": \"\",\n      \"TypeName\": \"\",\n      \"DeletionStartTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastStatus\": \"\",\n      \"LastStatusMessage\": \"\",\n      \"DeletionSummary\": {\n        \"TotalCount\": {{faker 'random.number'}},\n        \"RemainingCount\": {{faker 'random.number'}},\n        \"SummaryItems\": [\n          {\n            \"Version\": \"\",\n            \"Count\": {{faker 'random.number'}},\n            \"RemainingCount\": {{faker 'random.number'}}\n          }\n        ]\n      },\n      \"LastStatusUpdateTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "22e3d202-1351-419f-b63e-6a16a4f8e691",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7bb82576-4c64-4444-bd5f-a7ab3ed13d7d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDeletionIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "030cbf16-d827-4ef1-969b-fe024c5b2fba",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6ac85936-0fb1-47a0-85f4-d7876c76863c",
      "documentation": "Retrieves the individual task executions (one per target) for a particular task run as part of a maintenance window execution.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeMaintenanceWindowExecutionTaskInvocations",
      "responses": [
        {
          "uuid": "a02a3810-2fdc-4e6d-a886-c958901df515",
          "body": "{\n  \"WindowExecutionTaskInvocationIdentities\": [\n    {\n      \"WindowExecutionId\": \"\",\n      \"TaskExecutionId\": \"\",\n      \"InvocationId\": \"\",\n      \"ExecutionId\": \"\",\n      \"TaskType\": \"\",\n      \"Parameters\": \"\",\n      \"Status\": \"\",\n      \"StatusDetails\": \"\",\n      \"StartTime\": \"{{faker 'date.recent' 365}}\",\n      \"EndTime\": \"{{faker 'date.recent' 365}}\",\n      \"OwnerInformation\": \"\",\n      \"WindowTargetId\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0db9f6f8-4cdf-4596-8876-b535651eea35",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bfd84791-deba-4409-a1a9-6c057af60ea6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "64836ad9-646d-49fe-92ff-a4f0adbab18a",
      "documentation": "For a given maintenance window execution, lists the tasks that were run.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeMaintenanceWindowExecutionTasks",
      "responses": [
        {
          "uuid": "3b3dd7f0-58f2-4725-9d2a-cefb5fb257d9",
          "body": "{\n  \"WindowExecutionTaskIdentities\": [\n    {\n      \"WindowExecutionId\": \"\",\n      \"TaskExecutionId\": \"\",\n      \"Status\": \"\",\n      \"StatusDetails\": \"\",\n      \"StartTime\": \"{{faker 'date.recent' 365}}\",\n      \"EndTime\": \"{{faker 'date.recent' 365}}\",\n      \"TaskArn\": \"\",\n      \"TaskType\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dba98857-b8b7-4ec0-ad4d-4aabd236892e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4b81d940-33d2-4648-b785-09795acc0c0e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5748a1f3-7c54-48a2-b3f1-e257248ce0c4",
      "documentation": "Lists the executions of a maintenance window. This includes information about when the maintenance window was scheduled to be active, and information about tasks registered and run with the maintenance window.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeMaintenanceWindowExecutions",
      "responses": [
        {
          "uuid": "b36a9099-3649-4d46-8910-1699fd9d0206",
          "body": "{\n  \"WindowExecutions\": [\n    {\n      \"WindowId\": \"\",\n      \"WindowExecutionId\": \"\",\n      \"Status\": \"\",\n      \"StatusDetails\": \"\",\n      \"StartTime\": \"{{faker 'date.recent' 365}}\",\n      \"EndTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0009fb3f-764c-491d-802b-e72026cfb5fa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bab785cf-d7df-4289-b8fd-14cb3ecb1213",
      "documentation": "Retrieves information about upcoming executions of a maintenance window.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeMaintenanceWindowSchedule",
      "responses": [
        {
          "uuid": "66f1a795-6cdd-41e0-89cb-377cca19005c",
          "body": "{\n  \"ScheduledWindowExecutions\": [\n    {\n      \"WindowId\": \"\",\n      \"Name\": \"\",\n      \"ExecutionTime\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "226d8cf7-3e0a-4c25-8e18-ddffbb506669",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c8839d35-efe8-45ef-8450-554a61c4e2a2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f6f6334f-c5ec-41b9-a89e-4ddde16b5fef",
      "documentation": "Lists the targets registered with the maintenance window.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeMaintenanceWindowTargets",
      "responses": [
        {
          "uuid": "721622bf-dbc1-4935-ac37-059a95f38e9f",
          "body": "{\n  \"Targets\": [\n    {\n      \"WindowId\": \"\",\n      \"WindowTargetId\": \"\",\n      \"ResourceType\": \"\",\n      \"Targets\": [\n        {\n          \"Key\": \"\",\n          \"Values\": [\n            \"\"\n          ]\n        }\n      ],\n      \"OwnerInformation\": \"\",\n      \"Name\": \"\",\n      \"Description\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "623c5987-7333-4577-9b10-2bff7ba37fc5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "68c66375-5755-4d0b-b04c-cb0dc7ef279b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "97c03c64-2836-4475-ad71-6716764bba7b",
      "documentation": "<p>Lists the tasks in a maintenance window.</p> <note> <p>For maintenance window tasks without a specified target, you can't supply values for <code>--max-errors</code> and <code>--max-concurrency</code>. Instead, the system inserts a placeholder value of <code>1</code>, which may be reported in the response to this command. These values don't affect the running of your task and can be ignored.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeMaintenanceWindowTasks",
      "responses": [
        {
          "uuid": "82031d55-07f2-4735-8040-ddde5a3f6c49",
          "body": "{\n  \"Tasks\": [\n    {\n      \"WindowId\": \"\",\n      \"WindowTaskId\": \"\",\n      \"TaskArn\": \"\",\n      \"Type\": \"\",\n      \"Targets\": [\n        {\n          \"Key\": \"\",\n          \"Values\": [\n            \"\"\n          ]\n        }\n      ],\n      \"TaskParameters\": {},\n      \"Priority\": {{faker 'random.number'}},\n      \"LoggingInfo\": {\n        \"S3BucketName\": \"\",\n        \"S3KeyPrefix\": \"\",\n        \"S3Region\": \"\"\n      },\n      \"ServiceRoleArn\": \"\",\n      \"MaxConcurrency\": \"\",\n      \"MaxErrors\": \"\",\n      \"Name\": \"\",\n      \"Description\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5c85423d-4ef8-42b0-920b-68123de71125",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8fda54c3-4d4e-493d-9f03-73752e53e370",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b1be909e-d7ca-4c35-8eb9-4cf733326b98",
      "documentation": "Retrieves the maintenance windows in an Amazon Web Services account.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeMaintenanceWindows",
      "responses": [
        {
          "uuid": "169e3dc2-b0af-4c06-b33a-bd9e6b240d2b",
          "body": "{\n  \"WindowIdentities\": [\n    {\n      \"WindowId\": \"\",\n      \"Name\": \"\",\n      \"Description\": \"\",\n      \"Enabled\": {{faker 'random.boolean'}},\n      \"Duration\": {{faker 'random.number'}},\n      \"Cutoff\": {{faker 'random.number'}},\n      \"Schedule\": \"\",\n      \"ScheduleTimezone\": \"\",\n      \"ScheduleOffset\": {{faker 'random.number'}},\n      \"EndDate\": \"\",\n      \"StartDate\": \"\",\n      \"NextExecutionTime\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "776d7c44-8f0b-4e76-99df-241f8a630dfb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "492190f1-9ec4-498a-94d1-19c7088474ba",
      "documentation": "Retrieves information about the maintenance window targets or tasks that an instance is associated with.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeMaintenanceWindowsForTarget",
      "responses": [
        {
          "uuid": "505739a8-7ef9-41c6-af86-27c2007d5294",
          "body": "{\n  \"WindowIdentities\": [\n    {\n      \"WindowId\": \"\",\n      \"Name\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "66c1a57e-1388-49d8-92dd-0849b031874d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "71dc9d1b-1859-450f-bbaf-1db6189cd85b",
      "documentation": "<p>Query a set of OpsItems. You must have permission in Identity and Access Management (IAM) to query a list of OpsItems. For more information, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter-getting-started.html\">Getting started with OpsCenter</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p> <p>Operations engineers and IT professionals use Amazon Web Services Systems Manager OpsCenter to view, investigate, and remediate operational issues impacting the performance and health of their Amazon Web Services resources. For more information, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter.html\">OpsCenter</a> in the <i>Amazon Web Services Systems Manager User Guide</i>. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeOpsItems",
      "responses": [
        {
          "uuid": "4134be58-7f25-458f-b9d7-a4d2202e56cf",
          "body": "{\n  \"NextToken\": \"\",\n  \"OpsItemSummaries\": [\n    {\n      \"CreatedBy\": \"\",\n      \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastModifiedBy\": \"\",\n      \"LastModifiedTime\": \"{{faker 'date.recent' 365}}\",\n      \"Priority\": {{faker 'random.number'}},\n      \"Source\": \"\",\n      \"Status\": \"\",\n      \"OpsItemId\": \"\",\n      \"Title\": \"\",\n      \"OperationalData\": {},\n      \"Category\": \"\",\n      \"Severity\": \"\",\n      \"OpsItemType\": \"\",\n      \"ActualStartTime\": \"{{faker 'date.recent' 365}}\",\n      \"ActualEndTime\": \"{{faker 'date.recent' 365}}\",\n      \"PlannedStartTime\": \"{{faker 'date.recent' 365}}\",\n      \"PlannedEndTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "462b09a9-9079-40cd-9041-201d35c2ac94",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9e0f64ff-418b-4eee-84ba-4269e9436b9a",
      "documentation": "<p>Get information about a parameter.</p> <p>Request results are returned on a best-effort basis. If you specify <code>MaxResults</code> in the request, the response includes information up to the limit specified. The number of items returned, however, can be between zero and the value of <code>MaxResults</code>. If the service reaches an internal limit while processing the results, it stops the operation and returns the matching values up to that point and a <code>NextToken</code>. You can specify the <code>NextToken</code> in a subsequent call to get the next set of results.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeParameters",
      "responses": [
        {
          "uuid": "2b5cbff9-0066-4e23-a052-5854da5a5d43",
          "body": "{\n  \"Parameters\": [\n    {\n      \"Name\": \"\",\n      \"Type\": \"\",\n      \"KeyId\": \"\",\n      \"LastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n      \"LastModifiedUser\": \"\",\n      \"Description\": \"\",\n      \"AllowedPattern\": \"\",\n      \"Version\": {{faker 'random.number'}},\n      \"Tier\": \"\",\n      \"Policies\": [\n        {\n          \"PolicyText\": \"\",\n          \"PolicyType\": \"\",\n          \"PolicyStatus\": \"\"\n        }\n      ],\n      \"DataType\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2ebff33a-a33e-4f20-823e-d712166f7bb8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "77fb7138-524f-4e7c-af78-6cc4d8103f55",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidFilterKey",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "16423e7a-7714-40ed-99a4-bc6f638034a6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidFilterOption",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2e8a80a1-23a9-4ff5-b73c-eda5771860d9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidFilterValue",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ca4b4efa-c9d5-4ec9-93db-8bc0f12a38d9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d3c42893-6ee6-40ac-bb50-aed0436363fc",
      "documentation": "Lists the patch baselines in your Amazon Web Services account.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribePatchBaselines",
      "responses": [
        {
          "uuid": "4d442bd1-2429-48c4-ac93-ffa9acc07cf1",
          "body": "{\n  \"BaselineIdentities\": [\n    {\n      \"BaselineId\": \"\",\n      \"BaselineName\": \"\",\n      \"OperatingSystem\": \"\",\n      \"BaselineDescription\": \"\",\n      \"DefaultBaseline\": {{faker 'random.boolean'}}\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9258d502-e9c0-4429-bc8b-884a56b7608e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "28bf77c3-50f1-4d2c-b41f-bef3934bd771",
      "documentation": "Returns high-level aggregated patch compliance state information for a patch group.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribePatchGroupState",
      "responses": [
        {
          "uuid": "6c84aa89-e300-442d-acbc-8812834f0577",
          "body": "{\n  \"Instances\": {{faker 'random.number'}},\n  \"InstancesWithInstalledPatches\": {{faker 'random.number'}},\n  \"InstancesWithInstalledOtherPatches\": {{faker 'random.number'}},\n  \"InstancesWithInstalledPendingRebootPatches\": {{faker 'random.number'}},\n  \"InstancesWithInstalledRejectedPatches\": {{faker 'random.number'}},\n  \"InstancesWithMissingPatches\": {{faker 'random.number'}},\n  \"InstancesWithFailedPatches\": {{faker 'random.number'}},\n  \"InstancesWithNotApplicablePatches\": {{faker 'random.number'}},\n  \"InstancesWithUnreportedNotApplicablePatches\": {{faker 'random.number'}},\n  \"InstancesWithCriticalNonCompliantPatches\": {{faker 'random.number'}},\n  \"InstancesWithSecurityNonCompliantPatches\": {{faker 'random.number'}},\n  \"InstancesWithOtherNonCompliantPatches\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "467a3d24-c54b-4fd0-8cb8-bfc9af666115",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e46925c6-7046-46ac-b69b-320d9f211235",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6ca6ffae-f7c4-4947-9b40-ef45414cfde6",
      "documentation": "Lists all patch groups that have been registered with patch baselines.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribePatchGroups",
      "responses": [
        {
          "uuid": "1fbb48f0-72bb-485f-88c6-9edf6d2a8b9d",
          "body": "{\n  \"Mappings\": [\n    {\n      \"PatchGroup\": \"\",\n      \"BaselineIdentity\": {\n        \"BaselineId\": \"\",\n        \"BaselineName\": \"\",\n        \"OperatingSystem\": \"\",\n        \"BaselineDescription\": \"\",\n        \"DefaultBaseline\": {{faker 'random.boolean'}}\n      }\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "04f85347-21e1-4c77-87a3-05acdad22d0e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "40a3cadc-9113-4885-80f9-7908297f73a4",
      "documentation": "<p>Lists the properties of available patches organized by product, product family, classification, severity, and other properties of available patches. You can use the reported properties in the filters you specify in requests for operations such as <a>CreatePatchBaseline</a>, <a>UpdatePatchBaseline</a>, <a>DescribeAvailablePatches</a>, and <a>DescribePatchBaselines</a>.</p> <p>The following section lists the properties that can be used in filters for each major operating system type:</p> <dl> <dt>AMAZON_LINUX</dt> <dd> <p>Valid properties: <code>PRODUCT</code> | <code>CLASSIFICATION</code> | <code>SEVERITY</code> </p> </dd> <dt>AMAZON_LINUX_2</dt> <dd> <p>Valid properties: <code>PRODUCT</code> | <code>CLASSIFICATION</code> | <code>SEVERITY</code> </p> </dd> <dt>CENTOS</dt> <dd> <p>Valid properties: <code>PRODUCT</code> | <code>CLASSIFICATION</code> | <code>SEVERITY</code> </p> </dd> <dt>DEBIAN</dt> <dd> <p>Valid properties: <code>PRODUCT</code> | <code>PRIORITY</code> </p> </dd> <dt>MACOS</dt> <dd> <p>Valid properties: <code>PRODUCT</code> | <code>CLASSIFICATION</code> </p> </dd> <dt>ORACLE_LINUX</dt> <dd> <p>Valid properties: <code>PRODUCT</code> | <code>CLASSIFICATION</code> | <code>SEVERITY</code> </p> </dd> <dt>REDHAT_ENTERPRISE_LINUX</dt> <dd> <p>Valid properties: <code>PRODUCT</code> | <code>CLASSIFICATION</code> | <code>SEVERITY</code> </p> </dd> <dt>SUSE</dt> <dd> <p>Valid properties: <code>PRODUCT</code> | <code>CLASSIFICATION</code> | <code>SEVERITY</code> </p> </dd> <dt>UBUNTU</dt> <dd> <p>Valid properties: <code>PRODUCT</code> | <code>PRIORITY</code> </p> </dd> <dt>WINDOWS</dt> <dd> <p>Valid properties: <code>PRODUCT</code> | <code>PRODUCT_FAMILY</code> | <code>CLASSIFICATION</code> | <code>MSRC_SEVERITY</code> </p> </dd> </dl>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribePatchProperties",
      "responses": [
        {
          "uuid": "1c17b628-b3d6-4325-9f3c-bc0586860762",
          "body": "{\n  \"Properties\": [\n    {}\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "33dfda5f-f038-4784-950f-2c364e62866b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7cb2118f-f637-48fd-af94-24890296f828",
      "documentation": "Retrieves a list of all active sessions (both connected and disconnected) or terminated sessions from the past 30 days.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeSessions",
      "responses": [
        {
          "uuid": "62a21108-77b2-4f4f-8425-8bb581d7ff59",
          "body": "{\n  \"Sessions\": [\n    {\n      \"SessionId\": \"\",\n      \"Target\": \"\",\n      \"Status\": \"\",\n      \"StartDate\": \"{{faker 'date.recent' 365}}\",\n      \"EndDate\": \"{{faker 'date.recent' 365}}\",\n      \"DocumentName\": \"\",\n      \"Owner\": \"\",\n      \"Details\": \"\",\n      \"OutputUrl\": {\n        \"S3OutputUrl\": \"\",\n        \"CloudWatchOutputUrl\": \"\"\n      }\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fb438fcd-998a-46d3-9fd0-fdfad98f076a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "752ffce8-bc9f-4c7a-9317-ab3bc71660d6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidFilterKey",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "17b90ba3-ddd2-4a4f-b79a-5f1c359613ab",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "65d59734-09b2-47b7-b179-f807fe31b24c",
      "documentation": "Deletes the association between an OpsItem and a related resource. For example, this API operation can delete an Incident Manager incident from an OpsItem. Incident Manager is a capability of Amazon Web Services Systems Manager.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DisassociateOpsItemRelatedItem",
      "responses": [
        {
          "uuid": "f8ef5623-598c-4433-bcdb-52baa3af0c36",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "94ae45c7-b06f-4fd0-a319-0876e802c2b3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6e8564bc-53ed-431e-8230-37557157f31b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OpsItemRelatedItemAssociationNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "836d5f27-fabd-4648-8dc0-52438a20807c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OpsItemNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "33caef15-8027-464e-b3c5-1279fe5bfb4d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OpsItemInvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5348dfb3-72ce-45eb-be9d-75a104840ab1",
      "documentation": "Get detailed information about a particular Automation execution.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetAutomationExecution",
      "responses": [
        {
          "uuid": "8b8d98f3-71b5-4bcf-8e67-ee8cd87c4b3c",
          "body": "{\n  \"AutomationExecution\": {\n    \"AutomationExecutionId\": \"\",\n    \"DocumentName\": \"\",\n    \"DocumentVersion\": \"\",\n    \"ExecutionStartTime\": \"{{faker 'date.recent' 365}}\",\n    \"ExecutionEndTime\": \"{{faker 'date.recent' 365}}\",\n    \"AutomationExecutionStatus\": \"\",\n    \"StepExecutions\": [\n      {\n        \"StepName\": \"\",\n        \"Action\": \"\",\n        \"TimeoutSeconds\": {{faker 'random.number'}},\n        \"OnFailure\": \"\",\n        \"MaxAttempts\": {{faker 'random.number'}},\n        \"ExecutionStartTime\": \"{{faker 'date.recent' 365}}\",\n        \"ExecutionEndTime\": \"{{faker 'date.recent' 365}}\",\n        \"StepStatus\": \"\",\n        \"ResponseCode\": \"\",\n        \"Inputs\": {},\n        \"Outputs\": {},\n        \"Response\": \"\",\n        \"FailureMessage\": \"\",\n        \"FailureDetails\": {\n          \"FailureStage\": \"\",\n          \"FailureType\": \"\",\n          \"Details\": {}\n        },\n        \"StepExecutionId\": \"\",\n        \"OverriddenParameters\": {},\n        \"IsEnd\": {{faker 'random.boolean'}},\n        \"NextStep\": \"\",\n        \"IsCritical\": {{faker 'random.boolean'}},\n        \"ValidNextSteps\": [\n          \"\"\n        ],\n        \"Targets\": [\n          {\n            \"Key\": \"\",\n            \"Values\": [\n              \"\"\n            ]\n          }\n        ],\n        \"TargetLocation\": {\n          \"Accounts\": [\n            \"\"\n          ],\n          \"Regions\": [\n            \"\"\n          ],\n          \"TargetLocationMaxConcurrency\": \"\",\n          \"TargetLocationMaxErrors\": \"\",\n          \"ExecutionRoleName\": \"\"\n        }\n      }\n    ],\n    \"StepExecutionsTruncated\": {{faker 'random.boolean'}},\n    \"Parameters\": {},\n    \"Outputs\": {},\n    \"FailureMessage\": \"\",\n    \"Mode\": \"\",\n    \"ParentAutomationExecutionId\": \"\",\n    \"ExecutedBy\": \"\",\n    \"CurrentStepName\": \"\",\n    \"CurrentAction\": \"\",\n    \"TargetParameterName\": \"\",\n    \"Targets\": [\n      {\n        \"Key\": \"\",\n        \"Values\": [\n          \"\"\n        ]\n      }\n    ],\n    \"TargetMaps\": [\n      {}\n    ],\n    \"ResolvedTargets\": {\n      \"ParameterValues\": [\n        \"\"\n      ],\n      \"Truncated\": {{faker 'random.boolean'}}\n    },\n    \"MaxConcurrency\": \"\",\n    \"MaxErrors\": \"\",\n    \"Target\": \"\",\n    \"TargetLocations\": [\n      {\n        \"Accounts\": [\n          \"\"\n        ],\n        \"Regions\": [\n          \"\"\n        ],\n        \"TargetLocationMaxConcurrency\": \"\",\n        \"TargetLocationMaxErrors\": \"\",\n        \"ExecutionRoleName\": \"\"\n      }\n    ],\n    \"ProgressCounters\": {\n      \"TotalSteps\": {{faker 'random.number'}},\n      \"SuccessSteps\": {{faker 'random.number'}},\n      \"FailedSteps\": {{faker 'random.number'}},\n      \"CancelledSteps\": {{faker 'random.number'}},\n      \"TimedOutSteps\": {{faker 'random.number'}}\n    },\n    \"AutomationSubtype\": \"\",\n    \"ScheduledTime\": \"{{faker 'date.recent' 365}}\",\n    \"Runbooks\": [\n      {\n        \"DocumentName\": \"\",\n        \"DocumentVersion\": \"\",\n        \"Parameters\": {},\n        \"TargetParameterName\": \"\",\n        \"Targets\": [\n          {\n            \"Key\": \"\",\n            \"Values\": [\n              \"\"\n            ]\n          }\n        ],\n        \"MaxConcurrency\": \"\",\n        \"MaxErrors\": \"\",\n        \"TargetLocations\": [\n          {\n            \"Accounts\": [\n              \"\"\n            ],\n            \"Regions\": [\n              \"\"\n            ],\n            \"TargetLocationMaxConcurrency\": \"\",\n            \"TargetLocationMaxErrors\": \"\",\n            \"ExecutionRoleName\": \"\"\n          }\n        ]\n      }\n    ],\n    \"OpsItemId\": \"\",\n    \"AssociationId\": \"\",\n    \"ChangeRequestName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7404053f-31be-4b50-b1ca-831deec1b995",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AutomationExecutionNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e1872b7d-e220-4b8a-ac83-a7191892d084",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "861769af-3491-4867-8e35-c72defca1ec6",
      "documentation": "<p>Gets the state of a Amazon Web Services Systems Manager change calendar at the current time or a specified time. If you specify a time, <code>GetCalendarState</code> returns the state of the calendar at that specific time, and returns the next time that the change calendar state will transition. If you don't specify a time, <code>GetCalendarState</code> uses the current time. Change Calendar entries have two possible states: <code>OPEN</code> or <code>CLOSED</code>.</p> <p>If you specify more than one calendar in a request, the command returns the status of <code>OPEN</code> only if all calendars in the request are open. If one or more calendars in the request are closed, the status returned is <code>CLOSED</code>.</p> <p>For more information about Change Calendar, a capability of Amazon Web Services Systems Manager, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-change-calendar.html\">Amazon Web Services Systems Manager Change Calendar</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetCalendarState",
      "responses": [
        {
          "uuid": "d1dc7b4d-193f-4698-af23-c5bce936b276",
          "body": "{\n  \"State\": \"\",\n  \"AtTime\": \"\",\n  \"NextTransitionTime\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "88be0d3a-4922-452e-a301-5781eb4b7393",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e0306407-d6dd-4836-9fc9-53a61955fc76",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDocument",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "475a9d5c-2804-43ac-8b3f-4410f1413eae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDocumentType",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3424e162-7ecb-4155-bdb2-bd1affc9f8f6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "UnsupportedCalendarException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c7b51c7a-1df8-4fdc-8ae4-0a9e2ccef6d6",
      "documentation": "<p>Returns detailed information about command execution for an invocation or plugin.</p> <p> <code>GetCommandInvocation</code> only gives the execution status of a plugin in a document. To get the command execution status on a specific instance, use <a>ListCommandInvocations</a>. To get the command execution status across instances, use <a>ListCommands</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetCommandInvocation",
      "responses": [
        {
          "uuid": "72d9a206-d2f6-42cc-a60f-1b475421f316",
          "body": "{\n  \"CommandId\": \"\",\n  \"InstanceId\": \"\",\n  \"Comment\": \"\",\n  \"DocumentName\": \"\",\n  \"DocumentVersion\": \"\",\n  \"PluginName\": \"\",\n  \"ResponseCode\": {{faker 'random.number'}},\n  \"ExecutionStartDateTime\": \"\",\n  \"ExecutionElapsedTime\": \"\",\n  \"ExecutionEndDateTime\": \"\",\n  \"Status\": \"\",\n  \"StatusDetails\": \"\",\n  \"StandardOutputContent\": \"\",\n  \"StandardOutputUrl\": \"\",\n  \"StandardErrorContent\": \"\",\n  \"StandardErrorUrl\": \"\",\n  \"CloudWatchOutputConfig\": {\n    \"CloudWatchLogGroupName\": \"\",\n    \"CloudWatchOutputEnabled\": {{faker 'random.boolean'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9fb27562-5726-43ef-a546-a2c4a6417925",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dad66d06-5c8f-4259-8a76-1d6a889e7911",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidCommandId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d19bdefa-ec59-4858-b926-d55386542c6f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInstanceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a0dbd3b6-c9d2-46da-8e86-1bc8695cac70",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidPluginName",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "88c26e2e-ffd9-4f95-af45-6db526c07817",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvocationDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "371271f4-d991-4872-b957-8d9ee6d087c6",
      "documentation": "Retrieves the Session Manager connection status for an instance to determine whether it is running and ready to receive Session Manager connections.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetConnectionStatus",
      "responses": [
        {
          "uuid": "4a6bb26e-7295-4f04-95d7-0353afd83b55",
          "body": "{\n  \"Target\": \"\",\n  \"Status\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b717480d-8914-4cab-9b4d-187ee9bc73dd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "815cc206-22e3-45c9-ade4-b22da85fb73f",
      "documentation": "<p>Retrieves the default patch baseline. Amazon Web Services Systems Manager supports creating multiple default patch baselines. For example, you can create a default patch baseline for each operating system.</p> <p>If you don't specify an operating system value, the default patch baseline for Windows is returned.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetDefaultPatchBaseline",
      "responses": [
        {
          "uuid": "51a81ac9-57de-4954-9c09-6df36832b08e",
          "body": "{\n  \"BaselineId\": \"\",\n  \"OperatingSystem\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3ba2314f-4d9b-41c0-b7bb-10a9f897d764",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6f9240af-2bc1-430b-a140-e64b9121bda7",
      "documentation": "<p>Retrieves the current snapshot for the patch baseline the instance uses. This API is primarily used by the <code>AWS-RunPatchBaseline</code> Systems Manager document (SSM document).</p> <note> <p>If you run the command locally, such as with the Command Line Interface (CLI), the system attempts to use your local Amazon Web Services credentials and the operation fails. To avoid this, you can run the command in the Amazon Web Services Systems Manager console. Use Run Command, a capability of Amazon Web Services Systems Manager, with an SSM document that enables you to target an instance with a script or command. For example, run the command using the <code>AWS-RunShellScript</code> document or the <code>AWS-RunPowerShellScript</code> document.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetDeployablePatchSnapshotForInstance",
      "responses": [
        {
          "uuid": "e1b3bbc2-6950-4519-bebb-6c65bcb678ea",
          "body": "{\n  \"InstanceId\": \"\",\n  \"SnapshotId\": \"\",\n  \"SnapshotDownloadUrl\": \"\",\n  \"Product\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1098f340-1147-42b6-ba59-43a3d939c616",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c8905b6a-06de-4248-97cd-da7a4021a6e0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "UnsupportedOperatingSystem",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "93e5f7a8-3607-48bf-abff-14d7f54bf45a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "UnsupportedFeatureRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3db1c892-b913-4ce6-8241-582f17573fec",
      "documentation": "Gets the contents of the specified Amazon Web Services Systems Manager document (SSM document).",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetDocument",
      "responses": [
        {
          "uuid": "39912f17-0eb5-4796-bf4e-49292d72b434",
          "body": "{\n  \"Name\": \"\",\n  \"CreatedDate\": \"{{faker 'date.recent' 365}}\",\n  \"DisplayName\": \"\",\n  \"VersionName\": \"\",\n  \"DocumentVersion\": \"\",\n  \"Status\": \"\",\n  \"StatusInformation\": \"\",\n  \"Content\": \"\",\n  \"DocumentType\": \"\",\n  \"DocumentFormat\": \"\",\n  \"Requires\": [\n    {\n      \"Name\": \"\",\n      \"Version\": \"\"\n    }\n  ],\n  \"AttachmentsContent\": [\n    {\n      \"Name\": \"\",\n      \"Size\": {{faker 'random.number'}},\n      \"Hash\": \"\",\n      \"HashType\": \"\",\n      \"Url\": \"\"\n    }\n  ],\n  \"ReviewStatus\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "14ad2d0c-ce06-4cb1-a93d-f28228d8c87f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "505c99e2-2bdf-4be6-9cae-49647b6b7b6d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDocument",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2531cd8f-62dd-4af7-b99c-f8122eeba531",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDocumentVersion",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "94867221-52d7-4a66-a661-3c50c700c646",
      "documentation": "Query inventory information. This includes instance status, such as <code>Stopped</code> or <code>Terminated</code>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetInventory",
      "responses": [
        {
          "uuid": "d725c93f-b1ba-4d4a-a661-a81876b2c2ab",
          "body": "{\n  \"Entities\": [\n    {\n      \"Id\": \"\",\n      \"Data\": {}\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "72fd4f34-d680-46e1-908f-6892375031e3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "26f90697-33df-4108-aea0-2ab691d7a8a2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidFilter",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6ea95715-80c2-45f2-aed7-ee5398456cbf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInventoryGroupException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eaa8c169-35bb-4397-b8de-a15179ff7eec",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d9603901-eda9-42b1-af7c-9d9ec323817c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidTypeNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9fbc173e-0a40-4419-90bc-d26571cc97dc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidAggregatorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ae47f4f9-550e-4968-ad41-839e6a3bf323",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidResultAttributeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "51480e5a-9436-457e-99fd-506b1cee6408",
      "documentation": "Return a list of inventory type names for the account, or return a list of attribute names for a specific Inventory item type.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetInventorySchema",
      "responses": [
        {
          "uuid": "cd3cca09-27e0-46bb-a073-4542c9372770",
          "body": "{\n  \"Schemas\": [\n    {\n      \"TypeName\": \"\",\n      \"Version\": \"\",\n      \"Attributes\": [\n        {\n          \"Name\": \"\",\n          \"DataType\": \"\"\n        }\n      ],\n      \"DisplayName\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9fe50b41-8382-4ed3-91e7-79f00dc87806",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0d846256-ee75-44d7-997c-ceed9da7649d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidTypeNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4aae55b4-eb49-4c6e-9178-fe6d4e1cbaac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c2714532-b4dd-4df5-9749-28e0cd08605e",
      "documentation": "Retrieves a maintenance window.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetMaintenanceWindow",
      "responses": [
        {
          "uuid": "3864f0b4-f9f1-45df-830e-fa39b690360c",
          "body": "{\n  \"WindowId\": \"\",\n  \"Name\": \"\",\n  \"Description\": \"\",\n  \"StartDate\": \"\",\n  \"EndDate\": \"\",\n  \"Schedule\": \"\",\n  \"ScheduleTimezone\": \"\",\n  \"ScheduleOffset\": {{faker 'random.number'}},\n  \"NextExecutionTime\": \"\",\n  \"Duration\": {{faker 'random.number'}},\n  \"Cutoff\": {{faker 'random.number'}},\n  \"AllowUnassociatedTargets\": {{faker 'random.boolean'}},\n  \"Enabled\": {{faker 'random.boolean'}},\n  \"CreatedDate\": \"{{faker 'date.recent' 365}}\",\n  \"ModifiedDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ac825ff0-ed49-4f01-a204-48a322be87ef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a4844062-757d-45f0-88bb-47a280bdedd7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7eed6cd8-206a-4812-9d2f-91f6d7b9ae86",
      "documentation": "Retrieves details about a specific a maintenance window execution.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetMaintenanceWindowExecution",
      "responses": [
        {
          "uuid": "671b3288-233b-49f7-9915-34fae680bc40",
          "body": "{\n  \"WindowExecutionId\": \"\",\n  \"TaskIds\": [\n    \"\"\n  ],\n  \"Status\": \"\",\n  \"StatusDetails\": \"\",\n  \"StartTime\": \"{{faker 'date.recent' 365}}\",\n  \"EndTime\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7d1893bd-2fc5-4ea4-a730-bb4c6746d4de",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3dc061da-c573-4ba4-8862-69f9a028cf7a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "12be33b2-9437-4a70-a4ea-9919a56bd2ff",
      "documentation": "Retrieves the details about a specific task run as part of a maintenance window execution.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetMaintenanceWindowExecutionTask",
      "responses": [
        {
          "uuid": "6aa6f2dc-942e-48d6-8d42-5eb25d49fb0b",
          "body": "{\n  \"WindowExecutionId\": \"\",\n  \"TaskExecutionId\": \"\",\n  \"TaskArn\": \"\",\n  \"ServiceRole\": \"\",\n  \"Type\": \"\",\n  \"TaskParameters\": [\n    {}\n  ],\n  \"Priority\": {{faker 'random.number'}},\n  \"MaxConcurrency\": \"\",\n  \"MaxErrors\": \"\",\n  \"Status\": \"\",\n  \"StatusDetails\": \"\",\n  \"StartTime\": \"{{faker 'date.recent' 365}}\",\n  \"EndTime\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f600e69b-3ab2-4b47-a130-f408b2c783fb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e41fa956-9c8a-4e1b-9385-91ef8282e210",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f0979762-75da-468f-97ac-7208bd7c281a",
      "documentation": "Retrieves information about a specific task running on a specific target.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetMaintenanceWindowExecutionTaskInvocation",
      "responses": [
        {
          "uuid": "cfa436ce-a6a1-4580-987a-065aeaf9a095",
          "body": "{\n  \"WindowExecutionId\": \"\",\n  \"TaskExecutionId\": \"\",\n  \"InvocationId\": \"\",\n  \"ExecutionId\": \"\",\n  \"TaskType\": \"\",\n  \"Parameters\": \"\",\n  \"Status\": \"\",\n  \"StatusDetails\": \"\",\n  \"StartTime\": \"{{faker 'date.recent' 365}}\",\n  \"EndTime\": \"{{faker 'date.recent' 365}}\",\n  \"OwnerInformation\": \"\",\n  \"WindowTargetId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "00a340a5-c873-47d4-897a-a84c4c564a65",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6da10cee-46dd-484a-bae4-6e3c26ca7310",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "96121dda-207b-46d8-bf3a-84ab509422e8",
      "documentation": "<p>Lists the tasks in a maintenance window.</p> <note> <p>For maintenance window tasks without a specified target, you can't supply values for <code>--max-errors</code> and <code>--max-concurrency</code>. Instead, the system inserts a placeholder value of <code>1</code>, which may be reported in the response to this command. These values don't affect the running of your task and can be ignored.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetMaintenanceWindowTask",
      "responses": [
        {
          "uuid": "7b26e887-20e6-4026-97e7-fb8123525d84",
          "body": "{\n  \"WindowId\": \"\",\n  \"WindowTaskId\": \"\",\n  \"Targets\": [\n    {\n      \"Key\": \"\",\n      \"Values\": [\n        \"\"\n      ]\n    }\n  ],\n  \"TaskArn\": \"\",\n  \"ServiceRoleArn\": \"\",\n  \"TaskType\": \"\",\n  \"TaskParameters\": {},\n  \"TaskInvocationParameters\": {\n    \"RunCommand\": {\n      \"Comment\": \"\",\n      \"CloudWatchOutputConfig\": {\n        \"CloudWatchLogGroupName\": \"\",\n        \"CloudWatchOutputEnabled\": {{faker 'random.boolean'}}\n      },\n      \"DocumentHash\": \"\",\n      \"DocumentHashType\": \"\",\n      \"DocumentVersion\": \"\",\n      \"NotificationConfig\": {\n        \"NotificationArn\": \"\",\n        \"NotificationEvents\": [\n          \"{{oneOf (array 'All' 'InProgress' 'Success' 'TimedOut' 'Cancelled' 'Failed')}}\"\n        ],\n        \"NotificationType\": \"\"\n      },\n      \"OutputS3BucketName\": \"\",\n      \"OutputS3KeyPrefix\": \"\",\n      \"Parameters\": {},\n      \"ServiceRoleArn\": \"\",\n      \"TimeoutSeconds\": {{faker 'random.number'}}\n    },\n    \"Automation\": {\n      \"DocumentVersion\": \"\",\n      \"Parameters\": {}\n    },\n    \"StepFunctions\": {\n      \"Input\": \"\",\n      \"Name\": \"\"\n    },\n    \"Lambda\": {\n      \"ClientContext\": \"\",\n      \"Qualifier\": \"\",\n      \"Payload\": \"\"\n    }\n  },\n  \"Priority\": {{faker 'random.number'}},\n  \"MaxConcurrency\": \"\",\n  \"MaxErrors\": \"\",\n  \"LoggingInfo\": {\n    \"S3BucketName\": \"\",\n    \"S3KeyPrefix\": \"\",\n    \"S3Region\": \"\"\n  },\n  \"Name\": \"\",\n  \"Description\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0d32178c-546e-4b7b-beab-95776d9b29a9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b837de43-f37a-4694-a93c-65785f2031e9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "81e91a97-ec04-45bd-a10c-1c6c761db24d",
      "documentation": "<p>Get information about an OpsItem by using the ID. You must have permission in Identity and Access Management (IAM) to view information about an OpsItem. For more information, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter-getting-started.html\">Getting started with OpsCenter</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p> <p>Operations engineers and IT professionals use Amazon Web Services Systems Manager OpsCenter to view, investigate, and remediate operational issues impacting the performance and health of their Amazon Web Services resources. For more information, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter.html\">OpsCenter</a> in the <i>Amazon Web Services Systems Manager User Guide</i>. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetOpsItem",
      "responses": [
        {
          "uuid": "af743d60-4b85-45c9-889e-b18ac314af2a",
          "body": "{\n  \"OpsItem\": {\n    \"CreatedBy\": \"\",\n    \"OpsItemType\": \"\",\n    \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"Description\": \"\",\n    \"LastModifiedBy\": \"\",\n    \"LastModifiedTime\": \"{{faker 'date.recent' 365}}\",\n    \"Notifications\": [\n      {\n        \"Arn\": \"\"\n      }\n    ],\n    \"Priority\": {{faker 'random.number'}},\n    \"RelatedOpsItems\": [\n      {\n        \"OpsItemId\": \"\"\n      }\n    ],\n    \"Status\": \"\",\n    \"OpsItemId\": \"\",\n    \"Version\": \"\",\n    \"Title\": \"\",\n    \"Source\": \"\",\n    \"OperationalData\": {},\n    \"Category\": \"\",\n    \"Severity\": \"\",\n    \"ActualStartTime\": \"{{faker 'date.recent' 365}}\",\n    \"ActualEndTime\": \"{{faker 'date.recent' 365}}\",\n    \"PlannedStartTime\": \"{{faker 'date.recent' 365}}\",\n    \"PlannedEndTime\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "995f0fc5-e44c-4553-ba64-0c72bd95e709",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fc773378-6779-45e6-82f7-12c2fe13357c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OpsItemNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "82a9239e-03f1-4c57-b36b-36b00611b454",
      "documentation": "View operational metadata related to an application in Application Manager.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetOpsMetadata",
      "responses": [
        {
          "uuid": "f71a5382-20d1-4cc9-9886-562299afe50c",
          "body": "{\n  \"ResourceId\": \"\",\n  \"Metadata\": {},\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "089a41d5-c507-490f-b2e4-a1a2db9587b8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "OpsMetadataNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4900b7b6-7755-4c96-bae8-1013097d40a1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OpsMetadataInvalidArgumentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4157aa0a-1199-4df5-945f-f918e7884163",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9b32dedd-d867-4813-a766-02cc8a5d1810",
      "documentation": "View a summary of operations metadata (OpsData) based on specified filters and aggregators. OpsData can include information about Amazon Web Services Systems Manager OpsCenter operational workitems (OpsItems) as well as information about any Amazon Web Services resource or service configured to report OpsData to Amazon Web Services Systems Manager Explorer. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetOpsSummary",
      "responses": [
        {
          "uuid": "fd991b4b-2101-4d4e-baa1-74de3848e692",
          "body": "{\n  \"Entities\": [\n    {\n      \"Id\": \"\",\n      \"Data\": {}\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5e1025db-000f-4aa1-80c0-87dc11407693",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e4ac8338-2c2e-4d6a-a97d-e039f914122c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceDataSyncNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "86fdfba4-481e-4124-8a51-83b9c599b0c7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidFilter",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9e715711-9da2-4d64-b943-5ef4292886f7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "019b6a0d-7c13-4604-afe1-bc8208b2e53d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidTypeNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "18911d86-3df4-4ecf-9c64-c9fe607e218a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidAggregatorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "79762abc-e8fa-4a25-b49a-c93ab4df8fc8",
      "documentation": "<p>Get information about a single parameter by specifying the parameter name.</p> <note> <p>To get information about more than one parameter at a time, use the <a>GetParameters</a> operation.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetParameter",
      "responses": [
        {
          "uuid": "70a957f1-12a6-4aff-b045-835cc47dfe47",
          "body": "{\n  \"Parameter\": {\n    \"Name\": \"\",\n    \"Type\": \"\",\n    \"Value\": \"\",\n    \"Version\": {{faker 'random.number'}},\n    \"Selector\": \"\",\n    \"SourceResult\": \"\",\n    \"LastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"ARN\": \"\",\n    \"DataType\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c8e773c6-894f-4a3e-9403-6efd5046e089",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5e474fa7-9488-433f-b82c-892ac0834232",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidKeyId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b1547425-8937-433d-8b80-8df36fc3cb55",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ParameterNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "802f9421-0beb-4f1e-bbbc-9c99ed8035ba",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ParameterVersionNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f001f82a-5986-4787-b736-f77c472f1a3f",
      "documentation": "Retrieves the history of all changes to a parameter.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetParameterHistory",
      "responses": [
        {
          "uuid": "0f42629d-0aa9-4877-bf2b-d0ac3a3e792c",
          "body": "{\n  \"Parameters\": [\n    {\n      \"Name\": \"\",\n      \"Type\": \"\",\n      \"KeyId\": \"\",\n      \"LastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n      \"LastModifiedUser\": \"\",\n      \"Description\": \"\",\n      \"Value\": \"\",\n      \"AllowedPattern\": \"\",\n      \"Version\": {{faker 'random.number'}},\n      \"Labels\": [\n        \"\"\n      ],\n      \"Tier\": \"\",\n      \"Policies\": [\n        {\n          \"PolicyText\": \"\",\n          \"PolicyType\": \"\",\n          \"PolicyStatus\": \"\"\n        }\n      ],\n      \"DataType\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3f297ab2-6455-4ed3-b0ed-14cf4a240cbb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9511c4d4-4011-48ff-ac59-09f925929285",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ParameterNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a1b05d8b-3d4f-4356-bc7b-828c29ae60bb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b17d2d15-253d-4cd8-aa44-272b08b28479",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidKeyId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ba23ad86-3645-4899-b21e-33497b76b515",
      "documentation": "<p>Get information about one or more parameters by specifying multiple parameter names.</p> <note> <p>To get information about a single parameter, you can use the <a>GetParameter</a> operation instead.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetParameters",
      "responses": [
        {
          "uuid": "79b1bc2c-8ee4-417b-b987-628cc84d3ff5",
          "body": "{\n  \"Parameters\": [\n    {\n      \"Name\": \"\",\n      \"Type\": \"\",\n      \"Value\": \"\",\n      \"Version\": {{faker 'random.number'}},\n      \"Selector\": \"\",\n      \"SourceResult\": \"\",\n      \"LastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n      \"ARN\": \"\",\n      \"DataType\": \"\"\n    }\n  ],\n  \"InvalidParameters\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eb5075ab-750c-4217-b80b-e2560845b660",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidKeyId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "064bb927-5fac-4956-8e01-ab0175ca6393",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7ef1e3e5-4aee-40d0-ab65-b5675097f5f9",
      "documentation": "<p>Retrieve information about one or more parameters in a specific hierarchy. </p> <p>Request results are returned on a best-effort basis. If you specify <code>MaxResults</code> in the request, the response includes information up to the limit specified. The number of items returned, however, can be between zero and the value of <code>MaxResults</code>. If the service reaches an internal limit while processing the results, it stops the operation and returns the matching values up to that point and a <code>NextToken</code>. You can specify the <code>NextToken</code> in a subsequent call to get the next set of results.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetParametersByPath",
      "responses": [
        {
          "uuid": "6636b25e-f443-4de6-8c66-39bc224f54dd",
          "body": "{\n  \"Parameters\": [\n    {\n      \"Name\": \"\",\n      \"Type\": \"\",\n      \"Value\": \"\",\n      \"Version\": {{faker 'random.number'}},\n      \"Selector\": \"\",\n      \"SourceResult\": \"\",\n      \"LastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n      \"ARN\": \"\",\n      \"DataType\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0acd69e5-8c7f-4234-a524-3392b0ece585",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6bfdb699-a1c5-428a-baf4-aa60f6af3da6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidFilterKey",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9e7c2a32-659a-42a8-b7f2-5fa07cb792f5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidFilterOption",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3c887ef5-5abf-4c04-a389-88a1a8e7fa88",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidFilterValue",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d02a9377-e63e-448c-b351-692d044ba92a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidKeyId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "296b3dd7-bec8-451d-b7d9-1f4b4ea6d4e5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "329b0c31-5634-4f64-8c44-13afd8be4654",
      "documentation": "Retrieves information about a patch baseline.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetPatchBaseline",
      "responses": [
        {
          "uuid": "e0d96224-e1fd-48aa-9395-564bf1baf520",
          "body": "{\n  \"BaselineId\": \"\",\n  \"Name\": \"\",\n  \"OperatingSystem\": \"\",\n  \"GlobalFilters\": {\n    \"PatchFilters\": [\n      {\n        \"Key\": \"\",\n        \"Values\": [\n          \"\"\n        ]\n      }\n    ]\n  },\n  \"ApprovalRules\": {\n    \"PatchRules\": [\n      {\n        \"PatchFilterGroup\": {\n          \"PatchFilters\": [\n            {\n              \"Key\": \"\",\n              \"Values\": [\n                \"\"\n              ]\n            }\n          ]\n        },\n        \"ComplianceLevel\": \"\",\n        \"ApproveAfterDays\": {{faker 'random.number'}},\n        \"ApproveUntilDate\": \"\",\n        \"EnableNonSecurity\": {{faker 'random.boolean'}}\n      }\n    ]\n  },\n  \"ApprovedPatches\": [\n    \"\"\n  ],\n  \"ApprovedPatchesComplianceLevel\": \"\",\n  \"ApprovedPatchesEnableNonSecurity\": {{faker 'random.boolean'}},\n  \"RejectedPatches\": [\n    \"\"\n  ],\n  \"RejectedPatchesAction\": \"\",\n  \"PatchGroups\": [\n    \"\"\n  ],\n  \"CreatedDate\": \"{{faker 'date.recent' 365}}\",\n  \"ModifiedDate\": \"{{faker 'date.recent' 365}}\",\n  \"Description\": \"\",\n  \"Sources\": [\n    {\n      \"Name\": \"\",\n      \"Products\": [\n        \"\"\n      ],\n      \"Configuration\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "03930e8e-3496-4e2c-9ea6-768971e3d8a7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4a6a0bc2-d6e2-4769-ae7b-39b7749f1b79",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidResourceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6832d836-c0d3-42f4-943c-3db3341d1e2f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6f3d235e-1d4f-44a3-8159-d5e7651d17ac",
      "documentation": "Retrieves the patch baseline that should be used for the specified patch group.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetPatchBaselineForPatchGroup",
      "responses": [
        {
          "uuid": "13f17978-0181-4fe8-9820-6d605d2782ea",
          "body": "{\n  \"BaselineId\": \"\",\n  \"PatchGroup\": \"\",\n  \"OperatingSystem\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e44c88cf-7fbc-47c6-8c85-135bd37df76b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2ce789b4-5b4b-409b-be0d-c366bd7a5833",
      "documentation": "<p> <code>ServiceSetting</code> is an account-level setting for an Amazon Web Services service. This setting defines how a user interacts with or uses a service or a feature of a service. For example, if an Amazon Web Services service charges money to the account based on feature or service usage, then the Amazon Web Services service team might create a default setting of <code>false</code>. This means the user can't use this feature unless they change the setting to <code>true</code> and intentionally opt in for a paid feature.</p> <p>Services map a <code>SettingId</code> object to a setting value. Amazon Web Services services teams define the default value for a <code>SettingId</code>. You can't create a new <code>SettingId</code>, but you can overwrite the default value if you have the <code>ssm:UpdateServiceSetting</code> permission for the setting. Use the <a>UpdateServiceSetting</a> API operation to change the default setting. Or use the <a>ResetServiceSetting</a> to change the value back to the original value defined by the Amazon Web Services service team.</p> <p>Query the current service setting for the Amazon Web Services account. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetServiceSetting",
      "responses": [
        {
          "uuid": "b1597cbc-2b2f-48e3-9e1a-74962ec58e22",
          "body": "{\n  \"ServiceSetting\": {\n    \"SettingId\": \"\",\n    \"SettingValue\": \"\",\n    \"LastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"LastModifiedUser\": \"\",\n    \"ARN\": \"\",\n    \"Status\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "18b36e7f-ee0c-4040-bde5-19477c266851",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c2c6262a-834e-4144-8aba-af49d595208c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceSettingNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ba1b5200-437b-4faa-a790-1f535d6e7666",
      "documentation": "<p>A parameter label is a user-defined alias to help you manage different versions of a parameter. When you modify a parameter, Amazon Web Services Systems Manager automatically saves a new version and increments the version number by one. A label can help you remember the purpose of a parameter when there are multiple versions. </p> <p>Parameter labels have the following requirements and restrictions.</p> <ul> <li> <p>A version of a parameter can have a maximum of 10 labels.</p> </li> <li> <p>You can't attach the same label to different versions of the same parameter. For example, if version 1 has the label Production, then you can't attach Production to version 2.</p> </li> <li> <p>You can move a label from one version of a parameter to another.</p> </li> <li> <p>You can't create a label when you create a new parameter. You must attach a label to a specific version of a parameter.</p> </li> <li> <p>If you no longer want to use a parameter label, then you can either delete it or move it to a different version of a parameter.</p> </li> <li> <p>A label can have a maximum of 100 characters.</p> </li> <li> <p>Labels can contain letters (case sensitive), numbers, periods (.), hyphens (-), or underscores (_).</p> </li> <li> <p>Labels can't begin with a number, \"<code>aws</code>\" or \"<code>ssm</code>\" (not case sensitive). If a label fails to meet these requirements, then the label isn't associated with a parameter and the system displays it in the list of InvalidLabels.</p> </li> </ul>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.LabelParameterVersion",
      "responses": [
        {
          "uuid": "b979143a-a956-4802-b91d-ca74588b7371",
          "body": "{\n  \"InvalidLabels\": [\n    \"\"\n  ],\n  \"ParameterVersion\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0fcca606-8c9c-433d-8689-0e0a47d6b191",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e95579a6-4ce7-4953-9183-e4217af65d7b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "TooManyUpdates",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "77d68194-4875-456a-b36b-8a9de67bfc18",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ParameterNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fc309aaf-2477-498e-af2e-1df42ef10fdc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ParameterVersionNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9288b511-55a3-4404-bd66-86cfcd2ffbfb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ParameterVersionLabelLimitExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e340aa90-f291-43d0-a675-d37fdf0a6a66",
      "documentation": "Retrieves all versions of an association for a specific association ID.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.ListAssociationVersions",
      "responses": [
        {
          "uuid": "0b371672-162b-4e46-a07b-36dc5736bbab",
          "body": "{\n  \"AssociationVersions\": [\n    {\n      \"AssociationId\": \"\",\n      \"AssociationVersion\": \"\",\n      \"CreatedDate\": \"{{faker 'date.recent' 365}}\",\n      \"Name\": \"\",\n      \"DocumentVersion\": \"\",\n      \"Parameters\": {},\n      \"Targets\": [\n        {\n          \"Key\": \"\",\n          \"Values\": [\n            \"\"\n          ]\n        }\n      ],\n      \"ScheduleExpression\": \"\",\n      \"OutputLocation\": {\n        \"S3Location\": {\n          \"OutputS3Region\": \"\",\n          \"OutputS3BucketName\": \"\",\n          \"OutputS3KeyPrefix\": \"\"\n        }\n      },\n      \"AssociationName\": \"\",\n      \"MaxErrors\": \"\",\n      \"MaxConcurrency\": \"\",\n      \"ComplianceSeverity\": \"\",\n      \"SyncCompliance\": \"\",\n      \"ApplyOnlyAtCronInterval\": {{faker 'random.boolean'}},\n      \"CalendarNames\": [\n        \"\"\n      ],\n      \"TargetLocations\": [\n        {\n          \"Accounts\": [\n            \"\"\n          ],\n          \"Regions\": [\n            \"\"\n          ],\n          \"TargetLocationMaxConcurrency\": \"\",\n          \"TargetLocationMaxErrors\": \"\",\n          \"ExecutionRoleName\": \"\"\n        }\n      ]\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5a325726-066a-47f5-816c-e19a2d18a640",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6997830b-211d-4a72-9311-8d64b8e5c400",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3239c112-26cd-4db8-8d09-221a5661025e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "AssociationDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9a38f9f7-8212-45ab-8704-882a0c716440",
      "documentation": "Returns all State Manager associations in the current Amazon Web Services account and Amazon Web Services Region. You can limit the results to a specific State Manager association document or instance by specifying a filter. State Manager is a capability of Amazon Web Services Systems Manager.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.ListAssociations",
      "responses": [
        {
          "uuid": "2b52e37d-7395-4830-a889-fbd2c89825e2",
          "body": "{\n  \"Associations\": [\n    {\n      \"Name\": \"\",\n      \"InstanceId\": \"\",\n      \"AssociationId\": \"\",\n      \"AssociationVersion\": \"\",\n      \"DocumentVersion\": \"\",\n      \"Targets\": [\n        {\n          \"Key\": \"\",\n          \"Values\": [\n            \"\"\n          ]\n        }\n      ],\n      \"LastExecutionDate\": \"{{faker 'date.recent' 365}}\",\n      \"Overview\": {\n        \"Status\": \"\",\n        \"DetailedStatus\": \"\",\n        \"AssociationStatusAggregatedCount\": {}\n      },\n      \"ScheduleExpression\": \"\",\n      \"AssociationName\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3ed63009-ecb1-4b13-b8d6-d01d08589622",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "35e6a0db-9a84-47df-b041-20e733026d6d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a2499886-8758-4065-964f-c665550c5954",
      "documentation": "An invocation is copy of a command sent to a specific instance. A command can apply to one or more instances. A command invocation applies to one instance. For example, if a user runs <code>SendCommand</code> against three instances, then a command invocation is created for each requested instance ID. <code>ListCommandInvocations</code> provide status about command execution.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.ListCommandInvocations",
      "responses": [
        {
          "uuid": "07d0386a-4855-42ec-9950-e4fb4fe39993",
          "body": "{\n  \"CommandInvocations\": [\n    {\n      \"CommandId\": \"\",\n      \"InstanceId\": \"\",\n      \"InstanceName\": \"\",\n      \"Comment\": \"\",\n      \"DocumentName\": \"\",\n      \"DocumentVersion\": \"\",\n      \"RequestedDateTime\": \"{{faker 'date.recent' 365}}\",\n      \"Status\": \"\",\n      \"StatusDetails\": \"\",\n      \"TraceOutput\": \"\",\n      \"StandardOutputUrl\": \"\",\n      \"StandardErrorUrl\": \"\",\n      \"CommandPlugins\": [\n        {\n          \"Name\": \"\",\n          \"Status\": \"\",\n          \"StatusDetails\": \"\",\n          \"ResponseCode\": {{faker 'random.number'}},\n          \"ResponseStartDateTime\": \"{{faker 'date.recent' 365}}\",\n          \"ResponseFinishDateTime\": \"{{faker 'date.recent' 365}}\",\n          \"Output\": \"\",\n          \"StandardOutputUrl\": \"\",\n          \"StandardErrorUrl\": \"\",\n          \"OutputS3Region\": \"\",\n          \"OutputS3BucketName\": \"\",\n          \"OutputS3KeyPrefix\": \"\"\n        }\n      ],\n      \"ServiceRole\": \"\",\n      \"NotificationConfig\": {\n        \"NotificationArn\": \"\",\n        \"NotificationEvents\": [\n          \"{{oneOf (array 'All' 'InProgress' 'Success' 'TimedOut' 'Cancelled' 'Failed')}}\"\n        ],\n        \"NotificationType\": \"\"\n      },\n      \"CloudWatchOutputConfig\": {\n        \"CloudWatchLogGroupName\": \"\",\n        \"CloudWatchOutputEnabled\": {{faker 'random.boolean'}}\n      }\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2cb0bb1b-8fd4-4f96-a8b9-eb803de6df3e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "92bb4c40-5972-4d50-90dd-1d7175d1674e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidCommandId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aedf84b8-de80-4ddd-8aad-edce42bda5ed",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInstanceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d80db550-4e08-45c9-82b6-0f79a6a942df",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidFilterKey",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "10922903-6eaf-45e4-9a1f-1a3effdee7eb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0b7bee10-b6ac-4ac3-a700-4a5aa66ea053",
      "documentation": "Lists the commands requested by users of the Amazon Web Services account.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.ListCommands",
      "responses": [
        {
          "uuid": "f88c0b67-8acf-445d-9368-c6de7cbc3bc1",
          "body": "{\n  \"Commands\": [\n    {\n      \"CommandId\": \"\",\n      \"DocumentName\": \"\",\n      \"DocumentVersion\": \"\",\n      \"Comment\": \"\",\n      \"ExpiresAfter\": \"{{faker 'date.recent' 365}}\",\n      \"Parameters\": {},\n      \"InstanceIds\": [\n        \"\"\n      ],\n      \"Targets\": [\n        {\n          \"Key\": \"\",\n          \"Values\": [\n            \"\"\n          ]\n        }\n      ],\n      \"RequestedDateTime\": \"{{faker 'date.recent' 365}}\",\n      \"Status\": \"\",\n      \"StatusDetails\": \"\",\n      \"OutputS3Region\": \"\",\n      \"OutputS3BucketName\": \"\",\n      \"OutputS3KeyPrefix\": \"\",\n      \"MaxConcurrency\": \"\",\n      \"MaxErrors\": \"\",\n      \"TargetCount\": {{faker 'random.number'}},\n      \"CompletedCount\": {{faker 'random.number'}},\n      \"ErrorCount\": {{faker 'random.number'}},\n      \"DeliveryTimedOutCount\": {{faker 'random.number'}},\n      \"ServiceRole\": \"\",\n      \"NotificationConfig\": {\n        \"NotificationArn\": \"\",\n        \"NotificationEvents\": [\n          \"{{oneOf (array 'All' 'InProgress' 'Success' 'TimedOut' 'Cancelled' 'Failed')}}\"\n        ],\n        \"NotificationType\": \"\"\n      },\n      \"CloudWatchOutputConfig\": {\n        \"CloudWatchLogGroupName\": \"\",\n        \"CloudWatchOutputEnabled\": {{faker 'random.boolean'}}\n      },\n      \"TimeoutSeconds\": {{faker 'random.number'}}\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2ebbea11-6bd5-4417-9d60-c8cf3b0810f0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5ad3df2b-0273-4319-91ee-5f5e82cc2d42",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidCommandId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7ef50f69-7728-4b82-b140-e2a8840f4a92",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInstanceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "94360266-67f4-48c9-a94c-7433f685e1f1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidFilterKey",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fb45d2f9-c4d3-4d4e-8505-1b0f7058d70c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "92b61af2-af9f-4203-8011-30797ede23eb",
      "documentation": "For a specified resource ID, this API operation returns a list of compliance statuses for different resource types. Currently, you can only specify one resource ID per call. List results depend on the criteria specified in the filter.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.ListComplianceItems",
      "responses": [
        {
          "uuid": "92623b12-97c6-48a4-bed7-5aa4dab077b0",
          "body": "{\n  \"ComplianceItems\": [\n    {\n      \"ComplianceType\": \"\",\n      \"ResourceType\": \"\",\n      \"ResourceId\": \"\",\n      \"Id\": \"\",\n      \"Title\": \"\",\n      \"Status\": \"\",\n      \"Severity\": \"\",\n      \"ExecutionSummary\": {\n        \"ExecutionTime\": \"{{faker 'date.recent' 365}}\",\n        \"ExecutionId\": \"\",\n        \"ExecutionType\": \"\"\n      },\n      \"Details\": {}\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6bbe2151-0f28-49af-adff-118058c6d2b0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceType",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "efcdf235-c9d0-4eda-a2aa-b665f6986f35",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidResourceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "94ed0d23-187a-42cf-a348-bc607e9e8b94",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "70471334-00c0-4b23-b6a4-47393f0ade64",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidFilter",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1a7493fb-120e-44eb-b046-38bcfcfa32d1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fcc884ef-0886-497d-8be0-2e0473699908",
      "documentation": "Returns a summary count of compliant and non-compliant resources for a compliance type. For example, this call can return State Manager associations, patches, or custom compliance types according to the filter criteria that you specify.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.ListComplianceSummaries",
      "responses": [
        {
          "uuid": "193c9c0f-1287-42c1-b84c-fc77ad1574cb",
          "body": "{\n  \"ComplianceSummaryItems\": [\n    {\n      \"ComplianceType\": \"\",\n      \"CompliantSummary\": {\n        \"CompliantCount\": {{faker 'random.number'}},\n        \"SeveritySummary\": {\n          \"CriticalCount\": {{faker 'random.number'}},\n          \"HighCount\": {{faker 'random.number'}},\n          \"MediumCount\": {{faker 'random.number'}},\n          \"LowCount\": {{faker 'random.number'}},\n          \"InformationalCount\": {{faker 'random.number'}},\n          \"UnspecifiedCount\": {{faker 'random.number'}}\n        }\n      },\n      \"NonCompliantSummary\": {\n        \"NonCompliantCount\": {{faker 'random.number'}},\n        \"SeveritySummary\": {\n          \"CriticalCount\": {{faker 'random.number'}},\n          \"HighCount\": {{faker 'random.number'}},\n          \"MediumCount\": {{faker 'random.number'}},\n          \"LowCount\": {{faker 'random.number'}},\n          \"InformationalCount\": {{faker 'random.number'}},\n          \"UnspecifiedCount\": {{faker 'random.number'}}\n        }\n      }\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c065d4bf-8a93-4350-9211-cc75895c0224",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidFilter",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0bcc49a7-9691-473e-b3b2-22261d2e9268",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aac94258-b01d-4468-a76f-1f72e68639ae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3c0a5eb1-e3b8-434d-bba6-771bace7ab39",
      "documentation": "Information about approval reviews for a version of a change template in Change Manager.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.ListDocumentMetadataHistory",
      "responses": [
        {
          "uuid": "dc76a09d-f8dc-4658-9c35-a053178cca11",
          "body": "{\n  \"Name\": \"\",\n  \"DocumentVersion\": \"\",\n  \"Author\": \"\",\n  \"Metadata\": {\n    \"ReviewerResponse\": [\n      {\n        \"CreateTime\": \"{{faker 'date.recent' 365}}\",\n        \"UpdatedTime\": \"{{faker 'date.recent' 365}}\",\n        \"ReviewStatus\": \"\",\n        \"Comment\": [\n          {\n            \"Type\": \"\",\n            \"Content\": \"\"\n          }\n        ],\n        \"Reviewer\": \"\"\n      }\n    ]\n  },\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b6732ed9-c26a-4d9f-999f-9663d2011799",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "14d0bed5-dd89-4a51-ae38-f43cc7b2ffb0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDocument",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "babedc4f-5dc9-47b4-8e64-c354f0080055",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDocumentVersion",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d2043e63-85e7-49c7-9339-8b9f71f1ac94",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "487901de-5503-435c-98e4-1b45433954a2",
      "documentation": "List all versions for a document.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.ListDocumentVersions",
      "responses": [
        {
          "uuid": "a52feec1-e513-4aed-984d-0f05a25c9d0f",
          "body": "{\n  \"DocumentVersions\": [\n    {\n      \"Name\": \"\",\n      \"DisplayName\": \"\",\n      \"DocumentVersion\": \"\",\n      \"VersionName\": \"\",\n      \"CreatedDate\": \"{{faker 'date.recent' 365}}\",\n      \"IsDefaultVersion\": {{faker 'random.boolean'}},\n      \"DocumentFormat\": \"\",\n      \"Status\": \"\",\n      \"StatusInformation\": \"\",\n      \"ReviewStatus\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5b94b3a1-6b60-4f3c-afb4-4b01a95dfc70",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "25acc417-e32d-4170-a3a0-3de901562013",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "12004005-9c72-4995-9048-0f9f933d744e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDocument",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "022405f8-8c1e-493e-8438-36f65e88888b",
      "documentation": "Returns all Systems Manager (SSM) documents in the current Amazon Web Services account and Amazon Web Services Region. You can limit the results of this request by using a filter.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.ListDocuments",
      "responses": [
        {
          "uuid": "84e3b3ee-0a12-4e28-aa85-b4dc0c3850bf",
          "body": "{\n  \"DocumentIdentifiers\": [\n    {\n      \"Name\": \"\",\n      \"CreatedDate\": \"{{faker 'date.recent' 365}}\",\n      \"DisplayName\": \"\",\n      \"Owner\": \"\",\n      \"VersionName\": \"\",\n      \"PlatformTypes\": [\n        \"{{oneOf (array 'Windows' 'Linux')}}\"\n      ],\n      \"DocumentVersion\": \"\",\n      \"DocumentType\": \"\",\n      \"SchemaVersion\": \"\",\n      \"DocumentFormat\": \"\",\n      \"TargetType\": \"\",\n      \"Tags\": [\n        {\n          \"Key\": \"\",\n          \"Value\": \"\"\n        }\n      ],\n      \"Requires\": [\n        {\n          \"Name\": \"\",\n          \"Version\": \"\"\n        }\n      ],\n      \"ReviewStatus\": \"\",\n      \"Author\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3245c422-e117-42ff-ac43-16f4e733fb3f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0ee9c353-c601-4246-a145-fbbe30bdf4ed",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7e474368-f45f-40eb-9de2-ce6cd816d50c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidFilterKey",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e7a4eff3-2a0d-4bcc-bc55-9eb45900c0d7",
      "documentation": "A list of inventory items returned by the request.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.ListInventoryEntries",
      "responses": [
        {
          "uuid": "9f508819-7831-4906-a4da-2249822df6d0",
          "body": "{\n  \"TypeName\": \"\",\n  \"InstanceId\": \"\",\n  \"SchemaVersion\": \"\",\n  \"CaptureTime\": \"\",\n  \"Entries\": [\n    {}\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9219f382-8d41-44e0-8cd7-37685b0cdcdc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e8eee538-1246-4009-bb80-1f0e3df6797c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInstanceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "de4c60bb-9399-4e5f-a011-1f4bae6e2043",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidTypeNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "07448da0-9cfa-4f78-9fc0-9c0d5d8d3597",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidFilter",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "27d5dc00-4e9d-43d0-8874-43db0625b250",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c659c752-cc4e-4587-a22b-f051e7512922",
      "documentation": "Returns a list of all OpsItem events in the current Amazon Web Services Region and Amazon Web Services account. You can limit the results to events associated with specific OpsItems by specifying a filter.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.ListOpsItemEvents",
      "responses": [
        {
          "uuid": "1170a4b4-b68c-42e1-9d87-b03cadac7344",
          "body": "{\n  \"NextToken\": \"\",\n  \"Summaries\": [\n    {\n      \"OpsItemId\": \"\",\n      \"EventId\": \"\",\n      \"Source\": \"\",\n      \"DetailType\": \"\",\n      \"Detail\": \"\",\n      \"CreatedBy\": {\n        \"Arn\": \"\"\n      },\n      \"CreatedTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1702f78a-ea3e-49ba-9ffe-f3af85dfb92b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ebce1b92-ce93-4417-b9c6-9a73bc116861",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OpsItemNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5c8c888d-78b8-4db3-85ee-b88fe398bad4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OpsItemLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e8e7f4da-eede-47fe-a1e1-610c85e698ed",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OpsItemInvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1c37041a-6f5a-482e-bb38-0685108cd73b",
      "documentation": "Lists all related-item resources associated with an OpsItem.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.ListOpsItemRelatedItems",
      "responses": [
        {
          "uuid": "17c8f589-fdd4-4272-8dad-9e17d80d3e18",
          "body": "{\n  \"NextToken\": \"\",\n  \"Summaries\": [\n    {\n      \"OpsItemId\": \"\",\n      \"AssociationId\": \"\",\n      \"ResourceType\": \"\",\n      \"AssociationType\": \"\",\n      \"ResourceUri\": \"\",\n      \"CreatedBy\": {\n        \"Arn\": \"\"\n      },\n      \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastModifiedBy\": {\n        \"Arn\": \"\"\n      },\n      \"LastModifiedTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3f7fb25b-4cf8-403e-bdf1-b35b4e5b2739",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e5f1e05a-bdf6-45f8-93c0-8b44f78a3588",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OpsItemInvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "797fc040-b042-4eb7-8c27-0a7cf584c8f4",
      "documentation": "Amazon Web Services Systems Manager calls this API operation when displaying all Application Manager OpsMetadata objects or blobs.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.ListOpsMetadata",
      "responses": [
        {
          "uuid": "30885e36-d99a-4983-affd-d3ccc337659a",
          "body": "{\n  \"OpsMetadataList\": [\n    {\n      \"ResourceId\": \"\",\n      \"OpsMetadataArn\": \"\",\n      \"LastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n      \"LastModifiedUser\": \"\",\n      \"CreationDate\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "89108bf1-07b3-4a50-ac42-b4b6c51d05ca",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "OpsMetadataInvalidArgumentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3b6f722e-a9bc-4b4c-ab3b-c20a3b07b0e0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ffdd5372-bf60-4421-a826-6e0a64e7f65d",
      "documentation": "Returns a resource-level summary count. The summary includes information about compliant and non-compliant statuses and detailed compliance-item severity counts, according to the filter criteria you specify.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.ListResourceComplianceSummaries",
      "responses": [
        {
          "uuid": "7d574481-d459-4e20-853d-68ae627a7327",
          "body": "{\n  \"ResourceComplianceSummaryItems\": [\n    {\n      \"ComplianceType\": \"\",\n      \"ResourceType\": \"\",\n      \"ResourceId\": \"\",\n      \"Status\": \"\",\n      \"OverallSeverity\": \"\",\n      \"ExecutionSummary\": {\n        \"ExecutionTime\": \"{{faker 'date.recent' 365}}\",\n        \"ExecutionId\": \"\",\n        \"ExecutionType\": \"\"\n      },\n      \"CompliantSummary\": {\n        \"CompliantCount\": {{faker 'random.number'}},\n        \"SeveritySummary\": {\n          \"CriticalCount\": {{faker 'random.number'}},\n          \"HighCount\": {{faker 'random.number'}},\n          \"MediumCount\": {{faker 'random.number'}},\n          \"LowCount\": {{faker 'random.number'}},\n          \"InformationalCount\": {{faker 'random.number'}},\n          \"UnspecifiedCount\": {{faker 'random.number'}}\n        }\n      },\n      \"NonCompliantSummary\": {\n        \"NonCompliantCount\": {{faker 'random.number'}},\n        \"SeveritySummary\": {\n          \"CriticalCount\": {{faker 'random.number'}},\n          \"HighCount\": {{faker 'random.number'}},\n          \"MediumCount\": {{faker 'random.number'}},\n          \"LowCount\": {{faker 'random.number'}},\n          \"InformationalCount\": {{faker 'random.number'}},\n          \"UnspecifiedCount\": {{faker 'random.number'}}\n        }\n      }\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "48745d78-3d2f-4426-91bb-2e83a9a56114",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidFilter",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f3f4250a-184b-472b-a837-d598d0780276",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eb3fc8a5-cc74-4d59-8462-70c4f619d4f6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dbbadf49-4c9c-4a1c-9ad0-124850778423",
      "documentation": "<p>Lists your resource data sync configurations. Includes information about the last time a sync attempted to start, the last sync status, and the last time a sync successfully completed.</p> <p>The number of sync configurations might be too large to return using a single call to <code>ListResourceDataSync</code>. You can limit the number of sync configurations returned by using the <code>MaxResults</code> parameter. To determine whether there are more sync configurations to list, check the value of <code>NextToken</code> in the output. If there are more sync configurations to list, you can request them by specifying the <code>NextToken</code> returned in the call to the parameter of a subsequent call. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.ListResourceDataSync",
      "responses": [
        {
          "uuid": "e8583b95-888c-4e4f-b504-0a512102d3b3",
          "body": "{\n  \"ResourceDataSyncItems\": [\n    {\n      \"SyncName\": \"\",\n      \"SyncType\": \"\",\n      \"SyncSource\": {\n        \"SourceType\": \"\",\n        \"AwsOrganizationsSource\": {\n          \"OrganizationSourceType\": \"\",\n          \"OrganizationalUnits\": [\n            {\n              \"OrganizationalUnitId\": \"\"\n            }\n          ]\n        },\n        \"SourceRegions\": [\n          \"\"\n        ],\n        \"IncludeFutureRegions\": {{faker 'random.boolean'}},\n        \"State\": \"\",\n        \"EnableAllOpsDataSources\": {{faker 'random.boolean'}}\n      },\n      \"S3Destination\": {\n        \"BucketName\": \"\",\n        \"Prefix\": \"\",\n        \"SyncFormat\": \"\",\n        \"Region\": \"\",\n        \"AWSKMSKeyARN\": \"\",\n        \"DestinationDataSharing\": {\n          \"DestinationDataSharingType\": \"\"\n        }\n      },\n      \"LastSyncTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastSuccessfulSyncTime\": \"{{faker 'date.recent' 365}}\",\n      \"SyncLastModifiedTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastStatus\": \"\",\n      \"SyncCreatedTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastSyncStatusMessage\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9278b11e-0787-43e5-af84-5a49192d0b01",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceDataSyncInvalidConfigurationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b19ca738-c78b-48b4-9d05-61fb05ca33dd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0f659f88-0b1a-4225-875d-bbdfe4c310ed",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "45eae0f5-9e4e-4a08-aaaf-4d5c409deeb3",
      "documentation": "<p>Returns a list of the tags assigned to the specified resource.</p> <p>For information about the ID format for each supported resource type, see <a>AddTagsToResource</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.ListTagsForResource",
      "responses": [
        {
          "uuid": "72981e28-f085-4eb1-9d66-d8d3ba568c45",
          "body": "{\n  \"TagList\": [\n    {\n      \"Key\": \"\",\n      \"Value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "84c48a9a-8d87-48e2-936f-2195edcc1d05",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceType",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "44b7efc1-f38e-4543-9b43-613d2d0ea7ff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidResourceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cfad500f-40c7-489c-8d0b-07ff37cfb968",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0ca967d4-ce69-4b20-b66e-d0bb771db66c",
      "documentation": "Shares a Amazon Web Services Systems Manager document (SSM document)publicly or privately. If you share a document privately, you must specify the Amazon Web Services user account IDs for those people who can use the document. If you share a document publicly, you must specify <i>All</i> as the account ID.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.ModifyDocumentPermission",
      "responses": [
        {
          "uuid": "0ba629fe-0d7c-4688-9891-6e7dae12d1db",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7578148c-8684-404a-a6d6-59c636194fa0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "28e58806-eb90-42ef-bfe6-1d9aa5e202c4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDocument",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f8847058-eda4-41a9-89b5-16b176a2e6cb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidPermissionType",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "79d4e1b4-a3c9-4169-9070-e6737b171b54",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "DocumentPermissionLimit",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "28d2b6c0-7e93-4ce1-9bb2-4cf3e8ae0383",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "DocumentLimitExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c7a37d29-b568-4aef-bf87-28efe1386cdf",
      "documentation": "<p>Registers a compliance type and other compliance details on a designated resource. This operation lets you register custom compliance details with a resource. This call overwrites existing compliance information on the resource, so you must provide a full list of compliance items each time that you send the request.</p> <p>ComplianceType can be one of the following:</p> <ul> <li> <p>ExecutionId: The execution ID when the patch, association, or custom compliance item was applied.</p> </li> <li> <p>ExecutionType: Specify patch, association, or Custom:<code>string</code>.</p> </li> <li> <p>ExecutionTime. The time the patch, association, or custom compliance item was applied to the instance.</p> </li> <li> <p>Id: The patch, association, or custom compliance ID.</p> </li> <li> <p>Title: A title.</p> </li> <li> <p>Status: The status of the compliance item. For example, <code>approved</code> for patches, or <code>Failed</code> for associations.</p> </li> <li> <p>Severity: A patch severity. For example, <code>critical</code>.</p> </li> <li> <p>DocumentName: An SSM document name. For example, <code>AWS-RunPatchBaseline</code>.</p> </li> <li> <p>DocumentVersion: An SSM document version number. For example, 4.</p> </li> <li> <p>Classification: A patch classification. For example, <code>security updates</code>.</p> </li> <li> <p>PatchBaselineId: A patch baseline ID.</p> </li> <li> <p>PatchSeverity: A patch severity. For example, <code>Critical</code>.</p> </li> <li> <p>PatchState: A patch state. For example, <code>InstancesWithFailedPatches</code>.</p> </li> <li> <p>PatchGroup: The name of a patch group.</p> </li> <li> <p>InstalledTime: The time the association, patch, or custom compliance item was applied to the resource. Specify the time by using the following format: yyyy-MM-dd'T'HH:mm:ss'Z'</p> </li> </ul>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.PutComplianceItems",
      "responses": [
        {
          "uuid": "699cfa75-5e14-468e-b988-894b3c2aaefc",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "110772dc-46cc-40fe-b6e6-b9aa7d191ac9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "329b74c9-c7ce-4f7b-a48d-5a2f4b823fa3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidItemContentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "408b153e-d9f8-4dbb-b552-36075648fe72",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TotalSizeLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0f0974e0-b683-4f3c-ab15-88ee0e88ee08",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ItemSizeLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3ba6ad28-371b-47f8-8528-d91f7afa8d29",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ComplianceTypeCountLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "225f581c-30d9-4be7-b404-90b442e480db",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidResourceType",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9dad5aa8-124c-4f36-ae78-a4f564868a6d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidResourceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e89edf77-3b40-458b-b003-2bba668ad851",
      "documentation": "Bulk update custom inventory items on one more instance. The request adds an inventory item, if it doesn't already exist, or updates an inventory item, if it does exist.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.PutInventory",
      "responses": [
        {
          "uuid": "dcbc9913-22c3-407e-8d2d-f5f7fadbfeeb",
          "body": "{\n  \"Message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c37fd7a2-949b-4f26-950a-e68f682d4452",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "39612c60-e09e-45f6-8bce-14cc521ce5e8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInstanceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c98e184b-ad42-47f2-bb64-c7b1ca4efb6e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidTypeNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4b95966f-1b42-4785-a94f-97b14f4dab6d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidItemContentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b8171ddc-ab08-4a57-a4dd-23559ed33db6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "TotalSizeLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "42051f89-3ef4-43c7-ae35-fdf280ee72d1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ItemSizeLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ca5235a4-f0dc-45f6-812d-6080ee6d360e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ItemContentMismatchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "27b66cda-2034-497c-bb78-9af2498a257d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "CustomSchemaCountLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "da47dddf-98fe-4ad1-82ca-7cedcb298f33",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "UnsupportedInventorySchemaVersionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "332e81ec-b153-45fc-a8ff-1d8b0bff128f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "UnsupportedInventoryItemContextException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b5112b38-d8ec-4d50-8aec-2d27498f1edf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidInventoryItemContextException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "73d9bd25-ad37-4001-b5e7-3d9e7dd90ae8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "SubTypeCountLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1695f6fb-4cf8-44f8-8647-733cdb7a8a76",
      "documentation": "Add a parameter to the system.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.PutParameter",
      "responses": [
        {
          "uuid": "bd39af45-0c4b-44dd-8329-6af825a1829a",
          "body": "{\n  \"Version\": {{faker 'random.number'}},\n  \"Tier\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9b231859-d423-483c-a751-060eedf8bf0a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e6e5b9fa-c9e7-42e8-9519-db6adf1272be",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidKeyId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "23ae9cc2-c7eb-4a1d-a26c-6198888345d7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ParameterLimitExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2edb1586-e778-4311-a8d2-6ba95cfaedcf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyUpdates",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7154a0df-557b-461f-a0f7-4473be9a7b84",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ParameterAlreadyExists",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "982bc275-5104-4b2e-8778-9c14c78ee280",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "HierarchyLevelLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "770a7a13-9e5b-4b92-b761-fb03a3b40180",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "HierarchyTypeMismatchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8452813f-c086-4646-ac60-a9c6a32b7e40",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidAllowedPatternException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a7e74338-70a6-454c-a73f-72f04cff2d5d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "ParameterMaxVersionLimitExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b12f1eac-41d1-4239-8eee-08e3d81113c1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "ParameterPatternMismatchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f6a01136-e8b2-4139-994d-3ba16d562ca7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "UnsupportedParameterType",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8515e0e0-e7ed-4ae7-a299-867f315b81de",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "PoliciesLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ce25dcdf-7b52-4189-a69e-59af4da40a37",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "InvalidPolicyTypeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "921eb717-c973-4b5a-b4b1-c438b62f093e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "InvalidPolicyAttributeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3810a986-88de-451a-9909-7f8d2450f69e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "IncompatiblePolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1dfcc291-c5f8-4b25-a8e8-4cc93305249e",
      "documentation": "<p>Defines the default patch baseline for the relevant operating system.</p> <p>To reset the Amazon Web Services-predefined patch baseline as the default, specify the full patch baseline Amazon Resource Name (ARN) as the baseline ID value. For example, for CentOS, specify <code>arn:aws:ssm:us-east-2:733109147000:patchbaseline/pb-0574b43a65ea646ed</code> instead of <code>pb-0574b43a65ea646ed</code>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.RegisterDefaultPatchBaseline",
      "responses": [
        {
          "uuid": "8ae92553-7e5f-49e4-b56b-3cbf99d7f707",
          "body": "{\n  \"BaselineId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d2376841-e942-4957-aeec-246bafab0475",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "134b5916-3739-4572-af6d-80e0448fafa8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "00bcae68-5150-4efb-88e9-2f6eb8798900",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4a1148df-1b0b-43b1-aa24-b04d82a53e32",
      "documentation": "Registers a patch baseline for a patch group.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.RegisterPatchBaselineForPatchGroup",
      "responses": [
        {
          "uuid": "6a9d44d6-c2c1-4e76-9e9f-e33f641a3a0b",
          "body": "{\n  \"BaselineId\": \"\",\n  \"PatchGroup\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "28d0d415-f8be-40d5-94fd-65aebb32ff94",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "280d4e23-3bbc-4741-a140-ff8c3ae8bd52",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dd8d018b-16da-4f9b-a9ed-4e6491c28d6c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidResourceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8e3d9e5f-a31d-4a46-80bd-52ec56fc1c4f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9650234f-b20f-4e9c-9a6b-863133031fbe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "265b59a7-6e41-4d2a-af43-5737034a215f",
      "documentation": "Registers a target with a maintenance window.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.RegisterTargetWithMaintenanceWindow",
      "responses": [
        {
          "uuid": "83c90264-0b33-4b4e-b930-e56fc54c3585",
          "body": "{\n  \"WindowTargetId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6898281e-db5f-461f-ab85-5d277157de50",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "IdempotentParameterMismatch",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "adbd34e6-8568-45c0-822a-342f60038f09",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "257d6846-8b77-4b5b-b9c4-b11374f34b82",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "43f09f4b-03c4-4fcd-a283-502d1eb2a66a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e7ff055c-5199-4bdc-b66d-2a3f55b969ae",
      "documentation": "Adds a new task to a maintenance window.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.RegisterTaskWithMaintenanceWindow",
      "responses": [
        {
          "uuid": "41056dac-0426-4940-b3e2-af219ef78c76",
          "body": "{\n  \"WindowTaskId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "39dd03a0-598c-4f1b-a134-17779470cb4e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "IdempotentParameterMismatch",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "966f15db-2f65-4825-90b9-5d9170172908",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fbdfe165-fa72-4490-af13-e6b5009791d3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "22140b8b-e13e-4549-95cf-4bf21a0dfb00",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "FeatureNotAvailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1518ffac-3613-4cac-8042-4e252e550c13",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "41ab5907-9ad0-4cad-9360-6ec0a9fbf19f",
      "documentation": "Removes tag keys from the specified resource.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.RemoveTagsFromResource",
      "responses": [
        {
          "uuid": "871a9b90-f10a-4a95-9b4b-22886d8cf575",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "14f12c61-bb2b-45ab-a928-af66e2542d4b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceType",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4f41f18d-0320-40af-839d-58f45f945f49",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidResourceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8fb355c9-1905-45fe-bba9-8a50a8f83828",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "41657db7-abf7-47d1-beed-eff3394f0f1c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyUpdates",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4004bcff-0311-4c26-b784-2d04a666f527",
      "documentation": "<p> <code>ServiceSetting</code> is an account-level setting for an Amazon Web Services service. This setting defines how a user interacts with or uses a service or a feature of a service. For example, if an Amazon Web Services service charges money to the account based on feature or service usage, then the Amazon Web Services service team might create a default setting of \"false\". This means the user can't use this feature unless they change the setting to \"true\" and intentionally opt in for a paid feature.</p> <p>Services map a <code>SettingId</code> object to a setting value. Amazon Web Services services teams define the default value for a <code>SettingId</code>. You can't create a new <code>SettingId</code>, but you can overwrite the default value if you have the <code>ssm:UpdateServiceSetting</code> permission for the setting. Use the <a>GetServiceSetting</a> API operation to view the current value. Use the <a>UpdateServiceSetting</a> API operation to change the default setting. </p> <p>Reset the service setting for the account to the default value as provisioned by the Amazon Web Services service team. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.ResetServiceSetting",
      "responses": [
        {
          "uuid": "5eedeef6-1add-4694-8934-a7bd9fc66936",
          "body": "{\n  \"ServiceSetting\": {\n    \"SettingId\": \"\",\n    \"SettingValue\": \"\",\n    \"LastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"LastModifiedUser\": \"\",\n    \"ARN\": \"\",\n    \"Status\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c0419248-96c5-483e-82b5-2da734f3a7a9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "54feea28-93b1-475a-8b62-b2f67c67fd25",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceSettingNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "339500a3-c0ae-40b8-b16b-ca76d33adfac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyUpdates",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a94c8d58-c280-4953-9b1e-9340a93ab64f",
      "documentation": "<p>Reconnects a session to an instance after it has been disconnected. Connections can be resumed for disconnected sessions, but not terminated sessions.</p> <note> <p>This command is primarily for use by client machines to automatically reconnect during intermittent network issues. It isn't intended for any other use.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.ResumeSession",
      "responses": [
        {
          "uuid": "2f280faf-bc69-4d8a-a084-9646b5c71867",
          "body": "{\n  \"SessionId\": \"\",\n  \"TokenValue\": \"\",\n  \"StreamUrl\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "59d4e99c-4499-4ef5-b73d-4056a92e9e12",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cb44e910-093d-4d22-86a9-0a6343f40176",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f3a0af0f-3b97-4b2a-86e0-4e21ad5751f4",
      "documentation": "Sends a signal to an Automation execution to change the current behavior or status of the execution. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.SendAutomationSignal",
      "responses": [
        {
          "uuid": "bf0a3e5c-05bb-44eb-8cc6-837b1c77a29d",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d7b157a6-a359-447a-b993-4d8e562edace",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AutomationExecutionNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9b835bcc-69fc-4f89-8178-69d8c8f1cea1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AutomationStepNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7bf02dfa-83f5-4ec7-9466-3077d3b2f18e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidAutomationSignalException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5aee6190-9813-445f-b41b-a47df3a8e2f2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "486d1731-2d28-438a-bbf0-c8815df17a9f",
      "documentation": "Runs commands on one or more managed instances.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.SendCommand",
      "responses": [
        {
          "uuid": "ad296c09-dcf0-41c5-9b9f-12817c1eff3a",
          "body": "{\n  \"Command\": {\n    \"CommandId\": \"\",\n    \"DocumentName\": \"\",\n    \"DocumentVersion\": \"\",\n    \"Comment\": \"\",\n    \"ExpiresAfter\": \"{{faker 'date.recent' 365}}\",\n    \"Parameters\": {},\n    \"InstanceIds\": [\n      \"\"\n    ],\n    \"Targets\": [\n      {\n        \"Key\": \"\",\n        \"Values\": [\n          \"\"\n        ]\n      }\n    ],\n    \"RequestedDateTime\": \"{{faker 'date.recent' 365}}\",\n    \"Status\": \"\",\n    \"StatusDetails\": \"\",\n    \"OutputS3Region\": \"\",\n    \"OutputS3BucketName\": \"\",\n    \"OutputS3KeyPrefix\": \"\",\n    \"MaxConcurrency\": \"\",\n    \"MaxErrors\": \"\",\n    \"TargetCount\": {{faker 'random.number'}},\n    \"CompletedCount\": {{faker 'random.number'}},\n    \"ErrorCount\": {{faker 'random.number'}},\n    \"DeliveryTimedOutCount\": {{faker 'random.number'}},\n    \"ServiceRole\": \"\",\n    \"NotificationConfig\": {\n      \"NotificationArn\": \"\",\n      \"NotificationEvents\": [\n        \"{{oneOf (array 'All' 'InProgress' 'Success' 'TimedOut' 'Cancelled' 'Failed')}}\"\n      ],\n      \"NotificationType\": \"\"\n    },\n    \"CloudWatchOutputConfig\": {\n      \"CloudWatchLogGroupName\": \"\",\n      \"CloudWatchOutputEnabled\": {{faker 'random.boolean'}}\n    },\n    \"TimeoutSeconds\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8dfa56f0-3600-4cc7-a8a0-a0879aa4e60f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DuplicateInstanceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1466d1c5-77c8-401f-b71d-6e77091d2bd2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8e2955cb-cdd5-4bb8-9515-3bf2564edf06",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInstanceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "23b7260c-1fd5-48ef-a3e1-8e34275be78d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidDocument",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5ad65f3d-e7b7-4d1e-90a4-060881b3ea19",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidDocumentVersion",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5936e835-d6b2-42ca-b048-f2079c3e7678",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidOutputFolder",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "31c2ad30-de4a-4570-885c-c12a500664f7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidParameters",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "68e55a11-4f3e-4042-a1b6-f2054002da99",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "UnsupportedPlatformType",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "266396c1-512a-4edc-b9e1-20074bfaaf27",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "MaxDocumentSizeExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a9cbe0e7-2ba8-4a87-a16b-4948294ae5ef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidRole",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ac664fd2-327c-41f9-ad4a-113448979f5b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidNotificationConfig",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "217dfe83-df87-4cf7-a52f-e3d6ee6af435",
      "documentation": "Runs an association immediately and only one time. This operation can be helpful when troubleshooting associations.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.StartAssociationsOnce",
      "responses": [
        {
          "uuid": "1343571b-69fa-4f44-959b-ca46ca943dbc",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bf8c708b-bfcb-45d7-9b90-3b9e6c1030cf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidAssociation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e2832066-4634-4452-8220-e7e0a0dd1d71",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AssociationDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "62e95c22-6844-476b-801c-8a8afac9bf06",
      "documentation": "Initiates execution of an Automation runbook.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.StartAutomationExecution",
      "responses": [
        {
          "uuid": "61e2bd57-9f86-4048-9210-ce9d28093873",
          "body": "{\n  \"AutomationExecutionId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "56776da7-73d4-4b2b-82a9-a768e1d90770",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AutomationDefinitionNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bf25a01b-4347-476c-8594-1175b31f887e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidAutomationExecutionParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a266ea75-5c94-423f-89a9-074112e0a36c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "AutomationExecutionLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "000ac25d-b3bc-4086-9cfc-ba134128829c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "AutomationDefinitionVersionNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4fcfb995-8389-446e-945a-0bf6cf25577f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "IdempotentParameterMismatch",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "267cab23-2c87-41f8-b7fa-a44ddbc21acf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidTarget",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f76e84b0-ba9f-4060-9065-709c6dd9087d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "aab0dbbf-33f1-4f90-ae9f-4208820d9fee",
      "documentation": "Creates a change request for Change Manager. The Automation runbooks specified in the change request run only after all required approvals for the change request have been received.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.StartChangeRequestExecution",
      "responses": [
        {
          "uuid": "47b1b68d-5dc5-4c57-8303-292201682530",
          "body": "{\n  \"AutomationExecutionId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5af148b7-25ba-4ec0-8caf-9f33e5725a2a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AutomationDefinitionNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7ef3a5c4-5c34-4ee9-9efd-6f0bc8d7fbaa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidAutomationExecutionParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eb52811f-5936-4c84-948e-e4ef6677267b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "AutomationExecutionLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b3eb014a-3ac1-47b1-8403-ce3a9be25a43",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "AutomationDefinitionVersionNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6f136017-d66a-48d1-9e96-fad45c6cb734",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "IdempotentParameterMismatch",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7294ff63-bda0-41fe-9baf-7553e0b903a5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "38da8fde-6abf-48c9-9cc4-e10ab3402ef7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "AutomationDefinitionNotApprovedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "46165537-156b-4f27-bd16-5e5b5c2e293f",
      "documentation": "<p>Initiates a connection to a target (for example, an instance) for a Session Manager session. Returns a URL and token that can be used to open a WebSocket connection for sending input and receiving outputs.</p> <note> <p>Amazon Web Services CLI usage: <code>start-session</code> is an interactive command that requires the Session Manager plugin to be installed on the client machine making the call. For information, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/session-manager-working-with-install-plugin.html\">Install the Session Manager plugin for the Amazon Web Services CLI</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p> <p>Amazon Web Services Tools for PowerShell usage: Start-SSMSession isn't currently supported by Amazon Web Services Tools for PowerShell on Windows local machines.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.StartSession",
      "responses": [
        {
          "uuid": "7a263a50-452b-40bb-93b6-9ba15360a720",
          "body": "{\n  \"SessionId\": \"\",\n  \"TokenValue\": \"\",\n  \"StreamUrl\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3b2c376c-ff71-4d73-b57c-5e47fb3813b3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDocument",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f21da80b-4f5b-41ff-bc9b-edd72ca347d7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "TargetNotConnected",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f59db36d-f839-47d3-8e1a-74efb2ac8f18",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d7c68ece-8b78-459d-920d-da22a6bb884a",
      "documentation": "Stop an Automation that is currently running.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.StopAutomationExecution",
      "responses": [
        {
          "uuid": "7b94d5fd-f168-4145-95bf-60226ca2ffe5",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c002a220-280c-436c-a3a3-22423ddfc950",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AutomationExecutionNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aee4bea4-d6b6-40f8-9043-0f01bece1226",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidAutomationStatusUpdateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9664739d-8acc-49ac-8375-d24ef0480e8c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "84ddc344-b4fd-48e8-8bbf-b2985404c877",
      "documentation": "Permanently ends a session and closes the data connection between the Session Manager client and SSM Agent on the instance. A terminated session isn't be resumed.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.TerminateSession",
      "responses": [
        {
          "uuid": "4c66655f-2bb3-49d6-8046-cac5a0a93192",
          "body": "{\n  \"SessionId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2ceddcf2-1839-4d42-ad2b-b541cc82adfb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a4921ea2-ca43-4509-88cf-627ab2f0257d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9fd42a2e-afb4-4e7b-b4dc-09f21e774cfa",
      "documentation": "Remove a label or labels from a parameter.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.UnlabelParameterVersion",
      "responses": [
        {
          "uuid": "548c8ded-fe35-472d-93a4-37f30b2efe9a",
          "body": "{\n  \"RemovedLabels\": [\n    \"\"\n  ],\n  \"InvalidLabels\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fafc8b12-0667-4c9c-b3ac-ef4490b15283",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8bfb62f6-2401-4be0-9b1c-cd757926d59a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "TooManyUpdates",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4cd805bf-d033-4291-8058-8dad27c108d8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ParameterNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f3a5f084-4d5b-4ddc-999c-101882ee62e3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ParameterVersionNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "05891d17-62bb-44a1-b95c-504cac7309e8",
      "documentation": "<p>Updates an association. You can update the association name and version, the document version, schedule, parameters, and Amazon Simple Storage Service (Amazon S3) output. </p> <p>In order to call this API operation, your Identity and Access Management (IAM) user account, group, or role must be configured with permission to call the <a>DescribeAssociation</a> API operation. If you don't have permission to call <code>DescribeAssociation</code>, then you receive the following error: <code>An error occurred (AccessDeniedException) when calling the UpdateAssociation operation: User: &lt;user_arn&gt; isn't authorized to perform: ssm:DescribeAssociation on resource: &lt;resource_arn&gt;</code> </p> <important> <p>When you update an association, the association immediately runs against the specified targets.</p> </important>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.UpdateAssociation",
      "responses": [
        {
          "uuid": "c78bbdcf-cbdf-4735-a575-aa59c7c035ab",
          "body": "{\n  \"AssociationDescription\": {\n    \"Name\": \"\",\n    \"InstanceId\": \"\",\n    \"AssociationVersion\": \"\",\n    \"Date\": \"{{faker 'date.recent' 365}}\",\n    \"LastUpdateAssociationDate\": \"{{faker 'date.recent' 365}}\",\n    \"Status\": {\n      \"Date\": \"{{faker 'date.recent' 365}}\",\n      \"Name\": \"\",\n      \"Message\": \"\",\n      \"AdditionalInfo\": \"\"\n    },\n    \"Overview\": {\n      \"Status\": \"\",\n      \"DetailedStatus\": \"\",\n      \"AssociationStatusAggregatedCount\": {}\n    },\n    \"DocumentVersion\": \"\",\n    \"AutomationTargetParameterName\": \"\",\n    \"Parameters\": {},\n    \"AssociationId\": \"\",\n    \"Targets\": [\n      {\n        \"Key\": \"\",\n        \"Values\": [\n          \"\"\n        ]\n      }\n    ],\n    \"ScheduleExpression\": \"\",\n    \"OutputLocation\": {\n      \"S3Location\": {\n        \"OutputS3Region\": \"\",\n        \"OutputS3BucketName\": \"\",\n        \"OutputS3KeyPrefix\": \"\"\n      }\n    },\n    \"LastExecutionDate\": \"{{faker 'date.recent' 365}}\",\n    \"LastSuccessfulExecutionDate\": \"{{faker 'date.recent' 365}}\",\n    \"AssociationName\": \"\",\n    \"MaxErrors\": \"\",\n    \"MaxConcurrency\": \"\",\n    \"ComplianceSeverity\": \"\",\n    \"SyncCompliance\": \"\",\n    \"ApplyOnlyAtCronInterval\": {{faker 'random.boolean'}},\n    \"CalendarNames\": [\n      \"\"\n    ],\n    \"TargetLocations\": [\n      {\n        \"Accounts\": [\n          \"\"\n        ],\n        \"Regions\": [\n          \"\"\n        ],\n        \"TargetLocationMaxConcurrency\": \"\",\n        \"TargetLocationMaxErrors\": \"\",\n        \"ExecutionRoleName\": \"\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2d621aeb-1ffd-4def-8212-93b5514a77f8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8003d173-dedd-48f5-9f6e-2e42d89c9fed",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidSchedule",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1e5bfcb6-b9aa-4b30-8476-4bd2de294b76",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameters",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7d209bf8-e07c-4497-a922-03cf46966598",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidOutputLocation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7f8e32e4-ca3b-4361-bc36-afcc83d3026e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidDocumentVersion",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "60ecdb38-aa5a-4c99-9760-9bc3cda6a153",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AssociationDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5f1be834-414a-40b4-a2d5-ea3f1e36da4d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidUpdate",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1d5e363e-f7fb-4f49-88f0-3916da1422c8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "TooManyUpdates",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "36ec0413-49c2-49f0-8367-e73fa90bf3ca",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidDocument",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dce529db-d332-46ef-9132-4c1135a3b617",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidTarget",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e562a3a0-0076-4066-8773-767293902af1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidAssociationVersion",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a7636185-3372-4d4f-93be-3e8efd85faa5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "AssociationVersionLimitExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "44e5ecfa-32da-4006-85f7-e87f9506e5bf",
      "documentation": "<p>Updates the status of the Amazon Web Services Systems Manager document (SSM document) associated with the specified instance.</p> <p> <code>UpdateAssociationStatus</code> is primarily used by the Amazon Web Services Systems Manager Agent (SSM Agent) to report status updates about your associations and is only used for associations created with the <code>InstanceId</code> legacy parameter.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.UpdateAssociationStatus",
      "responses": [
        {
          "uuid": "3a275027-741b-4887-ad25-54c16ccbb141",
          "body": "{\n  \"AssociationDescription\": {\n    \"Name\": \"\",\n    \"InstanceId\": \"\",\n    \"AssociationVersion\": \"\",\n    \"Date\": \"{{faker 'date.recent' 365}}\",\n    \"LastUpdateAssociationDate\": \"{{faker 'date.recent' 365}}\",\n    \"Status\": {\n      \"Date\": \"{{faker 'date.recent' 365}}\",\n      \"Name\": \"\",\n      \"Message\": \"\",\n      \"AdditionalInfo\": \"\"\n    },\n    \"Overview\": {\n      \"Status\": \"\",\n      \"DetailedStatus\": \"\",\n      \"AssociationStatusAggregatedCount\": {}\n    },\n    \"DocumentVersion\": \"\",\n    \"AutomationTargetParameterName\": \"\",\n    \"Parameters\": {},\n    \"AssociationId\": \"\",\n    \"Targets\": [\n      {\n        \"Key\": \"\",\n        \"Values\": [\n          \"\"\n        ]\n      }\n    ],\n    \"ScheduleExpression\": \"\",\n    \"OutputLocation\": {\n      \"S3Location\": {\n        \"OutputS3Region\": \"\",\n        \"OutputS3BucketName\": \"\",\n        \"OutputS3KeyPrefix\": \"\"\n      }\n    },\n    \"LastExecutionDate\": \"{{faker 'date.recent' 365}}\",\n    \"LastSuccessfulExecutionDate\": \"{{faker 'date.recent' 365}}\",\n    \"AssociationName\": \"\",\n    \"MaxErrors\": \"\",\n    \"MaxConcurrency\": \"\",\n    \"ComplianceSeverity\": \"\",\n    \"SyncCompliance\": \"\",\n    \"ApplyOnlyAtCronInterval\": {{faker 'random.boolean'}},\n    \"CalendarNames\": [\n      \"\"\n    ],\n    \"TargetLocations\": [\n      {\n        \"Accounts\": [\n          \"\"\n        ],\n        \"Regions\": [\n          \"\"\n        ],\n        \"TargetLocationMaxConcurrency\": \"\",\n        \"TargetLocationMaxErrors\": \"\",\n        \"ExecutionRoleName\": \"\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a3f9a5bc-bced-420b-850d-409079800360",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7f528f58-4d59-4a8f-82a0-5d853434f102",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInstanceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d85fcd5f-8fab-467a-bb7a-4a2c9d00f4c2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDocument",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "88c1efd1-3ef4-4d98-b1a1-078506997517",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "AssociationDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ae5b8ce9-ae2e-4dcd-96e6-37ed8c9aebe7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "StatusUnchanged",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c66cd165-c186-4572-94ae-bfcfdb5299c5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "TooManyUpdates",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f9f36200-2e77-4a54-a698-876b498173e5",
      "documentation": "Updates one or more values for an SSM document.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.UpdateDocument",
      "responses": [
        {
          "uuid": "6b32c455-44dd-4b66-92d5-64ed8d10e426",
          "body": "{\n  \"DocumentDescription\": {\n    \"Sha1\": \"\",\n    \"Hash\": \"\",\n    \"HashType\": \"\",\n    \"Name\": \"\",\n    \"DisplayName\": \"\",\n    \"VersionName\": \"\",\n    \"Owner\": \"\",\n    \"CreatedDate\": \"{{faker 'date.recent' 365}}\",\n    \"Status\": \"\",\n    \"StatusInformation\": \"\",\n    \"DocumentVersion\": \"\",\n    \"Description\": \"\",\n    \"Parameters\": [\n      {\n        \"Name\": \"\",\n        \"Type\": \"\",\n        \"Description\": \"\",\n        \"DefaultValue\": \"\"\n      }\n    ],\n    \"PlatformTypes\": [\n      \"{{oneOf (array 'Windows' 'Linux')}}\"\n    ],\n    \"DocumentType\": \"\",\n    \"SchemaVersion\": \"\",\n    \"LatestVersion\": \"\",\n    \"DefaultVersion\": \"\",\n    \"DocumentFormat\": \"\",\n    \"TargetType\": \"\",\n    \"Tags\": [\n      {\n        \"Key\": \"\",\n        \"Value\": \"\"\n      }\n    ],\n    \"AttachmentsInformation\": [\n      {\n        \"Name\": \"\"\n      }\n    ],\n    \"Requires\": [\n      {\n        \"Name\": \"\",\n        \"Version\": \"\"\n      }\n    ],\n    \"Author\": \"\",\n    \"ReviewInformation\": [\n      {\n        \"ReviewedTime\": \"{{faker 'date.recent' 365}}\",\n        \"Status\": \"\",\n        \"Reviewer\": \"\"\n      }\n    ],\n    \"ApprovedVersion\": \"\",\n    \"PendingReviewVersion\": \"\",\n    \"ReviewStatus\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8e83e9b3-7691-4325-b14b-3330193fdb78",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "MaxDocumentSizeExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0c2ea313-6275-4352-b54b-44b8e379346f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DocumentVersionLimitExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6ce2bfb4-74b2-485a-b835-f56abd32c77b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8bf25195-8d2d-41aa-8768-85d580a4b677",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "DuplicateDocumentContent",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0106e914-a6c7-47b2-9be9-94a7c1bd0692",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "DuplicateDocumentVersionName",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5031f7a7-c4e3-4346-95b2-c8207856580c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidDocumentContent",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e7a95181-e2ab-4511-80fd-41f7b870c357",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidDocumentVersion",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bc745507-a6f7-46fe-9665-6020b0dd949e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidDocumentSchemaVersion",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a6945879-07bf-4c7d-a989-48578ac28e89",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidDocument",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "82f2ddb8-07a9-465e-9fb5-7c74237c28e3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidDocumentOperation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0e7a3bcc-d568-4873-a2f8-8943918f2eeb",
      "documentation": "Set the default version of a document. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.UpdateDocumentDefaultVersion",
      "responses": [
        {
          "uuid": "be436fc0-0774-44a6-864c-fd9f993def29",
          "body": "{\n  \"Description\": {\n    \"Name\": \"\",\n    \"DefaultVersion\": \"\",\n    \"DefaultVersionName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f75d0aeb-7735-4cc8-a8ce-b828212618d2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1fcb2d9b-1d1f-483a-9178-c7b80281093b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDocument",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0880b598-500c-4359-a515-5c2daf8c1480",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDocumentVersion",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8d96f508-a792-43e8-bc9a-f2ba1fe0a885",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidDocumentSchemaVersion",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b27fcc56-31ec-499d-9e7b-6cf28716849a",
      "documentation": "Updates information related to approval reviews for a specific version of a change template in Change Manager.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.UpdateDocumentMetadata",
      "responses": [
        {
          "uuid": "8c5cd99d-f519-4aad-a7c5-1ac1d7b0c3c7",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c9416ca3-bb04-4abe-92aa-4ad99536969b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3680f6d8-8c91-4a48-847a-78645c401b0d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDocument",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cb252087-51b8-4f0d-b098-6ca8426b6ea2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDocumentOperation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "beab3d7a-29bf-455e-be83-0ae28980cee9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidDocumentVersion",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f779ef1e-ff0f-4ac5-a144-f4edaf96713f",
      "documentation": "<p>Updates an existing maintenance window. Only specified parameters are modified.</p> <note> <p>The value you specify for <code>Duration</code> determines the specific end time for the maintenance window based on the time it begins. No maintenance window tasks are permitted to start after the resulting endtime minus the number of hours you specify for <code>Cutoff</code>. For example, if the maintenance window starts at 3 PM, the duration is three hours, and the value you specify for <code>Cutoff</code> is one hour, no maintenance window tasks can start after 5 PM.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.UpdateMaintenanceWindow",
      "responses": [
        {
          "uuid": "9dd49f39-2464-4a7c-b679-714c4d9ed9fe",
          "body": "{\n  \"WindowId\": \"\",\n  \"Name\": \"\",\n  \"Description\": \"\",\n  \"StartDate\": \"\",\n  \"EndDate\": \"\",\n  \"Schedule\": \"\",\n  \"ScheduleTimezone\": \"\",\n  \"ScheduleOffset\": {{faker 'random.number'}},\n  \"Duration\": {{faker 'random.number'}},\n  \"Cutoff\": {{faker 'random.number'}},\n  \"AllowUnassociatedTargets\": {{faker 'random.boolean'}},\n  \"Enabled\": {{faker 'random.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ebbd221e-05ba-4123-8400-64575bbdcfdc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ce3f5a9c-8e8f-4735-8f64-ca1f150dda77",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a61566bf-cb0c-4c30-8ae3-fadf4482f4da",
      "documentation": "<p>Modifies the target of an existing maintenance window. You can change the following:</p> <ul> <li> <p>Name</p> </li> <li> <p>Description</p> </li> <li> <p>Owner</p> </li> <li> <p>IDs for an ID target</p> </li> <li> <p>Tags for a Tag target</p> </li> <li> <p>From any supported tag type to another. The three supported tag types are ID target, Tag target, and resource group. For more information, see <a>Target</a>.</p> </li> </ul> <note> <p>If a parameter is null, then the corresponding field isn't modified.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.UpdateMaintenanceWindowTarget",
      "responses": [
        {
          "uuid": "4ce316c3-583f-47e2-be7c-9e70ce1cead8",
          "body": "{\n  \"WindowId\": \"\",\n  \"WindowTargetId\": \"\",\n  \"Targets\": [\n    {\n      \"Key\": \"\",\n      \"Values\": [\n        \"\"\n      ]\n    }\n  ],\n  \"OwnerInformation\": \"\",\n  \"Name\": \"\",\n  \"Description\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "12f29cb4-3cda-4005-b559-4075302b0c17",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e9478589-f37c-41d1-8c17-ca320dbeed31",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "60a02e71-eaa9-47f8-a8a3-7bff1c43b7e5",
      "documentation": "<p>Modifies a task assigned to a maintenance window. You can't change the task type, but you can change the following values:</p> <ul> <li> <p> <code>TaskARN</code>. For example, you can change a <code>RUN_COMMAND</code> task from <code>AWS-RunPowerShellScript</code> to <code>AWS-RunShellScript</code>.</p> </li> <li> <p> <code>ServiceRoleArn</code> </p> </li> <li> <p> <code>TaskInvocationParameters</code> </p> </li> <li> <p> <code>Priority</code> </p> </li> <li> <p> <code>MaxConcurrency</code> </p> </li> <li> <p> <code>MaxErrors</code> </p> </li> </ul> <note> <p>One or more targets must be specified for maintenance window Run Command-type tasks. Depending on the task, targets are optional for other maintenance window task types (Automation, Lambda, and Step Functions). For more information about running tasks that don't specify targets, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/maintenance-windows-targetless-tasks.html\">Registering maintenance window tasks without targets</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p> </note> <p>If the value for a parameter in <code>UpdateMaintenanceWindowTask</code> is null, then the corresponding field isn't modified. If you set <code>Replace</code> to true, then all fields required by the <a>RegisterTaskWithMaintenanceWindow</a> operation are required for this request. Optional fields that aren't specified are set to null.</p> <important> <p>When you update a maintenance window task that has options specified in <code>TaskInvocationParameters</code>, you must provide again all the <code>TaskInvocationParameters</code> values that you want to retain. The values you don't specify again are removed. For example, suppose that when you registered a Run Command task, you specified <code>TaskInvocationParameters</code> values for <code>Comment</code>, <code>NotificationConfig</code>, and <code>OutputS3BucketName</code>. If you update the maintenance window task and specify only a different <code>OutputS3BucketName</code> value, the values for <code>Comment</code> and <code>NotificationConfig</code> are removed.</p> </important>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.UpdateMaintenanceWindowTask",
      "responses": [
        {
          "uuid": "f681c2b8-aa44-405d-a901-8da454d6e0df",
          "body": "{\n  \"WindowId\": \"\",\n  \"WindowTaskId\": \"\",\n  \"Targets\": [\n    {\n      \"Key\": \"\",\n      \"Values\": [\n        \"\"\n      ]\n    }\n  ],\n  \"TaskArn\": \"\",\n  \"ServiceRoleArn\": \"\",\n  \"TaskParameters\": {},\n  \"TaskInvocationParameters\": {\n    \"RunCommand\": {\n      \"Comment\": \"\",\n      \"CloudWatchOutputConfig\": {\n        \"CloudWatchLogGroupName\": \"\",\n        \"CloudWatchOutputEnabled\": {{faker 'random.boolean'}}\n      },\n      \"DocumentHash\": \"\",\n      \"DocumentHashType\": \"\",\n      \"DocumentVersion\": \"\",\n      \"NotificationConfig\": {\n        \"NotificationArn\": \"\",\n        \"NotificationEvents\": [\n          \"{{oneOf (array 'All' 'InProgress' 'Success' 'TimedOut' 'Cancelled' 'Failed')}}\"\n        ],\n        \"NotificationType\": \"\"\n      },\n      \"OutputS3BucketName\": \"\",\n      \"OutputS3KeyPrefix\": \"\",\n      \"Parameters\": {},\n      \"ServiceRoleArn\": \"\",\n      \"TimeoutSeconds\": {{faker 'random.number'}}\n    },\n    \"Automation\": {\n      \"DocumentVersion\": \"\",\n      \"Parameters\": {}\n    },\n    \"StepFunctions\": {\n      \"Input\": \"\",\n      \"Name\": \"\"\n    },\n    \"Lambda\": {\n      \"ClientContext\": \"\",\n      \"Qualifier\": \"\",\n      \"Payload\": \"\"\n    }\n  },\n  \"Priority\": {{faker 'random.number'}},\n  \"MaxConcurrency\": \"\",\n  \"MaxErrors\": \"\",\n  \"LoggingInfo\": {\n    \"S3BucketName\": \"\",\n    \"S3KeyPrefix\": \"\",\n    \"S3Region\": \"\"\n  },\n  \"Name\": \"\",\n  \"Description\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d853a3fe-aa49-4235-b214-c581c3194746",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f2d93f54-48e9-4ab8-bbc5-d2ecdfbf667d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "608ee7cd-3620-4553-9fdf-c4b95517eeff",
      "documentation": "Changes the Identity and Access Management (IAM) role that is assigned to the on-premises instance or virtual machines (VM). IAM roles are first assigned to these hybrid instances during the activation process. For more information, see <a>CreateActivation</a>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.UpdateManagedInstanceRole",
      "responses": [
        {
          "uuid": "3e91a093-3937-4da1-bf8f-f9195e8eccdb",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b2727b74-02c8-4d37-a2d4-1f8903b285f0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInstanceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6c793184-032c-4569-8160-0bbd8f65d051",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1a9ba3b4-de4a-4c70-ae83-3b7c338431fe",
      "documentation": "<p>Edit or change an OpsItem. You must have permission in Identity and Access Management (IAM) to update an OpsItem. For more information, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter-getting-started.html\">Getting started with OpsCenter</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p> <p>Operations engineers and IT professionals use Amazon Web Services Systems Manager OpsCenter to view, investigate, and remediate operational issues impacting the performance and health of their Amazon Web Services resources. For more information, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter.html\">OpsCenter</a> in the <i>Amazon Web Services Systems Manager User Guide</i>. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.UpdateOpsItem",
      "responses": [
        {
          "uuid": "4aeda322-acf9-481e-b409-63d1f7e83af8",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "84de949e-947c-4791-8d12-557e45cc9545",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "53667fc1-3ce4-4ddf-be22-adcc719be8ca",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OpsItemNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e7824847-0b93-4370-b959-eb9a1bd5dd17",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OpsItemAlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f3213944-8f78-4007-8df7-e814d128abaa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OpsItemLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7ac1d700-5b90-496f-be83-c7db1da774cb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "OpsItemInvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "172066f2-87d5-42f2-966a-95fff013fbea",
      "documentation": "Amazon Web Services Systems Manager calls this API operation when you edit OpsMetadata in Application Manager.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.UpdateOpsMetadata",
      "responses": [
        {
          "uuid": "fb5a0656-d121-47bf-bcf3-41e83591599f",
          "body": "{\n  \"OpsMetadataArn\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "16d0eef7-84b7-4dae-bc5c-f21ffea3a193",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "OpsMetadataNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "35f2eed1-136f-4932-9943-b2af5501b571",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OpsMetadataInvalidArgumentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fb2cace9-ac99-45c7-ab82-9b858ff389c0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OpsMetadataKeyLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9a652dec-67bc-446b-91f1-0e1fd499e558",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OpsMetadataTooManyUpdatesException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6a739e82-6cc6-4310-b598-e242fd537d97",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5892ddba-52da-4967-800c-5ea5fc362d4b",
      "documentation": "<p>Modifies an existing patch baseline. Fields not specified in the request are left unchanged.</p> <note> <p>For information about valid key-value pairs in <code>PatchFilters</code> for each supported operating system type, see <a>PatchFilter</a>.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.UpdatePatchBaseline",
      "responses": [
        {
          "uuid": "1317ca18-5c95-4592-acb8-e158c59ba23b",
          "body": "{\n  \"BaselineId\": \"\",\n  \"Name\": \"\",\n  \"OperatingSystem\": \"\",\n  \"GlobalFilters\": {\n    \"PatchFilters\": [\n      {\n        \"Key\": \"\",\n        \"Values\": [\n          \"\"\n        ]\n      }\n    ]\n  },\n  \"ApprovalRules\": {\n    \"PatchRules\": [\n      {\n        \"PatchFilterGroup\": {\n          \"PatchFilters\": [\n            {\n              \"Key\": \"\",\n              \"Values\": [\n                \"\"\n              ]\n            }\n          ]\n        },\n        \"ComplianceLevel\": \"\",\n        \"ApproveAfterDays\": {{faker 'random.number'}},\n        \"ApproveUntilDate\": \"\",\n        \"EnableNonSecurity\": {{faker 'random.boolean'}}\n      }\n    ]\n  },\n  \"ApprovedPatches\": [\n    \"\"\n  ],\n  \"ApprovedPatchesComplianceLevel\": \"\",\n  \"ApprovedPatchesEnableNonSecurity\": {{faker 'random.boolean'}},\n  \"RejectedPatches\": [\n    \"\"\n  ],\n  \"RejectedPatchesAction\": \"\",\n  \"CreatedDate\": \"{{faker 'date.recent' 365}}\",\n  \"ModifiedDate\": \"{{faker 'date.recent' 365}}\",\n  \"Description\": \"\",\n  \"Sources\": [\n    {\n      \"Name\": \"\",\n      \"Products\": [\n        \"\"\n      ],\n      \"Configuration\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a29a0e30-795a-420a-8a60-5c8e332acdef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "08540762-1af8-47f1-bcb4-20a6af3286f9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "662277bf-1345-4b15-aa87-2a4e81f038b5",
      "documentation": "<p>Update a resource data sync. After you create a resource data sync for a Region, you can't change the account options for that sync. For example, if you create a sync in the us-east-2 (Ohio) Region and you choose the <code>Include only the current account</code> option, you can't edit that sync later and choose the <code>Include all accounts from my Organizations configuration</code> option. Instead, you must delete the first resource data sync, and create a new one.</p> <note> <p>This API operation only supports a resource data sync that was created with a SyncFromSource <code>SyncType</code>.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.UpdateResourceDataSync",
      "responses": [
        {
          "uuid": "518a4b0a-fe8f-46a5-bf39-68cb26619a9b",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1af4cfc1-38d6-4e97-8dba-cfab3ede8d92",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceDataSyncNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "49987859-bd6f-4cf3-a429-c1c83d2cb1c1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceDataSyncInvalidConfigurationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "93f6062b-f4fc-4901-a194-6d5e75f1daf8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceDataSyncConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4924bd8e-52a2-4b09-936e-29cf4c86191b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3842321b-1d3c-4ed9-8478-150b612b5450",
      "documentation": "<p> <code>ServiceSetting</code> is an account-level setting for an Amazon Web Services service. This setting defines how a user interacts with or uses a service or a feature of a service. For example, if an Amazon Web Services service charges money to the account based on feature or service usage, then the Amazon Web Services service team might create a default setting of \"false\". This means the user can't use this feature unless they change the setting to \"true\" and intentionally opt in for a paid feature.</p> <p>Services map a <code>SettingId</code> object to a setting value. Amazon Web Services services teams define the default value for a <code>SettingId</code>. You can't create a new <code>SettingId</code>, but you can overwrite the default value if you have the <code>ssm:UpdateServiceSetting</code> permission for the setting. Use the <a>GetServiceSetting</a> API operation to view the current value. Or, use the <a>ResetServiceSetting</a> to change the value back to the original value defined by the Amazon Web Services service team.</p> <p>Update the service setting for the account. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.UpdateServiceSetting",
      "responses": [
        {
          "uuid": "ee244faf-40e4-4d2e-bf25-16f5cce6cfe3",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cbc67195-ee7f-4585-9578-bbf32fb2a61f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2122979a-813a-4145-9cf9-cde2374aa8fd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceSettingNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4a218cd0-03c5-487b-88e0-f7ebb7b3a672",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyUpdates",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}