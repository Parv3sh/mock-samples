{
  "uuid": "a38df229-dbbf-4807-a70d-24061da0856b",
  "lastMigration": 19,
  "name": "AWS MediaConnect",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "161edd9c-07fa-4bbc-8e7b-b1c3c182da85",
      "documentation": "Adds media streams to an existing flow. After you add a media stream to a flow, you can associate it with a source and/or an output that uses the ST 2110 JPEG XS or CDI protocol.",
      "method": "post",
      "endpoint": "v1/flows/:flowArn/mediaStreams",
      "responses": [
        {
          "uuid": "81fa0b86-19d6-444e-bb42-9f34c326fae9",
          "body": "{\n  \"FlowArn\": \"\",\n  \"MediaStreams\": [\n    {\n      \"Attributes\": {\n        \"Fmtp\": {\n          \"ChannelOrder\": \"\",\n          \"Colorimetry\": \"\",\n          \"ExactFramerate\": \"\",\n          \"Par\": \"\",\n          \"Range\": \"\",\n          \"ScanMode\": \"\",\n          \"Tcs\": \"\"\n        },\n        \"Lang\": \"\"\n      },\n      \"ClockRate\": {{faker 'random.number'}},\n      \"Description\": \"\",\n      \"Fmt\": {{faker 'random.number'}},\n      \"MediaStreamId\": {{faker 'random.number'}},\n      \"MediaStreamName\": \"\",\n      \"MediaStreamType\": \"\",\n      \"VideoFormat\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "de83c0b3-bfeb-40b6-8945-bc27f9242032",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3dd129f3-dd57-4c8c-99fa-8fb2746d0b00",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fb15bd45-dd6d-4b07-8411-3c00c45d23ea",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d96dd9b9-4d2b-41f1-b959-6b8b1316f3d7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "09e3bd3b-a699-4b11-bebf-48f0bd383ec6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e64d1686-6ed1-40ae-8efb-b4a5a2d3cac5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b3d25cb1-3943-4454-b89b-8d4f9f71fe37",
      "documentation": "Adds outputs to an existing flow. You can create up to 50 outputs per flow.",
      "method": "post",
      "endpoint": "v1/flows/:flowArn/outputs",
      "responses": [
        {
          "uuid": "377f7fb4-4ad3-494a-bc60-35bf3809bf6a",
          "body": "{\n  \"FlowArn\": \"\",\n  \"Outputs\": [\n    {\n      \"DataTransferSubscriberFeePercent\": {{faker 'random.number'}},\n      \"Description\": \"\",\n      \"Destination\": \"\",\n      \"Encryption\": {\n        \"Algorithm\": \"\",\n        \"ConstantInitializationVector\": \"\",\n        \"DeviceId\": \"\",\n        \"KeyType\": \"\",\n        \"Region\": \"\",\n        \"ResourceId\": \"\",\n        \"RoleArn\": \"\",\n        \"SecretArn\": \"\",\n        \"Url\": \"\"\n      },\n      \"EntitlementArn\": \"\",\n      \"ListenerAddress\": \"\",\n      \"MediaLiveInputArn\": \"\",\n      \"MediaStreamOutputConfigurations\": [\n        {\n          \"DestinationConfigurations\": [\n            {\n              \"DestinationIp\": \"\",\n              \"DestinationPort\": {{faker 'random.number'}},\n              \"Interface\": {\n                \"Name\": \"\"\n              },\n              \"OutboundIp\": \"\"\n            }\n          ],\n          \"EncodingName\": \"\",\n          \"EncodingParameters\": {\n            \"CompressionFactor\": {{faker 'random.float'}},\n            \"EncoderProfile\": \"\"\n          },\n          \"MediaStreamName\": \"\"\n        }\n      ],\n      \"Name\": \"\",\n      \"OutputArn\": \"\",\n      \"Port\": {{faker 'random.number'}},\n      \"Transport\": {\n        \"CidrAllowList\": [\n          \"\"\n        ],\n        \"MaxBitrate\": {{faker 'random.number'}},\n        \"MaxLatency\": {{faker 'random.number'}},\n        \"MaxSyncBuffer\": {{faker 'random.number'}},\n        \"MinLatency\": {{faker 'random.number'}},\n        \"Protocol\": \"\",\n        \"RemoteId\": \"\",\n        \"SmoothingLatency\": {{faker 'random.number'}},\n        \"StreamId\": \"\"\n      },\n      \"VpcInterfaceAttachment\": {\n        \"VpcInterfaceName\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fdeeb1e5-3ae4-445b-b6a9-60f32cd41943",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AddFlowOutputs420Exception",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d5f0c725-299b-4e2a-b5a0-ed65e6a67acd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f9eaf26f-df85-4b78-9c57-2821ff1807d5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cffa3c5f-4995-49ff-8743-06e72d9a79a9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c297d9aa-cead-4539-bdd1-05e854251a57",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3f55bf9b-4c69-4064-8337-2efa267d601d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a992a39d-0352-4db1-8dc8-7b604921e822",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "725daa67-5792-4d96-a946-8bb1aaee6669",
      "documentation": "Adds Sources to flow",
      "method": "post",
      "endpoint": "v1/flows/:flowArn/source",
      "responses": [
        {
          "uuid": "c09ac6ed-026b-475c-926e-abf3e4938b53",
          "body": "{\n  \"FlowArn\": \"\",\n  \"Sources\": [\n    {\n      \"DataTransferSubscriberFeePercent\": {{faker 'random.number'}},\n      \"Decryption\": {\n        \"Algorithm\": \"\",\n        \"ConstantInitializationVector\": \"\",\n        \"DeviceId\": \"\",\n        \"KeyType\": \"\",\n        \"Region\": \"\",\n        \"ResourceId\": \"\",\n        \"RoleArn\": \"\",\n        \"SecretArn\": \"\",\n        \"Url\": \"\"\n      },\n      \"Description\": \"\",\n      \"EntitlementArn\": \"\",\n      \"IngestIp\": \"\",\n      \"IngestPort\": {{faker 'random.number'}},\n      \"MediaStreamSourceConfigurations\": [\n        {\n          \"EncodingName\": \"\",\n          \"InputConfigurations\": [\n            {\n              \"InputIp\": \"\",\n              \"InputPort\": {{faker 'random.number'}},\n              \"Interface\": {\n                \"Name\": \"\"\n              }\n            }\n          ],\n          \"MediaStreamName\": \"\"\n        }\n      ],\n      \"Name\": \"\",\n      \"SourceArn\": \"\",\n      \"Transport\": {\n        \"CidrAllowList\": [\n          \"\"\n        ],\n        \"MaxBitrate\": {{faker 'random.number'}},\n        \"MaxLatency\": {{faker 'random.number'}},\n        \"MaxSyncBuffer\": {{faker 'random.number'}},\n        \"MinLatency\": {{faker 'random.number'}},\n        \"Protocol\": \"\",\n        \"RemoteId\": \"\",\n        \"SmoothingLatency\": {{faker 'random.number'}},\n        \"StreamId\": \"\"\n      },\n      \"VpcInterfaceName\": \"\",\n      \"WhitelistCidr\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4fa41b4f-12f3-4641-805a-a873f4208ead",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e4e2822d-1f0f-42c9-84df-38bad3f062c2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7370efec-dca6-429b-8cb8-fdb7f84f91ad",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "23e18506-5ff0-4fc5-be92-8a31d1081b04",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f5f1c1ed-801d-4538-b726-76d76b628ca4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7e54bb83-a2ed-403a-a691-1c3b2460fae5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e77130d6-694a-488e-8127-49722484a324",
      "documentation": "Adds VPC interfaces to flow",
      "method": "post",
      "endpoint": "v1/flows/:flowArn/vpcInterfaces",
      "responses": [
        {
          "uuid": "67dc2844-542b-47cd-baab-8c1963d115c0",
          "body": "{\n  \"FlowArn\": \"\",\n  \"VpcInterfaces\": [\n    {\n      \"Name\": \"\",\n      \"NetworkInterfaceIds\": [\n        \"\"\n      ],\n      \"NetworkInterfaceType\": \"\",\n      \"RoleArn\": \"\",\n      \"SecurityGroupIds\": [\n        \"\"\n      ],\n      \"SubnetId\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a6aa1725-7f61-49ca-951f-924c3b254817",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "166057c5-b27d-4dd1-9dc5-3f12c70dc5a5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "22500667-c56b-4e01-927e-778f0e9781bb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "16471126-3b64-4de6-b2ac-d3e703b3d50b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5346231d-7aab-4a3d-99a8-d739785ce4df",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7802ce0d-a901-4ce0-9f5f-3b3c58ebba2b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f5c861c8-e479-49d4-b6ff-0dc217e2077c",
      "documentation": "Creates a new flow. The request must include one source. The request optionally can include outputs (up to 50) and entitlements (up to 50).",
      "method": "post",
      "endpoint": "v1/flows",
      "responses": [
        {
          "uuid": "3c11e8e6-eb59-4ec6-9b30-5d80854cd642",
          "body": "{\n  \"Flow\": {\n    \"AvailabilityZone\": \"\",\n    \"Description\": \"\",\n    \"EgressIp\": \"\",\n    \"Entitlements\": [\n      {\n        \"DataTransferSubscriberFeePercent\": {{faker 'random.number'}},\n        \"Description\": \"\",\n        \"Encryption\": {\n          \"Algorithm\": \"\",\n          \"ConstantInitializationVector\": \"\",\n          \"DeviceId\": \"\",\n          \"KeyType\": \"\",\n          \"Region\": \"\",\n          \"ResourceId\": \"\",\n          \"RoleArn\": \"\",\n          \"SecretArn\": \"\",\n          \"Url\": \"\"\n        },\n        \"EntitlementArn\": \"\",\n        \"EntitlementStatus\": \"\",\n        \"Name\": \"\",\n        \"Subscribers\": [\n          \"\"\n        ]\n      }\n    ],\n    \"FlowArn\": \"\",\n    \"MediaStreams\": [\n      {\n        \"Attributes\": {\n          \"Fmtp\": {\n            \"ChannelOrder\": \"\",\n            \"Colorimetry\": \"\",\n            \"ExactFramerate\": \"\",\n            \"Par\": \"\",\n            \"Range\": \"\",\n            \"ScanMode\": \"\",\n            \"Tcs\": \"\"\n          },\n          \"Lang\": \"\"\n        },\n        \"ClockRate\": {{faker 'random.number'}},\n        \"Description\": \"\",\n        \"Fmt\": {{faker 'random.number'}},\n        \"MediaStreamId\": {{faker 'random.number'}},\n        \"MediaStreamName\": \"\",\n        \"MediaStreamType\": \"\",\n        \"VideoFormat\": \"\"\n      }\n    ],\n    \"Name\": \"\",\n    \"Outputs\": [\n      {\n        \"DataTransferSubscriberFeePercent\": {{faker 'random.number'}},\n        \"Description\": \"\",\n        \"Destination\": \"\",\n        \"Encryption\": {\n          \"Algorithm\": \"\",\n          \"ConstantInitializationVector\": \"\",\n          \"DeviceId\": \"\",\n          \"KeyType\": \"\",\n          \"Region\": \"\",\n          \"ResourceId\": \"\",\n          \"RoleArn\": \"\",\n          \"SecretArn\": \"\",\n          \"Url\": \"\"\n        },\n        \"EntitlementArn\": \"\",\n        \"ListenerAddress\": \"\",\n        \"MediaLiveInputArn\": \"\",\n        \"MediaStreamOutputConfigurations\": [\n          {\n            \"DestinationConfigurations\": [\n              {\n                \"DestinationIp\": \"\",\n                \"DestinationPort\": {{faker 'random.number'}},\n                \"Interface\": {\n                  \"Name\": \"\"\n                },\n                \"OutboundIp\": \"\"\n              }\n            ],\n            \"EncodingName\": \"\",\n            \"EncodingParameters\": {\n              \"CompressionFactor\": {{faker 'random.float'}},\n              \"EncoderProfile\": \"\"\n            },\n            \"MediaStreamName\": \"\"\n          }\n        ],\n        \"Name\": \"\",\n        \"OutputArn\": \"\",\n        \"Port\": {{faker 'random.number'}},\n        \"Transport\": {\n          \"CidrAllowList\": [\n            \"\"\n          ],\n          \"MaxBitrate\": {{faker 'random.number'}},\n          \"MaxLatency\": {{faker 'random.number'}},\n          \"MaxSyncBuffer\": {{faker 'random.number'}},\n          \"MinLatency\": {{faker 'random.number'}},\n          \"Protocol\": \"\",\n          \"RemoteId\": \"\",\n          \"SmoothingLatency\": {{faker 'random.number'}},\n          \"StreamId\": \"\"\n        },\n        \"VpcInterfaceAttachment\": {\n          \"VpcInterfaceName\": \"\"\n        }\n      }\n    ],\n    \"Source\": {\n      \"DataTransferSubscriberFeePercent\": {{faker 'random.number'}},\n      \"Decryption\": {\n        \"Algorithm\": \"\",\n        \"ConstantInitializationVector\": \"\",\n        \"DeviceId\": \"\",\n        \"KeyType\": \"\",\n        \"Region\": \"\",\n        \"ResourceId\": \"\",\n        \"RoleArn\": \"\",\n        \"SecretArn\": \"\",\n        \"Url\": \"\"\n      },\n      \"Description\": \"\",\n      \"EntitlementArn\": \"\",\n      \"IngestIp\": \"\",\n      \"IngestPort\": {{faker 'random.number'}},\n      \"MediaStreamSourceConfigurations\": [\n        {\n          \"EncodingName\": \"\",\n          \"InputConfigurations\": [\n            {\n              \"InputIp\": \"\",\n              \"InputPort\": {{faker 'random.number'}},\n              \"Interface\": {\n                \"Name\": \"\"\n              }\n            }\n          ],\n          \"MediaStreamName\": \"\"\n        }\n      ],\n      \"Name\": \"\",\n      \"SourceArn\": \"\",\n      \"Transport\": {\n        \"CidrAllowList\": [\n          \"\"\n        ],\n        \"MaxBitrate\": {{faker 'random.number'}},\n        \"MaxLatency\": {{faker 'random.number'}},\n        \"MaxSyncBuffer\": {{faker 'random.number'}},\n        \"MinLatency\": {{faker 'random.number'}},\n        \"Protocol\": \"\",\n        \"RemoteId\": \"\",\n        \"SmoothingLatency\": {{faker 'random.number'}},\n        \"StreamId\": \"\"\n      },\n      \"VpcInterfaceName\": \"\",\n      \"WhitelistCidr\": \"\"\n    },\n    \"SourceFailoverConfig\": {\n      \"FailoverMode\": \"\",\n      \"RecoveryWindow\": {{faker 'random.number'}},\n      \"SourcePriority\": {\n        \"PrimarySource\": \"\"\n      },\n      \"State\": \"\"\n    },\n    \"Sources\": [\n      {\n        \"DataTransferSubscriberFeePercent\": {{faker 'random.number'}},\n        \"Decryption\": {\n          \"Algorithm\": \"\",\n          \"ConstantInitializationVector\": \"\",\n          \"DeviceId\": \"\",\n          \"KeyType\": \"\",\n          \"Region\": \"\",\n          \"ResourceId\": \"\",\n          \"RoleArn\": \"\",\n          \"SecretArn\": \"\",\n          \"Url\": \"\"\n        },\n        \"Description\": \"\",\n        \"EntitlementArn\": \"\",\n        \"IngestIp\": \"\",\n        \"IngestPort\": {{faker 'random.number'}},\n        \"MediaStreamSourceConfigurations\": [\n          {\n            \"EncodingName\": \"\",\n            \"InputConfigurations\": [\n              {\n                \"InputIp\": \"\",\n                \"InputPort\": {{faker 'random.number'}},\n                \"Interface\": {\n                  \"Name\": \"\"\n                }\n              }\n            ],\n            \"MediaStreamName\": \"\"\n          }\n        ],\n        \"Name\": \"\",\n        \"SourceArn\": \"\",\n        \"Transport\": {\n          \"CidrAllowList\": [\n            \"\"\n          ],\n          \"MaxBitrate\": {{faker 'random.number'}},\n          \"MaxLatency\": {{faker 'random.number'}},\n          \"MaxSyncBuffer\": {{faker 'random.number'}},\n          \"MinLatency\": {{faker 'random.number'}},\n          \"Protocol\": \"\",\n          \"RemoteId\": \"\",\n          \"SmoothingLatency\": {{faker 'random.number'}},\n          \"StreamId\": \"\"\n        },\n        \"VpcInterfaceName\": \"\",\n        \"WhitelistCidr\": \"\"\n      }\n    ],\n    \"Status\": \"\",\n    \"VpcInterfaces\": [\n      {\n        \"Name\": \"\",\n        \"NetworkInterfaceIds\": [\n          \"\"\n        ],\n        \"NetworkInterfaceType\": \"\",\n        \"RoleArn\": \"\",\n        \"SecurityGroupIds\": [\n          \"\"\n        ],\n        \"SubnetId\": \"\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c758a62f-bf1e-4ac2-bd17-0c2559168b52",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "CreateFlow420Exception",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "54796b28-2c48-4962-ad6a-da6c987feee2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d72d5e2b-035f-45bc-af78-3c489deb28a7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1aeb7098-d907-4141-a567-c4dd12acbffa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a539790f-9173-4fc1-a0bc-188e6722c53b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fe2b4db1-03ec-4ca2-813f-049076843ae8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9221af8f-8ce8-464d-b9e6-9720f376666c",
      "documentation": "Displays a list of flows that are associated with this account. This request returns a paginated result.",
      "method": "get",
      "endpoint": "v1/flows",
      "responses": [
        {
          "uuid": "15039120-c11b-4aa5-bc68-928827df2834",
          "body": "{\n  \"Flows\": [\n    {\n      \"AvailabilityZone\": \"\",\n      \"Description\": \"\",\n      \"FlowArn\": \"\",\n      \"Name\": \"\",\n      \"SourceType\": \"\",\n      \"Status\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f87da31f-5855-48bc-923d-ca0a462f79a6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d459408d-762d-4fe4-84ab-8099aa85eb34",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "00a7fd5c-ba93-41b5-ab25-e455249ce850",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eb413abc-2e18-4388-b7da-f22eea99fdbd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a260194e-f366-4333-90b4-69c16e0f0ab9",
      "documentation": "Deletes a flow. Before you can delete a flow, you must stop the flow.",
      "method": "delete",
      "endpoint": "v1/flows/:flowArn",
      "responses": [
        {
          "uuid": "d5cebf8e-b1ad-4f33-bfa7-f2b049f998ce",
          "body": "{\n  \"FlowArn\": \"\",\n  \"Status\": \"\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "11be7ea6-9500-4185-bbe5-e38dd7e29a66",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5831903e-faee-4a80-ac30-98463d592455",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2abd3684-432b-49ab-a78e-240918b6904f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1e67973c-2297-441e-a142-a3ad39fc3b8d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "169faeec-65de-4d15-93de-463ddfcea126",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "20dcfdb9-1778-4255-8336-e1bffc4a6c71",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "823efcb5-380b-45f8-a468-f204cc5df9f7",
      "documentation": "Displays the details of a flow. The response includes the flow ARN, name, and Availability Zone, as well as details about the source, outputs, and entitlements.",
      "method": "get",
      "endpoint": "v1/flows/:flowArn",
      "responses": [
        {
          "uuid": "b26a7ff9-831b-469d-b602-3e477e144d98",
          "body": "{\n  \"Flow\": {\n    \"AvailabilityZone\": \"\",\n    \"Description\": \"\",\n    \"EgressIp\": \"\",\n    \"Entitlements\": [\n      {\n        \"DataTransferSubscriberFeePercent\": {{faker 'random.number'}},\n        \"Description\": \"\",\n        \"Encryption\": {\n          \"Algorithm\": \"\",\n          \"ConstantInitializationVector\": \"\",\n          \"DeviceId\": \"\",\n          \"KeyType\": \"\",\n          \"Region\": \"\",\n          \"ResourceId\": \"\",\n          \"RoleArn\": \"\",\n          \"SecretArn\": \"\",\n          \"Url\": \"\"\n        },\n        \"EntitlementArn\": \"\",\n        \"EntitlementStatus\": \"\",\n        \"Name\": \"\",\n        \"Subscribers\": [\n          \"\"\n        ]\n      }\n    ],\n    \"FlowArn\": \"\",\n    \"MediaStreams\": [\n      {\n        \"Attributes\": {\n          \"Fmtp\": {\n            \"ChannelOrder\": \"\",\n            \"Colorimetry\": \"\",\n            \"ExactFramerate\": \"\",\n            \"Par\": \"\",\n            \"Range\": \"\",\n            \"ScanMode\": \"\",\n            \"Tcs\": \"\"\n          },\n          \"Lang\": \"\"\n        },\n        \"ClockRate\": {{faker 'random.number'}},\n        \"Description\": \"\",\n        \"Fmt\": {{faker 'random.number'}},\n        \"MediaStreamId\": {{faker 'random.number'}},\n        \"MediaStreamName\": \"\",\n        \"MediaStreamType\": \"\",\n        \"VideoFormat\": \"\"\n      }\n    ],\n    \"Name\": \"\",\n    \"Outputs\": [\n      {\n        \"DataTransferSubscriberFeePercent\": {{faker 'random.number'}},\n        \"Description\": \"\",\n        \"Destination\": \"\",\n        \"Encryption\": {\n          \"Algorithm\": \"\",\n          \"ConstantInitializationVector\": \"\",\n          \"DeviceId\": \"\",\n          \"KeyType\": \"\",\n          \"Region\": \"\",\n          \"ResourceId\": \"\",\n          \"RoleArn\": \"\",\n          \"SecretArn\": \"\",\n          \"Url\": \"\"\n        },\n        \"EntitlementArn\": \"\",\n        \"ListenerAddress\": \"\",\n        \"MediaLiveInputArn\": \"\",\n        \"MediaStreamOutputConfigurations\": [\n          {\n            \"DestinationConfigurations\": [\n              {\n                \"DestinationIp\": \"\",\n                \"DestinationPort\": {{faker 'random.number'}},\n                \"Interface\": {\n                  \"Name\": \"\"\n                },\n                \"OutboundIp\": \"\"\n              }\n            ],\n            \"EncodingName\": \"\",\n            \"EncodingParameters\": {\n              \"CompressionFactor\": {{faker 'random.float'}},\n              \"EncoderProfile\": \"\"\n            },\n            \"MediaStreamName\": \"\"\n          }\n        ],\n        \"Name\": \"\",\n        \"OutputArn\": \"\",\n        \"Port\": {{faker 'random.number'}},\n        \"Transport\": {\n          \"CidrAllowList\": [\n            \"\"\n          ],\n          \"MaxBitrate\": {{faker 'random.number'}},\n          \"MaxLatency\": {{faker 'random.number'}},\n          \"MaxSyncBuffer\": {{faker 'random.number'}},\n          \"MinLatency\": {{faker 'random.number'}},\n          \"Protocol\": \"\",\n          \"RemoteId\": \"\",\n          \"SmoothingLatency\": {{faker 'random.number'}},\n          \"StreamId\": \"\"\n        },\n        \"VpcInterfaceAttachment\": {\n          \"VpcInterfaceName\": \"\"\n        }\n      }\n    ],\n    \"Source\": {\n      \"DataTransferSubscriberFeePercent\": {{faker 'random.number'}},\n      \"Decryption\": {\n        \"Algorithm\": \"\",\n        \"ConstantInitializationVector\": \"\",\n        \"DeviceId\": \"\",\n        \"KeyType\": \"\",\n        \"Region\": \"\",\n        \"ResourceId\": \"\",\n        \"RoleArn\": \"\",\n        \"SecretArn\": \"\",\n        \"Url\": \"\"\n      },\n      \"Description\": \"\",\n      \"EntitlementArn\": \"\",\n      \"IngestIp\": \"\",\n      \"IngestPort\": {{faker 'random.number'}},\n      \"MediaStreamSourceConfigurations\": [\n        {\n          \"EncodingName\": \"\",\n          \"InputConfigurations\": [\n            {\n              \"InputIp\": \"\",\n              \"InputPort\": {{faker 'random.number'}},\n              \"Interface\": {\n                \"Name\": \"\"\n              }\n            }\n          ],\n          \"MediaStreamName\": \"\"\n        }\n      ],\n      \"Name\": \"\",\n      \"SourceArn\": \"\",\n      \"Transport\": {\n        \"CidrAllowList\": [\n          \"\"\n        ],\n        \"MaxBitrate\": {{faker 'random.number'}},\n        \"MaxLatency\": {{faker 'random.number'}},\n        \"MaxSyncBuffer\": {{faker 'random.number'}},\n        \"MinLatency\": {{faker 'random.number'}},\n        \"Protocol\": \"\",\n        \"RemoteId\": \"\",\n        \"SmoothingLatency\": {{faker 'random.number'}},\n        \"StreamId\": \"\"\n      },\n      \"VpcInterfaceName\": \"\",\n      \"WhitelistCidr\": \"\"\n    },\n    \"SourceFailoverConfig\": {\n      \"FailoverMode\": \"\",\n      \"RecoveryWindow\": {{faker 'random.number'}},\n      \"SourcePriority\": {\n        \"PrimarySource\": \"\"\n      },\n      \"State\": \"\"\n    },\n    \"Sources\": [\n      {\n        \"DataTransferSubscriberFeePercent\": {{faker 'random.number'}},\n        \"Decryption\": {\n          \"Algorithm\": \"\",\n          \"ConstantInitializationVector\": \"\",\n          \"DeviceId\": \"\",\n          \"KeyType\": \"\",\n          \"Region\": \"\",\n          \"ResourceId\": \"\",\n          \"RoleArn\": \"\",\n          \"SecretArn\": \"\",\n          \"Url\": \"\"\n        },\n        \"Description\": \"\",\n        \"EntitlementArn\": \"\",\n        \"IngestIp\": \"\",\n        \"IngestPort\": {{faker 'random.number'}},\n        \"MediaStreamSourceConfigurations\": [\n          {\n            \"EncodingName\": \"\",\n            \"InputConfigurations\": [\n              {\n                \"InputIp\": \"\",\n                \"InputPort\": {{faker 'random.number'}},\n                \"Interface\": {\n                  \"Name\": \"\"\n                }\n              }\n            ],\n            \"MediaStreamName\": \"\"\n          }\n        ],\n        \"Name\": \"\",\n        \"SourceArn\": \"\",\n        \"Transport\": {\n          \"CidrAllowList\": [\n            \"\"\n          ],\n          \"MaxBitrate\": {{faker 'random.number'}},\n          \"MaxLatency\": {{faker 'random.number'}},\n          \"MaxSyncBuffer\": {{faker 'random.number'}},\n          \"MinLatency\": {{faker 'random.number'}},\n          \"Protocol\": \"\",\n          \"RemoteId\": \"\",\n          \"SmoothingLatency\": {{faker 'random.number'}},\n          \"StreamId\": \"\"\n        },\n        \"VpcInterfaceName\": \"\",\n        \"WhitelistCidr\": \"\"\n      }\n    ],\n    \"Status\": \"\",\n    \"VpcInterfaces\": [\n      {\n        \"Name\": \"\",\n        \"NetworkInterfaceIds\": [\n          \"\"\n        ],\n        \"NetworkInterfaceType\": \"\",\n        \"RoleArn\": \"\",\n        \"SecurityGroupIds\": [\n          \"\"\n        ],\n        \"SubnetId\": \"\"\n      }\n    ]\n  },\n  \"Messages\": {\n    \"Errors\": [\n      \"\"\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "88d7d2df-cd05-4f29-a552-1ba187bb9e19",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "04c4f97a-9a31-4632-953d-8c0ddb8625db",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "58516566-db6b-444e-a0a7-a7e6d1cc6725",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8ef7db7e-4c54-4846-9b76-b0472d118a46",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c2dc8aaf-83e7-40ac-a3cd-c917daecd940",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "06d491e3-8a25-45d2-8c90-7a41a31a7572",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e24c848a-59a1-49bb-8512-b91b8e9e7ea7",
      "documentation": "Updates flow",
      "method": "put",
      "endpoint": "v1/flows/:flowArn",
      "responses": [
        {
          "uuid": "f4879488-ec43-4483-abaa-a39a2c7f019e",
          "body": "{\n  \"Flow\": {\n    \"AvailabilityZone\": \"\",\n    \"Description\": \"\",\n    \"EgressIp\": \"\",\n    \"Entitlements\": [\n      {\n        \"DataTransferSubscriberFeePercent\": {{faker 'random.number'}},\n        \"Description\": \"\",\n        \"Encryption\": {\n          \"Algorithm\": \"\",\n          \"ConstantInitializationVector\": \"\",\n          \"DeviceId\": \"\",\n          \"KeyType\": \"\",\n          \"Region\": \"\",\n          \"ResourceId\": \"\",\n          \"RoleArn\": \"\",\n          \"SecretArn\": \"\",\n          \"Url\": \"\"\n        },\n        \"EntitlementArn\": \"\",\n        \"EntitlementStatus\": \"\",\n        \"Name\": \"\",\n        \"Subscribers\": [\n          \"\"\n        ]\n      }\n    ],\n    \"FlowArn\": \"\",\n    \"MediaStreams\": [\n      {\n        \"Attributes\": {\n          \"Fmtp\": {\n            \"ChannelOrder\": \"\",\n            \"Colorimetry\": \"\",\n            \"ExactFramerate\": \"\",\n            \"Par\": \"\",\n            \"Range\": \"\",\n            \"ScanMode\": \"\",\n            \"Tcs\": \"\"\n          },\n          \"Lang\": \"\"\n        },\n        \"ClockRate\": {{faker 'random.number'}},\n        \"Description\": \"\",\n        \"Fmt\": {{faker 'random.number'}},\n        \"MediaStreamId\": {{faker 'random.number'}},\n        \"MediaStreamName\": \"\",\n        \"MediaStreamType\": \"\",\n        \"VideoFormat\": \"\"\n      }\n    ],\n    \"Name\": \"\",\n    \"Outputs\": [\n      {\n        \"DataTransferSubscriberFeePercent\": {{faker 'random.number'}},\n        \"Description\": \"\",\n        \"Destination\": \"\",\n        \"Encryption\": {\n          \"Algorithm\": \"\",\n          \"ConstantInitializationVector\": \"\",\n          \"DeviceId\": \"\",\n          \"KeyType\": \"\",\n          \"Region\": \"\",\n          \"ResourceId\": \"\",\n          \"RoleArn\": \"\",\n          \"SecretArn\": \"\",\n          \"Url\": \"\"\n        },\n        \"EntitlementArn\": \"\",\n        \"ListenerAddress\": \"\",\n        \"MediaLiveInputArn\": \"\",\n        \"MediaStreamOutputConfigurations\": [\n          {\n            \"DestinationConfigurations\": [\n              {\n                \"DestinationIp\": \"\",\n                \"DestinationPort\": {{faker 'random.number'}},\n                \"Interface\": {\n                  \"Name\": \"\"\n                },\n                \"OutboundIp\": \"\"\n              }\n            ],\n            \"EncodingName\": \"\",\n            \"EncodingParameters\": {\n              \"CompressionFactor\": {{faker 'random.float'}},\n              \"EncoderProfile\": \"\"\n            },\n            \"MediaStreamName\": \"\"\n          }\n        ],\n        \"Name\": \"\",\n        \"OutputArn\": \"\",\n        \"Port\": {{faker 'random.number'}},\n        \"Transport\": {\n          \"CidrAllowList\": [\n            \"\"\n          ],\n          \"MaxBitrate\": {{faker 'random.number'}},\n          \"MaxLatency\": {{faker 'random.number'}},\n          \"MaxSyncBuffer\": {{faker 'random.number'}},\n          \"MinLatency\": {{faker 'random.number'}},\n          \"Protocol\": \"\",\n          \"RemoteId\": \"\",\n          \"SmoothingLatency\": {{faker 'random.number'}},\n          \"StreamId\": \"\"\n        },\n        \"VpcInterfaceAttachment\": {\n          \"VpcInterfaceName\": \"\"\n        }\n      }\n    ],\n    \"Source\": {\n      \"DataTransferSubscriberFeePercent\": {{faker 'random.number'}},\n      \"Decryption\": {\n        \"Algorithm\": \"\",\n        \"ConstantInitializationVector\": \"\",\n        \"DeviceId\": \"\",\n        \"KeyType\": \"\",\n        \"Region\": \"\",\n        \"ResourceId\": \"\",\n        \"RoleArn\": \"\",\n        \"SecretArn\": \"\",\n        \"Url\": \"\"\n      },\n      \"Description\": \"\",\n      \"EntitlementArn\": \"\",\n      \"IngestIp\": \"\",\n      \"IngestPort\": {{faker 'random.number'}},\n      \"MediaStreamSourceConfigurations\": [\n        {\n          \"EncodingName\": \"\",\n          \"InputConfigurations\": [\n            {\n              \"InputIp\": \"\",\n              \"InputPort\": {{faker 'random.number'}},\n              \"Interface\": {\n                \"Name\": \"\"\n              }\n            }\n          ],\n          \"MediaStreamName\": \"\"\n        }\n      ],\n      \"Name\": \"\",\n      \"SourceArn\": \"\",\n      \"Transport\": {\n        \"CidrAllowList\": [\n          \"\"\n        ],\n        \"MaxBitrate\": {{faker 'random.number'}},\n        \"MaxLatency\": {{faker 'random.number'}},\n        \"MaxSyncBuffer\": {{faker 'random.number'}},\n        \"MinLatency\": {{faker 'random.number'}},\n        \"Protocol\": \"\",\n        \"RemoteId\": \"\",\n        \"SmoothingLatency\": {{faker 'random.number'}},\n        \"StreamId\": \"\"\n      },\n      \"VpcInterfaceName\": \"\",\n      \"WhitelistCidr\": \"\"\n    },\n    \"SourceFailoverConfig\": {\n      \"FailoverMode\": \"\",\n      \"RecoveryWindow\": {{faker 'random.number'}},\n      \"SourcePriority\": {\n        \"PrimarySource\": \"\"\n      },\n      \"State\": \"\"\n    },\n    \"Sources\": [\n      {\n        \"DataTransferSubscriberFeePercent\": {{faker 'random.number'}},\n        \"Decryption\": {\n          \"Algorithm\": \"\",\n          \"ConstantInitializationVector\": \"\",\n          \"DeviceId\": \"\",\n          \"KeyType\": \"\",\n          \"Region\": \"\",\n          \"ResourceId\": \"\",\n          \"RoleArn\": \"\",\n          \"SecretArn\": \"\",\n          \"Url\": \"\"\n        },\n        \"Description\": \"\",\n        \"EntitlementArn\": \"\",\n        \"IngestIp\": \"\",\n        \"IngestPort\": {{faker 'random.number'}},\n        \"MediaStreamSourceConfigurations\": [\n          {\n            \"EncodingName\": \"\",\n            \"InputConfigurations\": [\n              {\n                \"InputIp\": \"\",\n                \"InputPort\": {{faker 'random.number'}},\n                \"Interface\": {\n                  \"Name\": \"\"\n                }\n              }\n            ],\n            \"MediaStreamName\": \"\"\n          }\n        ],\n        \"Name\": \"\",\n        \"SourceArn\": \"\",\n        \"Transport\": {\n          \"CidrAllowList\": [\n            \"\"\n          ],\n          \"MaxBitrate\": {{faker 'random.number'}},\n          \"MaxLatency\": {{faker 'random.number'}},\n          \"MaxSyncBuffer\": {{faker 'random.number'}},\n          \"MinLatency\": {{faker 'random.number'}},\n          \"Protocol\": \"\",\n          \"RemoteId\": \"\",\n          \"SmoothingLatency\": {{faker 'random.number'}},\n          \"StreamId\": \"\"\n        },\n        \"VpcInterfaceName\": \"\",\n        \"WhitelistCidr\": \"\"\n      }\n    ],\n    \"Status\": \"\",\n    \"VpcInterfaces\": [\n      {\n        \"Name\": \"\",\n        \"NetworkInterfaceIds\": [\n          \"\"\n        ],\n        \"NetworkInterfaceType\": \"\",\n        \"RoleArn\": \"\",\n        \"SecurityGroupIds\": [\n          \"\"\n        ],\n        \"SubnetId\": \"\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "514d30fd-de44-4aaa-b82d-f685ff3e5127",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "10bc1894-6f1f-4aab-8fb0-43412bd319df",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f5dbf6ba-baba-4070-af4b-4d9742afe7c9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "030deb15-bcf0-4b6d-9605-c3019c9e0973",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "09edbd5a-254f-4747-be50-f6c302a52598",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2c91ac8c-a43a-470d-a6ff-127b7921529a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a83472d7-0192-4e78-b06c-faa7ac1505b2",
      "documentation": "Displays the details of an offering. The response includes the offering description, duration, outbound bandwidth, price, and Amazon Resource Name (ARN).",
      "method": "get",
      "endpoint": "v1/offerings/:offeringArn",
      "responses": [
        {
          "uuid": "8a418083-d41b-4027-a16c-544448094a80",
          "body": "{\n  \"Offering\": {\n    \"CurrencyCode\": \"\",\n    \"Duration\": {{faker 'random.number'}},\n    \"DurationUnits\": \"\",\n    \"OfferingArn\": \"\",\n    \"OfferingDescription\": \"\",\n    \"PricePerUnit\": \"\",\n    \"PriceUnits\": \"\",\n    \"ResourceSpecification\": {\n      \"ReservedBitrate\": {{faker 'random.number'}},\n      \"ResourceType\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "58f05850-c74c-4e88-a9ec-b7647cb6afa0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "454fedcf-9da5-4687-bfa1-b7dc3a93cb9c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cc8f618c-7fd2-425a-9302-57bfae762d94",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6e9c6f49-87bb-4133-85f4-ae25841cbbe6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "33bb9997-89c2-418f-bacc-a2d5afffc5c5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ff76594e-e289-45ec-8c2c-176ade63bb60",
      "documentation": "Submits a request to purchase an offering. If you already have an active reservation, you can't purchase another offering.",
      "method": "post",
      "endpoint": "v1/offerings/:offeringArn",
      "responses": [
        {
          "uuid": "8aea644a-d421-4ecb-9d86-dd3ce2404be9",
          "body": "{\n  \"Reservation\": {\n    \"CurrencyCode\": \"\",\n    \"Duration\": {{faker 'random.number'}},\n    \"DurationUnits\": \"\",\n    \"End\": \"\",\n    \"OfferingArn\": \"\",\n    \"OfferingDescription\": \"\",\n    \"PricePerUnit\": \"\",\n    \"PriceUnits\": \"\",\n    \"ReservationArn\": \"\",\n    \"ReservationName\": \"\",\n    \"ReservationState\": \"\",\n    \"ResourceSpecification\": {\n      \"ReservedBitrate\": {{faker 'random.number'}},\n      \"ResourceType\": \"\"\n    },\n    \"Start\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5e36c55c-786a-4ce6-8783-6b0940137850",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "51257688-acbc-4a4d-9e23-126d423609d9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3d69f784-36b6-4028-aa2d-d8f39ec71092",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3682008a-4b7b-40a1-85a0-d83cfe8f384b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "05ca7e90-d21a-49af-ae65-1f3f00a0eba7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0dbf23a1-0911-4d5b-a928-8d520acc5abd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7535c749-ca6e-4c71-a2e5-7786cd2251df",
      "documentation": "Displays the details of a reservation. The response includes the reservation name, state, start date and time, and the details of the offering that make up the rest of the reservation (such as price, duration, and outbound bandwidth).",
      "method": "get",
      "endpoint": "v1/reservations/:reservationArn",
      "responses": [
        {
          "uuid": "5b29cacd-a29b-4c32-8edd-7803a3aa22bd",
          "body": "{\n  \"Reservation\": {\n    \"CurrencyCode\": \"\",\n    \"Duration\": {{faker 'random.number'}},\n    \"DurationUnits\": \"\",\n    \"End\": \"\",\n    \"OfferingArn\": \"\",\n    \"OfferingDescription\": \"\",\n    \"PricePerUnit\": \"\",\n    \"PriceUnits\": \"\",\n    \"ReservationArn\": \"\",\n    \"ReservationName\": \"\",\n    \"ReservationState\": \"\",\n    \"ResourceSpecification\": {\n      \"ReservedBitrate\": {{faker 'random.number'}},\n      \"ResourceType\": \"\"\n    },\n    \"Start\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "447b2a6b-b757-4314-b8b6-1053a487008e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b11b93a8-193d-4018-876b-be4a3f62c95b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fe6c6c75-d1ae-411d-b3de-6869fdd999f0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dff4a588-886f-4ca8-9f3b-10d2e939a43b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9d442cbc-7059-4f55-8982-50a78ff9bf35",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "feb2b79d-2604-4db6-9874-568abf2581b7",
      "documentation": "Grants entitlements to an existing flow.",
      "method": "post",
      "endpoint": "v1/flows/:flowArn/entitlements",
      "responses": [
        {
          "uuid": "1533ab4c-6df4-47e1-ac8c-a423464cb4a4",
          "body": "{\n  \"Entitlements\": [\n    {\n      \"DataTransferSubscriberFeePercent\": {{faker 'random.number'}},\n      \"Description\": \"\",\n      \"Encryption\": {\n        \"Algorithm\": \"\",\n        \"ConstantInitializationVector\": \"\",\n        \"DeviceId\": \"\",\n        \"KeyType\": \"\",\n        \"Region\": \"\",\n        \"ResourceId\": \"\",\n        \"RoleArn\": \"\",\n        \"SecretArn\": \"\",\n        \"Url\": \"\"\n      },\n      \"EntitlementArn\": \"\",\n      \"EntitlementStatus\": \"\",\n      \"Name\": \"\",\n      \"Subscribers\": [\n        \"\"\n      ]\n    }\n  ],\n  \"FlowArn\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "00b11708-180d-41d9-bd58-4eda8c361d60",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "GrantFlowEntitlements420Exception",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ec96db43-a89e-42a4-a30f-6cdb94354dcf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a9fa20a5-fdaa-4931-8f8c-a7419f36c137",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a936dc83-b126-4367-b86b-f3c53a91f186",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a4124d1f-cf82-4abe-935d-740ca71db4d4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dfbb71c4-c8c1-4f72-8469-bb124f493535",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "803b2001-c245-4fa3-aedf-27622031c268",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "15fb3a2f-7146-4708-953e-c1ee1ae1514c",
      "documentation": "Displays a list of all entitlements that have been granted to this account. This request returns 20 results per page.",
      "method": "get",
      "endpoint": "v1/entitlements",
      "responses": [
        {
          "uuid": "423fdaa5-9f80-41ad-ad6e-ae839e6b2db4",
          "body": "{\n  \"Entitlements\": [\n    {\n      \"DataTransferSubscriberFeePercent\": {{faker 'random.number'}},\n      \"EntitlementArn\": \"\",\n      \"EntitlementName\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "508f6850-1a30-4fbb-9fbc-7aad1f62dc2c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4589f41d-34cd-4b4e-8031-e89473453b59",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4f42e8a3-8aed-4a28-b168-b7cc61da85f9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "850047e1-251d-4fc3-9128-b4641e8e1d6d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c97bbe30-ad28-4196-9d6e-5d916f487ec9",
      "documentation": "Displays a list of all offerings that are available to this account in the current AWS Region. If you have an active reservation (which means you've purchased an offering that has already started and hasn't expired yet), your account isn't eligible for other offerings.",
      "method": "get",
      "endpoint": "v1/offerings",
      "responses": [
        {
          "uuid": "166b795d-39e9-4ca9-be56-b89c8afc5760",
          "body": "{\n  \"NextToken\": \"\",\n  \"Offerings\": [\n    {\n      \"CurrencyCode\": \"\",\n      \"Duration\": {{faker 'random.number'}},\n      \"DurationUnits\": \"\",\n      \"OfferingArn\": \"\",\n      \"OfferingDescription\": \"\",\n      \"PricePerUnit\": \"\",\n      \"PriceUnits\": \"\",\n      \"ResourceSpecification\": {\n        \"ReservedBitrate\": {{faker 'random.number'}},\n        \"ResourceType\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eed26d5e-aa18-4348-9922-83d8c8fb3e16",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ff204025-ca66-4130-8a5b-49d459e41ff3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fc866ebe-0dfc-437c-9668-dc9f7dd8460d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "12b8f54a-35f0-421e-bac8-8f59af80ea51",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "825e6b9d-0822-474d-9e3a-bd76dbf70768",
      "documentation": "Displays a list of all reservations that have been purchased by this account in the current AWS Region. This list includes all reservations in all states (such as active and expired).",
      "method": "get",
      "endpoint": "v1/reservations",
      "responses": [
        {
          "uuid": "4c294e51-b990-4dbb-83f4-c26cd90012d6",
          "body": "{\n  \"NextToken\": \"\",\n  \"Reservations\": [\n    {\n      \"CurrencyCode\": \"\",\n      \"Duration\": {{faker 'random.number'}},\n      \"DurationUnits\": \"\",\n      \"End\": \"\",\n      \"OfferingArn\": \"\",\n      \"OfferingDescription\": \"\",\n      \"PricePerUnit\": \"\",\n      \"PriceUnits\": \"\",\n      \"ReservationArn\": \"\",\n      \"ReservationName\": \"\",\n      \"ReservationState\": \"\",\n      \"ResourceSpecification\": {\n        \"ReservedBitrate\": {{faker 'random.number'}},\n        \"ResourceType\": \"\"\n      },\n      \"Start\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "38f41db2-6d23-4241-afc1-15906b02bb34",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c98f207e-92ce-44e3-a419-3432b62dbe08",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "70f5ddef-0aea-4e39-8673-61d0aebef262",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e998ad44-3cb6-466c-a08b-a515390f129a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e7bdda47-82f8-4d36-aecf-6363e0029b2f",
      "documentation": "List all tags on an AWS Elemental MediaConnect resource",
      "method": "get",
      "endpoint": "tags/:resourceArn",
      "responses": [
        {
          "uuid": "370e62cb-2575-4f4b-b3a2-7073f0af0b8a",
          "body": "{\n  \"Tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "faab8a5f-054c-4657-9255-0f2bd1f627fb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "969e69ad-1889-45b0-9bf8-7c983bfee0c0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7c4f775f-8fa9-448f-ae16-8f0ea56a86a8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0e48fc80-fba8-4b2c-b74a-a917b3dc64bd",
      "documentation": "Associates the specified tags to a resource with the specified resourceArn. If existing tags on a resource are not specified in the request parameters, they are not changed. When a resource is deleted, the tags associated with that resource are deleted as well.",
      "method": "post",
      "endpoint": "tags/:resourceArn",
      "responses": [
        {
          "uuid": "251627ea-3989-4086-9eef-f08a5b257a46",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a50abe5f-7f18-4629-87fc-4726938f413a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9d1bbc1e-95a1-48bd-9918-9ab4c7d1cdcd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "10336bbe-5798-4995-9cb9-e57e3f946ab4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "139c1485-e0e1-4b6a-be2b-be1deab67562",
      "documentation": "Removes a media stream from a flow. This action is only available if the media stream is not associated with a source or output.",
      "method": "delete",
      "endpoint": "v1/flows/:flowArn/mediaStreams/:mediaStreamName",
      "responses": [
        {
          "uuid": "9e53b8f9-e2e9-41ee-ad58-7c56b5d94a50",
          "body": "{\n  \"FlowArn\": \"\",\n  \"MediaStreamName\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7610fd36-b636-47b2-acc4-97e070effa4e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2eefd289-d9b6-4e96-9a2b-7a8ee53c6bfd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "415158ec-f75a-4e69-bc76-4c5f8586086e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ec4dddd3-1f42-40d4-a540-af17eb30e70d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "13ec5d3e-510f-4fd0-9fde-aae7509e1a5a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0c67ffdb-b769-4c4d-8060-aff29aabaecd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c561514a-1c60-43e5-b517-a62c7976193c",
      "documentation": "Updates an existing media stream.",
      "method": "put",
      "endpoint": "v1/flows/:flowArn/mediaStreams/:mediaStreamName",
      "responses": [
        {
          "uuid": "8d13b0af-75d3-4be1-bb5b-d8f1d03abb00",
          "body": "{\n  \"FlowArn\": \"\",\n  \"MediaStream\": {\n    \"Attributes\": {\n      \"Fmtp\": {\n        \"ChannelOrder\": \"\",\n        \"Colorimetry\": \"\",\n        \"ExactFramerate\": \"\",\n        \"Par\": \"\",\n        \"Range\": \"\",\n        \"ScanMode\": \"\",\n        \"Tcs\": \"\"\n      },\n      \"Lang\": \"\"\n    },\n    \"ClockRate\": {{faker 'random.number'}},\n    \"Description\": \"\",\n    \"Fmt\": {{faker 'random.number'}},\n    \"MediaStreamId\": {{faker 'random.number'}},\n    \"MediaStreamName\": \"\",\n    \"MediaStreamType\": \"\",\n    \"VideoFormat\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2d845a38-529f-4e09-8d0b-b785af81d685",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f970f83b-5980-4ad7-b945-f8c0d64a1ecf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "180d2a2d-d560-4c16-9d5b-e0485d40b326",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b8a86f35-5e99-4363-a067-4938450552ff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ad395d23-096b-4217-b4f8-6c12de3c3aab",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a629ea67-603e-4135-9b67-ef76f5c0fb3a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2354436e-5bf4-4a8f-b21a-fd562895b65b",
      "documentation": "Removes an output from an existing flow. This request can be made only on an output that does not have an entitlement associated with it. If the output has an entitlement, you must revoke the entitlement instead. When an entitlement is revoked from a flow, the service automatically removes the associated output.",
      "method": "delete",
      "endpoint": "v1/flows/:flowArn/outputs/:outputArn",
      "responses": [
        {
          "uuid": "1a8767be-3bd1-4fef-bf39-f2f66d6b2bc4",
          "body": "{\n  \"FlowArn\": \"\",\n  \"OutputArn\": \"\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "98070849-c826-426f-bacd-2938cb9473fe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4209086a-47e8-4b51-8d1b-99fce327432a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d3c44203-cf55-4080-8dba-d6e588052e30",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "136ad6cf-dc8c-494f-9e3a-1f434d214f49",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "be56c08f-0063-41bc-92a1-cc5fad5c95ec",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "49395553-a1f5-4cf4-842d-1d44b50f39c2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2ae5d93d-2cdd-4507-a284-e0b6c7b16132",
      "documentation": "Updates an existing flow output.",
      "method": "put",
      "endpoint": "v1/flows/:flowArn/outputs/:outputArn",
      "responses": [
        {
          "uuid": "3d2e4faf-f15b-414a-934e-be55845725d5",
          "body": "{\n  \"FlowArn\": \"\",\n  \"Output\": {\n    \"DataTransferSubscriberFeePercent\": {{faker 'random.number'}},\n    \"Description\": \"\",\n    \"Destination\": \"\",\n    \"Encryption\": {\n      \"Algorithm\": \"\",\n      \"ConstantInitializationVector\": \"\",\n      \"DeviceId\": \"\",\n      \"KeyType\": \"\",\n      \"Region\": \"\",\n      \"ResourceId\": \"\",\n      \"RoleArn\": \"\",\n      \"SecretArn\": \"\",\n      \"Url\": \"\"\n    },\n    \"EntitlementArn\": \"\",\n    \"ListenerAddress\": \"\",\n    \"MediaLiveInputArn\": \"\",\n    \"MediaStreamOutputConfigurations\": [\n      {\n        \"DestinationConfigurations\": [\n          {\n            \"DestinationIp\": \"\",\n            \"DestinationPort\": {{faker 'random.number'}},\n            \"Interface\": {\n              \"Name\": \"\"\n            },\n            \"OutboundIp\": \"\"\n          }\n        ],\n        \"EncodingName\": \"\",\n        \"EncodingParameters\": {\n          \"CompressionFactor\": {{faker 'random.float'}},\n          \"EncoderProfile\": \"\"\n        },\n        \"MediaStreamName\": \"\"\n      }\n    ],\n    \"Name\": \"\",\n    \"OutputArn\": \"\",\n    \"Port\": {{faker 'random.number'}},\n    \"Transport\": {\n      \"CidrAllowList\": [\n        \"\"\n      ],\n      \"MaxBitrate\": {{faker 'random.number'}},\n      \"MaxLatency\": {{faker 'random.number'}},\n      \"MaxSyncBuffer\": {{faker 'random.number'}},\n      \"MinLatency\": {{faker 'random.number'}},\n      \"Protocol\": \"\",\n      \"RemoteId\": \"\",\n      \"SmoothingLatency\": {{faker 'random.number'}},\n      \"StreamId\": \"\"\n    },\n    \"VpcInterfaceAttachment\": {\n      \"VpcInterfaceName\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5e674373-0245-4175-98a2-c25f0028fd86",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ecc21bb3-befe-4bc7-b25f-6ac2ea94ee1a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "da336964-da33-489d-9dc6-10eeecfbc458",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a207b5ce-7de5-44d4-8332-586ba88cbfd6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "31b3e9aa-3cd4-4c1e-8bfc-8ceaf47acb03",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "086ec0ba-c08b-4b86-b24a-5933ef8de77d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d875b667-ed2f-4b68-ba2f-7cf56f758752",
      "documentation": "Removes a source from an existing flow. This request can be made only if there is more than one source on the flow.",
      "method": "delete",
      "endpoint": "v1/flows/:flowArn/source/:sourceArn",
      "responses": [
        {
          "uuid": "48464a42-c6ae-4e0e-84ff-f3854d16f2bb",
          "body": "{\n  \"FlowArn\": \"\",\n  \"SourceArn\": \"\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b6006613-ad99-47b5-8dce-c922fe339a57",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1bcc57e5-480a-4ba8-80fb-c8d7da6bdcf0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c506859b-f9a3-485f-b6d5-6c8633252f48",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b90da745-9d75-41d9-b672-bdc151902f00",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "01d6a7b9-1767-4cfe-a973-accfbfe8a67f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "08b753f4-d27b-48a8-b545-e4357f36b654",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d8e0e152-3d51-47dd-adcd-c8ff40b4dd91",
      "documentation": "Updates the source of a flow.",
      "method": "put",
      "endpoint": "v1/flows/:flowArn/source/:sourceArn",
      "responses": [
        {
          "uuid": "6d3c1bff-06e1-4750-b757-7783f33500bb",
          "body": "{\n  \"FlowArn\": \"\",\n  \"Source\": {\n    \"DataTransferSubscriberFeePercent\": {{faker 'random.number'}},\n    \"Decryption\": {\n      \"Algorithm\": \"\",\n      \"ConstantInitializationVector\": \"\",\n      \"DeviceId\": \"\",\n      \"KeyType\": \"\",\n      \"Region\": \"\",\n      \"ResourceId\": \"\",\n      \"RoleArn\": \"\",\n      \"SecretArn\": \"\",\n      \"Url\": \"\"\n    },\n    \"Description\": \"\",\n    \"EntitlementArn\": \"\",\n    \"IngestIp\": \"\",\n    \"IngestPort\": {{faker 'random.number'}},\n    \"MediaStreamSourceConfigurations\": [\n      {\n        \"EncodingName\": \"\",\n        \"InputConfigurations\": [\n          {\n            \"InputIp\": \"\",\n            \"InputPort\": {{faker 'random.number'}},\n            \"Interface\": {\n              \"Name\": \"\"\n            }\n          }\n        ],\n        \"MediaStreamName\": \"\"\n      }\n    ],\n    \"Name\": \"\",\n    \"SourceArn\": \"\",\n    \"Transport\": {\n      \"CidrAllowList\": [\n        \"\"\n      ],\n      \"MaxBitrate\": {{faker 'random.number'}},\n      \"MaxLatency\": {{faker 'random.number'}},\n      \"MaxSyncBuffer\": {{faker 'random.number'}},\n      \"MinLatency\": {{faker 'random.number'}},\n      \"Protocol\": \"\",\n      \"RemoteId\": \"\",\n      \"SmoothingLatency\": {{faker 'random.number'}},\n      \"StreamId\": \"\"\n    },\n    \"VpcInterfaceName\": \"\",\n    \"WhitelistCidr\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "39226a23-cf9f-4bcb-8965-d70886763478",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2f5f1a50-91f6-4ed2-ba6d-2af9e18c4c84",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "22b8450b-f728-4784-a35b-1edcb42ce277",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c7ec60e8-71af-435b-9dd3-394e54b857c7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9c3a375a-ff01-499f-a26c-8745bd2cdab7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7aadb6e6-0793-4b85-bcf1-aa9e216b6118",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b28953a1-b0ba-40c2-a4b9-51f581551396",
      "documentation": "Removes a VPC Interface from an existing flow. This request can be made only on a VPC interface that does not have a Source or Output associated with it. If the VPC interface is referenced by a Source or Output, you must first delete or update the Source or Output to no longer reference the VPC interface.",
      "method": "delete",
      "endpoint": "v1/flows/:flowArn/vpcInterfaces/:vpcInterfaceName",
      "responses": [
        {
          "uuid": "84c6c844-a732-41f9-b605-6496c75be438",
          "body": "{\n  \"FlowArn\": \"\",\n  \"NonDeletedNetworkInterfaceIds\": [\n    \"\"\n  ],\n  \"VpcInterfaceName\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "69fb6d13-90ef-4440-9905-371eb29cd0a4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "afb439c8-f04b-45c0-bceb-e93af5ad8162",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6a6e9bc6-97b8-44ba-97d0-62cef282efdd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0e823b7a-82b2-4118-88a1-8a2371f763a6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2345a6bf-908f-4a5b-a3c6-66893ea9255b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "13b8c24b-7c45-46c1-b1f2-cdba73a47f8c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "41e8870b-77e1-4f5b-9aae-518c5e73b74e",
      "documentation": "Revokes an entitlement from a flow. Once an entitlement is revoked, the content becomes unavailable to the subscriber and the associated output is removed.",
      "method": "delete",
      "endpoint": "v1/flows/:flowArn/entitlements/:entitlementArn",
      "responses": [
        {
          "uuid": "c410e58b-9914-48c5-93cb-42c54e2568d6",
          "body": "{\n  \"EntitlementArn\": \"\",\n  \"FlowArn\": \"\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "40170ed4-e59e-4ab3-ba40-1a00d264ff39",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "26238a2c-f01f-450f-8c88-be35375bc5df",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cd3faa26-9a04-46fe-9d0d-b72506a17bdc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "37de24c3-3de9-4b63-8eee-d1302c335aa9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2e35caae-45a7-48bb-8aca-d942f7aafed1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "16d051db-8096-48b7-bbfe-6eef8ce714dd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8c8d537f-7c04-44d0-bcd8-42caf901723a",
      "documentation": "You can change an entitlement's description, subscribers, and encryption. If you change the subscribers, the service will remove the outputs that are are used by the subscribers that are removed.",
      "method": "put",
      "endpoint": "v1/flows/:flowArn/entitlements/:entitlementArn",
      "responses": [
        {
          "uuid": "e5527822-3df1-454f-a837-7dd9f1ea6e98",
          "body": "{\n  \"Entitlement\": {\n    \"DataTransferSubscriberFeePercent\": {{faker 'random.number'}},\n    \"Description\": \"\",\n    \"Encryption\": {\n      \"Algorithm\": \"\",\n      \"ConstantInitializationVector\": \"\",\n      \"DeviceId\": \"\",\n      \"KeyType\": \"\",\n      \"Region\": \"\",\n      \"ResourceId\": \"\",\n      \"RoleArn\": \"\",\n      \"SecretArn\": \"\",\n      \"Url\": \"\"\n    },\n    \"EntitlementArn\": \"\",\n    \"EntitlementStatus\": \"\",\n    \"Name\": \"\",\n    \"Subscribers\": [\n      \"\"\n    ]\n  },\n  \"FlowArn\": \"\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b5db5060-236d-4e5c-b50a-f67a061981d2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "52b2eb90-dd7e-4989-92c9-bc942984e586",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6b5a7c29-4d6f-4073-a20a-525af2a2e64c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3643b276-b9a7-4246-b2fd-c511ee4a83b6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "889d5a8b-6264-4060-b41d-05f6b351bc26",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "baa54e99-f206-4c85-84fd-9af5523583e3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4b517ce7-d0d9-4cde-b1c2-4d66f1c63a1e",
      "documentation": "Starts a flow.",
      "method": "post",
      "endpoint": "v1/flows/start/:flowArn",
      "responses": [
        {
          "uuid": "f5d0fdbf-c823-446b-9c58-12c89f3ec708",
          "body": "{\n  \"FlowArn\": \"\",\n  \"Status\": \"\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "24018760-95e9-43de-8890-6af809d1554d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ee3eac9e-7098-443a-8363-fc8971227b28",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d28f403d-ef46-4980-b035-73911082eb2f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c1619954-a0db-4525-8729-8c489810d209",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "749d1325-d0f7-4007-b2fd-0207ae583da2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "816b2339-0b54-4f8b-ab82-24dac3f24bc2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "62369ec9-5f2a-4edb-a211-e403d2e1bed6",
      "documentation": "Stops a flow.",
      "method": "post",
      "endpoint": "v1/flows/stop/:flowArn",
      "responses": [
        {
          "uuid": "b4fc1424-5065-42fb-ac3f-4bf61e8b9b51",
          "body": "{\n  \"FlowArn\": \"\",\n  \"Status\": \"\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "980a2835-7c28-44c8-8850-3a66c4502d10",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "60a3aa99-82cc-4f22-9a43-0de83c8a5243",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "517a862b-6931-4e75-93dd-6e81bdda388b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d2c6fcd0-7820-4666-a299-3ee8b6ec39fd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7d1d3280-bd25-4519-95b8-4fc09131cae8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f5c57b90-2736-4ce9-8e01-0affd040e672",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3f65a421-88ed-42c5-af58-40dc8556d742",
      "documentation": "Deletes specified tags from a resource.",
      "method": "delete",
      "endpoint": "tags/:resourceArn#tagKeys",
      "responses": [
        {
          "uuid": "9cdc235f-1313-4862-8aa4-943cbd34ee7a",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b3bbcf10-5d55-4d64-b8d3-f204eca7001b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "85f26c9a-4763-4c2c-b3e8-0fbb2692e651",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2c0cbb5f-6702-495b-a5ca-e639d1eba5a2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}