{
  "uuid": "d2d4433e-4530-49a5-9ab1-c0b68e913cc2",
  "lastMigration": 19,
  "name": "AWS MediaConnect",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "e1f3bda5-9b5b-4523-8eb6-ff38bccadf43",
      "documentation": "Adds media streams to an existing flow. After you add a media stream to a flow, you can associate it with a source and/or an output that uses the ST 2110 JPEG XS or CDI protocol.",
      "method": "post",
      "endpoint": "v1/flows/:flowArn/mediaStreams",
      "responses": [
        {
          "uuid": "7b0ea92f-0fb5-4ddb-a913-183fab3f9f55",
          "body": "{\n  \"FlowArn\": \"\",\n  \"MediaStreams\": [\n    {\n      \"Attributes\": {\n        \"Fmtp\": {\n          \"ChannelOrder\": \"\",\n          \"Colorimetry\": \"\",\n          \"ExactFramerate\": \"\",\n          \"Par\": \"\",\n          \"Range\": \"\",\n          \"ScanMode\": \"\",\n          \"Tcs\": \"\"\n        },\n        \"Lang\": \"\"\n      },\n      \"ClockRate\": {{faker 'random.number'}},\n      \"Description\": \"\",\n      \"Fmt\": {{faker 'random.number'}},\n      \"MediaStreamId\": {{faker 'random.number'}},\n      \"MediaStreamName\": \"\",\n      \"MediaStreamType\": \"\",\n      \"VideoFormat\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ac6ee1a9-bc12-441b-9d0b-dd233ec6510b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f2ada0a4-ca9b-413d-93a3-f3b388ad169d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1e86e3f5-4ac2-404a-a336-7093ab4673b2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bab3a4fa-c4ee-4c66-a830-a181d1c3bf43",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "97865e75-ceaa-472d-8bbc-59fef0fa6cab",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f0a18773-1e23-45ca-9ea0-dccb3290e0e5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3e719094-1118-4a03-a83b-dfd9384d585a",
      "documentation": "Adds outputs to an existing flow. You can create up to 50 outputs per flow.",
      "method": "post",
      "endpoint": "v1/flows/:flowArn/outputs",
      "responses": [
        {
          "uuid": "2e9fbc77-2fd5-468c-980a-5af85bc61c7c",
          "body": "{\n  \"FlowArn\": \"\",\n  \"Outputs\": [\n    {\n      \"DataTransferSubscriberFeePercent\": {{faker 'random.number'}},\n      \"Description\": \"\",\n      \"Destination\": \"\",\n      \"Encryption\": {\n        \"Algorithm\": \"\",\n        \"ConstantInitializationVector\": \"\",\n        \"DeviceId\": \"\",\n        \"KeyType\": \"\",\n        \"Region\": \"\",\n        \"ResourceId\": \"\",\n        \"RoleArn\": \"\",\n        \"SecretArn\": \"\",\n        \"Url\": \"\"\n      },\n      \"EntitlementArn\": \"\",\n      \"ListenerAddress\": \"\",\n      \"MediaLiveInputArn\": \"\",\n      \"MediaStreamOutputConfigurations\": [\n        {\n          \"DestinationConfigurations\": [\n            {\n              \"DestinationIp\": \"\",\n              \"DestinationPort\": {{faker 'random.number'}},\n              \"Interface\": {\n                \"Name\": \"\"\n              },\n              \"OutboundIp\": \"\"\n            }\n          ],\n          \"EncodingName\": \"\",\n          \"EncodingParameters\": {\n            \"CompressionFactor\": {{faker 'random.float'}},\n            \"EncoderProfile\": \"\"\n          },\n          \"MediaStreamName\": \"\"\n        }\n      ],\n      \"Name\": \"\",\n      \"OutputArn\": \"\",\n      \"Port\": {{faker 'random.number'}},\n      \"Transport\": {\n        \"CidrAllowList\": [\n          \"\"\n        ],\n        \"MaxBitrate\": {{faker 'random.number'}},\n        \"MaxLatency\": {{faker 'random.number'}},\n        \"MaxSyncBuffer\": {{faker 'random.number'}},\n        \"MinLatency\": {{faker 'random.number'}},\n        \"Protocol\": \"\",\n        \"RemoteId\": \"\",\n        \"SmoothingLatency\": {{faker 'random.number'}},\n        \"StreamId\": \"\"\n      },\n      \"VpcInterfaceAttachment\": {\n        \"VpcInterfaceName\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4ffb52f4-bcaa-4c3c-8dca-7ff17f6ebd86",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AddFlowOutputs420Exception",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a18e765c-0cd8-4b77-9cfe-696bbb059955",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ac7899de-3e78-40be-80af-ecedc2f671ca",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3c9eb0c0-18e3-4d8a-a023-0871c467a68a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fdf5afa8-83af-4406-9567-7c3f05c7a399",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f3e728ac-609b-4409-b2d6-2d453e2d5781",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eccd3ff5-3d5b-49fc-b40c-57faa195ef5c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ec1f8b01-479a-4771-8eaa-2ed77abd16a1",
      "documentation": "Adds Sources to flow",
      "method": "post",
      "endpoint": "v1/flows/:flowArn/source",
      "responses": [
        {
          "uuid": "501a229f-3197-47f0-ac31-b07b72f3a1eb",
          "body": "{\n  \"FlowArn\": \"\",\n  \"Sources\": [\n    {\n      \"DataTransferSubscriberFeePercent\": {{faker 'random.number'}},\n      \"Decryption\": {\n        \"Algorithm\": \"\",\n        \"ConstantInitializationVector\": \"\",\n        \"DeviceId\": \"\",\n        \"KeyType\": \"\",\n        \"Region\": \"\",\n        \"ResourceId\": \"\",\n        \"RoleArn\": \"\",\n        \"SecretArn\": \"\",\n        \"Url\": \"\"\n      },\n      \"Description\": \"\",\n      \"EntitlementArn\": \"\",\n      \"IngestIp\": \"\",\n      \"IngestPort\": {{faker 'random.number'}},\n      \"MediaStreamSourceConfigurations\": [\n        {\n          \"EncodingName\": \"\",\n          \"InputConfigurations\": [\n            {\n              \"InputIp\": \"\",\n              \"InputPort\": {{faker 'random.number'}},\n              \"Interface\": {\n                \"Name\": \"\"\n              }\n            }\n          ],\n          \"MediaStreamName\": \"\"\n        }\n      ],\n      \"Name\": \"\",\n      \"SourceArn\": \"\",\n      \"Transport\": {\n        \"CidrAllowList\": [\n          \"\"\n        ],\n        \"MaxBitrate\": {{faker 'random.number'}},\n        \"MaxLatency\": {{faker 'random.number'}},\n        \"MaxSyncBuffer\": {{faker 'random.number'}},\n        \"MinLatency\": {{faker 'random.number'}},\n        \"Protocol\": \"\",\n        \"RemoteId\": \"\",\n        \"SmoothingLatency\": {{faker 'random.number'}},\n        \"StreamId\": \"\"\n      },\n      \"VpcInterfaceName\": \"\",\n      \"WhitelistCidr\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d8247342-0e5a-42f7-91f3-6072ff7be346",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0a31aba1-961e-4637-87fd-49cbb1d2e9a2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2ab05267-0193-428a-8565-3cf31381b6d0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "13edf965-88f3-4663-af26-f7459d273538",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5751399c-8bf1-43fe-97f6-283904fae61c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6246fff5-a308-4b19-8b3f-0f98d555ae9f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1748de51-5059-43e5-8910-44cd5eeb7302",
      "documentation": "Adds VPC interfaces to flow",
      "method": "post",
      "endpoint": "v1/flows/:flowArn/vpcInterfaces",
      "responses": [
        {
          "uuid": "1adc3470-d183-45a0-b5d9-1fbb6d1a2ec9",
          "body": "{\n  \"FlowArn\": \"\",\n  \"VpcInterfaces\": [\n    {\n      \"Name\": \"\",\n      \"NetworkInterfaceIds\": [\n        \"\"\n      ],\n      \"NetworkInterfaceType\": \"\",\n      \"RoleArn\": \"\",\n      \"SecurityGroupIds\": [\n        \"\"\n      ],\n      \"SubnetId\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a6806e70-a697-4f76-a31d-1d936c72535c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1b6a514a-1e56-49db-aa0b-b7e263cf2476",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "df3270e2-d3f9-4c0e-a214-cecdac77b6af",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bd420de0-1b82-4635-ba7b-698ca32c876b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6c45a8e5-5103-4479-94f7-afd5d34ead8f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "167c904e-f669-417e-bbc4-e4abc963aa2b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "417c771d-871f-4107-a5f0-307dc2f9276d",
      "documentation": "Creates a new flow. The request must include one source. The request optionally can include outputs (up to 50) and entitlements (up to 50).",
      "method": "post",
      "endpoint": "v1/flows",
      "responses": [
        {
          "uuid": "61f76c12-4ada-4f04-8f5b-1b6c634018cd",
          "body": "{\n  \"Flow\": {\n    \"AvailabilityZone\": \"\",\n    \"Description\": \"\",\n    \"EgressIp\": \"\",\n    \"Entitlements\": [\n      {\n        \"DataTransferSubscriberFeePercent\": {{faker 'random.number'}},\n        \"Description\": \"\",\n        \"Encryption\": {\n          \"Algorithm\": \"\",\n          \"ConstantInitializationVector\": \"\",\n          \"DeviceId\": \"\",\n          \"KeyType\": \"\",\n          \"Region\": \"\",\n          \"ResourceId\": \"\",\n          \"RoleArn\": \"\",\n          \"SecretArn\": \"\",\n          \"Url\": \"\"\n        },\n        \"EntitlementArn\": \"\",\n        \"EntitlementStatus\": \"\",\n        \"Name\": \"\",\n        \"Subscribers\": [\n          \"\"\n        ]\n      }\n    ],\n    \"FlowArn\": \"\",\n    \"MediaStreams\": [\n      {\n        \"Attributes\": {\n          \"Fmtp\": {\n            \"ChannelOrder\": \"\",\n            \"Colorimetry\": \"\",\n            \"ExactFramerate\": \"\",\n            \"Par\": \"\",\n            \"Range\": \"\",\n            \"ScanMode\": \"\",\n            \"Tcs\": \"\"\n          },\n          \"Lang\": \"\"\n        },\n        \"ClockRate\": {{faker 'random.number'}},\n        \"Description\": \"\",\n        \"Fmt\": {{faker 'random.number'}},\n        \"MediaStreamId\": {{faker 'random.number'}},\n        \"MediaStreamName\": \"\",\n        \"MediaStreamType\": \"\",\n        \"VideoFormat\": \"\"\n      }\n    ],\n    \"Name\": \"\",\n    \"Outputs\": [\n      {\n        \"DataTransferSubscriberFeePercent\": {{faker 'random.number'}},\n        \"Description\": \"\",\n        \"Destination\": \"\",\n        \"Encryption\": {\n          \"Algorithm\": \"\",\n          \"ConstantInitializationVector\": \"\",\n          \"DeviceId\": \"\",\n          \"KeyType\": \"\",\n          \"Region\": \"\",\n          \"ResourceId\": \"\",\n          \"RoleArn\": \"\",\n          \"SecretArn\": \"\",\n          \"Url\": \"\"\n        },\n        \"EntitlementArn\": \"\",\n        \"ListenerAddress\": \"\",\n        \"MediaLiveInputArn\": \"\",\n        \"MediaStreamOutputConfigurations\": [\n          {\n            \"DestinationConfigurations\": [\n              {\n                \"DestinationIp\": \"\",\n                \"DestinationPort\": {{faker 'random.number'}},\n                \"Interface\": {\n                  \"Name\": \"\"\n                },\n                \"OutboundIp\": \"\"\n              }\n            ],\n            \"EncodingName\": \"\",\n            \"EncodingParameters\": {\n              \"CompressionFactor\": {{faker 'random.float'}},\n              \"EncoderProfile\": \"\"\n            },\n            \"MediaStreamName\": \"\"\n          }\n        ],\n        \"Name\": \"\",\n        \"OutputArn\": \"\",\n        \"Port\": {{faker 'random.number'}},\n        \"Transport\": {\n          \"CidrAllowList\": [\n            \"\"\n          ],\n          \"MaxBitrate\": {{faker 'random.number'}},\n          \"MaxLatency\": {{faker 'random.number'}},\n          \"MaxSyncBuffer\": {{faker 'random.number'}},\n          \"MinLatency\": {{faker 'random.number'}},\n          \"Protocol\": \"\",\n          \"RemoteId\": \"\",\n          \"SmoothingLatency\": {{faker 'random.number'}},\n          \"StreamId\": \"\"\n        },\n        \"VpcInterfaceAttachment\": {\n          \"VpcInterfaceName\": \"\"\n        }\n      }\n    ],\n    \"Source\": {\n      \"DataTransferSubscriberFeePercent\": {{faker 'random.number'}},\n      \"Decryption\": {\n        \"Algorithm\": \"\",\n        \"ConstantInitializationVector\": \"\",\n        \"DeviceId\": \"\",\n        \"KeyType\": \"\",\n        \"Region\": \"\",\n        \"ResourceId\": \"\",\n        \"RoleArn\": \"\",\n        \"SecretArn\": \"\",\n        \"Url\": \"\"\n      },\n      \"Description\": \"\",\n      \"EntitlementArn\": \"\",\n      \"IngestIp\": \"\",\n      \"IngestPort\": {{faker 'random.number'}},\n      \"MediaStreamSourceConfigurations\": [\n        {\n          \"EncodingName\": \"\",\n          \"InputConfigurations\": [\n            {\n              \"InputIp\": \"\",\n              \"InputPort\": {{faker 'random.number'}},\n              \"Interface\": {\n                \"Name\": \"\"\n              }\n            }\n          ],\n          \"MediaStreamName\": \"\"\n        }\n      ],\n      \"Name\": \"\",\n      \"SourceArn\": \"\",\n      \"Transport\": {\n        \"CidrAllowList\": [\n          \"\"\n        ],\n        \"MaxBitrate\": {{faker 'random.number'}},\n        \"MaxLatency\": {{faker 'random.number'}},\n        \"MaxSyncBuffer\": {{faker 'random.number'}},\n        \"MinLatency\": {{faker 'random.number'}},\n        \"Protocol\": \"\",\n        \"RemoteId\": \"\",\n        \"SmoothingLatency\": {{faker 'random.number'}},\n        \"StreamId\": \"\"\n      },\n      \"VpcInterfaceName\": \"\",\n      \"WhitelistCidr\": \"\"\n    },\n    \"SourceFailoverConfig\": {\n      \"FailoverMode\": \"\",\n      \"RecoveryWindow\": {{faker 'random.number'}},\n      \"SourcePriority\": {\n        \"PrimarySource\": \"\"\n      },\n      \"State\": \"\"\n    },\n    \"Sources\": [\n      {\n        \"DataTransferSubscriberFeePercent\": {{faker 'random.number'}},\n        \"Decryption\": {\n          \"Algorithm\": \"\",\n          \"ConstantInitializationVector\": \"\",\n          \"DeviceId\": \"\",\n          \"KeyType\": \"\",\n          \"Region\": \"\",\n          \"ResourceId\": \"\",\n          \"RoleArn\": \"\",\n          \"SecretArn\": \"\",\n          \"Url\": \"\"\n        },\n        \"Description\": \"\",\n        \"EntitlementArn\": \"\",\n        \"IngestIp\": \"\",\n        \"IngestPort\": {{faker 'random.number'}},\n        \"MediaStreamSourceConfigurations\": [\n          {\n            \"EncodingName\": \"\",\n            \"InputConfigurations\": [\n              {\n                \"InputIp\": \"\",\n                \"InputPort\": {{faker 'random.number'}},\n                \"Interface\": {\n                  \"Name\": \"\"\n                }\n              }\n            ],\n            \"MediaStreamName\": \"\"\n          }\n        ],\n        \"Name\": \"\",\n        \"SourceArn\": \"\",\n        \"Transport\": {\n          \"CidrAllowList\": [\n            \"\"\n          ],\n          \"MaxBitrate\": {{faker 'random.number'}},\n          \"MaxLatency\": {{faker 'random.number'}},\n          \"MaxSyncBuffer\": {{faker 'random.number'}},\n          \"MinLatency\": {{faker 'random.number'}},\n          \"Protocol\": \"\",\n          \"RemoteId\": \"\",\n          \"SmoothingLatency\": {{faker 'random.number'}},\n          \"StreamId\": \"\"\n        },\n        \"VpcInterfaceName\": \"\",\n        \"WhitelistCidr\": \"\"\n      }\n    ],\n    \"Status\": \"\",\n    \"VpcInterfaces\": [\n      {\n        \"Name\": \"\",\n        \"NetworkInterfaceIds\": [\n          \"\"\n        ],\n        \"NetworkInterfaceType\": \"\",\n        \"RoleArn\": \"\",\n        \"SecurityGroupIds\": [\n          \"\"\n        ],\n        \"SubnetId\": \"\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fd404066-9785-4a30-9d27-dede0d9b31d1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "CreateFlow420Exception",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5023810a-b314-4cf5-abae-bd47df26a12e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "094360b3-16b3-4e91-abad-4407b986238d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1fe6843f-f65b-4b96-9c23-689f25c6f591",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b52b0eff-3360-460d-b5f3-3f89d4a9fa20",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "824b815d-7264-404c-b5fb-dfc5404cbdd9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "78783090-6ed3-4761-a12c-8a0bcb548ac2",
      "documentation": "Displays a list of flows that are associated with this account. This request returns a paginated result.",
      "method": "get",
      "endpoint": "v1/flows",
      "responses": [
        {
          "uuid": "92a38433-6932-4838-95ee-ede882b50670",
          "body": "{\n  \"Flows\": [\n    {\n      \"AvailabilityZone\": \"\",\n      \"Description\": \"\",\n      \"FlowArn\": \"\",\n      \"Name\": \"\",\n      \"SourceType\": \"\",\n      \"Status\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e0044860-d632-44f2-bb91-72a4768771c5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3725f02e-696b-4c7f-b2af-79526e2a84b4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bd546a74-0a80-4732-b5a2-64e172532c05",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "02361b58-d4d9-4ab5-959a-4e13d88de02e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6de38523-343f-406e-80e6-0b28f6462182",
      "documentation": "Deletes a flow. Before you can delete a flow, you must stop the flow.",
      "method": "delete",
      "endpoint": "v1/flows/:flowArn",
      "responses": [
        {
          "uuid": "23bee0aa-c906-42e7-9fbb-ffba4f8b568b",
          "body": "{\n  \"FlowArn\": \"\",\n  \"Status\": \"\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "064d4dc5-8028-459b-b137-b21b2f72179e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d334513b-1bc1-46df-b078-8a70ccc8d5ca",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a6605799-42d5-4681-b252-b304dfc5b6ac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "952fcece-2b82-419c-9aa9-13ae30dc0963",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4706c533-de6e-4a7b-9310-3d37849cc36e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2e444376-3dc6-46ff-9cc9-261a5adfe09c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0389ca94-2efa-4f3b-8e70-71b66c470935",
      "documentation": "Displays the details of a flow. The response includes the flow ARN, name, and Availability Zone, as well as details about the source, outputs, and entitlements.",
      "method": "get",
      "endpoint": "v1/flows/:flowArn",
      "responses": [
        {
          "uuid": "27359794-e8e7-4265-8fe2-bd8c9224267b",
          "body": "{\n  \"Flow\": {\n    \"AvailabilityZone\": \"\",\n    \"Description\": \"\",\n    \"EgressIp\": \"\",\n    \"Entitlements\": [\n      {\n        \"DataTransferSubscriberFeePercent\": {{faker 'random.number'}},\n        \"Description\": \"\",\n        \"Encryption\": {\n          \"Algorithm\": \"\",\n          \"ConstantInitializationVector\": \"\",\n          \"DeviceId\": \"\",\n          \"KeyType\": \"\",\n          \"Region\": \"\",\n          \"ResourceId\": \"\",\n          \"RoleArn\": \"\",\n          \"SecretArn\": \"\",\n          \"Url\": \"\"\n        },\n        \"EntitlementArn\": \"\",\n        \"EntitlementStatus\": \"\",\n        \"Name\": \"\",\n        \"Subscribers\": [\n          \"\"\n        ]\n      }\n    ],\n    \"FlowArn\": \"\",\n    \"MediaStreams\": [\n      {\n        \"Attributes\": {\n          \"Fmtp\": {\n            \"ChannelOrder\": \"\",\n            \"Colorimetry\": \"\",\n            \"ExactFramerate\": \"\",\n            \"Par\": \"\",\n            \"Range\": \"\",\n            \"ScanMode\": \"\",\n            \"Tcs\": \"\"\n          },\n          \"Lang\": \"\"\n        },\n        \"ClockRate\": {{faker 'random.number'}},\n        \"Description\": \"\",\n        \"Fmt\": {{faker 'random.number'}},\n        \"MediaStreamId\": {{faker 'random.number'}},\n        \"MediaStreamName\": \"\",\n        \"MediaStreamType\": \"\",\n        \"VideoFormat\": \"\"\n      }\n    ],\n    \"Name\": \"\",\n    \"Outputs\": [\n      {\n        \"DataTransferSubscriberFeePercent\": {{faker 'random.number'}},\n        \"Description\": \"\",\n        \"Destination\": \"\",\n        \"Encryption\": {\n          \"Algorithm\": \"\",\n          \"ConstantInitializationVector\": \"\",\n          \"DeviceId\": \"\",\n          \"KeyType\": \"\",\n          \"Region\": \"\",\n          \"ResourceId\": \"\",\n          \"RoleArn\": \"\",\n          \"SecretArn\": \"\",\n          \"Url\": \"\"\n        },\n        \"EntitlementArn\": \"\",\n        \"ListenerAddress\": \"\",\n        \"MediaLiveInputArn\": \"\",\n        \"MediaStreamOutputConfigurations\": [\n          {\n            \"DestinationConfigurations\": [\n              {\n                \"DestinationIp\": \"\",\n                \"DestinationPort\": {{faker 'random.number'}},\n                \"Interface\": {\n                  \"Name\": \"\"\n                },\n                \"OutboundIp\": \"\"\n              }\n            ],\n            \"EncodingName\": \"\",\n            \"EncodingParameters\": {\n              \"CompressionFactor\": {{faker 'random.float'}},\n              \"EncoderProfile\": \"\"\n            },\n            \"MediaStreamName\": \"\"\n          }\n        ],\n        \"Name\": \"\",\n        \"OutputArn\": \"\",\n        \"Port\": {{faker 'random.number'}},\n        \"Transport\": {\n          \"CidrAllowList\": [\n            \"\"\n          ],\n          \"MaxBitrate\": {{faker 'random.number'}},\n          \"MaxLatency\": {{faker 'random.number'}},\n          \"MaxSyncBuffer\": {{faker 'random.number'}},\n          \"MinLatency\": {{faker 'random.number'}},\n          \"Protocol\": \"\",\n          \"RemoteId\": \"\",\n          \"SmoothingLatency\": {{faker 'random.number'}},\n          \"StreamId\": \"\"\n        },\n        \"VpcInterfaceAttachment\": {\n          \"VpcInterfaceName\": \"\"\n        }\n      }\n    ],\n    \"Source\": {\n      \"DataTransferSubscriberFeePercent\": {{faker 'random.number'}},\n      \"Decryption\": {\n        \"Algorithm\": \"\",\n        \"ConstantInitializationVector\": \"\",\n        \"DeviceId\": \"\",\n        \"KeyType\": \"\",\n        \"Region\": \"\",\n        \"ResourceId\": \"\",\n        \"RoleArn\": \"\",\n        \"SecretArn\": \"\",\n        \"Url\": \"\"\n      },\n      \"Description\": \"\",\n      \"EntitlementArn\": \"\",\n      \"IngestIp\": \"\",\n      \"IngestPort\": {{faker 'random.number'}},\n      \"MediaStreamSourceConfigurations\": [\n        {\n          \"EncodingName\": \"\",\n          \"InputConfigurations\": [\n            {\n              \"InputIp\": \"\",\n              \"InputPort\": {{faker 'random.number'}},\n              \"Interface\": {\n                \"Name\": \"\"\n              }\n            }\n          ],\n          \"MediaStreamName\": \"\"\n        }\n      ],\n      \"Name\": \"\",\n      \"SourceArn\": \"\",\n      \"Transport\": {\n        \"CidrAllowList\": [\n          \"\"\n        ],\n        \"MaxBitrate\": {{faker 'random.number'}},\n        \"MaxLatency\": {{faker 'random.number'}},\n        \"MaxSyncBuffer\": {{faker 'random.number'}},\n        \"MinLatency\": {{faker 'random.number'}},\n        \"Protocol\": \"\",\n        \"RemoteId\": \"\",\n        \"SmoothingLatency\": {{faker 'random.number'}},\n        \"StreamId\": \"\"\n      },\n      \"VpcInterfaceName\": \"\",\n      \"WhitelistCidr\": \"\"\n    },\n    \"SourceFailoverConfig\": {\n      \"FailoverMode\": \"\",\n      \"RecoveryWindow\": {{faker 'random.number'}},\n      \"SourcePriority\": {\n        \"PrimarySource\": \"\"\n      },\n      \"State\": \"\"\n    },\n    \"Sources\": [\n      {\n        \"DataTransferSubscriberFeePercent\": {{faker 'random.number'}},\n        \"Decryption\": {\n          \"Algorithm\": \"\",\n          \"ConstantInitializationVector\": \"\",\n          \"DeviceId\": \"\",\n          \"KeyType\": \"\",\n          \"Region\": \"\",\n          \"ResourceId\": \"\",\n          \"RoleArn\": \"\",\n          \"SecretArn\": \"\",\n          \"Url\": \"\"\n        },\n        \"Description\": \"\",\n        \"EntitlementArn\": \"\",\n        \"IngestIp\": \"\",\n        \"IngestPort\": {{faker 'random.number'}},\n        \"MediaStreamSourceConfigurations\": [\n          {\n            \"EncodingName\": \"\",\n            \"InputConfigurations\": [\n              {\n                \"InputIp\": \"\",\n                \"InputPort\": {{faker 'random.number'}},\n                \"Interface\": {\n                  \"Name\": \"\"\n                }\n              }\n            ],\n            \"MediaStreamName\": \"\"\n          }\n        ],\n        \"Name\": \"\",\n        \"SourceArn\": \"\",\n        \"Transport\": {\n          \"CidrAllowList\": [\n            \"\"\n          ],\n          \"MaxBitrate\": {{faker 'random.number'}},\n          \"MaxLatency\": {{faker 'random.number'}},\n          \"MaxSyncBuffer\": {{faker 'random.number'}},\n          \"MinLatency\": {{faker 'random.number'}},\n          \"Protocol\": \"\",\n          \"RemoteId\": \"\",\n          \"SmoothingLatency\": {{faker 'random.number'}},\n          \"StreamId\": \"\"\n        },\n        \"VpcInterfaceName\": \"\",\n        \"WhitelistCidr\": \"\"\n      }\n    ],\n    \"Status\": \"\",\n    \"VpcInterfaces\": [\n      {\n        \"Name\": \"\",\n        \"NetworkInterfaceIds\": [\n          \"\"\n        ],\n        \"NetworkInterfaceType\": \"\",\n        \"RoleArn\": \"\",\n        \"SecurityGroupIds\": [\n          \"\"\n        ],\n        \"SubnetId\": \"\"\n      }\n    ]\n  },\n  \"Messages\": {\n    \"Errors\": [\n      \"\"\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "34617e12-c939-4714-a16d-17da01377743",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "317455a6-2cd9-4db2-ad40-4032c545f867",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "abb9efcf-cbad-46f5-96d1-38ab1dbdbabe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "db7ea2c2-bee3-465c-84f2-2d788fffecb0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c047d298-7a0d-47aa-b7f8-1bde33ce40bd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c2582c9a-68fe-4f78-89bd-4703d2b3c877",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "300182a8-8724-4109-a811-e0a2b16757a1",
      "documentation": "Updates flow",
      "method": "put",
      "endpoint": "v1/flows/:flowArn",
      "responses": [
        {
          "uuid": "91090d92-ee7c-4181-a4ad-ebecf0846f3e",
          "body": "{\n  \"Flow\": {\n    \"AvailabilityZone\": \"\",\n    \"Description\": \"\",\n    \"EgressIp\": \"\",\n    \"Entitlements\": [\n      {\n        \"DataTransferSubscriberFeePercent\": {{faker 'random.number'}},\n        \"Description\": \"\",\n        \"Encryption\": {\n          \"Algorithm\": \"\",\n          \"ConstantInitializationVector\": \"\",\n          \"DeviceId\": \"\",\n          \"KeyType\": \"\",\n          \"Region\": \"\",\n          \"ResourceId\": \"\",\n          \"RoleArn\": \"\",\n          \"SecretArn\": \"\",\n          \"Url\": \"\"\n        },\n        \"EntitlementArn\": \"\",\n        \"EntitlementStatus\": \"\",\n        \"Name\": \"\",\n        \"Subscribers\": [\n          \"\"\n        ]\n      }\n    ],\n    \"FlowArn\": \"\",\n    \"MediaStreams\": [\n      {\n        \"Attributes\": {\n          \"Fmtp\": {\n            \"ChannelOrder\": \"\",\n            \"Colorimetry\": \"\",\n            \"ExactFramerate\": \"\",\n            \"Par\": \"\",\n            \"Range\": \"\",\n            \"ScanMode\": \"\",\n            \"Tcs\": \"\"\n          },\n          \"Lang\": \"\"\n        },\n        \"ClockRate\": {{faker 'random.number'}},\n        \"Description\": \"\",\n        \"Fmt\": {{faker 'random.number'}},\n        \"MediaStreamId\": {{faker 'random.number'}},\n        \"MediaStreamName\": \"\",\n        \"MediaStreamType\": \"\",\n        \"VideoFormat\": \"\"\n      }\n    ],\n    \"Name\": \"\",\n    \"Outputs\": [\n      {\n        \"DataTransferSubscriberFeePercent\": {{faker 'random.number'}},\n        \"Description\": \"\",\n        \"Destination\": \"\",\n        \"Encryption\": {\n          \"Algorithm\": \"\",\n          \"ConstantInitializationVector\": \"\",\n          \"DeviceId\": \"\",\n          \"KeyType\": \"\",\n          \"Region\": \"\",\n          \"ResourceId\": \"\",\n          \"RoleArn\": \"\",\n          \"SecretArn\": \"\",\n          \"Url\": \"\"\n        },\n        \"EntitlementArn\": \"\",\n        \"ListenerAddress\": \"\",\n        \"MediaLiveInputArn\": \"\",\n        \"MediaStreamOutputConfigurations\": [\n          {\n            \"DestinationConfigurations\": [\n              {\n                \"DestinationIp\": \"\",\n                \"DestinationPort\": {{faker 'random.number'}},\n                \"Interface\": {\n                  \"Name\": \"\"\n                },\n                \"OutboundIp\": \"\"\n              }\n            ],\n            \"EncodingName\": \"\",\n            \"EncodingParameters\": {\n              \"CompressionFactor\": {{faker 'random.float'}},\n              \"EncoderProfile\": \"\"\n            },\n            \"MediaStreamName\": \"\"\n          }\n        ],\n        \"Name\": \"\",\n        \"OutputArn\": \"\",\n        \"Port\": {{faker 'random.number'}},\n        \"Transport\": {\n          \"CidrAllowList\": [\n            \"\"\n          ],\n          \"MaxBitrate\": {{faker 'random.number'}},\n          \"MaxLatency\": {{faker 'random.number'}},\n          \"MaxSyncBuffer\": {{faker 'random.number'}},\n          \"MinLatency\": {{faker 'random.number'}},\n          \"Protocol\": \"\",\n          \"RemoteId\": \"\",\n          \"SmoothingLatency\": {{faker 'random.number'}},\n          \"StreamId\": \"\"\n        },\n        \"VpcInterfaceAttachment\": {\n          \"VpcInterfaceName\": \"\"\n        }\n      }\n    ],\n    \"Source\": {\n      \"DataTransferSubscriberFeePercent\": {{faker 'random.number'}},\n      \"Decryption\": {\n        \"Algorithm\": \"\",\n        \"ConstantInitializationVector\": \"\",\n        \"DeviceId\": \"\",\n        \"KeyType\": \"\",\n        \"Region\": \"\",\n        \"ResourceId\": \"\",\n        \"RoleArn\": \"\",\n        \"SecretArn\": \"\",\n        \"Url\": \"\"\n      },\n      \"Description\": \"\",\n      \"EntitlementArn\": \"\",\n      \"IngestIp\": \"\",\n      \"IngestPort\": {{faker 'random.number'}},\n      \"MediaStreamSourceConfigurations\": [\n        {\n          \"EncodingName\": \"\",\n          \"InputConfigurations\": [\n            {\n              \"InputIp\": \"\",\n              \"InputPort\": {{faker 'random.number'}},\n              \"Interface\": {\n                \"Name\": \"\"\n              }\n            }\n          ],\n          \"MediaStreamName\": \"\"\n        }\n      ],\n      \"Name\": \"\",\n      \"SourceArn\": \"\",\n      \"Transport\": {\n        \"CidrAllowList\": [\n          \"\"\n        ],\n        \"MaxBitrate\": {{faker 'random.number'}},\n        \"MaxLatency\": {{faker 'random.number'}},\n        \"MaxSyncBuffer\": {{faker 'random.number'}},\n        \"MinLatency\": {{faker 'random.number'}},\n        \"Protocol\": \"\",\n        \"RemoteId\": \"\",\n        \"SmoothingLatency\": {{faker 'random.number'}},\n        \"StreamId\": \"\"\n      },\n      \"VpcInterfaceName\": \"\",\n      \"WhitelistCidr\": \"\"\n    },\n    \"SourceFailoverConfig\": {\n      \"FailoverMode\": \"\",\n      \"RecoveryWindow\": {{faker 'random.number'}},\n      \"SourcePriority\": {\n        \"PrimarySource\": \"\"\n      },\n      \"State\": \"\"\n    },\n    \"Sources\": [\n      {\n        \"DataTransferSubscriberFeePercent\": {{faker 'random.number'}},\n        \"Decryption\": {\n          \"Algorithm\": \"\",\n          \"ConstantInitializationVector\": \"\",\n          \"DeviceId\": \"\",\n          \"KeyType\": \"\",\n          \"Region\": \"\",\n          \"ResourceId\": \"\",\n          \"RoleArn\": \"\",\n          \"SecretArn\": \"\",\n          \"Url\": \"\"\n        },\n        \"Description\": \"\",\n        \"EntitlementArn\": \"\",\n        \"IngestIp\": \"\",\n        \"IngestPort\": {{faker 'random.number'}},\n        \"MediaStreamSourceConfigurations\": [\n          {\n            \"EncodingName\": \"\",\n            \"InputConfigurations\": [\n              {\n                \"InputIp\": \"\",\n                \"InputPort\": {{faker 'random.number'}},\n                \"Interface\": {\n                  \"Name\": \"\"\n                }\n              }\n            ],\n            \"MediaStreamName\": \"\"\n          }\n        ],\n        \"Name\": \"\",\n        \"SourceArn\": \"\",\n        \"Transport\": {\n          \"CidrAllowList\": [\n            \"\"\n          ],\n          \"MaxBitrate\": {{faker 'random.number'}},\n          \"MaxLatency\": {{faker 'random.number'}},\n          \"MaxSyncBuffer\": {{faker 'random.number'}},\n          \"MinLatency\": {{faker 'random.number'}},\n          \"Protocol\": \"\",\n          \"RemoteId\": \"\",\n          \"SmoothingLatency\": {{faker 'random.number'}},\n          \"StreamId\": \"\"\n        },\n        \"VpcInterfaceName\": \"\",\n        \"WhitelistCidr\": \"\"\n      }\n    ],\n    \"Status\": \"\",\n    \"VpcInterfaces\": [\n      {\n        \"Name\": \"\",\n        \"NetworkInterfaceIds\": [\n          \"\"\n        ],\n        \"NetworkInterfaceType\": \"\",\n        \"RoleArn\": \"\",\n        \"SecurityGroupIds\": [\n          \"\"\n        ],\n        \"SubnetId\": \"\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c22a9881-ceaa-4574-8b21-cc4dda281684",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "36b156fe-f49e-4230-9acd-789683ad80e6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1abd5aa2-6bd0-4fc4-95ba-b1ac8f648dcd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1bf409bb-8e45-4025-9c23-c9ce25ae4b19",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5de3f998-b05d-4d53-b8e9-fb221570e625",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d590631b-8ebd-4570-a0c7-ad42a85e78c5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5106cd4f-3042-4e7c-bda0-4bd23511bdd3",
      "documentation": "Displays the details of an offering. The response includes the offering description, duration, outbound bandwidth, price, and Amazon Resource Name (ARN).",
      "method": "get",
      "endpoint": "v1/offerings/:offeringArn",
      "responses": [
        {
          "uuid": "77f24aed-c65d-4c0b-ac8b-040097f69a66",
          "body": "{\n  \"Offering\": {\n    \"CurrencyCode\": \"\",\n    \"Duration\": {{faker 'random.number'}},\n    \"DurationUnits\": \"\",\n    \"OfferingArn\": \"\",\n    \"OfferingDescription\": \"\",\n    \"PricePerUnit\": \"\",\n    \"PriceUnits\": \"\",\n    \"ResourceSpecification\": {\n      \"ReservedBitrate\": {{faker 'random.number'}},\n      \"ResourceType\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "edd9ee57-026f-474d-8fc2-cd691317e294",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2eb248d1-cff2-4c0b-8500-9bd8d928fe2c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "38bdded3-7d25-4299-b74c-40f75aa119da",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "948f564b-5f25-48d0-85ce-ec5fb34bfdf6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b2937c21-d5da-44e4-9ff2-7ad3678ebca1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8248e286-9c6e-4c79-b083-d00d00d47e60",
      "documentation": "Submits a request to purchase an offering. If you already have an active reservation, you can't purchase another offering.",
      "method": "post",
      "endpoint": "v1/offerings/:offeringArn",
      "responses": [
        {
          "uuid": "696c8783-dfdc-4a05-9d80-48056ea6c1a9",
          "body": "{\n  \"Reservation\": {\n    \"CurrencyCode\": \"\",\n    \"Duration\": {{faker 'random.number'}},\n    \"DurationUnits\": \"\",\n    \"End\": \"\",\n    \"OfferingArn\": \"\",\n    \"OfferingDescription\": \"\",\n    \"PricePerUnit\": \"\",\n    \"PriceUnits\": \"\",\n    \"ReservationArn\": \"\",\n    \"ReservationName\": \"\",\n    \"ReservationState\": \"\",\n    \"ResourceSpecification\": {\n      \"ReservedBitrate\": {{faker 'random.number'}},\n      \"ResourceType\": \"\"\n    },\n    \"Start\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0578685f-3e2c-463d-a3fd-8cf7f08d36f7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ca32bec8-5346-45fa-a205-5cf69790b901",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9cbf6f4e-1f93-4182-a825-5a1b8f010114",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "acb3520f-e56f-48bf-a401-fe2c1e031ecc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a0e781af-5347-47d3-a7f6-f65fd75e6c62",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3b46d7e5-7f0a-4e01-b029-eaa376c287fa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "70df439d-2072-43f0-ae6e-40cfdce5ab88",
      "documentation": "Displays the details of a reservation. The response includes the reservation name, state, start date and time, and the details of the offering that make up the rest of the reservation (such as price, duration, and outbound bandwidth).",
      "method": "get",
      "endpoint": "v1/reservations/:reservationArn",
      "responses": [
        {
          "uuid": "58e6303d-deb1-421f-9cab-c64d79ed12c5",
          "body": "{\n  \"Reservation\": {\n    \"CurrencyCode\": \"\",\n    \"Duration\": {{faker 'random.number'}},\n    \"DurationUnits\": \"\",\n    \"End\": \"\",\n    \"OfferingArn\": \"\",\n    \"OfferingDescription\": \"\",\n    \"PricePerUnit\": \"\",\n    \"PriceUnits\": \"\",\n    \"ReservationArn\": \"\",\n    \"ReservationName\": \"\",\n    \"ReservationState\": \"\",\n    \"ResourceSpecification\": {\n      \"ReservedBitrate\": {{faker 'random.number'}},\n      \"ResourceType\": \"\"\n    },\n    \"Start\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3b2f18a3-487a-4749-8482-921534eb490d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "036a0b49-19ae-4617-8695-08c404b2fa68",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "adf9800b-15e5-4c10-8cdf-ae63b0384c32",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b2c71118-77c9-497e-8ff5-1865d1498e8f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9cd49595-f9fe-46e3-a81f-14e08e585b5c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3f4adfea-39ec-4619-a26e-7329771dabd3",
      "documentation": "Grants entitlements to an existing flow.",
      "method": "post",
      "endpoint": "v1/flows/:flowArn/entitlements",
      "responses": [
        {
          "uuid": "ccd8a063-2d26-40e7-bc3c-9564f14d1c7b",
          "body": "{\n  \"Entitlements\": [\n    {\n      \"DataTransferSubscriberFeePercent\": {{faker 'random.number'}},\n      \"Description\": \"\",\n      \"Encryption\": {\n        \"Algorithm\": \"\",\n        \"ConstantInitializationVector\": \"\",\n        \"DeviceId\": \"\",\n        \"KeyType\": \"\",\n        \"Region\": \"\",\n        \"ResourceId\": \"\",\n        \"RoleArn\": \"\",\n        \"SecretArn\": \"\",\n        \"Url\": \"\"\n      },\n      \"EntitlementArn\": \"\",\n      \"EntitlementStatus\": \"\",\n      \"Name\": \"\",\n      \"Subscribers\": [\n        \"\"\n      ]\n    }\n  ],\n  \"FlowArn\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7311c2cb-2af6-49b6-9f66-2286aab7bd76",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "GrantFlowEntitlements420Exception",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9b634606-597e-41fb-b700-e15534e79b53",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "53724667-6c66-4773-a27f-d866a26913c6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "07025286-3ef3-441e-b532-9af250229036",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ade9e15d-35c4-4a9f-ab2f-6aa07819fbb0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "19673480-0ef3-4692-992d-7c2a6a90627d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7df49332-bf1b-48e5-85f7-6ef5bd3e73e1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "75af1b89-cd3a-4b81-bb6a-2a5f1565cd48",
      "documentation": "Displays a list of all entitlements that have been granted to this account. This request returns 20 results per page.",
      "method": "get",
      "endpoint": "v1/entitlements",
      "responses": [
        {
          "uuid": "652b0236-c192-47df-a7c4-df5a48859067",
          "body": "{\n  \"Entitlements\": [\n    {\n      \"DataTransferSubscriberFeePercent\": {{faker 'random.number'}},\n      \"EntitlementArn\": \"\",\n      \"EntitlementName\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "458a7a31-de7f-42a4-86c9-516ecd84697c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "616d48f3-41d5-4548-bc0d-03e34000b456",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "803919c0-4496-4d0b-b56a-015e01a4f4e4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "470b0fcb-d078-4fcf-ab11-6b832f0ad5ac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3cbafeeb-433e-4f33-8f60-9ed9e5eee927",
      "documentation": "Displays a list of all offerings that are available to this account in the current AWS Region. If you have an active reservation (which means you've purchased an offering that has already started and hasn't expired yet), your account isn't eligible for other offerings.",
      "method": "get",
      "endpoint": "v1/offerings",
      "responses": [
        {
          "uuid": "314962de-81ee-4656-8376-c918c54160b6",
          "body": "{\n  \"NextToken\": \"\",\n  \"Offerings\": [\n    {\n      \"CurrencyCode\": \"\",\n      \"Duration\": {{faker 'random.number'}},\n      \"DurationUnits\": \"\",\n      \"OfferingArn\": \"\",\n      \"OfferingDescription\": \"\",\n      \"PricePerUnit\": \"\",\n      \"PriceUnits\": \"\",\n      \"ResourceSpecification\": {\n        \"ReservedBitrate\": {{faker 'random.number'}},\n        \"ResourceType\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "70191c88-6b8b-4f62-8f43-ccfb723a7548",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b145b5b3-f2ad-4815-ab8d-cf2f4c2945a1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4e1c250f-4677-4ff3-bab7-555367efdaa7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c47a25c4-7ee0-4124-9e4a-5be22d267bfc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fbecc93a-faf4-40b1-98ce-60fac3ddd3c6",
      "documentation": "Displays a list of all reservations that have been purchased by this account in the current AWS Region. This list includes all reservations in all states (such as active and expired).",
      "method": "get",
      "endpoint": "v1/reservations",
      "responses": [
        {
          "uuid": "3826d8ca-a1f3-4f29-9675-c042a2988de2",
          "body": "{\n  \"NextToken\": \"\",\n  \"Reservations\": [\n    {\n      \"CurrencyCode\": \"\",\n      \"Duration\": {{faker 'random.number'}},\n      \"DurationUnits\": \"\",\n      \"End\": \"\",\n      \"OfferingArn\": \"\",\n      \"OfferingDescription\": \"\",\n      \"PricePerUnit\": \"\",\n      \"PriceUnits\": \"\",\n      \"ReservationArn\": \"\",\n      \"ReservationName\": \"\",\n      \"ReservationState\": \"\",\n      \"ResourceSpecification\": {\n        \"ReservedBitrate\": {{faker 'random.number'}},\n        \"ResourceType\": \"\"\n      },\n      \"Start\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "18941f00-5a1e-4229-a45a-6ca572484d0c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "353489fd-0297-4e2d-8218-2b71e9affd9c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0e6ce819-83ae-4dc8-b48f-20c3df5d7ca0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a819ad9d-bc22-49d5-84aa-8b6ac47f6699",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bf0988ae-0bd2-4fb0-975c-0adeac1099d8",
      "documentation": "List all tags on an AWS Elemental MediaConnect resource",
      "method": "get",
      "endpoint": "tags/:resourceArn",
      "responses": [
        {
          "uuid": "0ea79487-07a2-4da9-8244-00dd913c9d29",
          "body": "{\n  \"Tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2f6c5119-5eb5-495d-bcb0-2ffe8618b184",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "30d4985c-07f2-4fa3-9151-c832f25d4bd8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4db94387-28a1-4681-bd94-cd6ccea56deb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "24978991-9bec-435e-9085-ab8507d40693",
      "documentation": "Associates the specified tags to a resource with the specified resourceArn. If existing tags on a resource are not specified in the request parameters, they are not changed. When a resource is deleted, the tags associated with that resource are deleted as well.",
      "method": "post",
      "endpoint": "tags/:resourceArn",
      "responses": [
        {
          "uuid": "77b3c6bc-d635-4a2b-b1a3-980ddfd9efa5",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "747d19ae-41c7-4ec0-b217-c6e1dbab185f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4a7479a0-5615-45f0-a2d9-10647546eb8f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fa08e1ac-6273-4827-8e1c-7b411579bd88",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "eeb4404b-6fd0-4160-98e9-93cc60596a44",
      "documentation": "Removes a media stream from a flow. This action is only available if the media stream is not associated with a source or output.",
      "method": "delete",
      "endpoint": "v1/flows/:flowArn/mediaStreams/:mediaStreamName",
      "responses": [
        {
          "uuid": "240d154c-1353-436d-8636-33cd70f5745d",
          "body": "{\n  \"FlowArn\": \"\",\n  \"MediaStreamName\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c3fd92ec-1c74-41b1-bf21-9e3b6177315d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8393cbe3-6b4e-495c-a311-f4e69ca4142a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "838f673a-66ad-4538-964d-4b66ed2c1d9f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "48809e74-f5fc-4d96-a9db-38a6aea1d2ac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6c051972-b21a-498d-b557-bf718777edaa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "18016d37-72c1-4468-b505-1a5f4a34a70e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "944b983e-7ec7-46eb-a7e6-e37324a3bf6f",
      "documentation": "Updates an existing media stream.",
      "method": "put",
      "endpoint": "v1/flows/:flowArn/mediaStreams/:mediaStreamName",
      "responses": [
        {
          "uuid": "58ce814e-37c4-4812-a694-5e86bced9762",
          "body": "{\n  \"FlowArn\": \"\",\n  \"MediaStream\": {\n    \"Attributes\": {\n      \"Fmtp\": {\n        \"ChannelOrder\": \"\",\n        \"Colorimetry\": \"\",\n        \"ExactFramerate\": \"\",\n        \"Par\": \"\",\n        \"Range\": \"\",\n        \"ScanMode\": \"\",\n        \"Tcs\": \"\"\n      },\n      \"Lang\": \"\"\n    },\n    \"ClockRate\": {{faker 'random.number'}},\n    \"Description\": \"\",\n    \"Fmt\": {{faker 'random.number'}},\n    \"MediaStreamId\": {{faker 'random.number'}},\n    \"MediaStreamName\": \"\",\n    \"MediaStreamType\": \"\",\n    \"VideoFormat\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "407f6d47-b5ff-4e20-b228-ab40955510ec",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "05f6e04a-f0f5-450f-ba65-b93457402eba",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "db0183ca-3d37-4920-a1f1-a55df2af3bb0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "93605190-adb4-412a-b7f0-aa2d66b98874",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "55d68acf-1058-48b4-ab8e-d5502b366e44",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c080eeb0-cf52-47d9-80f9-cb1d18479c87",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2436ec5c-accf-4d1a-b960-822c895bf67c",
      "documentation": "Removes an output from an existing flow. This request can be made only on an output that does not have an entitlement associated with it. If the output has an entitlement, you must revoke the entitlement instead. When an entitlement is revoked from a flow, the service automatically removes the associated output.",
      "method": "delete",
      "endpoint": "v1/flows/:flowArn/outputs/:outputArn",
      "responses": [
        {
          "uuid": "814e6a75-6da1-4c43-bf49-7fef726c9313",
          "body": "{\n  \"FlowArn\": \"\",\n  \"OutputArn\": \"\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aae52220-5644-458f-aeef-57379cfa5590",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "17120b5f-32b7-4e3f-9d74-0a553b7ce8c9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a88a1e6c-2a2c-4d46-a936-5ee3d24f7900",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "456ab2db-3fde-4bb2-a916-752f2239409c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "01811675-aac0-41d8-93f1-5109f2d34614",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f4984a5a-4fab-4cde-98c7-09cd80f29050",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6dbcee32-f10e-4e4c-8a81-91e7d0dfcca7",
      "documentation": "Updates an existing flow output.",
      "method": "put",
      "endpoint": "v1/flows/:flowArn/outputs/:outputArn",
      "responses": [
        {
          "uuid": "3ab4c827-b278-4cf4-b4e2-4fe3154f0086",
          "body": "{\n  \"FlowArn\": \"\",\n  \"Output\": {\n    \"DataTransferSubscriberFeePercent\": {{faker 'random.number'}},\n    \"Description\": \"\",\n    \"Destination\": \"\",\n    \"Encryption\": {\n      \"Algorithm\": \"\",\n      \"ConstantInitializationVector\": \"\",\n      \"DeviceId\": \"\",\n      \"KeyType\": \"\",\n      \"Region\": \"\",\n      \"ResourceId\": \"\",\n      \"RoleArn\": \"\",\n      \"SecretArn\": \"\",\n      \"Url\": \"\"\n    },\n    \"EntitlementArn\": \"\",\n    \"ListenerAddress\": \"\",\n    \"MediaLiveInputArn\": \"\",\n    \"MediaStreamOutputConfigurations\": [\n      {\n        \"DestinationConfigurations\": [\n          {\n            \"DestinationIp\": \"\",\n            \"DestinationPort\": {{faker 'random.number'}},\n            \"Interface\": {\n              \"Name\": \"\"\n            },\n            \"OutboundIp\": \"\"\n          }\n        ],\n        \"EncodingName\": \"\",\n        \"EncodingParameters\": {\n          \"CompressionFactor\": {{faker 'random.float'}},\n          \"EncoderProfile\": \"\"\n        },\n        \"MediaStreamName\": \"\"\n      }\n    ],\n    \"Name\": \"\",\n    \"OutputArn\": \"\",\n    \"Port\": {{faker 'random.number'}},\n    \"Transport\": {\n      \"CidrAllowList\": [\n        \"\"\n      ],\n      \"MaxBitrate\": {{faker 'random.number'}},\n      \"MaxLatency\": {{faker 'random.number'}},\n      \"MaxSyncBuffer\": {{faker 'random.number'}},\n      \"MinLatency\": {{faker 'random.number'}},\n      \"Protocol\": \"\",\n      \"RemoteId\": \"\",\n      \"SmoothingLatency\": {{faker 'random.number'}},\n      \"StreamId\": \"\"\n    },\n    \"VpcInterfaceAttachment\": {\n      \"VpcInterfaceName\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cefca0d9-0102-47a0-99b9-9cdfa711bfcd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9d742609-83d9-4ce8-a438-a105cf963ea8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8184627d-eb09-46dc-8504-8841389461dc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "581781bb-e5af-445e-ba03-7399fe8d8183",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8e172b0e-5a8d-43d6-8555-fe2a9e2f50aa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7538103d-ebe5-457d-8f9b-2211f7d0a291",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "25fd19a4-e24f-44e6-bb0e-b7f2f2dbfcbd",
      "documentation": "Removes a source from an existing flow. This request can be made only if there is more than one source on the flow.",
      "method": "delete",
      "endpoint": "v1/flows/:flowArn/source/:sourceArn",
      "responses": [
        {
          "uuid": "af9d11f9-b42e-4b6a-a89f-26dab145b035",
          "body": "{\n  \"FlowArn\": \"\",\n  \"SourceArn\": \"\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ba7df64f-7da8-47b2-a445-ab7aa1becf0f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b476da0a-35a3-4d28-b576-e024982c25b5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a349d2b3-41bd-40e4-976c-1b4d63e816fe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "969638f3-edd4-472d-9f1d-9a2928dd25b3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "711e0ce1-0823-48af-9527-da78af2d4b1c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "56b36d2b-e7c2-4f09-82b4-492114dc5f0e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8a467b80-9ae9-4654-a5cb-0343be1c55f1",
      "documentation": "Updates the source of a flow.",
      "method": "put",
      "endpoint": "v1/flows/:flowArn/source/:sourceArn",
      "responses": [
        {
          "uuid": "e236fbb6-e8ae-47de-bc1b-240b7a45428f",
          "body": "{\n  \"FlowArn\": \"\",\n  \"Source\": {\n    \"DataTransferSubscriberFeePercent\": {{faker 'random.number'}},\n    \"Decryption\": {\n      \"Algorithm\": \"\",\n      \"ConstantInitializationVector\": \"\",\n      \"DeviceId\": \"\",\n      \"KeyType\": \"\",\n      \"Region\": \"\",\n      \"ResourceId\": \"\",\n      \"RoleArn\": \"\",\n      \"SecretArn\": \"\",\n      \"Url\": \"\"\n    },\n    \"Description\": \"\",\n    \"EntitlementArn\": \"\",\n    \"IngestIp\": \"\",\n    \"IngestPort\": {{faker 'random.number'}},\n    \"MediaStreamSourceConfigurations\": [\n      {\n        \"EncodingName\": \"\",\n        \"InputConfigurations\": [\n          {\n            \"InputIp\": \"\",\n            \"InputPort\": {{faker 'random.number'}},\n            \"Interface\": {\n              \"Name\": \"\"\n            }\n          }\n        ],\n        \"MediaStreamName\": \"\"\n      }\n    ],\n    \"Name\": \"\",\n    \"SourceArn\": \"\",\n    \"Transport\": {\n      \"CidrAllowList\": [\n        \"\"\n      ],\n      \"MaxBitrate\": {{faker 'random.number'}},\n      \"MaxLatency\": {{faker 'random.number'}},\n      \"MaxSyncBuffer\": {{faker 'random.number'}},\n      \"MinLatency\": {{faker 'random.number'}},\n      \"Protocol\": \"\",\n      \"RemoteId\": \"\",\n      \"SmoothingLatency\": {{faker 'random.number'}},\n      \"StreamId\": \"\"\n    },\n    \"VpcInterfaceName\": \"\",\n    \"WhitelistCidr\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "29c1597c-70a2-4e06-864f-8e8f4b806835",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c8fc0dcf-7bb8-4868-b302-b34519f0eccb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "addd14d3-9911-4cbe-9ad8-70bdd5f781ea",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "78261dfe-ef8d-4f2f-a11a-403c6205a730",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a1b36941-beea-4105-9472-59884611724a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "afcfa085-026b-4dec-9c0f-dedfa8857eec",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b4b69ea2-a1e1-4ecf-8759-45618f39e52e",
      "documentation": "Removes a VPC Interface from an existing flow. This request can be made only on a VPC interface that does not have a Source or Output associated with it. If the VPC interface is referenced by a Source or Output, you must first delete or update the Source or Output to no longer reference the VPC interface.",
      "method": "delete",
      "endpoint": "v1/flows/:flowArn/vpcInterfaces/:vpcInterfaceName",
      "responses": [
        {
          "uuid": "69abb7f0-fd0a-4880-9a12-fa5b61aa4609",
          "body": "{\n  \"FlowArn\": \"\",\n  \"NonDeletedNetworkInterfaceIds\": [\n    \"\"\n  ],\n  \"VpcInterfaceName\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "62c0dfc6-19a0-4622-b52f-bdd235920502",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2622e590-00d9-4eeb-a3f5-bc29964f5b84",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eafe8e87-554e-4071-a6a0-a5dc5d8e0d05",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e73f0acb-2b2e-4c9c-9528-c3996b9e4832",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "747032ca-e4a6-4759-a921-66f441de01d3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "915e955b-3b07-41c0-9a4c-8c71d909e62c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4a22e418-278d-4e4e-a95d-a98a1fbd37ad",
      "documentation": "Revokes an entitlement from a flow. Once an entitlement is revoked, the content becomes unavailable to the subscriber and the associated output is removed.",
      "method": "delete",
      "endpoint": "v1/flows/:flowArn/entitlements/:entitlementArn",
      "responses": [
        {
          "uuid": "28306930-a8cb-4923-b906-ab4bb140e8bf",
          "body": "{\n  \"EntitlementArn\": \"\",\n  \"FlowArn\": \"\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dd360831-f90e-4933-84a5-7e1fffff7d25",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ea4e7fc3-e8c0-4558-8db8-0dd4f03adf4f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6e45ffeb-cafc-4c17-8945-db1422a6d208",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3d78f966-6279-4776-9c09-49f8e1fb84d7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "85eab405-f8ba-4f17-81cd-ea06aea25fe6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7141baf6-8f9d-44ef-92eb-a55f1491d9a3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a9960cc8-8346-4a59-8b72-396393d40055",
      "documentation": "You can change an entitlement's description, subscribers, and encryption. If you change the subscribers, the service will remove the outputs that are are used by the subscribers that are removed.",
      "method": "put",
      "endpoint": "v1/flows/:flowArn/entitlements/:entitlementArn",
      "responses": [
        {
          "uuid": "529d4959-0916-4242-806d-b8fa5ba282d3",
          "body": "{\n  \"Entitlement\": {\n    \"DataTransferSubscriberFeePercent\": {{faker 'random.number'}},\n    \"Description\": \"\",\n    \"Encryption\": {\n      \"Algorithm\": \"\",\n      \"ConstantInitializationVector\": \"\",\n      \"DeviceId\": \"\",\n      \"KeyType\": \"\",\n      \"Region\": \"\",\n      \"ResourceId\": \"\",\n      \"RoleArn\": \"\",\n      \"SecretArn\": \"\",\n      \"Url\": \"\"\n    },\n    \"EntitlementArn\": \"\",\n    \"EntitlementStatus\": \"\",\n    \"Name\": \"\",\n    \"Subscribers\": [\n      \"\"\n    ]\n  },\n  \"FlowArn\": \"\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f3c58f0b-c305-4e78-81dc-da227ec64fce",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dc371f34-c95f-478d-b6f5-ce1b41c4235a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f0b794f4-e12e-424b-a02e-58ae8f6ad9b2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e0ba1f9e-f384-4f54-9845-eb99bab3c6e5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "65fd9afd-4798-4e8c-a63e-0deb7f5bd6a3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7e37c0a1-3db8-42c3-8ca2-2545bfbad016",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a526e395-2f72-4fb0-b3bd-82a933b79bd5",
      "documentation": "Starts a flow.",
      "method": "post",
      "endpoint": "v1/flows/start/:flowArn",
      "responses": [
        {
          "uuid": "4521b38b-0ccb-4911-a4e5-824ffb0826fc",
          "body": "{\n  \"FlowArn\": \"\",\n  \"Status\": \"\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4140fb17-e8ff-4679-a9bf-206da4d93441",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c75dd169-662b-4f9b-a7ec-f887812a18e3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "425368d8-7cd9-41b5-94f4-30173108a832",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6177e97b-a8a5-4c70-a54e-6af974805625",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "82aeea3d-1dd2-40d8-af25-2c06c8057b64",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b632dbab-dad1-404c-bead-714dc37a7857",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f321af2f-3a22-4251-9135-beee0b978c05",
      "documentation": "Stops a flow.",
      "method": "post",
      "endpoint": "v1/flows/stop/:flowArn",
      "responses": [
        {
          "uuid": "edbd9c0b-b271-44dc-8421-1675d16c0916",
          "body": "{\n  \"FlowArn\": \"\",\n  \"Status\": \"\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e2d7748d-796b-45a5-8505-7ebbcbd738b7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c6e7ed5f-3a4e-47f3-a919-91194fd8ae47",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ea8e8dc7-042b-41fc-8464-650679538224",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bf92060c-8fc0-4abc-8679-fc7ba145d0d2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4ea9becf-70ad-405f-b60c-61f4390ad2b8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "08d90e77-c96f-4fe7-9108-14cc26a7c95d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5865b533-ecd1-4333-9592-0f6cc28a13a1",
      "documentation": "Deletes specified tags from a resource.",
      "method": "delete",
      "endpoint": "tags/:resourceArn#tagKeys",
      "responses": [
        {
          "uuid": "43b390e8-ff7b-4681-8814-7db3f17f691a",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "12acce3c-9a9c-4007-8aa2-e188d7b7bf08",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fd986529-d709-4cd0-a475-2261cfe003a9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d12484a9-b551-434c-81f1-c0997ac0722a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}