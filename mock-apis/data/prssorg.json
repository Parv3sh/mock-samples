{
  "uuid": "bed7ad92-7b53-4978-98e1-c5c9cecd879e",
  "lastMigration": 19,
  "name": "MetaPub",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "7bb4ec32-07e3-4c29-a1a2-fd5841e1b319",
      "documentation": "Upload a file.",
      "method": "post",
      "endpoint": "api/v2/cddrive/files/content",
      "responses": [
        {
          "uuid": "123c3ecc-b6dc-4e31-ae77-e31ed25f9c76",
          "body": "{\n  \"createdDate\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"lastModifiedDate\": \"\",\n  \"name\": \"\",\n  \"parentId\": {{faker 'random.number'}},\n  \"size\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The file was created successfully. The response contains the file metadata.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "35fa4118-a5bc-4735-93ca-13213821bf00",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The provided Content-MD5 header doesn't match the provided content",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6f1c3ce2-baa8-4cc2-9e9a-50ff515cfe38",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Authorization failed, Username or password not found or incorrect.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8558177a-070b-4abd-9ccb-f2dce67af202",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "A parent id cannot be found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4ae3c979-a644-4401-bb1b-5a8b223e4e7f",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "A name conflict because the file already exists.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b8b64f14-e87b-4a11-ba0c-912dbc70f3c3",
          "body": "",
          "latency": 0,
          "statusCode": 413,
          "label": "File is bigger than maximum size of 500 MB.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c7e767bb-0b47-46c5-bf0d-5662dcac6ed3",
      "documentation": "Delete a file.",
      "method": "delete",
      "endpoint": "api/v2/cddrive/files/{file-id}",
      "responses": [
        {
          "uuid": "eddd44d7-14d4-4030-9c66-f0356415e8de",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "The file was successfully deleted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cdd26295-db62-4879-88da-0188723e5a93",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "The file cannot be found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1c545162-18d5-46ed-aa43-86bf4c1da52b",
      "documentation": "Get file information.",
      "method": "get",
      "endpoint": "api/v2/cddrive/files/{file-id}",
      "responses": [
        {
          "uuid": "84b4f608-2c49-48cc-b3d5-c94dc9c85711",
          "body": "{\n  \"createdDate\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"lastModifiedDate\": \"\",\n  \"name\": \"\",\n  \"parentId\": {{faker 'random.number'}},\n  \"size\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The file information.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a0c29667-28b9-4154-9827-45ccbcbded4e",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "The file cannot be found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4b802b06-458a-4862-a5fb-535494b4629a",
      "documentation": "Download a file.",
      "method": "get",
      "endpoint": "api/v2/cddrive/files/{file-id}/content",
      "responses": [
        {
          "uuid": "235ebbb0-4aaa-4775-9034-5742e9e4857b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The file was found and will be returned in the body of the response.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/octet-stream"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b385ace8-6750-472b-aae9-9b51c6ab9b63",
          "body": "",
          "latency": 0,
          "statusCode": 302,
          "label": "The file was found but should be downloaded at the URL presented in the Location header. This return code may be used when the file is available via a CDN or other optimized path.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/octet-stream"
            },
            {
              "key": "Location",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bb2076d5-7eb3-47c6-8cf0-0cfef9df948e",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "The file cannot be found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/octet-stream"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c26090a6-c75e-4594-b089-3db59ecd46a9",
      "documentation": "Create a folder.",
      "method": "post",
      "endpoint": "api/v2/cddrive/folders",
      "responses": [
        {
          "uuid": "07a9bc75-ff3f-4d18-a42f-7cff053a8390",
          "body": "{\n  \"createdDate\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"lastModifiedDate\": \"\",\n  \"name\": \"\",\n  \"parentId\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The folder information.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d13d3b5c-a97d-4550-b4c4-4bfec164f8ab",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Authorization failed, Username or password not found or incorrect.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c086d134-6eca-49e4-8e1a-6a58a681a2f0",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "A parent id cannot be found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bab53a3b-14e9-4c57-9c36-3e4f021cb4f5",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "The folder already exists.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "61ef7908-4c51-4742-bd9e-7e7b694697e4",
      "documentation": "Delete a folder.",
      "method": "delete",
      "endpoint": "api/v2/cddrive/folders/{folder-id}",
      "responses": [
        {
          "uuid": "c484acb0-b40c-478a-9c75-59d635dc6fbd",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "The file was successfully deleted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bab47665-b504-4dbb-8589-a8c6090ddf73",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "The file cannot be found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4a0985e4-3b4b-48a0-a843-e4f1c1dfd202",
      "documentation": "Get folder information.",
      "method": "get",
      "endpoint": "api/v2/cddrive/folders/{folder-id}",
      "responses": [
        {
          "uuid": "e9e79890-93e1-4508-87a8-0a8f144fa1ce",
          "body": "{\n  \"createdDate\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"lastModifiedDate\": \"\",\n  \"name\": \"\",\n  \"parentId\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The folder information.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a0a325b9-9260-404c-872c-20211d459cc9",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "The folder cannot be found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0ce08fe9-ac3b-40d4-803a-733bc18a59e9",
      "documentation": "Get the items in the folder.",
      "method": "get",
      "endpoint": "api/v2/cddrive/folders/{folder-id}/items",
      "responses": [
        {
          "uuid": "8f7cb4b4-19b3-4e65-bceb-b8ea5dc81c9b",
          "body": "{\n  \"entries\": [\n    {\n      \"id\": {{faker 'random.number'}},\n      \"name\": \"\",\n      \"type\": \"{{oneOf (array 'file' 'folder')}}\"\n    }\n  ],\n  \"limit\": {{faker 'random.number'}},\n  \"offset\": {{faker 'random.number'}},\n  \"totalCount\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The folder information.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "56f3afd4-ec36-4af6-8593-3a83b881c5ae",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "The folder cannot be found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "496a5bd0-7230-4c16-b055-7d1a6abc4db3",
      "documentation": "Create a batch operation on EPG information.",
      "method": "post",
      "endpoint": "api/v2/metapub/program-information/batch",
      "responses": [
        {
          "uuid": "afd0a73b-c0ae-4fe1-8bb5-4e065a897937",
          "body": "{\n  \"createdDate\": \"\",\n  \"finishedDate\": \"\",\n  \"format\": \"{{oneOf (array 'radiodns')}}\",\n  \"id\": {{faker 'random.number'}},\n  \"message\": \"\",\n  \"name\": \"\",\n  \"program\": {\n    \"airDate\": \"\",\n    \"title\": \"\"\n  },\n  \"status\": \"{{oneOf (array 'queued' 'processing' 'failed' 'successful')}}\",\n  \"uri\": \"\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "The accepted batch information that is queued for processing.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b19bfb2a-2126-4ab1-b4f0-2465765a1e6b",
      "documentation": "Get an EPG batch operation.",
      "method": "get",
      "endpoint": "api/v2/metapub/program-information/batch/{batch-id}",
      "responses": [
        {
          "uuid": "5287a2b9-9e62-451f-96f9-651f0bd9488a",
          "body": "{\n  \"createdDate\": \"\",\n  \"finishedDate\": \"\",\n  \"format\": \"{{oneOf (array 'radiodns')}}\",\n  \"id\": {{faker 'random.number'}},\n  \"message\": \"\",\n  \"name\": \"\",\n  \"program\": {\n    \"airDate\": \"\",\n    \"title\": \"\"\n  },\n  \"status\": \"{{oneOf (array 'queued' 'processing' 'failed' 'successful')}}\",\n  \"uri\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The batch information.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ea7391d5-7ce3-461c-a5b3-b188e6700f29",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Authorization failed, Username or password not found or incorrect.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6ac4d075-6779-4571-8923-49f72b440fa6",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "The batch is not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "718ce3f6-b2c0-4981-b05b-f1a79578f607",
      "documentation": "Get the group information document.",
      "method": "get",
      "endpoint": "radiodns/spi/3.1/GI.xml",
      "responses": [
        {
          "uuid": "4a3723d4-522b-4a58-8fee-9d758677eb11",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The group information document is returned in the body of the response.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cf3279ea-fe32-4363-abec-5e36a7822268",
      "documentation": "Get the service information document.",
      "method": "get",
      "endpoint": "radiodns/spi/3.1/SI.xml",
      "responses": [
        {
          "uuid": "96e12c54-f71b-4424-bcf7-69cd7f5696b3",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The service information document is returned in the body of the response.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "798be4a3-83bf-4504-a473-66b5bd69c330",
      "documentation": "Get the program information document.",
      "method": "get",
      "endpoint": "radiodns/spi/3.1/id/:fqdn/:sid/:date_PI.xml",
      "responses": [
        {
          "uuid": "2aafc2e8-99ee-43ab-8396-121b1e402951",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Program information document for the given 24 hour period.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8e01a591-b784-48cb-8437-45242d56ea7b",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Authorization failed, the client Id is incorrect.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "899894e4-23d0-4c85-a7c8-52bfdfc779e2",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "The program information for the requested day or service cannot be found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}