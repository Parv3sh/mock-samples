{
  "uuid": "85ba2fa7-5e4f-46ca-9ec0-9d8ffba36863",
  "lastMigration": 19,
  "name": "Amazon Elastic Kubernetes Service",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "44b10683-d58a-429e-a5a4-8e33641ac846",
      "documentation": "<p>Associate encryption configuration to an existing cluster.</p> <p>You can use this API to enable encryption on existing clusters which do not have encryption already enabled. This allows you to implement a defense-in-depth security strategy without migrating applications to new Amazon EKS clusters.</p>",
      "method": "post",
      "endpoint": "clusters/:name/encryption-config/associate",
      "responses": [
        {
          "uuid": "b0b60ae6-1da1-4dac-8a35-435b4b4151ee",
          "body": "{\n  \"update\": {\n    \"id\": \"\",\n    \"status\": \"\",\n    \"type\": \"\",\n    \"params\": [\n      {\n        \"type\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"errors\": [\n      {\n        \"errorCode\": \"\",\n        \"errorMessage\": \"\",\n        \"resourceIds\": [\n          \"\"\n        ]\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f8badd8a-3eb6-43a5-872b-32ad7a95c8f9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8858e3ed-d6e7-406b-bdf9-5900ed7964ea",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "57acf153-9a3d-4270-b26a-332d84b1e512",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "733728b7-f15b-42da-9f5c-0f9bfb1051c3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "960b4ddf-2f73-4453-9076-794f14155a79",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c07dfaf0-caea-4b0f-a9cd-542632d25949",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c6bc2a9a-2fb2-44d0-a243-cab9f57b58af",
      "documentation": "<p>Associate an identity provider configuration to a cluster.</p> <p>If you want to authenticate identities using an identity provider, you can create an identity provider configuration and associate it to your cluster. After configuring authentication to your cluster you can create Kubernetes <code>roles</code> and <code>clusterroles</code> to assign permissions to the roles, and then bind the roles to the identities using Kubernetes <code>rolebindings</code> and <code>clusterrolebindings</code>. For more information see <a href=\"https://kubernetes.io/docs/reference/access-authn-authz/rbac/\">Using RBAC Authorization</a> in the Kubernetes documentation.</p>",
      "method": "post",
      "endpoint": "clusters/:name/identity-provider-configs/associate",
      "responses": [
        {
          "uuid": "c72f36b2-a08e-4dd4-b260-17aefe96b8d6",
          "body": "{\n  \"update\": {\n    \"id\": \"\",\n    \"status\": \"\",\n    \"type\": \"\",\n    \"params\": [\n      {\n        \"type\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"errors\": [\n      {\n        \"errorCode\": \"\",\n        \"errorMessage\": \"\",\n        \"resourceIds\": [\n          \"\"\n        ]\n      }\n    ]\n  },\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "24d25ef0-7e88-49ea-8b7a-40bde7f12bab",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cc76e2eb-be1e-471e-a33c-0299f804f173",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e896ae45-a7ec-4084-9569-370252d673fc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "93ed066d-df4a-4cca-a179-a049044269a0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b43b56c0-bc68-4755-b019-b626350baf16",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dc26bef9-ec26-41ac-ab86-5fb379a27b70",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a2082e52-115f-4129-ac18-d0eed6bd4c77",
      "documentation": "<p>Creates an Amazon EKS add-on.</p> <p>Amazon EKS add-ons help to automate the provisioning and lifecycle management of common operational software for Amazon EKS clusters. Amazon EKS add-ons can only be used with Amazon EKS clusters running version 1.18 with platform version <code>eks.3</code> or later because add-ons rely on the Server-side Apply Kubernetes feature, which is only available in Kubernetes 1.18 and later.</p>",
      "method": "post",
      "endpoint": "clusters/:name/addons",
      "responses": [
        {
          "uuid": "c1c51617-cae3-485b-bfe5-9db9b4367d1c",
          "body": "{\n  \"addon\": {\n    \"addonName\": \"\",\n    \"clusterName\": \"\",\n    \"status\": \"\",\n    \"addonVersion\": \"\",\n    \"health\": {\n      \"issues\": [\n        {\n          \"code\": \"\",\n          \"message\": \"\",\n          \"resourceIds\": [\n            \"\"\n          ]\n        }\n      ]\n    },\n    \"addonArn\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"modifiedAt\": \"{{faker 'date.recent' 365}}\",\n    \"serviceAccountRoleArn\": \"\",\n    \"tags\": {}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0430f401-0434-48e1-8013-14d1f778ee90",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7fc18168-beea-4783-adab-87228ad2cabd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dc3d6823-77aa-474f-b743-1c2f7238415b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a956a516-1dc4-4644-a01f-45ab20374374",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7beeb0ba-cc2a-4e05-a182-5db3a70e32c5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fcca0e46-35e0-4b98-bee0-d32d173cc5eb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f1a2bcc6-273c-4870-bd9f-e207d15514bf",
      "documentation": "Lists the available add-ons.",
      "method": "get",
      "endpoint": "clusters/:name/addons",
      "responses": [
        {
          "uuid": "68e191e2-699a-47ba-93eb-6511f1d32298",
          "body": "{\n  \"addons\": [\n    \"\"\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "22d265ed-e731-46b9-9ddd-4e26cc170762",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "18f3d8dc-e576-4ee2-93b1-5ef7ca46c072",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6d975851-5759-4f08-b90c-ccb94cba2f1b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d81f9878-a014-496f-b3c7-8209871c8308",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eab32a34-9d8f-4bc7-a235-ac74e6839106",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "16b3c1fc-9cd5-44af-8933-8d3283ff59c5",
      "documentation": "<p>Creates an Amazon EKS control plane. </p> <p>The Amazon EKS control plane consists of control plane instances that run the Kubernetes software, such as <code>etcd</code> and the API server. The control plane runs in an account managed by Amazon Web Services, and the Kubernetes API is exposed via the Amazon EKS API server endpoint. Each Amazon EKS cluster control plane is single-tenant and unique and runs on its own set of Amazon EC2 instances.</p> <p>The cluster control plane is provisioned across multiple Availability Zones and fronted by an Elastic Load Balancing Network Load Balancer. Amazon EKS also provisions elastic network interfaces in your VPC subnets to provide connectivity from the control plane instances to the nodes (for example, to support <code>kubectl exec</code>, <code>logs</code>, and <code>proxy</code> data flows).</p> <p>Amazon EKS nodes run in your Amazon Web Services account and connect to your cluster's control plane via the Kubernetes API server endpoint and a certificate file that is created for your cluster.</p> <p>Cluster creation typically takes several minutes. After you create an Amazon EKS cluster, you must configure your Kubernetes tooling to communicate with the API server and launch nodes into your cluster. For more information, see <a href=\"https://docs.aws.amazon.com/eks/latest/userguide/managing-auth.html\">Managing Cluster Authentication</a> and <a href=\"https://docs.aws.amazon.com/eks/latest/userguide/launch-workers.html\">Launching Amazon EKS nodes</a> in the <i>Amazon EKS User Guide</i>.</p>",
      "method": "post",
      "endpoint": "clusters",
      "responses": [
        {
          "uuid": "9db29369-c99b-47bf-8128-cdf01f4b0e14",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9901287b-e969-4180-ba5f-bb24e1835375",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f5698946-6488-4017-bbf4-4b34c7eb480c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fae54675-59ca-4e24-ac01-c2e8e88e12f2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d362521b-cf42-4e6a-aa36-03054317a7a4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0408ebe7-0733-4843-9512-f95e3dc9ddc7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "51cccfb4-f8e8-4d37-9d80-3353fd4be2b9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4dff1595-3c3d-417a-9ff2-464d6c6dde69",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnsupportedAvailabilityZoneException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "377f616d-80e0-4bc6-920b-ab55c2ac2922",
      "documentation": "Lists the Amazon EKS clusters in your Amazon Web Services account in the specified Region.",
      "method": "get",
      "endpoint": "clusters",
      "responses": [
        {
          "uuid": "7f8c79ec-3df8-460a-a9c6-13ec7652bba1",
          "body": "{\n  \"clusters\": [\n    \"devel\",\n    \"prod\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "53427c31-882c-45ba-9b92-e7ee5bf155c1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fd930cd8-79e5-4d26-b03d-fe6f58d1e8e0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a47ab8ca-1e6c-4125-b990-bb3c51dc998f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "97d231e2-220f-4503-b80d-44953f7d5c48",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "08f25a30-83de-4510-b1b6-2acd1ec78fd1",
      "documentation": "<p>Creates an Fargate profile for your Amazon EKS cluster. You must have at least one Fargate profile in a cluster to be able to run pods on Fargate.</p> <p>The Fargate profile allows an administrator to declare which pods run on Fargate and specify which pods run on which Fargate profile. This declaration is done through the profile’s selectors. Each profile can have up to five selectors that contain a namespace and labels. A namespace is required for every selector. The label field consists of multiple optional key-value pairs. Pods that match the selectors are scheduled on Fargate. If a to-be-scheduled pod matches any of the selectors in the Fargate profile, then that pod is run on Fargate.</p> <p>When you create a Fargate profile, you must specify a pod execution role to use with the pods that are scheduled with the profile. This role is added to the cluster's Kubernetes <a href=\"https://kubernetes.io/docs/admin/authorization/rbac/\">Role Based Access Control</a> (RBAC) for authorization so that the <code>kubelet</code> that is running on the Fargate infrastructure can register with your Amazon EKS cluster so that it can appear in your cluster as a node. The pod execution role also provides IAM permissions to the Fargate infrastructure to allow read access to Amazon ECR image repositories. For more information, see <a href=\"https://docs.aws.amazon.com/eks/latest/userguide/pod-execution-role.html\">Pod Execution Role</a> in the <i>Amazon EKS User Guide</i>.</p> <p>Fargate profiles are immutable. However, you can create a new updated profile to replace an existing profile and then delete the original after the updated profile has finished creating.</p> <p>If any Fargate profiles in a cluster are in the <code>DELETING</code> status, you must wait for that Fargate profile to finish deleting before you can create any other profiles in that cluster.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/eks/latest/userguide/fargate-profile.html\">Fargate Profile</a> in the <i>Amazon EKS User Guide</i>.</p>",
      "method": "post",
      "endpoint": "clusters/:name/fargate-profiles",
      "responses": [
        {
          "uuid": "f78bd099-bd5a-4059-ac5b-442592162437",
          "body": "{\n  \"fargateProfile\": {\n    \"fargateProfileName\": \"\",\n    \"fargateProfileArn\": \"\",\n    \"clusterName\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"podExecutionRoleArn\": \"\",\n    \"subnets\": [\n      \"\"\n    ],\n    \"selectors\": [\n      {\n        \"namespace\": \"\",\n        \"labels\": {}\n      }\n    ],\n    \"status\": \"\",\n    \"tags\": {}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c7d3c14b-437d-4a19-b38e-fc3ac9e44ddf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7ab7e134-0bc4-45cf-801f-0b8fead15570",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6db8b942-a3fd-4573-9807-a5041168d244",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a2a1a8fa-64a7-4f3a-b4b3-5d4b2ef3e10c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1616f154-9951-4b8e-ac7d-be05c4f71c01",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "11444504-a46c-4aab-b243-98bad1c8c0a4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UnsupportedAvailabilityZoneException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "54eeb79c-e6ee-444a-9de7-16b5fdb10f7d",
      "documentation": "Lists the Fargate profiles associated with the specified cluster in your Amazon Web Services account in the specified Region.",
      "method": "get",
      "endpoint": "clusters/:name/fargate-profiles",
      "responses": [
        {
          "uuid": "281dd556-5d84-4ba3-b233-3eb1ab5fdaf3",
          "body": "{\n  \"fargateProfileNames\": [\n    \"\"\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "05e8721a-aebe-4517-9401-2dd7faebc37e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0a20d080-3e90-439e-8df7-3d17a9dade2d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "01e73220-9ff5-49fc-88fd-4310bdf9ec0b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1a33d20d-684c-4982-99cb-ee97d24521d3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6939a5b4-836c-4308-a5f8-a6771c45a820",
      "documentation": "<p>Creates a managed node group for an Amazon EKS cluster. You can only create a node group for your cluster that is equal to the current Kubernetes version for the cluster. All node groups are created with the latest AMI release version for the respective minor Kubernetes version of the cluster, unless you deploy a custom AMI using a launch template. For more information about using launch templates, see <a href=\"https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html\">Launch template support</a>.</p> <p>An Amazon EKS managed node group is an Amazon EC2 Auto Scaling group and associated Amazon EC2 instances that are managed by Amazon Web Services for an Amazon EKS cluster. Each node group uses a version of the Amazon EKS optimized Amazon Linux 2 AMI. For more information, see <a href=\"https://docs.aws.amazon.com/eks/latest/userguide/managed-node-groups.html\">Managed Node Groups</a> in the <i>Amazon EKS User Guide</i>. </p>",
      "method": "post",
      "endpoint": "clusters/:name/node-groups",
      "responses": [
        {
          "uuid": "c1486e44-397c-4834-90dc-707c52349981",
          "body": "{\n  \"nodegroup\": {\n    \"nodegroupName\": \"\",\n    \"nodegroupArn\": \"\",\n    \"clusterName\": \"\",\n    \"version\": \"\",\n    \"releaseVersion\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"modifiedAt\": \"{{faker 'date.recent' 365}}\",\n    \"status\": \"\",\n    \"capacityType\": \"\",\n    \"scalingConfig\": {\n      \"minSize\": {{faker 'random.number'}},\n      \"maxSize\": {{faker 'random.number'}},\n      \"desiredSize\": {{faker 'random.number'}}\n    },\n    \"instanceTypes\": [\n      \"\"\n    ],\n    \"subnets\": [\n      \"\"\n    ],\n    \"remoteAccess\": {\n      \"ec2SshKey\": \"\",\n      \"sourceSecurityGroups\": [\n        \"\"\n      ]\n    },\n    \"amiType\": \"\",\n    \"nodeRole\": \"\",\n    \"labels\": {},\n    \"taints\": [\n      {\n        \"key\": \"\",\n        \"value\": \"\",\n        \"effect\": \"\"\n      }\n    ],\n    \"resources\": {\n      \"autoScalingGroups\": [\n        {\n          \"name\": \"\"\n        }\n      ],\n      \"remoteAccessSecurityGroup\": \"\"\n    },\n    \"diskSize\": {{faker 'random.number'}},\n    \"health\": {\n      \"issues\": [\n        {\n          \"code\": \"\",\n          \"message\": \"\",\n          \"resourceIds\": [\n            \"\"\n          ]\n        }\n      ]\n    },\n    \"updateConfig\": {\n      \"maxUnavailable\": {{faker 'random.number'}},\n      \"maxUnavailablePercentage\": {{faker 'random.number'}}\n    },\n    \"launchTemplate\": {\n      \"name\": \"\",\n      \"version\": \"\",\n      \"id\": \"\"\n    },\n    \"tags\": {}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7be0e337-4bb8-4eb5-8840-802f7398d1dc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6a643cf5-65a6-4da2-9d7c-f75cd3d3b9ca",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2936a256-7233-4f46-8210-ec7ae08fad22",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3f14407a-d4f4-420f-9de0-305be50a7861",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "115d1829-09a8-4a13-94f9-4c944a25b708",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2ddbfe9a-2635-4bd2-a131-be40a39f7abe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "55a31ee9-908f-4a48-90c6-caef5024fc15",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bb84eb01-1b5a-4395-ae5d-5e0fd68d086d",
      "documentation": "Lists the Amazon EKS managed node groups associated with the specified cluster in your Amazon Web Services account in the specified Region. Self-managed node groups are not listed.",
      "method": "get",
      "endpoint": "clusters/:name/node-groups",
      "responses": [
        {
          "uuid": "4af79148-06c8-4426-afec-fc081078f6ae",
          "body": "{\n  \"nodegroups\": [\n    \"\"\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b8419b54-328b-42a9-8b59-80acedd2b7a3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c03dd48c-69e2-4c47-b54c-76e134f48fb2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a39b97e8-abae-448d-ab1e-921143d77d76",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "55c9370c-e8cb-455e-b579-4258c8f13bd9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c711a905-12e5-4654-8bc2-8062cfdd74c1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2ed79af9-27c6-44a5-808a-a4702313ca73",
      "documentation": "<p>Delete an Amazon EKS add-on.</p> <p>When you remove the add-on, it will also be deleted from the cluster. You can always manually start an add-on on the cluster using the Kubernetes API.</p>",
      "method": "delete",
      "endpoint": "clusters/:name/addons/:addonName",
      "responses": [
        {
          "uuid": "3e660793-1c9f-412c-ae7e-2b2bde2988fd",
          "body": "{\n  \"addon\": {\n    \"addonName\": \"\",\n    \"clusterName\": \"\",\n    \"status\": \"\",\n    \"addonVersion\": \"\",\n    \"health\": {\n      \"issues\": [\n        {\n          \"code\": \"\",\n          \"message\": \"\",\n          \"resourceIds\": [\n            \"\"\n          ]\n        }\n      ]\n    },\n    \"addonArn\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"modifiedAt\": \"{{faker 'date.recent' 365}}\",\n    \"serviceAccountRoleArn\": \"\",\n    \"tags\": {}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "85ef7871-0a5e-4f1c-9b5c-6a48f39d74ec",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3f380f16-3305-427a-9080-143752d4892d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6dcfdb49-9f72-44c4-8ab4-4bfbb5849876",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bd6ca5f2-da40-4788-bb5b-14275c17415b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "94f90c5e-96c5-418c-8564-279b9cd26fab",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ece71c25-2a79-44c0-b277-f48bf54b855f",
      "documentation": "Describes an Amazon EKS add-on.",
      "method": "get",
      "endpoint": "clusters/:name/addons/:addonName",
      "responses": [
        {
          "uuid": "a23fc2a3-a637-466a-9a04-d66aa571ed20",
          "body": "{\n  \"addon\": {\n    \"addonName\": \"\",\n    \"clusterName\": \"\",\n    \"status\": \"\",\n    \"addonVersion\": \"\",\n    \"health\": {\n      \"issues\": [\n        {\n          \"code\": \"\",\n          \"message\": \"\",\n          \"resourceIds\": [\n            \"\"\n          ]\n        }\n      ]\n    },\n    \"addonArn\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"modifiedAt\": \"{{faker 'date.recent' 365}}\",\n    \"serviceAccountRoleArn\": \"\",\n    \"tags\": {}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c5e3be7b-6571-4c53-ade7-f0722e480e58",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fdcb5a9c-dfb3-4352-9071-62dbd50fd140",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9d5d6210-d0bf-4e4a-9f6c-b664df1224ed",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dae3039a-9352-46d2-a177-9a6cbb219080",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eb9b84d9-b9c1-4944-9ae8-1286fe4cb01a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a14f48c1-04d3-416f-ae4e-52e735eff793",
      "documentation": "<p>Deletes the Amazon EKS cluster control plane.</p> <p>If you have active services in your cluster that are associated with a load balancer, you must delete those services before deleting the cluster so that the load balancers are deleted properly. Otherwise, you can have orphaned resources in your VPC that prevent you from being able to delete the VPC. For more information, see <a href=\"https://docs.aws.amazon.com/eks/latest/userguide/delete-cluster.html\">Deleting a Cluster</a> in the <i>Amazon EKS User Guide</i>.</p> <p>If you have managed node groups or Fargate profiles attached to the cluster, you must delete them first. For more information, see <a>DeleteNodegroup</a> and <a>DeleteFargateProfile</a>.</p>",
      "method": "delete",
      "endpoint": "clusters/:name",
      "responses": [
        {
          "uuid": "18cc864c-f8d5-4243-a283-25f452737b0d",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9c68b6a9-0700-486a-8684-e4afb6f4fe38",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "be26c4e5-a201-40b2-9f0f-aad3111f642a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a230a561-a2d0-4f2a-a0de-072d9c296748",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "461295e9-4fa0-47a9-a6bb-95f74f57710b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "048d2140-9053-4417-bc2f-0dd042e95b16",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "02b7d1c2-5175-42c7-853d-99d7a477a17e",
      "documentation": "<p>Returns descriptive information about an Amazon EKS cluster.</p> <p>The API server endpoint and certificate authority data returned by this operation are required for <code>kubelet</code> and <code>kubectl</code> to communicate with your Kubernetes API server. For more information, see <a href=\"https://docs.aws.amazon.com/eks/latest/userguide/create-kubeconfig.html\">Create a kubeconfig for Amazon EKS</a>.</p> <note> <p>The API server endpoint and certificate authority data aren't available until the cluster reaches the <code>ACTIVE</code> state.</p> </note>",
      "method": "get",
      "endpoint": "clusters/:name",
      "responses": [
        {
          "uuid": "91193580-6075-4d6c-98a2-fbb1dd9bc6a3",
          "body": "{\n  \"cluster\": {\n    \"version\": \"1.10\",\n    \"name\": \"devel\",\n    \"arn\": \"arn:aws:eks:us-west-2:012345678910:cluster/devel\",\n    \"certificateAuthority\": {\n      \"data\": \"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRFNE1EVXpNVEl6TVRFek1Wb1hEVEk0TURVeU9ESXpNVEV6TVZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTTZWCjVUaG4rdFcySm9Xa2hQMzRlVUZMNitaRXJOZGIvWVdrTmtDdWNGS2RaaXl2TjlMVmdvUmV2MjlFVFZlN1ZGbSsKUTJ3ZURyRXJiQyt0dVlibkFuN1ZLYmE3ay9hb1BHekZMdmVnb0t6b0M1N2NUdGVwZzRIazRlK2tIWHNaME10MApyb3NzcjhFM1ROeExETnNJTThGL1cwdjhsTGNCbWRPcjQyV2VuTjFHZXJnaDNSZ2wzR3JIazBnNTU0SjFWenJZCm9hTi8zODFUczlOTFF2QTBXb0xIcjBFRlZpTFdSZEoyZ3lXaC9ybDVyOFNDOHZaQXg1YW1BU0hVd01aTFpWRC8KTDBpOW4wRVM0MkpVdzQyQmxHOEdpd3NhTkJWV3lUTHZKclNhRXlDSHFtVVZaUTFDZkFXUjl0L3JleVVOVXM3TApWV1FqM3BFbk9RMitMSWJrc0RzQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFNZ3RsQ1dIQ2U2YzVHMXl2YlFTS0Q4K2hUalkKSm1NSG56L2EvRGt0WG9YUjFVQzIrZUgzT1BZWmVjRVZZZHVaSlZCckNNQ2VWR0ZkeWdBYlNLc1FxWDg0S2RXbAp1MU5QaERDSmEyRHliN2pVMUV6VThTQjFGZUZ5ZFE3a0hNS1E1blpBRVFQOTY4S01hSGUrSm0yQ2x1UFJWbEJVCjF4WlhTS1gzTVZ0K1Q0SU1EV2d6c3JRSjVuQkRjdEtLcUZtM3pKdVVubHo5ZEpVckdscEltMjVJWXJDckxYUFgKWkUwRUtRNWEzMHhkVWNrTHRGQkQrOEtBdFdqSS9yZUZPNzM1YnBMdVoyOTBaNm42QlF3elRrS0p4cnhVc3QvOAppNGsxcnlsaUdWMm5SSjBUYjNORkczNHgrYWdzYTRoSTFPbU90TFM0TmgvRXJxT3lIUXNDc2hEQUtKUT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\"\n    },\n    \"createdAt\": 1527807879.988,\n    \"endpoint\": \"https://A0DCCD80A04F01705DD065655C30CC3D.yl4.us-west-2.eks.amazonaws.com\",\n    \"resourcesVpcConfig\": {\n      \"securityGroupIds\": [\n        \"sg-6979fe18\"\n      ],\n      \"subnetIds\": [\n        \"subnet-6782e71e\",\n        \"subnet-e7e761ac\"\n      ],\n      \"vpcId\": \"vpc-950809ec\"\n    },\n    \"roleArn\": \"arn:aws:iam::012345678910:role/eks-service-role-AWSServiceRoleForAmazonEKS-J7ONKE3BQ4PI\",\n    \"status\": \"ACTIVE\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7d98f736-cdc8-4c85-bcbb-e4f67c38a3d2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "907885b4-bf72-45e5-a560-ad34f6aed420",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8af1ec10-b43e-48ff-89ae-36f6cdfdcb79",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "715fca23-f21b-4765-aa6f-e3967e1eadd7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b60e5227-5d65-4cfb-a9f0-eced9fe82ba0",
      "documentation": "<p>Deletes an Fargate profile.</p> <p>When you delete a Fargate profile, any pods running on Fargate that were created with the profile are deleted. If those pods match another Fargate profile, then they are scheduled on Fargate with that profile. If they no longer match any Fargate profiles, then they are not scheduled on Fargate and they may remain in a pending state.</p> <p>Only one Fargate profile in a cluster can be in the <code>DELETING</code> status at a time. You must wait for a Fargate profile to finish deleting before you can delete any other profiles in that cluster.</p>",
      "method": "delete",
      "endpoint": "clusters/:name/fargate-profiles/:fargateProfileName",
      "responses": [
        {
          "uuid": "fdbd4295-fc6d-496e-bfa0-ca5554529d86",
          "body": "{\n  \"fargateProfile\": {\n    \"fargateProfileName\": \"\",\n    \"fargateProfileArn\": \"\",\n    \"clusterName\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"podExecutionRoleArn\": \"\",\n    \"subnets\": [\n      \"\"\n    ],\n    \"selectors\": [\n      {\n        \"namespace\": \"\",\n        \"labels\": {}\n      }\n    ],\n    \"status\": \"\",\n    \"tags\": {}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "422f99b2-f992-4662-8043-0bc191e10c9d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e3d6866e-3ccd-4eef-9d9f-59948c4521e2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2211cddb-03ac-4f0a-bab1-78dfaf03e87b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8390fd21-f203-4f51-bcbb-b2e130c409c2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8d5f1db4-25c2-4f8b-96e0-eb9bc2575bb8",
      "documentation": "Returns descriptive information about an Fargate profile.",
      "method": "get",
      "endpoint": "clusters/:name/fargate-profiles/:fargateProfileName",
      "responses": [
        {
          "uuid": "827fb1aa-27c6-45b0-8f25-0e0f338e344c",
          "body": "{\n  \"fargateProfile\": {\n    \"fargateProfileName\": \"\",\n    \"fargateProfileArn\": \"\",\n    \"clusterName\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"podExecutionRoleArn\": \"\",\n    \"subnets\": [\n      \"\"\n    ],\n    \"selectors\": [\n      {\n        \"namespace\": \"\",\n        \"labels\": {}\n      }\n    ],\n    \"status\": \"\",\n    \"tags\": {}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "081909a7-c6a0-4878-84af-5be9f56a430d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0c1d32cb-70e2-453f-abf5-7f656dcfa6ed",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3003510c-4336-4b32-bc15-24b5728bb77f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e0db3b8f-a7a9-4a7f-91b6-2f40dfc175b2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0cbc7b5a-9e0c-442e-b07a-e5ee90f885f2",
      "documentation": "Deletes an Amazon EKS node group for a cluster.",
      "method": "delete",
      "endpoint": "clusters/:name/node-groups/:nodegroupName",
      "responses": [
        {
          "uuid": "2ed78db1-23f1-4eea-b358-d184e5052f8d",
          "body": "{\n  \"nodegroup\": {\n    \"nodegroupName\": \"\",\n    \"nodegroupArn\": \"\",\n    \"clusterName\": \"\",\n    \"version\": \"\",\n    \"releaseVersion\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"modifiedAt\": \"{{faker 'date.recent' 365}}\",\n    \"status\": \"\",\n    \"capacityType\": \"\",\n    \"scalingConfig\": {\n      \"minSize\": {{faker 'random.number'}},\n      \"maxSize\": {{faker 'random.number'}},\n      \"desiredSize\": {{faker 'random.number'}}\n    },\n    \"instanceTypes\": [\n      \"\"\n    ],\n    \"subnets\": [\n      \"\"\n    ],\n    \"remoteAccess\": {\n      \"ec2SshKey\": \"\",\n      \"sourceSecurityGroups\": [\n        \"\"\n      ]\n    },\n    \"amiType\": \"\",\n    \"nodeRole\": \"\",\n    \"labels\": {},\n    \"taints\": [\n      {\n        \"key\": \"\",\n        \"value\": \"\",\n        \"effect\": \"\"\n      }\n    ],\n    \"resources\": {\n      \"autoScalingGroups\": [\n        {\n          \"name\": \"\"\n        }\n      ],\n      \"remoteAccessSecurityGroup\": \"\"\n    },\n    \"diskSize\": {{faker 'random.number'}},\n    \"health\": {\n      \"issues\": [\n        {\n          \"code\": \"\",\n          \"message\": \"\",\n          \"resourceIds\": [\n            \"\"\n          ]\n        }\n      ]\n    },\n    \"updateConfig\": {\n      \"maxUnavailable\": {{faker 'random.number'}},\n      \"maxUnavailablePercentage\": {{faker 'random.number'}}\n    },\n    \"launchTemplate\": {\n      \"name\": \"\",\n      \"version\": \"\",\n      \"id\": \"\"\n    },\n    \"tags\": {}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "88b08028-e756-462c-8a1e-edd195124f6b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aa34e9c4-ddfa-4f83-8a37-014a35300bf1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ff4567cf-9635-4ab7-850c-221bd24c25bc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "451264fc-ce63-4ea3-aa66-2df5d3cb9361",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9702f728-3678-4d45-ae18-3a119d41b6e7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "13029843-7ff5-453d-98af-eaf8d050ded4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "371d0828-de5b-4dae-8899-5bc2d89b7702",
      "documentation": "Returns descriptive information about an Amazon EKS node group.",
      "method": "get",
      "endpoint": "clusters/:name/node-groups/:nodegroupName",
      "responses": [
        {
          "uuid": "6e0e26e6-5d2d-49de-9215-5d58a357a77a",
          "body": "{\n  \"nodegroup\": {\n    \"nodegroupName\": \"\",\n    \"nodegroupArn\": \"\",\n    \"clusterName\": \"\",\n    \"version\": \"\",\n    \"releaseVersion\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"modifiedAt\": \"{{faker 'date.recent' 365}}\",\n    \"status\": \"\",\n    \"capacityType\": \"\",\n    \"scalingConfig\": {\n      \"minSize\": {{faker 'random.number'}},\n      \"maxSize\": {{faker 'random.number'}},\n      \"desiredSize\": {{faker 'random.number'}}\n    },\n    \"instanceTypes\": [\n      \"\"\n    ],\n    \"subnets\": [\n      \"\"\n    ],\n    \"remoteAccess\": {\n      \"ec2SshKey\": \"\",\n      \"sourceSecurityGroups\": [\n        \"\"\n      ]\n    },\n    \"amiType\": \"\",\n    \"nodeRole\": \"\",\n    \"labels\": {},\n    \"taints\": [\n      {\n        \"key\": \"\",\n        \"value\": \"\",\n        \"effect\": \"\"\n      }\n    ],\n    \"resources\": {\n      \"autoScalingGroups\": [\n        {\n          \"name\": \"\"\n        }\n      ],\n      \"remoteAccessSecurityGroup\": \"\"\n    },\n    \"diskSize\": {{faker 'random.number'}},\n    \"health\": {\n      \"issues\": [\n        {\n          \"code\": \"\",\n          \"message\": \"\",\n          \"resourceIds\": [\n            \"\"\n          ]\n        }\n      ]\n    },\n    \"updateConfig\": {\n      \"maxUnavailable\": {{faker 'random.number'}},\n      \"maxUnavailablePercentage\": {{faker 'random.number'}}\n    },\n    \"launchTemplate\": {\n      \"name\": \"\",\n      \"version\": \"\",\n      \"id\": \"\"\n    },\n    \"tags\": {}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b6a09a28-7c33-4a1c-a724-94bcfa1d3860",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d00d5a10-2309-4fa5-953d-a3c73f9572f1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "df7c05f8-ac2b-47e4-81ff-c8f0203efec7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "49527d2c-b28a-4ca1-94dc-d7e465b765e8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4cf46f22-d96c-4630-8cea-365936b863de",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cfe8814f-f215-41d7-9d9a-76c9771451d3",
      "documentation": "Deregisters a connected cluster to remove it from the Amazon EKS control plane.",
      "method": "delete",
      "endpoint": "cluster-registrations/:name",
      "responses": [
        {
          "uuid": "bdcd6aa1-fa86-459b-bacc-88c8c015ffc0",
          "body": "{\n  \"cluster\": {\n    \"name\": \"\",\n    \"arn\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"version\": \"\",\n    \"endpoint\": \"\",\n    \"roleArn\": \"\",\n    \"resourcesVpcConfig\": {\n      \"subnetIds\": [\n        \"\"\n      ],\n      \"securityGroupIds\": [\n        \"\"\n      ],\n      \"clusterSecurityGroupId\": \"\",\n      \"vpcId\": \"\",\n      \"endpointPublicAccess\": {{faker 'random.boolean'}},\n      \"endpointPrivateAccess\": {{faker 'random.boolean'}},\n      \"publicAccessCidrs\": [\n        \"\"\n      ]\n    },\n    \"kubernetesNetworkConfig\": {\n      \"serviceIpv4Cidr\": \"\"\n    },\n    \"logging\": {\n      \"clusterLogging\": [\n        {\n          \"types\": [\n            \"{{oneOf (array 'api' 'audit' 'authenticator' 'controllerManager' 'scheduler')}}\"\n          ],\n          \"enabled\": {{faker 'random.boolean'}}\n        }\n      ]\n    },\n    \"identity\": {\n      \"oidc\": {\n        \"issuer\": \"\"\n      }\n    },\n    \"status\": \"\",\n    \"certificateAuthority\": {\n      \"data\": \"\"\n    },\n    \"clientRequestToken\": \"\",\n    \"platformVersion\": \"\",\n    \"tags\": {},\n    \"encryptionConfig\": [\n      {\n        \"resources\": [\n          \"\"\n        ],\n        \"provider\": {\n          \"keyArn\": \"\"\n        }\n      }\n    ],\n    \"connectorConfig\": {\n      \"activationId\": \"\",\n      \"activationCode\": \"\",\n      \"activationExpiry\": \"{{faker 'date.recent' 365}}\",\n      \"provider\": \"\",\n      \"roleArn\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a15a0bfc-40fe-484c-84a8-c0abcd906807",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9f6a93b0-1549-48d1-9879-082457105a79",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "886b6ce4-e8be-4030-bd50-60f59f64068c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8a176fcf-607c-41de-b3a4-682cee3d6e36",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a3974706-75e6-422b-8989-c4309f7d9d21",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f87fd099-9f2e-4d87-9c15-8360329772f4",
      "documentation": "Describes the Kubernetes versions that the add-on can be used with.",
      "method": "get",
      "endpoint": "addons/supported-versions",
      "responses": [
        {
          "uuid": "113cb891-3acd-47e7-8933-6d02991ef83a",
          "body": "{\n  \"addons\": [\n    {\n      \"addonName\": \"\",\n      \"type\": \"\",\n      \"addonVersions\": [\n        {\n          \"addonVersion\": \"\",\n          \"architecture\": [\n            \"\"\n          ],\n          \"compatibilities\": [\n            {\n              \"clusterVersion\": \"\",\n              \"platformVersions\": [\n                \"\"\n              ],\n              \"defaultVersion\": {{faker 'random.boolean'}}\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5dd8cd27-75bc-46fb-a419-dc5a9a5e8491",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "56234ea3-c4cb-4247-8b72-d1017720cf08",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ca0d58db-2d86-4c59-a1f4-8f23bdaf333e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7d813b0b-3127-4eaa-ad46-bc5e5206aaf7",
      "documentation": "Returns descriptive information about an identity provider configuration.",
      "method": "post",
      "endpoint": "clusters/:name/identity-provider-configs/describe",
      "responses": [
        {
          "uuid": "6ad6024f-9929-4b64-b64c-4155db960fd0",
          "body": "{\n  \"identityProviderConfig\": {\n    \"oidc\": {\n      \"identityProviderConfigName\": \"\",\n      \"identityProviderConfigArn\": \"\",\n      \"clusterName\": \"\",\n      \"issuerUrl\": \"\",\n      \"clientId\": \"\",\n      \"usernameClaim\": \"\",\n      \"usernamePrefix\": \"\",\n      \"groupsClaim\": \"\",\n      \"groupsPrefix\": \"\",\n      \"requiredClaims\": {},\n      \"tags\": {},\n      \"status\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e3222dca-9ec8-4aa3-bbc5-d35dfc5a5853",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9f6669c6-2bb1-4c52-b288-2051144aba15",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "45d53cf4-112b-4435-997b-89965fb42993",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c8d26f43-d06e-45bf-a8cd-632edae221ef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "477a7375-4242-47ed-8ff5-e303b9bd38e9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "01fe51ae-68df-4f29-b576-4f002fb7708f",
      "documentation": "<p>Returns descriptive information about an update against your Amazon EKS cluster or associated managed node group.</p> <p>When the status of the update is <code>Succeeded</code>, the update is complete. If an update fails, the status is <code>Failed</code>, and an error detail explains the reason for the failure.</p>",
      "method": "get",
      "endpoint": "clusters/:name/updates/:updateId",
      "responses": [
        {
          "uuid": "78fbc709-bfd8-4007-8fe6-c009804e92df",
          "body": "{\n  \"update\": {\n    \"id\": \"\",\n    \"status\": \"\",\n    \"type\": \"\",\n    \"params\": [\n      {\n        \"type\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"errors\": [\n      {\n        \"errorCode\": \"\",\n        \"errorMessage\": \"\",\n        \"resourceIds\": [\n          \"\"\n        ]\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "63c41025-bcf0-4cc4-a8f3-e70d4e817391",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b56bd68a-d50f-4920-8b6d-6cf5d730139d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c8f14343-6051-4964-9cdc-b22ae741d471",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b134538e-e976-4fbc-82cc-3d5cef41ea83",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "767071b9-d7e4-4d38-93af-c172fb72cc4f",
      "documentation": "Disassociates an identity provider configuration from a cluster. If you disassociate an identity provider from your cluster, users included in the provider can no longer access the cluster. However, you can still access the cluster with Amazon Web Services IAM users.",
      "method": "post",
      "endpoint": "clusters/:name/identity-provider-configs/disassociate",
      "responses": [
        {
          "uuid": "c83f4fcd-2ecc-4932-84ec-0237226b79e1",
          "body": "{\n  \"update\": {\n    \"id\": \"\",\n    \"status\": \"\",\n    \"type\": \"\",\n    \"params\": [\n      {\n        \"type\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"errors\": [\n      {\n        \"errorCode\": \"\",\n        \"errorMessage\": \"\",\n        \"resourceIds\": [\n          \"\"\n        ]\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b221d0f4-5432-4b33-8460-54eeeced8dbc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b27f0823-d26d-44ff-8574-2ca2dee0d4bf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cb0e0cbc-14cf-4bae-9b11-8d81d6d4f921",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cc88fc8f-55a7-41f6-a94a-54cb4282baf1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6d798ce4-c0ac-4d5e-930b-b86310a801f4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6a0fea92-4593-4a07-94ba-d9e3c7495cf4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "072ca022-e5ba-4290-8ac0-e6fd976264c1",
      "documentation": "A list of identity provider configurations.",
      "method": "get",
      "endpoint": "clusters/:name/identity-provider-configs",
      "responses": [
        {
          "uuid": "ce2bbcd1-713c-48b3-a754-510c108a4d06",
          "body": "{\n  \"identityProviderConfigs\": [\n    {\n      \"type\": \"\",\n      \"name\": \"\"\n    }\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "29a4eae3-4a9d-4f6b-ba83-c2a9a1e94b66",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "01cd942e-a73e-40fa-9d31-2537607faeb1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3e5ab60b-8858-4e95-9875-2d7af8ade074",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d3512cb0-e421-4d49-aadb-706e15808ca0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3e11da1f-ab97-4029-9e7c-e8f55c1acb30",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "de092939-e42a-4cf2-9db7-6c85d2637f70",
      "documentation": "List the tags for an Amazon EKS resource.",
      "method": "get",
      "endpoint": "tags/:resourceArn",
      "responses": [
        {
          "uuid": "ebca303e-5df5-4c25-8ae1-6a3e1f03171f",
          "body": "{\n  \"tags\": {\n    \"aws:tag:domain\": \"beta\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "09a08156-14c8-4176-9a49-b82b559e3aae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "26ff6fa9-a95e-47d1-a11d-d48226257719",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9d5f0741-da6c-4d6a-8119-5bf02a17a40f",
      "documentation": "Associates the specified tags to a resource with the specified <code>resourceArn</code>. If existing tags on a resource are not specified in the request parameters, they are not changed. When a resource is deleted, the tags associated with that resource are deleted as well. Tags that you create for Amazon EKS resources do not propagate to any other resources associated with the cluster. For example, if you tag a cluster with this operation, that tag does not automatically propagate to the subnets and nodes associated with the cluster.",
      "method": "post",
      "endpoint": "tags/:resourceArn",
      "responses": [
        {
          "uuid": "fdcd8130-eb2c-4036-bd83-2a1815e8bd00",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "66e35ed2-e3a1-41ce-9bf9-54f5fa240be7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2531072c-54a9-4a55-b85f-2227f629c1ef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "83b3c39c-8284-4b8a-9cce-3a91ddfbe66c",
      "documentation": "Lists the updates associated with an Amazon EKS cluster or managed node group in your Amazon Web Services account, in the specified Region.",
      "method": "get",
      "endpoint": "clusters/:name/updates",
      "responses": [
        {
          "uuid": "ceb31cd8-54e2-49a8-af9b-dbb23c6e7777",
          "body": "{\n  \"updateIds\": [\n    \"\"\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "be5c7ae5-b1f8-4b0b-aee5-1fa1ef527393",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8b289122-2fca-4ec7-933d-1de6b69416b9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ffbfdcb0-8fe2-4029-8148-56307a2501ce",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e2ba5cd0-8a4d-4052-a70f-42f8074dbe88",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ef1245fd-bf6e-46a9-9219-3533b8f97132",
      "documentation": "<p>Updates an Amazon EKS cluster to the specified Kubernetes version. Your cluster continues to function during the update. The response output includes an update ID that you can use to track the status of your cluster update with the <a>DescribeUpdate</a> API operation.</p> <p>Cluster updates are asynchronous, and they should finish within a few minutes. During an update, the cluster status moves to <code>UPDATING</code> (this status transition is eventually consistent). When the update is complete (either <code>Failed</code> or <code>Successful</code>), the cluster status moves to <code>Active</code>.</p> <p>If your cluster has managed node groups attached to it, all of your node groups’ Kubernetes versions must match the cluster’s Kubernetes version in order to update the cluster to a new Kubernetes version.</p>",
      "method": "post",
      "endpoint": "clusters/:name/updates",
      "responses": [
        {
          "uuid": "1ebd2cbb-7518-41d7-863c-889d4596f8a7",
          "body": "{\n  \"update\": {\n    \"id\": \"\",\n    \"status\": \"\",\n    \"type\": \"\",\n    \"params\": [\n      {\n        \"type\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"errors\": [\n      {\n        \"errorCode\": \"\",\n        \"errorMessage\": \"\",\n        \"resourceIds\": [\n          \"\"\n        ]\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "941edb44-4e1a-4296-98b9-04bd124094ae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a92d9f83-0119-415f-8e1f-19bda0de9e1d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "840ef65f-4b84-426c-8522-9cb2b6874f0b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "565df82d-9cc6-4bf8-aa70-9ad26566c465",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2c65a7d6-ec7f-4af3-a786-dc4f6cad739d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "027d9608-1ff9-4177-aa5d-e75410c2cb63",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "44e793ce-e8b7-48de-b2bf-34be4a4d0a4c",
      "documentation": "<p>Connects a Kubernetes cluster to the Amazon EKS control plane. </p> <p>Any Kubernetes cluster can be connected to the Amazon EKS control plane to view current information about the cluster and its nodes. </p> <p>Cluster connection requires two steps. First, send a <code> <a>RegisterClusterRequest</a> </code> to add it to the Amazon EKS control plane.</p> <p>Second, a <a href=\"https://amazon-eks.s3.us-west-2.amazonaws.com/eks-connector/manifests/eks-connector/latest/eks-connector.yaml\">Manifest</a> containing the <code>activationID</code> and <code>activationCode</code> must be applied to the Kubernetes cluster through it's native provider to provide visibility.</p> <p>After the Manifest is updated and applied, then the connected cluster is visible to the Amazon EKS control plane. If the Manifest is not applied within a set amount of time, then the connected cluster will no longer be visible and must be deregistered. See <a>DeregisterCluster</a>.</p>",
      "method": "post",
      "endpoint": "cluster-registrations",
      "responses": [
        {
          "uuid": "7863fddf-1352-45ae-9248-a1b83281f49a",
          "body": "{\n  \"cluster\": {\n    \"name\": \"\",\n    \"arn\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"version\": \"\",\n    \"endpoint\": \"\",\n    \"roleArn\": \"\",\n    \"resourcesVpcConfig\": {\n      \"subnetIds\": [\n        \"\"\n      ],\n      \"securityGroupIds\": [\n        \"\"\n      ],\n      \"clusterSecurityGroupId\": \"\",\n      \"vpcId\": \"\",\n      \"endpointPublicAccess\": {{faker 'random.boolean'}},\n      \"endpointPrivateAccess\": {{faker 'random.boolean'}},\n      \"publicAccessCidrs\": [\n        \"\"\n      ]\n    },\n    \"kubernetesNetworkConfig\": {\n      \"serviceIpv4Cidr\": \"\"\n    },\n    \"logging\": {\n      \"clusterLogging\": [\n        {\n          \"types\": [\n            \"{{oneOf (array 'api' 'audit' 'authenticator' 'controllerManager' 'scheduler')}}\"\n          ],\n          \"enabled\": {{faker 'random.boolean'}}\n        }\n      ]\n    },\n    \"identity\": {\n      \"oidc\": {\n        \"issuer\": \"\"\n      }\n    },\n    \"status\": \"\",\n    \"certificateAuthority\": {\n      \"data\": \"\"\n    },\n    \"clientRequestToken\": \"\",\n    \"platformVersion\": \"\",\n    \"tags\": {},\n    \"encryptionConfig\": [\n      {\n        \"resources\": [\n          \"\"\n        ],\n        \"provider\": {\n          \"keyArn\": \"\"\n        }\n      }\n    ],\n    \"connectorConfig\": {\n      \"activationId\": \"\",\n      \"activationCode\": \"\",\n      \"activationExpiry\": \"{{faker 'date.recent' 365}}\",\n      \"provider\": \"\",\n      \"roleArn\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5ef48252-f461-45d8-b240-7170f77d4aa8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3eeada45-87e1-4c37-9d23-e24ca768f9c9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1dabedab-aae0-49ee-aa35-32caaa849372",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "782a4b7f-d246-4dc6-8d87-e8ae44d42263",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9505fdc2-8aff-4d4d-a99a-ba197fc2f4a5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ffdad00f-e30c-4ad2-98db-a80ed2e89663",
      "documentation": "Deletes specified tags from a resource.",
      "method": "delete",
      "endpoint": "tags/:resourceArn#tagKeys",
      "responses": [
        {
          "uuid": "6c68c145-2174-4eb4-9848-1732299f5e9f",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a207e7d1-488e-4a26-b8ef-f96c56d4e062",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "69bb0bbf-fa6b-4e8f-9c9d-808198327988",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "eaafe1c6-d689-458e-bd5c-4b4797308038",
      "documentation": "Updates an Amazon EKS add-on.",
      "method": "post",
      "endpoint": "clusters/:name/addons/:addonName/update",
      "responses": [
        {
          "uuid": "65954d7b-e851-4645-8d83-70e6fbb18fdf",
          "body": "{\n  \"update\": {\n    \"id\": \"\",\n    \"status\": \"\",\n    \"type\": \"\",\n    \"params\": [\n      {\n        \"type\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"errors\": [\n      {\n        \"errorCode\": \"\",\n        \"errorMessage\": \"\",\n        \"resourceIds\": [\n          \"\"\n        ]\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f6fa06ee-5d47-4c8c-a290-67dcd71fd583",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "460d5967-e1c8-40ff-bf13-4c79b68db50e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8c7f93dc-3108-4b18-81cb-b52ab1dff451",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1ed8861e-d23a-410b-be53-140bcd2c95f2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4bb6aff8-f5bc-46d9-b013-7e23737764cc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e4dc52d8-e084-491b-95f1-e2ff2228c74e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c8867ce2-39a7-4cd8-a1fc-1a4d2080256f",
      "documentation": "<p>Updates an Amazon EKS cluster configuration. Your cluster continues to function during the update. The response output includes an update ID that you can use to track the status of your cluster update with the <a>DescribeUpdate</a> API operation.</p> <p>You can use this API operation to enable or disable exporting the Kubernetes control plane logs for your cluster to CloudWatch Logs. By default, cluster control plane logs aren't exported to CloudWatch Logs. For more information, see <a href=\"https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html\">Amazon EKS Cluster Control Plane Logs</a> in the <i> <i>Amazon EKS User Guide</i> </i>.</p> <note> <p>CloudWatch Logs ingestion, archive storage, and data scanning rates apply to exported control plane logs. For more information, see <a href=\"http://aws.amazon.com/cloudwatch/pricing/\">CloudWatch Pricing</a>.</p> </note> <p>You can also use this API operation to enable or disable public and private access to your cluster's Kubernetes API server endpoint. By default, public access is enabled, and private access is disabled. For more information, see <a href=\"https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html\">Amazon EKS cluster endpoint access control</a> in the <i> <i>Amazon EKS User Guide</i> </i>. </p> <important> <p>You can't update the subnets or security group IDs for an existing cluster.</p> </important> <p>Cluster updates are asynchronous, and they should finish within a few minutes. During an update, the cluster status moves to <code>UPDATING</code> (this status transition is eventually consistent). When the update is complete (either <code>Failed</code> or <code>Successful</code>), the cluster status moves to <code>Active</code>.</p>",
      "method": "post",
      "endpoint": "clusters/:name/update-config",
      "responses": [
        {
          "uuid": "5a3c0220-0663-47d4-9e4c-5697a78cfa9a",
          "body": "{\n  \"update\": {\n    \"id\": \"\",\n    \"status\": \"\",\n    \"type\": \"\",\n    \"params\": [\n      {\n        \"type\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"errors\": [\n      {\n        \"errorCode\": \"\",\n        \"errorMessage\": \"\",\n        \"resourceIds\": [\n          \"\"\n        ]\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0713c486-0ceb-4a48-a33e-912aaafa26f7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0d6631c4-5523-4874-86f9-3a320b5add49",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "df10b43c-5203-4cff-a4f3-f50af6038eb2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3369c0f4-5abe-40e4-b86c-35c393d5bb9c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0bebbe75-f8ce-4ae4-815f-8519b4e6ef41",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8a5f0280-fd52-438c-9d2e-fd51e3b635ee",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9b60afe1-97ea-410d-8972-857a1f020d5d",
      "documentation": "Updates an Amazon EKS managed node group configuration. Your node group continues to function during the update. The response output includes an update ID that you can use to track the status of your node group update with the <a>DescribeUpdate</a> API operation. Currently you can update the Kubernetes labels for a node group or the scaling configuration.",
      "method": "post",
      "endpoint": "clusters/:name/node-groups/:nodegroupName/update-config",
      "responses": [
        {
          "uuid": "df9bc83b-837e-404f-a234-3a10a3573f19",
          "body": "{\n  \"update\": {\n    \"id\": \"\",\n    \"status\": \"\",\n    \"type\": \"\",\n    \"params\": [\n      {\n        \"type\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"errors\": [\n      {\n        \"errorCode\": \"\",\n        \"errorMessage\": \"\",\n        \"resourceIds\": [\n          \"\"\n        ]\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b71f6b44-4f1f-4813-9880-fe8cb1bfc14c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4779de4f-5926-4bca-835e-e3d8ec8edea2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "65c5e5b8-a8ad-4210-8b8b-f62e2d47f5c7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e6d9679f-5ee3-4edd-8e5a-c328f7f5dbd0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "361a6fc2-8e52-4aec-a96d-ad4ba9280cd2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a8dfc39f-50b8-4c04-b7eb-8066b943c078",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6a6e871a-fa58-447c-bee5-48e0b1347152",
      "documentation": "<p>Updates the Kubernetes version or AMI version of an Amazon EKS managed node group.</p> <p>You can update a node group using a launch template only if the node group was originally deployed with a launch template. If you need to update a custom AMI in a node group that was deployed with a launch template, then update your custom AMI, specify the new ID in a new version of the launch template, and then update the node group to the new version of the launch template.</p> <p>If you update without a launch template, then you can update to the latest available AMI version of a node group's current Kubernetes version by not specifying a Kubernetes version in the request. You can update to the latest AMI version of your cluster's current Kubernetes version by specifying your cluster's Kubernetes version in the request. For more information, see <a href=\"https://docs.aws.amazon.com/eks/latest/userguide/eks-linux-ami-versions.html\">Amazon EKS optimized Amazon Linux 2 AMI versions</a> in the <i>Amazon EKS User Guide</i>.</p> <p>You cannot roll back a node group to an earlier Kubernetes version or AMI version.</p> <p>When a node in a managed node group is terminated due to a scaling action or update, the pods in that node are drained first. Amazon EKS attempts to drain the nodes gracefully and will fail if it is unable to do so. You can <code>force</code> the update if Amazon EKS is unable to drain the nodes as a result of a pod disruption budget issue.</p>",
      "method": "post",
      "endpoint": "clusters/:name/node-groups/:nodegroupName/update-version",
      "responses": [
        {
          "uuid": "5092556d-3bfc-443d-832b-c0a3ba4c9bcd",
          "body": "{\n  \"update\": {\n    \"id\": \"\",\n    \"status\": \"\",\n    \"type\": \"\",\n    \"params\": [\n      {\n        \"type\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"errors\": [\n      {\n        \"errorCode\": \"\",\n        \"errorMessage\": \"\",\n        \"resourceIds\": [\n          \"\"\n        ]\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "69588600-eb20-4f99-94e5-970f201b853f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "23bdaaaa-c4e0-400c-81d8-f53f4b9b1082",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8fcedf60-ac04-48ea-af5a-33d7179218e2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2873bedf-b636-4012-b2d0-ce5abbaf9232",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "56953282-27a2-44f5-8389-1daef8b4c855",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c206a913-1957-4737-b7ca-5828221d86a7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}