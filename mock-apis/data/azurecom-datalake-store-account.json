{
  "uuid": "fe747ae8-5ab8-47a8-b777-9aeac42a51b0",
  "lastMigration": 19,
  "name": "DataLakeStoreAccountManagementClient",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "7078cfa2-adc1-411f-b2aa-2159d17d27a7",
      "documentation": "Lists all of the available Data Lake Store REST API operations.",
      "method": "get",
      "endpoint": "providers/Microsoft.DataLakeStore/operations",
      "responses": [
        {
          "uuid": "78d230a6-5892-4b94-827b-3bf1c380cfb2",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"display\": {\n        \"description\": \"\",\n        \"operation\": \"\",\n        \"provider\": \"\",\n        \"resource\": \"\"\n      },\n      \"name\": \"\",\n      \"origin\": \"{{oneOf (array 'user' 'system' 'user,system')}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully listed the available operations for Data Lake Store.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "545df487-3707-49c3-b917-c5e3826a437a",
      "documentation": "Lists the Data Lake Store accounts within the subscription. The response includes a link to the next page of results, if any.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/providers/Microsoft.DataLakeStore/accounts",
      "responses": [
        {
          "uuid": "e0be6dcb-44b6-4e57-9115-f1cdb2266dbe",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"id\": \"\",\n      \"location\": \"\",\n      \"name\": \"\",\n      \"tags\": {},\n      \"type\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully retrieved the list of accounts.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2014686c-a655-4d97-b236-e88b539b7521",
      "documentation": "Gets subscription-level properties and limits for Data Lake Store specified by resource location.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/providers/Microsoft.DataLakeStore/locations/:location/capability",
      "responses": [
        {
          "uuid": "a9f178a5-e584-4a19-a8ee-0dd93b39f161",
          "body": "{\n  \"accountCount\": {{faker 'random.number'}},\n  \"maxAccountCount\": {{faker 'random.number'}},\n  \"migrationState\": {{faker 'random.boolean'}},\n  \"state\": \"{{oneOf (array 'Registered' 'Suspended' 'Deleted' 'Unregistered' 'Warned')}}\",\n  \"subscriptionId\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully retrieved the subscription-level properties and limits for Data Lake Store specified by resource location.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a3f0164a-edb8-4b8b-9d01-b02b980a57ae",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Subscription not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d28c80d2-7c2b-475a-98a4-b5aeea2af807",
      "documentation": "Checks whether the specified account name is available or taken.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/providers/Microsoft.DataLakeStore/locations/:location/checkNameAvailability",
      "responses": [
        {
          "uuid": "2d867955-8b4d-495a-8c72-c06a6aaa0aea",
          "body": "{\n  \"message\": \"\",\n  \"nameAvailable\": {{faker 'random.boolean'}},\n  \"reason\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully retrieved the Data Lake Store account name availability information.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "334b4df3-a94c-4d29-bcd0-94b1473df46c",
      "documentation": "Gets the current usage count and the limit for the resources of the location under the subscription.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/providers/Microsoft.DataLakeStore/locations/:location/usages",
      "responses": [
        {
          "uuid": "687fa7f5-3535-4d21-9b19-02cf899ab7dc",
          "body": "{\n  \"value\": [\n    {\n      \"currentValue\": {{faker 'random.number'}},\n      \"id\": \"\",\n      \"limit\": {{faker 'random.number'}},\n      \"name\": {\n        \"localizedValue\": \"\",\n        \"value\": \"\"\n      },\n      \"unit\": \"{{oneOf (array 'Count' 'Bytes' 'Seconds' 'Percent' 'CountsPerSecond' 'BytesPerSecond')}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK -- current usage count and limit retrieved and returned successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4ee197d5-2a68-4750-b4d2-04abcd1d5a59",
      "documentation": "Lists the Data Lake Store accounts within a specific resource group. The response includes a link to the next page of results, if any.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DataLakeStore/accounts",
      "responses": [
        {
          "uuid": "3e811ebb-ca59-4a8b-96d4-07b6bb3ba1d6",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"id\": \"\",\n      \"location\": \"\",\n      \"name\": \"\",\n      \"tags\": {},\n      \"type\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully retrieved the list of accounts in the specified resource group.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "04d5c4dc-38c2-419a-9dcc-78ce2d104bf5",
      "documentation": "Deletes the specified Data Lake Store account.",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DataLakeStore/accounts/:accountName",
      "responses": [
        {
          "uuid": "e365cd9a-9d22-41e4-8050-7bd5e0110ca1",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully deleted the specified account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a43e51a9-0be3-4eb9-b45b-b5d54ae1768a",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Successfully initiated the deletion of the specified account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e9184332-d6e3-4066-a8cb-833e23630698",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "The specified account was not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "838f8fa7-d9f1-4986-b333-20ae8f5fb154",
      "documentation": "Gets the specified Data Lake Store account.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DataLakeStore/accounts/:accountName",
      "responses": [
        {
          "uuid": "2b681167-8e89-483a-b49c-3f9aae33fcdf",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully retrieved details of the specified account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "db103bb3-182c-44d2-84e5-6245935885ee",
      "documentation": "Updates the specified Data Lake Store account information.",
      "method": "patch",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DataLakeStore/accounts/:accountName",
      "responses": [
        {
          "uuid": "c405b159-8026-45d7-b777-1111ab2330ae",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully updated the account details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "baf2c87c-59a4-4e53-877d-ae22a65db2f0",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Successfully initiated the update of the account details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "21a6adf6-fd33-43b8-af5f-3ed96824ffce",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Successfully initiated the update of the account details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c6bf88d1-4da3-4838-930e-fda3469b5f34",
      "documentation": "Creates the specified Data Lake Store account.",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DataLakeStore/accounts/:accountName",
      "responses": [
        {
          "uuid": "c28bc5cf-5c17-48d5-b6e9-0e0ec4f1c93b",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully created the account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ba29d7d7-ea56-4701-aac9-4f7a26bf3585",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Successfully initiated creation of the account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1dc889c4-e32d-4076-80f1-d1dce56b698c",
      "documentation": "Attempts to enable a user managed Key Vault for encryption of the specified Data Lake Store account.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DataLakeStore/accounts/:accountName/enableKeyVault",
      "responses": [
        {
          "uuid": "b41a3b09-18eb-406d-902a-de4d179ef499",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully enabled the user-managed Key Vault settings used for encrypting this Data Lake Store account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "005a68c4-83b0-412f-bd34-46c54f139b40",
      "documentation": "Lists the Data Lake Store firewall rules within the specified Data Lake Store account.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DataLakeStore/accounts/:accountName/firewallRules",
      "responses": [
        {
          "uuid": "e0d09e3f-ec79-4878-b73e-cb1ad7c937a4",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"id\": \"\",\n      \"name\": \"\",\n      \"type\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully retrieved the list of firewall rules.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9d4f8b8a-cbe5-4856-b46c-76c0e87a630e",
      "documentation": "Deletes the specified firewall rule from the specified Data Lake Store account.",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DataLakeStore/accounts/:accountName/firewallRules/:firewallRuleName",
      "responses": [
        {
          "uuid": "a5aa40aa-2812-46b3-abc2-1dbcfeb722f3",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully deleted the specified firewall rule.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a31042bd-aee4-4e3d-8012-c498b0467e9a",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "The specified firewall rule does not exist or was already deleted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cf9b77e7-2425-418d-9da2-67133931b8c1",
      "documentation": "Gets the specified Data Lake Store firewall rule.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DataLakeStore/accounts/:accountName/firewallRules/:firewallRuleName",
      "responses": [
        {
          "uuid": "3d68ebbd-aa43-4a30-87e0-c62b449481dd",
          "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully retrieved the firewall rule.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "71b68d16-3544-4468-9922-22d3ab6a472b",
      "documentation": "Updates the specified firewall rule.",
      "method": "patch",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DataLakeStore/accounts/:accountName/firewallRules/:firewallRuleName",
      "responses": [
        {
          "uuid": "b54dfe00-7acb-4b97-8fa8-c1fff6863b55",
          "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully updated the specified firewall rule.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1dacdcf5-6fb1-4ea7-b176-732dbd286bae",
      "documentation": "Creates or updates the specified firewall rule. During update, the firewall rule with the specified name will be replaced with this new firewall rule.",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DataLakeStore/accounts/:accountName/firewallRules/:firewallRuleName",
      "responses": [
        {
          "uuid": "8bd4e592-99f3-402f-816c-e73ee62f491d",
          "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully created or updated the specified firewall rule.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "026d01e7-90b5-4dc2-b3dd-bcf5c6a70d44",
      "documentation": "Lists the Data Lake Store trusted identity providers within the specified Data Lake Store account.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DataLakeStore/accounts/:accountName/trustedIdProviders",
      "responses": [
        {
          "uuid": "d22fe546-dc39-410f-a4e9-2aaa60abd42e",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"id\": \"\",\n      \"name\": \"\",\n      \"type\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully retrieved the list of trusted identity providers.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a61d579b-9675-4a17-aa87-cc8a1f511587",
      "documentation": "Deletes the specified trusted identity provider from the specified Data Lake Store account",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DataLakeStore/accounts/:accountName/trustedIdProviders/:trustedIdProviderName",
      "responses": [
        {
          "uuid": "f3f76e7a-ca08-4322-a479-a90bfdee0a09",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully deleted the specified trusted identity provider details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e6b42657-b3cd-4452-a19d-34fc346d8885",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "The specified trusted identity provider was not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "eb5a5549-a6d0-44cf-8239-84186e520a67",
      "documentation": "Gets the specified Data Lake Store trusted identity provider.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DataLakeStore/accounts/:accountName/trustedIdProviders/:trustedIdProviderName",
      "responses": [
        {
          "uuid": "88e33f3c-5147-43ba-94e5-8d760a4429de",
          "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully retrieved details of the specified trusted identity provider.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8d89827e-0ff3-4598-bbe3-256370a0e3c7",
      "documentation": "Updates the specified trusted identity provider.",
      "method": "patch",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DataLakeStore/accounts/:accountName/trustedIdProviders/:trustedIdProviderName",
      "responses": [
        {
          "uuid": "96e2db82-51f1-404c-b0da-7dd0614bfded",
          "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully added the trusted identity provider.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "622053d4-2ddf-4cad-9f21-72b6edcf2497",
      "documentation": "Creates or updates the specified trusted identity provider. During update, the trusted identity provider with the specified name will be replaced with this new provider",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DataLakeStore/accounts/:accountName/trustedIdProviders/:trustedIdProviderName",
      "responses": [
        {
          "uuid": "aac8adf0-0ea6-438b-8cd5-8a1ab4b10e7e",
          "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully added the trusted identity provider.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e2b20b36-b15f-48cc-af1a-a23bd38bbc04",
      "documentation": "Lists the Data Lake Store virtual network rules within the specified Data Lake Store account.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DataLakeStore/accounts/:accountName/virtualNetworkRules",
      "responses": [
        {
          "uuid": "36700a54-5b77-47fa-9fd8-a9ed9998e3d4",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"id\": \"\",\n      \"name\": \"\",\n      \"type\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully retrieved the list of virtual network rules.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2d2f6278-05fd-479e-a580-8708af00d153",
      "documentation": "Deletes the specified virtual network rule from the specified Data Lake Store account.",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DataLakeStore/accounts/:accountName/virtualNetworkRules/:virtualNetworkRuleName",
      "responses": [
        {
          "uuid": "47760871-eaf8-4c9d-a395-1ed3ad7e9cd1",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully deleted the specified virtual network rule.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8eed0cad-b158-49e0-9808-f9ed37d0aa93",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "The specified virtual network rule does not exist or was already deleted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0cb4c0a0-4790-4cf3-b33e-56962ef81b4e",
      "documentation": "Gets the specified Data Lake Store virtual network rule.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DataLakeStore/accounts/:accountName/virtualNetworkRules/:virtualNetworkRuleName",
      "responses": [
        {
          "uuid": "702e51ec-3b06-4cc5-aeaa-139f29b1eac3",
          "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully retrieved the virtual network rule.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "384ca6cc-0b9d-47ee-8664-7680aa68db18",
      "documentation": "Updates the specified virtual network rule.",
      "method": "patch",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DataLakeStore/accounts/:accountName/virtualNetworkRules/:virtualNetworkRuleName",
      "responses": [
        {
          "uuid": "e2a313a9-d699-44a2-ad2e-d41be95f63fd",
          "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully updated the specified virtual network rule.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8397486a-6cfe-4bf5-81cc-4a6d5006e662",
      "documentation": "Creates or updates the specified virtual network rule. During update, the virtual network rule with the specified name will be replaced with this new virtual network rule.",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DataLakeStore/accounts/:accountName/virtualNetworkRules/:virtualNetworkRuleName",
      "responses": [
        {
          "uuid": "ef46e849-8b29-4f7e-b042-532d4657fb33",
          "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully created or updated the specified virtual network rule.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}