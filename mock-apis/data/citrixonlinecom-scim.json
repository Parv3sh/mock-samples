{
  "uuid": "de1d8c3f-6a00-483a-aae7-50848592520f",
  "lastMigration": 19,
  "name": "SCIM",
  "endpointPrefix": "identity/v1",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "e51fa946-74f5-425e-b3b9-485fa386f3c6",
      "documentation": "Get Groups",
      "method": "get",
      "endpoint": "Groups",
      "responses": [
        {
          "uuid": "7adcb319-957d-4943-a617-88dab9a1cf63",
          "body": "{\n  \"resources\": [\n    {\n      \"displayName\": \"\",\n      \"id\": \"\",\n      \"members\": [\n        {\n          \"type\": \"{{oneOf (array 'group' 'user')}}\",\n          \"value\": \"\"\n        }\n      ],\n      \"meta\": {\n        \"created\": \"{{faker 'date.recent' 365}}\",\n        \"location\": \"\"\n      }\n    }\n  ],\n  \"totalResults\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request has succeeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e01a80a2-547e-48c3-8a94-981d1e119e4c",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid filter syntax",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e5ed9fd9-0bd1-445c-9794-ffc9a703c1c9",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Client is not sufficiently authorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "38bda478-36e0-4f80-b0fe-c193878f83ec",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Invalid token passed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fea31915-3015-47ad-ab51-7cbb5b40c5a4",
          "body": "",
          "latency": 0,
          "statusCode": 502,
          "label": "Authentication or account gateway error occurred",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "85972a88-90aa-4281-a9ab-1d708381b200",
          "body": "",
          "latency": 0,
          "statusCode": 504,
          "label": "Authentication or account gateway timeout occurred",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4f5defe4-8c41-497f-9fb4-def595ebfe0e",
      "documentation": "Create Group",
      "method": "post",
      "endpoint": "Groups",
      "responses": [
        {
          "uuid": "3dfc401b-2bd8-4687-a1a9-ebd3141dba2d",
          "body": "{\n  \"displayName\": \"\",\n  \"id\": \"\",\n  \"members\": [\n    {\n      \"type\": \"{{oneOf (array 'group' 'user')}}\",\n      \"value\": \"\"\n    }\n  ],\n  \"meta\": {\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The group has been created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5ec90ba0-815a-4633-9bac-04a014962f5c",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Possible reasons are:<br />The displayName field is not set<br />The displayName field is malformed<br />The displayName field exceeds 128 characters<br />The members array exceeds 100 elements<br />",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "84226099-7cee-4db5-9da4-ae4a2366da1e",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Client is not sufficiently authorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1ea23b23-e7e5-476f-abb0-d2bc6e0e3d15",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Invalid token passed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "77ce53fc-9b97-46f9-bd7e-a400b126516d",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "The displayName is already in use within the organization",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5ee11fb4-8633-42ce-98ef-701dce62a8d6",
          "body": "",
          "latency": 0,
          "statusCode": 502,
          "label": "An authentication or account gateway error occurred",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "530dcd91-038c-45db-b203-ab6b4f2e6e72",
          "body": "",
          "latency": 0,
          "statusCode": 504,
          "label": "An authentication or account, or gateway timeout occurred.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5fee561e-7dff-40df-bb98-08f4090b633e",
      "documentation": "Delete Group",
      "method": "delete",
      "endpoint": "Groups/:groupKey",
      "responses": [
        {
          "uuid": "f197e989-8cef-48b9-810a-dcb563ea9909",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request has succeeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6a784233-3c80-49cd-917c-2a310137b657",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Client is not sufficiently authorized or group does not exist in organization",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "800acf0b-f72a-40db-a0a7-abbba656262d",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Invalid token passed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8d7be58a-e94f-43be-b6d1-70ed34bb9715",
          "body": "",
          "latency": 0,
          "statusCode": 502,
          "label": "Authentication or account gateway error occurred",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "184b9304-fa18-4d78-b601-6a12503ad5da",
          "body": "",
          "latency": 0,
          "statusCode": 504,
          "label": "Authentication or account gateway timeout occurred",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2c9c2a6e-c3c5-4346-a1a2-7ae60c70c67b",
      "documentation": "Get Group",
      "method": "get",
      "endpoint": "Groups/:groupKey",
      "responses": [
        {
          "uuid": "42298f21-67a6-4a05-9b49-9adc51de4257",
          "body": "{\n  \"displayName\": \"\",\n  \"id\": \"\",\n  \"members\": [\n    {\n      \"type\": \"{{oneOf (array 'group' 'user')}}\",\n      \"value\": \"\"\n    }\n  ],\n  \"meta\": {\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request has succeeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "788731c2-20db-4add-a755-2fd741ea4cd1",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Client is not sufficiently authorized or group does not exist in organization",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5d7edf8c-d831-4200-b7eb-434b7d22c73a",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Invalid token passed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "169a4582-fb3a-49a6-b0f4-0c105da4d363",
          "body": "",
          "latency": 0,
          "statusCode": 502,
          "label": "Authentication or account gateway error occurred",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d164d4c5-e5e8-4bcc-a5eb-0d04ae5fa0ad",
          "body": "",
          "latency": 0,
          "statusCode": 504,
          "label": "Authentication or account gateway timeout occurred",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "28361b65-30cd-42e7-8e75-76ec9e0429ba",
      "documentation": "Update Group",
      "method": "patch",
      "endpoint": "Groups/:groupKey",
      "responses": [
        {
          "uuid": "e8435da6-3002-4be7-9ba1-721744f64064",
          "body": "{\n  \"displayName\": \"\",\n  \"id\": \"\",\n  \"members\": [\n    {\n      \"type\": \"{{oneOf (array 'group' 'user')}}\",\n      \"value\": \"\"\n    }\n  ],\n  \"meta\": {\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The group has been updated",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "72cd5cf2-08b7-409b-892b-c16fed4c0f8c",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Possible reasons are:<br />The displayName field is not set<br />The displayName field is malformed<br />The displayName field exceeds 128 characters<br />The members array exceeds 100 elements<br />",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3893adc6-e228-460e-960f-2a1b40b20fc8",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Client is not sufficiently authorized or group does not exist in organization",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e27c5398-8841-466a-9718-289850ff6b21",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Invalid token passed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0d1d1f83-587c-4faa-9ef9-4628fb9eb895",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "The displayName is already in use within the organization",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9c65ae92-1c4c-44d3-8993-b20e8ebced03",
          "body": "",
          "latency": 0,
          "statusCode": 502,
          "label": "Authentication or account gateway error occurred",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a18792cd-e8ad-4d1f-84a7-b5d2c1660e34",
          "body": "",
          "latency": 0,
          "statusCode": 504,
          "label": "Authentication or account gateway timeout occurred",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6ca64a8e-c761-49b6-85db-1fbedcd3d530",
      "documentation": "Replace Group",
      "method": "put",
      "endpoint": "Groups/:groupKey",
      "responses": [
        {
          "uuid": "396c702d-6eed-48cd-b0a4-dc5936c03e87",
          "body": "{\n  \"displayName\": \"\",\n  \"id\": \"\",\n  \"members\": [\n    {\n      \"type\": \"{{oneOf (array 'group' 'user')}}\",\n      \"value\": \"\"\n    }\n  ],\n  \"meta\": {\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The group has been replaced.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2380f7b0-dc5d-4083-9e18-86a2c4b6b255",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Possible reasons are:<br />The displayName field is not set<br />The displayName field is malformed<br />The displayName field exceeds 128 characters<br />The members array exceeds 100 elements<br />",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cee91e19-7c1a-4bb9-8052-f2510da47444",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Client is not sufficiently authorized or group does not exist in organization",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c8355197-8b1b-4a58-9fc2-3a13e23866d0",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Invalid token passed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c2e30f0a-fb24-4ef6-af6a-7b5951ce659d",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "The displayName is already in use within the organization",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "274c17ef-b5dc-488c-bcaa-e341f0c70b5d",
          "body": "",
          "latency": 0,
          "statusCode": 502,
          "label": "Authentication or account gateway error occurred",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b3c60ec5-07aa-40d5-bc89-e54b4d2cd1c0",
          "body": "",
          "latency": 0,
          "statusCode": 504,
          "label": "Authentication or account gateway timeout occurred",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "93d014d2-e2a6-410f-9afd-286c65fb4179",
      "documentation": "Get User Schema",
      "method": "get",
      "endpoint": "Schemas/Users",
      "responses": [
        {
          "uuid": "e0bd6eb3-477e-49ae-9986-02e26c122ad6",
          "body": "{\n  \"attributes\": [\n    {\n      \"caseExact\": {{faker 'random.boolean'}},\n      \"description\": \"\",\n      \"multiValued\": {{faker 'random.boolean'}},\n      \"name\": \"\",\n      \"readOnly\": {{faker 'random.boolean'}},\n      \"required\": {{faker 'random.boolean'}},\n      \"schema\": \"\",\n      \"subAttributes\": [\n        {\n          \"caseExact\": {{faker 'random.boolean'}},\n          \"description\": \"\",\n          \"name\": \"\",\n          \"readOnly\": {{faker 'random.boolean'}},\n          \"required\": {{faker 'random.boolean'}},\n          \"type\": \"\"\n        }\n      ],\n      \"type\": \"\"\n    }\n  ],\n  \"description\": \"\",\n  \"endpoint\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"schema\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request has succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cb5cba80-16db-43f8-96ce-db4b4a36138d",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Invalid token passed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "37eaa87e-6cb8-4bbd-b86f-a3fd7daa4780",
          "body": "",
          "latency": 0,
          "statusCode": 502,
          "label": "Authentication or account gateway error occurred",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "990e5291-74f4-4013-85fa-ebaa71bf550f",
          "body": "",
          "latency": 0,
          "statusCode": 504,
          "label": "Authentication or account gateway timeout occurred",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "75741dbf-00ac-474a-84da-30262a65ed88",
      "documentation": "Get Service Provider Configurations",
      "method": "get",
      "endpoint": "ServiceProviderConfigs",
      "responses": [
        {
          "uuid": "dd068c29-ea00-4a0b-9471-7cb59754cc98",
          "body": "{\n  \"authenticationSchemes\": {\n    \"description\": \"\",\n    \"documentationUrl\": \"\",\n    \"name\": \"\",\n    \"specUrl\": \"\"\n  },\n  \"bulk\": {\n    \"supported\": {{faker 'random.boolean'}}\n  },\n  \"changePassword\": {\n    \"supported\": {{faker 'random.boolean'}}\n  },\n  \"documentationUrl\": \"\",\n  \"etag\": {\n    \"supported\": {{faker 'random.boolean'}}\n  },\n  \"filter\": {\n    \"supported\": {{faker 'random.boolean'}}\n  },\n  \"patch\": {\n    \"supported\": {{faker 'random.boolean'}}\n  },\n  \"sort\": {\n    \"supported\": {{faker 'random.boolean'}}\n  },\n  \"xmlDataFormat\": {\n    \"supported\": {{faker 'random.boolean'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request has succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5dedfd83-1731-42a1-b4ad-c112449c9a7c",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Invalid token passed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "077271be-f485-4fe6-b602-979c8ff3ea0c",
          "body": "",
          "latency": 0,
          "statusCode": 502,
          "label": "Authentication or account gateway error occurred",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ab8c410b-44fb-4216-9684-08453c149161",
          "body": "",
          "latency": 0,
          "statusCode": 504,
          "label": "Authentication or account gateway timeout occurred",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0201935e-dfe7-4ac9-aff8-a88ef14b1292",
      "documentation": "Get Users",
      "method": "get",
      "endpoint": "Users",
      "responses": [
        {
          "uuid": "8a30ced3-6f47-4801-976e-adb1f7cc95f4",
          "body": "{\n  \"resources\": [\n    {\n      \"displayName\": \"\",\n      \"id\": \"\",\n      \"locale\": \"\",\n      \"meta\": {\n        \"created\": \"{{faker 'date.recent' 365}}\",\n        \"location\": \"\"\n      },\n      \"name\": {\n        \"familyName\": \"\",\n        \"givenName\": \"\"\n      },\n      \"timezone\": \"\",\n      \"userName\": \"\"\n    }\n  ],\n  \"totalResults\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request has succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "acb5da5e-de21-43c0-8d62-243fa84e0fad",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid filter syntax",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6da5efc9-5f2d-4dd2-a114-35f5996b0763",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Client is not sufficiently authorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "184175e5-ea1a-4e8a-bd0d-a355b224d894",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Invalid token passed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "13a3b188-1866-4797-ae90-fe1e089d21b8",
          "body": "",
          "latency": 0,
          "statusCode": 502,
          "label": "Authentication or account gateway error occurred",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c877911f-1f3d-4050-a721-e5c8e49a53ea",
          "body": "",
          "latency": 0,
          "statusCode": 504,
          "label": "Authentication or account gateway timeout occurred",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2bebf2ee-b17b-45b4-8342-0bcc033e794a",
      "documentation": "Create User",
      "method": "post",
      "endpoint": "Users",
      "responses": [
        {
          "uuid": "c489dbad-6f4c-4755-8915-6e123b13e03f",
          "body": "{\n  \"displayName\": \"\",\n  \"id\": \"\",\n  \"locale\": \"\",\n  \"meta\": {\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\"\n  },\n  \"name\": {\n    \"familyName\": \"\",\n    \"givenName\": \"\"\n  },\n  \"timezone\": \"\",\n  \"userName\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The user has been created.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2e55582b-3747-4d3e-b8ab-c00d804526a6",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "One of the following requirements is not met:<br />The userName field is required.<br />The userName field must be non-empty.<br />The userName field cannot exceed 128 characters.<br />The locale field must be composed of 1 or 2 parts.<br />The locale language sub-field must be ISO-639.<br />The locale country sub-field must be ISO-3166.<br />The timezone field must be a valid timezone.<br />The givenName field must not exceed 60 characters.<br />The familyName field must not exceed 60 characters.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1b360138-2a08-449a-9ffa-601eb21c3098",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Client is not sufficiently authorized.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "05c516de-55cb-41f2-9dc3-19e7a2e99979",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Invalid token passed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e59a6cdb-3839-4777-9a35-e5f006800518",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "Username is already in use.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "13445523-a761-4531-8565-1314c4d60682",
          "body": "",
          "latency": 0,
          "statusCode": 502,
          "label": "Authentication, account, or email verification gateway error occurred.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e81dedb5-2eb4-4d47-b9b0-0dbb0847f6bf",
          "body": "",
          "latency": 0,
          "statusCode": 504,
          "label": "Authentication, account, or email verification gateway timeout occurred.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e2f16ded-2ba5-4125-ae5c-baa708fb2876",
      "documentation": "Get Current User",
      "method": "get",
      "endpoint": "Users/me",
      "responses": [
        {
          "uuid": "f4c34aa7-04b3-4eb1-9474-6e2d860f4f68",
          "body": "{\n  \"displayName\": \"\",\n  \"id\": \"\",\n  \"locale\": \"\",\n  \"meta\": {\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\"\n  },\n  \"name\": {\n    \"familyName\": \"\",\n    \"givenName\": \"\"\n  },\n  \"timezone\": \"\",\n  \"userName\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request has succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1ad88c24-da21-4794-bc45-f0e685e55d32",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Client is not sufficiently authorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3a79c68d-4dcb-48da-8107-23835491c073",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Invalid token passed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bdbc574e-115c-4e09-b94f-5aae38799cc9",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "User not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "83a66b3c-dce4-4ed3-b0ad-b1bc00a55932",
          "body": "",
          "latency": 0,
          "statusCode": 502,
          "label": "Authentication or account gateway error occurred",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ba628a3a-434e-41c5-a11c-81b0c1d93424",
          "body": "",
          "latency": 0,
          "statusCode": 504,
          "label": "Authentication or account gateway timeout occurred",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "85cebde0-4ff5-48d9-a17d-21b20e08029a",
      "documentation": "Update Current User",
      "method": "patch",
      "endpoint": "Users/me",
      "responses": [
        {
          "uuid": "ab269848-4b0e-4b2b-af15-967761e480ca",
          "body": "{\n  \"displayName\": \"\",\n  \"id\": \"\",\n  \"locale\": \"\",\n  \"meta\": {\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\"\n  },\n  \"name\": {\n    \"familyName\": \"\",\n    \"givenName\": \"\"\n  },\n  \"timezone\": \"\",\n  \"userName\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The current user has been updated.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0e26582d-9cb8-4385-aeed-856cd453bb4c",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "One of the following requirements is not met:<br />The userName field is required.<br />The userName field must be non-empty.<br />The userName field cannot exceed 128 characters.<br />The locale field must be composed of 1 or 2 parts.<br />The locale language sub-field must be ISO-639.<br />The locale country sub-field must be ISO-3166.<br />The timezone field must be a valid timezone.<br />The givenName field must not exceed 60 characters.<br />The familyName field must not exceed 60 characters.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4b0d8732-4b44-4543-8dc9-c9ccc9ce366f",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Client is not sufficiently authorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "30920b2c-309f-4ccf-84a8-a627e4c62403",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Invalid token passed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1caf6160-ec9c-4d74-9db7-1fea0ccc77a2",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "User not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "846fe66c-19a7-4c20-9053-9127fc487085",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "Email address conflict",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d3442fb7-a906-4c99-b3a4-3b43ea328a95",
          "body": "",
          "latency": 0,
          "statusCode": 502,
          "label": "Authentication or account gateway error occurred",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ee1cc4cd-6cbf-4635-a207-72824db2410e",
          "body": "",
          "latency": 0,
          "statusCode": 504,
          "label": "Authentication or account gateway timeout occurred",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7beff225-255f-4677-8f69-da6c5751beb5",
      "documentation": "Replace Current User",
      "method": "put",
      "endpoint": "Users/me",
      "responses": [
        {
          "uuid": "b36fa604-3d70-4b01-8c58-3d04c15b4ac8",
          "body": "{\n  \"displayName\": \"\",\n  \"id\": \"\",\n  \"locale\": \"\",\n  \"meta\": {\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\"\n  },\n  \"name\": {\n    \"familyName\": \"\",\n    \"givenName\": \"\"\n  },\n  \"timezone\": \"\",\n  \"userName\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The current user has been replaced.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f8f85ce0-dc7c-4261-86b9-fbf19ff34666",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "One of the following requirements is not met:<br />The userName field is required.<br />The userName field must be non-empty.<br />The userName field cannot exceed 128 characters.<br />The locale field must be composed of 1 or 2 parts.<br />The locale language sub-field must be ISO-639.<br />The locale country sub-field must be ISO-3166.<br />The timezone field must be a valid timezone.<br />The givenName field must not exceed 60 characters.<br />The familyName field must not exceed 60 characters.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bab06e28-10c0-442e-ac99-1be97063757e",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Client is not sufficiently authorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "99a13219-d8a3-419e-be61-755722c944f6",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Invalid token passed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "48204e55-2047-428a-96d6-3668bb41bef7",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "User not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "87564a28-e4c9-4e24-b64a-a472f578d20e",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "Email address conflict",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bd4600f2-1ce9-49e1-8eb2-7cde137075bf",
          "body": "",
          "latency": 0,
          "statusCode": 502,
          "label": "Authentication or account gateway error occurred",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "44f2264a-c3ca-4644-96bd-25a343b574e1",
          "body": "",
          "latency": 0,
          "statusCode": 504,
          "label": "Authentication or account gateway timeout occurred",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "da58467b-cc63-4fce-8a4a-d2dead123b4d",
      "documentation": "Delete User",
      "method": "delete",
      "endpoint": "Users/:userKey",
      "responses": [
        {
          "uuid": "3e2f86eb-f625-4725-8970-c796c766700c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request has succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2dd99f38-23ac-466a-a16e-dec197cab9c6",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Client is not sufficiently authorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "85916552-da7a-49d6-8cf6-9d975453aef7",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Invalid token passed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "425557e1-3917-4ca7-95e8-6bc2bd2d3dc6",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "User not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c9a65daf-a247-4fab-8ed4-a12c2e992c24",
          "body": "",
          "latency": 0,
          "statusCode": 502,
          "label": "Authentication or account gateway error occurred",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "386e16a0-83ed-4a1c-be4c-1390b86a1729",
          "body": "",
          "latency": 0,
          "statusCode": 504,
          "label": "Authentication or account gateway timeout occurred",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "748b9a68-9f2e-4ac9-9490-2ab872337f7b",
      "documentation": "Get User",
      "method": "get",
      "endpoint": "Users/:userKey",
      "responses": [
        {
          "uuid": "02f4c1a3-89dd-4815-bd0f-f2cf74ffae67",
          "body": "{\n  \"displayName\": \"\",\n  \"id\": \"\",\n  \"locale\": \"\",\n  \"meta\": {\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\"\n  },\n  \"name\": {\n    \"familyName\": \"\",\n    \"givenName\": \"\"\n  },\n  \"timezone\": \"\",\n  \"userName\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request has succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5db61158-6293-49c3-a81d-7e7379d47a93",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Client is not sufficiently authorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "deecfb1a-3631-4e8c-9b8a-ec3a841e3391",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Invalid token passed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c860b5cb-b9f6-467a-9773-fca6faa33e44",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "User not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "40643d57-70ae-416a-a737-cf524802fd58",
          "body": "",
          "latency": 0,
          "statusCode": 502,
          "label": "Authentication or account gateway error occurred",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cd68fb23-fcea-4fac-bafd-8771316de041",
          "body": "",
          "latency": 0,
          "statusCode": 504,
          "label": "Authentication or account gateway timeout occurred",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e0048d39-3871-4e44-9a66-017482d76f2f",
      "documentation": "Update User",
      "method": "patch",
      "endpoint": "Users/:userKey",
      "responses": [
        {
          "uuid": "ae879bc3-2239-4087-b80a-78e87a4dde56",
          "body": "{\n  \"displayName\": \"\",\n  \"id\": \"\",\n  \"locale\": \"\",\n  \"meta\": {\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\"\n  },\n  \"name\": {\n    \"familyName\": \"\",\n    \"givenName\": \"\"\n  },\n  \"timezone\": \"\",\n  \"userName\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The user has been updated.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9309850b-7f40-464d-82dd-ff5187d95cea",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "One of the following requirements is not met:<br />The userName field is required.<br />The userName field must be non-empty.<br />The userName field cannot exceed 128 characters.<br />The locale field must be composed of 1 or 2 parts.<br />The locale language sub-field must be ISO-639.<br />The locale country sub-field must be ISO-3166.<br />The timezone field must be a valid timezone.<br />The givenName field must not exceed 60 characters.<br />The familyName field must not exceed 60 characters.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "927b1f1f-c3e9-41dc-906a-e8dc801ceb48",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Client is not sufficiently authorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8655ad93-26c4-4928-b30b-298ee7d00c25",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Invalid token passed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "85722be0-caf8-4f37-98ca-b7a8ea60ce64",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "User not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0a0001f4-24b6-470d-8739-18d2d1b0db15",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "Email address conflict",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9bcad5ea-6eec-46ca-bf0c-3d4bcb16b6db",
          "body": "",
          "latency": 0,
          "statusCode": 502,
          "label": "Authentication or account gateway error occurred",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6e406a1f-945e-4600-aeda-136f53f35bf6",
          "body": "",
          "latency": 0,
          "statusCode": 504,
          "label": "Authentication or account gateway timeout occurred",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c7d7112a-8e79-4bc8-a1f6-e855cc843948",
      "documentation": "Replace User",
      "method": "put",
      "endpoint": "Users/:userKey",
      "responses": [
        {
          "uuid": "c24192c9-652b-4a0d-8b36-4187f98479f2",
          "body": "{\n  \"displayName\": \"\",\n  \"id\": \"\",\n  \"locale\": \"\",\n  \"meta\": {\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\"\n  },\n  \"name\": {\n    \"familyName\": \"\",\n    \"givenName\": \"\"\n  },\n  \"timezone\": \"\",\n  \"userName\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The user has been replaced.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3e8b4634-3c47-4f26-b531-979bb5748f6c",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "One of the following requirements is not met:<br />The userName field is required.<br />The userName field must be non-empty.<br />The userName field cannot exceed 128 characters.<br />The locale field must be composed of 1 or 2 parts.<br />The locale language sub-field must be ISO-639.<br />The locale country sub-field must be ISO-3166.<br />The timezone field must be a valid timezone.<br />The givenName field must not exceed 60 characters.<br />The familyName field must not exceed 60 characters.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5bb0f01e-0d48-4996-b324-f21cfe9bd801",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Client is not sufficiently authorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "72d3ef02-f302-422c-a877-128704850082",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Invalid token passed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bce1f1c1-fbe8-4b0b-a7f6-4f4717403fd8",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "User not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "87fe3d63-4a9e-4a3f-8816-51477a195c8a",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "Email address conflict",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f5a67801-80ff-43bf-875a-1a00776882ac",
          "body": "",
          "latency": 0,
          "statusCode": 502,
          "label": "Authentication or account gateway error occurred",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "12b6302a-08eb-4591-91c5-288898a96507",
          "body": "",
          "latency": 0,
          "statusCode": 504,
          "label": "Authentication or account gateway timeout occurred",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}