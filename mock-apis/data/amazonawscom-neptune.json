{
  "uuid": "eb0b27c6-7a89-46c3-a7a3-82d37da46fbe",
  "lastMigration": 19,
  "name": "Amazon Neptune",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "73f629bd-063c-4314-80fc-848eab7dc995",
      "documentation": "Associates an Identity and Access Management (IAM) role from an Neptune DB cluster.",
      "method": "get",
      "endpoint": "#Action=AddRoleToDBCluster",
      "responses": [
        {
          "uuid": "d39e4450-7cf2-42cf-90d7-7d0bf93a7aad",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ecd7dc4d-c3ab-4bbd-bd74-8ddcf57d6d10",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f7a111b2-989c-4e48-8e18-a6875a88a290",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBClusterRoleAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f2c6fec4-82ed-4c6c-b0a8-41e108a5f2da",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a684abf6-b706-4acb-aa51-b6c93c6b772a",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBClusterRoleQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "eaa1851d-181b-4742-af30-ac204b4fb2f3",
      "documentation": "Associates an Identity and Access Management (IAM) role from an Neptune DB cluster.",
      "method": "post",
      "endpoint": "#Action=AddRoleToDBCluster",
      "responses": [
        {
          "uuid": "d57fa918-8e30-41ed-8029-561a9fd77e80",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "70fae575-1c48-4e7f-af27-1961b30ad286",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5e6ade5e-5caf-438d-b50b-3a5c067b24c2",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBClusterRoleAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dd8d5395-88d4-44b2-a762-68803739dca7",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e556179c-615e-414d-b6ad-bd4c668bceee",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBClusterRoleQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "13839378-f4d5-4a67-8729-df44a6445a06",
      "documentation": "Adds a source identifier to an existing event notification subscription.",
      "method": "get",
      "endpoint": "#Action=AddSourceIdentifierToSubscription",
      "responses": [
        {
          "uuid": "6eaeb789-dd78-40ab-8b72-aa078fd68f37",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ab614155-981e-4fad-9b4b-5e9ee058caa4",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "SubscriptionNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c6e91b5c-bc78-479a-86f3-ea8ff3f90500",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "SourceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1cef62a8-8715-4873-95b9-8109838d8bb9",
      "documentation": "Adds a source identifier to an existing event notification subscription.",
      "method": "post",
      "endpoint": "#Action=AddSourceIdentifierToSubscription",
      "responses": [
        {
          "uuid": "0c566800-b878-4d9c-8890-5df8a87e249f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e978013e-7603-4a3e-8e72-e275faa2f516",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "SubscriptionNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d77b5b5c-20f6-4e9c-b7b4-3a053208cdec",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "SourceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1e5698b0-f6c6-4099-a9f0-5cafe8b38a2c",
      "documentation": "Adds metadata tags to an Amazon Neptune resource. These tags can also be used with cost allocation reporting to track cost associated with Amazon Neptune resources, or used in a Condition statement in an IAM policy for Amazon Neptune.",
      "method": "get",
      "endpoint": "#Action=AddTagsToResource",
      "responses": [
        {
          "uuid": "db0180ce-a681-455e-90fc-f8775db74ec3",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dc87723e-64bc-470c-a1fa-46aae385dd8e",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "94381a2e-79a0-4e08-912f-9da6bc976268",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "31e5addb-eeff-478d-b368-1a870ffcd5c5",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fb238fff-1171-4df8-ad17-5ce0cc84329a",
      "documentation": "Adds metadata tags to an Amazon Neptune resource. These tags can also be used with cost allocation reporting to track cost associated with Amazon Neptune resources, or used in a Condition statement in an IAM policy for Amazon Neptune.",
      "method": "post",
      "endpoint": "#Action=AddTagsToResource",
      "responses": [
        {
          "uuid": "900c7b50-ec0b-42a6-82b1-06dcb7825c77",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bc61bba0-9f3a-4d4c-9936-6d3f72435330",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ec36b741-59c0-4f98-85d9-2a05810ba3bf",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e2100879-61b1-4a64-b4ec-1a829cd42a17",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "478de32a-0824-4c66-a2ed-063877605a40",
      "documentation": "Applies a pending maintenance action to a resource (for example, to a DB instance).",
      "method": "get",
      "endpoint": "#Action=ApplyPendingMaintenanceAction",
      "responses": [
        {
          "uuid": "04c2451a-c168-4cb0-a71e-d587283e4f1e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cdcc98aa-e6a5-4540-8031-49e8a48ab2ef",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "53aa5b1e-a3fb-4aad-8fc5-59c930f2de14",
      "documentation": "Applies a pending maintenance action to a resource (for example, to a DB instance).",
      "method": "post",
      "endpoint": "#Action=ApplyPendingMaintenanceAction",
      "responses": [
        {
          "uuid": "2a4397f7-dee9-431a-ae65-059da31fccec",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d541ddd2-c2bd-4557-9d51-50d428cce140",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "288929be-e89d-495a-98ea-de109f1b4f10",
      "documentation": "Copies the specified DB cluster parameter group.",
      "method": "get",
      "endpoint": "#Action=CopyDBClusterParameterGroup",
      "responses": [
        {
          "uuid": "44481c58-dbbd-4494-88e5-bb4447e0d97e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "434366e0-6545-4fb4-a177-6ff56ecacaa2",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ef096c9c-a29c-4336-b293-019676d93901",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBParameterGroupQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "febef37c-5c21-4bc2-aeb8-b7f006491dcb",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBParameterGroupAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3adffde3-351b-42de-8a8c-21b8fc95336d",
      "documentation": "Copies the specified DB cluster parameter group.",
      "method": "post",
      "endpoint": "#Action=CopyDBClusterParameterGroup",
      "responses": [
        {
          "uuid": "1fdbeda9-14e6-4ff4-bc11-bdbf6405945a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "03b4e2b1-eb88-47c4-a042-0fc3358151fd",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2462e5ae-7e38-476c-8ca8-784e6bf7a605",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBParameterGroupQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9e2854df-1a9d-4d5d-aef5-05eb73973bdd",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBParameterGroupAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6df752f6-8061-442f-a67f-cfbdfcdd5eaa",
      "documentation": "<p>Copies a snapshot of a DB cluster.</p> <p>To copy a DB cluster snapshot from a shared manual DB cluster snapshot, <code>SourceDBClusterSnapshotIdentifier</code> must be the Amazon Resource Name (ARN) of the shared DB cluster snapshot.</p>",
      "method": "get",
      "endpoint": "#Action=CopyDBClusterSnapshot",
      "responses": [
        {
          "uuid": "e5433aea-7c81-4da7-90c3-62abb70e2c46",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "62f161c3-d895-49f3-8eae-0046021ee230",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterSnapshotAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1ec2900e-79a8-4186-ad5f-4ddbcf90ff31",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBClusterSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "71fe0fda-6582-45c0-b00f-61571bd965be",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "125c46c3-e0be-4e91-a024-3e29acb83b8c",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidDBClusterSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a4be6d79-79ae-4af6-a74d-5e701e8c0202",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "SnapshotQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "67df8476-2222-4e2a-9920-8084d4368ded",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d63b8e87-bf92-450d-8ce2-f0dc775372ac",
      "documentation": "<p>Copies a snapshot of a DB cluster.</p> <p>To copy a DB cluster snapshot from a shared manual DB cluster snapshot, <code>SourceDBClusterSnapshotIdentifier</code> must be the Amazon Resource Name (ARN) of the shared DB cluster snapshot.</p>",
      "method": "post",
      "endpoint": "#Action=CopyDBClusterSnapshot",
      "responses": [
        {
          "uuid": "062cdb4d-2de3-4918-8757-542395b10491",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d4cb7b50-b30d-40fb-9ef1-57a45757ab26",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterSnapshotAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "437c81f2-b8fe-4ed8-988b-3f987b5b21f2",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBClusterSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1e1df270-f8c7-46b0-8cfc-e4e7b25d6b93",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e30364a5-e4c3-43d6-a08f-695851760a8b",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidDBClusterSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a406896c-7507-4184-a717-90c9f18d777e",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "SnapshotQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "595c5637-3573-43ad-b59c-69acc7e13af6",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "108c70f7-0c95-4b57-9845-20f1158c4ab4",
      "documentation": "Copies the specified DB parameter group.",
      "method": "get",
      "endpoint": "#Action=CopyDBParameterGroup",
      "responses": [
        {
          "uuid": "3b14c722-0bf9-4b80-bec7-809fa553c9c6",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f21ef699-25b3-4509-bb52-2017622f1906",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f868ef6b-a5b3-4c93-aff5-d5e7edfb8a92",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBParameterGroupAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "42a1184f-daa1-4797-abd4-f2fc6129d942",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBParameterGroupQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b9bdb83a-9227-4754-afa0-826bab21ba3a",
      "documentation": "Copies the specified DB parameter group.",
      "method": "post",
      "endpoint": "#Action=CopyDBParameterGroup",
      "responses": [
        {
          "uuid": "8525dc68-8346-43a5-a7f3-a6b42a816ac4",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9b1607ef-b0c4-4e98-b5fd-9721853eb9fe",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7e2490fd-15e2-4f8d-82e2-fdc0089abe7c",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBParameterGroupAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a811662a-f7d4-48b8-8b9d-cd378c3631b2",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBParameterGroupQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3936d467-a91e-4ebe-b374-32eb49418711",
      "documentation": "<p>Creates a new Amazon Neptune DB cluster.</p> <p>You can use the <code>ReplicationSourceIdentifier</code> parameter to create the DB cluster as a Read Replica of another DB cluster or Amazon Neptune DB instance.</p> <p>Note that when you create a new cluster using <code>CreateDBCluster</code> directly, deletion protection is disabled by default (when you create a new production cluster in the console, deletion protection is enabled by default). You can only delete a DB cluster if its <code>DeletionProtection</code> field is set to <code>false</code>.</p>",
      "method": "get",
      "endpoint": "#Action=CreateDBCluster",
      "responses": [
        {
          "uuid": "6c277880-5c87-4de0-bb1e-87030903e07e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "57661da5-0e63-4fe9-8437-ed3ed562043f",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a5b6f44c-adfb-4c27-85a7-0c594701914a",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InsufficientStorageClusterCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ede12707-6908-4ba1-af2b-8240d050558d",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBClusterQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1f24b071-5bcb-4b51-bc7f-1fc178b2f199",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "StorageQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9aa8050f-43c9-432a-8a27-763d2a647356",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dd19d8d7-da60-4bea-acb2-497af217b720",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidVPCNetworkStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9a8f95fd-7d42-4867-adc2-2babc4fe9912",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3363cf99-3364-41e0-8a41-962ac4d92c5d",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidDBSubnetGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0c33216d-b245-497d-9165-3d79ef649b24",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e7eef7bb-02c2-4675-b721-818f9abde20d",
          "body": "",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7fd72f61-b0f9-44b3-8d9b-a3e3250c6db5",
          "body": "",
          "latency": 0,
          "statusCode": 490,
          "label": "DBClusterParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "316a1061-f1bc-42a3-ac5a-122814c8265c",
          "body": "",
          "latency": 0,
          "statusCode": 491,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "311f2842-b8dd-4069-84f2-e1445185fac6",
          "body": "",
          "latency": 0,
          "statusCode": 492,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a541c3a7-79d7-4204-84c8-468fbf121b38",
          "body": "",
          "latency": 0,
          "statusCode": 493,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "041d9808-b4c3-4c20-9c8a-69e6b6e0a98b",
          "body": "",
          "latency": 0,
          "statusCode": 494,
          "label": "DBSubnetGroupDoesNotCoverEnoughAZs",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "364453ce-4db7-4117-aa4b-5a6f66b52113",
      "documentation": "<p>Creates a new Amazon Neptune DB cluster.</p> <p>You can use the <code>ReplicationSourceIdentifier</code> parameter to create the DB cluster as a Read Replica of another DB cluster or Amazon Neptune DB instance.</p> <p>Note that when you create a new cluster using <code>CreateDBCluster</code> directly, deletion protection is disabled by default (when you create a new production cluster in the console, deletion protection is enabled by default). You can only delete a DB cluster if its <code>DeletionProtection</code> field is set to <code>false</code>.</p>",
      "method": "post",
      "endpoint": "#Action=CreateDBCluster",
      "responses": [
        {
          "uuid": "6b38dc1c-4c2b-4ff6-a986-a4ef48aa9ab9",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fb3199dd-c377-475a-9296-a0c38b0024f6",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "116f2f5a-fe19-45c8-a14a-226247539a21",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InsufficientStorageClusterCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8013d804-bd58-43a7-859b-ed6e047f5c6e",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBClusterQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ece9347a-6076-49e0-9f05-10762287a31d",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "StorageQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5f01bc04-bde8-48c2-a645-c507b8830020",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8c738b90-b1d6-49c2-89d7-0ea7549b1d28",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidVPCNetworkStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1b9bb166-7d67-4f3e-b2af-88045286621f",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "84d8d120-0687-4fb2-ace3-025de7a42097",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidDBSubnetGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "449d6095-b126-4acd-87c7-87c9f5885552",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "17bbec11-18ac-4497-afae-2597964b28aa",
          "body": "",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "30f9c1c9-8ff8-469e-87c7-bf00fa186c9c",
          "body": "",
          "latency": 0,
          "statusCode": 490,
          "label": "DBClusterParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2e521760-2ee3-4bd4-b644-6c163c8bc60c",
          "body": "",
          "latency": 0,
          "statusCode": 491,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c783446e-9563-46d5-b983-b2bd672d7646",
          "body": "",
          "latency": 0,
          "statusCode": 492,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "072275b0-445e-499a-a210-eaed9bda48bd",
          "body": "",
          "latency": 0,
          "statusCode": 493,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "18226301-852e-432b-9f3e-6318d1587e0e",
          "body": "",
          "latency": 0,
          "statusCode": 494,
          "label": "DBSubnetGroupDoesNotCoverEnoughAZs",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4605f17d-3e4e-4a3a-9707-f2094916a592",
      "documentation": "Creates a new custom endpoint and associates it with an Amazon Neptune DB cluster.",
      "method": "get",
      "endpoint": "#Action=CreateDBClusterEndpoint",
      "responses": [
        {
          "uuid": "deac2929-7fb7-472b-93d3-f88db0a40dd5",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "018059a3-90e1-4da9-8548-7cc1a8c541cb",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterEndpointQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6adf2ccc-4379-46ef-b885-ecfba3815ef1",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBClusterEndpointAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "981aa359-b3f7-400d-80ed-f665588c7241",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7181bb1e-c8a5-42df-bbe5-c540ee05a4c4",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "06eeadff-9ac2-4f6c-a138-c2d6822921e2",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "33eb7914-e0e4-485e-be85-929d1dd439f9",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "97993d7f-d3b9-4d8e-99a4-326c2f7c3d42",
      "documentation": "Creates a new custom endpoint and associates it with an Amazon Neptune DB cluster.",
      "method": "post",
      "endpoint": "#Action=CreateDBClusterEndpoint",
      "responses": [
        {
          "uuid": "e70b71bb-83df-45d9-8144-147464129748",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d0d640a4-852f-4be1-94b4-5fdc34e19a69",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterEndpointQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e9cbffdf-c34a-461a-9f44-5575c8da624f",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBClusterEndpointAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5fe0edfc-aaf7-4c2c-9f12-c9fd7f1c0dc1",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dff94e25-0f85-431e-ba3f-efc9afa78566",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "42f43407-84d5-4d42-ba0b-e420e5b4a26e",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bbac77c2-1f42-462b-a914-30892c899168",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "febda3c8-e139-411d-b886-e40ef5a6e6ac",
      "documentation": "<p>Creates a new DB cluster parameter group.</p> <p>Parameters in a DB cluster parameter group apply to all of the instances in a DB cluster.</p> <p> A DB cluster parameter group is initially created with the default parameters for the database engine used by instances in the DB cluster. To provide custom values for any of the parameters, you must modify the group after creating it using <a>ModifyDBClusterParameterGroup</a>. Once you've created a DB cluster parameter group, you need to associate it with your DB cluster using <a>ModifyDBCluster</a>. When you associate a new DB cluster parameter group with a running DB cluster, you need to reboot the DB instances in the DB cluster without failover for the new DB cluster parameter group and associated settings to take effect.</p> <important> <p>After you create a DB cluster parameter group, you should wait at least 5 minutes before creating your first DB cluster that uses that DB cluster parameter group as the default parameter group. This allows Amazon Neptune to fully complete the create action before the DB cluster parameter group is used as the default for a new DB cluster. This is especially important for parameters that are critical when creating the default database for a DB cluster, such as the character set for the default database defined by the <code>character_set_database</code> parameter. You can use the <i>Parameter Groups</i> option of the <a href=\"https://console.aws.amazon.com/rds/\">Amazon Neptune console</a> or the <a>DescribeDBClusterParameters</a> command to verify that your DB cluster parameter group has been created or modified.</p> </important>",
      "method": "get",
      "endpoint": "#Action=CreateDBClusterParameterGroup",
      "responses": [
        {
          "uuid": "4b821277-34f0-4065-a072-cfe2182c2d5f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3107188c-bea5-4bce-bbe1-26888c9c6352",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBParameterGroupQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "50b58fb5-f5fe-464f-ac3e-93843a464637",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBParameterGroupAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e423c411-2a4e-48e4-b6da-5ef25a4973d0",
      "documentation": "<p>Creates a new DB cluster parameter group.</p> <p>Parameters in a DB cluster parameter group apply to all of the instances in a DB cluster.</p> <p> A DB cluster parameter group is initially created with the default parameters for the database engine used by instances in the DB cluster. To provide custom values for any of the parameters, you must modify the group after creating it using <a>ModifyDBClusterParameterGroup</a>. Once you've created a DB cluster parameter group, you need to associate it with your DB cluster using <a>ModifyDBCluster</a>. When you associate a new DB cluster parameter group with a running DB cluster, you need to reboot the DB instances in the DB cluster without failover for the new DB cluster parameter group and associated settings to take effect.</p> <important> <p>After you create a DB cluster parameter group, you should wait at least 5 minutes before creating your first DB cluster that uses that DB cluster parameter group as the default parameter group. This allows Amazon Neptune to fully complete the create action before the DB cluster parameter group is used as the default for a new DB cluster. This is especially important for parameters that are critical when creating the default database for a DB cluster, such as the character set for the default database defined by the <code>character_set_database</code> parameter. You can use the <i>Parameter Groups</i> option of the <a href=\"https://console.aws.amazon.com/rds/\">Amazon Neptune console</a> or the <a>DescribeDBClusterParameters</a> command to verify that your DB cluster parameter group has been created or modified.</p> </important>",
      "method": "post",
      "endpoint": "#Action=CreateDBClusterParameterGroup",
      "responses": [
        {
          "uuid": "0ba9dc25-f153-466b-b4cd-f70865090e25",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d04c01e1-5ef6-40b1-9765-5ae5d4ea6110",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBParameterGroupQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5b6100b6-e01f-4872-8533-39c278a0e97d",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBParameterGroupAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a319f5ae-cc62-41b3-b9ee-af514a382562",
      "documentation": "Creates a snapshot of a DB cluster.",
      "method": "get",
      "endpoint": "#Action=CreateDBClusterSnapshot",
      "responses": [
        {
          "uuid": "71afba7b-a242-4ea2-b917-1d682a681f78",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "29f162fb-60e1-4f05-9a2d-b516ae64d727",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterSnapshotAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7f18b916-1562-40d6-a10e-11ced8c04a6e",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c34b2bde-45c6-4e68-9b27-f328eea946a5",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b38f55b8-16cd-4ac3-bc9a-f1ea81c83440",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "SnapshotQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0f0f03de-2d8b-4ff3-94f6-5a13990c0a4d",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidDBClusterSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fae60bab-f615-49cb-9b17-e54a77e05f44",
      "documentation": "Creates a snapshot of a DB cluster.",
      "method": "post",
      "endpoint": "#Action=CreateDBClusterSnapshot",
      "responses": [
        {
          "uuid": "88d763e2-e63a-40a5-861a-943c7a5a9424",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1244613b-01da-43dc-91f4-cd9fdce8db6f",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterSnapshotAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b25cb6ee-e598-4bf2-ac2f-37576bd4e1ba",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1b9fa920-bb3d-4da3-9f3c-09bc4a35a3e1",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7d07452c-0c20-4bfd-8011-ba9377e71a50",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "SnapshotQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aed59e8e-bf6e-41af-bce8-72b76aa97339",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidDBClusterSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d55a91b7-8397-4e50-9bf2-8e4fdb8b7960",
      "documentation": "Creates a new DB instance.",
      "method": "get",
      "endpoint": "#Action=CreateDBInstance",
      "responses": [
        {
          "uuid": "aee22f0f-81d2-444d-9d94-b3fe303a067b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b6782989-9514-449a-82d3-c0cac823e42d",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0d0a5cce-8d1c-4d26-9fde-729939cc8091",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InsufficientDBInstanceCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9f05529f-db17-488f-8aed-e2a6c9050e17",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "10539ff0-d638-4d7c-b83f-a2bf422aed7d",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBSecurityGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cf912856-6af8-436c-8a1c-220727906cc2",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InstanceQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f797cbd7-8124-44f8-b193-6a2c923f38db",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "StorageQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "49c4af0e-92be-49a6-aa2e-419e81f490eb",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a31d9983-d197-4162-865d-c757a4952cc1",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "DBSubnetGroupDoesNotCoverEnoughAZs",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2de433a2-5a6c-47b9-8f3a-7aaa2835c068",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c5e2b88c-8be6-4628-8d52-4ff2791fb8ae",
          "body": "",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "079f44b9-2d92-4b09-8e70-d01248c85710",
          "body": "",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidVPCNetworkStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b09259d0-7535-48b0-ad9e-93df6eff19bc",
          "body": "",
          "latency": 0,
          "statusCode": 491,
          "label": "ProvisionedIopsNotAvailableInAZFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bbc3b089-3acf-41b0-8390-aac7a52ccf73",
          "body": "",
          "latency": 0,
          "statusCode": 492,
          "label": "OptionGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bb5b15af-d8ec-491f-b20f-6f34931c5f5f",
          "body": "",
          "latency": 0,
          "statusCode": 493,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ef691cc5-28e1-482d-8b5e-6ef71de75078",
          "body": "",
          "latency": 0,
          "statusCode": 494,
          "label": "StorageTypeNotSupportedFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "149b8a4d-d264-4677-bfdd-93d4909b687f",
          "body": "",
          "latency": 0,
          "statusCode": 495,
          "label": "AuthorizationNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4d121a47-365d-45b1-89f4-94012b1cfb32",
          "body": "",
          "latency": 0,
          "statusCode": 496,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7cf67b29-5472-4ffe-a41f-83f8557478b8",
          "body": "",
          "latency": 0,
          "statusCode": 497,
          "label": "DomainNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a056929d-15a5-420d-b818-3c7972b66fc5",
      "documentation": "Creates a new DB instance.",
      "method": "post",
      "endpoint": "#Action=CreateDBInstance",
      "responses": [
        {
          "uuid": "53d6b968-c004-46eb-aa42-e692fab98f2d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c5a72d06-344c-4e37-bc74-9eb9e59741cf",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5ee9960d-262c-42c8-9b79-b7cdc254afaf",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InsufficientDBInstanceCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "63cb0b09-ccf7-4942-a75f-4076d2abd785",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c3ef5a06-1a6e-47b3-bb06-41a034371bdd",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBSecurityGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "31437054-10a3-4946-b78f-aab0e888c1d9",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InstanceQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "751338d4-9579-4528-b405-b0e2ea8ac5f9",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "StorageQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "74215d7c-3a32-4a68-a6e5-652d42fe6285",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fa495a2e-c510-4efd-8ae5-b5f7b2abcee8",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "DBSubnetGroupDoesNotCoverEnoughAZs",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "479d3d5f-30cd-48e1-8322-b4696ec902ae",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "61b40005-df6c-4b92-a1fd-bd47466350a0",
          "body": "",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "19177ce6-2b89-4d59-b1f1-b8c0d15476f3",
          "body": "",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidVPCNetworkStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5e119727-0e79-4828-a25f-46ce896aaa4d",
          "body": "",
          "latency": 0,
          "statusCode": 491,
          "label": "ProvisionedIopsNotAvailableInAZFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4862eddf-85da-4d71-bb5b-936aca48b19f",
          "body": "",
          "latency": 0,
          "statusCode": 492,
          "label": "OptionGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "809fb723-af36-41ca-a51a-f117667cbbb2",
          "body": "",
          "latency": 0,
          "statusCode": 493,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d2172648-392c-4107-b9ed-8649ca547d94",
          "body": "",
          "latency": 0,
          "statusCode": 494,
          "label": "StorageTypeNotSupportedFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "29bcc056-d179-4642-bafb-7495e77543c6",
          "body": "",
          "latency": 0,
          "statusCode": 495,
          "label": "AuthorizationNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2ad51d37-7709-4c21-aebc-44091912dad0",
          "body": "",
          "latency": 0,
          "statusCode": 496,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "66127e15-c3e1-42a0-a735-9a72c93f08e3",
          "body": "",
          "latency": 0,
          "statusCode": 497,
          "label": "DomainNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c8f7cb3c-acfd-4331-abc2-8ec41de42f97",
      "documentation": "<p>Creates a new DB parameter group.</p> <p>A DB parameter group is initially created with the default parameters for the database engine used by the DB instance. To provide custom values for any of the parameters, you must modify the group after creating it using <i>ModifyDBParameterGroup</i>. Once you've created a DB parameter group, you need to associate it with your DB instance using <i>ModifyDBInstance</i>. When you associate a new DB parameter group with a running DB instance, you need to reboot the DB instance without failover for the new DB parameter group and associated settings to take effect.</p> <important> <p>After you create a DB parameter group, you should wait at least 5 minutes before creating your first DB instance that uses that DB parameter group as the default parameter group. This allows Amazon Neptune to fully complete the create action before the parameter group is used as the default for a new DB instance. This is especially important for parameters that are critical when creating the default database for a DB instance, such as the character set for the default database defined by the <code>character_set_database</code> parameter. You can use the <i>Parameter Groups</i> option of the Amazon Neptune console or the <i>DescribeDBParameters</i> command to verify that your DB parameter group has been created or modified.</p> </important>",
      "method": "get",
      "endpoint": "#Action=CreateDBParameterGroup",
      "responses": [
        {
          "uuid": "dcd4d95b-1ea7-4fff-82bf-fd87f650ddc8",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bcbb4ef8-104b-4174-b2c5-d6b0e1023270",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBParameterGroupQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b144dcb5-8325-4e4b-bcc2-8edf0d98ad75",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBParameterGroupAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7bdd3cd8-9a7f-4837-a05b-7e09cde20fd6",
      "documentation": "<p>Creates a new DB parameter group.</p> <p>A DB parameter group is initially created with the default parameters for the database engine used by the DB instance. To provide custom values for any of the parameters, you must modify the group after creating it using <i>ModifyDBParameterGroup</i>. Once you've created a DB parameter group, you need to associate it with your DB instance using <i>ModifyDBInstance</i>. When you associate a new DB parameter group with a running DB instance, you need to reboot the DB instance without failover for the new DB parameter group and associated settings to take effect.</p> <important> <p>After you create a DB parameter group, you should wait at least 5 minutes before creating your first DB instance that uses that DB parameter group as the default parameter group. This allows Amazon Neptune to fully complete the create action before the parameter group is used as the default for a new DB instance. This is especially important for parameters that are critical when creating the default database for a DB instance, such as the character set for the default database defined by the <code>character_set_database</code> parameter. You can use the <i>Parameter Groups</i> option of the Amazon Neptune console or the <i>DescribeDBParameters</i> command to verify that your DB parameter group has been created or modified.</p> </important>",
      "method": "post",
      "endpoint": "#Action=CreateDBParameterGroup",
      "responses": [
        {
          "uuid": "fe591cc6-e272-44f7-b8d9-fb0da6f1c89e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "98677e21-fa45-4f35-afeb-4d52f7b56bea",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBParameterGroupQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "db5b9d43-ccd7-42e4-96ed-993dba58ea4a",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBParameterGroupAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "36cdab2a-2289-4480-be28-dfaf431eefda",
      "documentation": "Creates a new DB subnet group. DB subnet groups must contain at least one subnet in at least two AZs in the Amazon Region.",
      "method": "get",
      "endpoint": "#Action=CreateDBSubnetGroup",
      "responses": [
        {
          "uuid": "431de1d1-828a-40be-8aa4-3a5a3a127dc7",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dd63f614-1ded-4aab-97ae-4845bcf08e35",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBSubnetGroupAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7e086ddd-9fd7-4f94-ac70-4cfff5982eec",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBSubnetGroupQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2690ab81-3085-4ea3-85bb-aa80de9b8da9",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBSubnetQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0e3c7def-c2dd-4439-b7a8-0ed869ab270f",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBSubnetGroupDoesNotCoverEnoughAZs",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0a74e9cc-cf79-4f1d-8132-eb1dbfce8ec9",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fa7e2ab8-0311-493d-9480-efe01a12024f",
      "documentation": "Creates a new DB subnet group. DB subnet groups must contain at least one subnet in at least two AZs in the Amazon Region.",
      "method": "post",
      "endpoint": "#Action=CreateDBSubnetGroup",
      "responses": [
        {
          "uuid": "081a8b3f-ace5-413f-b038-1b3db9ff3f9c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4c2d6f18-b2c4-4147-b586-7a7a97b275bf",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBSubnetGroupAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3498a8a7-3274-4fbf-8505-a48000ce7147",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBSubnetGroupQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a4b85a0f-4f46-4588-816a-614d4ed3882f",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBSubnetQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bb11f8dd-47f8-4c0f-b586-0978cd0d8a66",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBSubnetGroupDoesNotCoverEnoughAZs",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e87f4902-4e96-44d4-8d87-e117f57cac12",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3c75d01d-2c7b-40c9-bb12-8d52d1107dbe",
      "documentation": "<p>Creates an event notification subscription. This action requires a topic ARN (Amazon Resource Name) created by either the Neptune console, the SNS console, or the SNS API. To obtain an ARN with SNS, you must create a topic in Amazon SNS and subscribe to the topic. The ARN is displayed in the SNS console.</p> <p>You can specify the type of source (SourceType) you want to be notified of, provide a list of Neptune sources (SourceIds) that triggers the events, and provide a list of event categories (EventCategories) for events you want to be notified of. For example, you can specify SourceType = db-instance, SourceIds = mydbinstance1, mydbinstance2 and EventCategories = Availability, Backup.</p> <p>If you specify both the SourceType and SourceIds, such as SourceType = db-instance and SourceIdentifier = myDBInstance1, you are notified of all the db-instance events for the specified source. If you specify a SourceType but do not specify a SourceIdentifier, you receive notice of the events for that source type for all your Neptune sources. If you do not specify either the SourceType nor the SourceIdentifier, you are notified of events generated from all Neptune sources belonging to your customer account.</p>",
      "method": "get",
      "endpoint": "#Action=CreateEventSubscription",
      "responses": [
        {
          "uuid": "155d6b81-bf13-4ae4-bdcd-4e64f0d075e7",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "db726bfb-4272-47dc-a443-010a09bc4b8e",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "EventSubscriptionQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e8efd129-aa91-4125-aa76-0875389d1672",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "SubscriptionAlreadyExistFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d4e2775d-1deb-4767-b5eb-f5a802e8ab6c",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "SNSInvalidTopicFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f5eefa4c-5a54-498d-aa3e-436625caeca2",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "SNSNoAuthorizationFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b0aa042d-74a5-4eea-94b5-faee044d3779",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "SNSTopicArnNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3f1f5344-7dc1-401f-8f00-a4d3a7a10f71",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "SubscriptionCategoryNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b5a4a52c-2641-4c64-8f10-2c505eca8838",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "SourceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0eda23ca-a364-464d-bb11-fbb8269da4cc",
      "documentation": "<p>Creates an event notification subscription. This action requires a topic ARN (Amazon Resource Name) created by either the Neptune console, the SNS console, or the SNS API. To obtain an ARN with SNS, you must create a topic in Amazon SNS and subscribe to the topic. The ARN is displayed in the SNS console.</p> <p>You can specify the type of source (SourceType) you want to be notified of, provide a list of Neptune sources (SourceIds) that triggers the events, and provide a list of event categories (EventCategories) for events you want to be notified of. For example, you can specify SourceType = db-instance, SourceIds = mydbinstance1, mydbinstance2 and EventCategories = Availability, Backup.</p> <p>If you specify both the SourceType and SourceIds, such as SourceType = db-instance and SourceIdentifier = myDBInstance1, you are notified of all the db-instance events for the specified source. If you specify a SourceType but do not specify a SourceIdentifier, you receive notice of the events for that source type for all your Neptune sources. If you do not specify either the SourceType nor the SourceIdentifier, you are notified of events generated from all Neptune sources belonging to your customer account.</p>",
      "method": "post",
      "endpoint": "#Action=CreateEventSubscription",
      "responses": [
        {
          "uuid": "ccd8c928-52ea-4303-9404-750eadff95e3",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "41334df2-d12e-43b6-aabb-66b6b7cabb76",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "EventSubscriptionQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f06caba1-e94e-4469-843f-b471889ea5e9",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "SubscriptionAlreadyExistFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "03e119f0-fa4d-4c6d-870e-5bc03672bf85",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "SNSInvalidTopicFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2ac577d6-f5f9-41c3-9cea-35cfee8f820d",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "SNSNoAuthorizationFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "811df98e-18a3-4cb9-a18e-b57f9103e785",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "SNSTopicArnNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d6e14a7e-4d0c-485b-8f5b-894867f3bb3a",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "SubscriptionCategoryNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6c9200bd-e899-4929-a092-f2f8fecd577a",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "SourceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "75896f41-6589-4dd3-9b34-3ee43636673b",
      "documentation": "<p>The DeleteDBCluster action deletes a previously provisioned DB cluster. When you delete a DB cluster, all automated backups for that DB cluster are deleted and can't be recovered. Manual DB cluster snapshots of the specified DB cluster are not deleted.</p> <p>Note that the DB Cluster cannot be deleted if deletion protection is enabled. To delete it, you must first set its <code>DeletionProtection</code> field to <code>False</code>.</p>",
      "method": "get",
      "endpoint": "#Action=DeleteDBCluster",
      "responses": [
        {
          "uuid": "8c2a5560-e6e1-40ac-a10d-8502fb6fff54",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "45eaa492-9e9a-4117-8e16-f68524d741a8",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "933ecfc5-20f8-4a8f-80a2-385b1a22a463",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6bec5a63-2c54-4153-a73f-b4c994d3e8ea",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBClusterSnapshotAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0a190fb6-75b5-4998-8cd2-4c1c4dad39ed",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "SnapshotQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1e686212-973a-4dc2-9000-48d0e202970f",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidDBClusterSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8bfbc689-1641-4875-9db1-c711505f0ac9",
      "documentation": "<p>The DeleteDBCluster action deletes a previously provisioned DB cluster. When you delete a DB cluster, all automated backups for that DB cluster are deleted and can't be recovered. Manual DB cluster snapshots of the specified DB cluster are not deleted.</p> <p>Note that the DB Cluster cannot be deleted if deletion protection is enabled. To delete it, you must first set its <code>DeletionProtection</code> field to <code>False</code>.</p>",
      "method": "post",
      "endpoint": "#Action=DeleteDBCluster",
      "responses": [
        {
          "uuid": "8362778c-43f3-4380-98d5-c974e4bca1ed",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3c93fdcc-6415-4ff3-b141-5af826d3e014",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "24576d48-5003-4001-9df6-3023bb60bdd9",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f6733a01-b74b-4d89-b874-51ff9c547599",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBClusterSnapshotAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2f96c874-cc0c-40f1-9ab3-aaccd13e74ad",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "SnapshotQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fcc48f66-03e8-4399-8f70-f52f48dfaa53",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidDBClusterSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ba740d7c-e65f-4e83-9ac2-fcdaa666ceb8",
      "documentation": "Deletes a custom endpoint and removes it from an Amazon Neptune DB cluster.",
      "method": "get",
      "endpoint": "#Action=DeleteDBClusterEndpoint",
      "responses": [
        {
          "uuid": "2ef3e269-d2d7-4eb3-a095-a3e16f9f8e67",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c72231de-a200-4281-93c3-56a3f1b24e32",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBClusterEndpointStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ea7a4f0f-aff5-40c1-b695-4ee49d1775ed",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBClusterEndpointNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "41542587-aaa2-4839-9f28-25941934c458",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9613241a-5bc6-440e-b298-9f4bcbe59ad3",
      "documentation": "Deletes a custom endpoint and removes it from an Amazon Neptune DB cluster.",
      "method": "post",
      "endpoint": "#Action=DeleteDBClusterEndpoint",
      "responses": [
        {
          "uuid": "3cd6b76b-0a52-4d6b-9914-aba839a5f2e2",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2127b761-12bc-47d1-be35-d6d07234f15f",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBClusterEndpointStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d00e633c-147b-4fa9-988b-330f4973b4a3",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBClusterEndpointNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "65cd8d43-8f8f-441e-88c0-4b24111a710e",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7d860976-13be-4222-a249-433a4fc76fe6",
      "documentation": "Deletes a specified DB cluster parameter group. The DB cluster parameter group to be deleted can't be associated with any DB clusters.",
      "method": "get",
      "endpoint": "#Action=DeleteDBClusterParameterGroup",
      "responses": [
        {
          "uuid": "abb8b987-d027-4eb9-828c-b44ef81ce751",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fb47c784-8d38-41fe-9981-7175ed200fa1",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBParameterGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ff3e506a-a2a0-4ab0-bafd-0e42d41d6fda",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "94b5bfb8-e3bb-4622-b105-347338c32340",
      "documentation": "Deletes a specified DB cluster parameter group. The DB cluster parameter group to be deleted can't be associated with any DB clusters.",
      "method": "post",
      "endpoint": "#Action=DeleteDBClusterParameterGroup",
      "responses": [
        {
          "uuid": "7dae4eb6-46bb-46ed-8b74-ca084f3d9fc5",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2dd56680-4e36-4180-8faa-6da39f3f6c16",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBParameterGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f3d8556f-6421-4fda-8597-0b9ee2c37cf4",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bd6dcdae-8cd4-4474-83da-a536419b5bd2",
      "documentation": "<p>Deletes a DB cluster snapshot. If the snapshot is being copied, the copy operation is terminated.</p> <note> <p>The DB cluster snapshot must be in the <code>available</code> state to be deleted.</p> </note>",
      "method": "get",
      "endpoint": "#Action=DeleteDBClusterSnapshot",
      "responses": [
        {
          "uuid": "8d258d9c-1e8e-449a-b6e8-9dc6590cf07d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6ae07b6a-f312-43d9-b87a-aa5cb4701175",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBClusterSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "04ce6acb-bfd2-41d9-b361-3eaa80a03e2f",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBClusterSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dcd5e952-965b-440c-b8b7-779e043887af",
      "documentation": "<p>Deletes a DB cluster snapshot. If the snapshot is being copied, the copy operation is terminated.</p> <note> <p>The DB cluster snapshot must be in the <code>available</code> state to be deleted.</p> </note>",
      "method": "post",
      "endpoint": "#Action=DeleteDBClusterSnapshot",
      "responses": [
        {
          "uuid": "f98e48e4-0234-4bd6-b9f1-12fd69ae948c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ca3db9e2-1b1e-4244-b096-26fa2302192f",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBClusterSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bc5c3f07-d575-456a-ad6e-d349e668c91e",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBClusterSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7db93645-ee8c-4ac4-86e6-d0a9f5e707e1",
      "documentation": "<p>The DeleteDBInstance action deletes a previously provisioned DB instance. When you delete a DB instance, all automated backups for that instance are deleted and can't be recovered. Manual DB snapshots of the DB instance to be deleted by <code>DeleteDBInstance</code> are not deleted.</p> <p> If you request a final DB snapshot the status of the Amazon Neptune DB instance is <code>deleting</code> until the DB snapshot is created. The API action <code>DescribeDBInstance</code> is used to monitor the status of this operation. The action can't be canceled or reverted once submitted.</p> <p>Note that when a DB instance is in a failure state and has a status of <code>failed</code>, <code>incompatible-restore</code>, or <code>incompatible-network</code>, you can only delete it when the <code>SkipFinalSnapshot</code> parameter is set to <code>true</code>.</p> <p>You can't delete a DB instance if it is the only instance in the DB cluster, or if it has deletion protection enabled.</p>",
      "method": "get",
      "endpoint": "#Action=DeleteDBInstance",
      "responses": [
        {
          "uuid": "9dac2b60-b54e-4110-8d4b-7f8495cf94b6",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4dfe9480-d1ff-4c02-b1d0-a196de7c25c1",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "74360f40-59b7-4fff-bb4c-6bf721d90acd",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "704f1293-c8da-4665-a1a0-23110c201834",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBSnapshotAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6100ae30-c16e-4e13-b643-986a40f72d33",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "SnapshotQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2efd023b-2d84-4495-8c23-346bd28ec816",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "13dc837b-cb3f-447d-a269-6b2793fde9d4",
      "documentation": "<p>The DeleteDBInstance action deletes a previously provisioned DB instance. When you delete a DB instance, all automated backups for that instance are deleted and can't be recovered. Manual DB snapshots of the DB instance to be deleted by <code>DeleteDBInstance</code> are not deleted.</p> <p> If you request a final DB snapshot the status of the Amazon Neptune DB instance is <code>deleting</code> until the DB snapshot is created. The API action <code>DescribeDBInstance</code> is used to monitor the status of this operation. The action can't be canceled or reverted once submitted.</p> <p>Note that when a DB instance is in a failure state and has a status of <code>failed</code>, <code>incompatible-restore</code>, or <code>incompatible-network</code>, you can only delete it when the <code>SkipFinalSnapshot</code> parameter is set to <code>true</code>.</p> <p>You can't delete a DB instance if it is the only instance in the DB cluster, or if it has deletion protection enabled.</p>",
      "method": "post",
      "endpoint": "#Action=DeleteDBInstance",
      "responses": [
        {
          "uuid": "c15160ce-6797-496d-b6c5-7c937c238273",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "60e5ca86-d365-4cfd-978e-5663b067e76b",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "986e175e-5919-4485-b014-d22aa0f9cd3b",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2a0b11d5-f227-4385-8096-4e1036667902",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBSnapshotAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "de92d751-d4e9-43dc-a695-7e3ae6321112",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "SnapshotQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "851e8cb9-9d28-4f7f-be5e-333d82236d01",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5c0f3b14-0b9e-4ada-b607-2f67fd97ba71",
      "documentation": "Deletes a specified DBParameterGroup. The DBParameterGroup to be deleted can't be associated with any DB instances.",
      "method": "get",
      "endpoint": "#Action=DeleteDBParameterGroup",
      "responses": [
        {
          "uuid": "6ee776c3-08a7-4287-91c5-56b6ec5236aa",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ca7f8034-f9a7-46d0-812c-0f5af6a59e31",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBParameterGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e1eab065-ffd1-46c3-8bfb-8016f0a2f636",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e1be203f-96ed-4ccb-bd75-b55370449805",
      "documentation": "Deletes a specified DBParameterGroup. The DBParameterGroup to be deleted can't be associated with any DB instances.",
      "method": "post",
      "endpoint": "#Action=DeleteDBParameterGroup",
      "responses": [
        {
          "uuid": "f98069d6-12d6-4de9-a41a-706fe8ae2869",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3064b88c-c481-4143-9ad5-e1885dc4f22a",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBParameterGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "365a32bc-451f-4f37-a947-7737d7a63cd9",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4873ee49-24e4-45bd-bbfa-3a0009e8c0c9",
      "documentation": "<p>Deletes a DB subnet group.</p> <note> <p>The specified database subnet group must not be associated with any DB instances.</p> </note>",
      "method": "get",
      "endpoint": "#Action=DeleteDBSubnetGroup",
      "responses": [
        {
          "uuid": "606b4d15-fc8f-4bbd-94de-bc7b726d22ec",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "93241581-daae-4940-8b58-d24aac6bc0bf",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBSubnetGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ac0a25f7-c2f6-44fa-8aa5-a8bd8643f90e",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBSubnetStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0f217911-5636-4358-98e6-4e3c065ca43a",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "edebcb9d-e103-4cd6-854e-19649012b247",
      "documentation": "<p>Deletes a DB subnet group.</p> <note> <p>The specified database subnet group must not be associated with any DB instances.</p> </note>",
      "method": "post",
      "endpoint": "#Action=DeleteDBSubnetGroup",
      "responses": [
        {
          "uuid": "12ec1b0b-9abf-4946-bee5-38cfbca5122d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a22ab8d7-1ba0-4058-8d2f-b92c41bdeef7",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBSubnetGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c477e48e-6c07-42e3-8333-a8c776c8075a",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBSubnetStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3d5aa5b3-6f59-44f3-bd5f-38b8d1ea0fd0",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "699507d1-06b6-4dae-949f-73981da3a2cb",
      "documentation": "Deletes an event notification subscription.",
      "method": "get",
      "endpoint": "#Action=DeleteEventSubscription",
      "responses": [
        {
          "uuid": "2e406ce2-b3b8-473f-89ef-d846ccee4113",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "478a669d-63aa-401a-96ee-6884d87a4749",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "SubscriptionNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "22b6c5a6-591a-46bc-a5e3-2bde4112f16d",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidEventSubscriptionStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "36c54261-e79b-48b0-af95-6911a5863188",
      "documentation": "Deletes an event notification subscription.",
      "method": "post",
      "endpoint": "#Action=DeleteEventSubscription",
      "responses": [
        {
          "uuid": "0e7a6204-b701-4390-a8e7-5170936bbb5e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7c913958-eff8-46fe-bbea-4a9499e3a2da",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "SubscriptionNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fa88d330-3f64-4bda-854d-aadc970adace",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidEventSubscriptionStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1d47b9af-f693-4dfb-9345-a61f8d95b2e4",
      "documentation": "<p>Returns information about endpoints for an Amazon Neptune DB cluster.</p> <note> <p>This operation can also return information for Amazon RDS clusters and Amazon DocDB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=DescribeDBClusterEndpoints",
      "responses": [
        {
          "uuid": "db62665e-5ace-48ce-826b-fdea0b20c40d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9039eaa9-58b8-4aa3-9575-6442cb50d987",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "21507e43-4300-4c49-a97d-934cff12f397",
      "documentation": "<p>Returns information about endpoints for an Amazon Neptune DB cluster.</p> <note> <p>This operation can also return information for Amazon RDS clusters and Amazon DocDB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=DescribeDBClusterEndpoints",
      "responses": [
        {
          "uuid": "abebc857-65e3-4a11-9ae4-4ea04c504af4",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3529f50d-f4ae-4482-aa8e-d6269e33ca34",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "115a3fdc-e4c4-48de-a513-6070eb5a543c",
      "documentation": " Returns a list of <code>DBClusterParameterGroup</code> descriptions. If a <code>DBClusterParameterGroupName</code> parameter is specified, the list will contain only the description of the specified DB cluster parameter group.",
      "method": "get",
      "endpoint": "#Action=DescribeDBClusterParameterGroups",
      "responses": [
        {
          "uuid": "99597d18-bf70-4514-938f-deb91d4149e8",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3ec119e1-3c95-4735-b7a8-c28d40e48336",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "be3e02d6-51ff-484f-8f04-02ffe0ec531c",
      "documentation": " Returns a list of <code>DBClusterParameterGroup</code> descriptions. If a <code>DBClusterParameterGroupName</code> parameter is specified, the list will contain only the description of the specified DB cluster parameter group.",
      "method": "post",
      "endpoint": "#Action=DescribeDBClusterParameterGroups",
      "responses": [
        {
          "uuid": "52566ad0-2c2b-467f-9735-2fd359c9ff91",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "be7a737f-87fb-46ea-bf73-2f937d254857",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bacd78a9-1bf9-4a0a-96c6-6274619a72a4",
      "documentation": "Returns the detailed parameter list for a particular DB cluster parameter group.",
      "method": "get",
      "endpoint": "#Action=DescribeDBClusterParameters",
      "responses": [
        {
          "uuid": "05c297d4-dd4b-4a0e-bbf7-708b3f36cffc",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bd800c41-2645-4d11-a12a-0dae97e975fd",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a886e980-fb56-41f6-babb-df3893055f0d",
      "documentation": "Returns the detailed parameter list for a particular DB cluster parameter group.",
      "method": "post",
      "endpoint": "#Action=DescribeDBClusterParameters",
      "responses": [
        {
          "uuid": "c23d105e-393e-4fbb-95b5-33a42038bd38",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f3189271-69f0-42c8-9c3c-7f34717527bf",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5ec5559b-c5ad-4825-9a52-78f996821583",
      "documentation": "<p>Returns a list of DB cluster snapshot attribute names and values for a manual DB cluster snapshot.</p> <p>When sharing snapshots with other Amazon accounts, <code>DescribeDBClusterSnapshotAttributes</code> returns the <code>restore</code> attribute and a list of IDs for the Amazon accounts that are authorized to copy or restore the manual DB cluster snapshot. If <code>all</code> is included in the list of values for the <code>restore</code> attribute, then the manual DB cluster snapshot is public and can be copied or restored by all Amazon accounts.</p> <p>To add or remove access for an Amazon account to copy or restore a manual DB cluster snapshot, or to make the manual DB cluster snapshot public or private, use the <a>ModifyDBClusterSnapshotAttribute</a> API action.</p>",
      "method": "get",
      "endpoint": "#Action=DescribeDBClusterSnapshotAttributes",
      "responses": [
        {
          "uuid": "f78017db-a1c2-4433-b4df-5ea33438ad4f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d973eb5f-91e1-45b7-bf65-08573d1583f6",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "77f29f24-98f7-44e5-9c87-80622ec863c3",
      "documentation": "<p>Returns a list of DB cluster snapshot attribute names and values for a manual DB cluster snapshot.</p> <p>When sharing snapshots with other Amazon accounts, <code>DescribeDBClusterSnapshotAttributes</code> returns the <code>restore</code> attribute and a list of IDs for the Amazon accounts that are authorized to copy or restore the manual DB cluster snapshot. If <code>all</code> is included in the list of values for the <code>restore</code> attribute, then the manual DB cluster snapshot is public and can be copied or restored by all Amazon accounts.</p> <p>To add or remove access for an Amazon account to copy or restore a manual DB cluster snapshot, or to make the manual DB cluster snapshot public or private, use the <a>ModifyDBClusterSnapshotAttribute</a> API action.</p>",
      "method": "post",
      "endpoint": "#Action=DescribeDBClusterSnapshotAttributes",
      "responses": [
        {
          "uuid": "a016dd4d-df69-41b6-ab3e-5e488f5136ed",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0317b633-c648-4c5d-a993-f410de2c19c7",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ea3d8735-462c-4ece-84d5-439df944a695",
      "documentation": "Returns information about DB cluster snapshots. This API action supports pagination.",
      "method": "get",
      "endpoint": "#Action=DescribeDBClusterSnapshots",
      "responses": [
        {
          "uuid": "1551915c-4a1e-4ffc-9924-3b3ae4711e97",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "99727eaa-1c92-45bc-b5ba-052c7f82a900",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b8f5a523-5c78-4dec-816b-dcbd0e7ce8bb",
      "documentation": "Returns information about DB cluster snapshots. This API action supports pagination.",
      "method": "post",
      "endpoint": "#Action=DescribeDBClusterSnapshots",
      "responses": [
        {
          "uuid": "5fe00e04-9725-4f4c-84fa-fde03b43e2b4",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c6151166-5c4c-4620-a49a-cf3ae0a03a1f",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dd77ee82-97c2-4853-b7ef-965453a17ef5",
      "documentation": "<p>Returns information about provisioned DB clusters, and supports pagination.</p> <note> <p>This operation can also return information for Amazon RDS clusters and Amazon DocDB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=DescribeDBClusters",
      "responses": [
        {
          "uuid": "508c38ed-f7f4-4e0b-886b-95b2bdcc8b00",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "89dafeab-7bf0-4013-bd57-3969f7657afe",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "eaecba94-28bf-491e-b05a-4d2caafdb7a9",
      "documentation": "<p>Returns information about provisioned DB clusters, and supports pagination.</p> <note> <p>This operation can also return information for Amazon RDS clusters and Amazon DocDB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=DescribeDBClusters",
      "responses": [
        {
          "uuid": "3ff20988-47a7-44b9-a469-df894cc68051",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "325329d5-6cf8-4c92-98db-9c51c9b977c7",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dbc45516-af27-4dcf-9b34-0729c2f0eef5",
      "documentation": "Returns a list of the available DB engines.",
      "method": "get",
      "endpoint": "#Action=DescribeDBEngineVersions",
      "responses": [
        {
          "uuid": "d158de75-5f81-4acd-a98a-9e50283c4601",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d8f650ba-ed4d-4e23-ba85-ec995e9f16a6",
      "documentation": "Returns a list of the available DB engines.",
      "method": "post",
      "endpoint": "#Action=DescribeDBEngineVersions",
      "responses": [
        {
          "uuid": "53eec521-3d3a-4506-8843-ae7ec5d7d1c0",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "eb64b37b-1122-4a07-a545-443561fa486a",
      "documentation": "<p>Returns information about provisioned instances, and supports pagination.</p> <note> <p>This operation can also return information for Amazon RDS instances and Amazon DocDB instances.</p> </note>",
      "method": "get",
      "endpoint": "#Action=DescribeDBInstances",
      "responses": [
        {
          "uuid": "b7fc577f-803d-4580-a731-3db0e9156fd9",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8a8ef6c4-a7af-42bf-b6c5-0c997eda67aa",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "33d023c8-a5e1-4874-8b4e-616d1afc555f",
      "documentation": "<p>Returns information about provisioned instances, and supports pagination.</p> <note> <p>This operation can also return information for Amazon RDS instances and Amazon DocDB instances.</p> </note>",
      "method": "post",
      "endpoint": "#Action=DescribeDBInstances",
      "responses": [
        {
          "uuid": "1a6c76d0-395d-4390-8f4a-a8cf77ad9bc5",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "12ebf6f7-8592-488b-8874-a9a5b7a63471",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "efe3f778-efc7-4d71-b27d-694f0229a883",
      "documentation": "Returns a list of <code>DBParameterGroup</code> descriptions. If a <code>DBParameterGroupName</code> is specified, the list will contain only the description of the specified DB parameter group.",
      "method": "get",
      "endpoint": "#Action=DescribeDBParameterGroups",
      "responses": [
        {
          "uuid": "a58f1829-9f58-4cb9-99db-87bca106a588",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6047c8a9-727b-4cc4-b27f-29feaca38003",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2c8862c2-17a6-404e-9f95-02bd28bf69be",
      "documentation": "Returns a list of <code>DBParameterGroup</code> descriptions. If a <code>DBParameterGroupName</code> is specified, the list will contain only the description of the specified DB parameter group.",
      "method": "post",
      "endpoint": "#Action=DescribeDBParameterGroups",
      "responses": [
        {
          "uuid": "3b285332-c0c8-4b03-9979-c1d794c3a3eb",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7df6debd-9a3b-43d8-b0a3-75e80ea0153b",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "80ccc11e-c09a-436a-81b0-a8bf31e69903",
      "documentation": "Returns the detailed parameter list for a particular DB parameter group.",
      "method": "get",
      "endpoint": "#Action=DescribeDBParameters",
      "responses": [
        {
          "uuid": "79faf86c-0a40-45af-b32f-3bc2c9d7af7a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "404d1f5c-5018-471e-9641-180a46355bc5",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f89370c7-f1f6-4042-ae6c-adf2eb7d5a67",
      "documentation": "Returns the detailed parameter list for a particular DB parameter group.",
      "method": "post",
      "endpoint": "#Action=DescribeDBParameters",
      "responses": [
        {
          "uuid": "c4a2c4db-a1a9-4a98-af14-fdcc672ff8e9",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a9983e32-8d3f-4c73-8b4e-54f1ab28f2df",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "363d3752-83fe-4216-b787-55396f0af07e",
      "documentation": "<p>Returns a list of DBSubnetGroup descriptions. If a DBSubnetGroupName is specified, the list will contain only the descriptions of the specified DBSubnetGroup.</p> <p>For an overview of CIDR ranges, go to the <a href=\"http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing\">Wikipedia Tutorial</a>.</p>",
      "method": "get",
      "endpoint": "#Action=DescribeDBSubnetGroups",
      "responses": [
        {
          "uuid": "25cf1356-f7ac-45b0-b542-9cd4d9ad6afe",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "34e4d66d-6923-4353-b296-a80f9923fd0b",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a2e135e8-f36f-40a4-a2e3-9896fd46d7dc",
      "documentation": "<p>Returns a list of DBSubnetGroup descriptions. If a DBSubnetGroupName is specified, the list will contain only the descriptions of the specified DBSubnetGroup.</p> <p>For an overview of CIDR ranges, go to the <a href=\"http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing\">Wikipedia Tutorial</a>.</p>",
      "method": "post",
      "endpoint": "#Action=DescribeDBSubnetGroups",
      "responses": [
        {
          "uuid": "c25c2a55-b511-4f11-949b-21088cb97f6f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f0c43802-6eab-4dc7-917a-d09eae597a5b",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e65e169e-7b5c-4d80-9cf6-4b57121f2ec6",
      "documentation": "Returns the default engine and system parameter information for the cluster database engine.",
      "method": "get",
      "endpoint": "#Action=DescribeEngineDefaultClusterParameters",
      "responses": [
        {
          "uuid": "04e98653-dfe8-4d6b-9755-82c34d488e8c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "052b6e34-b343-4f89-bc2a-aa3552d7ed72",
      "documentation": "Returns the default engine and system parameter information for the cluster database engine.",
      "method": "post",
      "endpoint": "#Action=DescribeEngineDefaultClusterParameters",
      "responses": [
        {
          "uuid": "fd6341a7-9703-428b-815f-3332a3abab32",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "91b1758b-53e0-44de-929c-6eef8516804e",
      "documentation": "Returns the default engine and system parameter information for the specified database engine.",
      "method": "get",
      "endpoint": "#Action=DescribeEngineDefaultParameters",
      "responses": [
        {
          "uuid": "c7128d44-c9d0-406e-b732-1a827244e252",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f2bdba45-e7d2-46a4-a510-28b7ad01a946",
      "documentation": "Returns the default engine and system parameter information for the specified database engine.",
      "method": "post",
      "endpoint": "#Action=DescribeEngineDefaultParameters",
      "responses": [
        {
          "uuid": "cc0f0a87-c945-4b1f-9a30-2b67726569a8",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e047a979-d264-4d73-b415-2470114bc52b",
      "documentation": "Displays a list of categories for all event source types, or, if specified, for a specified source type.",
      "method": "get",
      "endpoint": "#Action=DescribeEventCategories",
      "responses": [
        {
          "uuid": "c4cde4b6-c590-4d27-bcb3-f334171b9a6b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "be5f8d61-f47e-40f2-a602-545919e7c88f",
      "documentation": "Displays a list of categories for all event source types, or, if specified, for a specified source type.",
      "method": "post",
      "endpoint": "#Action=DescribeEventCategories",
      "responses": [
        {
          "uuid": "aa9e42f5-6e92-4cb5-9bc7-9a798beddf88",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "127b5ae0-a58f-471b-8eec-03eb936551e9",
      "documentation": "<p>Lists all the subscription descriptions for a customer account. The description for a subscription includes SubscriptionName, SNSTopicARN, CustomerID, SourceType, SourceID, CreationTime, and Status.</p> <p>If you specify a SubscriptionName, lists the description for that subscription.</p>",
      "method": "get",
      "endpoint": "#Action=DescribeEventSubscriptions",
      "responses": [
        {
          "uuid": "b47db365-05ab-466f-97d4-af835436996d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f835595e-4518-4369-be4f-b3b7a91ad643",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "SubscriptionNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fb01bec7-6f70-4b49-a45a-6651711cf016",
      "documentation": "<p>Lists all the subscription descriptions for a customer account. The description for a subscription includes SubscriptionName, SNSTopicARN, CustomerID, SourceType, SourceID, CreationTime, and Status.</p> <p>If you specify a SubscriptionName, lists the description for that subscription.</p>",
      "method": "post",
      "endpoint": "#Action=DescribeEventSubscriptions",
      "responses": [
        {
          "uuid": "202f8842-b816-49e7-a153-f584fff044fc",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "36c75cb2-94b0-464d-b0a3-a97128a57f61",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "SubscriptionNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dfd10c9d-9f6a-413a-b202-366b1f231c88",
      "documentation": "Returns events related to DB instances, DB security groups, DB snapshots, and DB parameter groups for the past 14 days. Events specific to a particular DB instance, DB security group, database snapshot, or DB parameter group can be obtained by providing the name as a parameter. By default, the past hour of events are returned.",
      "method": "get",
      "endpoint": "#Action=DescribeEvents",
      "responses": [
        {
          "uuid": "86e272c5-b858-4785-b66a-028cdb02781c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a8a2d5c6-a669-447a-a42a-c06912fa16bc",
      "documentation": "Returns events related to DB instances, DB security groups, DB snapshots, and DB parameter groups for the past 14 days. Events specific to a particular DB instance, DB security group, database snapshot, or DB parameter group can be obtained by providing the name as a parameter. By default, the past hour of events are returned.",
      "method": "post",
      "endpoint": "#Action=DescribeEvents",
      "responses": [
        {
          "uuid": "990d9c39-2e55-4027-b5ca-16b3fa605a3f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "16dad00d-84ec-47c2-8349-ca636eb7de07",
      "documentation": "Returns a list of orderable DB instance options for the specified engine.",
      "method": "get",
      "endpoint": "#Action=DescribeOrderableDBInstanceOptions",
      "responses": [
        {
          "uuid": "ae0de7a0-1efa-4fe2-ad68-06ae603d3e5b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9c133ca3-b4bf-4354-91cc-fd2c7e2c8a93",
      "documentation": "Returns a list of orderable DB instance options for the specified engine.",
      "method": "post",
      "endpoint": "#Action=DescribeOrderableDBInstanceOptions",
      "responses": [
        {
          "uuid": "e638221e-e5a4-44ee-8684-1af5ee1ff696",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "342b7121-16d7-457f-96e7-1e5fa36220cd",
      "documentation": "Returns a list of resources (for example, DB instances) that have at least one pending maintenance action.",
      "method": "get",
      "endpoint": "#Action=DescribePendingMaintenanceActions",
      "responses": [
        {
          "uuid": "86174be1-70d0-4854-a74f-e220af91da04",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "54a23778-816b-4816-83ca-85d96cb886c5",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8614f85c-efb5-4422-8bcd-9df51855f1f2",
      "documentation": "Returns a list of resources (for example, DB instances) that have at least one pending maintenance action.",
      "method": "post",
      "endpoint": "#Action=DescribePendingMaintenanceActions",
      "responses": [
        {
          "uuid": "dc94eb06-5b49-4b62-9df3-b01c38e0589f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "812c3b41-1549-4635-9d1e-14a7ba312580",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7fe5518e-0583-4bce-8eac-336016382194",
      "documentation": "You can call <a>DescribeValidDBInstanceModifications</a> to learn what modifications you can make to your DB instance. You can use this information when you call <a>ModifyDBInstance</a>.",
      "method": "get",
      "endpoint": "#Action=DescribeValidDBInstanceModifications",
      "responses": [
        {
          "uuid": "c49dcce6-fb84-4720-87ed-fdd08359bb22",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "01183716-542e-4779-be3a-194d778825a3",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fd14e3f5-78ec-4258-9be2-16a144a2beed",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "69a15008-298b-4824-9151-c5c0356f18be",
      "documentation": "You can call <a>DescribeValidDBInstanceModifications</a> to learn what modifications you can make to your DB instance. You can use this information when you call <a>ModifyDBInstance</a>.",
      "method": "post",
      "endpoint": "#Action=DescribeValidDBInstanceModifications",
      "responses": [
        {
          "uuid": "d8f88584-11bd-4be1-b1cb-fe84c7b8d0d6",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5751e7da-afa6-4d3c-9357-6c7e6f58e41f",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0ca2da45-f685-41e1-9107-475e7df3b6b6",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "00ef8db1-8def-4657-be9c-d4fda0507cd2",
      "documentation": "<p>Forces a failover for a DB cluster.</p> <p>A failover for a DB cluster promotes one of the Read Replicas (read-only instances) in the DB cluster to be the primary instance (the cluster writer).</p> <p>Amazon Neptune will automatically fail over to a Read Replica, if one exists, when the primary instance fails. You can force a failover when you want to simulate a failure of a primary instance for testing. Because each instance in a DB cluster has its own endpoint address, you will need to clean up and re-establish any existing connections that use those endpoint addresses when the failover is complete.</p>",
      "method": "get",
      "endpoint": "#Action=FailoverDBCluster",
      "responses": [
        {
          "uuid": "9eab99f3-9006-4096-8c49-473602448e53",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "df297d71-1dc6-4a3c-b365-bca138e45668",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f9be1b17-d86d-4d64-bdb6-657b5cd8450c",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fdbb99e5-ea2f-49aa-9b91-5cfd4ea59969",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6adf2903-1ccd-4651-bf4e-c5e5c3a7dd86",
      "documentation": "<p>Forces a failover for a DB cluster.</p> <p>A failover for a DB cluster promotes one of the Read Replicas (read-only instances) in the DB cluster to be the primary instance (the cluster writer).</p> <p>Amazon Neptune will automatically fail over to a Read Replica, if one exists, when the primary instance fails. You can force a failover when you want to simulate a failure of a primary instance for testing. Because each instance in a DB cluster has its own endpoint address, you will need to clean up and re-establish any existing connections that use those endpoint addresses when the failover is complete.</p>",
      "method": "post",
      "endpoint": "#Action=FailoverDBCluster",
      "responses": [
        {
          "uuid": "8a4cafe6-d405-4588-9a41-519ea8eed997",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4234f224-99f6-4f81-a952-45917ac0b3c0",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f10d931e-0bd8-4a05-b8d6-f64ab95b68f0",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "48feb62d-3d30-4d5f-9cad-7a8f98458dae",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0caa1534-d854-4686-aa7d-26ab91876226",
      "documentation": "Lists all tags on an Amazon Neptune resource.",
      "method": "get",
      "endpoint": "#Action=ListTagsForResource",
      "responses": [
        {
          "uuid": "a0b31bbc-8f4b-4840-9012-d162e623f862",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1bf17ef4-e5b9-43ef-8cd5-263f99459f2d",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0cb27b04-4d1a-4dfd-966a-cec3153cf23c",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e43179e1-241b-4874-b926-bdf893ff7854",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9e5e98cf-422b-44ac-a7ca-ed8cb7899ccb",
      "documentation": "Lists all tags on an Amazon Neptune resource.",
      "method": "post",
      "endpoint": "#Action=ListTagsForResource",
      "responses": [
        {
          "uuid": "f00b6891-5d4e-4749-a9ef-62d016ece120",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ab7c9d1d-4b31-496a-9740-1336c5549337",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1ca9e9ea-b55b-413a-a1fc-7a2b95c170ad",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a13f7daf-e9d2-43b4-8165-9aebb02e1119",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0fb19b32-f8b0-4d95-a83a-521c3af13391",
      "documentation": "Modify a setting for a DB cluster. You can change one or more database configuration parameters by specifying these parameters and the new values in the request.",
      "method": "get",
      "endpoint": "#Action=ModifyDBCluster",
      "responses": [
        {
          "uuid": "64eff190-74c5-4267-8c06-85333c975946",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "891dc958-790a-4680-9ab3-e68a8a9a12e3",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "111eed9d-5d61-473e-a0ed-918d456c5d83",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "181f31c0-6849-4103-93dc-b4480129232a",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "StorageQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9d69f8f9-0313-4a40-9d2e-9c48127aefbb",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0699cd61-22c5-4c58-b2e6-eeaf8bbbfa81",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidVPCNetworkStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9693a208-ec40-40f7-b075-a1952b091187",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidDBSubnetGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d1d9ea64-75f3-4a46-b2f5-4c17133f894d",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "311ac96a-a52b-4dde-b3f5-950ebe068a56",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "DBClusterParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bf05f415-f026-4ae6-b19f-037dae8ccefc",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidDBSecurityGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5860ad7d-c761-442e-9e64-6255b0bf7f34",
          "body": "",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b8eb580c-55ce-47a8-b9ac-c8f0a869eabc",
          "body": "",
          "latency": 0,
          "statusCode": 490,
          "label": "DBClusterAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2741f12a-0996-4fe1-a7d6-7a022ec9828b",
      "documentation": "Modify a setting for a DB cluster. You can change one or more database configuration parameters by specifying these parameters and the new values in the request.",
      "method": "post",
      "endpoint": "#Action=ModifyDBCluster",
      "responses": [
        {
          "uuid": "89486186-1490-4137-aec8-ebc3beaeb12b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a5a43946-15b6-4892-8176-0f782d713c97",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fd65fffa-2b77-4819-b79d-b21d2a130310",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b355b040-68c2-48cd-903e-70b5d69ba67f",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "StorageQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "440e1369-3ece-414d-85f6-49fa85f82aec",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b0eb7448-bf1e-4bb3-9152-a80beee6b860",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidVPCNetworkStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5faafc00-d78e-4b5f-aabd-5c0c5227b02c",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidDBSubnetGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "38046753-5b12-469b-a9cf-b20c812bcc01",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b4362fd7-ebaf-43e7-a499-1a72e1faa49a",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "DBClusterParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7f3566ae-8a12-4d3e-83d0-b0687c39e3af",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidDBSecurityGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "63cc5fa6-0790-45e5-9b4d-767075a93cb4",
          "body": "",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7387477b-a5f4-4a5f-8969-bb315174adb9",
          "body": "",
          "latency": 0,
          "statusCode": 490,
          "label": "DBClusterAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4367d6ee-91e8-4947-9934-bdb15af97b3a",
      "documentation": "Modifies the properties of an endpoint in an Amazon Neptune DB cluster.",
      "method": "get",
      "endpoint": "#Action=ModifyDBClusterEndpoint",
      "responses": [
        {
          "uuid": "7d91b222-d27a-4a06-9991-9396dc1abb7c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7066825d-cc9c-40a8-af96-87ae1cea7756",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3d18c766-3aa9-4c38-ab75-de2c3d65be31",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterEndpointStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5d91a558-3d90-47d0-a1b5-0cf65159519e",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBClusterEndpointNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cea157b1-2645-42a8-b408-5ffd56615008",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2934559b-e863-4919-bfbc-689f348f0c1e",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1c5cb626-5d0a-42fb-b363-820ec2322da1",
      "documentation": "Modifies the properties of an endpoint in an Amazon Neptune DB cluster.",
      "method": "post",
      "endpoint": "#Action=ModifyDBClusterEndpoint",
      "responses": [
        {
          "uuid": "e3d6e0da-e596-49ef-959c-81bd93fc54e8",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "12c15520-9e86-4e97-90f8-8970a27a4165",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8d242c5e-b3fc-4da3-ba16-916095db76cd",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterEndpointStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e0d3ab0b-127d-47cb-be08-d43d38a28e6d",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBClusterEndpointNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cc97683b-01bc-4ba5-b8ad-c42ab4a4c23e",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "de1af0cc-ce3a-4ad4-a240-3a08d9f5787d",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0ce0c3a9-131c-49dd-ad6f-3db68a73fb2c",
      "documentation": "<p> Modifies the parameters of a DB cluster parameter group. To modify more than one parameter, submit a list of the following: <code>ParameterName</code>, <code>ParameterValue</code>, and <code>ApplyMethod</code>. A maximum of 20 parameters can be modified in a single request.</p> <note> <p>Changes to dynamic parameters are applied immediately. Changes to static parameters require a reboot without failover to the DB cluster associated with the parameter group before the change can take effect.</p> </note> <important> <p>After you create a DB cluster parameter group, you should wait at least 5 minutes before creating your first DB cluster that uses that DB cluster parameter group as the default parameter group. This allows Amazon Neptune to fully complete the create action before the parameter group is used as the default for a new DB cluster. This is especially important for parameters that are critical when creating the default database for a DB cluster, such as the character set for the default database defined by the <code>character_set_database</code> parameter. You can use the <i>Parameter Groups</i> option of the Amazon Neptune console or the <a>DescribeDBClusterParameters</a> command to verify that your DB cluster parameter group has been created or modified.</p> </important>",
      "method": "get",
      "endpoint": "#Action=ModifyDBClusterParameterGroup",
      "responses": [
        {
          "uuid": "e2fb332a-a54c-43ee-8936-10d0d4470c0e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "15349e01-d1d2-475a-82f0-ce2a13a3c0d4",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "00fdf7ac-757a-4e7b-ac4a-b8d57929a066",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBParameterGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "eb59199a-02fc-4cc9-817d-4c0edf6459a2",
      "documentation": "<p> Modifies the parameters of a DB cluster parameter group. To modify more than one parameter, submit a list of the following: <code>ParameterName</code>, <code>ParameterValue</code>, and <code>ApplyMethod</code>. A maximum of 20 parameters can be modified in a single request.</p> <note> <p>Changes to dynamic parameters are applied immediately. Changes to static parameters require a reboot without failover to the DB cluster associated with the parameter group before the change can take effect.</p> </note> <important> <p>After you create a DB cluster parameter group, you should wait at least 5 minutes before creating your first DB cluster that uses that DB cluster parameter group as the default parameter group. This allows Amazon Neptune to fully complete the create action before the parameter group is used as the default for a new DB cluster. This is especially important for parameters that are critical when creating the default database for a DB cluster, such as the character set for the default database defined by the <code>character_set_database</code> parameter. You can use the <i>Parameter Groups</i> option of the Amazon Neptune console or the <a>DescribeDBClusterParameters</a> command to verify that your DB cluster parameter group has been created or modified.</p> </important>",
      "method": "post",
      "endpoint": "#Action=ModifyDBClusterParameterGroup",
      "responses": [
        {
          "uuid": "1bdb0961-10b3-4088-841e-4214cc6e2b5b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "51e3be25-4e2f-4899-b202-f55f9f215233",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "06421fb1-c115-413b-8777-437bc5e20781",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBParameterGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "55c849d5-1af6-4209-8f14-c6d09d83c226",
      "documentation": "<p>Adds an attribute and values to, or removes an attribute and values from, a manual DB cluster snapshot.</p> <p>To share a manual DB cluster snapshot with other Amazon accounts, specify <code>restore</code> as the <code>AttributeName</code> and use the <code>ValuesToAdd</code> parameter to add a list of IDs of the Amazon accounts that are authorized to restore the manual DB cluster snapshot. Use the value <code>all</code> to make the manual DB cluster snapshot public, which means that it can be copied or restored by all Amazon accounts. Do not add the <code>all</code> value for any manual DB cluster snapshots that contain private information that you don't want available to all Amazon accounts. If a manual DB cluster snapshot is encrypted, it can be shared, but only by specifying a list of authorized Amazon account IDs for the <code>ValuesToAdd</code> parameter. You can't use <code>all</code> as a value for that parameter in this case.</p> <p>To view which Amazon accounts have access to copy or restore a manual DB cluster snapshot, or whether a manual DB cluster snapshot public or private, use the <a>DescribeDBClusterSnapshotAttributes</a> API action.</p>",
      "method": "get",
      "endpoint": "#Action=ModifyDBClusterSnapshotAttribute",
      "responses": [
        {
          "uuid": "e255072b-b605-4e53-b392-154fc5139884",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f1500089-2f5e-4029-97e7-3db61b5161cb",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8c761eee-1260-440f-b9ee-8ff8a4146f8a",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e92d997f-e42a-46d1-8b79-0ff363d13886",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "SharedSnapshotQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6abddbed-6a93-4d3f-8724-07853931d6b4",
      "documentation": "<p>Adds an attribute and values to, or removes an attribute and values from, a manual DB cluster snapshot.</p> <p>To share a manual DB cluster snapshot with other Amazon accounts, specify <code>restore</code> as the <code>AttributeName</code> and use the <code>ValuesToAdd</code> parameter to add a list of IDs of the Amazon accounts that are authorized to restore the manual DB cluster snapshot. Use the value <code>all</code> to make the manual DB cluster snapshot public, which means that it can be copied or restored by all Amazon accounts. Do not add the <code>all</code> value for any manual DB cluster snapshots that contain private information that you don't want available to all Amazon accounts. If a manual DB cluster snapshot is encrypted, it can be shared, but only by specifying a list of authorized Amazon account IDs for the <code>ValuesToAdd</code> parameter. You can't use <code>all</code> as a value for that parameter in this case.</p> <p>To view which Amazon accounts have access to copy or restore a manual DB cluster snapshot, or whether a manual DB cluster snapshot public or private, use the <a>DescribeDBClusterSnapshotAttributes</a> API action.</p>",
      "method": "post",
      "endpoint": "#Action=ModifyDBClusterSnapshotAttribute",
      "responses": [
        {
          "uuid": "a888e42a-0d79-44af-995e-e43cbc831c2c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7ab462b6-74e5-41ec-8ed6-22443098eba2",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9f7b7ded-6870-44d2-b693-8769d1f39ca7",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f8c92229-bead-4f43-abcc-53e427c2bf5d",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "SharedSnapshotQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "95972497-7ff2-4849-af3f-c8ca48a7a559",
      "documentation": "Modifies settings for a DB instance. You can change one or more database configuration parameters by specifying these parameters and the new values in the request. To learn what modifications you can make to your DB instance, call <a>DescribeValidDBInstanceModifications</a> before you call <a>ModifyDBInstance</a>.",
      "method": "get",
      "endpoint": "#Action=ModifyDBInstance",
      "responses": [
        {
          "uuid": "1b102fd5-fdf1-403e-b8e1-0bac16b87da6",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c2c1848c-c356-42bd-88cd-2e550b59b5e9",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cf90eb01-3c53-4459-b046-5f83d2aee70b",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBSecurityGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "805b5d88-0d9c-4732-bf04-37eba11e9cbe",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBInstanceAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6b786ab0-6778-4b0e-ac63-b37300a56701",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4b4bfdb9-dfef-4c61-9a13-5481ea4571ac",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "DBSecurityGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a5182ebd-5aed-4d58-afa1-81c173bc499c",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4c77e985-3f7c-4228-9f5d-882f3f03f058",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "InsufficientDBInstanceCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9207df34-2f2b-4da7-9f28-b14531f22084",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "StorageQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "91231265-484f-4825-994f-2b2a8e0c3fa6",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidVPCNetworkStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9c5053d3-b8f9-432f-95e5-cf34d9bacf83",
          "body": "",
          "latency": 0,
          "statusCode": 489,
          "label": "ProvisionedIopsNotAvailableInAZFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5d91092c-4a8f-4e8c-a9a5-11466b7844c3",
          "body": "",
          "latency": 0,
          "statusCode": 490,
          "label": "OptionGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f01f57f6-146c-4ad5-a6db-d8a538d0c36a",
          "body": "",
          "latency": 0,
          "statusCode": 491,
          "label": "DBUpgradeDependencyFailureFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "69c85849-f6a3-42ac-a4ae-3a6b28b289af",
          "body": "",
          "latency": 0,
          "statusCode": 492,
          "label": "StorageTypeNotSupportedFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ee896bdf-7bdb-40d4-87b5-5adedc31d066",
          "body": "",
          "latency": 0,
          "statusCode": 493,
          "label": "AuthorizationNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0aa5f3c4-3517-4735-b5fa-096b63939c41",
          "body": "",
          "latency": 0,
          "statusCode": 494,
          "label": "CertificateNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "512047a3-abb5-437e-b6c4-364e121f8eb9",
          "body": "",
          "latency": 0,
          "statusCode": 495,
          "label": "DomainNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f426cd26-0a91-4019-87b4-4c0d41a76c1f",
      "documentation": "Modifies settings for a DB instance. You can change one or more database configuration parameters by specifying these parameters and the new values in the request. To learn what modifications you can make to your DB instance, call <a>DescribeValidDBInstanceModifications</a> before you call <a>ModifyDBInstance</a>.",
      "method": "post",
      "endpoint": "#Action=ModifyDBInstance",
      "responses": [
        {
          "uuid": "6f11a37e-70e5-4d1a-9279-043803ef28e8",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "db2c0a87-f670-46e3-97f2-db724d3f3047",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "33f9e1e8-5d63-4495-abc9-82649f29e6b4",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBSecurityGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a1f5380e-e544-4379-97c3-1339ca2e35f1",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBInstanceAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0e87a03c-ed06-4be9-a990-301625e99e14",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6306010c-e14c-450d-8ae5-83757a5580a5",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "DBSecurityGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2f9dc9bd-11a1-4d0a-ab40-aa04265da2d4",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d966131a-908a-4fea-be4d-da1b7b64c85f",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "InsufficientDBInstanceCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e83f487c-1ef1-4497-8ac0-e130dc80a1c6",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "StorageQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c02b2fea-b6aa-4a7c-935a-f7a17d011c43",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidVPCNetworkStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ab885f7d-4a6a-4000-b8c1-e912757adbcf",
          "body": "",
          "latency": 0,
          "statusCode": 489,
          "label": "ProvisionedIopsNotAvailableInAZFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "65c043a5-2894-4459-b82c-ad59943bf531",
          "body": "",
          "latency": 0,
          "statusCode": 490,
          "label": "OptionGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3c09c546-365f-4a81-91f7-dcbb2915595b",
          "body": "",
          "latency": 0,
          "statusCode": 491,
          "label": "DBUpgradeDependencyFailureFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e669de14-4436-492c-a6f5-01fb56af7a48",
          "body": "",
          "latency": 0,
          "statusCode": 492,
          "label": "StorageTypeNotSupportedFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "000c3428-e566-484e-bd46-1ca770e55f4f",
          "body": "",
          "latency": 0,
          "statusCode": 493,
          "label": "AuthorizationNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9fb790d2-706a-497d-9bd5-ce019cf36fa8",
          "body": "",
          "latency": 0,
          "statusCode": 494,
          "label": "CertificateNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bc3f40d0-cf6c-4b28-85bf-559d8e3c1540",
          "body": "",
          "latency": 0,
          "statusCode": 495,
          "label": "DomainNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9a484b53-87b0-4e5a-ad88-38961eaaa6ff",
      "documentation": "<p>Modifies the parameters of a DB parameter group. To modify more than one parameter, submit a list of the following: <code>ParameterName</code>, <code>ParameterValue</code>, and <code>ApplyMethod</code>. A maximum of 20 parameters can be modified in a single request.</p> <note> <p>Changes to dynamic parameters are applied immediately. Changes to static parameters require a reboot without failover to the DB instance associated with the parameter group before the change can take effect.</p> </note> <important> <p>After you modify a DB parameter group, you should wait at least 5 minutes before creating your first DB instance that uses that DB parameter group as the default parameter group. This allows Amazon Neptune to fully complete the modify action before the parameter group is used as the default for a new DB instance. This is especially important for parameters that are critical when creating the default database for a DB instance, such as the character set for the default database defined by the <code>character_set_database</code> parameter. You can use the <i>Parameter Groups</i> option of the Amazon Neptune console or the <i>DescribeDBParameters</i> command to verify that your DB parameter group has been created or modified.</p> </important>",
      "method": "get",
      "endpoint": "#Action=ModifyDBParameterGroup",
      "responses": [
        {
          "uuid": "2457ec5b-b6f9-4b44-b835-abda81432576",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0e4e83e8-9346-41b5-86f8-1c5c4398ea45",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cb7bf898-c437-4435-af7a-6a2ac20be5b1",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBParameterGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "64cfecde-53d5-47ab-9d65-4c2a36fa645c",
      "documentation": "<p>Modifies the parameters of a DB parameter group. To modify more than one parameter, submit a list of the following: <code>ParameterName</code>, <code>ParameterValue</code>, and <code>ApplyMethod</code>. A maximum of 20 parameters can be modified in a single request.</p> <note> <p>Changes to dynamic parameters are applied immediately. Changes to static parameters require a reboot without failover to the DB instance associated with the parameter group before the change can take effect.</p> </note> <important> <p>After you modify a DB parameter group, you should wait at least 5 minutes before creating your first DB instance that uses that DB parameter group as the default parameter group. This allows Amazon Neptune to fully complete the modify action before the parameter group is used as the default for a new DB instance. This is especially important for parameters that are critical when creating the default database for a DB instance, such as the character set for the default database defined by the <code>character_set_database</code> parameter. You can use the <i>Parameter Groups</i> option of the Amazon Neptune console or the <i>DescribeDBParameters</i> command to verify that your DB parameter group has been created or modified.</p> </important>",
      "method": "post",
      "endpoint": "#Action=ModifyDBParameterGroup",
      "responses": [
        {
          "uuid": "bf2bda48-9826-4197-a2be-983131e6330b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9576e3ba-d591-4d1b-971e-34b4a9c1acc9",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "64180042-e3e4-4b89-8fc8-80d83290d57f",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBParameterGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ec21d85e-9033-4823-9f63-393b6b499996",
      "documentation": "Modifies an existing DB subnet group. DB subnet groups must contain at least one subnet in at least two AZs in the Amazon Region.",
      "method": "get",
      "endpoint": "#Action=ModifyDBSubnetGroup",
      "responses": [
        {
          "uuid": "b22c9930-d114-4577-a83e-0abcbcfd046f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7a5045fb-f22f-4501-ade5-7611da2b9dfa",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "50eac785-6fc8-4d00-8d07-dd5aeb81795a",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBSubnetQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "96e390ef-e06b-4a7d-8532-4a8f1ec0393d",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "SubnetAlreadyInUse",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2bbad7d3-7210-41eb-b3b7-bd8f7b37dde4",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBSubnetGroupDoesNotCoverEnoughAZs",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "652f0b15-32b7-4166-9da7-ebbe38169166",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "edd57ba9-943f-4727-ac01-fe9865745ccf",
      "documentation": "Modifies an existing DB subnet group. DB subnet groups must contain at least one subnet in at least two AZs in the Amazon Region.",
      "method": "post",
      "endpoint": "#Action=ModifyDBSubnetGroup",
      "responses": [
        {
          "uuid": "13f559fa-d0bc-4978-b61f-5a029e0492a5",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9c1ef065-0a46-4339-bd7d-ab2307517408",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5b09fd11-6184-4795-865f-70273a4b8966",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBSubnetQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1425bf39-18bf-4c06-9677-6ae59a581643",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "SubnetAlreadyInUse",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5f494405-34a7-4e55-af1c-914c28370aff",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBSubnetGroupDoesNotCoverEnoughAZs",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "27bc44c2-ffe5-4cd8-a17a-fd40eabdcc01",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "74e09fe7-2533-4808-b637-d5f1947e60e7",
      "documentation": "<p>Modifies an existing event notification subscription. Note that you can't modify the source identifiers using this call; to change source identifiers for a subscription, use the <a>AddSourceIdentifierToSubscription</a> and <a>RemoveSourceIdentifierFromSubscription</a> calls.</p> <p>You can see a list of the event categories for a given SourceType by using the <b>DescribeEventCategories</b> action.</p>",
      "method": "get",
      "endpoint": "#Action=ModifyEventSubscription",
      "responses": [
        {
          "uuid": "13bbabec-1ecc-471a-a643-39f8e16c65b2",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9e13e364-6a70-42bc-a765-482875fd7537",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "EventSubscriptionQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6f27b509-3ea7-4f00-b006-86965bf6570c",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "SubscriptionNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a3d1874d-85e8-4403-bd90-1997b63ffa0e",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "SNSInvalidTopicFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a375c01b-2347-42b4-bc2a-a363f033257e",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "SNSNoAuthorizationFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "95afd999-813e-42e8-a4b1-d88ec8b83e12",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "SNSTopicArnNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "634100e7-b6af-42e1-8a92-ec2c0827d28b",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "SubscriptionCategoryNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d73623f8-e0ea-4709-b93c-1e369242768f",
      "documentation": "<p>Modifies an existing event notification subscription. Note that you can't modify the source identifiers using this call; to change source identifiers for a subscription, use the <a>AddSourceIdentifierToSubscription</a> and <a>RemoveSourceIdentifierFromSubscription</a> calls.</p> <p>You can see a list of the event categories for a given SourceType by using the <b>DescribeEventCategories</b> action.</p>",
      "method": "post",
      "endpoint": "#Action=ModifyEventSubscription",
      "responses": [
        {
          "uuid": "e10c2719-8b5a-4c3d-b42c-57c4f99cf362",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7b0fd0ce-04b1-4cb3-a34e-2f31c6fe0fbd",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "EventSubscriptionQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "37131f72-d3fc-439e-b084-65ee282ef83d",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "SubscriptionNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "92b6a34f-583a-450e-a125-a221456f25c7",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "SNSInvalidTopicFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6f735190-f713-4f5d-bc4a-0f82e3659180",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "SNSNoAuthorizationFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d130e659-2994-40aa-b314-4562946f65a0",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "SNSTopicArnNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dc7c9dc3-a285-4d8e-970c-35d2d90da297",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "SubscriptionCategoryNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a244f6ab-27ba-445c-8707-3b3aac9e0f47",
      "documentation": "Not supported.",
      "method": "get",
      "endpoint": "#Action=PromoteReadReplicaDBCluster",
      "responses": [
        {
          "uuid": "60b1bea3-a0d7-4291-97b9-4d3f183aee9b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0ad277b3-d484-4a83-8b8c-46902ddf28b8",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e0ee9738-1920-41ee-87f4-59fe1b63f8f6",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1b80e95a-f3e2-401a-9e5e-27278754ee0b",
      "documentation": "Not supported.",
      "method": "post",
      "endpoint": "#Action=PromoteReadReplicaDBCluster",
      "responses": [
        {
          "uuid": "5e187c81-83d1-46fe-8631-f22db5d18f38",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a59216f7-89f9-4f52-9951-82e6387d1dcc",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6aed98be-3c43-430d-9624-306a4a57a12e",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6fb4e76e-8d1e-4401-9b22-5c1a4b8708bb",
      "documentation": "<p>You might need to reboot your DB instance, usually for maintenance reasons. For example, if you make certain modifications, or if you change the DB parameter group associated with the DB instance, you must reboot the instance for the changes to take effect.</p> <p>Rebooting a DB instance restarts the database engine service. Rebooting a DB instance results in a momentary outage, during which the DB instance status is set to rebooting.</p>",
      "method": "get",
      "endpoint": "#Action=RebootDBInstance",
      "responses": [
        {
          "uuid": "841da038-2e4f-4976-9ddb-63d5f95c7360",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "59b5b3b2-e91c-47ad-bebb-cdfa4fc52965",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "983affe8-9acd-4357-8dbf-e26ba3adb6ca",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "517e93ae-af71-4ed8-ac30-78ea7a4672fd",
      "documentation": "<p>You might need to reboot your DB instance, usually for maintenance reasons. For example, if you make certain modifications, or if you change the DB parameter group associated with the DB instance, you must reboot the instance for the changes to take effect.</p> <p>Rebooting a DB instance restarts the database engine service. Rebooting a DB instance results in a momentary outage, during which the DB instance status is set to rebooting.</p>",
      "method": "post",
      "endpoint": "#Action=RebootDBInstance",
      "responses": [
        {
          "uuid": "2c63ef0d-8041-4ffc-beb9-2efed8dec797",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bd315b65-e7c5-4466-b03e-1d924856113d",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "beaacc59-59e0-43dc-a2e0-46fc748648cd",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9fb43c88-f4af-49f8-9fb5-9ce115791ab9",
      "documentation": "Disassociates an Identity and Access Management (IAM) role from a DB cluster.",
      "method": "get",
      "endpoint": "#Action=RemoveRoleFromDBCluster",
      "responses": [
        {
          "uuid": "d583bc56-eb80-4b82-acba-7cab1b60e665",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9d07a71b-9d34-468e-9ab3-98cd0b235b7a",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f57173e6-a860-4710-b290-6acadd348b86",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBClusterRoleNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "63ae3c2e-7ff5-461a-aa80-008afaf2bd3c",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7fafeea5-3205-450a-a7d3-eec3dc8d30cb",
      "documentation": "Disassociates an Identity and Access Management (IAM) role from a DB cluster.",
      "method": "post",
      "endpoint": "#Action=RemoveRoleFromDBCluster",
      "responses": [
        {
          "uuid": "58f696f1-ddbc-4870-a5a8-8b3af41d9a08",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8beb04f2-f47c-4d92-b67d-1b380fe1ef28",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "656bb0bb-d60a-4c6a-bd85-b895fa22e375",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBClusterRoleNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8140b967-483e-4040-af99-54fde8d0f7de",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cf5f490b-ffc5-4236-a843-ce8437eaf982",
      "documentation": "Removes a source identifier from an existing event notification subscription.",
      "method": "get",
      "endpoint": "#Action=RemoveSourceIdentifierFromSubscription",
      "responses": [
        {
          "uuid": "5192e861-fcff-439e-a927-7d7c4b383c13",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ee9b7446-6749-461f-8ef2-c6cb25144556",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "SubscriptionNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "165a7c68-c938-43f2-8c59-fe39a544d85d",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "SourceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "58197a1f-6066-4cf7-bba0-871f8489fb8f",
      "documentation": "Removes a source identifier from an existing event notification subscription.",
      "method": "post",
      "endpoint": "#Action=RemoveSourceIdentifierFromSubscription",
      "responses": [
        {
          "uuid": "8c052734-5337-4044-a9af-70aef1ee97f2",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "94f699b7-beb4-43db-acdd-fe0f136bd8f4",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "SubscriptionNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9d3f8bd3-2037-4a80-9a47-e26c51e02ac3",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "SourceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0e337384-a189-43e0-bf91-9c7f7fdd0ea7",
      "documentation": "Removes metadata tags from an Amazon Neptune resource.",
      "method": "get",
      "endpoint": "#Action=RemoveTagsFromResource",
      "responses": [
        {
          "uuid": "5d2fba20-73fd-4aa8-aa77-49920c103d02",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f0275b72-00d7-4326-95a4-c9277099bafd",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "54551125-7e8b-40b0-a95a-7623b4b9402f",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "373f33f0-4452-41b0-b5ba-73acc1451fa7",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e49669df-9cdd-4cae-bb04-5fbfd173bf3b",
      "documentation": "Removes metadata tags from an Amazon Neptune resource.",
      "method": "post",
      "endpoint": "#Action=RemoveTagsFromResource",
      "responses": [
        {
          "uuid": "f7400fbe-c9e2-417c-bd04-ec47bfb704b4",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f12e02c0-e5ae-4efb-9796-70983d9ecd0a",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "53bef9c9-acd6-414f-9239-d41f6586a90e",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c66b78d0-51fc-4444-a724-09fe7035e293",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8f979e52-8f9b-4f7e-9bf8-ab7abca9d112",
      "documentation": "<p> Modifies the parameters of a DB cluster parameter group to the default value. To reset specific parameters submit a list of the following: <code>ParameterName</code> and <code>ApplyMethod</code>. To reset the entire DB cluster parameter group, specify the <code>DBClusterParameterGroupName</code> and <code>ResetAllParameters</code> parameters.</p> <p> When resetting the entire group, dynamic parameters are updated immediately and static parameters are set to <code>pending-reboot</code> to take effect on the next DB instance restart or <a>RebootDBInstance</a> request. You must call <a>RebootDBInstance</a> for every DB instance in your DB cluster that you want the updated static parameter to apply to.</p>",
      "method": "get",
      "endpoint": "#Action=ResetDBClusterParameterGroup",
      "responses": [
        {
          "uuid": "31de2ff9-329a-4911-b744-32da90340b45",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ab4b3be5-17f6-4d31-976c-51eea87fc276",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBParameterGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7d8cc833-86c6-42e1-90ef-b6a5b49e385b",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c30a8845-8802-434c-b167-540a4dcbedd5",
      "documentation": "<p> Modifies the parameters of a DB cluster parameter group to the default value. To reset specific parameters submit a list of the following: <code>ParameterName</code> and <code>ApplyMethod</code>. To reset the entire DB cluster parameter group, specify the <code>DBClusterParameterGroupName</code> and <code>ResetAllParameters</code> parameters.</p> <p> When resetting the entire group, dynamic parameters are updated immediately and static parameters are set to <code>pending-reboot</code> to take effect on the next DB instance restart or <a>RebootDBInstance</a> request. You must call <a>RebootDBInstance</a> for every DB instance in your DB cluster that you want the updated static parameter to apply to.</p>",
      "method": "post",
      "endpoint": "#Action=ResetDBClusterParameterGroup",
      "responses": [
        {
          "uuid": "6038ff6b-1749-4e18-800c-c4593219d3ec",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c16b6407-8a20-4cd3-b6e6-07b428e24e8b",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBParameterGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d1c09651-86bd-49e2-b4c0-3ff5576b665c",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "51cea6f4-29cb-4739-9b9f-c1ae60576fe6",
      "documentation": "Modifies the parameters of a DB parameter group to the engine/system default value. To reset specific parameters, provide a list of the following: <code>ParameterName</code> and <code>ApplyMethod</code>. To reset the entire DB parameter group, specify the <code>DBParameterGroup</code> name and <code>ResetAllParameters</code> parameters. When resetting the entire group, dynamic parameters are updated immediately and static parameters are set to <code>pending-reboot</code> to take effect on the next DB instance restart or <code>RebootDBInstance</code> request.",
      "method": "get",
      "endpoint": "#Action=ResetDBParameterGroup",
      "responses": [
        {
          "uuid": "ff31b7e5-80e8-44f0-aa25-04600cace63e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7186ebab-1fd8-4af3-b7f5-38ec68bc9c68",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBParameterGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "735301c8-abd6-4b82-b738-af9a18f05f81",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ce14b47d-0177-40d9-a15b-d6041866b61f",
      "documentation": "Modifies the parameters of a DB parameter group to the engine/system default value. To reset specific parameters, provide a list of the following: <code>ParameterName</code> and <code>ApplyMethod</code>. To reset the entire DB parameter group, specify the <code>DBParameterGroup</code> name and <code>ResetAllParameters</code> parameters. When resetting the entire group, dynamic parameters are updated immediately and static parameters are set to <code>pending-reboot</code> to take effect on the next DB instance restart or <code>RebootDBInstance</code> request.",
      "method": "post",
      "endpoint": "#Action=ResetDBParameterGroup",
      "responses": [
        {
          "uuid": "8357a67a-4770-49a8-b5d4-ee5a32e6f6bf",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f5f10b8e-3703-48ae-b611-9744891bcc86",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBParameterGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "954c582a-0410-4f9e-855b-e6fdd00986f7",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "90cb41ca-b47a-4f17-808f-aa0dd708264c",
      "documentation": "<p>Creates a new DB cluster from a DB snapshot or DB cluster snapshot.</p> <p>If a DB snapshot is specified, the target DB cluster is created from the source DB snapshot with a default configuration and default security group.</p> <p>If a DB cluster snapshot is specified, the target DB cluster is created from the source DB cluster restore point with the same configuration as the original source DB cluster, except that the new DB cluster is created with the default security group.</p>",
      "method": "get",
      "endpoint": "#Action=RestoreDBClusterFromSnapshot",
      "responses": [
        {
          "uuid": "d5c49677-8bf9-4c3f-bd70-234fd65e8eba",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "60d01da4-0971-4241-9322-0507b2bb635a",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "56ac5d58-eb95-44ca-a71c-ac53e110598e",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBClusterQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1c3acaf2-1c88-4d22-bc75-5a6da9e65b8c",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "StorageQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8cc1f8c6-493c-4278-b3d0-0828e06780b6",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e8fb31a8-170d-4b35-b138-f22530c72f6b",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "DBSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d99ddbb7-9501-47d3-9ac4-792b6ccb2c21",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "DBClusterSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d8d2d624-17c7-41fb-b6e0-ad57664acf51",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "InsufficientDBClusterCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aa0dadf0-81ae-46eb-b332-7d7a1d86021d",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "InsufficientStorageClusterCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c96f17ac-1c3f-4bbb-8abf-6e11497cb91c",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidDBSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "10ac0519-c001-45e9-aa24-2100c8847d32",
          "body": "",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidDBClusterSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a8cc7b5d-3ff5-4136-8be5-86324a0c161b",
          "body": "",
          "latency": 0,
          "statusCode": 490,
          "label": "StorageQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "80dd793f-c8af-42df-a2f8-5c13d2044b28",
          "body": "",
          "latency": 0,
          "statusCode": 491,
          "label": "InvalidVPCNetworkStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "298e76d9-6f5f-4f53-8cc0-a5480a94f5da",
          "body": "",
          "latency": 0,
          "statusCode": 492,
          "label": "InvalidRestoreFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c878d974-94d5-49c7-a0e4-7614e98c1ff2",
          "body": "",
          "latency": 0,
          "statusCode": 493,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "409fd946-fad0-4ad6-a73e-d39a5f03bd81",
          "body": "",
          "latency": 0,
          "statusCode": 494,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "96723dfc-9250-4fa6-b929-131e637454cd",
          "body": "",
          "latency": 0,
          "statusCode": 495,
          "label": "OptionGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d3a0aa9e-73c1-4e00-a083-efb4e9d62398",
          "body": "",
          "latency": 0,
          "statusCode": 496,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6daaf486-6ba5-4508-8a08-87b723dc3402",
          "body": "",
          "latency": 0,
          "statusCode": 497,
          "label": "DBClusterParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d319bebb-1885-47a5-a52b-250c48302c8e",
      "documentation": "<p>Creates a new DB cluster from a DB snapshot or DB cluster snapshot.</p> <p>If a DB snapshot is specified, the target DB cluster is created from the source DB snapshot with a default configuration and default security group.</p> <p>If a DB cluster snapshot is specified, the target DB cluster is created from the source DB cluster restore point with the same configuration as the original source DB cluster, except that the new DB cluster is created with the default security group.</p>",
      "method": "post",
      "endpoint": "#Action=RestoreDBClusterFromSnapshot",
      "responses": [
        {
          "uuid": "e9acb4bc-1ecd-487d-a1da-64a432bd0060",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9d759956-e966-4edb-9a50-b239d90e8e9f",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d0d8fd68-2122-4456-ab7b-ccf569e45c9f",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBClusterQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eac40c8d-1900-4ce8-b40f-0c322535b7d3",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "StorageQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bf6d345a-dda5-484a-b53b-0e5fb23fcb96",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c7233384-f805-442f-8456-ffe63500ac8a",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "DBSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2e7f9039-303d-46c9-bee5-e5877252a779",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "DBClusterSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "816ae4f2-5209-4728-928e-633c02272b60",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "InsufficientDBClusterCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "76db23b2-eed8-4d62-8f04-84895d062ad2",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "InsufficientStorageClusterCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e1a6e842-6c5b-4ecf-95f4-2e803c71bea3",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidDBSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9c8cb032-11a7-4131-97c5-5a4c78b83289",
          "body": "",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidDBClusterSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "90762fd2-4beb-4e6f-94d7-750c3bb02551",
          "body": "",
          "latency": 0,
          "statusCode": 490,
          "label": "StorageQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "54735a51-3925-4d9b-9c4b-302da84f0632",
          "body": "",
          "latency": 0,
          "statusCode": 491,
          "label": "InvalidVPCNetworkStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bd07ed01-4cb8-4fa2-8cd6-b152565911be",
          "body": "",
          "latency": 0,
          "statusCode": 492,
          "label": "InvalidRestoreFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "802e2f0c-4c22-48db-b67f-d430b6a58f7f",
          "body": "",
          "latency": 0,
          "statusCode": 493,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "854a9ea4-a4a2-4663-8c51-d486dfb925fc",
          "body": "",
          "latency": 0,
          "statusCode": 494,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "77ce5bfc-5541-4198-8174-6051b400adce",
          "body": "",
          "latency": 0,
          "statusCode": 495,
          "label": "OptionGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "586b2608-10fb-4962-beee-ae3bbd10737f",
          "body": "",
          "latency": 0,
          "statusCode": 496,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8308aaf0-c508-4a40-96a8-509201a48ad6",
          "body": "",
          "latency": 0,
          "statusCode": 497,
          "label": "DBClusterParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c09ff7d6-6af7-477e-95b1-c1ddccb121fc",
      "documentation": "<p>Restores a DB cluster to an arbitrary point in time. Users can restore to any point in time before <code>LatestRestorableTime</code> for up to <code>BackupRetentionPeriod</code> days. The target DB cluster is created from the source DB cluster with the same configuration as the original DB cluster, except that the new DB cluster is created with the default DB security group.</p> <note> <p>This action only restores the DB cluster, not the DB instances for that DB cluster. You must invoke the <a>CreateDBInstance</a> action to create DB instances for the restored DB cluster, specifying the identifier of the restored DB cluster in <code>DBClusterIdentifier</code>. You can create DB instances only after the <code>RestoreDBClusterToPointInTime</code> action has completed and the DB cluster is available.</p> </note>",
      "method": "get",
      "endpoint": "#Action=RestoreDBClusterToPointInTime",
      "responses": [
        {
          "uuid": "957bdd73-d2e3-4504-b925-3d1b4f200e27",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ffe7249d-2652-425d-b24a-f9aff3d58246",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "98f7287c-04eb-41dc-80ff-4f40af1b5737",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d7dde9ec-bfc5-481c-8224-7f85c356f08b",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBClusterQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a1a7b5b1-93da-4300-97f8-888b64f92720",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBClusterSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9c0e180b-e9bb-462e-9de3-6bef3a728492",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5853ad68-76d6-4157-97e0-6b6fa82e352d",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "InsufficientDBClusterCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a3b19e1d-027f-4528-989b-94e77a30def0",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "InsufficientStorageClusterCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d6e2b277-1eff-45a7-9935-bb3d7c0b5abc",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidDBClusterSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d80e8ff8-4fc5-4a41-bbee-8d47a49629df",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "38c66d41-b6dd-4f4e-a8e0-9f0557087838",
          "body": "",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidDBSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f6632129-d349-4084-9053-b0cbbcda07fd",
          "body": "",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidRestoreFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "25bc4ff3-f774-4dcb-a2a5-20164420dc69",
          "body": "",
          "latency": 0,
          "statusCode": 491,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3db51f0c-30f0-4b81-ad2f-49680150a3ab",
          "body": "",
          "latency": 0,
          "statusCode": 492,
          "label": "InvalidVPCNetworkStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "effe02d2-7204-4948-a117-15224f2338ce",
          "body": "",
          "latency": 0,
          "statusCode": 493,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "98e096a9-0d38-409d-9d39-ffbb8591c6af",
          "body": "",
          "latency": 0,
          "statusCode": 494,
          "label": "OptionGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9acaee51-b8aa-4c28-93b0-ec971ff7ce68",
          "body": "",
          "latency": 0,
          "statusCode": 495,
          "label": "StorageQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e54646f0-8895-40d5-8bfc-e9abbdeced1f",
          "body": "",
          "latency": 0,
          "statusCode": 496,
          "label": "DBClusterParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f6af0d4c-08a6-45ac-97d6-f4417a5dcae9",
      "documentation": "<p>Restores a DB cluster to an arbitrary point in time. Users can restore to any point in time before <code>LatestRestorableTime</code> for up to <code>BackupRetentionPeriod</code> days. The target DB cluster is created from the source DB cluster with the same configuration as the original DB cluster, except that the new DB cluster is created with the default DB security group.</p> <note> <p>This action only restores the DB cluster, not the DB instances for that DB cluster. You must invoke the <a>CreateDBInstance</a> action to create DB instances for the restored DB cluster, specifying the identifier of the restored DB cluster in <code>DBClusterIdentifier</code>. You can create DB instances only after the <code>RestoreDBClusterToPointInTime</code> action has completed and the DB cluster is available.</p> </note>",
      "method": "post",
      "endpoint": "#Action=RestoreDBClusterToPointInTime",
      "responses": [
        {
          "uuid": "100fb370-07e9-47d0-9f41-ecb0ea18a127",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d5f95ad9-28ca-491d-80c4-0a168773e476",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "017ef36b-22cf-4a50-83bf-4548312fa3d2",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "86e10f3c-9a89-4100-97be-739c2fec4037",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBClusterQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "47133f6a-8d6c-47d0-85d9-445e1694daff",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBClusterSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "21ccd154-0a15-48f0-bd98-be8cc9b0526c",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "65ff9a14-6c64-4e38-a2dc-7df58daa6b65",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "InsufficientDBClusterCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "75bd7d22-a588-4042-8507-a0310f79b045",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "InsufficientStorageClusterCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b1ddefe1-1ebb-4d7f-bd84-b799b5311567",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidDBClusterSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "664bd1bb-7007-41fe-8950-06fde888ceb6",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "be01aebd-d9d3-4f00-9ccd-37eb2c987234",
          "body": "",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidDBSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "080a591b-1e00-426d-9c90-d155e6295ea5",
          "body": "",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidRestoreFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "643a51c9-22ea-4bf0-aed8-4fff40118b4c",
          "body": "",
          "latency": 0,
          "statusCode": 491,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a2c438ed-ee26-47a3-bac8-8a76ebf12f86",
          "body": "",
          "latency": 0,
          "statusCode": 492,
          "label": "InvalidVPCNetworkStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e60bbb3f-f0b5-4ab9-92f9-8b1a172e1289",
          "body": "",
          "latency": 0,
          "statusCode": 493,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0ae1f092-728a-4f23-a377-105c5545574a",
          "body": "",
          "latency": 0,
          "statusCode": 494,
          "label": "OptionGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5a2f3412-476a-4444-938a-1ad2fc56387b",
          "body": "",
          "latency": 0,
          "statusCode": 495,
          "label": "StorageQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4819065a-7405-48c2-882a-234c934ef999",
          "body": "",
          "latency": 0,
          "statusCode": 496,
          "label": "DBClusterParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "945a1870-a078-4b2a-8eb8-addbaca5818c",
      "documentation": "Starts an Amazon Neptune DB cluster that was stopped using the AWS console, the Amazon CLI stop-db-cluster command, or the StopDBCluster API.",
      "method": "get",
      "endpoint": "#Action=StartDBCluster",
      "responses": [
        {
          "uuid": "f23aaacb-bd70-4c1b-bac8-1e9f47ddc944",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "acd369f3-81cc-466a-a211-5ebfb286b720",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1e4bcd7b-42c4-4d7d-a567-97e6c6721f20",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2cf00b22-d1b6-4a48-9961-05d1710228ba",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "122a0a2e-d641-4bc9-94ea-a897b7baebf8",
      "documentation": "Starts an Amazon Neptune DB cluster that was stopped using the AWS console, the Amazon CLI stop-db-cluster command, or the StopDBCluster API.",
      "method": "post",
      "endpoint": "#Action=StartDBCluster",
      "responses": [
        {
          "uuid": "02dbf831-34e8-493d-b747-d4037f34640a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2d1160ff-42da-4ddf-b37b-b450fa08340e",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9be5f97b-7f0e-406d-b6a5-1a6f42589c92",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9c393fb7-1c4a-4414-b0e9-8bcc42b08f36",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7727e114-cc69-4d3b-89b6-ff3957ad332b",
      "documentation": "<p>Stops an Amazon Neptune DB cluster. When you stop a DB cluster, Neptune retains the DB cluster's metadata, including its endpoints and DB parameter groups.</p> <p>Neptune also retains the transaction logs so you can do a point-in-time restore if necessary.</p>",
      "method": "get",
      "endpoint": "#Action=StopDBCluster",
      "responses": [
        {
          "uuid": "1cf0e49f-fc89-45d0-956c-ebff11a1b7b2",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b7347005-d55e-4cfb-a066-6827df6a7b78",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "91eab6b6-9816-4c63-b87a-78ce97bc7a61",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "81fc8c8e-64b7-4d50-8b04-5ecc5ad14131",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c18ea79c-908d-4ad9-acf2-18a0b3784b22",
      "documentation": "<p>Stops an Amazon Neptune DB cluster. When you stop a DB cluster, Neptune retains the DB cluster's metadata, including its endpoints and DB parameter groups.</p> <p>Neptune also retains the transaction logs so you can do a point-in-time restore if necessary.</p>",
      "method": "post",
      "endpoint": "#Action=StopDBCluster",
      "responses": [
        {
          "uuid": "9e944243-3b52-4251-b0ed-a723d0b92abe",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2010de09-bf8a-4c8e-a078-67365ca9a9d0",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3d25280d-458b-4ca4-9d63-b932228e0f06",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ab1cc74d-a75b-4b13-b7bf-05a675589472",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}