{
  "uuid": "a4c84840-951b-47ca-80b6-92298aaf5789",
  "lastMigration": 19,
  "name": "smart-me",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "607fa7fa-173e-49f2-a642-2d24b747a3c2",
      "documentation": "Creates a Access Token to write on a Card (e.g. NFC)",
      "method": "put",
      "endpoint": "api/AccessToken",
      "responses": [
        {
          "uuid": "710bd158-2cfa-41a1-b614-6df801e65c2f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "80c401e8-424c-442a-a61a-d73663bb4cca",
      "documentation": "",
      "method": "get",
      "endpoint": "api/Account/login",
      "responses": [
        {
          "uuid": "4b1a9fc2-bce2-4129-b03f-adae8186776f",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2882ad88-ebc7-4d28-a48c-a131ada56ca6",
      "documentation": "",
      "method": "post",
      "endpoint": "api/Account/login",
      "responses": [
        {
          "uuid": "b6097d22-d84b-4f6d-8c82-17325dd9e148",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bc343eff-c876-4c48-8a29-da956a2e4b83",
      "documentation": "Set an action for the specified device.",
      "method": "post",
      "endpoint": "api/Actions",
      "responses": [
        {
          "uuid": "4b279795-fe03-4453-97ef-9bae1ed4d120",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No Content",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c8dea110-19f2-4113-a22e-b4b8c2b06dce",
      "documentation": "Gets all available Actions of a Device",
      "method": "get",
      "endpoint": "api/Actions/:id",
      "responses": [
        {
          "uuid": "dac7c291-8b4e-4167-b93f-1d375a4df5c7",
          "body": "[\n  {\n    \"ActionType\": \"{{oneOf (array 'OnOffAction' 'AnalogAction')}}\",\n    \"MaxValue\": {{faker 'random.float'}},\n    \"MinValue\": {{faker 'random.float'}},\n    \"Name\": \"\",\n    \"ObisCode\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "38bce8a3-6a7c-4120-99bc-65643364cf33",
      "documentation": "Gets the additional information (e.g. Firmware Version) about a device.",
      "method": "get",
      "endpoint": "api/AdditionalDeviceInformation/:id",
      "responses": [
        {
          "uuid": "16ed889b-3a27-4244-8557-7a47ca4c34db",
          "body": "{\n  \"AdditionalMeterSerialNumber\": \"\",\n  \"FirmwareVersion\": {{faker 'random.number'}},\n  \"HardwareVersion\": {{faker 'random.number'}},\n  \"ID\": \"\",\n  \"NetworkConnection\": \"\",\n  \"NetworkConnectionRSSI\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f99400d4-4b89-462a-bf88-a1d69b95390d",
      "documentation": "Gets all Custom Devices",
      "method": "get",
      "endpoint": "api/CustomDevice",
      "responses": [
        {
          "uuid": "acf77a32-c224-46fd-b615-2e7d4ba43048",
          "body": "[\n  {\n    \"Id\": \"\",\n    \"Name\": \"\",\n    \"Serial\": {{faker 'random.number'}},\n    \"ValueDate\": \"{{faker 'date.recent' 365}}\",\n    \"Values\": [\n      {\n        \"Name\": \"\",\n        \"Value\": {{faker 'random.float'}}\n      }\n    ]\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "95a3a673-ca03-4b03-af40-f76e4f4394d0",
      "documentation": "Creates or updates a Custom Device or updates it's values.",
      "method": "post",
      "endpoint": "api/CustomDevice",
      "responses": [
        {
          "uuid": "5375097b-bb4f-4460-9a92-7c09f52d672a",
          "body": "{\n  \"Id\": \"\",\n  \"Name\": \"\",\n  \"Serial\": {{faker 'random.number'}},\n  \"ValueDate\": \"{{faker 'date.recent' 365}}\",\n  \"Values\": [\n    {\n      \"Name\": \"\",\n      \"Value\": {{faker 'random.float'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b2a635d4-dcc7-4595-bf5c-656145c7c732",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "20142819-b680-4539-8304-baa11c3c3825",
      "documentation": "Gets a Custom Device by it's ID",
      "method": "get",
      "endpoint": "api/CustomDevice/:id",
      "responses": [
        {
          "uuid": "c6d0f98d-7a2d-44b0-ac20-f5a97e1035de",
          "body": "{\n  \"Id\": \"\",\n  \"Name\": \"\",\n  \"Serial\": {{faker 'random.number'}},\n  \"ValueDate\": \"{{faker 'date.recent' 365}}\",\n  \"Values\": [\n    {\n      \"Name\": \"\",\n      \"Value\": {{faker 'random.float'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c83598af-027b-4475-a26c-18b890bf2f73",
      "documentation": "Gets a Device by it's Serial Number. The Serial is the part before the \"-\".",
      "method": "get",
      "endpoint": "api/DeviceBySerial",
      "responses": [
        {
          "uuid": "4f69e980-731a-41ac-96d7-1bb11c27cb25",
          "body": "{\n  \"ActivePower\": {{faker 'random.float'}},\n  \"ActivePowerL1\": {{faker 'random.float'}},\n  \"ActivePowerL2\": {{faker 'random.float'}},\n  \"ActivePowerL3\": {{faker 'random.float'}},\n  \"ActivePowerUnit\": \"\",\n  \"ActiveTariff\": {{faker 'random.number'}},\n  \"AdditionalMeterSerialNumber\": \"\",\n  \"AnalogOutput1\": {{faker 'random.number'}},\n  \"AnalogOutput2\": {{faker 'random.number'}},\n  \"ChargingStationState\": \"{{oneOf (array 'Booting' 'ReadyNoCarConnected' 'ReadyCarConnected' 'StartedWaitForCar' 'Charging' 'Offline')}}\",\n  \"CounterReading\": {{faker 'random.float'}},\n  \"CounterReadingExport\": {{faker 'random.float'}},\n  \"CounterReadingImport\": {{faker 'random.float'}},\n  \"CounterReadingT1\": {{faker 'random.float'}},\n  \"CounterReadingT2\": {{faker 'random.float'}},\n  \"CounterReadingT3\": {{faker 'random.float'}},\n  \"CounterReadingT4\": {{faker 'random.float'}},\n  \"CounterReadingUnit\": \"\",\n  \"Current\": {{faker 'random.float'}},\n  \"CurrentL1\": {{faker 'random.float'}},\n  \"CurrentL2\": {{faker 'random.float'}},\n  \"CurrentL3\": {{faker 'random.float'}},\n  \"DeviceEnergyType\": \"{{oneOf (array 'MeterTypeUnknown' 'MeterTypeElectricity' 'MeterTypeWater' 'MeterTypeGas' 'MeterTypeHeat' 'MeterTypeHCA' 'MeterTypeAllMeters' 'MeterTypeTemperature' 'MeterTypeMBusGateway' 'MeterTypeRS485Gateway' 'MeterTypeCustomDevice' 'MeterTypeCompressedAir' 'MeterTypeSolarLog' 'MeterTypeVirtualMeter' 'MeterTypeWMBusGateway')}}\",\n  \"DigitalInput1\": {{faker 'random.boolean'}},\n  \"DigitalInput2\": {{faker 'random.boolean'}},\n  \"DigitalOutput1\": {{faker 'random.boolean'}},\n  \"DigitalOutput2\": {{faker 'random.boolean'}},\n  \"FamilyType\": \"{{oneOf (array 'MeterFamilyTypeUnknown' 'MeterFamilyTypeSmartMeConnectV1' 'MeterFamiliyTypeSmartMeMeter' 'MeterFamiliyTypeSmartMeMeterWithSwitch' 'MeterFamilyTypeMBusGatewayV1' 'MeterFamilyTypeRS485GatewayV1' 'MeterFamilyTypeKamstrupModule' 'MeterFamilyTypeSmartMe3PhaseMeter80A' 'MeterFamilyTypeSmartMe3PhaseMeter32A' 'MeterFamilyTypeSmartMe3PhaseTelstarTransformer' 'MeterFamilyTypeLandisGyrModule' 'MeterFamilyTypeFnnOpticalModule' 'MeterFamilyTypeSmartMe3PhaseTelstar80AWiFi' 'MeterFamilyTypeSmartMe3PhaseTelstar80AMobile' 'MeterFamilyTypeSmartMe1PhaseMeter80AV2WiFi' 'MeterFamilyTypeSmartMe1PhaseMeter32AV2WiFi' 'MeterFamilyTypeSmartMe1PhaseMeter80AGprs' 'MeterFamilyTypeSmartMe1PhaseMeter32AGprs' 'MeterFamilyTypeWMBusGatewayV1' 'MeterFamilyTypeSmartMe3PhaseTelstarTransformerMobile' 'MeterFamilyTypeMithralHallV1' 'MeterFamilyTypeRestApiMeter' 'MeterFamilyTypeVirtualBillingMeter')}}\",\n  \"FlowRate\": {{faker 'random.float'}},\n  \"Id\": \"\",\n  \"MeterSubType\": \"{{oneOf (array 'MeterSubTypeUnknown' 'MeterSubTypeCold' 'MeterSubTypeHeat' 'MeterSubTypeChargingStation' 'MeterSubTypeElectricity' 'MeterSubTypeWater' 'MeterSubTypeGas' 'MeterSubTypeElectricityHeat' 'MeterSubTypeTemperature' 'MeterSubTypeVirtualBattery')}}\",\n  \"Name\": \"\",\n  \"PowerFactor\": {{faker 'random.float'}},\n  \"PowerFactorL1\": {{faker 'random.float'}},\n  \"PowerFactorL2\": {{faker 'random.float'}},\n  \"PowerFactorL3\": {{faker 'random.float'}},\n  \"Serial\": {{faker 'random.number'}},\n  \"SwitchOn\": {{faker 'random.boolean'}},\n  \"SwitchPhaseL1On\": {{faker 'random.boolean'}},\n  \"SwitchPhaseL2On\": {{faker 'random.boolean'}},\n  \"SwitchPhaseL3On\": {{faker 'random.boolean'}},\n  \"Temperature\": {{faker 'random.float'}},\n  \"ValueDate\": \"{{faker 'date.recent' 365}}\",\n  \"Voltage\": {{faker 'random.float'}},\n  \"VoltageL1\": {{faker 'random.float'}},\n  \"VoltageL2\": {{faker 'random.float'}},\n  \"VoltageL3\": {{faker 'random.float'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "577cfe08-b0f2-4396-8d1f-2c352acc9381",
      "documentation": "Gets all Devices",
      "method": "get",
      "endpoint": "api/Devices",
      "responses": [
        {
          "uuid": "0bc2b8d9-f8be-41ce-a122-ae3c8a5ba67a",
          "body": "[\n  {\n    \"ActivePower\": {{faker 'random.float'}},\n    \"ActivePowerL1\": {{faker 'random.float'}},\n    \"ActivePowerL2\": {{faker 'random.float'}},\n    \"ActivePowerL3\": {{faker 'random.float'}},\n    \"ActivePowerUnit\": \"\",\n    \"ActiveTariff\": {{faker 'random.number'}},\n    \"AdditionalMeterSerialNumber\": \"\",\n    \"AnalogOutput1\": {{faker 'random.number'}},\n    \"AnalogOutput2\": {{faker 'random.number'}},\n    \"ChargingStationState\": \"{{oneOf (array 'Booting' 'ReadyNoCarConnected' 'ReadyCarConnected' 'StartedWaitForCar' 'Charging' 'Offline')}}\",\n    \"CounterReading\": {{faker 'random.float'}},\n    \"CounterReadingExport\": {{faker 'random.float'}},\n    \"CounterReadingImport\": {{faker 'random.float'}},\n    \"CounterReadingT1\": {{faker 'random.float'}},\n    \"CounterReadingT2\": {{faker 'random.float'}},\n    \"CounterReadingT3\": {{faker 'random.float'}},\n    \"CounterReadingT4\": {{faker 'random.float'}},\n    \"CounterReadingUnit\": \"\",\n    \"Current\": {{faker 'random.float'}},\n    \"CurrentL1\": {{faker 'random.float'}},\n    \"CurrentL2\": {{faker 'random.float'}},\n    \"CurrentL3\": {{faker 'random.float'}},\n    \"DeviceEnergyType\": \"{{oneOf (array 'MeterTypeUnknown' 'MeterTypeElectricity' 'MeterTypeWater' 'MeterTypeGas' 'MeterTypeHeat' 'MeterTypeHCA' 'MeterTypeAllMeters' 'MeterTypeTemperature' 'MeterTypeMBusGateway' 'MeterTypeRS485Gateway' 'MeterTypeCustomDevice' 'MeterTypeCompressedAir' 'MeterTypeSolarLog' 'MeterTypeVirtualMeter' 'MeterTypeWMBusGateway')}}\",\n    \"DigitalInput1\": {{faker 'random.boolean'}},\n    \"DigitalInput2\": {{faker 'random.boolean'}},\n    \"DigitalOutput1\": {{faker 'random.boolean'}},\n    \"DigitalOutput2\": {{faker 'random.boolean'}},\n    \"FamilyType\": \"{{oneOf (array 'MeterFamilyTypeUnknown' 'MeterFamilyTypeSmartMeConnectV1' 'MeterFamiliyTypeSmartMeMeter' 'MeterFamiliyTypeSmartMeMeterWithSwitch' 'MeterFamilyTypeMBusGatewayV1' 'MeterFamilyTypeRS485GatewayV1' 'MeterFamilyTypeKamstrupModule' 'MeterFamilyTypeSmartMe3PhaseMeter80A' 'MeterFamilyTypeSmartMe3PhaseMeter32A' 'MeterFamilyTypeSmartMe3PhaseTelstarTransformer' 'MeterFamilyTypeLandisGyrModule' 'MeterFamilyTypeFnnOpticalModule' 'MeterFamilyTypeSmartMe3PhaseTelstar80AWiFi' 'MeterFamilyTypeSmartMe3PhaseTelstar80AMobile' 'MeterFamilyTypeSmartMe1PhaseMeter80AV2WiFi' 'MeterFamilyTypeSmartMe1PhaseMeter32AV2WiFi' 'MeterFamilyTypeSmartMe1PhaseMeter80AGprs' 'MeterFamilyTypeSmartMe1PhaseMeter32AGprs' 'MeterFamilyTypeWMBusGatewayV1' 'MeterFamilyTypeSmartMe3PhaseTelstarTransformerMobile' 'MeterFamilyTypeMithralHallV1' 'MeterFamilyTypeRestApiMeter' 'MeterFamilyTypeVirtualBillingMeter')}}\",\n    \"FlowRate\": {{faker 'random.float'}},\n    \"Id\": \"\",\n    \"MeterSubType\": \"{{oneOf (array 'MeterSubTypeUnknown' 'MeterSubTypeCold' 'MeterSubTypeHeat' 'MeterSubTypeChargingStation' 'MeterSubTypeElectricity' 'MeterSubTypeWater' 'MeterSubTypeGas' 'MeterSubTypeElectricityHeat' 'MeterSubTypeTemperature' 'MeterSubTypeVirtualBattery')}}\",\n    \"Name\": \"\",\n    \"PowerFactor\": {{faker 'random.float'}},\n    \"PowerFactorL1\": {{faker 'random.float'}},\n    \"PowerFactorL2\": {{faker 'random.float'}},\n    \"PowerFactorL3\": {{faker 'random.float'}},\n    \"Serial\": {{faker 'random.number'}},\n    \"SwitchOn\": {{faker 'random.boolean'}},\n    \"SwitchPhaseL1On\": {{faker 'random.boolean'}},\n    \"SwitchPhaseL2On\": {{faker 'random.boolean'}},\n    \"SwitchPhaseL3On\": {{faker 'random.boolean'}},\n    \"Temperature\": {{faker 'random.float'}},\n    \"ValueDate\": \"{{faker 'date.recent' 365}}\",\n    \"Voltage\": {{faker 'random.float'}},\n    \"VoltageL1\": {{faker 'random.float'}},\n    \"VoltageL2\": {{faker 'random.float'}},\n    \"VoltageL3\": {{faker 'random.float'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "415af8f0-04ac-4c67-9f02-529ddf8abb9e",
      "documentation": "Creates or updates a Device or updates it's values.",
      "method": "post",
      "endpoint": "api/Devices",
      "responses": [
        {
          "uuid": "3561b0ce-a084-433c-8739-d253e8d4770b",
          "body": "{\n  \"ActivePower\": {{faker 'random.float'}},\n  \"CounterReading\": {{faker 'random.float'}},\n  \"CounterReadingExport\": {{faker 'random.float'}},\n  \"CounterReadingExportT1\": {{faker 'random.float'}},\n  \"CounterReadingExportT2\": {{faker 'random.float'}},\n  \"CounterReadingT1\": {{faker 'random.float'}},\n  \"CounterReadingT2\": {{faker 'random.float'}},\n  \"Current\": {{faker 'random.float'}},\n  \"CurrentL1\": {{faker 'random.float'}},\n  \"CurrentL2\": {{faker 'random.float'}},\n  \"CurrentL3\": {{faker 'random.float'}},\n  \"DeviceEnergyType\": \"{{oneOf (array 'MeterTypeUnknown' 'MeterTypeElectricity' 'MeterTypeWater' 'MeterTypeGas' 'MeterTypeHeat' 'MeterTypeHCA' 'MeterTypeAllMeters' 'MeterTypeTemperature' 'MeterTypeMBusGateway' 'MeterTypeRS485Gateway' 'MeterTypeCustomDevice' 'MeterTypeCompressedAir' 'MeterTypeSolarLog' 'MeterTypeVirtualMeter' 'MeterTypeWMBusGateway')}}\",\n  \"DigitalInput1\": {{faker 'random.boolean'}},\n  \"Id\": \"\",\n  \"MeterSubType\": \"{{oneOf (array 'MeterSubTypeUnknown' 'MeterSubTypeCold' 'MeterSubTypeHeat' 'MeterSubTypeChargingStation' 'MeterSubTypeElectricity' 'MeterSubTypeWater' 'MeterSubTypeGas' 'MeterSubTypeElectricityHeat' 'MeterSubTypeTemperature' 'MeterSubTypeVirtualBattery')}}\",\n  \"Name\": \"\",\n  \"PowerFactor\": {{faker 'random.float'}},\n  \"PowerFactorL1\": {{faker 'random.float'}},\n  \"PowerFactorL2\": {{faker 'random.float'}},\n  \"PowerFactorL3\": {{faker 'random.float'}},\n  \"Serial\": {{faker 'random.number'}},\n  \"Temperature\": {{faker 'random.float'}},\n  \"ValueDate\": \"{{faker 'date.recent' 365}}\",\n  \"Voltage\": {{faker 'random.float'}},\n  \"VoltageL1\": {{faker 'random.float'}},\n  \"VoltageL2\": {{faker 'random.float'}},\n  \"VoltageL3\": {{faker 'random.float'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e1e1fa62-1200-4208-a7c7-1970e84e4617",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "62c45fb2-37fd-42ea-a7bc-12e169ab413d",
      "documentation": "Gets a Device by it's ID",
      "method": "get",
      "endpoint": "api/Devices/:id",
      "responses": [
        {
          "uuid": "da0df3d8-0d2f-4bbf-b656-f29ffd564435",
          "body": "{\n  \"ActivePower\": {{faker 'random.float'}},\n  \"ActivePowerL1\": {{faker 'random.float'}},\n  \"ActivePowerL2\": {{faker 'random.float'}},\n  \"ActivePowerL3\": {{faker 'random.float'}},\n  \"ActivePowerUnit\": \"\",\n  \"ActiveTariff\": {{faker 'random.number'}},\n  \"AdditionalMeterSerialNumber\": \"\",\n  \"AnalogOutput1\": {{faker 'random.number'}},\n  \"AnalogOutput2\": {{faker 'random.number'}},\n  \"ChargingStationState\": \"{{oneOf (array 'Booting' 'ReadyNoCarConnected' 'ReadyCarConnected' 'StartedWaitForCar' 'Charging' 'Offline')}}\",\n  \"CounterReading\": {{faker 'random.float'}},\n  \"CounterReadingExport\": {{faker 'random.float'}},\n  \"CounterReadingImport\": {{faker 'random.float'}},\n  \"CounterReadingT1\": {{faker 'random.float'}},\n  \"CounterReadingT2\": {{faker 'random.float'}},\n  \"CounterReadingT3\": {{faker 'random.float'}},\n  \"CounterReadingT4\": {{faker 'random.float'}},\n  \"CounterReadingUnit\": \"\",\n  \"Current\": {{faker 'random.float'}},\n  \"CurrentL1\": {{faker 'random.float'}},\n  \"CurrentL2\": {{faker 'random.float'}},\n  \"CurrentL3\": {{faker 'random.float'}},\n  \"DeviceEnergyType\": \"{{oneOf (array 'MeterTypeUnknown' 'MeterTypeElectricity' 'MeterTypeWater' 'MeterTypeGas' 'MeterTypeHeat' 'MeterTypeHCA' 'MeterTypeAllMeters' 'MeterTypeTemperature' 'MeterTypeMBusGateway' 'MeterTypeRS485Gateway' 'MeterTypeCustomDevice' 'MeterTypeCompressedAir' 'MeterTypeSolarLog' 'MeterTypeVirtualMeter' 'MeterTypeWMBusGateway')}}\",\n  \"DigitalInput1\": {{faker 'random.boolean'}},\n  \"DigitalInput2\": {{faker 'random.boolean'}},\n  \"DigitalOutput1\": {{faker 'random.boolean'}},\n  \"DigitalOutput2\": {{faker 'random.boolean'}},\n  \"FamilyType\": \"{{oneOf (array 'MeterFamilyTypeUnknown' 'MeterFamilyTypeSmartMeConnectV1' 'MeterFamiliyTypeSmartMeMeter' 'MeterFamiliyTypeSmartMeMeterWithSwitch' 'MeterFamilyTypeMBusGatewayV1' 'MeterFamilyTypeRS485GatewayV1' 'MeterFamilyTypeKamstrupModule' 'MeterFamilyTypeSmartMe3PhaseMeter80A' 'MeterFamilyTypeSmartMe3PhaseMeter32A' 'MeterFamilyTypeSmartMe3PhaseTelstarTransformer' 'MeterFamilyTypeLandisGyrModule' 'MeterFamilyTypeFnnOpticalModule' 'MeterFamilyTypeSmartMe3PhaseTelstar80AWiFi' 'MeterFamilyTypeSmartMe3PhaseTelstar80AMobile' 'MeterFamilyTypeSmartMe1PhaseMeter80AV2WiFi' 'MeterFamilyTypeSmartMe1PhaseMeter32AV2WiFi' 'MeterFamilyTypeSmartMe1PhaseMeter80AGprs' 'MeterFamilyTypeSmartMe1PhaseMeter32AGprs' 'MeterFamilyTypeWMBusGatewayV1' 'MeterFamilyTypeSmartMe3PhaseTelstarTransformerMobile' 'MeterFamilyTypeMithralHallV1' 'MeterFamilyTypeRestApiMeter' 'MeterFamilyTypeVirtualBillingMeter')}}\",\n  \"FlowRate\": {{faker 'random.float'}},\n  \"Id\": \"\",\n  \"MeterSubType\": \"{{oneOf (array 'MeterSubTypeUnknown' 'MeterSubTypeCold' 'MeterSubTypeHeat' 'MeterSubTypeChargingStation' 'MeterSubTypeElectricity' 'MeterSubTypeWater' 'MeterSubTypeGas' 'MeterSubTypeElectricityHeat' 'MeterSubTypeTemperature' 'MeterSubTypeVirtualBattery')}}\",\n  \"Name\": \"\",\n  \"PowerFactor\": {{faker 'random.float'}},\n  \"PowerFactorL1\": {{faker 'random.float'}},\n  \"PowerFactorL2\": {{faker 'random.float'}},\n  \"PowerFactorL3\": {{faker 'random.float'}},\n  \"Serial\": {{faker 'random.number'}},\n  \"SwitchOn\": {{faker 'random.boolean'}},\n  \"SwitchPhaseL1On\": {{faker 'random.boolean'}},\n  \"SwitchPhaseL2On\": {{faker 'random.boolean'}},\n  \"SwitchPhaseL3On\": {{faker 'random.boolean'}},\n  \"Temperature\": {{faker 'random.float'}},\n  \"ValueDate\": \"{{faker 'date.recent' 365}}\",\n  \"Voltage\": {{faker 'random.float'}},\n  \"VoltageL1\": {{faker 'random.float'}},\n  \"VoltageL2\": {{faker 'random.float'}},\n  \"VoltageL3\": {{faker 'random.float'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c2003b7b-60f3-4f74-a898-c58e3d259d7d",
      "documentation": "Updates the On/Off Switch on a device. \r\n            For new implementations please use the \"actions\" command",
      "method": "put",
      "endpoint": "api/Devices/:id",
      "responses": [
        {
          "uuid": "5c999590-2087-48b6-8857-55796c5003dd",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a098f58e-cc06-47b7-b392-fd6d8e032f06",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "18404d15-7bce-42fe-b006-119e39d24c28",
          "body": "",
          "latency": 0,
          "statusCode": 405,
          "label": "MethodNotAllowed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "951519a7-7ccc-47e5-88a2-50e4c7958a5b",
      "documentation": "Gets all Devices for an Energy Type",
      "method": "get",
      "endpoint": "api/DevicesByEnergy",
      "responses": [
        {
          "uuid": "81d58a45-3c41-4d2f-b909-f6ec23d30bf6",
          "body": "[\n  {\n    \"ActivePower\": {{faker 'random.float'}},\n    \"ActivePowerL1\": {{faker 'random.float'}},\n    \"ActivePowerL2\": {{faker 'random.float'}},\n    \"ActivePowerL3\": {{faker 'random.float'}},\n    \"ActivePowerUnit\": \"\",\n    \"ActiveTariff\": {{faker 'random.number'}},\n    \"AdditionalMeterSerialNumber\": \"\",\n    \"AnalogOutput1\": {{faker 'random.number'}},\n    \"AnalogOutput2\": {{faker 'random.number'}},\n    \"ChargingStationState\": \"{{oneOf (array 'Booting' 'ReadyNoCarConnected' 'ReadyCarConnected' 'StartedWaitForCar' 'Charging' 'Offline')}}\",\n    \"CounterReading\": {{faker 'random.float'}},\n    \"CounterReadingExport\": {{faker 'random.float'}},\n    \"CounterReadingImport\": {{faker 'random.float'}},\n    \"CounterReadingT1\": {{faker 'random.float'}},\n    \"CounterReadingT2\": {{faker 'random.float'}},\n    \"CounterReadingT3\": {{faker 'random.float'}},\n    \"CounterReadingT4\": {{faker 'random.float'}},\n    \"CounterReadingUnit\": \"\",\n    \"Current\": {{faker 'random.float'}},\n    \"CurrentL1\": {{faker 'random.float'}},\n    \"CurrentL2\": {{faker 'random.float'}},\n    \"CurrentL3\": {{faker 'random.float'}},\n    \"DeviceEnergyType\": \"{{oneOf (array 'MeterTypeUnknown' 'MeterTypeElectricity' 'MeterTypeWater' 'MeterTypeGas' 'MeterTypeHeat' 'MeterTypeHCA' 'MeterTypeAllMeters' 'MeterTypeTemperature' 'MeterTypeMBusGateway' 'MeterTypeRS485Gateway' 'MeterTypeCustomDevice' 'MeterTypeCompressedAir' 'MeterTypeSolarLog' 'MeterTypeVirtualMeter' 'MeterTypeWMBusGateway')}}\",\n    \"DigitalInput1\": {{faker 'random.boolean'}},\n    \"DigitalInput2\": {{faker 'random.boolean'}},\n    \"DigitalOutput1\": {{faker 'random.boolean'}},\n    \"DigitalOutput2\": {{faker 'random.boolean'}},\n    \"FamilyType\": \"{{oneOf (array 'MeterFamilyTypeUnknown' 'MeterFamilyTypeSmartMeConnectV1' 'MeterFamiliyTypeSmartMeMeter' 'MeterFamiliyTypeSmartMeMeterWithSwitch' 'MeterFamilyTypeMBusGatewayV1' 'MeterFamilyTypeRS485GatewayV1' 'MeterFamilyTypeKamstrupModule' 'MeterFamilyTypeSmartMe3PhaseMeter80A' 'MeterFamilyTypeSmartMe3PhaseMeter32A' 'MeterFamilyTypeSmartMe3PhaseTelstarTransformer' 'MeterFamilyTypeLandisGyrModule' 'MeterFamilyTypeFnnOpticalModule' 'MeterFamilyTypeSmartMe3PhaseTelstar80AWiFi' 'MeterFamilyTypeSmartMe3PhaseTelstar80AMobile' 'MeterFamilyTypeSmartMe1PhaseMeter80AV2WiFi' 'MeterFamilyTypeSmartMe1PhaseMeter32AV2WiFi' 'MeterFamilyTypeSmartMe1PhaseMeter80AGprs' 'MeterFamilyTypeSmartMe1PhaseMeter32AGprs' 'MeterFamilyTypeWMBusGatewayV1' 'MeterFamilyTypeSmartMe3PhaseTelstarTransformerMobile' 'MeterFamilyTypeMithralHallV1' 'MeterFamilyTypeRestApiMeter' 'MeterFamilyTypeVirtualBillingMeter')}}\",\n    \"FlowRate\": {{faker 'random.float'}},\n    \"Id\": \"\",\n    \"MeterSubType\": \"{{oneOf (array 'MeterSubTypeUnknown' 'MeterSubTypeCold' 'MeterSubTypeHeat' 'MeterSubTypeChargingStation' 'MeterSubTypeElectricity' 'MeterSubTypeWater' 'MeterSubTypeGas' 'MeterSubTypeElectricityHeat' 'MeterSubTypeTemperature' 'MeterSubTypeVirtualBattery')}}\",\n    \"Name\": \"\",\n    \"PowerFactor\": {{faker 'random.float'}},\n    \"PowerFactorL1\": {{faker 'random.float'}},\n    \"PowerFactorL2\": {{faker 'random.float'}},\n    \"PowerFactorL3\": {{faker 'random.float'}},\n    \"Serial\": {{faker 'random.number'}},\n    \"SwitchOn\": {{faker 'random.boolean'}},\n    \"SwitchPhaseL1On\": {{faker 'random.boolean'}},\n    \"SwitchPhaseL2On\": {{faker 'random.boolean'}},\n    \"SwitchPhaseL3On\": {{faker 'random.boolean'}},\n    \"Temperature\": {{faker 'random.float'}},\n    \"ValueDate\": \"{{faker 'date.recent' 365}}\",\n    \"Voltage\": {{faker 'random.float'}},\n    \"VoltageL1\": {{faker 'random.float'}},\n    \"VoltageL2\": {{faker 'random.float'}},\n    \"VoltageL3\": {{faker 'random.float'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c4577e8e-8864-4057-a27c-aa3c8d37c7e8",
      "documentation": "Gets all Devices by it's Sub Type (e.g. E-Charging Station)",
      "method": "get",
      "endpoint": "api/DevicesBySubType",
      "responses": [
        {
          "uuid": "add27bb8-19bd-40df-86f5-bdfc2d3822da",
          "body": "[\n  {\n    \"ActivePower\": {{faker 'random.float'}},\n    \"ActivePowerL1\": {{faker 'random.float'}},\n    \"ActivePowerL2\": {{faker 'random.float'}},\n    \"ActivePowerL3\": {{faker 'random.float'}},\n    \"ActivePowerUnit\": \"\",\n    \"ActiveTariff\": {{faker 'random.number'}},\n    \"AdditionalMeterSerialNumber\": \"\",\n    \"AnalogOutput1\": {{faker 'random.number'}},\n    \"AnalogOutput2\": {{faker 'random.number'}},\n    \"ChargingStationState\": \"{{oneOf (array 'Booting' 'ReadyNoCarConnected' 'ReadyCarConnected' 'StartedWaitForCar' 'Charging' 'Offline')}}\",\n    \"CounterReading\": {{faker 'random.float'}},\n    \"CounterReadingExport\": {{faker 'random.float'}},\n    \"CounterReadingImport\": {{faker 'random.float'}},\n    \"CounterReadingT1\": {{faker 'random.float'}},\n    \"CounterReadingT2\": {{faker 'random.float'}},\n    \"CounterReadingT3\": {{faker 'random.float'}},\n    \"CounterReadingT4\": {{faker 'random.float'}},\n    \"CounterReadingUnit\": \"\",\n    \"Current\": {{faker 'random.float'}},\n    \"CurrentL1\": {{faker 'random.float'}},\n    \"CurrentL2\": {{faker 'random.float'}},\n    \"CurrentL3\": {{faker 'random.float'}},\n    \"DeviceEnergyType\": \"{{oneOf (array 'MeterTypeUnknown' 'MeterTypeElectricity' 'MeterTypeWater' 'MeterTypeGas' 'MeterTypeHeat' 'MeterTypeHCA' 'MeterTypeAllMeters' 'MeterTypeTemperature' 'MeterTypeMBusGateway' 'MeterTypeRS485Gateway' 'MeterTypeCustomDevice' 'MeterTypeCompressedAir' 'MeterTypeSolarLog' 'MeterTypeVirtualMeter' 'MeterTypeWMBusGateway')}}\",\n    \"DigitalInput1\": {{faker 'random.boolean'}},\n    \"DigitalInput2\": {{faker 'random.boolean'}},\n    \"DigitalOutput1\": {{faker 'random.boolean'}},\n    \"DigitalOutput2\": {{faker 'random.boolean'}},\n    \"FamilyType\": \"{{oneOf (array 'MeterFamilyTypeUnknown' 'MeterFamilyTypeSmartMeConnectV1' 'MeterFamiliyTypeSmartMeMeter' 'MeterFamiliyTypeSmartMeMeterWithSwitch' 'MeterFamilyTypeMBusGatewayV1' 'MeterFamilyTypeRS485GatewayV1' 'MeterFamilyTypeKamstrupModule' 'MeterFamilyTypeSmartMe3PhaseMeter80A' 'MeterFamilyTypeSmartMe3PhaseMeter32A' 'MeterFamilyTypeSmartMe3PhaseTelstarTransformer' 'MeterFamilyTypeLandisGyrModule' 'MeterFamilyTypeFnnOpticalModule' 'MeterFamilyTypeSmartMe3PhaseTelstar80AWiFi' 'MeterFamilyTypeSmartMe3PhaseTelstar80AMobile' 'MeterFamilyTypeSmartMe1PhaseMeter80AV2WiFi' 'MeterFamilyTypeSmartMe1PhaseMeter32AV2WiFi' 'MeterFamilyTypeSmartMe1PhaseMeter80AGprs' 'MeterFamilyTypeSmartMe1PhaseMeter32AGprs' 'MeterFamilyTypeWMBusGatewayV1' 'MeterFamilyTypeSmartMe3PhaseTelstarTransformerMobile' 'MeterFamilyTypeMithralHallV1' 'MeterFamilyTypeRestApiMeter' 'MeterFamilyTypeVirtualBillingMeter')}}\",\n    \"FlowRate\": {{faker 'random.float'}},\n    \"Id\": \"\",\n    \"MeterSubType\": \"{{oneOf (array 'MeterSubTypeUnknown' 'MeterSubTypeCold' 'MeterSubTypeHeat' 'MeterSubTypeChargingStation' 'MeterSubTypeElectricity' 'MeterSubTypeWater' 'MeterSubTypeGas' 'MeterSubTypeElectricityHeat' 'MeterSubTypeTemperature' 'MeterSubTypeVirtualBattery')}}\",\n    \"Name\": \"\",\n    \"PowerFactor\": {{faker 'random.float'}},\n    \"PowerFactorL1\": {{faker 'random.float'}},\n    \"PowerFactorL2\": {{faker 'random.float'}},\n    \"PowerFactorL3\": {{faker 'random.float'}},\n    \"Serial\": {{faker 'random.number'}},\n    \"SwitchOn\": {{faker 'random.boolean'}},\n    \"SwitchPhaseL1On\": {{faker 'random.boolean'}},\n    \"SwitchPhaseL2On\": {{faker 'random.boolean'}},\n    \"SwitchPhaseL3On\": {{faker 'random.boolean'}},\n    \"Temperature\": {{faker 'random.float'}},\n    \"ValueDate\": \"{{faker 'date.recent' 365}}\",\n    \"Voltage\": {{faker 'random.float'}},\n    \"VoltageL1\": {{faker 'random.float'}},\n    \"VoltageL2\": {{faker 'random.float'}},\n    \"VoltageL3\": {{faker 'random.float'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "af28f936-13fd-4aca-8d4d-b0c5f264e5fb",
      "documentation": "Force a device to send the data every second (if supported). This for about 30s.\r\n            Don't use this call to force a device to send the data every second for a longer time.",
      "method": "get",
      "endpoint": "api/FastSendDeviceValues/:id",
      "responses": [
        {
          "uuid": "143975fa-047d-47be-bd2c-cbd93f790c69",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No Content",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4003f43d-abb4-4cb1-b28e-79b810abc90b",
      "documentation": "Gets the Values for a folder or a meter",
      "method": "get",
      "endpoint": "api/Folder/:id",
      "responses": [
        {
          "uuid": "ba3870c5-43f7-4b64-ba0d-10e416337c9e",
          "body": "{\n  \"ElectricityCounterValue\": {{faker 'random.float'}},\n  \"ElectricityPower\": {{faker 'random.float'}},\n  \"GasCounterValue\": {{faker 'random.float'}},\n  \"GasFlowRate\": {{faker 'random.float'}},\n  \"HeatCounterValue\": {{faker 'random.float'}},\n  \"HeatPower\": {{faker 'random.float'}},\n  \"WaterCounterValue\": {{faker 'random.float'}},\n  \"WaterFlowRate\": {{faker 'random.float'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3faabf96-f487-40dd-95a1-51a071d4c91e",
      "documentation": "Gets the folder menu items (each item might contain child items)",
      "method": "get",
      "endpoint": "api/FolderMenu",
      "responses": [
        {
          "uuid": "2dfcf891-2ecf-4ec8-8bb7-cc3acdd9a9e4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1c4f4059-548f-4cad-a167-6bc4454726d4",
      "documentation": "Creates and updates the folder menu items",
      "method": "post",
      "endpoint": "api/FolderMenu",
      "responses": [
        {
          "uuid": "637d0132-0aac-442d-a440-ab120eee30ae",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No Content",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "04af1bb3-2cf3-461a-aee4-e54237b22e9f",
      "documentation": "A method returning HTTP 200 OK when queried.\r\n            It is used by Kubernetes probes to determine whether the app is healthy.",
      "method": "get",
      "endpoint": "api/Health",
      "responses": [
        {
          "uuid": "39104308-83ee-4ea0-86df-48b0d0525fda",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c456ac7f-5292-4b00-aacc-94a5e0d46cd0",
      "documentation": "M-BUS API: Adds data of a M-BUS Meter to the smart-me Cloud.\r\n            Just send us the M-BUS Telegram (RSP_UD) and we will do the Rest.",
      "method": "post",
      "endpoint": "api/MBus",
      "responses": [
        {
          "uuid": "010b1727-8d3e-4776-a182-2df3aeb63760",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4fbc1d36-a99a-4621-8cdd-1e11cf68d5d4",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "BadRequest",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "955e0875-b766-4d34-b6e1-4d9654821f39",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c9943f30-128a-4f6e-808d-337a85ed8fab",
      "documentation": "Sets the Name of a Meter or a Folder",
      "method": "post",
      "endpoint": "api/MeterFolderInformation",
      "responses": [
        {
          "uuid": "86b3c3e2-078f-4844-989a-fae03114394d",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No Content",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b5aab331-58c3-4b2f-8990-405a6516d2a0",
      "documentation": "Beta: Gets the General Information for a Meter or a Folder",
      "method": "get",
      "endpoint": "api/MeterFolderInformation/:id",
      "responses": [
        {
          "uuid": "5e93839d-2a99-497f-867f-316636f884d0",
          "body": "{\n  \"CommunicationModuleFirmwareVersion\": {{faker 'random.number'}},\n  \"CommunicationModuleHardwareVersion\": {{faker 'random.number'}},\n  \"FirmwareVersion\": {{faker 'random.number'}},\n  \"HardwareVersion\": {{faker 'random.number'}},\n  \"InputInformations\": [\n    {\n      \"Name\": \"\",\n      \"Number\": {{faker 'random.number'}}\n    }\n  ],\n  \"IsFolder\": {{faker 'random.boolean'}},\n  \"Name\": \"\",\n  \"OutputInformations\": [\n    {\n      \"ActionType\": \"{{oneOf (array 'OnOffAction' 'AnalogAction')}}\",\n      \"Name\": \"\",\n      \"Number\": {{faker 'random.number'}},\n      \"ObisCode\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f81c1c40-8b3e-4d8c-9d39-fc1a6afb7697",
      "documentation": "Gets the Values for a Meter at a given Date. \r\n            The first Value found before the given Date is returned.",
      "method": "get",
      "endpoint": "api/MeterValues/:id",
      "responses": [
        {
          "uuid": "175b6ab9-71c2-4146-a399-d54a909c4793",
          "body": "{\n  \"CounterReading\": {{faker 'random.float'}},\n  \"CounterReadingExport\": {{faker 'random.float'}},\n  \"CounterReadingExportT1\": {{faker 'random.float'}},\n  \"CounterReadingExportT2\": {{faker 'random.float'}},\n  \"CounterReadingExportT3\": {{faker 'random.float'}},\n  \"CounterReadingExportT4\": {{faker 'random.float'}},\n  \"CounterReadingImport\": {{faker 'random.float'}},\n  \"CounterReadingImportT1\": {{faker 'random.float'}},\n  \"CounterReadingImportT2\": {{faker 'random.float'}},\n  \"CounterReadingImportT3\": {{faker 'random.float'}},\n  \"CounterReadingImportT4\": {{faker 'random.float'}},\n  \"CounterReadingT1\": {{faker 'random.float'}},\n  \"CounterReadingT2\": {{faker 'random.float'}},\n  \"CounterReadingT3\": {{faker 'random.float'}},\n  \"CounterReadingT4\": {{faker 'random.float'}},\n  \"CounterReadingUnit\": \"\",\n  \"Date\": \"{{faker 'date.recent' 365}}\",\n  \"Id\": \"\",\n  \"Serial\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6a081f71-6696-4bf2-973c-7b2e77fb858e",
      "documentation": "Gets all registrations for the Realtime API.",
      "method": "get",
      "endpoint": "api/RegisterForRealtimeApi",
      "responses": [
        {
          "uuid": "b1695385-b0ff-40f7-b49f-ecf6c0d99d3a",
          "body": "[\n  {\n    \"ApiUrl\": \"\",\n    \"BasicAuthPassword\": \"\",\n    \"BasicAuthUsername\": \"\",\n    \"Id\": \"\",\n    \"MeterId\": \"\",\n    \"RegistrationType\": \"{{oneOf (array 'Disabled' 'SingleMeterRegistration' 'UserRegistration')}}\",\n    \"SerialNumber\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4491c621-6a61-431f-a923-f9fe6c9047e5",
      "documentation": "Creates a new registration for the realtime API. The Realtime API sends you the data of the registred devices as soon as we have them on the cloud.\r\n             More Information about the realtime API: https://www.smart-me.com/Description/api/realtimeapi.aspx",
      "method": "post",
      "endpoint": "api/RegisterForRealtimeApi",
      "responses": [
        {
          "uuid": "8623fea7-5abe-4ec1-a63b-4eecc33289c8",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No Content",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6fcff685-66c8-4f46-802f-0bd12cd9aeee",
      "documentation": "Deletes a realtime API registration.",
      "method": "delete",
      "endpoint": "api/RegisterForRealtimeApi/:id",
      "responses": [
        {
          "uuid": "4817da68-b15e-4f54-9748-8ddf2c633030",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No Content",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e6f49793-167b-4eef-9a9b-cd32e5398d93",
      "documentation": "Sets the configuration of a smart-me device. The device needs to be online.",
      "method": "post",
      "endpoint": "api/SmartMeDeviceConfiguration",
      "responses": [
        {
          "uuid": "3bb548ce-f926-4e8a-8154-60b7d8ee1648",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No Content",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "880036b3-a043-4b34-a3af-2cbc2aa51bd5",
      "documentation": "Gets the configuration of a smart-me device.",
      "method": "get",
      "endpoint": "api/SmartMeDeviceConfiguration/:id",
      "responses": [
        {
          "uuid": "f9404520-5eac-480a-bf09-f73453c47c5b",
          "body": "{\n  \"DeviceEncryptionKey\": \"\",\n  \"DevicePinCode\": \"\",\n  \"DnsUpdateState\": \"{{oneOf (array 'NoUpdate' 'DnsUpdatePublicIp' 'DnsUpdateInternalIp')}}\",\n  \"EnableModbusTcp\": {{faker 'random.boolean'}},\n  \"Id\": \"\",\n  \"InputConfiguration\": [\n    {\n      \"Name\": \"\",\n      \"Number\": {{faker 'random.number'}},\n      \"OffText\": \"\",\n      \"OnText\": \"\",\n      \"Type\": \"{{oneOf (array 'TariffInput' 'DigitalInput')}}\"\n    }\n  ],\n  \"OutputConfiguration\": [\n    {\n      \"DigitalOutputNoConnectionAction\": \"{{oneOf (array 'Nothing' 'TurnOff' 'TurnOn' 'SetPwmValue')}}\",\n      \"Name\": \"\",\n      \"Number\": {{faker 'random.number'}},\n      \"S0PulseValue\": \"{{oneOf (array 'PulseValue1000Kwh' 'PulseValue10000Kwh')}}\",\n      \"Type\": \"{{oneOf (array 'ImpulseOutputActiveEnergy' 'ImpulseOutputActiveEnergyImport' 'ImpulseOutputActiveEnergyExport' 'ImpulseOutputReactiveEnergy' 'DigitalOutput' 'AnalogPwmSignalOutput' 'Disabled')}}\"\n    }\n  ],\n  \"ShowReactiveEnergy\": {{faker 'random.boolean'}},\n  \"SwitchConfiguration\": [\n    {\n      \"CanSwitchOff\": {{faker 'random.boolean'}},\n      \"Number\": {{faker 'random.number'}}\n    }\n  ],\n  \"UploadInterval\": \"{{oneOf (array 'UploadInterval_1s' 'UploadInterval_5s' 'UploadInterval_10s' 'UploadInterval_30s' 'UploadInterval_60s' 'UploadInterval_5min' 'UploadInterval_15min' 'UploadInterval_30min' 'UploadInterval_60min' 'UploadInterval_6h' 'UploadInterval_12h' 'UploadInterval_24h')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dd6088e8-2b35-4f95-b407-e8ae83c12b83",
      "documentation": "Creates or updates a subuser.\r\n            To create a new user set no ID (empty)",
      "method": "post",
      "endpoint": "api/SubUser",
      "responses": [
        {
          "uuid": "e0ebae71-deec-4673-803c-c9faff72eb8b",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No Content",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a5701c6a-8231-4b19-b213-4106441d5c18",
      "documentation": "Delete a subuser",
      "method": "delete",
      "endpoint": "api/SubUser/:id",
      "responses": [
        {
          "uuid": "f9c9228b-22af-4edc-9008-00f842bfce21",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No Content",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a27d3000-05d1-41ce-abdc-4f3d416336a1",
      "documentation": "Get a sub user. The user must be assigend to the user that makes this call.",
      "method": "get",
      "endpoint": "api/SubUser/:id",
      "responses": [
        {
          "uuid": "bd5d4953-a8ab-4cca-bcd3-371631e390de",
          "body": "{\n  \"AccessEndDate\": \"{{faker 'date.recent' 365}}\",\n  \"AccessTimeStartDate\": \"{{faker 'date.recent' 365}}\",\n  \"Email\": \"\",\n  \"Id\": \"\",\n  \"NewPassword\": \"\",\n  \"PermissionLevel\": \"{{oneOf (array 'SelectedFolderAndSubfoldersMeters' 'SelectedFolderOnly')}}\",\n  \"Username\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "91b784d8-6eea-4f1a-8f50-6505725bfa5a",
      "documentation": "Gets the informations for the user.",
      "method": "get",
      "endpoint": "api/User",
      "responses": [
        {
          "uuid": "f48c8f68-02c9-4ca0-b8f8-4f8306e51d82",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dcd70b35-9800-458f-8848-3726679ff7fa",
      "documentation": "Gets all (last) values of a device",
      "method": "get",
      "endpoint": "api/Values/:id",
      "responses": [
        {
          "uuid": "e5a2b510-2fc3-4d94-ad36-600d5ced3898",
          "body": "{\n  \"Date\": \"{{faker 'date.recent' 365}}\",\n  \"DeviceId\": \"\",\n  \"Values\": [\n    {\n      \"Obis\": \"\",\n      \"Value\": {{faker 'random.float'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "862de19d-9327-4503-a70d-104b933182f7",
      "documentation": "Gets all (last) values of a device\r\n            The first Value found before the given Date is returned.",
      "method": "get",
      "endpoint": "api/ValuesInPast/:id",
      "responses": [
        {
          "uuid": "2a69464e-98c3-4814-9d86-90c875be9787",
          "body": "{\n  \"Date\": \"{{faker 'date.recent' 365}}\",\n  \"DeviceId\": \"\",\n  \"Values\": [\n    {\n      \"Obis\": \"\",\n      \"Value\": {{faker 'random.float'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "630a32bf-6f7d-4d60-92eb-cbcffafeae7f",
      "documentation": "Gets multiple values of a device. This call needs a smart-me professional licence.",
      "method": "get",
      "endpoint": "api/ValuesInPastMultiple/:id",
      "responses": [
        {
          "uuid": "f6a379e8-ecd6-4085-9343-a3f11e3f3366",
          "body": "[\n  {\n    \"Date\": \"{{faker 'date.recent' 365}}\",\n    \"DeviceId\": \"\",\n    \"Values\": [\n      {\n        \"Obis\": \"\",\n        \"Value\": {{faker 'random.float'}}\n      }\n    ]\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2f99f389-1992-47d3-a990-7295d89ba66f",
      "documentation": "Beta: Gets all active virtual meters",
      "method": "get",
      "endpoint": "api/VirtualBillingMeterActive",
      "responses": [
        {
          "uuid": "ed206c14-191b-49ec-acaa-dc2845e50525",
          "body": "[\n  {\n    \"ActivePower\": {{faker 'random.float'}},\n    \"ActivePowerL1\": {{faker 'random.float'}},\n    \"ActivePowerL2\": {{faker 'random.float'}},\n    \"ActivePowerL3\": {{faker 'random.float'}},\n    \"ActivePowerUnit\": \"\",\n    \"ActiveTariff\": {{faker 'random.number'}},\n    \"AdditionalMeterSerialNumber\": \"\",\n    \"AnalogOutput1\": {{faker 'random.number'}},\n    \"AnalogOutput2\": {{faker 'random.number'}},\n    \"ChargingStationState\": \"{{oneOf (array 'Booting' 'ReadyNoCarConnected' 'ReadyCarConnected' 'StartedWaitForCar' 'Charging' 'Offline')}}\",\n    \"CounterReading\": {{faker 'random.float'}},\n    \"CounterReadingExport\": {{faker 'random.float'}},\n    \"CounterReadingImport\": {{faker 'random.float'}},\n    \"CounterReadingT1\": {{faker 'random.float'}},\n    \"CounterReadingT2\": {{faker 'random.float'}},\n    \"CounterReadingT3\": {{faker 'random.float'}},\n    \"CounterReadingT4\": {{faker 'random.float'}},\n    \"CounterReadingUnit\": \"\",\n    \"Current\": {{faker 'random.float'}},\n    \"CurrentL1\": {{faker 'random.float'}},\n    \"CurrentL2\": {{faker 'random.float'}},\n    \"CurrentL3\": {{faker 'random.float'}},\n    \"DeviceEnergyType\": \"{{oneOf (array 'MeterTypeUnknown' 'MeterTypeElectricity' 'MeterTypeWater' 'MeterTypeGas' 'MeterTypeHeat' 'MeterTypeHCA' 'MeterTypeAllMeters' 'MeterTypeTemperature' 'MeterTypeMBusGateway' 'MeterTypeRS485Gateway' 'MeterTypeCustomDevice' 'MeterTypeCompressedAir' 'MeterTypeSolarLog' 'MeterTypeVirtualMeter' 'MeterTypeWMBusGateway')}}\",\n    \"DigitalInput1\": {{faker 'random.boolean'}},\n    \"DigitalInput2\": {{faker 'random.boolean'}},\n    \"DigitalOutput1\": {{faker 'random.boolean'}},\n    \"DigitalOutput2\": {{faker 'random.boolean'}},\n    \"FamilyType\": \"{{oneOf (array 'MeterFamilyTypeUnknown' 'MeterFamilyTypeSmartMeConnectV1' 'MeterFamiliyTypeSmartMeMeter' 'MeterFamiliyTypeSmartMeMeterWithSwitch' 'MeterFamilyTypeMBusGatewayV1' 'MeterFamilyTypeRS485GatewayV1' 'MeterFamilyTypeKamstrupModule' 'MeterFamilyTypeSmartMe3PhaseMeter80A' 'MeterFamilyTypeSmartMe3PhaseMeter32A' 'MeterFamilyTypeSmartMe3PhaseTelstarTransformer' 'MeterFamilyTypeLandisGyrModule' 'MeterFamilyTypeFnnOpticalModule' 'MeterFamilyTypeSmartMe3PhaseTelstar80AWiFi' 'MeterFamilyTypeSmartMe3PhaseTelstar80AMobile' 'MeterFamilyTypeSmartMe1PhaseMeter80AV2WiFi' 'MeterFamilyTypeSmartMe1PhaseMeter32AV2WiFi' 'MeterFamilyTypeSmartMe1PhaseMeter80AGprs' 'MeterFamilyTypeSmartMe1PhaseMeter32AGprs' 'MeterFamilyTypeWMBusGatewayV1' 'MeterFamilyTypeSmartMe3PhaseTelstarTransformerMobile' 'MeterFamilyTypeMithralHallV1' 'MeterFamilyTypeRestApiMeter' 'MeterFamilyTypeVirtualBillingMeter')}}\",\n    \"FlowRate\": {{faker 'random.float'}},\n    \"Id\": \"\",\n    \"MeterSubType\": \"{{oneOf (array 'MeterSubTypeUnknown' 'MeterSubTypeCold' 'MeterSubTypeHeat' 'MeterSubTypeChargingStation' 'MeterSubTypeElectricity' 'MeterSubTypeWater' 'MeterSubTypeGas' 'MeterSubTypeElectricityHeat' 'MeterSubTypeTemperature' 'MeterSubTypeVirtualBattery')}}\",\n    \"Name\": \"\",\n    \"PowerFactor\": {{faker 'random.float'}},\n    \"PowerFactorL1\": {{faker 'random.float'}},\n    \"PowerFactorL2\": {{faker 'random.float'}},\n    \"PowerFactorL3\": {{faker 'random.float'}},\n    \"Serial\": {{faker 'random.number'}},\n    \"SwitchOn\": {{faker 'random.boolean'}},\n    \"SwitchPhaseL1On\": {{faker 'random.boolean'}},\n    \"SwitchPhaseL2On\": {{faker 'random.boolean'}},\n    \"SwitchPhaseL3On\": {{faker 'random.boolean'}},\n    \"Temperature\": {{faker 'random.float'}},\n    \"ValueDate\": \"{{faker 'date.recent' 365}}\",\n    \"Voltage\": {{faker 'random.float'}},\n    \"VoltageL1\": {{faker 'random.float'}},\n    \"VoltageL2\": {{faker 'random.float'}},\n    \"VoltageL3\": {{faker 'random.float'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9ad79fc5-3ede-4887-88cb-acd5b3c80900",
      "documentation": "Beta: Virtual Meter API: Activates a Meter and add the Consumption to a Virtual Meter assosiated with the User.",
      "method": "post",
      "endpoint": "api/VirtualBillingMeterActive",
      "responses": [
        {
          "uuid": "9ad74f04-3a64-4983-a676-d758ea2fa9ae",
          "body": "{\n  \"ActivePower\": {{faker 'random.float'}},\n  \"ActivePowerL1\": {{faker 'random.float'}},\n  \"ActivePowerL2\": {{faker 'random.float'}},\n  \"ActivePowerL3\": {{faker 'random.float'}},\n  \"ActivePowerUnit\": \"\",\n  \"ActiveTariff\": {{faker 'random.number'}},\n  \"AdditionalMeterSerialNumber\": \"\",\n  \"AnalogOutput1\": {{faker 'random.number'}},\n  \"AnalogOutput2\": {{faker 'random.number'}},\n  \"ChargingStationState\": \"{{oneOf (array 'Booting' 'ReadyNoCarConnected' 'ReadyCarConnected' 'StartedWaitForCar' 'Charging' 'Offline')}}\",\n  \"CounterReading\": {{faker 'random.float'}},\n  \"CounterReadingExport\": {{faker 'random.float'}},\n  \"CounterReadingImport\": {{faker 'random.float'}},\n  \"CounterReadingT1\": {{faker 'random.float'}},\n  \"CounterReadingT2\": {{faker 'random.float'}},\n  \"CounterReadingT3\": {{faker 'random.float'}},\n  \"CounterReadingT4\": {{faker 'random.float'}},\n  \"CounterReadingUnit\": \"\",\n  \"Current\": {{faker 'random.float'}},\n  \"CurrentL1\": {{faker 'random.float'}},\n  \"CurrentL2\": {{faker 'random.float'}},\n  \"CurrentL3\": {{faker 'random.float'}},\n  \"DeviceEnergyType\": \"{{oneOf (array 'MeterTypeUnknown' 'MeterTypeElectricity' 'MeterTypeWater' 'MeterTypeGas' 'MeterTypeHeat' 'MeterTypeHCA' 'MeterTypeAllMeters' 'MeterTypeTemperature' 'MeterTypeMBusGateway' 'MeterTypeRS485Gateway' 'MeterTypeCustomDevice' 'MeterTypeCompressedAir' 'MeterTypeSolarLog' 'MeterTypeVirtualMeter' 'MeterTypeWMBusGateway')}}\",\n  \"DigitalInput1\": {{faker 'random.boolean'}},\n  \"DigitalInput2\": {{faker 'random.boolean'}},\n  \"DigitalOutput1\": {{faker 'random.boolean'}},\n  \"DigitalOutput2\": {{faker 'random.boolean'}},\n  \"FamilyType\": \"{{oneOf (array 'MeterFamilyTypeUnknown' 'MeterFamilyTypeSmartMeConnectV1' 'MeterFamiliyTypeSmartMeMeter' 'MeterFamiliyTypeSmartMeMeterWithSwitch' 'MeterFamilyTypeMBusGatewayV1' 'MeterFamilyTypeRS485GatewayV1' 'MeterFamilyTypeKamstrupModule' 'MeterFamilyTypeSmartMe3PhaseMeter80A' 'MeterFamilyTypeSmartMe3PhaseMeter32A' 'MeterFamilyTypeSmartMe3PhaseTelstarTransformer' 'MeterFamilyTypeLandisGyrModule' 'MeterFamilyTypeFnnOpticalModule' 'MeterFamilyTypeSmartMe3PhaseTelstar80AWiFi' 'MeterFamilyTypeSmartMe3PhaseTelstar80AMobile' 'MeterFamilyTypeSmartMe1PhaseMeter80AV2WiFi' 'MeterFamilyTypeSmartMe1PhaseMeter32AV2WiFi' 'MeterFamilyTypeSmartMe1PhaseMeter80AGprs' 'MeterFamilyTypeSmartMe1PhaseMeter32AGprs' 'MeterFamilyTypeWMBusGatewayV1' 'MeterFamilyTypeSmartMe3PhaseTelstarTransformerMobile' 'MeterFamilyTypeMithralHallV1' 'MeterFamilyTypeRestApiMeter' 'MeterFamilyTypeVirtualBillingMeter')}}\",\n  \"FlowRate\": {{faker 'random.float'}},\n  \"Id\": \"\",\n  \"MeterSubType\": \"{{oneOf (array 'MeterSubTypeUnknown' 'MeterSubTypeCold' 'MeterSubTypeHeat' 'MeterSubTypeChargingStation' 'MeterSubTypeElectricity' 'MeterSubTypeWater' 'MeterSubTypeGas' 'MeterSubTypeElectricityHeat' 'MeterSubTypeTemperature' 'MeterSubTypeVirtualBattery')}}\",\n  \"Name\": \"\",\n  \"PowerFactor\": {{faker 'random.float'}},\n  \"PowerFactorL1\": {{faker 'random.float'}},\n  \"PowerFactorL2\": {{faker 'random.float'}},\n  \"PowerFactorL3\": {{faker 'random.float'}},\n  \"Serial\": {{faker 'random.number'}},\n  \"SwitchOn\": {{faker 'random.boolean'}},\n  \"SwitchPhaseL1On\": {{faker 'random.boolean'}},\n  \"SwitchPhaseL2On\": {{faker 'random.boolean'}},\n  \"SwitchPhaseL3On\": {{faker 'random.boolean'}},\n  \"Temperature\": {{faker 'random.float'}},\n  \"ValueDate\": \"{{faker 'date.recent' 365}}\",\n  \"Voltage\": {{faker 'random.float'}},\n  \"VoltageL1\": {{faker 'random.float'}},\n  \"VoltageL2\": {{faker 'random.float'}},\n  \"VoltageL3\": {{faker 'random.float'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "47bb237d-3dab-4a4c-b98b-363b6cd1ada5",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "BadRequest",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c63b0fe4-059b-4f29-86b3-bc9300e22b2a",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f3802af1-74dc-49d3-a34f-a4ae826e4b5b",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "71be83bc-a530-40a7-a1d1-5aac59c16096",
      "documentation": "Beta: Virtual Meter API: Deactivates a Virtual Meter.",
      "method": "post",
      "endpoint": "api/VirtualBillingMeterDeactivate",
      "responses": [
        {
          "uuid": "be38f926-3202-4189-8dc9-15c0c23eece1",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eae9077d-6430-4c52-b302-bb97d7815881",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "BadRequest",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c313bf52-3cc0-480c-9427-7b88b9c08478",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "253d4f61-8f74-48a3-a298-373fb9bec638",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "103de49e-61eb-4b1a-8f04-a268a7c531aa",
      "documentation": "Beta: Gets all Meters available to activate as a Virtual Meter.",
      "method": "get",
      "endpoint": "api/VirtualBillingMeters",
      "responses": [
        {
          "uuid": "c034415a-50ab-4371-804b-0896b1a7470c",
          "body": "[\n  {\n    \"ActivePower\": {{faker 'random.float'}},\n    \"ActivePowerL1\": {{faker 'random.float'}},\n    \"ActivePowerL2\": {{faker 'random.float'}},\n    \"ActivePowerL3\": {{faker 'random.float'}},\n    \"ActivePowerUnit\": \"\",\n    \"ActiveTariff\": {{faker 'random.number'}},\n    \"AdditionalMeterSerialNumber\": \"\",\n    \"AnalogOutput1\": {{faker 'random.number'}},\n    \"AnalogOutput2\": {{faker 'random.number'}},\n    \"ChargingStationState\": \"{{oneOf (array 'Booting' 'ReadyNoCarConnected' 'ReadyCarConnected' 'StartedWaitForCar' 'Charging' 'Offline')}}\",\n    \"CounterReading\": {{faker 'random.float'}},\n    \"CounterReadingExport\": {{faker 'random.float'}},\n    \"CounterReadingImport\": {{faker 'random.float'}},\n    \"CounterReadingT1\": {{faker 'random.float'}},\n    \"CounterReadingT2\": {{faker 'random.float'}},\n    \"CounterReadingT3\": {{faker 'random.float'}},\n    \"CounterReadingT4\": {{faker 'random.float'}},\n    \"CounterReadingUnit\": \"\",\n    \"Current\": {{faker 'random.float'}},\n    \"CurrentL1\": {{faker 'random.float'}},\n    \"CurrentL2\": {{faker 'random.float'}},\n    \"CurrentL3\": {{faker 'random.float'}},\n    \"DeviceEnergyType\": \"{{oneOf (array 'MeterTypeUnknown' 'MeterTypeElectricity' 'MeterTypeWater' 'MeterTypeGas' 'MeterTypeHeat' 'MeterTypeHCA' 'MeterTypeAllMeters' 'MeterTypeTemperature' 'MeterTypeMBusGateway' 'MeterTypeRS485Gateway' 'MeterTypeCustomDevice' 'MeterTypeCompressedAir' 'MeterTypeSolarLog' 'MeterTypeVirtualMeter' 'MeterTypeWMBusGateway')}}\",\n    \"DigitalInput1\": {{faker 'random.boolean'}},\n    \"DigitalInput2\": {{faker 'random.boolean'}},\n    \"DigitalOutput1\": {{faker 'random.boolean'}},\n    \"DigitalOutput2\": {{faker 'random.boolean'}},\n    \"FamilyType\": \"{{oneOf (array 'MeterFamilyTypeUnknown' 'MeterFamilyTypeSmartMeConnectV1' 'MeterFamiliyTypeSmartMeMeter' 'MeterFamiliyTypeSmartMeMeterWithSwitch' 'MeterFamilyTypeMBusGatewayV1' 'MeterFamilyTypeRS485GatewayV1' 'MeterFamilyTypeKamstrupModule' 'MeterFamilyTypeSmartMe3PhaseMeter80A' 'MeterFamilyTypeSmartMe3PhaseMeter32A' 'MeterFamilyTypeSmartMe3PhaseTelstarTransformer' 'MeterFamilyTypeLandisGyrModule' 'MeterFamilyTypeFnnOpticalModule' 'MeterFamilyTypeSmartMe3PhaseTelstar80AWiFi' 'MeterFamilyTypeSmartMe3PhaseTelstar80AMobile' 'MeterFamilyTypeSmartMe1PhaseMeter80AV2WiFi' 'MeterFamilyTypeSmartMe1PhaseMeter32AV2WiFi' 'MeterFamilyTypeSmartMe1PhaseMeter80AGprs' 'MeterFamilyTypeSmartMe1PhaseMeter32AGprs' 'MeterFamilyTypeWMBusGatewayV1' 'MeterFamilyTypeSmartMe3PhaseTelstarTransformerMobile' 'MeterFamilyTypeMithralHallV1' 'MeterFamilyTypeRestApiMeter' 'MeterFamilyTypeVirtualBillingMeter')}}\",\n    \"FlowRate\": {{faker 'random.float'}},\n    \"Id\": \"\",\n    \"MeterSubType\": \"{{oneOf (array 'MeterSubTypeUnknown' 'MeterSubTypeCold' 'MeterSubTypeHeat' 'MeterSubTypeChargingStation' 'MeterSubTypeElectricity' 'MeterSubTypeWater' 'MeterSubTypeGas' 'MeterSubTypeElectricityHeat' 'MeterSubTypeTemperature' 'MeterSubTypeVirtualBattery')}}\",\n    \"Name\": \"\",\n    \"PowerFactor\": {{faker 'random.float'}},\n    \"PowerFactorL1\": {{faker 'random.float'}},\n    \"PowerFactorL2\": {{faker 'random.float'}},\n    \"PowerFactorL3\": {{faker 'random.float'}},\n    \"Serial\": {{faker 'random.number'}},\n    \"SwitchOn\": {{faker 'random.boolean'}},\n    \"SwitchPhaseL1On\": {{faker 'random.boolean'}},\n    \"SwitchPhaseL2On\": {{faker 'random.boolean'}},\n    \"SwitchPhaseL3On\": {{faker 'random.boolean'}},\n    \"Temperature\": {{faker 'random.float'}},\n    \"ValueDate\": \"{{faker 'date.recent' 365}}\",\n    \"Voltage\": {{faker 'random.float'}},\n    \"VoltageL1\": {{faker 'random.float'}},\n    \"VoltageL2\": {{faker 'random.float'}},\n    \"VoltageL3\": {{faker 'random.float'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8226beb3-c5be-40d4-81f6-08638f677550",
      "documentation": "Calculates a virtual meter from a formula. \r\n            A meter is coded as ID(\"METERID\")",
      "method": "get",
      "endpoint": "api/VirtualMeterCalculateFormula",
      "responses": [
        {
          "uuid": "ca02d636-3f63-4a8d-95d2-e2b933c87332",
          "body": "{\n  \"ActivePower\": {{faker 'random.float'}},\n  \"ActivePowerL1\": {{faker 'random.float'}},\n  \"ActivePowerL2\": {{faker 'random.float'}},\n  \"ActivePowerL3\": {{faker 'random.float'}},\n  \"ActivePowerUnit\": \"\",\n  \"ActiveTariff\": {{faker 'random.number'}},\n  \"AdditionalMeterSerialNumber\": \"\",\n  \"AnalogOutput1\": {{faker 'random.number'}},\n  \"AnalogOutput2\": {{faker 'random.number'}},\n  \"ChargingStationState\": \"{{oneOf (array 'Booting' 'ReadyNoCarConnected' 'ReadyCarConnected' 'StartedWaitForCar' 'Charging' 'Offline')}}\",\n  \"CounterReading\": {{faker 'random.float'}},\n  \"CounterReadingExport\": {{faker 'random.float'}},\n  \"CounterReadingImport\": {{faker 'random.float'}},\n  \"CounterReadingT1\": {{faker 'random.float'}},\n  \"CounterReadingT2\": {{faker 'random.float'}},\n  \"CounterReadingT3\": {{faker 'random.float'}},\n  \"CounterReadingT4\": {{faker 'random.float'}},\n  \"CounterReadingUnit\": \"\",\n  \"Current\": {{faker 'random.float'}},\n  \"CurrentL1\": {{faker 'random.float'}},\n  \"CurrentL2\": {{faker 'random.float'}},\n  \"CurrentL3\": {{faker 'random.float'}},\n  \"DeviceEnergyType\": \"{{oneOf (array 'MeterTypeUnknown' 'MeterTypeElectricity' 'MeterTypeWater' 'MeterTypeGas' 'MeterTypeHeat' 'MeterTypeHCA' 'MeterTypeAllMeters' 'MeterTypeTemperature' 'MeterTypeMBusGateway' 'MeterTypeRS485Gateway' 'MeterTypeCustomDevice' 'MeterTypeCompressedAir' 'MeterTypeSolarLog' 'MeterTypeVirtualMeter' 'MeterTypeWMBusGateway')}}\",\n  \"DigitalInput1\": {{faker 'random.boolean'}},\n  \"DigitalInput2\": {{faker 'random.boolean'}},\n  \"DigitalOutput1\": {{faker 'random.boolean'}},\n  \"DigitalOutput2\": {{faker 'random.boolean'}},\n  \"FamilyType\": \"{{oneOf (array 'MeterFamilyTypeUnknown' 'MeterFamilyTypeSmartMeConnectV1' 'MeterFamiliyTypeSmartMeMeter' 'MeterFamiliyTypeSmartMeMeterWithSwitch' 'MeterFamilyTypeMBusGatewayV1' 'MeterFamilyTypeRS485GatewayV1' 'MeterFamilyTypeKamstrupModule' 'MeterFamilyTypeSmartMe3PhaseMeter80A' 'MeterFamilyTypeSmartMe3PhaseMeter32A' 'MeterFamilyTypeSmartMe3PhaseTelstarTransformer' 'MeterFamilyTypeLandisGyrModule' 'MeterFamilyTypeFnnOpticalModule' 'MeterFamilyTypeSmartMe3PhaseTelstar80AWiFi' 'MeterFamilyTypeSmartMe3PhaseTelstar80AMobile' 'MeterFamilyTypeSmartMe1PhaseMeter80AV2WiFi' 'MeterFamilyTypeSmartMe1PhaseMeter32AV2WiFi' 'MeterFamilyTypeSmartMe1PhaseMeter80AGprs' 'MeterFamilyTypeSmartMe1PhaseMeter32AGprs' 'MeterFamilyTypeWMBusGatewayV1' 'MeterFamilyTypeSmartMe3PhaseTelstarTransformerMobile' 'MeterFamilyTypeMithralHallV1' 'MeterFamilyTypeRestApiMeter' 'MeterFamilyTypeVirtualBillingMeter')}}\",\n  \"FlowRate\": {{faker 'random.float'}},\n  \"Id\": \"\",\n  \"MeterSubType\": \"{{oneOf (array 'MeterSubTypeUnknown' 'MeterSubTypeCold' 'MeterSubTypeHeat' 'MeterSubTypeChargingStation' 'MeterSubTypeElectricity' 'MeterSubTypeWater' 'MeterSubTypeGas' 'MeterSubTypeElectricityHeat' 'MeterSubTypeTemperature' 'MeterSubTypeVirtualBattery')}}\",\n  \"Name\": \"\",\n  \"PowerFactor\": {{faker 'random.float'}},\n  \"PowerFactorL1\": {{faker 'random.float'}},\n  \"PowerFactorL2\": {{faker 'random.float'}},\n  \"PowerFactorL3\": {{faker 'random.float'}},\n  \"Serial\": {{faker 'random.number'}},\n  \"SwitchOn\": {{faker 'random.boolean'}},\n  \"SwitchPhaseL1On\": {{faker 'random.boolean'}},\n  \"SwitchPhaseL2On\": {{faker 'random.boolean'}},\n  \"SwitchPhaseL3On\": {{faker 'random.boolean'}},\n  \"Temperature\": {{faker 'random.float'}},\n  \"ValueDate\": \"{{faker 'date.recent' 365}}\",\n  \"Voltage\": {{faker 'random.float'}},\n  \"VoltageL1\": {{faker 'random.float'}},\n  \"VoltageL2\": {{faker 'random.float'}},\n  \"VoltageL3\": {{faker 'random.float'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d0dc203f-ffc2-4c83-804b-73b4a0e07df4",
      "documentation": "Gets all Virtual Tariffs of a user",
      "method": "get",
      "endpoint": "api/VirtualTariff",
      "responses": [
        {
          "uuid": "404dd17a-046d-4272-b541-41338f2b2d6d",
          "body": "[\n  {\n    \"Date\": \"{{faker 'date.recent' 365}}\",\n    \"FolderId\": \"\",\n    \"Name\": \"\",\n    \"VirtualTariffs\": [\n      {\n        \"Factor\": {{faker 'random.float'}},\n        \"Id\": \"\",\n        \"Name\": \"\",\n        \"Type\": \"{{oneOf (array 'Battery' 'Solar' 'Normal')}}\",\n        \"Unit\": \"\",\n        \"Value\": {{faker 'random.float'}}\n      }\n    ]\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4a03c5a7-7e33-4c6b-94ae-d1d0a183920f",
      "documentation": "Gets all virtual tariffs of a folder",
      "method": "get",
      "endpoint": "api/VirtualTariff/:id",
      "responses": [
        {
          "uuid": "82651b17-1c29-4f7b-96ea-7e88dccd2c79",
          "body": "{\n  \"Date\": \"{{faker 'date.recent' 365}}\",\n  \"FolderId\": \"\",\n  \"Name\": \"\",\n  \"VirtualTariffs\": [\n    {\n      \"Factor\": {{faker 'random.float'}},\n      \"Id\": \"\",\n      \"Name\": \"\",\n      \"Type\": \"{{oneOf (array 'Battery' 'Solar' 'Normal')}}\",\n      \"Unit\": \"\",\n      \"Value\": {{faker 'random.float'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f90f157c-81be-44d1-ad3f-1d796b67ced4",
      "documentation": "Gets the consumption of a folder with a virtuall tariffs.",
      "method": "get",
      "endpoint": "api/VirtualTariffConsumption",
      "responses": [
        {
          "uuid": "798753d8-271a-4590-95de-154d7baecf11",
          "body": "[\n  {\n    \"Consumption\": {{faker 'random.float'}},\n    \"Currency\": \"\",\n    \"Name\": \"\",\n    \"Price\": {{faker 'random.float'}},\n    \"TariffType\": \"{{oneOf (array 'Battery' 'Solar' 'Normal')}}\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4d7d1048-8b4c-47a3-8957-1f0394eb551b",
      "documentation": "Gets all Virtual Tariffs for a property (folder)",
      "method": "get",
      "endpoint": "api/VirtualTariffsForProperty/:id",
      "responses": [
        {
          "uuid": "ef227ebb-75a6-4e6c-99e9-cb69cf256879",
          "body": "[\n  {\n    \"Date\": \"{{faker 'date.recent' 365}}\",\n    \"FolderId\": \"\",\n    \"Name\": \"\",\n    \"VirtualTariffs\": [\n      {\n        \"Factor\": {{faker 'random.float'}},\n        \"Id\": \"\",\n        \"Name\": \"\",\n        \"Type\": \"{{oneOf (array 'Battery' 'Solar' 'Normal')}}\",\n        \"Unit\": \"\",\n        \"Value\": {{faker 'random.float'}}\n      }\n    ]\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "78c37330-18fc-4513-9cbb-f3b263ec124d",
      "documentation": "Assign a folder (source) or meter to another folder (target). Can be used to create a folder structure.",
      "method": "post",
      "endpoint": "api/folder/assign",
      "responses": [
        {
          "uuid": "63c41518-0c12-4775-9f7e-40096149dc5e",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No Content",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9eb0671a-e457-4299-bb48-fada1c675502",
      "documentation": "Deletes a folder",
      "method": "delete",
      "endpoint": "api/folder/settings/:id",
      "responses": [
        {
          "uuid": "f71acda1-e9dd-426a-a87d-ba544bdf143e",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No Content",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "eff794dc-0afb-4e7b-a66c-40c35c93d723",
      "documentation": "Gets the settings of a folder or meter",
      "method": "get",
      "endpoint": "api/folder/settings/:id",
      "responses": [
        {
          "uuid": "4a111fad-e7ac-435d-a0ea-b432fdd6789f",
          "body": "{\n  \"Description\": \"\",\n  \"Enable\": {{faker 'random.boolean'}},\n  \"FolderType\": \"{{oneOf (array 'Folder' 'Location' 'Factory' 'House' 'Office' 'Machine' 'VirtualMeter' 'ElecticityFolder' 'WaterFolder' 'HeatFolder' 'GasFolder' 'TemperatureFolder' 'Sun' 'Light' 'Ice' 'Sofa' 'Food' 'Coffee' 'Car' 'ChargingStation' 'Meter' 'User' 'Trash' 'GridPhotovoltaicPowerSystem')}}\",\n  \"Name\": \"\",\n  \"ParentFolderId\": \"\",\n  \"SerialNumber\": {{faker 'random.number'}},\n  \"UseableForVirtualBillingMeters\": {{faker 'random.boolean'}},\n  \"ValueCorrection\": {{faker 'random.float'}},\n  \"ValueCorrectionParentFolder\": {{faker 'random.float'}},\n  \"VisualizationName\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c42ebb2b-0070-4c6c-aa99-593d9122e2c3",
      "documentation": "Add or edit a folder or a meter. To add a new folder use and empty ID",
      "method": "post",
      "endpoint": "api/folder/settings/:id",
      "responses": [
        {
          "uuid": "bac24ec5-e2f7-4334-a75d-c722b2c2a869",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bb39e1da-c19a-4d0d-a901-ce8273faad9c",
      "documentation": "Deletes a user to folder assignement",
      "method": "delete",
      "endpoint": "api/folder/user/assign",
      "responses": [
        {
          "uuid": "4bd78583-d36c-4c7e-a542-2c1a3e1c5f2f",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No Content",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cdf0ce58-f511-4f52-abe1-1ca15055c1b4",
      "documentation": "Assign a user to a folder",
      "method": "post",
      "endpoint": "api/folder/user/assign",
      "responses": [
        {
          "uuid": "a8794584-0ed3-4107-adc5-8c3e1f68701f",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No Content",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2c3f5ec4-b0ca-472a-9cbb-497c67e200da",
      "documentation": "",
      "method": "get",
      "endpoint": "api/oauth/authorize",
      "responses": [
        {
          "uuid": "11e487a6-38ce-4e77-80f5-72220ac41ed3",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "144e6459-69a2-4dbd-8e29-bb68b813594e",
      "documentation": "",
      "method": "post",
      "endpoint": "api/oauth/authorize",
      "responses": [
        {
          "uuid": "a815fd8e-d9ba-41d1-a442-f1c1c2e34375",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "929d5c3d-fa55-4967-80f5-8358c0689d34",
      "documentation": "Gets the active charging data of a pico station",
      "method": "get",
      "endpoint": "api/pico/charging/:id",
      "responses": [
        {
          "uuid": "242b8ef8-b92a-4a1a-b468-d35f65189043",
          "body": "{\n  \"ActiveChargingEnergy\": {{faker 'random.float'}},\n  \"ActiveChargingPower\": {{faker 'random.float'}},\n  \"Duration\": {{faker 'random.number'}},\n  \"State\": \"{{oneOf (array 'Booting' 'ReadyNoCarConnected' 'ReadyCarConnected' 'StartedWaitForCar' 'Charging' 'Offline')}}\",\n  \"ValueDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a7ebb4b5-7518-481f-b0fe-0910372bdd43",
      "documentation": "Gets the last charging history for a pico station",
      "method": "get",
      "endpoint": "api/pico/history/:id",
      "responses": [
        {
          "uuid": "2f9baaa5-daf7-4b2e-8181-f750b3c36785",
          "body": "[\n  {\n    \"Duration\": {{faker 'random.number'}},\n    \"EnergyUsed\": {{faker 'random.float'}},\n    \"StartTime\": \"{{faker 'date.recent' 365}}\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f3f48faf-15ba-45fc-a3bd-e858b6aee767",
      "documentation": "GET: api/pico/loadmanagementgroup\r\n            \r\n            Returns all available load management groups",
      "method": "get",
      "endpoint": "api/pico/loadmanagementgroup",
      "responses": [
        {
          "uuid": "c14bf1ad-07d9-4fae-b910-fbab5bd1da92",
          "body": "[\n  {\n    \"Id\": \"\",\n    \"MaxCurrent\": {{faker 'random.float'}},\n    \"Name\": \"\",\n    \"NumberOfStations\": {{faker 'random.number'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7175db8c-a087-4860-958b-92e9a285c07f",
      "documentation": "Sets the dynamic current of a load management group or a single station.",
      "method": "post",
      "endpoint": "api/pico/loadmanagementgroup/current/:serial",
      "responses": [
        {
          "uuid": "b0ef0ae7-088f-4706-9fc3-9dcc15aed507",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0b54afa5-986b-492e-b0ad-3ce941f51a56",
      "documentation": "GET: api/pico/loadmanagementgroup\r\n            \r\n            Returns a pico load management group by it's id",
      "method": "get",
      "endpoint": "api/pico/loadmanagementgroup/:id",
      "responses": [
        {
          "uuid": "4fff0992-44b9-4742-a59f-985bb4e763b0",
          "body": "{\n  \"Id\": \"\",\n  \"MaxCurrent\": {{faker 'random.float'}},\n  \"Name\": \"\",\n  \"NumberOfStations\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bd178ce5-cd9c-4227-9ea6-43ffe2866b4c",
      "documentation": "GET: api/pico/settings\r\n            \r\n            Returns the settings of a pico charging station.",
      "method": "get",
      "endpoint": "api/pico/settings/:id",
      "responses": [
        {
          "uuid": "20791255-0e05-4efb-9c5d-cfaf141bff9c",
          "body": "{\n  \"AuthenticationType\": \"{{oneOf (array 'None' 'Backend')}}\",\n  \"DisplayBrightness\": \"\",\n  \"DnsName\": \"\",\n  \"IdleImageData\": \"\",\n  \"IdleImageUrl\": \"\",\n  \"InternalIp\": \"\",\n  \"LoadmanagementGroupId\": \"\",\n  \"MaxCurrent\": {{faker 'random.number'}},\n  \"MinCurrent\": {{faker 'random.number'}},\n  \"ModbusTcp\": {{faker 'random.boolean'}},\n  \"Name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}