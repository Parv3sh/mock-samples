{
  "uuid": "8360c59e-0e79-4075-b094-a7da5dbb2859",
  "lastMigration": 19,
  "name": "smart-me",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "dc9e454b-743f-48ca-a888-b817e1d93a66",
      "documentation": "Creates a Access Token to write on a Card (e.g. NFC)",
      "method": "put",
      "endpoint": "api/AccessToken",
      "responses": [
        {
          "uuid": "49e3bfc5-18e3-461f-9d8c-51a17bed8fe0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "af70b0eb-7439-4dd6-acb1-1746e4d4282b",
      "documentation": "",
      "method": "get",
      "endpoint": "api/Account/login",
      "responses": [
        {
          "uuid": "a7c89b55-40b4-4c24-bc08-526d36810aa5",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "323bec88-54dd-4288-bceb-1bb2b35cff7b",
      "documentation": "",
      "method": "post",
      "endpoint": "api/Account/login",
      "responses": [
        {
          "uuid": "5a1f143f-4dac-4fad-84fb-8f736a86893c",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4d2d83bc-9a6e-49e8-9f28-72449358e3b7",
      "documentation": "Set an action for the specified device.",
      "method": "post",
      "endpoint": "api/Actions",
      "responses": [
        {
          "uuid": "d6cb8fee-b873-4e9d-a835-fdb111a5090a",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No Content",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e07fddd6-25a6-4774-b00c-147e68d29423",
      "documentation": "Gets all available Actions of a Device",
      "method": "get",
      "endpoint": "api/Actions/:id",
      "responses": [
        {
          "uuid": "d230eee3-2160-4101-8667-2002c8ad6616",
          "body": "[\n  {\n    \"ActionType\": \"{{oneOf (array 'OnOffAction' 'AnalogAction')}}\",\n    \"MaxValue\": {{faker 'random.float'}},\n    \"MinValue\": {{faker 'random.float'}},\n    \"Name\": \"\",\n    \"ObisCode\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "57ff20a6-3e87-4cad-b9dc-6f240b6f1a23",
      "documentation": "Gets the additional information (e.g. Firmware Version) about a device.",
      "method": "get",
      "endpoint": "api/AdditionalDeviceInformation/:id",
      "responses": [
        {
          "uuid": "f9940112-869e-472f-bf20-b21c36ac6ef1",
          "body": "{\n  \"AdditionalMeterSerialNumber\": \"\",\n  \"FirmwareVersion\": {{faker 'random.number'}},\n  \"HardwareVersion\": {{faker 'random.number'}},\n  \"ID\": \"\",\n  \"NetworkConnection\": \"\",\n  \"NetworkConnectionRSSI\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "41d94016-0a3f-45a8-b0a8-fe30cb918647",
      "documentation": "Gets all Custom Devices",
      "method": "get",
      "endpoint": "api/CustomDevice",
      "responses": [
        {
          "uuid": "9ba52d75-f2ba-4ce1-aa46-8c4df74cca9a",
          "body": "[\n  {\n    \"Id\": \"\",\n    \"Name\": \"\",\n    \"Serial\": {{faker 'random.number'}},\n    \"ValueDate\": \"{{faker 'date.recent' 365}}\",\n    \"Values\": [\n      {\n        \"Name\": \"\",\n        \"Value\": {{faker 'random.float'}}\n      }\n    ]\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ac492f0b-e8bc-4073-a2e3-2bbfebc0efcc",
      "documentation": "Creates or updates a Custom Device or updates it's values.",
      "method": "post",
      "endpoint": "api/CustomDevice",
      "responses": [
        {
          "uuid": "35263c44-b2aa-4acf-8096-69e1ac4451a5",
          "body": "{\n  \"Id\": \"\",\n  \"Name\": \"\",\n  \"Serial\": {{faker 'random.number'}},\n  \"ValueDate\": \"{{faker 'date.recent' 365}}\",\n  \"Values\": [\n    {\n      \"Name\": \"\",\n      \"Value\": {{faker 'random.float'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7793f3b7-96c2-43d4-8dc1-a0195cf50da8",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a5265053-e406-45df-823e-6337fadfd6eb",
      "documentation": "Gets a Custom Device by it's ID",
      "method": "get",
      "endpoint": "api/CustomDevice/:id",
      "responses": [
        {
          "uuid": "b733b128-bd9a-4f8e-a1ea-a64605cf21e2",
          "body": "{\n  \"Id\": \"\",\n  \"Name\": \"\",\n  \"Serial\": {{faker 'random.number'}},\n  \"ValueDate\": \"{{faker 'date.recent' 365}}\",\n  \"Values\": [\n    {\n      \"Name\": \"\",\n      \"Value\": {{faker 'random.float'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "201726d4-aca6-4f79-96c5-ee0634b14ef6",
      "documentation": "Gets a Device by it's Serial Number. The Serial is the part before the \"-\".",
      "method": "get",
      "endpoint": "api/DeviceBySerial",
      "responses": [
        {
          "uuid": "63c2c4a3-a2d4-4782-8ab2-02f28174f1a1",
          "body": "{\n  \"ActivePower\": {{faker 'random.float'}},\n  \"ActivePowerL1\": {{faker 'random.float'}},\n  \"ActivePowerL2\": {{faker 'random.float'}},\n  \"ActivePowerL3\": {{faker 'random.float'}},\n  \"ActivePowerUnit\": \"\",\n  \"ActiveTariff\": {{faker 'random.number'}},\n  \"AdditionalMeterSerialNumber\": \"\",\n  \"AnalogOutput1\": {{faker 'random.number'}},\n  \"AnalogOutput2\": {{faker 'random.number'}},\n  \"ChargingStationState\": \"{{oneOf (array 'Booting' 'ReadyNoCarConnected' 'ReadyCarConnected' 'StartedWaitForCar' 'Charging' 'Offline')}}\",\n  \"CounterReading\": {{faker 'random.float'}},\n  \"CounterReadingExport\": {{faker 'random.float'}},\n  \"CounterReadingImport\": {{faker 'random.float'}},\n  \"CounterReadingT1\": {{faker 'random.float'}},\n  \"CounterReadingT2\": {{faker 'random.float'}},\n  \"CounterReadingT3\": {{faker 'random.float'}},\n  \"CounterReadingT4\": {{faker 'random.float'}},\n  \"CounterReadingUnit\": \"\",\n  \"Current\": {{faker 'random.float'}},\n  \"CurrentL1\": {{faker 'random.float'}},\n  \"CurrentL2\": {{faker 'random.float'}},\n  \"CurrentL3\": {{faker 'random.float'}},\n  \"DeviceEnergyType\": \"{{oneOf (array 'MeterTypeUnknown' 'MeterTypeElectricity' 'MeterTypeWater' 'MeterTypeGas' 'MeterTypeHeat' 'MeterTypeHCA' 'MeterTypeAllMeters' 'MeterTypeTemperature' 'MeterTypeMBusGateway' 'MeterTypeRS485Gateway' 'MeterTypeCustomDevice' 'MeterTypeCompressedAir' 'MeterTypeSolarLog' 'MeterTypeVirtualMeter' 'MeterTypeWMBusGateway')}}\",\n  \"DigitalInput1\": {{faker 'random.boolean'}},\n  \"DigitalInput2\": {{faker 'random.boolean'}},\n  \"DigitalOutput1\": {{faker 'random.boolean'}},\n  \"DigitalOutput2\": {{faker 'random.boolean'}},\n  \"FamilyType\": \"{{oneOf (array 'MeterFamilyTypeUnknown' 'MeterFamilyTypeSmartMeConnectV1' 'MeterFamiliyTypeSmartMeMeter' 'MeterFamiliyTypeSmartMeMeterWithSwitch' 'MeterFamilyTypeMBusGatewayV1' 'MeterFamilyTypeRS485GatewayV1' 'MeterFamilyTypeKamstrupModule' 'MeterFamilyTypeSmartMe3PhaseMeter80A' 'MeterFamilyTypeSmartMe3PhaseMeter32A' 'MeterFamilyTypeSmartMe3PhaseTelstarTransformer' 'MeterFamilyTypeLandisGyrModule' 'MeterFamilyTypeFnnOpticalModule' 'MeterFamilyTypeSmartMe3PhaseTelstar80AWiFi' 'MeterFamilyTypeSmartMe3PhaseTelstar80AMobile' 'MeterFamilyTypeSmartMe1PhaseMeter80AV2WiFi' 'MeterFamilyTypeSmartMe1PhaseMeter32AV2WiFi' 'MeterFamilyTypeSmartMe1PhaseMeter80AGprs' 'MeterFamilyTypeSmartMe1PhaseMeter32AGprs' 'MeterFamilyTypeWMBusGatewayV1' 'MeterFamilyTypeSmartMe3PhaseTelstarTransformerMobile' 'MeterFamilyTypeMithralHallV1' 'MeterFamilyTypeRestApiMeter' 'MeterFamilyTypeVirtualBillingMeter')}}\",\n  \"FlowRate\": {{faker 'random.float'}},\n  \"Id\": \"\",\n  \"MeterSubType\": \"{{oneOf (array 'MeterSubTypeUnknown' 'MeterSubTypeCold' 'MeterSubTypeHeat' 'MeterSubTypeChargingStation' 'MeterSubTypeElectricity' 'MeterSubTypeWater' 'MeterSubTypeGas' 'MeterSubTypeElectricityHeat' 'MeterSubTypeTemperature' 'MeterSubTypeVirtualBattery')}}\",\n  \"Name\": \"\",\n  \"PowerFactor\": {{faker 'random.float'}},\n  \"PowerFactorL1\": {{faker 'random.float'}},\n  \"PowerFactorL2\": {{faker 'random.float'}},\n  \"PowerFactorL3\": {{faker 'random.float'}},\n  \"Serial\": {{faker 'random.number'}},\n  \"SwitchOn\": {{faker 'random.boolean'}},\n  \"SwitchPhaseL1On\": {{faker 'random.boolean'}},\n  \"SwitchPhaseL2On\": {{faker 'random.boolean'}},\n  \"SwitchPhaseL3On\": {{faker 'random.boolean'}},\n  \"Temperature\": {{faker 'random.float'}},\n  \"ValueDate\": \"{{faker 'date.recent' 365}}\",\n  \"Voltage\": {{faker 'random.float'}},\n  \"VoltageL1\": {{faker 'random.float'}},\n  \"VoltageL2\": {{faker 'random.float'}},\n  \"VoltageL3\": {{faker 'random.float'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0e4c27fd-ed10-4c40-a7b2-10a4d02022c8",
      "documentation": "Gets all Devices",
      "method": "get",
      "endpoint": "api/Devices",
      "responses": [
        {
          "uuid": "8ad651f9-8e6b-4cae-acad-2cce4531aee8",
          "body": "[\n  {\n    \"ActivePower\": {{faker 'random.float'}},\n    \"ActivePowerL1\": {{faker 'random.float'}},\n    \"ActivePowerL2\": {{faker 'random.float'}},\n    \"ActivePowerL3\": {{faker 'random.float'}},\n    \"ActivePowerUnit\": \"\",\n    \"ActiveTariff\": {{faker 'random.number'}},\n    \"AdditionalMeterSerialNumber\": \"\",\n    \"AnalogOutput1\": {{faker 'random.number'}},\n    \"AnalogOutput2\": {{faker 'random.number'}},\n    \"ChargingStationState\": \"{{oneOf (array 'Booting' 'ReadyNoCarConnected' 'ReadyCarConnected' 'StartedWaitForCar' 'Charging' 'Offline')}}\",\n    \"CounterReading\": {{faker 'random.float'}},\n    \"CounterReadingExport\": {{faker 'random.float'}},\n    \"CounterReadingImport\": {{faker 'random.float'}},\n    \"CounterReadingT1\": {{faker 'random.float'}},\n    \"CounterReadingT2\": {{faker 'random.float'}},\n    \"CounterReadingT3\": {{faker 'random.float'}},\n    \"CounterReadingT4\": {{faker 'random.float'}},\n    \"CounterReadingUnit\": \"\",\n    \"Current\": {{faker 'random.float'}},\n    \"CurrentL1\": {{faker 'random.float'}},\n    \"CurrentL2\": {{faker 'random.float'}},\n    \"CurrentL3\": {{faker 'random.float'}},\n    \"DeviceEnergyType\": \"{{oneOf (array 'MeterTypeUnknown' 'MeterTypeElectricity' 'MeterTypeWater' 'MeterTypeGas' 'MeterTypeHeat' 'MeterTypeHCA' 'MeterTypeAllMeters' 'MeterTypeTemperature' 'MeterTypeMBusGateway' 'MeterTypeRS485Gateway' 'MeterTypeCustomDevice' 'MeterTypeCompressedAir' 'MeterTypeSolarLog' 'MeterTypeVirtualMeter' 'MeterTypeWMBusGateway')}}\",\n    \"DigitalInput1\": {{faker 'random.boolean'}},\n    \"DigitalInput2\": {{faker 'random.boolean'}},\n    \"DigitalOutput1\": {{faker 'random.boolean'}},\n    \"DigitalOutput2\": {{faker 'random.boolean'}},\n    \"FamilyType\": \"{{oneOf (array 'MeterFamilyTypeUnknown' 'MeterFamilyTypeSmartMeConnectV1' 'MeterFamiliyTypeSmartMeMeter' 'MeterFamiliyTypeSmartMeMeterWithSwitch' 'MeterFamilyTypeMBusGatewayV1' 'MeterFamilyTypeRS485GatewayV1' 'MeterFamilyTypeKamstrupModule' 'MeterFamilyTypeSmartMe3PhaseMeter80A' 'MeterFamilyTypeSmartMe3PhaseMeter32A' 'MeterFamilyTypeSmartMe3PhaseTelstarTransformer' 'MeterFamilyTypeLandisGyrModule' 'MeterFamilyTypeFnnOpticalModule' 'MeterFamilyTypeSmartMe3PhaseTelstar80AWiFi' 'MeterFamilyTypeSmartMe3PhaseTelstar80AMobile' 'MeterFamilyTypeSmartMe1PhaseMeter80AV2WiFi' 'MeterFamilyTypeSmartMe1PhaseMeter32AV2WiFi' 'MeterFamilyTypeSmartMe1PhaseMeter80AGprs' 'MeterFamilyTypeSmartMe1PhaseMeter32AGprs' 'MeterFamilyTypeWMBusGatewayV1' 'MeterFamilyTypeSmartMe3PhaseTelstarTransformerMobile' 'MeterFamilyTypeMithralHallV1' 'MeterFamilyTypeRestApiMeter' 'MeterFamilyTypeVirtualBillingMeter')}}\",\n    \"FlowRate\": {{faker 'random.float'}},\n    \"Id\": \"\",\n    \"MeterSubType\": \"{{oneOf (array 'MeterSubTypeUnknown' 'MeterSubTypeCold' 'MeterSubTypeHeat' 'MeterSubTypeChargingStation' 'MeterSubTypeElectricity' 'MeterSubTypeWater' 'MeterSubTypeGas' 'MeterSubTypeElectricityHeat' 'MeterSubTypeTemperature' 'MeterSubTypeVirtualBattery')}}\",\n    \"Name\": \"\",\n    \"PowerFactor\": {{faker 'random.float'}},\n    \"PowerFactorL1\": {{faker 'random.float'}},\n    \"PowerFactorL2\": {{faker 'random.float'}},\n    \"PowerFactorL3\": {{faker 'random.float'}},\n    \"Serial\": {{faker 'random.number'}},\n    \"SwitchOn\": {{faker 'random.boolean'}},\n    \"SwitchPhaseL1On\": {{faker 'random.boolean'}},\n    \"SwitchPhaseL2On\": {{faker 'random.boolean'}},\n    \"SwitchPhaseL3On\": {{faker 'random.boolean'}},\n    \"Temperature\": {{faker 'random.float'}},\n    \"ValueDate\": \"{{faker 'date.recent' 365}}\",\n    \"Voltage\": {{faker 'random.float'}},\n    \"VoltageL1\": {{faker 'random.float'}},\n    \"VoltageL2\": {{faker 'random.float'}},\n    \"VoltageL3\": {{faker 'random.float'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "01743fcb-0e34-4803-81df-2fc628bfc251",
      "documentation": "Creates or updates a Device or updates it's values.",
      "method": "post",
      "endpoint": "api/Devices",
      "responses": [
        {
          "uuid": "ee47c4ad-1e42-4944-ab1f-0b3ea76096ab",
          "body": "{\n  \"ActivePower\": {{faker 'random.float'}},\n  \"CounterReading\": {{faker 'random.float'}},\n  \"CounterReadingExport\": {{faker 'random.float'}},\n  \"CounterReadingExportT1\": {{faker 'random.float'}},\n  \"CounterReadingExportT2\": {{faker 'random.float'}},\n  \"CounterReadingT1\": {{faker 'random.float'}},\n  \"CounterReadingT2\": {{faker 'random.float'}},\n  \"Current\": {{faker 'random.float'}},\n  \"CurrentL1\": {{faker 'random.float'}},\n  \"CurrentL2\": {{faker 'random.float'}},\n  \"CurrentL3\": {{faker 'random.float'}},\n  \"DeviceEnergyType\": \"{{oneOf (array 'MeterTypeUnknown' 'MeterTypeElectricity' 'MeterTypeWater' 'MeterTypeGas' 'MeterTypeHeat' 'MeterTypeHCA' 'MeterTypeAllMeters' 'MeterTypeTemperature' 'MeterTypeMBusGateway' 'MeterTypeRS485Gateway' 'MeterTypeCustomDevice' 'MeterTypeCompressedAir' 'MeterTypeSolarLog' 'MeterTypeVirtualMeter' 'MeterTypeWMBusGateway')}}\",\n  \"DigitalInput1\": {{faker 'random.boolean'}},\n  \"Id\": \"\",\n  \"MeterSubType\": \"{{oneOf (array 'MeterSubTypeUnknown' 'MeterSubTypeCold' 'MeterSubTypeHeat' 'MeterSubTypeChargingStation' 'MeterSubTypeElectricity' 'MeterSubTypeWater' 'MeterSubTypeGas' 'MeterSubTypeElectricityHeat' 'MeterSubTypeTemperature' 'MeterSubTypeVirtualBattery')}}\",\n  \"Name\": \"\",\n  \"PowerFactor\": {{faker 'random.float'}},\n  \"PowerFactorL1\": {{faker 'random.float'}},\n  \"PowerFactorL2\": {{faker 'random.float'}},\n  \"PowerFactorL3\": {{faker 'random.float'}},\n  \"Serial\": {{faker 'random.number'}},\n  \"Temperature\": {{faker 'random.float'}},\n  \"ValueDate\": \"{{faker 'date.recent' 365}}\",\n  \"Voltage\": {{faker 'random.float'}},\n  \"VoltageL1\": {{faker 'random.float'}},\n  \"VoltageL2\": {{faker 'random.float'}},\n  \"VoltageL3\": {{faker 'random.float'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f00dedfc-6deb-45ed-8143-055125ad0afe",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6486705c-3dd2-4f94-86b8-f1afaacb44d4",
      "documentation": "Gets a Device by it's ID",
      "method": "get",
      "endpoint": "api/Devices/:id",
      "responses": [
        {
          "uuid": "d5eaa7eb-3ac7-46b5-9c2d-0a9c0a1d9068",
          "body": "{\n  \"ActivePower\": {{faker 'random.float'}},\n  \"ActivePowerL1\": {{faker 'random.float'}},\n  \"ActivePowerL2\": {{faker 'random.float'}},\n  \"ActivePowerL3\": {{faker 'random.float'}},\n  \"ActivePowerUnit\": \"\",\n  \"ActiveTariff\": {{faker 'random.number'}},\n  \"AdditionalMeterSerialNumber\": \"\",\n  \"AnalogOutput1\": {{faker 'random.number'}},\n  \"AnalogOutput2\": {{faker 'random.number'}},\n  \"ChargingStationState\": \"{{oneOf (array 'Booting' 'ReadyNoCarConnected' 'ReadyCarConnected' 'StartedWaitForCar' 'Charging' 'Offline')}}\",\n  \"CounterReading\": {{faker 'random.float'}},\n  \"CounterReadingExport\": {{faker 'random.float'}},\n  \"CounterReadingImport\": {{faker 'random.float'}},\n  \"CounterReadingT1\": {{faker 'random.float'}},\n  \"CounterReadingT2\": {{faker 'random.float'}},\n  \"CounterReadingT3\": {{faker 'random.float'}},\n  \"CounterReadingT4\": {{faker 'random.float'}},\n  \"CounterReadingUnit\": \"\",\n  \"Current\": {{faker 'random.float'}},\n  \"CurrentL1\": {{faker 'random.float'}},\n  \"CurrentL2\": {{faker 'random.float'}},\n  \"CurrentL3\": {{faker 'random.float'}},\n  \"DeviceEnergyType\": \"{{oneOf (array 'MeterTypeUnknown' 'MeterTypeElectricity' 'MeterTypeWater' 'MeterTypeGas' 'MeterTypeHeat' 'MeterTypeHCA' 'MeterTypeAllMeters' 'MeterTypeTemperature' 'MeterTypeMBusGateway' 'MeterTypeRS485Gateway' 'MeterTypeCustomDevice' 'MeterTypeCompressedAir' 'MeterTypeSolarLog' 'MeterTypeVirtualMeter' 'MeterTypeWMBusGateway')}}\",\n  \"DigitalInput1\": {{faker 'random.boolean'}},\n  \"DigitalInput2\": {{faker 'random.boolean'}},\n  \"DigitalOutput1\": {{faker 'random.boolean'}},\n  \"DigitalOutput2\": {{faker 'random.boolean'}},\n  \"FamilyType\": \"{{oneOf (array 'MeterFamilyTypeUnknown' 'MeterFamilyTypeSmartMeConnectV1' 'MeterFamiliyTypeSmartMeMeter' 'MeterFamiliyTypeSmartMeMeterWithSwitch' 'MeterFamilyTypeMBusGatewayV1' 'MeterFamilyTypeRS485GatewayV1' 'MeterFamilyTypeKamstrupModule' 'MeterFamilyTypeSmartMe3PhaseMeter80A' 'MeterFamilyTypeSmartMe3PhaseMeter32A' 'MeterFamilyTypeSmartMe3PhaseTelstarTransformer' 'MeterFamilyTypeLandisGyrModule' 'MeterFamilyTypeFnnOpticalModule' 'MeterFamilyTypeSmartMe3PhaseTelstar80AWiFi' 'MeterFamilyTypeSmartMe3PhaseTelstar80AMobile' 'MeterFamilyTypeSmartMe1PhaseMeter80AV2WiFi' 'MeterFamilyTypeSmartMe1PhaseMeter32AV2WiFi' 'MeterFamilyTypeSmartMe1PhaseMeter80AGprs' 'MeterFamilyTypeSmartMe1PhaseMeter32AGprs' 'MeterFamilyTypeWMBusGatewayV1' 'MeterFamilyTypeSmartMe3PhaseTelstarTransformerMobile' 'MeterFamilyTypeMithralHallV1' 'MeterFamilyTypeRestApiMeter' 'MeterFamilyTypeVirtualBillingMeter')}}\",\n  \"FlowRate\": {{faker 'random.float'}},\n  \"Id\": \"\",\n  \"MeterSubType\": \"{{oneOf (array 'MeterSubTypeUnknown' 'MeterSubTypeCold' 'MeterSubTypeHeat' 'MeterSubTypeChargingStation' 'MeterSubTypeElectricity' 'MeterSubTypeWater' 'MeterSubTypeGas' 'MeterSubTypeElectricityHeat' 'MeterSubTypeTemperature' 'MeterSubTypeVirtualBattery')}}\",\n  \"Name\": \"\",\n  \"PowerFactor\": {{faker 'random.float'}},\n  \"PowerFactorL1\": {{faker 'random.float'}},\n  \"PowerFactorL2\": {{faker 'random.float'}},\n  \"PowerFactorL3\": {{faker 'random.float'}},\n  \"Serial\": {{faker 'random.number'}},\n  \"SwitchOn\": {{faker 'random.boolean'}},\n  \"SwitchPhaseL1On\": {{faker 'random.boolean'}},\n  \"SwitchPhaseL2On\": {{faker 'random.boolean'}},\n  \"SwitchPhaseL3On\": {{faker 'random.boolean'}},\n  \"Temperature\": {{faker 'random.float'}},\n  \"ValueDate\": \"{{faker 'date.recent' 365}}\",\n  \"Voltage\": {{faker 'random.float'}},\n  \"VoltageL1\": {{faker 'random.float'}},\n  \"VoltageL2\": {{faker 'random.float'}},\n  \"VoltageL3\": {{faker 'random.float'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c66d282f-4ab7-4f56-9308-9d9ac5e66f6f",
      "documentation": "Updates the On/Off Switch on a device. \r\n            For new implementations please use the \"actions\" command",
      "method": "put",
      "endpoint": "api/Devices/:id",
      "responses": [
        {
          "uuid": "c8c01ae4-fdea-476f-bb4f-ab98f35de056",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "867c44bb-4a28-4bff-a81c-e71e6784faf1",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f0730bf5-66fa-4b63-b9ae-cdd6d94da494",
          "body": "",
          "latency": 0,
          "statusCode": 405,
          "label": "MethodNotAllowed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ef74f0b2-dfc8-4fbc-8874-33077fb92d19",
      "documentation": "Gets all Devices for an Energy Type",
      "method": "get",
      "endpoint": "api/DevicesByEnergy",
      "responses": [
        {
          "uuid": "9b7f1010-8495-4dc0-ad8a-092455f50b02",
          "body": "[\n  {\n    \"ActivePower\": {{faker 'random.float'}},\n    \"ActivePowerL1\": {{faker 'random.float'}},\n    \"ActivePowerL2\": {{faker 'random.float'}},\n    \"ActivePowerL3\": {{faker 'random.float'}},\n    \"ActivePowerUnit\": \"\",\n    \"ActiveTariff\": {{faker 'random.number'}},\n    \"AdditionalMeterSerialNumber\": \"\",\n    \"AnalogOutput1\": {{faker 'random.number'}},\n    \"AnalogOutput2\": {{faker 'random.number'}},\n    \"ChargingStationState\": \"{{oneOf (array 'Booting' 'ReadyNoCarConnected' 'ReadyCarConnected' 'StartedWaitForCar' 'Charging' 'Offline')}}\",\n    \"CounterReading\": {{faker 'random.float'}},\n    \"CounterReadingExport\": {{faker 'random.float'}},\n    \"CounterReadingImport\": {{faker 'random.float'}},\n    \"CounterReadingT1\": {{faker 'random.float'}},\n    \"CounterReadingT2\": {{faker 'random.float'}},\n    \"CounterReadingT3\": {{faker 'random.float'}},\n    \"CounterReadingT4\": {{faker 'random.float'}},\n    \"CounterReadingUnit\": \"\",\n    \"Current\": {{faker 'random.float'}},\n    \"CurrentL1\": {{faker 'random.float'}},\n    \"CurrentL2\": {{faker 'random.float'}},\n    \"CurrentL3\": {{faker 'random.float'}},\n    \"DeviceEnergyType\": \"{{oneOf (array 'MeterTypeUnknown' 'MeterTypeElectricity' 'MeterTypeWater' 'MeterTypeGas' 'MeterTypeHeat' 'MeterTypeHCA' 'MeterTypeAllMeters' 'MeterTypeTemperature' 'MeterTypeMBusGateway' 'MeterTypeRS485Gateway' 'MeterTypeCustomDevice' 'MeterTypeCompressedAir' 'MeterTypeSolarLog' 'MeterTypeVirtualMeter' 'MeterTypeWMBusGateway')}}\",\n    \"DigitalInput1\": {{faker 'random.boolean'}},\n    \"DigitalInput2\": {{faker 'random.boolean'}},\n    \"DigitalOutput1\": {{faker 'random.boolean'}},\n    \"DigitalOutput2\": {{faker 'random.boolean'}},\n    \"FamilyType\": \"{{oneOf (array 'MeterFamilyTypeUnknown' 'MeterFamilyTypeSmartMeConnectV1' 'MeterFamiliyTypeSmartMeMeter' 'MeterFamiliyTypeSmartMeMeterWithSwitch' 'MeterFamilyTypeMBusGatewayV1' 'MeterFamilyTypeRS485GatewayV1' 'MeterFamilyTypeKamstrupModule' 'MeterFamilyTypeSmartMe3PhaseMeter80A' 'MeterFamilyTypeSmartMe3PhaseMeter32A' 'MeterFamilyTypeSmartMe3PhaseTelstarTransformer' 'MeterFamilyTypeLandisGyrModule' 'MeterFamilyTypeFnnOpticalModule' 'MeterFamilyTypeSmartMe3PhaseTelstar80AWiFi' 'MeterFamilyTypeSmartMe3PhaseTelstar80AMobile' 'MeterFamilyTypeSmartMe1PhaseMeter80AV2WiFi' 'MeterFamilyTypeSmartMe1PhaseMeter32AV2WiFi' 'MeterFamilyTypeSmartMe1PhaseMeter80AGprs' 'MeterFamilyTypeSmartMe1PhaseMeter32AGprs' 'MeterFamilyTypeWMBusGatewayV1' 'MeterFamilyTypeSmartMe3PhaseTelstarTransformerMobile' 'MeterFamilyTypeMithralHallV1' 'MeterFamilyTypeRestApiMeter' 'MeterFamilyTypeVirtualBillingMeter')}}\",\n    \"FlowRate\": {{faker 'random.float'}},\n    \"Id\": \"\",\n    \"MeterSubType\": \"{{oneOf (array 'MeterSubTypeUnknown' 'MeterSubTypeCold' 'MeterSubTypeHeat' 'MeterSubTypeChargingStation' 'MeterSubTypeElectricity' 'MeterSubTypeWater' 'MeterSubTypeGas' 'MeterSubTypeElectricityHeat' 'MeterSubTypeTemperature' 'MeterSubTypeVirtualBattery')}}\",\n    \"Name\": \"\",\n    \"PowerFactor\": {{faker 'random.float'}},\n    \"PowerFactorL1\": {{faker 'random.float'}},\n    \"PowerFactorL2\": {{faker 'random.float'}},\n    \"PowerFactorL3\": {{faker 'random.float'}},\n    \"Serial\": {{faker 'random.number'}},\n    \"SwitchOn\": {{faker 'random.boolean'}},\n    \"SwitchPhaseL1On\": {{faker 'random.boolean'}},\n    \"SwitchPhaseL2On\": {{faker 'random.boolean'}},\n    \"SwitchPhaseL3On\": {{faker 'random.boolean'}},\n    \"Temperature\": {{faker 'random.float'}},\n    \"ValueDate\": \"{{faker 'date.recent' 365}}\",\n    \"Voltage\": {{faker 'random.float'}},\n    \"VoltageL1\": {{faker 'random.float'}},\n    \"VoltageL2\": {{faker 'random.float'}},\n    \"VoltageL3\": {{faker 'random.float'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "376501a2-f497-42d4-94d2-a4bffa7daef9",
      "documentation": "Gets all Devices by it's Sub Type (e.g. E-Charging Station)",
      "method": "get",
      "endpoint": "api/DevicesBySubType",
      "responses": [
        {
          "uuid": "9adffbee-ca26-4e5a-9077-c2fbaa436fb1",
          "body": "[\n  {\n    \"ActivePower\": {{faker 'random.float'}},\n    \"ActivePowerL1\": {{faker 'random.float'}},\n    \"ActivePowerL2\": {{faker 'random.float'}},\n    \"ActivePowerL3\": {{faker 'random.float'}},\n    \"ActivePowerUnit\": \"\",\n    \"ActiveTariff\": {{faker 'random.number'}},\n    \"AdditionalMeterSerialNumber\": \"\",\n    \"AnalogOutput1\": {{faker 'random.number'}},\n    \"AnalogOutput2\": {{faker 'random.number'}},\n    \"ChargingStationState\": \"{{oneOf (array 'Booting' 'ReadyNoCarConnected' 'ReadyCarConnected' 'StartedWaitForCar' 'Charging' 'Offline')}}\",\n    \"CounterReading\": {{faker 'random.float'}},\n    \"CounterReadingExport\": {{faker 'random.float'}},\n    \"CounterReadingImport\": {{faker 'random.float'}},\n    \"CounterReadingT1\": {{faker 'random.float'}},\n    \"CounterReadingT2\": {{faker 'random.float'}},\n    \"CounterReadingT3\": {{faker 'random.float'}},\n    \"CounterReadingT4\": {{faker 'random.float'}},\n    \"CounterReadingUnit\": \"\",\n    \"Current\": {{faker 'random.float'}},\n    \"CurrentL1\": {{faker 'random.float'}},\n    \"CurrentL2\": {{faker 'random.float'}},\n    \"CurrentL3\": {{faker 'random.float'}},\n    \"DeviceEnergyType\": \"{{oneOf (array 'MeterTypeUnknown' 'MeterTypeElectricity' 'MeterTypeWater' 'MeterTypeGas' 'MeterTypeHeat' 'MeterTypeHCA' 'MeterTypeAllMeters' 'MeterTypeTemperature' 'MeterTypeMBusGateway' 'MeterTypeRS485Gateway' 'MeterTypeCustomDevice' 'MeterTypeCompressedAir' 'MeterTypeSolarLog' 'MeterTypeVirtualMeter' 'MeterTypeWMBusGateway')}}\",\n    \"DigitalInput1\": {{faker 'random.boolean'}},\n    \"DigitalInput2\": {{faker 'random.boolean'}},\n    \"DigitalOutput1\": {{faker 'random.boolean'}},\n    \"DigitalOutput2\": {{faker 'random.boolean'}},\n    \"FamilyType\": \"{{oneOf (array 'MeterFamilyTypeUnknown' 'MeterFamilyTypeSmartMeConnectV1' 'MeterFamiliyTypeSmartMeMeter' 'MeterFamiliyTypeSmartMeMeterWithSwitch' 'MeterFamilyTypeMBusGatewayV1' 'MeterFamilyTypeRS485GatewayV1' 'MeterFamilyTypeKamstrupModule' 'MeterFamilyTypeSmartMe3PhaseMeter80A' 'MeterFamilyTypeSmartMe3PhaseMeter32A' 'MeterFamilyTypeSmartMe3PhaseTelstarTransformer' 'MeterFamilyTypeLandisGyrModule' 'MeterFamilyTypeFnnOpticalModule' 'MeterFamilyTypeSmartMe3PhaseTelstar80AWiFi' 'MeterFamilyTypeSmartMe3PhaseTelstar80AMobile' 'MeterFamilyTypeSmartMe1PhaseMeter80AV2WiFi' 'MeterFamilyTypeSmartMe1PhaseMeter32AV2WiFi' 'MeterFamilyTypeSmartMe1PhaseMeter80AGprs' 'MeterFamilyTypeSmartMe1PhaseMeter32AGprs' 'MeterFamilyTypeWMBusGatewayV1' 'MeterFamilyTypeSmartMe3PhaseTelstarTransformerMobile' 'MeterFamilyTypeMithralHallV1' 'MeterFamilyTypeRestApiMeter' 'MeterFamilyTypeVirtualBillingMeter')}}\",\n    \"FlowRate\": {{faker 'random.float'}},\n    \"Id\": \"\",\n    \"MeterSubType\": \"{{oneOf (array 'MeterSubTypeUnknown' 'MeterSubTypeCold' 'MeterSubTypeHeat' 'MeterSubTypeChargingStation' 'MeterSubTypeElectricity' 'MeterSubTypeWater' 'MeterSubTypeGas' 'MeterSubTypeElectricityHeat' 'MeterSubTypeTemperature' 'MeterSubTypeVirtualBattery')}}\",\n    \"Name\": \"\",\n    \"PowerFactor\": {{faker 'random.float'}},\n    \"PowerFactorL1\": {{faker 'random.float'}},\n    \"PowerFactorL2\": {{faker 'random.float'}},\n    \"PowerFactorL3\": {{faker 'random.float'}},\n    \"Serial\": {{faker 'random.number'}},\n    \"SwitchOn\": {{faker 'random.boolean'}},\n    \"SwitchPhaseL1On\": {{faker 'random.boolean'}},\n    \"SwitchPhaseL2On\": {{faker 'random.boolean'}},\n    \"SwitchPhaseL3On\": {{faker 'random.boolean'}},\n    \"Temperature\": {{faker 'random.float'}},\n    \"ValueDate\": \"{{faker 'date.recent' 365}}\",\n    \"Voltage\": {{faker 'random.float'}},\n    \"VoltageL1\": {{faker 'random.float'}},\n    \"VoltageL2\": {{faker 'random.float'}},\n    \"VoltageL3\": {{faker 'random.float'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "68ea1a7f-217a-4327-835a-eaedd1c76b82",
      "documentation": "Force a device to send the data every second (if supported). This for about 30s.\r\n            Don't use this call to force a device to send the data every second for a longer time.",
      "method": "get",
      "endpoint": "api/FastSendDeviceValues/:id",
      "responses": [
        {
          "uuid": "d16690f2-6fbf-4330-b67b-3dd3df779504",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No Content",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4906d7bc-4c2d-4a94-bf6d-4f9e37ad289c",
      "documentation": "Gets the Values for a folder or a meter",
      "method": "get",
      "endpoint": "api/Folder/:id",
      "responses": [
        {
          "uuid": "9385029f-0acc-4273-8f85-4c9145419e95",
          "body": "{\n  \"ElectricityCounterValue\": {{faker 'random.float'}},\n  \"ElectricityPower\": {{faker 'random.float'}},\n  \"GasCounterValue\": {{faker 'random.float'}},\n  \"GasFlowRate\": {{faker 'random.float'}},\n  \"HeatCounterValue\": {{faker 'random.float'}},\n  \"HeatPower\": {{faker 'random.float'}},\n  \"WaterCounterValue\": {{faker 'random.float'}},\n  \"WaterFlowRate\": {{faker 'random.float'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f08caef1-3b7f-47f6-bb3d-d5bf2ca8d402",
      "documentation": "Gets the folder menu items (each item might contain child items)",
      "method": "get",
      "endpoint": "api/FolderMenu",
      "responses": [
        {
          "uuid": "b64ba606-1500-4f29-897c-2048b3b0310e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3404c654-67f1-4ba7-8f41-0744828e8e46",
      "documentation": "Creates and updates the folder menu items",
      "method": "post",
      "endpoint": "api/FolderMenu",
      "responses": [
        {
          "uuid": "3a0242f3-d13c-439b-b707-6ffca8e7f3b2",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No Content",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2db61a5c-41db-4f58-87e3-a75ef1454c66",
      "documentation": "A method returning HTTP 200 OK when queried.\r\n            It is used by Kubernetes probes to determine whether the app is healthy.",
      "method": "get",
      "endpoint": "api/Health",
      "responses": [
        {
          "uuid": "76f19b90-917e-48c7-9679-fec8ec31fb87",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6dc4f199-f13c-46cc-8843-f88421e832b0",
      "documentation": "M-BUS API: Adds data of a M-BUS Meter to the smart-me Cloud.\r\n            Just send us the M-BUS Telegram (RSP_UD) and we will do the Rest.",
      "method": "post",
      "endpoint": "api/MBus",
      "responses": [
        {
          "uuid": "eab825fa-7522-4012-91d3-70836cc77b79",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "19e0826d-45ae-414b-b86f-8969975f204c",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "BadRequest",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2fb15894-bc1c-4e1a-b488-ea2c7e9c0276",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d394c0f3-a563-4ddc-b6da-7a1b76e7267b",
      "documentation": "Sets the Name of a Meter or a Folder",
      "method": "post",
      "endpoint": "api/MeterFolderInformation",
      "responses": [
        {
          "uuid": "92b12a56-bc16-4c27-8e4c-5f0f14a783a0",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No Content",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "02318300-c871-48eb-bf0b-6dbf467cf684",
      "documentation": "Beta: Gets the General Information for a Meter or a Folder",
      "method": "get",
      "endpoint": "api/MeterFolderInformation/:id",
      "responses": [
        {
          "uuid": "827cbf9e-f7f7-486d-a23d-a398d2248e82",
          "body": "{\n  \"CommunicationModuleFirmwareVersion\": {{faker 'random.number'}},\n  \"CommunicationModuleHardwareVersion\": {{faker 'random.number'}},\n  \"FirmwareVersion\": {{faker 'random.number'}},\n  \"HardwareVersion\": {{faker 'random.number'}},\n  \"InputInformations\": [\n    {\n      \"Name\": \"\",\n      \"Number\": {{faker 'random.number'}}\n    }\n  ],\n  \"IsFolder\": {{faker 'random.boolean'}},\n  \"Name\": \"\",\n  \"OutputInformations\": [\n    {\n      \"ActionType\": \"{{oneOf (array 'OnOffAction' 'AnalogAction')}}\",\n      \"Name\": \"\",\n      \"Number\": {{faker 'random.number'}},\n      \"ObisCode\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "caac0710-f184-49ef-8f3e-a3bec6759d05",
      "documentation": "Gets the Values for a Meter at a given Date. \r\n            The first Value found before the given Date is returned.",
      "method": "get",
      "endpoint": "api/MeterValues/:id",
      "responses": [
        {
          "uuid": "4c9c8fac-b5aa-4219-b0c6-99dbdee924ab",
          "body": "{\n  \"CounterReading\": {{faker 'random.float'}},\n  \"CounterReadingExport\": {{faker 'random.float'}},\n  \"CounterReadingExportT1\": {{faker 'random.float'}},\n  \"CounterReadingExportT2\": {{faker 'random.float'}},\n  \"CounterReadingExportT3\": {{faker 'random.float'}},\n  \"CounterReadingExportT4\": {{faker 'random.float'}},\n  \"CounterReadingImport\": {{faker 'random.float'}},\n  \"CounterReadingImportT1\": {{faker 'random.float'}},\n  \"CounterReadingImportT2\": {{faker 'random.float'}},\n  \"CounterReadingImportT3\": {{faker 'random.float'}},\n  \"CounterReadingImportT4\": {{faker 'random.float'}},\n  \"CounterReadingT1\": {{faker 'random.float'}},\n  \"CounterReadingT2\": {{faker 'random.float'}},\n  \"CounterReadingT3\": {{faker 'random.float'}},\n  \"CounterReadingT4\": {{faker 'random.float'}},\n  \"CounterReadingUnit\": \"\",\n  \"Date\": \"{{faker 'date.recent' 365}}\",\n  \"Id\": \"\",\n  \"Serial\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "19e7d723-f01a-486b-a017-3d6d995f416b",
      "documentation": "Gets all registrations for the Realtime API.",
      "method": "get",
      "endpoint": "api/RegisterForRealtimeApi",
      "responses": [
        {
          "uuid": "54681c0a-09be-480e-ab7d-ffd3cc4c6d00",
          "body": "[\n  {\n    \"ApiUrl\": \"\",\n    \"BasicAuthPassword\": \"\",\n    \"BasicAuthUsername\": \"\",\n    \"Id\": \"\",\n    \"MeterId\": \"\",\n    \"RegistrationType\": \"{{oneOf (array 'Disabled' 'SingleMeterRegistration' 'UserRegistration')}}\",\n    \"SerialNumber\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a5a0f2d4-e412-4e7c-91ec-9985b2ed331b",
      "documentation": "Creates a new registration for the realtime API. The Realtime API sends you the data of the registred devices as soon as we have them on the cloud.\r\n             More Information about the realtime API: https://www.smart-me.com/Description/api/realtimeapi.aspx",
      "method": "post",
      "endpoint": "api/RegisterForRealtimeApi",
      "responses": [
        {
          "uuid": "4170b669-5311-417e-afd7-054552129164",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No Content",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f309d0b5-6894-4070-8807-4404c3fa5b17",
      "documentation": "Deletes a realtime API registration.",
      "method": "delete",
      "endpoint": "api/RegisterForRealtimeApi/:id",
      "responses": [
        {
          "uuid": "96f5e14a-7390-4933-9673-373f9857983c",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No Content",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "88925b10-b2a8-4018-8e1e-d89e1cfc474d",
      "documentation": "Sets the configuration of a smart-me device. The device needs to be online.",
      "method": "post",
      "endpoint": "api/SmartMeDeviceConfiguration",
      "responses": [
        {
          "uuid": "6c774900-a453-443f-83fc-bdea80790c1f",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No Content",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6503daa5-da7b-4a2d-af12-e63a241775e5",
      "documentation": "Gets the configuration of a smart-me device.",
      "method": "get",
      "endpoint": "api/SmartMeDeviceConfiguration/:id",
      "responses": [
        {
          "uuid": "fc00d073-42ea-4715-bd14-eccfc721d127",
          "body": "{\n  \"DeviceEncryptionKey\": \"\",\n  \"DevicePinCode\": \"\",\n  \"DnsUpdateState\": \"{{oneOf (array 'NoUpdate' 'DnsUpdatePublicIp' 'DnsUpdateInternalIp')}}\",\n  \"EnableModbusTcp\": {{faker 'random.boolean'}},\n  \"Id\": \"\",\n  \"InputConfiguration\": [\n    {\n      \"Name\": \"\",\n      \"Number\": {{faker 'random.number'}},\n      \"OffText\": \"\",\n      \"OnText\": \"\",\n      \"Type\": \"{{oneOf (array 'TariffInput' 'DigitalInput')}}\"\n    }\n  ],\n  \"OutputConfiguration\": [\n    {\n      \"DigitalOutputNoConnectionAction\": \"{{oneOf (array 'Nothing' 'TurnOff' 'TurnOn' 'SetPwmValue')}}\",\n      \"Name\": \"\",\n      \"Number\": {{faker 'random.number'}},\n      \"S0PulseValue\": \"{{oneOf (array 'PulseValue1000Kwh' 'PulseValue10000Kwh')}}\",\n      \"Type\": \"{{oneOf (array 'ImpulseOutputActiveEnergy' 'ImpulseOutputActiveEnergyImport' 'ImpulseOutputActiveEnergyExport' 'ImpulseOutputReactiveEnergy' 'DigitalOutput' 'AnalogPwmSignalOutput' 'Disabled')}}\"\n    }\n  ],\n  \"ShowReactiveEnergy\": {{faker 'random.boolean'}},\n  \"SwitchConfiguration\": [\n    {\n      \"CanSwitchOff\": {{faker 'random.boolean'}},\n      \"Number\": {{faker 'random.number'}}\n    }\n  ],\n  \"UploadInterval\": \"{{oneOf (array 'UploadInterval_1s' 'UploadInterval_5s' 'UploadInterval_10s' 'UploadInterval_30s' 'UploadInterval_60s' 'UploadInterval_5min' 'UploadInterval_15min' 'UploadInterval_30min' 'UploadInterval_60min' 'UploadInterval_6h' 'UploadInterval_12h' 'UploadInterval_24h')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e99b8cec-7e37-4129-b6e6-613185df6a3c",
      "documentation": "Creates or updates a subuser.\r\n            To create a new user set no ID (empty)",
      "method": "post",
      "endpoint": "api/SubUser",
      "responses": [
        {
          "uuid": "540a3d17-2ef6-4324-8e72-705a2fd72ded",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No Content",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7de1debd-7f07-47c9-b244-303ba42061eb",
      "documentation": "Delete a subuser",
      "method": "delete",
      "endpoint": "api/SubUser/:id",
      "responses": [
        {
          "uuid": "7c1b2c13-e6b2-4e00-a67d-7e40f122b419",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No Content",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9c505831-e702-4bba-bc55-f4d7167bbbb3",
      "documentation": "Get a sub user. The user must be assigend to the user that makes this call.",
      "method": "get",
      "endpoint": "api/SubUser/:id",
      "responses": [
        {
          "uuid": "483471a3-9ef2-4350-8e01-cf9ecd7ee112",
          "body": "{\n  \"AccessEndDate\": \"{{faker 'date.recent' 365}}\",\n  \"AccessTimeStartDate\": \"{{faker 'date.recent' 365}}\",\n  \"Email\": \"\",\n  \"Id\": \"\",\n  \"NewPassword\": \"\",\n  \"PermissionLevel\": \"{{oneOf (array 'SelectedFolderAndSubfoldersMeters' 'SelectedFolderOnly')}}\",\n  \"Username\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7ce18216-8dab-4dcc-8497-8e583e8fc5d2",
      "documentation": "Gets the informations for the user.",
      "method": "get",
      "endpoint": "api/User",
      "responses": [
        {
          "uuid": "27c0656d-0cab-49f3-917f-7bf427d97b6b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5588c2dc-f637-45d9-9f85-8011a4d34074",
      "documentation": "Gets all (last) values of a device",
      "method": "get",
      "endpoint": "api/Values/:id",
      "responses": [
        {
          "uuid": "4e61ec8d-acdc-4d48-ad8e-54a5ac933bb9",
          "body": "{\n  \"Date\": \"{{faker 'date.recent' 365}}\",\n  \"DeviceId\": \"\",\n  \"Values\": [\n    {\n      \"Obis\": \"\",\n      \"Value\": {{faker 'random.float'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a6f34a81-fd97-4d36-91e3-56c828a178dd",
      "documentation": "Gets all (last) values of a device\r\n            The first Value found before the given Date is returned.",
      "method": "get",
      "endpoint": "api/ValuesInPast/:id",
      "responses": [
        {
          "uuid": "c1330a37-0ded-451e-b5b6-183b70007337",
          "body": "{\n  \"Date\": \"{{faker 'date.recent' 365}}\",\n  \"DeviceId\": \"\",\n  \"Values\": [\n    {\n      \"Obis\": \"\",\n      \"Value\": {{faker 'random.float'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "388f6ce6-562a-4880-99af-161962483169",
      "documentation": "Gets multiple values of a device. This call needs a smart-me professional licence.",
      "method": "get",
      "endpoint": "api/ValuesInPastMultiple/:id",
      "responses": [
        {
          "uuid": "78e9fec7-f7e2-42e2-9484-aef3c6047d21",
          "body": "[\n  {\n    \"Date\": \"{{faker 'date.recent' 365}}\",\n    \"DeviceId\": \"\",\n    \"Values\": [\n      {\n        \"Obis\": \"\",\n        \"Value\": {{faker 'random.float'}}\n      }\n    ]\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e58e3c88-670f-4dbf-971e-24e2e94f41d3",
      "documentation": "Beta: Gets all active virtual meters",
      "method": "get",
      "endpoint": "api/VirtualBillingMeterActive",
      "responses": [
        {
          "uuid": "f6b68e0a-36da-4447-b6a8-d27c66a50a5b",
          "body": "[\n  {\n    \"ActivePower\": {{faker 'random.float'}},\n    \"ActivePowerL1\": {{faker 'random.float'}},\n    \"ActivePowerL2\": {{faker 'random.float'}},\n    \"ActivePowerL3\": {{faker 'random.float'}},\n    \"ActivePowerUnit\": \"\",\n    \"ActiveTariff\": {{faker 'random.number'}},\n    \"AdditionalMeterSerialNumber\": \"\",\n    \"AnalogOutput1\": {{faker 'random.number'}},\n    \"AnalogOutput2\": {{faker 'random.number'}},\n    \"ChargingStationState\": \"{{oneOf (array 'Booting' 'ReadyNoCarConnected' 'ReadyCarConnected' 'StartedWaitForCar' 'Charging' 'Offline')}}\",\n    \"CounterReading\": {{faker 'random.float'}},\n    \"CounterReadingExport\": {{faker 'random.float'}},\n    \"CounterReadingImport\": {{faker 'random.float'}},\n    \"CounterReadingT1\": {{faker 'random.float'}},\n    \"CounterReadingT2\": {{faker 'random.float'}},\n    \"CounterReadingT3\": {{faker 'random.float'}},\n    \"CounterReadingT4\": {{faker 'random.float'}},\n    \"CounterReadingUnit\": \"\",\n    \"Current\": {{faker 'random.float'}},\n    \"CurrentL1\": {{faker 'random.float'}},\n    \"CurrentL2\": {{faker 'random.float'}},\n    \"CurrentL3\": {{faker 'random.float'}},\n    \"DeviceEnergyType\": \"{{oneOf (array 'MeterTypeUnknown' 'MeterTypeElectricity' 'MeterTypeWater' 'MeterTypeGas' 'MeterTypeHeat' 'MeterTypeHCA' 'MeterTypeAllMeters' 'MeterTypeTemperature' 'MeterTypeMBusGateway' 'MeterTypeRS485Gateway' 'MeterTypeCustomDevice' 'MeterTypeCompressedAir' 'MeterTypeSolarLog' 'MeterTypeVirtualMeter' 'MeterTypeWMBusGateway')}}\",\n    \"DigitalInput1\": {{faker 'random.boolean'}},\n    \"DigitalInput2\": {{faker 'random.boolean'}},\n    \"DigitalOutput1\": {{faker 'random.boolean'}},\n    \"DigitalOutput2\": {{faker 'random.boolean'}},\n    \"FamilyType\": \"{{oneOf (array 'MeterFamilyTypeUnknown' 'MeterFamilyTypeSmartMeConnectV1' 'MeterFamiliyTypeSmartMeMeter' 'MeterFamiliyTypeSmartMeMeterWithSwitch' 'MeterFamilyTypeMBusGatewayV1' 'MeterFamilyTypeRS485GatewayV1' 'MeterFamilyTypeKamstrupModule' 'MeterFamilyTypeSmartMe3PhaseMeter80A' 'MeterFamilyTypeSmartMe3PhaseMeter32A' 'MeterFamilyTypeSmartMe3PhaseTelstarTransformer' 'MeterFamilyTypeLandisGyrModule' 'MeterFamilyTypeFnnOpticalModule' 'MeterFamilyTypeSmartMe3PhaseTelstar80AWiFi' 'MeterFamilyTypeSmartMe3PhaseTelstar80AMobile' 'MeterFamilyTypeSmartMe1PhaseMeter80AV2WiFi' 'MeterFamilyTypeSmartMe1PhaseMeter32AV2WiFi' 'MeterFamilyTypeSmartMe1PhaseMeter80AGprs' 'MeterFamilyTypeSmartMe1PhaseMeter32AGprs' 'MeterFamilyTypeWMBusGatewayV1' 'MeterFamilyTypeSmartMe3PhaseTelstarTransformerMobile' 'MeterFamilyTypeMithralHallV1' 'MeterFamilyTypeRestApiMeter' 'MeterFamilyTypeVirtualBillingMeter')}}\",\n    \"FlowRate\": {{faker 'random.float'}},\n    \"Id\": \"\",\n    \"MeterSubType\": \"{{oneOf (array 'MeterSubTypeUnknown' 'MeterSubTypeCold' 'MeterSubTypeHeat' 'MeterSubTypeChargingStation' 'MeterSubTypeElectricity' 'MeterSubTypeWater' 'MeterSubTypeGas' 'MeterSubTypeElectricityHeat' 'MeterSubTypeTemperature' 'MeterSubTypeVirtualBattery')}}\",\n    \"Name\": \"\",\n    \"PowerFactor\": {{faker 'random.float'}},\n    \"PowerFactorL1\": {{faker 'random.float'}},\n    \"PowerFactorL2\": {{faker 'random.float'}},\n    \"PowerFactorL3\": {{faker 'random.float'}},\n    \"Serial\": {{faker 'random.number'}},\n    \"SwitchOn\": {{faker 'random.boolean'}},\n    \"SwitchPhaseL1On\": {{faker 'random.boolean'}},\n    \"SwitchPhaseL2On\": {{faker 'random.boolean'}},\n    \"SwitchPhaseL3On\": {{faker 'random.boolean'}},\n    \"Temperature\": {{faker 'random.float'}},\n    \"ValueDate\": \"{{faker 'date.recent' 365}}\",\n    \"Voltage\": {{faker 'random.float'}},\n    \"VoltageL1\": {{faker 'random.float'}},\n    \"VoltageL2\": {{faker 'random.float'}},\n    \"VoltageL3\": {{faker 'random.float'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ae984781-c4c3-46b3-ac4f-282f87f3e92a",
      "documentation": "Beta: Virtual Meter API: Activates a Meter and add the Consumption to a Virtual Meter assosiated with the User.",
      "method": "post",
      "endpoint": "api/VirtualBillingMeterActive",
      "responses": [
        {
          "uuid": "7031164d-a76c-46f1-8978-42106b6577aa",
          "body": "{\n  \"ActivePower\": {{faker 'random.float'}},\n  \"ActivePowerL1\": {{faker 'random.float'}},\n  \"ActivePowerL2\": {{faker 'random.float'}},\n  \"ActivePowerL3\": {{faker 'random.float'}},\n  \"ActivePowerUnit\": \"\",\n  \"ActiveTariff\": {{faker 'random.number'}},\n  \"AdditionalMeterSerialNumber\": \"\",\n  \"AnalogOutput1\": {{faker 'random.number'}},\n  \"AnalogOutput2\": {{faker 'random.number'}},\n  \"ChargingStationState\": \"{{oneOf (array 'Booting' 'ReadyNoCarConnected' 'ReadyCarConnected' 'StartedWaitForCar' 'Charging' 'Offline')}}\",\n  \"CounterReading\": {{faker 'random.float'}},\n  \"CounterReadingExport\": {{faker 'random.float'}},\n  \"CounterReadingImport\": {{faker 'random.float'}},\n  \"CounterReadingT1\": {{faker 'random.float'}},\n  \"CounterReadingT2\": {{faker 'random.float'}},\n  \"CounterReadingT3\": {{faker 'random.float'}},\n  \"CounterReadingT4\": {{faker 'random.float'}},\n  \"CounterReadingUnit\": \"\",\n  \"Current\": {{faker 'random.float'}},\n  \"CurrentL1\": {{faker 'random.float'}},\n  \"CurrentL2\": {{faker 'random.float'}},\n  \"CurrentL3\": {{faker 'random.float'}},\n  \"DeviceEnergyType\": \"{{oneOf (array 'MeterTypeUnknown' 'MeterTypeElectricity' 'MeterTypeWater' 'MeterTypeGas' 'MeterTypeHeat' 'MeterTypeHCA' 'MeterTypeAllMeters' 'MeterTypeTemperature' 'MeterTypeMBusGateway' 'MeterTypeRS485Gateway' 'MeterTypeCustomDevice' 'MeterTypeCompressedAir' 'MeterTypeSolarLog' 'MeterTypeVirtualMeter' 'MeterTypeWMBusGateway')}}\",\n  \"DigitalInput1\": {{faker 'random.boolean'}},\n  \"DigitalInput2\": {{faker 'random.boolean'}},\n  \"DigitalOutput1\": {{faker 'random.boolean'}},\n  \"DigitalOutput2\": {{faker 'random.boolean'}},\n  \"FamilyType\": \"{{oneOf (array 'MeterFamilyTypeUnknown' 'MeterFamilyTypeSmartMeConnectV1' 'MeterFamiliyTypeSmartMeMeter' 'MeterFamiliyTypeSmartMeMeterWithSwitch' 'MeterFamilyTypeMBusGatewayV1' 'MeterFamilyTypeRS485GatewayV1' 'MeterFamilyTypeKamstrupModule' 'MeterFamilyTypeSmartMe3PhaseMeter80A' 'MeterFamilyTypeSmartMe3PhaseMeter32A' 'MeterFamilyTypeSmartMe3PhaseTelstarTransformer' 'MeterFamilyTypeLandisGyrModule' 'MeterFamilyTypeFnnOpticalModule' 'MeterFamilyTypeSmartMe3PhaseTelstar80AWiFi' 'MeterFamilyTypeSmartMe3PhaseTelstar80AMobile' 'MeterFamilyTypeSmartMe1PhaseMeter80AV2WiFi' 'MeterFamilyTypeSmartMe1PhaseMeter32AV2WiFi' 'MeterFamilyTypeSmartMe1PhaseMeter80AGprs' 'MeterFamilyTypeSmartMe1PhaseMeter32AGprs' 'MeterFamilyTypeWMBusGatewayV1' 'MeterFamilyTypeSmartMe3PhaseTelstarTransformerMobile' 'MeterFamilyTypeMithralHallV1' 'MeterFamilyTypeRestApiMeter' 'MeterFamilyTypeVirtualBillingMeter')}}\",\n  \"FlowRate\": {{faker 'random.float'}},\n  \"Id\": \"\",\n  \"MeterSubType\": \"{{oneOf (array 'MeterSubTypeUnknown' 'MeterSubTypeCold' 'MeterSubTypeHeat' 'MeterSubTypeChargingStation' 'MeterSubTypeElectricity' 'MeterSubTypeWater' 'MeterSubTypeGas' 'MeterSubTypeElectricityHeat' 'MeterSubTypeTemperature' 'MeterSubTypeVirtualBattery')}}\",\n  \"Name\": \"\",\n  \"PowerFactor\": {{faker 'random.float'}},\n  \"PowerFactorL1\": {{faker 'random.float'}},\n  \"PowerFactorL2\": {{faker 'random.float'}},\n  \"PowerFactorL3\": {{faker 'random.float'}},\n  \"Serial\": {{faker 'random.number'}},\n  \"SwitchOn\": {{faker 'random.boolean'}},\n  \"SwitchPhaseL1On\": {{faker 'random.boolean'}},\n  \"SwitchPhaseL2On\": {{faker 'random.boolean'}},\n  \"SwitchPhaseL3On\": {{faker 'random.boolean'}},\n  \"Temperature\": {{faker 'random.float'}},\n  \"ValueDate\": \"{{faker 'date.recent' 365}}\",\n  \"Voltage\": {{faker 'random.float'}},\n  \"VoltageL1\": {{faker 'random.float'}},\n  \"VoltageL2\": {{faker 'random.float'}},\n  \"VoltageL3\": {{faker 'random.float'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6bf883ce-7b53-4003-8600-5fceefc2694d",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "BadRequest",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e89ea4ba-ebde-4f99-ba8d-d118423118ab",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "02028d9a-bbdb-4f99-9612-38e583987adb",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f979bc09-60db-4423-9d1e-e95bb2714d76",
      "documentation": "Beta: Virtual Meter API: Deactivates a Virtual Meter.",
      "method": "post",
      "endpoint": "api/VirtualBillingMeterDeactivate",
      "responses": [
        {
          "uuid": "3255b8b3-146d-4d84-b8e3-2cecb9b8e72f",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5e2abb0b-fe74-4c7e-95a3-d3c5ae56718f",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "BadRequest",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fc1a9e05-0fd5-40cd-acb0-aaaf3ed11249",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "df2508ee-d988-4d13-89d6-04c4b156268c",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0587e74f-0f95-4293-a8d7-49ecf3de9339",
      "documentation": "Beta: Gets all Meters available to activate as a Virtual Meter.",
      "method": "get",
      "endpoint": "api/VirtualBillingMeters",
      "responses": [
        {
          "uuid": "f9f8db92-452b-4c1d-ad93-8d4f83a819c4",
          "body": "[\n  {\n    \"ActivePower\": {{faker 'random.float'}},\n    \"ActivePowerL1\": {{faker 'random.float'}},\n    \"ActivePowerL2\": {{faker 'random.float'}},\n    \"ActivePowerL3\": {{faker 'random.float'}},\n    \"ActivePowerUnit\": \"\",\n    \"ActiveTariff\": {{faker 'random.number'}},\n    \"AdditionalMeterSerialNumber\": \"\",\n    \"AnalogOutput1\": {{faker 'random.number'}},\n    \"AnalogOutput2\": {{faker 'random.number'}},\n    \"ChargingStationState\": \"{{oneOf (array 'Booting' 'ReadyNoCarConnected' 'ReadyCarConnected' 'StartedWaitForCar' 'Charging' 'Offline')}}\",\n    \"CounterReading\": {{faker 'random.float'}},\n    \"CounterReadingExport\": {{faker 'random.float'}},\n    \"CounterReadingImport\": {{faker 'random.float'}},\n    \"CounterReadingT1\": {{faker 'random.float'}},\n    \"CounterReadingT2\": {{faker 'random.float'}},\n    \"CounterReadingT3\": {{faker 'random.float'}},\n    \"CounterReadingT4\": {{faker 'random.float'}},\n    \"CounterReadingUnit\": \"\",\n    \"Current\": {{faker 'random.float'}},\n    \"CurrentL1\": {{faker 'random.float'}},\n    \"CurrentL2\": {{faker 'random.float'}},\n    \"CurrentL3\": {{faker 'random.float'}},\n    \"DeviceEnergyType\": \"{{oneOf (array 'MeterTypeUnknown' 'MeterTypeElectricity' 'MeterTypeWater' 'MeterTypeGas' 'MeterTypeHeat' 'MeterTypeHCA' 'MeterTypeAllMeters' 'MeterTypeTemperature' 'MeterTypeMBusGateway' 'MeterTypeRS485Gateway' 'MeterTypeCustomDevice' 'MeterTypeCompressedAir' 'MeterTypeSolarLog' 'MeterTypeVirtualMeter' 'MeterTypeWMBusGateway')}}\",\n    \"DigitalInput1\": {{faker 'random.boolean'}},\n    \"DigitalInput2\": {{faker 'random.boolean'}},\n    \"DigitalOutput1\": {{faker 'random.boolean'}},\n    \"DigitalOutput2\": {{faker 'random.boolean'}},\n    \"FamilyType\": \"{{oneOf (array 'MeterFamilyTypeUnknown' 'MeterFamilyTypeSmartMeConnectV1' 'MeterFamiliyTypeSmartMeMeter' 'MeterFamiliyTypeSmartMeMeterWithSwitch' 'MeterFamilyTypeMBusGatewayV1' 'MeterFamilyTypeRS485GatewayV1' 'MeterFamilyTypeKamstrupModule' 'MeterFamilyTypeSmartMe3PhaseMeter80A' 'MeterFamilyTypeSmartMe3PhaseMeter32A' 'MeterFamilyTypeSmartMe3PhaseTelstarTransformer' 'MeterFamilyTypeLandisGyrModule' 'MeterFamilyTypeFnnOpticalModule' 'MeterFamilyTypeSmartMe3PhaseTelstar80AWiFi' 'MeterFamilyTypeSmartMe3PhaseTelstar80AMobile' 'MeterFamilyTypeSmartMe1PhaseMeter80AV2WiFi' 'MeterFamilyTypeSmartMe1PhaseMeter32AV2WiFi' 'MeterFamilyTypeSmartMe1PhaseMeter80AGprs' 'MeterFamilyTypeSmartMe1PhaseMeter32AGprs' 'MeterFamilyTypeWMBusGatewayV1' 'MeterFamilyTypeSmartMe3PhaseTelstarTransformerMobile' 'MeterFamilyTypeMithralHallV1' 'MeterFamilyTypeRestApiMeter' 'MeterFamilyTypeVirtualBillingMeter')}}\",\n    \"FlowRate\": {{faker 'random.float'}},\n    \"Id\": \"\",\n    \"MeterSubType\": \"{{oneOf (array 'MeterSubTypeUnknown' 'MeterSubTypeCold' 'MeterSubTypeHeat' 'MeterSubTypeChargingStation' 'MeterSubTypeElectricity' 'MeterSubTypeWater' 'MeterSubTypeGas' 'MeterSubTypeElectricityHeat' 'MeterSubTypeTemperature' 'MeterSubTypeVirtualBattery')}}\",\n    \"Name\": \"\",\n    \"PowerFactor\": {{faker 'random.float'}},\n    \"PowerFactorL1\": {{faker 'random.float'}},\n    \"PowerFactorL2\": {{faker 'random.float'}},\n    \"PowerFactorL3\": {{faker 'random.float'}},\n    \"Serial\": {{faker 'random.number'}},\n    \"SwitchOn\": {{faker 'random.boolean'}},\n    \"SwitchPhaseL1On\": {{faker 'random.boolean'}},\n    \"SwitchPhaseL2On\": {{faker 'random.boolean'}},\n    \"SwitchPhaseL3On\": {{faker 'random.boolean'}},\n    \"Temperature\": {{faker 'random.float'}},\n    \"ValueDate\": \"{{faker 'date.recent' 365}}\",\n    \"Voltage\": {{faker 'random.float'}},\n    \"VoltageL1\": {{faker 'random.float'}},\n    \"VoltageL2\": {{faker 'random.float'}},\n    \"VoltageL3\": {{faker 'random.float'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f3f2e648-a1fb-44a3-a913-411cc94d871d",
      "documentation": "Calculates a virtual meter from a formula. \r\n            A meter is coded as ID(\"METERID\")",
      "method": "get",
      "endpoint": "api/VirtualMeterCalculateFormula",
      "responses": [
        {
          "uuid": "50130353-293b-4fc2-bd96-2798b5afdcef",
          "body": "{\n  \"ActivePower\": {{faker 'random.float'}},\n  \"ActivePowerL1\": {{faker 'random.float'}},\n  \"ActivePowerL2\": {{faker 'random.float'}},\n  \"ActivePowerL3\": {{faker 'random.float'}},\n  \"ActivePowerUnit\": \"\",\n  \"ActiveTariff\": {{faker 'random.number'}},\n  \"AdditionalMeterSerialNumber\": \"\",\n  \"AnalogOutput1\": {{faker 'random.number'}},\n  \"AnalogOutput2\": {{faker 'random.number'}},\n  \"ChargingStationState\": \"{{oneOf (array 'Booting' 'ReadyNoCarConnected' 'ReadyCarConnected' 'StartedWaitForCar' 'Charging' 'Offline')}}\",\n  \"CounterReading\": {{faker 'random.float'}},\n  \"CounterReadingExport\": {{faker 'random.float'}},\n  \"CounterReadingImport\": {{faker 'random.float'}},\n  \"CounterReadingT1\": {{faker 'random.float'}},\n  \"CounterReadingT2\": {{faker 'random.float'}},\n  \"CounterReadingT3\": {{faker 'random.float'}},\n  \"CounterReadingT4\": {{faker 'random.float'}},\n  \"CounterReadingUnit\": \"\",\n  \"Current\": {{faker 'random.float'}},\n  \"CurrentL1\": {{faker 'random.float'}},\n  \"CurrentL2\": {{faker 'random.float'}},\n  \"CurrentL3\": {{faker 'random.float'}},\n  \"DeviceEnergyType\": \"{{oneOf (array 'MeterTypeUnknown' 'MeterTypeElectricity' 'MeterTypeWater' 'MeterTypeGas' 'MeterTypeHeat' 'MeterTypeHCA' 'MeterTypeAllMeters' 'MeterTypeTemperature' 'MeterTypeMBusGateway' 'MeterTypeRS485Gateway' 'MeterTypeCustomDevice' 'MeterTypeCompressedAir' 'MeterTypeSolarLog' 'MeterTypeVirtualMeter' 'MeterTypeWMBusGateway')}}\",\n  \"DigitalInput1\": {{faker 'random.boolean'}},\n  \"DigitalInput2\": {{faker 'random.boolean'}},\n  \"DigitalOutput1\": {{faker 'random.boolean'}},\n  \"DigitalOutput2\": {{faker 'random.boolean'}},\n  \"FamilyType\": \"{{oneOf (array 'MeterFamilyTypeUnknown' 'MeterFamilyTypeSmartMeConnectV1' 'MeterFamiliyTypeSmartMeMeter' 'MeterFamiliyTypeSmartMeMeterWithSwitch' 'MeterFamilyTypeMBusGatewayV1' 'MeterFamilyTypeRS485GatewayV1' 'MeterFamilyTypeKamstrupModule' 'MeterFamilyTypeSmartMe3PhaseMeter80A' 'MeterFamilyTypeSmartMe3PhaseMeter32A' 'MeterFamilyTypeSmartMe3PhaseTelstarTransformer' 'MeterFamilyTypeLandisGyrModule' 'MeterFamilyTypeFnnOpticalModule' 'MeterFamilyTypeSmartMe3PhaseTelstar80AWiFi' 'MeterFamilyTypeSmartMe3PhaseTelstar80AMobile' 'MeterFamilyTypeSmartMe1PhaseMeter80AV2WiFi' 'MeterFamilyTypeSmartMe1PhaseMeter32AV2WiFi' 'MeterFamilyTypeSmartMe1PhaseMeter80AGprs' 'MeterFamilyTypeSmartMe1PhaseMeter32AGprs' 'MeterFamilyTypeWMBusGatewayV1' 'MeterFamilyTypeSmartMe3PhaseTelstarTransformerMobile' 'MeterFamilyTypeMithralHallV1' 'MeterFamilyTypeRestApiMeter' 'MeterFamilyTypeVirtualBillingMeter')}}\",\n  \"FlowRate\": {{faker 'random.float'}},\n  \"Id\": \"\",\n  \"MeterSubType\": \"{{oneOf (array 'MeterSubTypeUnknown' 'MeterSubTypeCold' 'MeterSubTypeHeat' 'MeterSubTypeChargingStation' 'MeterSubTypeElectricity' 'MeterSubTypeWater' 'MeterSubTypeGas' 'MeterSubTypeElectricityHeat' 'MeterSubTypeTemperature' 'MeterSubTypeVirtualBattery')}}\",\n  \"Name\": \"\",\n  \"PowerFactor\": {{faker 'random.float'}},\n  \"PowerFactorL1\": {{faker 'random.float'}},\n  \"PowerFactorL2\": {{faker 'random.float'}},\n  \"PowerFactorL3\": {{faker 'random.float'}},\n  \"Serial\": {{faker 'random.number'}},\n  \"SwitchOn\": {{faker 'random.boolean'}},\n  \"SwitchPhaseL1On\": {{faker 'random.boolean'}},\n  \"SwitchPhaseL2On\": {{faker 'random.boolean'}},\n  \"SwitchPhaseL3On\": {{faker 'random.boolean'}},\n  \"Temperature\": {{faker 'random.float'}},\n  \"ValueDate\": \"{{faker 'date.recent' 365}}\",\n  \"Voltage\": {{faker 'random.float'}},\n  \"VoltageL1\": {{faker 'random.float'}},\n  \"VoltageL2\": {{faker 'random.float'}},\n  \"VoltageL3\": {{faker 'random.float'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b19202d7-eb68-4c77-88b7-6791562a2065",
      "documentation": "Gets all Virtual Tariffs of a user",
      "method": "get",
      "endpoint": "api/VirtualTariff",
      "responses": [
        {
          "uuid": "ae1d08bc-8969-4f51-b740-0804b550ac30",
          "body": "[\n  {\n    \"Date\": \"{{faker 'date.recent' 365}}\",\n    \"FolderId\": \"\",\n    \"Name\": \"\",\n    \"VirtualTariffs\": [\n      {\n        \"Factor\": {{faker 'random.float'}},\n        \"Id\": \"\",\n        \"Name\": \"\",\n        \"Type\": \"{{oneOf (array 'Battery' 'Solar' 'Normal')}}\",\n        \"Unit\": \"\",\n        \"Value\": {{faker 'random.float'}}\n      }\n    ]\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "82cadba4-ef19-4696-b6e0-465329ec995b",
      "documentation": "Gets all virtual tariffs of a folder",
      "method": "get",
      "endpoint": "api/VirtualTariff/:id",
      "responses": [
        {
          "uuid": "18339b78-0790-40fa-9712-cc4bc3c93923",
          "body": "{\n  \"Date\": \"{{faker 'date.recent' 365}}\",\n  \"FolderId\": \"\",\n  \"Name\": \"\",\n  \"VirtualTariffs\": [\n    {\n      \"Factor\": {{faker 'random.float'}},\n      \"Id\": \"\",\n      \"Name\": \"\",\n      \"Type\": \"{{oneOf (array 'Battery' 'Solar' 'Normal')}}\",\n      \"Unit\": \"\",\n      \"Value\": {{faker 'random.float'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9ac04705-d504-43eb-8c1f-5ff47499d081",
      "documentation": "Gets the consumption of a folder with a virtuall tariffs.",
      "method": "get",
      "endpoint": "api/VirtualTariffConsumption",
      "responses": [
        {
          "uuid": "97eea1ec-1092-403b-af36-39a69486e7c0",
          "body": "[\n  {\n    \"Consumption\": {{faker 'random.float'}},\n    \"Currency\": \"\",\n    \"Name\": \"\",\n    \"Price\": {{faker 'random.float'}},\n    \"TariffType\": \"{{oneOf (array 'Battery' 'Solar' 'Normal')}}\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4a22f09f-63e4-4599-bec3-40c948aab174",
      "documentation": "Gets all Virtual Tariffs for a property (folder)",
      "method": "get",
      "endpoint": "api/VirtualTariffsForProperty/:id",
      "responses": [
        {
          "uuid": "5e95a0b2-5aa5-4a94-ab1a-af19adb8cefe",
          "body": "[\n  {\n    \"Date\": \"{{faker 'date.recent' 365}}\",\n    \"FolderId\": \"\",\n    \"Name\": \"\",\n    \"VirtualTariffs\": [\n      {\n        \"Factor\": {{faker 'random.float'}},\n        \"Id\": \"\",\n        \"Name\": \"\",\n        \"Type\": \"{{oneOf (array 'Battery' 'Solar' 'Normal')}}\",\n        \"Unit\": \"\",\n        \"Value\": {{faker 'random.float'}}\n      }\n    ]\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f11f8331-1780-4da4-b337-996e17df54d0",
      "documentation": "Assign a folder (source) or meter to another folder (target). Can be used to create a folder structure.",
      "method": "post",
      "endpoint": "api/folder/assign",
      "responses": [
        {
          "uuid": "e42c90f4-df0d-4929-b86e-8586815fc64c",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No Content",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8c35c5cd-946d-408f-9404-dfff16808576",
      "documentation": "Deletes a folder",
      "method": "delete",
      "endpoint": "api/folder/settings/:id",
      "responses": [
        {
          "uuid": "7deafe97-f2db-452a-90bf-cb6ed7a32f25",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No Content",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "26fd0861-917c-4773-a7d1-ab3015bfc359",
      "documentation": "Gets the settings of a folder or meter",
      "method": "get",
      "endpoint": "api/folder/settings/:id",
      "responses": [
        {
          "uuid": "da0a5678-997f-49d5-81e1-e17ab5e7111c",
          "body": "{\n  \"Description\": \"\",\n  \"Enable\": {{faker 'random.boolean'}},\n  \"FolderType\": \"{{oneOf (array 'Folder' 'Location' 'Factory' 'House' 'Office' 'Machine' 'VirtualMeter' 'ElecticityFolder' 'WaterFolder' 'HeatFolder' 'GasFolder' 'TemperatureFolder' 'Sun' 'Light' 'Ice' 'Sofa' 'Food' 'Coffee' 'Car' 'ChargingStation' 'Meter' 'User' 'Trash' 'GridPhotovoltaicPowerSystem')}}\",\n  \"Name\": \"\",\n  \"ParentFolderId\": \"\",\n  \"SerialNumber\": {{faker 'random.number'}},\n  \"UseableForVirtualBillingMeters\": {{faker 'random.boolean'}},\n  \"ValueCorrection\": {{faker 'random.float'}},\n  \"ValueCorrectionParentFolder\": {{faker 'random.float'}},\n  \"VisualizationName\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1ae61925-c995-4739-8bea-968edcc67175",
      "documentation": "Add or edit a folder or a meter. To add a new folder use and empty ID",
      "method": "post",
      "endpoint": "api/folder/settings/:id",
      "responses": [
        {
          "uuid": "d9ebaa7d-da3a-4e8f-9e1c-afe5a4db6c6b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0223ba9d-ca17-4e6d-9565-b8e3d25df7d6",
      "documentation": "Deletes a user to folder assignement",
      "method": "delete",
      "endpoint": "api/folder/user/assign",
      "responses": [
        {
          "uuid": "19cfe379-bd7c-44fb-8016-fccefd632e91",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No Content",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a1cb7b59-9f5a-403b-81c9-781a73278962",
      "documentation": "Assign a user to a folder",
      "method": "post",
      "endpoint": "api/folder/user/assign",
      "responses": [
        {
          "uuid": "1c93121e-c31b-4c7d-9276-181170976e20",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No Content",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e683c864-2d2a-491b-a21d-427063d80c61",
      "documentation": "",
      "method": "get",
      "endpoint": "api/oauth/authorize",
      "responses": [
        {
          "uuid": "0444bb10-1c47-4a69-9d6e-82f415d56b9a",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ca492aaf-01d3-4ae6-bc1c-73935bd61fda",
      "documentation": "",
      "method": "post",
      "endpoint": "api/oauth/authorize",
      "responses": [
        {
          "uuid": "081d3165-4ac8-49f1-b39b-4c2a30a73fa5",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "422f3cd0-1051-4499-8b58-767851d24b8f",
      "documentation": "Gets the active charging data of a pico station",
      "method": "get",
      "endpoint": "api/pico/charging/:id",
      "responses": [
        {
          "uuid": "a093ae7a-4fea-4ef4-aeed-04b2b01e84fd",
          "body": "{\n  \"ActiveChargingEnergy\": {{faker 'random.float'}},\n  \"ActiveChargingPower\": {{faker 'random.float'}},\n  \"Duration\": {{faker 'random.number'}},\n  \"State\": \"{{oneOf (array 'Booting' 'ReadyNoCarConnected' 'ReadyCarConnected' 'StartedWaitForCar' 'Charging' 'Offline')}}\",\n  \"ValueDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "02b939ee-b149-44af-82d8-41b864ce3d61",
      "documentation": "Gets the last charging history for a pico station",
      "method": "get",
      "endpoint": "api/pico/history/:id",
      "responses": [
        {
          "uuid": "67a9bd62-4fe7-4b73-8b3d-2ce464d63f3a",
          "body": "[\n  {\n    \"Duration\": {{faker 'random.number'}},\n    \"EnergyUsed\": {{faker 'random.float'}},\n    \"StartTime\": \"{{faker 'date.recent' 365}}\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2b339727-9a21-4bb4-bfa0-40e79b863f66",
      "documentation": "GET: api/pico/loadmanagementgroup\r\n            \r\n            Returns all available load management groups",
      "method": "get",
      "endpoint": "api/pico/loadmanagementgroup",
      "responses": [
        {
          "uuid": "6ed903c6-e85b-4dd7-9a68-53e7d18d600d",
          "body": "[\n  {\n    \"Id\": \"\",\n    \"MaxCurrent\": {{faker 'random.float'}},\n    \"Name\": \"\",\n    \"NumberOfStations\": {{faker 'random.number'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "80e00928-97fa-44f1-9087-4ab2443cccb3",
      "documentation": "Sets the dynamic current of a load management group or a single station.",
      "method": "post",
      "endpoint": "api/pico/loadmanagementgroup/current/:serial",
      "responses": [
        {
          "uuid": "6702be06-5813-49ce-a42c-2a81382e220f",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fc157b12-37bb-4780-9291-1080c2277e4d",
      "documentation": "GET: api/pico/loadmanagementgroup\r\n            \r\n            Returns a pico load management group by it's id",
      "method": "get",
      "endpoint": "api/pico/loadmanagementgroup/:id",
      "responses": [
        {
          "uuid": "009a5f39-051c-4f74-8196-7ed764fc912f",
          "body": "{\n  \"Id\": \"\",\n  \"MaxCurrent\": {{faker 'random.float'}},\n  \"Name\": \"\",\n  \"NumberOfStations\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "86c718c2-5b2f-407e-8bdd-a0bbaf6c5e0f",
      "documentation": "GET: api/pico/settings\r\n            \r\n            Returns the settings of a pico charging station.",
      "method": "get",
      "endpoint": "api/pico/settings/:id",
      "responses": [
        {
          "uuid": "bba7105e-8efb-4131-a330-c8df0f3e8291",
          "body": "{\n  \"AuthenticationType\": \"{{oneOf (array 'None' 'Backend')}}\",\n  \"DisplayBrightness\": \"\",\n  \"DnsName\": \"\",\n  \"IdleImageData\": \"\",\n  \"IdleImageUrl\": \"\",\n  \"InternalIp\": \"\",\n  \"LoadmanagementGroupId\": \"\",\n  \"MaxCurrent\": {{faker 'random.number'}},\n  \"MinCurrent\": {{faker 'random.number'}},\n  \"ModbusTcp\": {{faker 'random.boolean'}},\n  \"Name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}