{
  "uuid": "1421f60e-c48e-4315-a40a-1ef2d575f235",
  "lastMigration": 19,
  "name": "BatchService",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "2a9f55a7-b7f7-450b-91d1-884d1320a488",
      "documentation": "Lists all of the applications available in the specified account.",
      "method": "get",
      "endpoint": "applications",
      "responses": [
        {
          "uuid": "95be5aaa-0ff6-465d-9256-3bb861714a3a",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"displayName\": \"\",\n      \"id\": \"\",\n      \"versions\": [\n        \"\"\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the list of applications.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "19ab32be-17a5-4fd5-8189-a4b0dc30123b",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "74ba19be-9052-4bf8-bfaf-ea0c188af641",
      "documentation": "Gets information about the specified application.",
      "method": "get",
      "endpoint": "applications/:applicationId",
      "responses": [
        {
          "uuid": "9eaf9110-461e-442a-90de-e7148c072449",
          "body": "{\n  \"displayName\": \"\",\n  \"id\": \"\",\n  \"versions\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the application.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4fc9ca18-ac92-4eba-954d-b8cfd1c879cb",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e2476840-cc57-4728-a796-fa4d74b3dff9",
      "documentation": "Lists all of the certificates that have been added to the specified account.",
      "method": "get",
      "endpoint": "certificates",
      "responses": [
        {
          "uuid": "3ab9eb8b-9eae-45c3-87d1-d6fa71695f2d",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"deleteCertificateError\": {\n        \"code\": \"\",\n        \"message\": \"\",\n        \"values\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\"\n          }\n        ]\n      },\n      \"previousState\": \"{{oneOf (array 'active' 'deleting' 'deletefailed')}}\",\n      \"previousStateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"publicData\": \"\",\n      \"state\": \"{{oneOf (array 'active' 'deleting' 'deletefailed')}}\",\n      \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"thumbprint\": \"\",\n      \"thumbprintAlgorithm\": \"\",\n      \"url\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the list of certificates.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "28ec1601-785f-4a3c-b6c2-dfe17e3e24b6",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8824e0f9-5986-4ed5-8f82-16786d14c3de",
      "documentation": "Adds a certificate to the specified account.",
      "method": "post",
      "endpoint": "certificates",
      "responses": [
        {
          "uuid": "548807b0-34aa-4088-910a-0efeedfffdf3",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8a27c742-a995-4c83-b308-2d4794ffd84b",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2683bb3c-bf69-4b88-ad26-1a2646dc0fbb",
      "documentation": "Deletes a certificate from the specified account.",
      "method": "delete",
      "endpoint": "certificates(thumbprintAlgorithm=:thumbprintAlgorithm,thumbprint=:thumbprint)",
      "responses": [
        {
          "uuid": "c30a8ed0-cdb0-4746-9045-8b1e82577acb",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "df5459e0-c9b4-480d-bf03-dc33802f3734",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6a0ef0e0-62fc-4b38-b418-2bac99e3ade7",
      "documentation": "Gets information about the specified certificate.",
      "method": "get",
      "endpoint": "certificates(thumbprintAlgorithm=:thumbprintAlgorithm,thumbprint=:thumbprint)",
      "responses": [
        {
          "uuid": "71b9bd90-1cf7-4ddc-9a83-1b9db3f37223",
          "body": "{\n  \"deleteCertificateError\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"values\": [\n      {\n        \"name\": \"\",\n        \"value\": \"\"\n      }\n    ]\n  },\n  \"previousState\": \"{{oneOf (array 'active' 'deleting' 'deletefailed')}}\",\n  \"previousStateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n  \"publicData\": \"\",\n  \"state\": \"{{oneOf (array 'active' 'deleting' 'deletefailed')}}\",\n  \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n  \"thumbprint\": \"\",\n  \"thumbprintAlgorithm\": \"\",\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the certificate.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a0314de9-b3f2-4917-aa05-3e660d584eae",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "61282e0c-9725-4892-b320-2b91c817001c",
      "documentation": "Cancels a failed deletion of a certificate from the specified account.",
      "method": "post",
      "endpoint": "certificates(thumbprintAlgorithm=:thumbprintAlgorithm,thumbprint=:thumbprint)/canceldelete",
      "responses": [
        {
          "uuid": "e877e6ef-897b-49cc-8bfb-45394fc9b391",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c31f4643-8bf0-43a2-8f49-d6cb34c95ea2",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d9634e9f-a445-4c6a-9e27-74885ade8cbb",
      "documentation": "Lists all of the jobs in the specified account.",
      "method": "get",
      "endpoint": "jobs",
      "responses": [
        {
          "uuid": "d6ce5a84-9b2a-47cd-9827-d2060ddd124e",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"commonEnvironmentSettings\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"constraints\": {\n        \"maxTaskRetryCount\": {{faker 'random.number'}},\n        \"maxWallClockTime\": \"\"\n      },\n      \"creationTime\": \"{{faker 'date.recent' 365}}\",\n      \"displayName\": \"\",\n      \"eTag\": \"\",\n      \"executionInfo\": {\n        \"endTime\": \"{{faker 'date.recent' 365}}\",\n        \"poolId\": \"\",\n        \"schedulingError\": {\n          \"category\": \"{{oneOf (array 'usererror' 'servererror')}}\",\n          \"code\": \"\",\n          \"details\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"message\": \"\"\n        },\n        \"startTime\": \"{{faker 'date.recent' 365}}\",\n        \"terminateReason\": \"\"\n      },\n      \"id\": \"\",\n      \"jobManagerTask\": {\n        \"allowLowPriorityNode\": {{faker 'random.boolean'}},\n        \"applicationPackageReferences\": [\n          {\n            \"applicationId\": \"\",\n            \"version\": \"\"\n          }\n        ],\n        \"authenticationTokenSettings\": {\n          \"access\": [\n            \"{{oneOf (array 'job')}}\"\n          ]\n        },\n        \"commandLine\": \"\",\n        \"constraints\": {\n          \"maxTaskRetryCount\": {{faker 'random.number'}},\n          \"maxWallClockTime\": \"\",\n          \"retentionTime\": \"\"\n        },\n        \"containerSettings\": {\n          \"containerRunOptions\": \"\",\n          \"imageName\": \"\",\n          \"registry\": {\n            \"password\": \"\",\n            \"registryServer\": \"\",\n            \"username\": \"\"\n          }\n        },\n        \"displayName\": \"\",\n        \"environmentSettings\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"killJobOnCompletion\": {{faker 'random.boolean'}},\n        \"outputFiles\": [\n          {\n            \"destination\": {\n              \"container\": {\n                \"containerUrl\": \"\",\n                \"path\": \"\"\n              }\n            },\n            \"filePattern\": \"\",\n            \"uploadOptions\": {\n              \"uploadCondition\": \"{{oneOf (array 'tasksuccess' 'taskfailure' 'taskcompletion')}}\"\n            }\n          }\n        ],\n        \"resourceFiles\": [\n          {\n            \"blobSource\": \"\",\n            \"fileMode\": \"\",\n            \"filePath\": \"\"\n          }\n        ],\n        \"runExclusive\": {{faker 'random.boolean'}},\n        \"userIdentity\": {\n          \"autoUser\": {\n            \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n            \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n          },\n          \"username\": \"\"\n        }\n      },\n      \"jobPreparationTask\": {\n        \"commandLine\": \"\",\n        \"constraints\": {\n          \"maxTaskRetryCount\": {{faker 'random.number'}},\n          \"maxWallClockTime\": \"\",\n          \"retentionTime\": \"\"\n        },\n        \"containerSettings\": {\n          \"containerRunOptions\": \"\",\n          \"imageName\": \"\",\n          \"registry\": {\n            \"password\": \"\",\n            \"registryServer\": \"\",\n            \"username\": \"\"\n          }\n        },\n        \"environmentSettings\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"rerunOnNodeRebootAfterSuccess\": {{faker 'random.boolean'}},\n        \"resourceFiles\": [\n          {\n            \"blobSource\": \"\",\n            \"fileMode\": \"\",\n            \"filePath\": \"\"\n          }\n        ],\n        \"userIdentity\": {\n          \"autoUser\": {\n            \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n            \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n          },\n          \"username\": \"\"\n        },\n        \"waitForSuccess\": {{faker 'random.boolean'}}\n      },\n      \"jobReleaseTask\": {\n        \"commandLine\": \"\",\n        \"containerSettings\": {\n          \"containerRunOptions\": \"\",\n          \"imageName\": \"\",\n          \"registry\": {\n            \"password\": \"\",\n            \"registryServer\": \"\",\n            \"username\": \"\"\n          }\n        },\n        \"environmentSettings\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"maxWallClockTime\": \"\",\n        \"resourceFiles\": [\n          {\n            \"blobSource\": \"\",\n            \"fileMode\": \"\",\n            \"filePath\": \"\"\n          }\n        ],\n        \"retentionTime\": \"\",\n        \"userIdentity\": {\n          \"autoUser\": {\n            \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n            \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n          },\n          \"username\": \"\"\n        }\n      },\n      \"lastModified\": \"{{faker 'date.recent' 365}}\",\n      \"metadata\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"onAllTasksComplete\": \"{{oneOf (array 'noaction' 'terminatejob')}}\",\n      \"onTaskFailure\": \"{{oneOf (array 'noaction' 'performexitoptionsjobaction')}}\",\n      \"poolInfo\": {\n        \"autoPoolSpecification\": {\n          \"autoPoolIdPrefix\": \"\",\n          \"keepAlive\": {{faker 'random.boolean'}},\n          \"pool\": {\n            \"applicationLicenses\": [\n              \"\"\n            ],\n            \"applicationPackageReferences\": [\n              {\n                \"applicationId\": \"\",\n                \"version\": \"\"\n              }\n            ],\n            \"autoScaleEvaluationInterval\": \"\",\n            \"autoScaleFormula\": \"\",\n            \"certificateReferences\": [\n              {\n                \"storeLocation\": \"{{oneOf (array 'currentuser' 'localmachine')}}\",\n                \"storeName\": \"\",\n                \"thumbprint\": \"\",\n                \"thumbprintAlgorithm\": \"\",\n                \"visibility\": [\n                  \"{{oneOf (array 'starttask' 'task' 'remoteuser')}}\"\n                ]\n              }\n            ],\n            \"cloudServiceConfiguration\": {\n              \"currentOSVersion\": \"\",\n              \"osFamily\": \"\",\n              \"targetOSVersion\": \"\"\n            },\n            \"displayName\": \"\",\n            \"enableAutoScale\": {{faker 'random.boolean'}},\n            \"enableInterNodeCommunication\": {{faker 'random.boolean'}},\n            \"maxTasksPerNode\": {{faker 'random.number'}},\n            \"metadata\": [\n              {\n                \"name\": \"\",\n                \"value\": \"\"\n              }\n            ],\n            \"networkConfiguration\": {\n              \"endpointConfiguration\": {\n                \"inboundNATPools\": [\n                  {\n                    \"backendPort\": {{faker 'random.number'}},\n                    \"frontendPortRangeEnd\": {{faker 'random.number'}},\n                    \"frontendPortRangeStart\": {{faker 'random.number'}},\n                    \"name\": \"\",\n                    \"networkSecurityGroupRules\": [\n                      {\n                        \"access\": \"{{oneOf (array 'allow' 'deny')}}\",\n                        \"priority\": {{faker 'random.number'}},\n                        \"sourceAddressPrefix\": \"\"\n                      }\n                    ],\n                    \"protocol\": \"{{oneOf (array 'tcp' 'udp')}}\"\n                  }\n                ]\n              },\n              \"subnetId\": \"\"\n            },\n            \"resizeTimeout\": \"\",\n            \"startTask\": {\n              \"commandLine\": \"\",\n              \"containerSettings\": {\n                \"containerRunOptions\": \"\",\n                \"imageName\": \"\",\n                \"registry\": {\n                  \"password\": \"\",\n                  \"registryServer\": \"\",\n                  \"username\": \"\"\n                }\n              },\n              \"environmentSettings\": [\n                {\n                  \"name\": \"\",\n                  \"value\": \"\"\n                }\n              ],\n              \"maxTaskRetryCount\": {{faker 'random.number'}},\n              \"resourceFiles\": [\n                {\n                  \"blobSource\": \"\",\n                  \"fileMode\": \"\",\n                  \"filePath\": \"\"\n                }\n              ],\n              \"userIdentity\": {\n                \"autoUser\": {\n                  \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n                  \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n                },\n                \"username\": \"\"\n              },\n              \"waitForSuccess\": {{faker 'random.boolean'}}\n            },\n            \"targetDedicatedNodes\": {{faker 'random.number'}},\n            \"targetLowPriorityNodes\": {{faker 'random.number'}},\n            \"taskSchedulingPolicy\": {\n              \"nodeFillType\": \"{{oneOf (array 'spread' 'pack')}}\"\n            },\n            \"userAccounts\": [\n              {\n                \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n                \"linuxUserConfiguration\": {\n                  \"gid\": {{faker 'random.number'}},\n                  \"sshPrivateKey\": \"\",\n                  \"uid\": {{faker 'random.number'}}\n                },\n                \"name\": \"\",\n                \"password\": \"\"\n              }\n            ],\n            \"virtualMachineConfiguration\": {\n              \"containerConfiguration\": {\n                \"containerImageNames\": [\n                  \"\"\n                ],\n                \"containerRegistries\": [\n                  {\n                    \"password\": \"\",\n                    \"registryServer\": \"\",\n                    \"username\": \"\"\n                  }\n                ],\n                \"type\": \"{{oneOf (array 'dockerCompatible')}}\"\n              },\n              \"dataDisks\": [\n                {\n                  \"caching\": \"{{oneOf (array 'none' 'readonly' 'readwrite')}}\",\n                  \"diskSizeGB\": {{faker 'random.number'}},\n                  \"lun\": {{faker 'random.number'}},\n                  \"storageAccountType\": \"{{oneOf (array 'standard_lrs' 'premium_lrs')}}\"\n                }\n              ],\n              \"imageReference\": {\n                \"offer\": \"\",\n                \"publisher\": \"\",\n                \"sku\": \"\",\n                \"version\": \"\",\n                \"virtualMachineImageId\": \"\"\n              },\n              \"licenseType\": \"\",\n              \"nodeAgentSKUId\": \"\",\n              \"osDisk\": {\n                \"caching\": \"{{oneOf (array 'none' 'readonly' 'readwrite')}}\"\n              },\n              \"windowsConfiguration\": {\n                \"enableAutomaticUpdates\": {{faker 'random.boolean'}}\n              }\n            },\n            \"vmSize\": \"\"\n          },\n          \"poolLifetimeOption\": \"{{oneOf (array 'jobschedule' 'job')}}\"\n        },\n        \"poolId\": \"\"\n      },\n      \"previousState\": \"{{oneOf (array 'active' 'disabling' 'disabled' 'enabling' 'terminating' 'completed' 'deleting')}}\",\n      \"previousStateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"priority\": {{faker 'random.number'}},\n      \"state\": \"{{oneOf (array 'active' 'disabling' 'disabled' 'enabling' 'terminating' 'completed' 'deleting')}}\",\n      \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"stats\": {\n        \"kernelCPUTime\": \"\",\n        \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n        \"numFailedTasks\": {{faker 'random.number'}},\n        \"numSucceededTasks\": {{faker 'random.number'}},\n        \"numTaskRetries\": {{faker 'random.number'}},\n        \"readIOGiB\": {{faker 'random.float'}},\n        \"readIOps\": {{faker 'random.number'}},\n        \"startTime\": \"{{faker 'date.recent' 365}}\",\n        \"url\": \"\",\n        \"userCPUTime\": \"\",\n        \"waitTime\": \"\",\n        \"wallClockTime\": \"\",\n        \"writeIOGiB\": {{faker 'random.float'}},\n        \"writeIOps\": {{faker 'random.number'}}\n      },\n      \"url\": \"\",\n      \"usesTaskDependencies\": {{faker 'random.boolean'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the list of jobs.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "74a78dba-15ba-4b88-9eba-9332d2782110",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "492344df-f93a-42b1-8ec1-cbfc18ea32db",
      "documentation": "Adds a job to the specified account.",
      "method": "post",
      "endpoint": "jobs",
      "responses": [
        {
          "uuid": "759c2268-1f5e-423a-ae16-9772ac90b927",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e62d843a-3881-4c8a-8995-617a8008b0f8",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "81981ca6-3262-49a0-9ff3-54aba87fc8d3",
      "documentation": "Deletes a job.",
      "method": "delete",
      "endpoint": "jobs/:jobId",
      "responses": [
        {
          "uuid": "1bdabb5e-5e4a-450b-9daf-dc0800115220",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d11f3e92-9243-4bfc-8c79-6b2acf521f2b",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ca484fd7-e389-45f8-919f-b035e515d137",
      "documentation": "Gets information about the specified job.",
      "method": "get",
      "endpoint": "jobs/:jobId",
      "responses": [
        {
          "uuid": "652e1967-c4df-4788-970c-960c9faa66a5",
          "body": "{\n  \"commonEnvironmentSettings\": [\n    {\n      \"name\": \"\",\n      \"value\": \"\"\n    }\n  ],\n  \"constraints\": {\n    \"maxTaskRetryCount\": {{faker 'random.number'}},\n    \"maxWallClockTime\": \"\"\n  },\n  \"creationTime\": \"{{faker 'date.recent' 365}}\",\n  \"displayName\": \"\",\n  \"eTag\": \"\",\n  \"executionInfo\": {\n    \"endTime\": \"{{faker 'date.recent' 365}}\",\n    \"poolId\": \"\",\n    \"schedulingError\": {\n      \"category\": \"{{oneOf (array 'usererror' 'servererror')}}\",\n      \"code\": \"\",\n      \"details\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"message\": \"\"\n    },\n    \"startTime\": \"{{faker 'date.recent' 365}}\",\n    \"terminateReason\": \"\"\n  },\n  \"id\": \"\",\n  \"jobManagerTask\": {\n    \"allowLowPriorityNode\": {{faker 'random.boolean'}},\n    \"applicationPackageReferences\": [\n      {\n        \"applicationId\": \"\",\n        \"version\": \"\"\n      }\n    ],\n    \"authenticationTokenSettings\": {\n      \"access\": [\n        \"{{oneOf (array 'job')}}\"\n      ]\n    },\n    \"commandLine\": \"\",\n    \"constraints\": {\n      \"maxTaskRetryCount\": {{faker 'random.number'}},\n      \"maxWallClockTime\": \"\",\n      \"retentionTime\": \"\"\n    },\n    \"containerSettings\": {\n      \"containerRunOptions\": \"\",\n      \"imageName\": \"\",\n      \"registry\": {\n        \"password\": \"\",\n        \"registryServer\": \"\",\n        \"username\": \"\"\n      }\n    },\n    \"displayName\": \"\",\n    \"environmentSettings\": [\n      {\n        \"name\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"id\": \"\",\n    \"killJobOnCompletion\": {{faker 'random.boolean'}},\n    \"outputFiles\": [\n      {\n        \"destination\": {\n          \"container\": {\n            \"containerUrl\": \"\",\n            \"path\": \"\"\n          }\n        },\n        \"filePattern\": \"\",\n        \"uploadOptions\": {\n          \"uploadCondition\": \"{{oneOf (array 'tasksuccess' 'taskfailure' 'taskcompletion')}}\"\n        }\n      }\n    ],\n    \"resourceFiles\": [\n      {\n        \"blobSource\": \"\",\n        \"fileMode\": \"\",\n        \"filePath\": \"\"\n      }\n    ],\n    \"runExclusive\": {{faker 'random.boolean'}},\n    \"userIdentity\": {\n      \"autoUser\": {\n        \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n        \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n      },\n      \"username\": \"\"\n    }\n  },\n  \"jobPreparationTask\": {\n    \"commandLine\": \"\",\n    \"constraints\": {\n      \"maxTaskRetryCount\": {{faker 'random.number'}},\n      \"maxWallClockTime\": \"\",\n      \"retentionTime\": \"\"\n    },\n    \"containerSettings\": {\n      \"containerRunOptions\": \"\",\n      \"imageName\": \"\",\n      \"registry\": {\n        \"password\": \"\",\n        \"registryServer\": \"\",\n        \"username\": \"\"\n      }\n    },\n    \"environmentSettings\": [\n      {\n        \"name\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"id\": \"\",\n    \"rerunOnNodeRebootAfterSuccess\": {{faker 'random.boolean'}},\n    \"resourceFiles\": [\n      {\n        \"blobSource\": \"\",\n        \"fileMode\": \"\",\n        \"filePath\": \"\"\n      }\n    ],\n    \"userIdentity\": {\n      \"autoUser\": {\n        \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n        \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n      },\n      \"username\": \"\"\n    },\n    \"waitForSuccess\": {{faker 'random.boolean'}}\n  },\n  \"jobReleaseTask\": {\n    \"commandLine\": \"\",\n    \"containerSettings\": {\n      \"containerRunOptions\": \"\",\n      \"imageName\": \"\",\n      \"registry\": {\n        \"password\": \"\",\n        \"registryServer\": \"\",\n        \"username\": \"\"\n      }\n    },\n    \"environmentSettings\": [\n      {\n        \"name\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"id\": \"\",\n    \"maxWallClockTime\": \"\",\n    \"resourceFiles\": [\n      {\n        \"blobSource\": \"\",\n        \"fileMode\": \"\",\n        \"filePath\": \"\"\n      }\n    ],\n    \"retentionTime\": \"\",\n    \"userIdentity\": {\n      \"autoUser\": {\n        \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n        \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n      },\n      \"username\": \"\"\n    }\n  },\n  \"lastModified\": \"{{faker 'date.recent' 365}}\",\n  \"metadata\": [\n    {\n      \"name\": \"\",\n      \"value\": \"\"\n    }\n  ],\n  \"onAllTasksComplete\": \"{{oneOf (array 'noaction' 'terminatejob')}}\",\n  \"onTaskFailure\": \"{{oneOf (array 'noaction' 'performexitoptionsjobaction')}}\",\n  \"poolInfo\": {\n    \"autoPoolSpecification\": {\n      \"autoPoolIdPrefix\": \"\",\n      \"keepAlive\": {{faker 'random.boolean'}},\n      \"pool\": {\n        \"applicationLicenses\": [\n          \"\"\n        ],\n        \"applicationPackageReferences\": [\n          {\n            \"applicationId\": \"\",\n            \"version\": \"\"\n          }\n        ],\n        \"autoScaleEvaluationInterval\": \"\",\n        \"autoScaleFormula\": \"\",\n        \"certificateReferences\": [\n          {\n            \"storeLocation\": \"{{oneOf (array 'currentuser' 'localmachine')}}\",\n            \"storeName\": \"\",\n            \"thumbprint\": \"\",\n            \"thumbprintAlgorithm\": \"\",\n            \"visibility\": [\n              \"{{oneOf (array 'starttask' 'task' 'remoteuser')}}\"\n            ]\n          }\n        ],\n        \"cloudServiceConfiguration\": {\n          \"currentOSVersion\": \"\",\n          \"osFamily\": \"\",\n          \"targetOSVersion\": \"\"\n        },\n        \"displayName\": \"\",\n        \"enableAutoScale\": {{faker 'random.boolean'}},\n        \"enableInterNodeCommunication\": {{faker 'random.boolean'}},\n        \"maxTasksPerNode\": {{faker 'random.number'}},\n        \"metadata\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"networkConfiguration\": {\n          \"endpointConfiguration\": {\n            \"inboundNATPools\": [\n              {\n                \"backendPort\": {{faker 'random.number'}},\n                \"frontendPortRangeEnd\": {{faker 'random.number'}},\n                \"frontendPortRangeStart\": {{faker 'random.number'}},\n                \"name\": \"\",\n                \"networkSecurityGroupRules\": [\n                  {\n                    \"access\": \"{{oneOf (array 'allow' 'deny')}}\",\n                    \"priority\": {{faker 'random.number'}},\n                    \"sourceAddressPrefix\": \"\"\n                  }\n                ],\n                \"protocol\": \"{{oneOf (array 'tcp' 'udp')}}\"\n              }\n            ]\n          },\n          \"subnetId\": \"\"\n        },\n        \"resizeTimeout\": \"\",\n        \"startTask\": {\n          \"commandLine\": \"\",\n          \"containerSettings\": {\n            \"containerRunOptions\": \"\",\n            \"imageName\": \"\",\n            \"registry\": {\n              \"password\": \"\",\n              \"registryServer\": \"\",\n              \"username\": \"\"\n            }\n          },\n          \"environmentSettings\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"maxTaskRetryCount\": {{faker 'random.number'}},\n          \"resourceFiles\": [\n            {\n              \"blobSource\": \"\",\n              \"fileMode\": \"\",\n              \"filePath\": \"\"\n            }\n          ],\n          \"userIdentity\": {\n            \"autoUser\": {\n              \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n              \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n            },\n            \"username\": \"\"\n          },\n          \"waitForSuccess\": {{faker 'random.boolean'}}\n        },\n        \"targetDedicatedNodes\": {{faker 'random.number'}},\n        \"targetLowPriorityNodes\": {{faker 'random.number'}},\n        \"taskSchedulingPolicy\": {\n          \"nodeFillType\": \"{{oneOf (array 'spread' 'pack')}}\"\n        },\n        \"userAccounts\": [\n          {\n            \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n            \"linuxUserConfiguration\": {\n              \"gid\": {{faker 'random.number'}},\n              \"sshPrivateKey\": \"\",\n              \"uid\": {{faker 'random.number'}}\n            },\n            \"name\": \"\",\n            \"password\": \"\"\n          }\n        ],\n        \"virtualMachineConfiguration\": {\n          \"containerConfiguration\": {\n            \"containerImageNames\": [\n              \"\"\n            ],\n            \"containerRegistries\": [\n              {\n                \"password\": \"\",\n                \"registryServer\": \"\",\n                \"username\": \"\"\n              }\n            ],\n            \"type\": \"{{oneOf (array 'dockerCompatible')}}\"\n          },\n          \"dataDisks\": [\n            {\n              \"caching\": \"{{oneOf (array 'none' 'readonly' 'readwrite')}}\",\n              \"diskSizeGB\": {{faker 'random.number'}},\n              \"lun\": {{faker 'random.number'}},\n              \"storageAccountType\": \"{{oneOf (array 'standard_lrs' 'premium_lrs')}}\"\n            }\n          ],\n          \"imageReference\": {\n            \"offer\": \"\",\n            \"publisher\": \"\",\n            \"sku\": \"\",\n            \"version\": \"\",\n            \"virtualMachineImageId\": \"\"\n          },\n          \"licenseType\": \"\",\n          \"nodeAgentSKUId\": \"\",\n          \"osDisk\": {\n            \"caching\": \"{{oneOf (array 'none' 'readonly' 'readwrite')}}\"\n          },\n          \"windowsConfiguration\": {\n            \"enableAutomaticUpdates\": {{faker 'random.boolean'}}\n          }\n        },\n        \"vmSize\": \"\"\n      },\n      \"poolLifetimeOption\": \"{{oneOf (array 'jobschedule' 'job')}}\"\n    },\n    \"poolId\": \"\"\n  },\n  \"previousState\": \"{{oneOf (array 'active' 'disabling' 'disabled' 'enabling' 'terminating' 'completed' 'deleting')}}\",\n  \"previousStateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n  \"priority\": {{faker 'random.number'}},\n  \"state\": \"{{oneOf (array 'active' 'disabling' 'disabled' 'enabling' 'terminating' 'completed' 'deleting')}}\",\n  \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n  \"stats\": {\n    \"kernelCPUTime\": \"\",\n    \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n    \"numFailedTasks\": {{faker 'random.number'}},\n    \"numSucceededTasks\": {{faker 'random.number'}},\n    \"numTaskRetries\": {{faker 'random.number'}},\n    \"readIOGiB\": {{faker 'random.float'}},\n    \"readIOps\": {{faker 'random.number'}},\n    \"startTime\": \"{{faker 'date.recent' 365}}\",\n    \"url\": \"\",\n    \"userCPUTime\": \"\",\n    \"waitTime\": \"\",\n    \"wallClockTime\": \"\",\n    \"writeIOGiB\": {{faker 'random.float'}},\n    \"writeIOps\": {{faker 'random.number'}}\n  },\n  \"url\": \"\",\n  \"usesTaskDependencies\": {{faker 'random.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the job.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d0df3eee-8d54-409b-aa80-f24c90651e5d",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8c2337a7-c877-489b-9b43-a9b7ff4c4a01",
      "documentation": "Updates the properties of the specified job.",
      "method": "patch",
      "endpoint": "jobs/:jobId",
      "responses": [
        {
          "uuid": "a972f0a3-b215-43b3-831d-00fd0b0fe961",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "afc67d35-018f-48b9-9e59-7032b62da3c3",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "42591039-9fa1-46e1-bd33-e541045a6f17",
      "documentation": "Updates the properties of the specified job.",
      "method": "put",
      "endpoint": "jobs/:jobId",
      "responses": [
        {
          "uuid": "da18c2ad-f4ac-4ec3-bcc6-7a6dd3258159",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b1ac9253-8349-47a7-b5ce-f6ebc5e55251",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2d8b1693-52cc-4d5b-8cb4-d62b33c15759",
      "documentation": "Adds a collection of tasks to the specified job.",
      "method": "post",
      "endpoint": "jobs/:jobId/addtaskcollection",
      "responses": [
        {
          "uuid": "adbb6f0e-6362-444e-a987-8818635eb84a",
          "body": "{\n  \"value\": [\n    {\n      \"eTag\": \"\",\n      \"error\": {\n        \"code\": \"\",\n        \"message\": {\n          \"lang\": \"\",\n          \"value\": \"\"\n        },\n        \"values\": [\n          {\n            \"key\": \"\",\n            \"value\": \"\"\n          }\n        ]\n      },\n      \"lastModified\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"status\": \"{{oneOf (array 'success' 'clienterror' 'servererror')}}\",\n      \"taskId\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the results of the add task collection operation.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6f5a5270-816b-40b8-8eb3-462e1fbeedd0",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Unexpected error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4b0b1f2f-6a0d-445d-8085-ce08838b62ba",
      "documentation": "Disables the specified job, preventing new tasks from running.",
      "method": "post",
      "endpoint": "jobs/:jobId/disable",
      "responses": [
        {
          "uuid": "71cc3dec-cc67-4e31-b2f1-28f922ef4f76",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e6ef1ee0-28dd-4f69-bf5b-6bee335b7ecf",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5f7e760b-75cc-4190-b0ab-a2f8b9e763c6",
      "documentation": "Enables the specified job, allowing new tasks to run.",
      "method": "post",
      "endpoint": "jobs/:jobId/enable",
      "responses": [
        {
          "uuid": "3e94256b-6e5c-4953-9999-db7365204c4d",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fffe6bfc-da33-4024-a2a2-0e9d86fe951d",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ac414dd7-6e77-4795-84c3-c7efb7ddc653",
      "documentation": "Lists the execution status of the Job Preparation and Job Release task for the specified job across the compute nodes where the job has run.",
      "method": "get",
      "endpoint": "jobs/:jobId/jobpreparationandreleasetaskstatus",
      "responses": [
        {
          "uuid": "0cd8088b-f4e8-4c8a-beb8-2caeec9a7e1a",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"jobPreparationTaskExecutionInfo\": {\n        \"containerInfo\": {\n          \"containerId\": \"\",\n          \"error\": \"\",\n          \"state\": \"\"\n        },\n        \"endTime\": \"{{faker 'date.recent' 365}}\",\n        \"exitCode\": {{faker 'random.number'}},\n        \"failureInfo\": {\n          \"category\": \"{{oneOf (array 'usererror' 'servererror')}}\",\n          \"code\": \"\",\n          \"details\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"message\": \"\"\n        },\n        \"lastRetryTime\": \"{{faker 'date.recent' 365}}\",\n        \"result\": \"{{oneOf (array 'success' 'failure')}}\",\n        \"retryCount\": {{faker 'random.number'}},\n        \"startTime\": \"{{faker 'date.recent' 365}}\",\n        \"state\": \"{{oneOf (array 'running' 'completed')}}\",\n        \"taskRootDirectory\": \"\",\n        \"taskRootDirectoryUrl\": \"\"\n      },\n      \"jobReleaseTaskExecutionInfo\": {\n        \"containerInfo\": {\n          \"containerId\": \"\",\n          \"error\": \"\",\n          \"state\": \"\"\n        },\n        \"endTime\": \"{{faker 'date.recent' 365}}\",\n        \"exitCode\": {{faker 'random.number'}},\n        \"failureInfo\": {\n          \"category\": \"{{oneOf (array 'usererror' 'servererror')}}\",\n          \"code\": \"\",\n          \"details\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"message\": \"\"\n        },\n        \"result\": \"{{oneOf (array 'success' 'failure')}}\",\n        \"startTime\": \"{{faker 'date.recent' 365}}\",\n        \"state\": \"{{oneOf (array 'running' 'completed')}}\",\n        \"taskRootDirectory\": \"\",\n        \"taskRootDirectoryUrl\": \"\"\n      },\n      \"nodeId\": \"\",\n      \"nodeUrl\": \"\",\n      \"poolId\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing a list of Job Preparation and Job Release task statuses.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "486a6a0b-0dd2-4cd0-a6c4-bffaf0e57695",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service. If this API is invoked on a job which has no Job Preparation or Job Release task, the Batch service returns HTTP status code 409.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "60f68785-16f8-4028-811f-d59b7f2b7533",
      "documentation": "Gets the task counts for the specified job.",
      "method": "get",
      "endpoint": "jobs/:jobId/taskcounts",
      "responses": [
        {
          "uuid": "9374b5f3-0700-462d-86f1-a08f75018037",
          "body": "{\n  \"active\": {{faker 'random.number'}},\n  \"completed\": {{faker 'random.number'}},\n  \"failed\": {{faker 'random.number'}},\n  \"running\": {{faker 'random.number'}},\n  \"succeeded\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the task counts for the specified job.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b59f930a-145c-4ea1-bbbf-13fcb9e6c12c",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c732cc8b-4730-4bbc-a251-996ad7e9aa34",
      "documentation": "Lists all of the tasks that are associated with the specified job.",
      "method": "get",
      "endpoint": "jobs/:jobId/tasks",
      "responses": [
        {
          "uuid": "0e3477d1-4cc2-41c0-b09d-8c9b0153bb8f",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"affinityInfo\": {\n        \"affinityId\": \"\"\n      },\n      \"applicationPackageReferences\": [\n        {\n          \"applicationId\": \"\",\n          \"version\": \"\"\n        }\n      ],\n      \"authenticationTokenSettings\": {\n        \"access\": [\n          \"{{oneOf (array 'job')}}\"\n        ]\n      },\n      \"commandLine\": \"\",\n      \"constraints\": {\n        \"maxTaskRetryCount\": {{faker 'random.number'}},\n        \"maxWallClockTime\": \"\",\n        \"retentionTime\": \"\"\n      },\n      \"containerSettings\": {\n        \"containerRunOptions\": \"\",\n        \"imageName\": \"\",\n        \"registry\": {\n          \"password\": \"\",\n          \"registryServer\": \"\",\n          \"username\": \"\"\n        }\n      },\n      \"creationTime\": \"{{faker 'date.recent' 365}}\",\n      \"dependsOn\": {\n        \"taskIdRanges\": [\n          {\n            \"end\": {{faker 'random.number'}},\n            \"start\": {{faker 'random.number'}}\n          }\n        ],\n        \"taskIds\": [\n          \"\"\n        ]\n      },\n      \"displayName\": \"\",\n      \"eTag\": \"\",\n      \"environmentSettings\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"executionInfo\": {\n        \"containerInfo\": {\n          \"containerId\": \"\",\n          \"error\": \"\",\n          \"state\": \"\"\n        },\n        \"endTime\": \"{{faker 'date.recent' 365}}\",\n        \"exitCode\": {{faker 'random.number'}},\n        \"failureInfo\": {\n          \"category\": \"{{oneOf (array 'usererror' 'servererror')}}\",\n          \"code\": \"\",\n          \"details\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"message\": \"\"\n        },\n        \"lastRequeueTime\": \"{{faker 'date.recent' 365}}\",\n        \"lastRetryTime\": \"{{faker 'date.recent' 365}}\",\n        \"requeueCount\": {{faker 'random.number'}},\n        \"result\": \"{{oneOf (array 'success' 'failure')}}\",\n        \"retryCount\": {{faker 'random.number'}},\n        \"startTime\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"exitConditions\": {\n        \"default\": {\n          \"dependencyAction\": \"{{oneOf (array 'satisfy' 'block')}}\",\n          \"jobAction\": \"{{oneOf (array 'none' 'disable' 'terminate')}}\"\n        },\n        \"exitCodeRanges\": [\n          {\n            \"end\": {{faker 'random.number'}},\n            \"exitOptions\": {\n              \"dependencyAction\": \"{{oneOf (array 'satisfy' 'block')}}\",\n              \"jobAction\": \"{{oneOf (array 'none' 'disable' 'terminate')}}\"\n            },\n            \"start\": {{faker 'random.number'}}\n          }\n        ],\n        \"exitCodes\": [\n          {\n            \"code\": {{faker 'random.number'}},\n            \"exitOptions\": {\n              \"dependencyAction\": \"{{oneOf (array 'satisfy' 'block')}}\",\n              \"jobAction\": \"{{oneOf (array 'none' 'disable' 'terminate')}}\"\n            }\n          }\n        ],\n        \"fileUploadError\": {\n          \"dependencyAction\": \"{{oneOf (array 'satisfy' 'block')}}\",\n          \"jobAction\": \"{{oneOf (array 'none' 'disable' 'terminate')}}\"\n        },\n        \"preProcessingError\": {\n          \"dependencyAction\": \"{{oneOf (array 'satisfy' 'block')}}\",\n          \"jobAction\": \"{{oneOf (array 'none' 'disable' 'terminate')}}\"\n        }\n      },\n      \"id\": \"\",\n      \"lastModified\": \"{{faker 'date.recent' 365}}\",\n      \"multiInstanceSettings\": {\n        \"commonResourceFiles\": [\n          {\n            \"blobSource\": \"\",\n            \"fileMode\": \"\",\n            \"filePath\": \"\"\n          }\n        ],\n        \"coordinationCommandLine\": \"\",\n        \"numberOfInstances\": {{faker 'random.number'}}\n      },\n      \"nodeInfo\": {\n        \"affinityId\": \"\",\n        \"nodeId\": \"\",\n        \"nodeUrl\": \"\",\n        \"poolId\": \"\",\n        \"taskRootDirectory\": \"\",\n        \"taskRootDirectoryUrl\": \"\"\n      },\n      \"outputFiles\": [\n        {\n          \"destination\": {\n            \"container\": {\n              \"containerUrl\": \"\",\n              \"path\": \"\"\n            }\n          },\n          \"filePattern\": \"\",\n          \"uploadOptions\": {\n            \"uploadCondition\": \"{{oneOf (array 'tasksuccess' 'taskfailure' 'taskcompletion')}}\"\n          }\n        }\n      ],\n      \"previousState\": \"{{oneOf (array 'active' 'preparing' 'running' 'completed')}}\",\n      \"previousStateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"resourceFiles\": [\n        {\n          \"blobSource\": \"\",\n          \"fileMode\": \"\",\n          \"filePath\": \"\"\n        }\n      ],\n      \"state\": \"{{oneOf (array 'active' 'preparing' 'running' 'completed')}}\",\n      \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"stats\": {\n        \"kernelCPUTime\": \"\",\n        \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n        \"readIOGiB\": {{faker 'random.float'}},\n        \"readIOps\": {{faker 'random.number'}},\n        \"startTime\": \"{{faker 'date.recent' 365}}\",\n        \"url\": \"\",\n        \"userCPUTime\": \"\",\n        \"waitTime\": \"\",\n        \"wallClockTime\": \"\",\n        \"writeIOGiB\": {{faker 'random.float'}},\n        \"writeIOps\": {{faker 'random.number'}}\n      },\n      \"url\": \"\",\n      \"userIdentity\": {\n        \"autoUser\": {\n          \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n          \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n        },\n        \"username\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the list of tasks.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b80ae95b-7545-409a-9e20-4725fa16a769",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b8112db7-1a21-4b87-9e9e-30d3696b86d6",
      "documentation": "Adds a task to the specified job.",
      "method": "post",
      "endpoint": "jobs/:jobId/tasks",
      "responses": [
        {
          "uuid": "26a11129-5d99-4333-9d38-be852cf79c86",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a93da118-6f55-47d1-a577-2b4050b995a8",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "224f153b-adcb-4933-9a4f-e5001fcfc349",
      "documentation": "Deletes a task from the specified job.",
      "method": "delete",
      "endpoint": "jobs/:jobId/tasks/:taskId",
      "responses": [
        {
          "uuid": "03b72bea-48d9-44e8-9bf1-0eb7777cfd38",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6bb485a5-1c87-4187-b22d-5af84ff566d1",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8a653fd1-ef82-4dc1-956c-12a3acb308f5",
      "documentation": "Gets information about the specified task.",
      "method": "get",
      "endpoint": "jobs/:jobId/tasks/:taskId",
      "responses": [
        {
          "uuid": "9e928277-f874-4296-85a8-3d319f9785a6",
          "body": "{\n  \"affinityInfo\": {\n    \"affinityId\": \"\"\n  },\n  \"applicationPackageReferences\": [\n    {\n      \"applicationId\": \"\",\n      \"version\": \"\"\n    }\n  ],\n  \"authenticationTokenSettings\": {\n    \"access\": [\n      \"{{oneOf (array 'job')}}\"\n    ]\n  },\n  \"commandLine\": \"\",\n  \"constraints\": {\n    \"maxTaskRetryCount\": {{faker 'random.number'}},\n    \"maxWallClockTime\": \"\",\n    \"retentionTime\": \"\"\n  },\n  \"containerSettings\": {\n    \"containerRunOptions\": \"\",\n    \"imageName\": \"\",\n    \"registry\": {\n      \"password\": \"\",\n      \"registryServer\": \"\",\n      \"username\": \"\"\n    }\n  },\n  \"creationTime\": \"{{faker 'date.recent' 365}}\",\n  \"dependsOn\": {\n    \"taskIdRanges\": [\n      {\n        \"end\": {{faker 'random.number'}},\n        \"start\": {{faker 'random.number'}}\n      }\n    ],\n    \"taskIds\": [\n      \"\"\n    ]\n  },\n  \"displayName\": \"\",\n  \"eTag\": \"\",\n  \"environmentSettings\": [\n    {\n      \"name\": \"\",\n      \"value\": \"\"\n    }\n  ],\n  \"executionInfo\": {\n    \"containerInfo\": {\n      \"containerId\": \"\",\n      \"error\": \"\",\n      \"state\": \"\"\n    },\n    \"endTime\": \"{{faker 'date.recent' 365}}\",\n    \"exitCode\": {{faker 'random.number'}},\n    \"failureInfo\": {\n      \"category\": \"{{oneOf (array 'usererror' 'servererror')}}\",\n      \"code\": \"\",\n      \"details\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"message\": \"\"\n    },\n    \"lastRequeueTime\": \"{{faker 'date.recent' 365}}\",\n    \"lastRetryTime\": \"{{faker 'date.recent' 365}}\",\n    \"requeueCount\": {{faker 'random.number'}},\n    \"result\": \"{{oneOf (array 'success' 'failure')}}\",\n    \"retryCount\": {{faker 'random.number'}},\n    \"startTime\": \"{{faker 'date.recent' 365}}\"\n  },\n  \"exitConditions\": {\n    \"default\": {\n      \"dependencyAction\": \"{{oneOf (array 'satisfy' 'block')}}\",\n      \"jobAction\": \"{{oneOf (array 'none' 'disable' 'terminate')}}\"\n    },\n    \"exitCodeRanges\": [\n      {\n        \"end\": {{faker 'random.number'}},\n        \"exitOptions\": {\n          \"dependencyAction\": \"{{oneOf (array 'satisfy' 'block')}}\",\n          \"jobAction\": \"{{oneOf (array 'none' 'disable' 'terminate')}}\"\n        },\n        \"start\": {{faker 'random.number'}}\n      }\n    ],\n    \"exitCodes\": [\n      {\n        \"code\": {{faker 'random.number'}},\n        \"exitOptions\": {\n          \"dependencyAction\": \"{{oneOf (array 'satisfy' 'block')}}\",\n          \"jobAction\": \"{{oneOf (array 'none' 'disable' 'terminate')}}\"\n        }\n      }\n    ],\n    \"fileUploadError\": {\n      \"dependencyAction\": \"{{oneOf (array 'satisfy' 'block')}}\",\n      \"jobAction\": \"{{oneOf (array 'none' 'disable' 'terminate')}}\"\n    },\n    \"preProcessingError\": {\n      \"dependencyAction\": \"{{oneOf (array 'satisfy' 'block')}}\",\n      \"jobAction\": \"{{oneOf (array 'none' 'disable' 'terminate')}}\"\n    }\n  },\n  \"id\": \"\",\n  \"lastModified\": \"{{faker 'date.recent' 365}}\",\n  \"multiInstanceSettings\": {\n    \"commonResourceFiles\": [\n      {\n        \"blobSource\": \"\",\n        \"fileMode\": \"\",\n        \"filePath\": \"\"\n      }\n    ],\n    \"coordinationCommandLine\": \"\",\n    \"numberOfInstances\": {{faker 'random.number'}}\n  },\n  \"nodeInfo\": {\n    \"affinityId\": \"\",\n    \"nodeId\": \"\",\n    \"nodeUrl\": \"\",\n    \"poolId\": \"\",\n    \"taskRootDirectory\": \"\",\n    \"taskRootDirectoryUrl\": \"\"\n  },\n  \"outputFiles\": [\n    {\n      \"destination\": {\n        \"container\": {\n          \"containerUrl\": \"\",\n          \"path\": \"\"\n        }\n      },\n      \"filePattern\": \"\",\n      \"uploadOptions\": {\n        \"uploadCondition\": \"{{oneOf (array 'tasksuccess' 'taskfailure' 'taskcompletion')}}\"\n      }\n    }\n  ],\n  \"previousState\": \"{{oneOf (array 'active' 'preparing' 'running' 'completed')}}\",\n  \"previousStateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n  \"resourceFiles\": [\n    {\n      \"blobSource\": \"\",\n      \"fileMode\": \"\",\n      \"filePath\": \"\"\n    }\n  ],\n  \"state\": \"{{oneOf (array 'active' 'preparing' 'running' 'completed')}}\",\n  \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n  \"stats\": {\n    \"kernelCPUTime\": \"\",\n    \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n    \"readIOGiB\": {{faker 'random.float'}},\n    \"readIOps\": {{faker 'random.number'}},\n    \"startTime\": \"{{faker 'date.recent' 365}}\",\n    \"url\": \"\",\n    \"userCPUTime\": \"\",\n    \"waitTime\": \"\",\n    \"wallClockTime\": \"\",\n    \"writeIOGiB\": {{faker 'random.float'}},\n    \"writeIOps\": {{faker 'random.number'}}\n  },\n  \"url\": \"\",\n  \"userIdentity\": {\n    \"autoUser\": {\n      \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n      \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n    },\n    \"username\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the task.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e4f12dc9-ec92-435f-a5c8-efd1cbfb3ab7",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "19ef9561-fdaa-49cb-9abe-db66139848d1",
      "documentation": "Updates the properties of the specified task.",
      "method": "put",
      "endpoint": "jobs/:jobId/tasks/:taskId",
      "responses": [
        {
          "uuid": "c6e9bcf4-8f94-43e5-b078-ada19e4dcff1",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0fbe1d76-48a2-4080-9a5f-6d70d29890de",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "893a7770-b818-4a3a-94bb-07fb474b08bd",
      "documentation": "Lists the files in a task's directory on its compute node.",
      "method": "get",
      "endpoint": "jobs/:jobId/tasks/:taskId/files",
      "responses": [
        {
          "uuid": "1b77853e-19bd-4453-8e60-8067da29aebe",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"isDirectory\": {{faker 'random.boolean'}},\n      \"name\": \"\",\n      \"properties\": {\n        \"contentLength\": {{faker 'random.number'}},\n        \"contentType\": \"\",\n        \"creationTime\": \"{{faker 'date.recent' 365}}\",\n        \"fileMode\": \"\",\n        \"lastModified\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"url\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the list of files.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c294f3d9-b616-47d6-83af-a17db55c88cf",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0d74c498-f128-44db-8ecf-a646d94eac8f",
      "documentation": "Deletes the specified task file from the compute node where the task ran.",
      "method": "delete",
      "endpoint": "jobs/:jobId/tasks/:taskId/files/:filePath",
      "responses": [
        {
          "uuid": "5ba160f6-cd2b-4cfa-ae61-e500a4d9c4ef",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7e935fd7-0bc3-4198-baf4-a90ac04fa761",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "af83240b-6d42-4cfc-84c0-f1abdae7deda",
      "documentation": "Returns the content of the specified task file.",
      "method": "get",
      "endpoint": "jobs/:jobId/tasks/:taskId/files/:filePath",
      "responses": [
        {
          "uuid": "430ed64b-01d1-4ef9-9380-a7dd43879285",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the file content.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Content-Length",
              "value": ""
            },
            {
              "key": "Content-Type",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "ocp-batch-file-isdirectory",
              "value": ""
            },
            {
              "key": "ocp-batch-file-mode",
              "value": ""
            },
            {
              "key": "ocp-batch-file-url",
              "value": ""
            },
            {
              "key": "ocp-creation-time",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "109ae1d7-9d1d-4a36-a681-b806e3b803e1",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4d0e79b6-3652-4105-9310-c669fdb92f82",
      "documentation": "Gets the properties of the specified task file.",
      "method": "head",
      "endpoint": "jobs/:jobId/tasks/:taskId/files/:filePath",
      "responses": [
        {
          "uuid": "9262818f-64e8-4731-82fc-55ee0a69d316",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the file properties.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Content-Length",
              "value": ""
            },
            {
              "key": "Content-Type",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "ocp-batch-file-isdirectory",
              "value": ""
            },
            {
              "key": "ocp-batch-file-mode",
              "value": ""
            },
            {
              "key": "ocp-batch-file-url",
              "value": ""
            },
            {
              "key": "ocp-creation-time",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e42e36cb-0491-4fd6-b0d6-989bb4bec1d7",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ce104d12-5df0-4216-a048-a440e72e0a67",
      "documentation": "Reactivates a task, allowing it to run again even if its retry count has been exhausted.",
      "method": "post",
      "endpoint": "jobs/:jobId/tasks/:taskId/reactivate",
      "responses": [
        {
          "uuid": "a0fcb71d-dce9-4256-bea4-d061939dc336",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "14be4a36-ea8b-4eac-a38b-01af3e6a539a",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "984859c0-9a60-44ff-ad20-c5a014bbc645",
      "documentation": "Lists all of the subtasks that are associated with the specified multi-instance task.",
      "method": "get",
      "endpoint": "jobs/:jobId/tasks/:taskId/subtasksinfo",
      "responses": [
        {
          "uuid": "20db392d-8a63-4fda-b1d1-8db3d5ce9827",
          "body": "{\n  \"value\": [\n    {\n      \"containerInfo\": {\n        \"containerId\": \"\",\n        \"error\": \"\",\n        \"state\": \"\"\n      },\n      \"endTime\": \"{{faker 'date.recent' 365}}\",\n      \"exitCode\": {{faker 'random.number'}},\n      \"failureInfo\": {\n        \"category\": \"{{oneOf (array 'usererror' 'servererror')}}\",\n        \"code\": \"\",\n        \"details\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"message\": \"\"\n      },\n      \"id\": {{faker 'random.number'}},\n      \"nodeInfo\": {\n        \"affinityId\": \"\",\n        \"nodeId\": \"\",\n        \"nodeUrl\": \"\",\n        \"poolId\": \"\",\n        \"taskRootDirectory\": \"\",\n        \"taskRootDirectoryUrl\": \"\"\n      },\n      \"previousState\": \"{{oneOf (array 'preparing' 'running' 'completed')}}\",\n      \"previousStateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"result\": \"{{oneOf (array 'success' 'failure')}}\",\n      \"startTime\": \"{{faker 'date.recent' 365}}\",\n      \"state\": \"{{oneOf (array 'preparing' 'running' 'completed')}}\",\n      \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the list of subtasks.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "945eea9b-5643-4c7f-9df0-d11a5639af19",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1e7d5ac3-8c54-47b7-adbd-9bb6c737de30",
      "documentation": "Terminates the specified task.",
      "method": "post",
      "endpoint": "jobs/:jobId/tasks/:taskId/terminate",
      "responses": [
        {
          "uuid": "a252eb82-f7fd-4325-9dc4-993158217203",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5763b78f-a845-4982-83af-0f59728d11c2",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1d57d469-b288-4f77-b89d-e511a80ea89b",
      "documentation": "Terminates the specified job, marking it as completed.",
      "method": "post",
      "endpoint": "jobs/:jobId/terminate",
      "responses": [
        {
          "uuid": "4b683746-b3cf-4536-80f6-a08297ba0717",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ddbe81c7-a992-42d5-a16a-cc9c0a400eb8",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e0553e2f-5477-4cb3-ba06-aea17142144d",
      "documentation": "Lists all of the job schedules in the specified account.",
      "method": "get",
      "endpoint": "jobschedules",
      "responses": [
        {
          "uuid": "d19f0ec7-710a-44fa-aad4-8cf200ad1d68",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"creationTime\": \"{{faker 'date.recent' 365}}\",\n      \"displayName\": \"\",\n      \"eTag\": \"\",\n      \"executionInfo\": {\n        \"endTime\": \"{{faker 'date.recent' 365}}\",\n        \"nextRunTime\": \"{{faker 'date.recent' 365}}\",\n        \"recentJob\": {\n          \"id\": \"\",\n          \"url\": \"\"\n        }\n      },\n      \"id\": \"\",\n      \"jobSpecification\": {\n        \"commonEnvironmentSettings\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"constraints\": {\n          \"maxTaskRetryCount\": {{faker 'random.number'}},\n          \"maxWallClockTime\": \"\"\n        },\n        \"displayName\": \"\",\n        \"jobManagerTask\": {\n          \"allowLowPriorityNode\": {{faker 'random.boolean'}},\n          \"applicationPackageReferences\": [\n            {\n              \"applicationId\": \"\",\n              \"version\": \"\"\n            }\n          ],\n          \"authenticationTokenSettings\": {\n            \"access\": [\n              \"{{oneOf (array 'job')}}\"\n            ]\n          },\n          \"commandLine\": \"\",\n          \"constraints\": {\n            \"maxTaskRetryCount\": {{faker 'random.number'}},\n            \"maxWallClockTime\": \"\",\n            \"retentionTime\": \"\"\n          },\n          \"containerSettings\": {\n            \"containerRunOptions\": \"\",\n            \"imageName\": \"\",\n            \"registry\": {\n              \"password\": \"\",\n              \"registryServer\": \"\",\n              \"username\": \"\"\n            }\n          },\n          \"displayName\": \"\",\n          \"environmentSettings\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"id\": \"\",\n          \"killJobOnCompletion\": {{faker 'random.boolean'}},\n          \"outputFiles\": [\n            {\n              \"destination\": {\n                \"container\": {\n                  \"containerUrl\": \"\",\n                  \"path\": \"\"\n                }\n              },\n              \"filePattern\": \"\",\n              \"uploadOptions\": {\n                \"uploadCondition\": \"{{oneOf (array 'tasksuccess' 'taskfailure' 'taskcompletion')}}\"\n              }\n            }\n          ],\n          \"resourceFiles\": [\n            {\n              \"blobSource\": \"\",\n              \"fileMode\": \"\",\n              \"filePath\": \"\"\n            }\n          ],\n          \"runExclusive\": {{faker 'random.boolean'}},\n          \"userIdentity\": {\n            \"autoUser\": {\n              \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n              \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n            },\n            \"username\": \"\"\n          }\n        },\n        \"jobPreparationTask\": {\n          \"commandLine\": \"\",\n          \"constraints\": {\n            \"maxTaskRetryCount\": {{faker 'random.number'}},\n            \"maxWallClockTime\": \"\",\n            \"retentionTime\": \"\"\n          },\n          \"containerSettings\": {\n            \"containerRunOptions\": \"\",\n            \"imageName\": \"\",\n            \"registry\": {\n              \"password\": \"\",\n              \"registryServer\": \"\",\n              \"username\": \"\"\n            }\n          },\n          \"environmentSettings\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"id\": \"\",\n          \"rerunOnNodeRebootAfterSuccess\": {{faker 'random.boolean'}},\n          \"resourceFiles\": [\n            {\n              \"blobSource\": \"\",\n              \"fileMode\": \"\",\n              \"filePath\": \"\"\n            }\n          ],\n          \"userIdentity\": {\n            \"autoUser\": {\n              \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n              \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n            },\n            \"username\": \"\"\n          },\n          \"waitForSuccess\": {{faker 'random.boolean'}}\n        },\n        \"jobReleaseTask\": {\n          \"commandLine\": \"\",\n          \"containerSettings\": {\n            \"containerRunOptions\": \"\",\n            \"imageName\": \"\",\n            \"registry\": {\n              \"password\": \"\",\n              \"registryServer\": \"\",\n              \"username\": \"\"\n            }\n          },\n          \"environmentSettings\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"id\": \"\",\n          \"maxWallClockTime\": \"\",\n          \"resourceFiles\": [\n            {\n              \"blobSource\": \"\",\n              \"fileMode\": \"\",\n              \"filePath\": \"\"\n            }\n          ],\n          \"retentionTime\": \"\",\n          \"userIdentity\": {\n            \"autoUser\": {\n              \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n              \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n            },\n            \"username\": \"\"\n          }\n        },\n        \"metadata\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"onAllTasksComplete\": \"{{oneOf (array 'noaction' 'terminatejob')}}\",\n        \"onTaskFailure\": \"{{oneOf (array 'noaction' 'performexitoptionsjobaction')}}\",\n        \"poolInfo\": {\n          \"autoPoolSpecification\": {\n            \"autoPoolIdPrefix\": \"\",\n            \"keepAlive\": {{faker 'random.boolean'}},\n            \"pool\": {\n              \"applicationLicenses\": [\n                \"\"\n              ],\n              \"applicationPackageReferences\": [\n                {\n                  \"applicationId\": \"\",\n                  \"version\": \"\"\n                }\n              ],\n              \"autoScaleEvaluationInterval\": \"\",\n              \"autoScaleFormula\": \"\",\n              \"certificateReferences\": [\n                {\n                  \"storeLocation\": \"{{oneOf (array 'currentuser' 'localmachine')}}\",\n                  \"storeName\": \"\",\n                  \"thumbprint\": \"\",\n                  \"thumbprintAlgorithm\": \"\",\n                  \"visibility\": [\n                    \"{{oneOf (array 'starttask' 'task' 'remoteuser')}}\"\n                  ]\n                }\n              ],\n              \"cloudServiceConfiguration\": {\n                \"currentOSVersion\": \"\",\n                \"osFamily\": \"\",\n                \"targetOSVersion\": \"\"\n              },\n              \"displayName\": \"\",\n              \"enableAutoScale\": {{faker 'random.boolean'}},\n              \"enableInterNodeCommunication\": {{faker 'random.boolean'}},\n              \"maxTasksPerNode\": {{faker 'random.number'}},\n              \"metadata\": [\n                {\n                  \"name\": \"\",\n                  \"value\": \"\"\n                }\n              ],\n              \"networkConfiguration\": {\n                \"endpointConfiguration\": {\n                  \"inboundNATPools\": [\n                    {\n                      \"backendPort\": {{faker 'random.number'}},\n                      \"frontendPortRangeEnd\": {{faker 'random.number'}},\n                      \"frontendPortRangeStart\": {{faker 'random.number'}},\n                      \"name\": \"\",\n                      \"networkSecurityGroupRules\": [\n                        {\n                          \"access\": \"{{oneOf (array 'allow' 'deny')}}\",\n                          \"priority\": {{faker 'random.number'}},\n                          \"sourceAddressPrefix\": \"\"\n                        }\n                      ],\n                      \"protocol\": \"{{oneOf (array 'tcp' 'udp')}}\"\n                    }\n                  ]\n                },\n                \"subnetId\": \"\"\n              },\n              \"resizeTimeout\": \"\",\n              \"startTask\": {\n                \"commandLine\": \"\",\n                \"containerSettings\": {\n                  \"containerRunOptions\": \"\",\n                  \"imageName\": \"\",\n                  \"registry\": {\n                    \"password\": \"\",\n                    \"registryServer\": \"\",\n                    \"username\": \"\"\n                  }\n                },\n                \"environmentSettings\": [\n                  {\n                    \"name\": \"\",\n                    \"value\": \"\"\n                  }\n                ],\n                \"maxTaskRetryCount\": {{faker 'random.number'}},\n                \"resourceFiles\": [\n                  {\n                    \"blobSource\": \"\",\n                    \"fileMode\": \"\",\n                    \"filePath\": \"\"\n                  }\n                ],\n                \"userIdentity\": {\n                  \"autoUser\": {\n                    \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n                    \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n                  },\n                  \"username\": \"\"\n                },\n                \"waitForSuccess\": {{faker 'random.boolean'}}\n              },\n              \"targetDedicatedNodes\": {{faker 'random.number'}},\n              \"targetLowPriorityNodes\": {{faker 'random.number'}},\n              \"taskSchedulingPolicy\": {\n                \"nodeFillType\": \"{{oneOf (array 'spread' 'pack')}}\"\n              },\n              \"userAccounts\": [\n                {\n                  \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n                  \"linuxUserConfiguration\": {\n                    \"gid\": {{faker 'random.number'}},\n                    \"sshPrivateKey\": \"\",\n                    \"uid\": {{faker 'random.number'}}\n                  },\n                  \"name\": \"\",\n                  \"password\": \"\"\n                }\n              ],\n              \"virtualMachineConfiguration\": {\n                \"containerConfiguration\": {\n                  \"containerImageNames\": [\n                    \"\"\n                  ],\n                  \"containerRegistries\": [\n                    {\n                      \"password\": \"\",\n                      \"registryServer\": \"\",\n                      \"username\": \"\"\n                    }\n                  ],\n                  \"type\": \"{{oneOf (array 'dockerCompatible')}}\"\n                },\n                \"dataDisks\": [\n                  {\n                    \"caching\": \"{{oneOf (array 'none' 'readonly' 'readwrite')}}\",\n                    \"diskSizeGB\": {{faker 'random.number'}},\n                    \"lun\": {{faker 'random.number'}},\n                    \"storageAccountType\": \"{{oneOf (array 'standard_lrs' 'premium_lrs')}}\"\n                  }\n                ],\n                \"imageReference\": {\n                  \"offer\": \"\",\n                  \"publisher\": \"\",\n                  \"sku\": \"\",\n                  \"version\": \"\",\n                  \"virtualMachineImageId\": \"\"\n                },\n                \"licenseType\": \"\",\n                \"nodeAgentSKUId\": \"\",\n                \"osDisk\": {\n                  \"caching\": \"{{oneOf (array 'none' 'readonly' 'readwrite')}}\"\n                },\n                \"windowsConfiguration\": {\n                  \"enableAutomaticUpdates\": {{faker 'random.boolean'}}\n                }\n              },\n              \"vmSize\": \"\"\n            },\n            \"poolLifetimeOption\": \"{{oneOf (array 'jobschedule' 'job')}}\"\n          },\n          \"poolId\": \"\"\n        },\n        \"priority\": {{faker 'random.number'}},\n        \"usesTaskDependencies\": {{faker 'random.boolean'}}\n      },\n      \"lastModified\": \"{{faker 'date.recent' 365}}\",\n      \"metadata\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"previousState\": \"{{oneOf (array 'active' 'completed' 'disabled' 'terminating' 'deleting')}}\",\n      \"previousStateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"schedule\": {\n        \"doNotRunAfter\": \"{{faker 'date.recent' 365}}\",\n        \"doNotRunUntil\": \"{{faker 'date.recent' 365}}\",\n        \"recurrenceInterval\": \"\",\n        \"startWindow\": \"\"\n      },\n      \"state\": \"{{oneOf (array 'active' 'completed' 'disabled' 'terminating' 'deleting')}}\",\n      \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"stats\": {\n        \"kernelCPUTime\": \"\",\n        \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n        \"numFailedTasks\": {{faker 'random.number'}},\n        \"numSucceededTasks\": {{faker 'random.number'}},\n        \"numTaskRetries\": {{faker 'random.number'}},\n        \"readIOGiB\": {{faker 'random.float'}},\n        \"readIOps\": {{faker 'random.number'}},\n        \"startTime\": \"{{faker 'date.recent' 365}}\",\n        \"url\": \"\",\n        \"userCPUTime\": \"\",\n        \"waitTime\": \"\",\n        \"wallClockTime\": \"\",\n        \"writeIOGiB\": {{faker 'random.float'}},\n        \"writeIOps\": {{faker 'random.number'}}\n      },\n      \"url\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the list of job schedules.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "384a6330-c024-405e-bd3f-584e4750b547",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e0ac9097-0d45-4d58-beb0-9fdba4be0322",
      "documentation": "Adds a job schedule to the specified account.",
      "method": "post",
      "endpoint": "jobschedules",
      "responses": [
        {
          "uuid": "02cf0c1e-413a-4df9-8c23-86818ae85402",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "86ff949c-17c6-436f-ba83-0313164fc2d5",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "914c9bc5-c8ad-4c8a-8ae8-ce073fe12afc",
      "documentation": "Deletes a job schedule from the specified account.",
      "method": "delete",
      "endpoint": "jobschedules/:jobScheduleId",
      "responses": [
        {
          "uuid": "987ec3f9-6b4f-400c-899e-c7ec2cedc933",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8610c069-619b-482b-8d01-1a689835a8a0",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9058e70f-0310-4fb0-8c15-4c8e1e08b9d4",
      "documentation": "Gets information about the specified job schedule.",
      "method": "get",
      "endpoint": "jobschedules/:jobScheduleId",
      "responses": [
        {
          "uuid": "040e8dda-f9dd-4ce7-a900-d18f3c65b876",
          "body": "{\n  \"creationTime\": \"{{faker 'date.recent' 365}}\",\n  \"displayName\": \"\",\n  \"eTag\": \"\",\n  \"executionInfo\": {\n    \"endTime\": \"{{faker 'date.recent' 365}}\",\n    \"nextRunTime\": \"{{faker 'date.recent' 365}}\",\n    \"recentJob\": {\n      \"id\": \"\",\n      \"url\": \"\"\n    }\n  },\n  \"id\": \"\",\n  \"jobSpecification\": {\n    \"commonEnvironmentSettings\": [\n      {\n        \"name\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"constraints\": {\n      \"maxTaskRetryCount\": {{faker 'random.number'}},\n      \"maxWallClockTime\": \"\"\n    },\n    \"displayName\": \"\",\n    \"jobManagerTask\": {\n      \"allowLowPriorityNode\": {{faker 'random.boolean'}},\n      \"applicationPackageReferences\": [\n        {\n          \"applicationId\": \"\",\n          \"version\": \"\"\n        }\n      ],\n      \"authenticationTokenSettings\": {\n        \"access\": [\n          \"{{oneOf (array 'job')}}\"\n        ]\n      },\n      \"commandLine\": \"\",\n      \"constraints\": {\n        \"maxTaskRetryCount\": {{faker 'random.number'}},\n        \"maxWallClockTime\": \"\",\n        \"retentionTime\": \"\"\n      },\n      \"containerSettings\": {\n        \"containerRunOptions\": \"\",\n        \"imageName\": \"\",\n        \"registry\": {\n          \"password\": \"\",\n          \"registryServer\": \"\",\n          \"username\": \"\"\n        }\n      },\n      \"displayName\": \"\",\n      \"environmentSettings\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"id\": \"\",\n      \"killJobOnCompletion\": {{faker 'random.boolean'}},\n      \"outputFiles\": [\n        {\n          \"destination\": {\n            \"container\": {\n              \"containerUrl\": \"\",\n              \"path\": \"\"\n            }\n          },\n          \"filePattern\": \"\",\n          \"uploadOptions\": {\n            \"uploadCondition\": \"{{oneOf (array 'tasksuccess' 'taskfailure' 'taskcompletion')}}\"\n          }\n        }\n      ],\n      \"resourceFiles\": [\n        {\n          \"blobSource\": \"\",\n          \"fileMode\": \"\",\n          \"filePath\": \"\"\n        }\n      ],\n      \"runExclusive\": {{faker 'random.boolean'}},\n      \"userIdentity\": {\n        \"autoUser\": {\n          \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n          \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n        },\n        \"username\": \"\"\n      }\n    },\n    \"jobPreparationTask\": {\n      \"commandLine\": \"\",\n      \"constraints\": {\n        \"maxTaskRetryCount\": {{faker 'random.number'}},\n        \"maxWallClockTime\": \"\",\n        \"retentionTime\": \"\"\n      },\n      \"containerSettings\": {\n        \"containerRunOptions\": \"\",\n        \"imageName\": \"\",\n        \"registry\": {\n          \"password\": \"\",\n          \"registryServer\": \"\",\n          \"username\": \"\"\n        }\n      },\n      \"environmentSettings\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"id\": \"\",\n      \"rerunOnNodeRebootAfterSuccess\": {{faker 'random.boolean'}},\n      \"resourceFiles\": [\n        {\n          \"blobSource\": \"\",\n          \"fileMode\": \"\",\n          \"filePath\": \"\"\n        }\n      ],\n      \"userIdentity\": {\n        \"autoUser\": {\n          \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n          \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n        },\n        \"username\": \"\"\n      },\n      \"waitForSuccess\": {{faker 'random.boolean'}}\n    },\n    \"jobReleaseTask\": {\n      \"commandLine\": \"\",\n      \"containerSettings\": {\n        \"containerRunOptions\": \"\",\n        \"imageName\": \"\",\n        \"registry\": {\n          \"password\": \"\",\n          \"registryServer\": \"\",\n          \"username\": \"\"\n        }\n      },\n      \"environmentSettings\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"id\": \"\",\n      \"maxWallClockTime\": \"\",\n      \"resourceFiles\": [\n        {\n          \"blobSource\": \"\",\n          \"fileMode\": \"\",\n          \"filePath\": \"\"\n        }\n      ],\n      \"retentionTime\": \"\",\n      \"userIdentity\": {\n        \"autoUser\": {\n          \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n          \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n        },\n        \"username\": \"\"\n      }\n    },\n    \"metadata\": [\n      {\n        \"name\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"onAllTasksComplete\": \"{{oneOf (array 'noaction' 'terminatejob')}}\",\n    \"onTaskFailure\": \"{{oneOf (array 'noaction' 'performexitoptionsjobaction')}}\",\n    \"poolInfo\": {\n      \"autoPoolSpecification\": {\n        \"autoPoolIdPrefix\": \"\",\n        \"keepAlive\": {{faker 'random.boolean'}},\n        \"pool\": {\n          \"applicationLicenses\": [\n            \"\"\n          ],\n          \"applicationPackageReferences\": [\n            {\n              \"applicationId\": \"\",\n              \"version\": \"\"\n            }\n          ],\n          \"autoScaleEvaluationInterval\": \"\",\n          \"autoScaleFormula\": \"\",\n          \"certificateReferences\": [\n            {\n              \"storeLocation\": \"{{oneOf (array 'currentuser' 'localmachine')}}\",\n              \"storeName\": \"\",\n              \"thumbprint\": \"\",\n              \"thumbprintAlgorithm\": \"\",\n              \"visibility\": [\n                \"{{oneOf (array 'starttask' 'task' 'remoteuser')}}\"\n              ]\n            }\n          ],\n          \"cloudServiceConfiguration\": {\n            \"currentOSVersion\": \"\",\n            \"osFamily\": \"\",\n            \"targetOSVersion\": \"\"\n          },\n          \"displayName\": \"\",\n          \"enableAutoScale\": {{faker 'random.boolean'}},\n          \"enableInterNodeCommunication\": {{faker 'random.boolean'}},\n          \"maxTasksPerNode\": {{faker 'random.number'}},\n          \"metadata\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"networkConfiguration\": {\n            \"endpointConfiguration\": {\n              \"inboundNATPools\": [\n                {\n                  \"backendPort\": {{faker 'random.number'}},\n                  \"frontendPortRangeEnd\": {{faker 'random.number'}},\n                  \"frontendPortRangeStart\": {{faker 'random.number'}},\n                  \"name\": \"\",\n                  \"networkSecurityGroupRules\": [\n                    {\n                      \"access\": \"{{oneOf (array 'allow' 'deny')}}\",\n                      \"priority\": {{faker 'random.number'}},\n                      \"sourceAddressPrefix\": \"\"\n                    }\n                  ],\n                  \"protocol\": \"{{oneOf (array 'tcp' 'udp')}}\"\n                }\n              ]\n            },\n            \"subnetId\": \"\"\n          },\n          \"resizeTimeout\": \"\",\n          \"startTask\": {\n            \"commandLine\": \"\",\n            \"containerSettings\": {\n              \"containerRunOptions\": \"\",\n              \"imageName\": \"\",\n              \"registry\": {\n                \"password\": \"\",\n                \"registryServer\": \"\",\n                \"username\": \"\"\n              }\n            },\n            \"environmentSettings\": [\n              {\n                \"name\": \"\",\n                \"value\": \"\"\n              }\n            ],\n            \"maxTaskRetryCount\": {{faker 'random.number'}},\n            \"resourceFiles\": [\n              {\n                \"blobSource\": \"\",\n                \"fileMode\": \"\",\n                \"filePath\": \"\"\n              }\n            ],\n            \"userIdentity\": {\n              \"autoUser\": {\n                \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n                \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n              },\n              \"username\": \"\"\n            },\n            \"waitForSuccess\": {{faker 'random.boolean'}}\n          },\n          \"targetDedicatedNodes\": {{faker 'random.number'}},\n          \"targetLowPriorityNodes\": {{faker 'random.number'}},\n          \"taskSchedulingPolicy\": {\n            \"nodeFillType\": \"{{oneOf (array 'spread' 'pack')}}\"\n          },\n          \"userAccounts\": [\n            {\n              \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n              \"linuxUserConfiguration\": {\n                \"gid\": {{faker 'random.number'}},\n                \"sshPrivateKey\": \"\",\n                \"uid\": {{faker 'random.number'}}\n              },\n              \"name\": \"\",\n              \"password\": \"\"\n            }\n          ],\n          \"virtualMachineConfiguration\": {\n            \"containerConfiguration\": {\n              \"containerImageNames\": [\n                \"\"\n              ],\n              \"containerRegistries\": [\n                {\n                  \"password\": \"\",\n                  \"registryServer\": \"\",\n                  \"username\": \"\"\n                }\n              ],\n              \"type\": \"{{oneOf (array 'dockerCompatible')}}\"\n            },\n            \"dataDisks\": [\n              {\n                \"caching\": \"{{oneOf (array 'none' 'readonly' 'readwrite')}}\",\n                \"diskSizeGB\": {{faker 'random.number'}},\n                \"lun\": {{faker 'random.number'}},\n                \"storageAccountType\": \"{{oneOf (array 'standard_lrs' 'premium_lrs')}}\"\n              }\n            ],\n            \"imageReference\": {\n              \"offer\": \"\",\n              \"publisher\": \"\",\n              \"sku\": \"\",\n              \"version\": \"\",\n              \"virtualMachineImageId\": \"\"\n            },\n            \"licenseType\": \"\",\n            \"nodeAgentSKUId\": \"\",\n            \"osDisk\": {\n              \"caching\": \"{{oneOf (array 'none' 'readonly' 'readwrite')}}\"\n            },\n            \"windowsConfiguration\": {\n              \"enableAutomaticUpdates\": {{faker 'random.boolean'}}\n            }\n          },\n          \"vmSize\": \"\"\n        },\n        \"poolLifetimeOption\": \"{{oneOf (array 'jobschedule' 'job')}}\"\n      },\n      \"poolId\": \"\"\n    },\n    \"priority\": {{faker 'random.number'}},\n    \"usesTaskDependencies\": {{faker 'random.boolean'}}\n  },\n  \"lastModified\": \"{{faker 'date.recent' 365}}\",\n  \"metadata\": [\n    {\n      \"name\": \"\",\n      \"value\": \"\"\n    }\n  ],\n  \"previousState\": \"{{oneOf (array 'active' 'completed' 'disabled' 'terminating' 'deleting')}}\",\n  \"previousStateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n  \"schedule\": {\n    \"doNotRunAfter\": \"{{faker 'date.recent' 365}}\",\n    \"doNotRunUntil\": \"{{faker 'date.recent' 365}}\",\n    \"recurrenceInterval\": \"\",\n    \"startWindow\": \"\"\n  },\n  \"state\": \"{{oneOf (array 'active' 'completed' 'disabled' 'terminating' 'deleting')}}\",\n  \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n  \"stats\": {\n    \"kernelCPUTime\": \"\",\n    \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n    \"numFailedTasks\": {{faker 'random.number'}},\n    \"numSucceededTasks\": {{faker 'random.number'}},\n    \"numTaskRetries\": {{faker 'random.number'}},\n    \"readIOGiB\": {{faker 'random.float'}},\n    \"readIOps\": {{faker 'random.number'}},\n    \"startTime\": \"{{faker 'date.recent' 365}}\",\n    \"url\": \"\",\n    \"userCPUTime\": \"\",\n    \"waitTime\": \"\",\n    \"wallClockTime\": \"\",\n    \"writeIOGiB\": {{faker 'random.float'}},\n    \"writeIOps\": {{faker 'random.number'}}\n  },\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the job schedule.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "65d736a2-ba4d-432f-9e88-7ad1766cdafa",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b99780c7-86c9-4790-bacd-140477f27434",
      "documentation": "Checks the specified job schedule exists.",
      "method": "head",
      "endpoint": "jobschedules/:jobScheduleId",
      "responses": [
        {
          "uuid": "2f8ea80d-9cca-4136-99bd-430238b5d3b8",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing headers related to the job schedule, if it exists.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "debd9231-8aee-4f3a-996c-f90d318300e2",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "The job schedule does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4dc39d98-b6fa-4a16-8711-128105384a30",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "de51b6af-8ae5-4777-bad9-334238b1e435",
      "documentation": "Updates the properties of the specified job schedule.",
      "method": "patch",
      "endpoint": "jobschedules/:jobScheduleId",
      "responses": [
        {
          "uuid": "4d73854c-c37b-4944-9db4-20df9c69b477",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4d9eddc2-8355-4631-90cd-35104ba02119",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b3a85880-8138-4055-9437-b2d963a7609e",
      "documentation": "Updates the properties of the specified job schedule.",
      "method": "put",
      "endpoint": "jobschedules/:jobScheduleId",
      "responses": [
        {
          "uuid": "04e6f244-578c-47b1-bea9-da3209724de1",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5f366a37-aae6-460d-bc05-c7ab6d89982a",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "da57bed9-ed83-4774-a8e9-6cd7e819e9b8",
      "documentation": "Disables a job schedule.",
      "method": "post",
      "endpoint": "jobschedules/:jobScheduleId/disable",
      "responses": [
        {
          "uuid": "8bb0ee21-0eec-4699-9dee-e30d162e8af6",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "67b89ba2-75e8-48ae-b9d5-c0969c9126af",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "87758da0-c61a-4328-b884-7f0f71895655",
      "documentation": "Enables a job schedule.",
      "method": "post",
      "endpoint": "jobschedules/:jobScheduleId/enable",
      "responses": [
        {
          "uuid": "e47cff5a-300f-4234-b5bd-b30ead6289ba",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "afad07dd-e830-4136-a301-a52988cdb890",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ecee020f-e0af-463f-b1aa-36b71c9178a0",
      "documentation": "Lists the jobs that have been created under the specified job schedule.",
      "method": "get",
      "endpoint": "jobschedules/:jobScheduleId/jobs",
      "responses": [
        {
          "uuid": "4feb2639-882c-4462-a88d-9c5d8a1c6ac4",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"commonEnvironmentSettings\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"constraints\": {\n        \"maxTaskRetryCount\": {{faker 'random.number'}},\n        \"maxWallClockTime\": \"\"\n      },\n      \"creationTime\": \"{{faker 'date.recent' 365}}\",\n      \"displayName\": \"\",\n      \"eTag\": \"\",\n      \"executionInfo\": {\n        \"endTime\": \"{{faker 'date.recent' 365}}\",\n        \"poolId\": \"\",\n        \"schedulingError\": {\n          \"category\": \"{{oneOf (array 'usererror' 'servererror')}}\",\n          \"code\": \"\",\n          \"details\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"message\": \"\"\n        },\n        \"startTime\": \"{{faker 'date.recent' 365}}\",\n        \"terminateReason\": \"\"\n      },\n      \"id\": \"\",\n      \"jobManagerTask\": {\n        \"allowLowPriorityNode\": {{faker 'random.boolean'}},\n        \"applicationPackageReferences\": [\n          {\n            \"applicationId\": \"\",\n            \"version\": \"\"\n          }\n        ],\n        \"authenticationTokenSettings\": {\n          \"access\": [\n            \"{{oneOf (array 'job')}}\"\n          ]\n        },\n        \"commandLine\": \"\",\n        \"constraints\": {\n          \"maxTaskRetryCount\": {{faker 'random.number'}},\n          \"maxWallClockTime\": \"\",\n          \"retentionTime\": \"\"\n        },\n        \"containerSettings\": {\n          \"containerRunOptions\": \"\",\n          \"imageName\": \"\",\n          \"registry\": {\n            \"password\": \"\",\n            \"registryServer\": \"\",\n            \"username\": \"\"\n          }\n        },\n        \"displayName\": \"\",\n        \"environmentSettings\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"killJobOnCompletion\": {{faker 'random.boolean'}},\n        \"outputFiles\": [\n          {\n            \"destination\": {\n              \"container\": {\n                \"containerUrl\": \"\",\n                \"path\": \"\"\n              }\n            },\n            \"filePattern\": \"\",\n            \"uploadOptions\": {\n              \"uploadCondition\": \"{{oneOf (array 'tasksuccess' 'taskfailure' 'taskcompletion')}}\"\n            }\n          }\n        ],\n        \"resourceFiles\": [\n          {\n            \"blobSource\": \"\",\n            \"fileMode\": \"\",\n            \"filePath\": \"\"\n          }\n        ],\n        \"runExclusive\": {{faker 'random.boolean'}},\n        \"userIdentity\": {\n          \"autoUser\": {\n            \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n            \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n          },\n          \"username\": \"\"\n        }\n      },\n      \"jobPreparationTask\": {\n        \"commandLine\": \"\",\n        \"constraints\": {\n          \"maxTaskRetryCount\": {{faker 'random.number'}},\n          \"maxWallClockTime\": \"\",\n          \"retentionTime\": \"\"\n        },\n        \"containerSettings\": {\n          \"containerRunOptions\": \"\",\n          \"imageName\": \"\",\n          \"registry\": {\n            \"password\": \"\",\n            \"registryServer\": \"\",\n            \"username\": \"\"\n          }\n        },\n        \"environmentSettings\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"rerunOnNodeRebootAfterSuccess\": {{faker 'random.boolean'}},\n        \"resourceFiles\": [\n          {\n            \"blobSource\": \"\",\n            \"fileMode\": \"\",\n            \"filePath\": \"\"\n          }\n        ],\n        \"userIdentity\": {\n          \"autoUser\": {\n            \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n            \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n          },\n          \"username\": \"\"\n        },\n        \"waitForSuccess\": {{faker 'random.boolean'}}\n      },\n      \"jobReleaseTask\": {\n        \"commandLine\": \"\",\n        \"containerSettings\": {\n          \"containerRunOptions\": \"\",\n          \"imageName\": \"\",\n          \"registry\": {\n            \"password\": \"\",\n            \"registryServer\": \"\",\n            \"username\": \"\"\n          }\n        },\n        \"environmentSettings\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"maxWallClockTime\": \"\",\n        \"resourceFiles\": [\n          {\n            \"blobSource\": \"\",\n            \"fileMode\": \"\",\n            \"filePath\": \"\"\n          }\n        ],\n        \"retentionTime\": \"\",\n        \"userIdentity\": {\n          \"autoUser\": {\n            \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n            \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n          },\n          \"username\": \"\"\n        }\n      },\n      \"lastModified\": \"{{faker 'date.recent' 365}}\",\n      \"metadata\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"onAllTasksComplete\": \"{{oneOf (array 'noaction' 'terminatejob')}}\",\n      \"onTaskFailure\": \"{{oneOf (array 'noaction' 'performexitoptionsjobaction')}}\",\n      \"poolInfo\": {\n        \"autoPoolSpecification\": {\n          \"autoPoolIdPrefix\": \"\",\n          \"keepAlive\": {{faker 'random.boolean'}},\n          \"pool\": {\n            \"applicationLicenses\": [\n              \"\"\n            ],\n            \"applicationPackageReferences\": [\n              {\n                \"applicationId\": \"\",\n                \"version\": \"\"\n              }\n            ],\n            \"autoScaleEvaluationInterval\": \"\",\n            \"autoScaleFormula\": \"\",\n            \"certificateReferences\": [\n              {\n                \"storeLocation\": \"{{oneOf (array 'currentuser' 'localmachine')}}\",\n                \"storeName\": \"\",\n                \"thumbprint\": \"\",\n                \"thumbprintAlgorithm\": \"\",\n                \"visibility\": [\n                  \"{{oneOf (array 'starttask' 'task' 'remoteuser')}}\"\n                ]\n              }\n            ],\n            \"cloudServiceConfiguration\": {\n              \"currentOSVersion\": \"\",\n              \"osFamily\": \"\",\n              \"targetOSVersion\": \"\"\n            },\n            \"displayName\": \"\",\n            \"enableAutoScale\": {{faker 'random.boolean'}},\n            \"enableInterNodeCommunication\": {{faker 'random.boolean'}},\n            \"maxTasksPerNode\": {{faker 'random.number'}},\n            \"metadata\": [\n              {\n                \"name\": \"\",\n                \"value\": \"\"\n              }\n            ],\n            \"networkConfiguration\": {\n              \"endpointConfiguration\": {\n                \"inboundNATPools\": [\n                  {\n                    \"backendPort\": {{faker 'random.number'}},\n                    \"frontendPortRangeEnd\": {{faker 'random.number'}},\n                    \"frontendPortRangeStart\": {{faker 'random.number'}},\n                    \"name\": \"\",\n                    \"networkSecurityGroupRules\": [\n                      {\n                        \"access\": \"{{oneOf (array 'allow' 'deny')}}\",\n                        \"priority\": {{faker 'random.number'}},\n                        \"sourceAddressPrefix\": \"\"\n                      }\n                    ],\n                    \"protocol\": \"{{oneOf (array 'tcp' 'udp')}}\"\n                  }\n                ]\n              },\n              \"subnetId\": \"\"\n            },\n            \"resizeTimeout\": \"\",\n            \"startTask\": {\n              \"commandLine\": \"\",\n              \"containerSettings\": {\n                \"containerRunOptions\": \"\",\n                \"imageName\": \"\",\n                \"registry\": {\n                  \"password\": \"\",\n                  \"registryServer\": \"\",\n                  \"username\": \"\"\n                }\n              },\n              \"environmentSettings\": [\n                {\n                  \"name\": \"\",\n                  \"value\": \"\"\n                }\n              ],\n              \"maxTaskRetryCount\": {{faker 'random.number'}},\n              \"resourceFiles\": [\n                {\n                  \"blobSource\": \"\",\n                  \"fileMode\": \"\",\n                  \"filePath\": \"\"\n                }\n              ],\n              \"userIdentity\": {\n                \"autoUser\": {\n                  \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n                  \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n                },\n                \"username\": \"\"\n              },\n              \"waitForSuccess\": {{faker 'random.boolean'}}\n            },\n            \"targetDedicatedNodes\": {{faker 'random.number'}},\n            \"targetLowPriorityNodes\": {{faker 'random.number'}},\n            \"taskSchedulingPolicy\": {\n              \"nodeFillType\": \"{{oneOf (array 'spread' 'pack')}}\"\n            },\n            \"userAccounts\": [\n              {\n                \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n                \"linuxUserConfiguration\": {\n                  \"gid\": {{faker 'random.number'}},\n                  \"sshPrivateKey\": \"\",\n                  \"uid\": {{faker 'random.number'}}\n                },\n                \"name\": \"\",\n                \"password\": \"\"\n              }\n            ],\n            \"virtualMachineConfiguration\": {\n              \"containerConfiguration\": {\n                \"containerImageNames\": [\n                  \"\"\n                ],\n                \"containerRegistries\": [\n                  {\n                    \"password\": \"\",\n                    \"registryServer\": \"\",\n                    \"username\": \"\"\n                  }\n                ],\n                \"type\": \"{{oneOf (array 'dockerCompatible')}}\"\n              },\n              \"dataDisks\": [\n                {\n                  \"caching\": \"{{oneOf (array 'none' 'readonly' 'readwrite')}}\",\n                  \"diskSizeGB\": {{faker 'random.number'}},\n                  \"lun\": {{faker 'random.number'}},\n                  \"storageAccountType\": \"{{oneOf (array 'standard_lrs' 'premium_lrs')}}\"\n                }\n              ],\n              \"imageReference\": {\n                \"offer\": \"\",\n                \"publisher\": \"\",\n                \"sku\": \"\",\n                \"version\": \"\",\n                \"virtualMachineImageId\": \"\"\n              },\n              \"licenseType\": \"\",\n              \"nodeAgentSKUId\": \"\",\n              \"osDisk\": {\n                \"caching\": \"{{oneOf (array 'none' 'readonly' 'readwrite')}}\"\n              },\n              \"windowsConfiguration\": {\n                \"enableAutomaticUpdates\": {{faker 'random.boolean'}}\n              }\n            },\n            \"vmSize\": \"\"\n          },\n          \"poolLifetimeOption\": \"{{oneOf (array 'jobschedule' 'job')}}\"\n        },\n        \"poolId\": \"\"\n      },\n      \"previousState\": \"{{oneOf (array 'active' 'disabling' 'disabled' 'enabling' 'terminating' 'completed' 'deleting')}}\",\n      \"previousStateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"priority\": {{faker 'random.number'}},\n      \"state\": \"{{oneOf (array 'active' 'disabling' 'disabled' 'enabling' 'terminating' 'completed' 'deleting')}}\",\n      \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"stats\": {\n        \"kernelCPUTime\": \"\",\n        \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n        \"numFailedTasks\": {{faker 'random.number'}},\n        \"numSucceededTasks\": {{faker 'random.number'}},\n        \"numTaskRetries\": {{faker 'random.number'}},\n        \"readIOGiB\": {{faker 'random.float'}},\n        \"readIOps\": {{faker 'random.number'}},\n        \"startTime\": \"{{faker 'date.recent' 365}}\",\n        \"url\": \"\",\n        \"userCPUTime\": \"\",\n        \"waitTime\": \"\",\n        \"wallClockTime\": \"\",\n        \"writeIOGiB\": {{faker 'random.float'}},\n        \"writeIOps\": {{faker 'random.number'}}\n      },\n      \"url\": \"\",\n      \"usesTaskDependencies\": {{faker 'random.boolean'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the list of jobs.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "763d7f23-5515-4c3a-ac57-063865f9079b",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "13643736-9c1c-4edd-9b8d-b7eed375bb25",
      "documentation": "Terminates a job schedule.",
      "method": "post",
      "endpoint": "jobschedules/:jobScheduleId/terminate",
      "responses": [
        {
          "uuid": "5d5895a9-829a-4e2e-b218-f2ceeed4a95d",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5f04269b-c1f0-489d-93ed-5418b19e4fba",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9d48728f-d1df-4a72-8428-576d60393b75",
      "documentation": "Gets lifetime summary statistics for all of the jobs in the specified account.",
      "method": "get",
      "endpoint": "lifetimejobstats",
      "responses": [
        {
          "uuid": "9aad9abf-0c5e-46b5-a96a-e301c1b88b8e",
          "body": "{\n  \"kernelCPUTime\": \"\",\n  \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n  \"numFailedTasks\": {{faker 'random.number'}},\n  \"numSucceededTasks\": {{faker 'random.number'}},\n  \"numTaskRetries\": {{faker 'random.number'}},\n  \"readIOGiB\": {{faker 'random.float'}},\n  \"readIOps\": {{faker 'random.number'}},\n  \"startTime\": \"{{faker 'date.recent' 365}}\",\n  \"url\": \"\",\n  \"userCPUTime\": \"\",\n  \"waitTime\": \"\",\n  \"wallClockTime\": \"\",\n  \"writeIOGiB\": {{faker 'random.float'}},\n  \"writeIOps\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the job statistics for the lifetime of the Batch account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e9f8477e-d132-4143-98b8-ba84ce2a3bb2",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0bb285ec-2665-4c57-8130-6655d749d7fb",
      "documentation": "Gets lifetime summary statistics for all of the pools in the specified account.",
      "method": "get",
      "endpoint": "lifetimepoolstats",
      "responses": [
        {
          "uuid": "cbc9ca5e-ab77-4e1f-9776-d5706bdca715",
          "body": "{\n  \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n  \"resourceStats\": {\n    \"avgCPUPercentage\": {{faker 'random.float'}},\n    \"avgDiskGiB\": {{faker 'random.float'}},\n    \"avgMemoryGiB\": {{faker 'random.float'}},\n    \"diskReadGiB\": {{faker 'random.float'}},\n    \"diskReadIOps\": {{faker 'random.number'}},\n    \"diskWriteGiB\": {{faker 'random.float'}},\n    \"diskWriteIOps\": {{faker 'random.number'}},\n    \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n    \"networkReadGiB\": {{faker 'random.float'}},\n    \"networkWriteGiB\": {{faker 'random.float'}},\n    \"peakDiskGiB\": {{faker 'random.float'}},\n    \"peakMemoryGiB\": {{faker 'random.float'}},\n    \"startTime\": \"{{faker 'date.recent' 365}}\"\n  },\n  \"startTime\": \"{{faker 'date.recent' 365}}\",\n  \"url\": \"\",\n  \"usageStats\": {\n    \"dedicatedCoreTime\": \"\",\n    \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n    \"startTime\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the pool statistics for the lifetime of the Batch account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fb9ed3ae-a28d-4257-9cfa-1b5c63c9915d",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8586a5fc-d1cf-4782-bed8-a85eb854bdaa",
      "documentation": "Lists all node agent SKUs supported by the Azure Batch service.",
      "method": "get",
      "endpoint": "nodeagentskus",
      "responses": [
        {
          "uuid": "a7230860-bc23-424a-97f0-baa064fc20be",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"id\": \"\",\n      \"osType\": \"{{oneOf (array 'linux' 'windows')}}\",\n      \"verifiedImageReferences\": [\n        {\n          \"offer\": \"\",\n          \"publisher\": \"\",\n          \"sku\": \"\",\n          \"version\": \"\",\n          \"virtualMachineImageId\": \"\"\n        }\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the list of node agent SKUs.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5bb81869-bd51-43f1-9a92-76290769e960",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "96f37cdf-14af-4dd5-81da-b188bec12548",
      "documentation": "Gets the number of nodes in each state, grouped by pool.",
      "method": "get",
      "endpoint": "nodecounts",
      "responses": [
        {
          "uuid": "cfb19b67-920d-4517-8b1f-c2cc43569938",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"dedicated\": {\n        \"creating\": {{faker 'random.number'}},\n        \"idle\": {{faker 'random.number'}},\n        \"leavingPool\": {{faker 'random.number'}},\n        \"offline\": {{faker 'random.number'}},\n        \"preempted\": {{faker 'random.number'}},\n        \"rebooting\": {{faker 'random.number'}},\n        \"reimaging\": {{faker 'random.number'}},\n        \"running\": {{faker 'random.number'}},\n        \"startTaskFailed\": {{faker 'random.number'}},\n        \"starting\": {{faker 'random.number'}},\n        \"total\": {{faker 'random.number'}},\n        \"unknown\": {{faker 'random.number'}},\n        \"unusable\": {{faker 'random.number'}},\n        \"waitingForStartTask\": {{faker 'random.number'}}\n      },\n      \"lowPriority\": {\n        \"creating\": {{faker 'random.number'}},\n        \"idle\": {{faker 'random.number'}},\n        \"leavingPool\": {{faker 'random.number'}},\n        \"offline\": {{faker 'random.number'}},\n        \"preempted\": {{faker 'random.number'}},\n        \"rebooting\": {{faker 'random.number'}},\n        \"reimaging\": {{faker 'random.number'}},\n        \"running\": {{faker 'random.number'}},\n        \"startTaskFailed\": {{faker 'random.number'}},\n        \"starting\": {{faker 'random.number'}},\n        \"total\": {{faker 'random.number'}},\n        \"unknown\": {{faker 'random.number'}},\n        \"unusable\": {{faker 'random.number'}},\n        \"waitingForStartTask\": {{faker 'random.number'}}\n      },\n      \"poolId\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The response contains the number of nodes in each node state, grouped by pool.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3aeae48a-0835-47ce-a1d4-e3f2e4bfbaf4",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "23dd2acb-126b-4351-a406-4d00b3ed980d",
      "documentation": "Lists all of the pools in the specified account.",
      "method": "get",
      "endpoint": "pools",
      "responses": [
        {
          "uuid": "673f7923-0723-4d53-902f-326642a0cc53",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"allocationState\": \"{{oneOf (array 'steady' 'resizing' 'stopping')}}\",\n      \"allocationStateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"applicationLicenses\": [\n        \"\"\n      ],\n      \"applicationPackageReferences\": [\n        {\n          \"applicationId\": \"\",\n          \"version\": \"\"\n        }\n      ],\n      \"autoScaleEvaluationInterval\": \"\",\n      \"autoScaleFormula\": \"\",\n      \"autoScaleRun\": {\n        \"error\": {\n          \"code\": \"\",\n          \"message\": \"\",\n          \"values\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ]\n        },\n        \"results\": \"\",\n        \"timestamp\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"certificateReferences\": [\n        {\n          \"storeLocation\": \"{{oneOf (array 'currentuser' 'localmachine')}}\",\n          \"storeName\": \"\",\n          \"thumbprint\": \"\",\n          \"thumbprintAlgorithm\": \"\",\n          \"visibility\": [\n            \"{{oneOf (array 'starttask' 'task' 'remoteuser')}}\"\n          ]\n        }\n      ],\n      \"cloudServiceConfiguration\": {\n        \"currentOSVersion\": \"\",\n        \"osFamily\": \"\",\n        \"targetOSVersion\": \"\"\n      },\n      \"creationTime\": \"{{faker 'date.recent' 365}}\",\n      \"currentDedicatedNodes\": {{faker 'random.number'}},\n      \"currentLowPriorityNodes\": {{faker 'random.number'}},\n      \"displayName\": \"\",\n      \"eTag\": \"\",\n      \"enableAutoScale\": {{faker 'random.boolean'}},\n      \"enableInterNodeCommunication\": {{faker 'random.boolean'}},\n      \"id\": \"\",\n      \"lastModified\": \"{{faker 'date.recent' 365}}\",\n      \"maxTasksPerNode\": {{faker 'random.number'}},\n      \"metadata\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"networkConfiguration\": {\n        \"endpointConfiguration\": {\n          \"inboundNATPools\": [\n            {\n              \"backendPort\": {{faker 'random.number'}},\n              \"frontendPortRangeEnd\": {{faker 'random.number'}},\n              \"frontendPortRangeStart\": {{faker 'random.number'}},\n              \"name\": \"\",\n              \"networkSecurityGroupRules\": [\n                {\n                  \"access\": \"{{oneOf (array 'allow' 'deny')}}\",\n                  \"priority\": {{faker 'random.number'}},\n                  \"sourceAddressPrefix\": \"\"\n                }\n              ],\n              \"protocol\": \"{{oneOf (array 'tcp' 'udp')}}\"\n            }\n          ]\n        },\n        \"subnetId\": \"\"\n      },\n      \"resizeErrors\": [\n        {\n          \"code\": \"\",\n          \"message\": \"\",\n          \"values\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ]\n        }\n      ],\n      \"resizeTimeout\": \"\",\n      \"startTask\": {\n        \"commandLine\": \"\",\n        \"containerSettings\": {\n          \"containerRunOptions\": \"\",\n          \"imageName\": \"\",\n          \"registry\": {\n            \"password\": \"\",\n            \"registryServer\": \"\",\n            \"username\": \"\"\n          }\n        },\n        \"environmentSettings\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"maxTaskRetryCount\": {{faker 'random.number'}},\n        \"resourceFiles\": [\n          {\n            \"blobSource\": \"\",\n            \"fileMode\": \"\",\n            \"filePath\": \"\"\n          }\n        ],\n        \"userIdentity\": {\n          \"autoUser\": {\n            \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n            \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n          },\n          \"username\": \"\"\n        },\n        \"waitForSuccess\": {{faker 'random.boolean'}}\n      },\n      \"state\": \"{{oneOf (array 'active' 'deleting' 'upgrading')}}\",\n      \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"stats\": {\n        \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n        \"resourceStats\": {\n          \"avgCPUPercentage\": {{faker 'random.float'}},\n          \"avgDiskGiB\": {{faker 'random.float'}},\n          \"avgMemoryGiB\": {{faker 'random.float'}},\n          \"diskReadGiB\": {{faker 'random.float'}},\n          \"diskReadIOps\": {{faker 'random.number'}},\n          \"diskWriteGiB\": {{faker 'random.float'}},\n          \"diskWriteIOps\": {{faker 'random.number'}},\n          \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n          \"networkReadGiB\": {{faker 'random.float'}},\n          \"networkWriteGiB\": {{faker 'random.float'}},\n          \"peakDiskGiB\": {{faker 'random.float'}},\n          \"peakMemoryGiB\": {{faker 'random.float'}},\n          \"startTime\": \"{{faker 'date.recent' 365}}\"\n        },\n        \"startTime\": \"{{faker 'date.recent' 365}}\",\n        \"url\": \"\",\n        \"usageStats\": {\n          \"dedicatedCoreTime\": \"\",\n          \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n          \"startTime\": \"{{faker 'date.recent' 365}}\"\n        }\n      },\n      \"targetDedicatedNodes\": {{faker 'random.number'}},\n      \"targetLowPriorityNodes\": {{faker 'random.number'}},\n      \"taskSchedulingPolicy\": {\n        \"nodeFillType\": \"{{oneOf (array 'spread' 'pack')}}\"\n      },\n      \"url\": \"\",\n      \"userAccounts\": [\n        {\n          \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n          \"linuxUserConfiguration\": {\n            \"gid\": {{faker 'random.number'}},\n            \"sshPrivateKey\": \"\",\n            \"uid\": {{faker 'random.number'}}\n          },\n          \"name\": \"\",\n          \"password\": \"\"\n        }\n      ],\n      \"virtualMachineConfiguration\": {\n        \"containerConfiguration\": {\n          \"containerImageNames\": [\n            \"\"\n          ],\n          \"containerRegistries\": [\n            {\n              \"password\": \"\",\n              \"registryServer\": \"\",\n              \"username\": \"\"\n            }\n          ],\n          \"type\": \"{{oneOf (array 'dockerCompatible')}}\"\n        },\n        \"dataDisks\": [\n          {\n            \"caching\": \"{{oneOf (array 'none' 'readonly' 'readwrite')}}\",\n            \"diskSizeGB\": {{faker 'random.number'}},\n            \"lun\": {{faker 'random.number'}},\n            \"storageAccountType\": \"{{oneOf (array 'standard_lrs' 'premium_lrs')}}\"\n          }\n        ],\n        \"imageReference\": {\n          \"offer\": \"\",\n          \"publisher\": \"\",\n          \"sku\": \"\",\n          \"version\": \"\",\n          \"virtualMachineImageId\": \"\"\n        },\n        \"licenseType\": \"\",\n        \"nodeAgentSKUId\": \"\",\n        \"osDisk\": {\n          \"caching\": \"{{oneOf (array 'none' 'readonly' 'readwrite')}}\"\n        },\n        \"windowsConfiguration\": {\n          \"enableAutomaticUpdates\": {{faker 'random.boolean'}}\n        }\n      },\n      \"vmSize\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the list of pools.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "76e0d9f5-e06f-4995-b202-c2d76dfe2f8f",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "52a5f568-341e-4362-8ecd-25a07de88ea7",
      "documentation": "Adds a pool to the specified account.",
      "method": "post",
      "endpoint": "pools",
      "responses": [
        {
          "uuid": "59a2295b-d0b6-4485-8383-f3cc92ee8109",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "abb4557c-d0e7-4ef6-95fe-e4963a7e5e4a",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f5b4f8ed-849e-4af3-9a1b-73133b15fc58",
      "documentation": "Deletes a pool from the specified account.",
      "method": "delete",
      "endpoint": "pools/:poolId",
      "responses": [
        {
          "uuid": "4aae2f36-e100-4f75-9feb-e1830d8f78b0",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "93dd4caa-f603-48e2-9ecb-8f700e3fc42c",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "352cc2ec-e312-4468-9abb-eca1fcb0101c",
      "documentation": "Gets information about the specified pool.",
      "method": "get",
      "endpoint": "pools/:poolId",
      "responses": [
        {
          "uuid": "0aca6b35-01f2-4169-82fc-9a0b4968e1df",
          "body": "{\n  \"allocationState\": \"{{oneOf (array 'steady' 'resizing' 'stopping')}}\",\n  \"allocationStateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n  \"applicationLicenses\": [\n    \"\"\n  ],\n  \"applicationPackageReferences\": [\n    {\n      \"applicationId\": \"\",\n      \"version\": \"\"\n    }\n  ],\n  \"autoScaleEvaluationInterval\": \"\",\n  \"autoScaleFormula\": \"\",\n  \"autoScaleRun\": {\n    \"error\": {\n      \"code\": \"\",\n      \"message\": \"\",\n      \"values\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ]\n    },\n    \"results\": \"\",\n    \"timestamp\": \"{{faker 'date.recent' 365}}\"\n  },\n  \"certificateReferences\": [\n    {\n      \"storeLocation\": \"{{oneOf (array 'currentuser' 'localmachine')}}\",\n      \"storeName\": \"\",\n      \"thumbprint\": \"\",\n      \"thumbprintAlgorithm\": \"\",\n      \"visibility\": [\n        \"{{oneOf (array 'starttask' 'task' 'remoteuser')}}\"\n      ]\n    }\n  ],\n  \"cloudServiceConfiguration\": {\n    \"currentOSVersion\": \"\",\n    \"osFamily\": \"\",\n    \"targetOSVersion\": \"\"\n  },\n  \"creationTime\": \"{{faker 'date.recent' 365}}\",\n  \"currentDedicatedNodes\": {{faker 'random.number'}},\n  \"currentLowPriorityNodes\": {{faker 'random.number'}},\n  \"displayName\": \"\",\n  \"eTag\": \"\",\n  \"enableAutoScale\": {{faker 'random.boolean'}},\n  \"enableInterNodeCommunication\": {{faker 'random.boolean'}},\n  \"id\": \"\",\n  \"lastModified\": \"{{faker 'date.recent' 365}}\",\n  \"maxTasksPerNode\": {{faker 'random.number'}},\n  \"metadata\": [\n    {\n      \"name\": \"\",\n      \"value\": \"\"\n    }\n  ],\n  \"networkConfiguration\": {\n    \"endpointConfiguration\": {\n      \"inboundNATPools\": [\n        {\n          \"backendPort\": {{faker 'random.number'}},\n          \"frontendPortRangeEnd\": {{faker 'random.number'}},\n          \"frontendPortRangeStart\": {{faker 'random.number'}},\n          \"name\": \"\",\n          \"networkSecurityGroupRules\": [\n            {\n              \"access\": \"{{oneOf (array 'allow' 'deny')}}\",\n              \"priority\": {{faker 'random.number'}},\n              \"sourceAddressPrefix\": \"\"\n            }\n          ],\n          \"protocol\": \"{{oneOf (array 'tcp' 'udp')}}\"\n        }\n      ]\n    },\n    \"subnetId\": \"\"\n  },\n  \"resizeErrors\": [\n    {\n      \"code\": \"\",\n      \"message\": \"\",\n      \"values\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ]\n    }\n  ],\n  \"resizeTimeout\": \"\",\n  \"startTask\": {\n    \"commandLine\": \"\",\n    \"containerSettings\": {\n      \"containerRunOptions\": \"\",\n      \"imageName\": \"\",\n      \"registry\": {\n        \"password\": \"\",\n        \"registryServer\": \"\",\n        \"username\": \"\"\n      }\n    },\n    \"environmentSettings\": [\n      {\n        \"name\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"maxTaskRetryCount\": {{faker 'random.number'}},\n    \"resourceFiles\": [\n      {\n        \"blobSource\": \"\",\n        \"fileMode\": \"\",\n        \"filePath\": \"\"\n      }\n    ],\n    \"userIdentity\": {\n      \"autoUser\": {\n        \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n        \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n      },\n      \"username\": \"\"\n    },\n    \"waitForSuccess\": {{faker 'random.boolean'}}\n  },\n  \"state\": \"{{oneOf (array 'active' 'deleting' 'upgrading')}}\",\n  \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n  \"stats\": {\n    \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n    \"resourceStats\": {\n      \"avgCPUPercentage\": {{faker 'random.float'}},\n      \"avgDiskGiB\": {{faker 'random.float'}},\n      \"avgMemoryGiB\": {{faker 'random.float'}},\n      \"diskReadGiB\": {{faker 'random.float'}},\n      \"diskReadIOps\": {{faker 'random.number'}},\n      \"diskWriteGiB\": {{faker 'random.float'}},\n      \"diskWriteIOps\": {{faker 'random.number'}},\n      \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n      \"networkReadGiB\": {{faker 'random.float'}},\n      \"networkWriteGiB\": {{faker 'random.float'}},\n      \"peakDiskGiB\": {{faker 'random.float'}},\n      \"peakMemoryGiB\": {{faker 'random.float'}},\n      \"startTime\": \"{{faker 'date.recent' 365}}\"\n    },\n    \"startTime\": \"{{faker 'date.recent' 365}}\",\n    \"url\": \"\",\n    \"usageStats\": {\n      \"dedicatedCoreTime\": \"\",\n      \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n      \"startTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  },\n  \"targetDedicatedNodes\": {{faker 'random.number'}},\n  \"targetLowPriorityNodes\": {{faker 'random.number'}},\n  \"taskSchedulingPolicy\": {\n    \"nodeFillType\": \"{{oneOf (array 'spread' 'pack')}}\"\n  },\n  \"url\": \"\",\n  \"userAccounts\": [\n    {\n      \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n      \"linuxUserConfiguration\": {\n        \"gid\": {{faker 'random.number'}},\n        \"sshPrivateKey\": \"\",\n        \"uid\": {{faker 'random.number'}}\n      },\n      \"name\": \"\",\n      \"password\": \"\"\n    }\n  ],\n  \"virtualMachineConfiguration\": {\n    \"containerConfiguration\": {\n      \"containerImageNames\": [\n        \"\"\n      ],\n      \"containerRegistries\": [\n        {\n          \"password\": \"\",\n          \"registryServer\": \"\",\n          \"username\": \"\"\n        }\n      ],\n      \"type\": \"{{oneOf (array 'dockerCompatible')}}\"\n    },\n    \"dataDisks\": [\n      {\n        \"caching\": \"{{oneOf (array 'none' 'readonly' 'readwrite')}}\",\n        \"diskSizeGB\": {{faker 'random.number'}},\n        \"lun\": {{faker 'random.number'}},\n        \"storageAccountType\": \"{{oneOf (array 'standard_lrs' 'premium_lrs')}}\"\n      }\n    ],\n    \"imageReference\": {\n      \"offer\": \"\",\n      \"publisher\": \"\",\n      \"sku\": \"\",\n      \"version\": \"\",\n      \"virtualMachineImageId\": \"\"\n    },\n    \"licenseType\": \"\",\n    \"nodeAgentSKUId\": \"\",\n    \"osDisk\": {\n      \"caching\": \"{{oneOf (array 'none' 'readonly' 'readwrite')}}\"\n    },\n    \"windowsConfiguration\": {\n      \"enableAutomaticUpdates\": {{faker 'random.boolean'}}\n    }\n  },\n  \"vmSize\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the pool.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "098fe2c2-eae7-46d1-bc3c-3d1a63a45beb",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "94906e7c-ca82-477c-a09d-d9ac09234975",
      "documentation": "Gets basic properties of a pool.",
      "method": "head",
      "endpoint": "pools/:poolId",
      "responses": [
        {
          "uuid": "2e5e8fad-6d88-4360-8dfe-381a2f578c2c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing headers related to the pool, if it exists.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4f4014a9-a768-4e2d-abc2-2fde7ee5c082",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "The pool does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "111ea4b8-ed25-4f33-8599-5ebf686292ec",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d0541aa2-690d-4229-818f-d26a3508d0ef",
      "documentation": "Updates the properties of the specified pool.",
      "method": "patch",
      "endpoint": "pools/:poolId",
      "responses": [
        {
          "uuid": "4f19d049-e6ac-4655-a9c9-0145d2180fc9",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a7b054ec-005d-4deb-9a6a-6132654cac22",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "976ec9e8-fc0f-4549-ae5a-0aa2016d03e4",
      "documentation": "Disables automatic scaling for a pool.",
      "method": "post",
      "endpoint": "pools/:poolId/disableautoscale",
      "responses": [
        {
          "uuid": "1003d8c6-56b1-40fb-970f-3a4f8482756e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c74c66a0-9a52-4dad-b948-2ec0ba4e9866",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bf9690b0-caa6-43fa-94b6-b3ec2efdbd26",
      "documentation": "Enables automatic scaling for a pool.",
      "method": "post",
      "endpoint": "pools/:poolId/enableautoscale",
      "responses": [
        {
          "uuid": "84d84b31-61d9-4078-be98-4945e4d8edf9",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9906244a-a382-431d-b38f-794fb0a4e2e4",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ab1f7a65-9465-4846-9c7e-00e3c2cfe6fa",
      "documentation": "Gets the result of evaluating an automatic scaling formula on the pool.",
      "method": "post",
      "endpoint": "pools/:poolId/evaluateautoscale",
      "responses": [
        {
          "uuid": "4f4959b1-e070-45e5-98c8-bfcb8c89150d",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"values\": [\n      {\n        \"name\": \"\",\n        \"value\": \"\"\n      }\n    ]\n  },\n  \"results\": \"\",\n  \"timestamp\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the results of the autoscale evaluation.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ddd95a76-5646-4f64-8cee-91e6bed0e09d",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7506aada-5257-4682-a32f-e76aac2efc27",
      "documentation": "Lists the compute nodes in the specified pool.",
      "method": "get",
      "endpoint": "pools/:poolId/nodes",
      "responses": [
        {
          "uuid": "0ae318bd-5f4b-4ca0-b60d-ccaab7d80093",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"affinityId\": \"\",\n      \"allocationTime\": \"{{faker 'date.recent' 365}}\",\n      \"certificateReferences\": [\n        {\n          \"storeLocation\": \"{{oneOf (array 'currentuser' 'localmachine')}}\",\n          \"storeName\": \"\",\n          \"thumbprint\": \"\",\n          \"thumbprintAlgorithm\": \"\",\n          \"visibility\": [\n            \"{{oneOf (array 'starttask' 'task' 'remoteuser')}}\"\n          ]\n        }\n      ],\n      \"endpointConfiguration\": {\n        \"inboundEndpoints\": [\n          {\n            \"backendPort\": {{faker 'random.number'}},\n            \"frontendPort\": {{faker 'random.number'}},\n            \"name\": \"\",\n            \"protocol\": \"{{oneOf (array 'tcp' 'udp')}}\",\n            \"publicFQDN\": \"\",\n            \"publicIPAddress\": \"\"\n          }\n        ]\n      },\n      \"errors\": [\n        {\n          \"code\": \"\",\n          \"errorDetails\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"message\": \"\"\n        }\n      ],\n      \"id\": \"\",\n      \"ipAddress\": \"\",\n      \"isDedicated\": {{faker 'random.boolean'}},\n      \"lastBootTime\": \"{{faker 'date.recent' 365}}\",\n      \"nodeAgentInfo\": {\n        \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n        \"version\": \"\"\n      },\n      \"recentTasks\": [\n        {\n          \"executionInfo\": {\n            \"containerInfo\": {\n              \"containerId\": \"\",\n              \"error\": \"\",\n              \"state\": \"\"\n            },\n            \"endTime\": \"{{faker 'date.recent' 365}}\",\n            \"exitCode\": {{faker 'random.number'}},\n            \"failureInfo\": {\n              \"category\": \"{{oneOf (array 'usererror' 'servererror')}}\",\n              \"code\": \"\",\n              \"details\": [\n                {\n                  \"name\": \"\",\n                  \"value\": \"\"\n                }\n              ],\n              \"message\": \"\"\n            },\n            \"lastRequeueTime\": \"{{faker 'date.recent' 365}}\",\n            \"lastRetryTime\": \"{{faker 'date.recent' 365}}\",\n            \"requeueCount\": {{faker 'random.number'}},\n            \"result\": \"{{oneOf (array 'success' 'failure')}}\",\n            \"retryCount\": {{faker 'random.number'}},\n            \"startTime\": \"{{faker 'date.recent' 365}}\"\n          },\n          \"jobId\": \"\",\n          \"subtaskId\": {{faker 'random.number'}},\n          \"taskId\": \"\",\n          \"taskState\": \"{{oneOf (array 'active' 'preparing' 'running' 'completed')}}\",\n          \"taskUrl\": \"\"\n        }\n      ],\n      \"runningTasksCount\": {{faker 'random.number'}},\n      \"schedulingState\": \"{{oneOf (array 'enabled' 'disabled')}}\",\n      \"startTask\": {\n        \"commandLine\": \"\",\n        \"containerSettings\": {\n          \"containerRunOptions\": \"\",\n          \"imageName\": \"\",\n          \"registry\": {\n            \"password\": \"\",\n            \"registryServer\": \"\",\n            \"username\": \"\"\n          }\n        },\n        \"environmentSettings\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"maxTaskRetryCount\": {{faker 'random.number'}},\n        \"resourceFiles\": [\n          {\n            \"blobSource\": \"\",\n            \"fileMode\": \"\",\n            \"filePath\": \"\"\n          }\n        ],\n        \"userIdentity\": {\n          \"autoUser\": {\n            \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n            \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n          },\n          \"username\": \"\"\n        },\n        \"waitForSuccess\": {{faker 'random.boolean'}}\n      },\n      \"startTaskInfo\": {\n        \"containerInfo\": {\n          \"containerId\": \"\",\n          \"error\": \"\",\n          \"state\": \"\"\n        },\n        \"endTime\": \"{{faker 'date.recent' 365}}\",\n        \"exitCode\": {{faker 'random.number'}},\n        \"failureInfo\": {\n          \"category\": \"{{oneOf (array 'usererror' 'servererror')}}\",\n          \"code\": \"\",\n          \"details\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"message\": \"\"\n        },\n        \"lastRetryTime\": \"{{faker 'date.recent' 365}}\",\n        \"result\": \"{{oneOf (array 'success' 'failure')}}\",\n        \"retryCount\": {{faker 'random.number'}},\n        \"startTime\": \"{{faker 'date.recent' 365}}\",\n        \"state\": \"{{oneOf (array 'running' 'completed')}}\"\n      },\n      \"state\": \"{{oneOf (array 'idle' 'rebooting' 'reimaging' 'running' 'unusable' 'creating' 'starting' 'waitingforstarttask' 'starttaskfailed' 'unknown' 'leavingpool' 'offline' 'preempted')}}\",\n      \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"totalTasksRun\": {{faker 'random.number'}},\n      \"totalTasksSucceeded\": {{faker 'random.number'}},\n      \"url\": \"\",\n      \"vmSize\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the list of nodes.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e6ced60a-b9d8-4d86-9318-567a3ac5eb29",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c8cd4218-7ac9-4c85-86c1-2ff0551523ec",
      "documentation": "Gets information about the specified compute node.",
      "method": "get",
      "endpoint": "pools/:poolId/nodes/:nodeId",
      "responses": [
        {
          "uuid": "7e87c7c9-4b05-45b4-8016-f90d35d802c5",
          "body": "{\n  \"affinityId\": \"\",\n  \"allocationTime\": \"{{faker 'date.recent' 365}}\",\n  \"certificateReferences\": [\n    {\n      \"storeLocation\": \"{{oneOf (array 'currentuser' 'localmachine')}}\",\n      \"storeName\": \"\",\n      \"thumbprint\": \"\",\n      \"thumbprintAlgorithm\": \"\",\n      \"visibility\": [\n        \"{{oneOf (array 'starttask' 'task' 'remoteuser')}}\"\n      ]\n    }\n  ],\n  \"endpointConfiguration\": {\n    \"inboundEndpoints\": [\n      {\n        \"backendPort\": {{faker 'random.number'}},\n        \"frontendPort\": {{faker 'random.number'}},\n        \"name\": \"\",\n        \"protocol\": \"{{oneOf (array 'tcp' 'udp')}}\",\n        \"publicFQDN\": \"\",\n        \"publicIPAddress\": \"\"\n      }\n    ]\n  },\n  \"errors\": [\n    {\n      \"code\": \"\",\n      \"errorDetails\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"message\": \"\"\n    }\n  ],\n  \"id\": \"\",\n  \"ipAddress\": \"\",\n  \"isDedicated\": {{faker 'random.boolean'}},\n  \"lastBootTime\": \"{{faker 'date.recent' 365}}\",\n  \"nodeAgentInfo\": {\n    \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n    \"version\": \"\"\n  },\n  \"recentTasks\": [\n    {\n      \"executionInfo\": {\n        \"containerInfo\": {\n          \"containerId\": \"\",\n          \"error\": \"\",\n          \"state\": \"\"\n        },\n        \"endTime\": \"{{faker 'date.recent' 365}}\",\n        \"exitCode\": {{faker 'random.number'}},\n        \"failureInfo\": {\n          \"category\": \"{{oneOf (array 'usererror' 'servererror')}}\",\n          \"code\": \"\",\n          \"details\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"message\": \"\"\n        },\n        \"lastRequeueTime\": \"{{faker 'date.recent' 365}}\",\n        \"lastRetryTime\": \"{{faker 'date.recent' 365}}\",\n        \"requeueCount\": {{faker 'random.number'}},\n        \"result\": \"{{oneOf (array 'success' 'failure')}}\",\n        \"retryCount\": {{faker 'random.number'}},\n        \"startTime\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"jobId\": \"\",\n      \"subtaskId\": {{faker 'random.number'}},\n      \"taskId\": \"\",\n      \"taskState\": \"{{oneOf (array 'active' 'preparing' 'running' 'completed')}}\",\n      \"taskUrl\": \"\"\n    }\n  ],\n  \"runningTasksCount\": {{faker 'random.number'}},\n  \"schedulingState\": \"{{oneOf (array 'enabled' 'disabled')}}\",\n  \"startTask\": {\n    \"commandLine\": \"\",\n    \"containerSettings\": {\n      \"containerRunOptions\": \"\",\n      \"imageName\": \"\",\n      \"registry\": {\n        \"password\": \"\",\n        \"registryServer\": \"\",\n        \"username\": \"\"\n      }\n    },\n    \"environmentSettings\": [\n      {\n        \"name\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"maxTaskRetryCount\": {{faker 'random.number'}},\n    \"resourceFiles\": [\n      {\n        \"blobSource\": \"\",\n        \"fileMode\": \"\",\n        \"filePath\": \"\"\n      }\n    ],\n    \"userIdentity\": {\n      \"autoUser\": {\n        \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n        \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n      },\n      \"username\": \"\"\n    },\n    \"waitForSuccess\": {{faker 'random.boolean'}}\n  },\n  \"startTaskInfo\": {\n    \"containerInfo\": {\n      \"containerId\": \"\",\n      \"error\": \"\",\n      \"state\": \"\"\n    },\n    \"endTime\": \"{{faker 'date.recent' 365}}\",\n    \"exitCode\": {{faker 'random.number'}},\n    \"failureInfo\": {\n      \"category\": \"{{oneOf (array 'usererror' 'servererror')}}\",\n      \"code\": \"\",\n      \"details\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"message\": \"\"\n    },\n    \"lastRetryTime\": \"{{faker 'date.recent' 365}}\",\n    \"result\": \"{{oneOf (array 'success' 'failure')}}\",\n    \"retryCount\": {{faker 'random.number'}},\n    \"startTime\": \"{{faker 'date.recent' 365}}\",\n    \"state\": \"{{oneOf (array 'running' 'completed')}}\"\n  },\n  \"state\": \"{{oneOf (array 'idle' 'rebooting' 'reimaging' 'running' 'unusable' 'creating' 'starting' 'waitingforstarttask' 'starttaskfailed' 'unknown' 'leavingpool' 'offline' 'preempted')}}\",\n  \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n  \"totalTasksRun\": {{faker 'random.number'}},\n  \"totalTasksSucceeded\": {{faker 'random.number'}},\n  \"url\": \"\",\n  \"vmSize\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the compute node.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2e5ed5e6-faa4-4c68-96ac-2089db4910e7",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "78a78423-4d1e-479a-892f-369413847270",
      "documentation": "Disables task scheduling on the specified compute node.",
      "method": "post",
      "endpoint": "pools/:poolId/nodes/:nodeId/disablescheduling",
      "responses": [
        {
          "uuid": "c584df0b-0901-425c-8483-850aad034816",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "733f3683-cef8-4784-a67d-2def5112c165",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3dffb0fa-cde6-43d8-bf1c-ed8933c56765",
      "documentation": "Enables task scheduling on the specified compute node.",
      "method": "post",
      "endpoint": "pools/:poolId/nodes/:nodeId/enablescheduling",
      "responses": [
        {
          "uuid": "636a5d58-69d5-4e50-b885-ccd5dfa15193",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7f2c34c8-8ca5-44ea-bcd7-26274a2902de",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "20fb7e5b-2999-4d60-b1c4-48829095b2d0",
      "documentation": "Lists all of the files in task directories on the specified compute node.",
      "method": "get",
      "endpoint": "pools/:poolId/nodes/:nodeId/files",
      "responses": [
        {
          "uuid": "e6feec7b-4977-49e5-a196-afa650167a7c",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"isDirectory\": {{faker 'random.boolean'}},\n      \"name\": \"\",\n      \"properties\": {\n        \"contentLength\": {{faker 'random.number'}},\n        \"contentType\": \"\",\n        \"creationTime\": \"{{faker 'date.recent' 365}}\",\n        \"fileMode\": \"\",\n        \"lastModified\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"url\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the list of files.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1a8300fe-cfeb-4160-a603-fd07e5531858",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4f572062-6912-4449-a032-2da8ba03e548",
      "documentation": "Deletes the specified file from the compute node.",
      "method": "delete",
      "endpoint": "pools/:poolId/nodes/:nodeId/files/:filePath",
      "responses": [
        {
          "uuid": "2e79fc74-3008-413d-8850-1bb46a83d8f0",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6daedf5c-c764-4edc-8b3a-f786cb0a91d8",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "94e485b4-0cd7-43ea-a367-ac7850f369ac",
      "documentation": "Returns the content of the specified compute node file.",
      "method": "get",
      "endpoint": "pools/:poolId/nodes/:nodeId/files/:filePath",
      "responses": [
        {
          "uuid": "418f1dc9-b370-40f8-9d7a-aff72c852820",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "The file content.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Content-Length",
              "value": ""
            },
            {
              "key": "Content-Type",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "ocp-batch-file-isdirectory",
              "value": ""
            },
            {
              "key": "ocp-batch-file-mode",
              "value": ""
            },
            {
              "key": "ocp-batch-file-url",
              "value": ""
            },
            {
              "key": "ocp-creation-time",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d7796776-2875-4cf9-876f-ab1fcbcbafc2",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a76df2f3-3817-4021-944b-c2fdd3485fd3",
      "documentation": "Gets the properties of the specified compute node file.",
      "method": "head",
      "endpoint": "pools/:poolId/nodes/:nodeId/files/:filePath",
      "responses": [
        {
          "uuid": "09607ae2-4260-4099-be94-b0ce187f12bf",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the file properties.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Content-Length",
              "value": ""
            },
            {
              "key": "Content-Type",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "ocp-batch-file-isdirectory",
              "value": ""
            },
            {
              "key": "ocp-batch-file-mode",
              "value": ""
            },
            {
              "key": "ocp-batch-file-url",
              "value": ""
            },
            {
              "key": "ocp-creation-time",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b99166a1-b4dc-4e7d-add1-8a5ba8922aa3",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cb8e9397-f6c4-46d4-b2db-c4209c7b17a0",
      "documentation": "Gets the Remote Desktop Protocol file for the specified compute node.",
      "method": "get",
      "endpoint": "pools/:poolId/nodes/:nodeId/rdp",
      "responses": [
        {
          "uuid": "3c273464-409c-4edc-b7dd-ac5bceef85fc",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the RDP information.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3a20ef19-f1e4-4412-ade2-baae3c0dd2db",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4c50f03c-b9d5-472b-aba0-f1979d31243c",
      "documentation": "Restarts the specified compute node.",
      "method": "post",
      "endpoint": "pools/:poolId/nodes/:nodeId/reboot",
      "responses": [
        {
          "uuid": "9665d04c-48e9-4111-8108-1fb532d12b7a",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "de3e1987-7e22-4ecd-b16e-7133bc0c893a",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c57b7d71-70dc-4597-b598-80e942d636de",
      "documentation": "Reinstalls the operating system on the specified compute node.",
      "method": "post",
      "endpoint": "pools/:poolId/nodes/:nodeId/reimage",
      "responses": [
        {
          "uuid": "2f9a6a4f-65bf-4bc9-a6d4-445082ddc7d7",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5dd05507-5182-49bb-b48c-2ec2328b6943",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a9953095-5ded-4522-b025-b4cca8f59dec",
      "documentation": "Gets the settings required for remote login to a compute node.",
      "method": "get",
      "endpoint": "pools/:poolId/nodes/:nodeId/remoteloginsettings",
      "responses": [
        {
          "uuid": "4909c8a2-9f44-4d10-86b5-7cf912a5ef41",
          "body": "{\n  \"remoteLoginIPAddress\": \"\",\n  \"remoteLoginPort\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the login settings.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "888d025d-562e-4af8-b7b5-2b7b53d0f3a7",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dd3585b0-119b-4652-b12a-456d10209a8a",
      "documentation": "Upload Azure Batch service log files from the specified compute node to Azure Blob Storage.",
      "method": "post",
      "endpoint": "pools/:poolId/nodes/:nodeId/uploadbatchservicelogs",
      "responses": [
        {
          "uuid": "7a49b643-3aaf-4a8d-871a-2da329f42665",
          "body": "{\n  \"numberOfFilesUploaded\": {{faker 'random.number'}},\n  \"virtualDirectoryName\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6e790562-88b6-45b4-a0f0-b916047a23b7",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3b7dbb79-eeab-48cd-a4c2-159f11306df4",
      "documentation": "Adds a user account to the specified compute node.",
      "method": "post",
      "endpoint": "pools/:poolId/nodes/:nodeId/users",
      "responses": [
        {
          "uuid": "706a358d-cfd5-4ce8-a51e-53b65564e603",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b1461777-4b98-440c-8a8a-dc42f4c9caaa",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "95cbcad0-9a8c-4787-888d-676ecfc435d2",
      "documentation": "Deletes a user account from the specified compute node.",
      "method": "delete",
      "endpoint": "pools/:poolId/nodes/:nodeId/users/:userName",
      "responses": [
        {
          "uuid": "b1684074-68c4-47a0-a152-248ecce8a512",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9bea1609-496a-423c-b4de-d3d67962b143",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "78eee960-3eab-459b-8abb-3a1d1cce4bdb",
      "documentation": "Updates the password and expiration time of a user account on the specified compute node.",
      "method": "put",
      "endpoint": "pools/:poolId/nodes/:nodeId/users/:userName",
      "responses": [
        {
          "uuid": "bd0643e3-6ed3-40a7-8c2b-e81659be1da4",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1fd6de6e-31f4-4816-9117-f22e0c608beb",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b7d26dee-f4e2-417f-b903-03fda4d6c959",
      "documentation": "Removes compute nodes from the specified pool.",
      "method": "post",
      "endpoint": "pools/:poolId/removenodes",
      "responses": [
        {
          "uuid": "966229a1-2092-49c8-8a09-5ef691577b29",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ba697cc5-35c4-4822-8a9d-ccd0e27e4e69",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c5ea1a9a-97d2-4afe-8878-48c2973e4926",
      "documentation": "Changes the number of compute nodes that are assigned to a pool.",
      "method": "post",
      "endpoint": "pools/:poolId/resize",
      "responses": [
        {
          "uuid": "6967169e-72e4-4173-879e-0d71300bd8a7",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6457728b-ccdb-4566-ac12-2c165b1d97fe",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5a014546-50f0-405c-9a0c-aa2163bb116a",
      "documentation": "Stops an ongoing resize operation on the pool.",
      "method": "post",
      "endpoint": "pools/:poolId/stopresize",
      "responses": [
        {
          "uuid": "78dd1b39-5338-4a90-b893-536f3f5c41f5",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "742bcefe-7561-4469-a751-b4015ebd25ff",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service. If you call this API on a pool which is not in the resizing state, the request fails with HTTP status code 409.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e3eb8556-0f55-4012-a3c2-728649c23608",
      "documentation": "Updates the properties of the specified pool.",
      "method": "post",
      "endpoint": "pools/:poolId/updateproperties",
      "responses": [
        {
          "uuid": "8293e2be-d47d-4c47-8e23-37447105c5ad",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fe43d6b2-750b-43c4-82e0-548f935677f3",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f2bc1648-72be-4990-8023-f6e1f2be9dce",
      "documentation": "Upgrades the operating system of the specified pool.",
      "method": "post",
      "endpoint": "pools/:poolId/upgradeos",
      "responses": [
        {
          "uuid": "ea45a490-90c4-4da2-b5eb-9f88ad10da56",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "45e99caf-247f-4133-b67e-94cc6daa38c9",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4cab4881-ad46-47e7-b115-12273035cb93",
      "documentation": "Lists the usage metrics, aggregated by pool across individual time intervals, for the specified account.",
      "method": "get",
      "endpoint": "poolusagemetrics",
      "responses": [
        {
          "uuid": "e1099c88-0cd6-4ad0-885c-5f0ecb26e90d",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"dataEgressGiB\": {{faker 'random.float'}},\n      \"dataIngressGiB\": {{faker 'random.float'}},\n      \"endTime\": \"{{faker 'date.recent' 365}}\",\n      \"poolId\": \"\",\n      \"startTime\": \"{{faker 'date.recent' 365}}\",\n      \"totalCoreHours\": {{faker 'random.float'}},\n      \"vmSize\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the list of pool usage details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4ef33b8c-b50e-4af5-b86b-91db5cb6c731",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}