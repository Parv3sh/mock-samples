{
  "uuid": "69b5f06a-4b76-4a5c-b7d7-bc9101ee8e43",
  "lastMigration": 19,
  "name": "BatchService",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "2a19c4f2-27fd-4111-b0b6-aab710e6076d",
      "documentation": "Lists all of the applications available in the specified account.",
      "method": "get",
      "endpoint": "applications",
      "responses": [
        {
          "uuid": "4505fa57-042c-4b57-8543-85e6225848cf",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"displayName\": \"\",\n      \"id\": \"\",\n      \"versions\": [\n        \"\"\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the list of applications.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3df1577b-7c3c-427a-841c-f65fbe1c3e3e",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e62b57ec-5aa5-498c-a688-e381f946555e",
      "documentation": "Gets information about the specified application.",
      "method": "get",
      "endpoint": "applications/:applicationId",
      "responses": [
        {
          "uuid": "7edad6af-0bea-489e-b4b9-c30784c1524f",
          "body": "{\n  \"displayName\": \"\",\n  \"id\": \"\",\n  \"versions\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the application.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5147e655-9482-4927-9408-3c8e28b5cbfb",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7a608b1c-05db-441a-ae28-bcd88487bdb5",
      "documentation": "Lists all of the certificates that have been added to the specified account.",
      "method": "get",
      "endpoint": "certificates",
      "responses": [
        {
          "uuid": "7dc2e804-727a-4286-84da-01b870451445",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"deleteCertificateError\": {\n        \"code\": \"\",\n        \"message\": \"\",\n        \"values\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\"\n          }\n        ]\n      },\n      \"previousState\": \"{{oneOf (array 'active' 'deleting' 'deletefailed')}}\",\n      \"previousStateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"publicData\": \"\",\n      \"state\": \"{{oneOf (array 'active' 'deleting' 'deletefailed')}}\",\n      \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"thumbprint\": \"\",\n      \"thumbprintAlgorithm\": \"\",\n      \"url\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the list of certificates.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6bb1749d-fa37-419b-807f-f953d8d2b910",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ffa6a765-ad6d-421f-aa3b-fcd34a092302",
      "documentation": "Adds a certificate to the specified account.",
      "method": "post",
      "endpoint": "certificates",
      "responses": [
        {
          "uuid": "ca872bd3-1017-4722-a86e-bb0245c4d282",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ee82cc03-636d-418c-8b38-f188e984c00a",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4005a508-07b6-4790-9aa0-d920a03ee650",
      "documentation": "Deletes a certificate from the specified account.",
      "method": "delete",
      "endpoint": "certificates(thumbprintAlgorithm=:thumbprintAlgorithm,thumbprint=:thumbprint)",
      "responses": [
        {
          "uuid": "24ca0980-6f74-448b-9a59-720504a5e485",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c7fcb24f-23b5-4455-b75b-eda808842e63",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "98ed7845-04ad-4357-b9e6-c873e0250281",
      "documentation": "Gets information about the specified certificate.",
      "method": "get",
      "endpoint": "certificates(thumbprintAlgorithm=:thumbprintAlgorithm,thumbprint=:thumbprint)",
      "responses": [
        {
          "uuid": "dce63b91-1bee-4684-8e19-48d913f6b2c7",
          "body": "{\n  \"deleteCertificateError\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"values\": [\n      {\n        \"name\": \"\",\n        \"value\": \"\"\n      }\n    ]\n  },\n  \"previousState\": \"{{oneOf (array 'active' 'deleting' 'deletefailed')}}\",\n  \"previousStateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n  \"publicData\": \"\",\n  \"state\": \"{{oneOf (array 'active' 'deleting' 'deletefailed')}}\",\n  \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n  \"thumbprint\": \"\",\n  \"thumbprintAlgorithm\": \"\",\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the certificate.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8be648b9-ebc6-4f65-b8ab-7527ec4d8f1a",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "47ba912d-a76c-4d21-8f53-84399f84c772",
      "documentation": "Cancels a failed deletion of a certificate from the specified account.",
      "method": "post",
      "endpoint": "certificates(thumbprintAlgorithm=:thumbprintAlgorithm,thumbprint=:thumbprint)/canceldelete",
      "responses": [
        {
          "uuid": "994af8a8-4428-4453-9cd4-34adb2ae2142",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ebb101fe-bfa6-41ff-91d7-e68788459481",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b1458957-8320-4c63-9ef0-0bdcd1104398",
      "documentation": "Lists all of the jobs in the specified account.",
      "method": "get",
      "endpoint": "jobs",
      "responses": [
        {
          "uuid": "a17280a0-bd2c-4f41-aee9-4aeb6df0a56e",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"commonEnvironmentSettings\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"constraints\": {\n        \"maxTaskRetryCount\": {{faker 'random.number'}},\n        \"maxWallClockTime\": \"\"\n      },\n      \"creationTime\": \"{{faker 'date.recent' 365}}\",\n      \"displayName\": \"\",\n      \"eTag\": \"\",\n      \"executionInfo\": {\n        \"endTime\": \"{{faker 'date.recent' 365}}\",\n        \"poolId\": \"\",\n        \"schedulingError\": {\n          \"category\": \"{{oneOf (array 'usererror' 'servererror')}}\",\n          \"code\": \"\",\n          \"details\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"message\": \"\"\n        },\n        \"startTime\": \"{{faker 'date.recent' 365}}\",\n        \"terminateReason\": \"\"\n      },\n      \"id\": \"\",\n      \"jobManagerTask\": {\n        \"allowLowPriorityNode\": {{faker 'random.boolean'}},\n        \"applicationPackageReferences\": [\n          {\n            \"applicationId\": \"\",\n            \"version\": \"\"\n          }\n        ],\n        \"authenticationTokenSettings\": {\n          \"access\": [\n            \"{{oneOf (array 'job')}}\"\n          ]\n        },\n        \"commandLine\": \"\",\n        \"constraints\": {\n          \"maxTaskRetryCount\": {{faker 'random.number'}},\n          \"maxWallClockTime\": \"\",\n          \"retentionTime\": \"\"\n        },\n        \"containerSettings\": {\n          \"containerRunOptions\": \"\",\n          \"imageName\": \"\",\n          \"registry\": {\n            \"password\": \"\",\n            \"registryServer\": \"\",\n            \"username\": \"\"\n          }\n        },\n        \"displayName\": \"\",\n        \"environmentSettings\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"killJobOnCompletion\": {{faker 'random.boolean'}},\n        \"outputFiles\": [\n          {\n            \"destination\": {\n              \"container\": {\n                \"containerUrl\": \"\",\n                \"path\": \"\"\n              }\n            },\n            \"filePattern\": \"\",\n            \"uploadOptions\": {\n              \"uploadCondition\": \"{{oneOf (array 'tasksuccess' 'taskfailure' 'taskcompletion')}}\"\n            }\n          }\n        ],\n        \"resourceFiles\": [\n          {\n            \"blobSource\": \"\",\n            \"fileMode\": \"\",\n            \"filePath\": \"\"\n          }\n        ],\n        \"runExclusive\": {{faker 'random.boolean'}},\n        \"userIdentity\": {\n          \"autoUser\": {\n            \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n            \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n          },\n          \"username\": \"\"\n        }\n      },\n      \"jobPreparationTask\": {\n        \"commandLine\": \"\",\n        \"constraints\": {\n          \"maxTaskRetryCount\": {{faker 'random.number'}},\n          \"maxWallClockTime\": \"\",\n          \"retentionTime\": \"\"\n        },\n        \"containerSettings\": {\n          \"containerRunOptions\": \"\",\n          \"imageName\": \"\",\n          \"registry\": {\n            \"password\": \"\",\n            \"registryServer\": \"\",\n            \"username\": \"\"\n          }\n        },\n        \"environmentSettings\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"rerunOnNodeRebootAfterSuccess\": {{faker 'random.boolean'}},\n        \"resourceFiles\": [\n          {\n            \"blobSource\": \"\",\n            \"fileMode\": \"\",\n            \"filePath\": \"\"\n          }\n        ],\n        \"userIdentity\": {\n          \"autoUser\": {\n            \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n            \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n          },\n          \"username\": \"\"\n        },\n        \"waitForSuccess\": {{faker 'random.boolean'}}\n      },\n      \"jobReleaseTask\": {\n        \"commandLine\": \"\",\n        \"containerSettings\": {\n          \"containerRunOptions\": \"\",\n          \"imageName\": \"\",\n          \"registry\": {\n            \"password\": \"\",\n            \"registryServer\": \"\",\n            \"username\": \"\"\n          }\n        },\n        \"environmentSettings\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"maxWallClockTime\": \"\",\n        \"resourceFiles\": [\n          {\n            \"blobSource\": \"\",\n            \"fileMode\": \"\",\n            \"filePath\": \"\"\n          }\n        ],\n        \"retentionTime\": \"\",\n        \"userIdentity\": {\n          \"autoUser\": {\n            \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n            \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n          },\n          \"username\": \"\"\n        }\n      },\n      \"lastModified\": \"{{faker 'date.recent' 365}}\",\n      \"metadata\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"onAllTasksComplete\": \"{{oneOf (array 'noaction' 'terminatejob')}}\",\n      \"onTaskFailure\": \"{{oneOf (array 'noaction' 'performexitoptionsjobaction')}}\",\n      \"poolInfo\": {\n        \"autoPoolSpecification\": {\n          \"autoPoolIdPrefix\": \"\",\n          \"keepAlive\": {{faker 'random.boolean'}},\n          \"pool\": {\n            \"applicationLicenses\": [\n              \"\"\n            ],\n            \"applicationPackageReferences\": [\n              {\n                \"applicationId\": \"\",\n                \"version\": \"\"\n              }\n            ],\n            \"autoScaleEvaluationInterval\": \"\",\n            \"autoScaleFormula\": \"\",\n            \"certificateReferences\": [\n              {\n                \"storeLocation\": \"{{oneOf (array 'currentuser' 'localmachine')}}\",\n                \"storeName\": \"\",\n                \"thumbprint\": \"\",\n                \"thumbprintAlgorithm\": \"\",\n                \"visibility\": [\n                  \"{{oneOf (array 'starttask' 'task' 'remoteuser')}}\"\n                ]\n              }\n            ],\n            \"cloudServiceConfiguration\": {\n              \"currentOSVersion\": \"\",\n              \"osFamily\": \"\",\n              \"targetOSVersion\": \"\"\n            },\n            \"displayName\": \"\",\n            \"enableAutoScale\": {{faker 'random.boolean'}},\n            \"enableInterNodeCommunication\": {{faker 'random.boolean'}},\n            \"maxTasksPerNode\": {{faker 'random.number'}},\n            \"metadata\": [\n              {\n                \"name\": \"\",\n                \"value\": \"\"\n              }\n            ],\n            \"networkConfiguration\": {\n              \"endpointConfiguration\": {\n                \"inboundNATPools\": [\n                  {\n                    \"backendPort\": {{faker 'random.number'}},\n                    \"frontendPortRangeEnd\": {{faker 'random.number'}},\n                    \"frontendPortRangeStart\": {{faker 'random.number'}},\n                    \"name\": \"\",\n                    \"networkSecurityGroupRules\": [\n                      {\n                        \"access\": \"{{oneOf (array 'allow' 'deny')}}\",\n                        \"priority\": {{faker 'random.number'}},\n                        \"sourceAddressPrefix\": \"\"\n                      }\n                    ],\n                    \"protocol\": \"{{oneOf (array 'tcp' 'udp')}}\"\n                  }\n                ]\n              },\n              \"subnetId\": \"\"\n            },\n            \"resizeTimeout\": \"\",\n            \"startTask\": {\n              \"commandLine\": \"\",\n              \"containerSettings\": {\n                \"containerRunOptions\": \"\",\n                \"imageName\": \"\",\n                \"registry\": {\n                  \"password\": \"\",\n                  \"registryServer\": \"\",\n                  \"username\": \"\"\n                }\n              },\n              \"environmentSettings\": [\n                {\n                  \"name\": \"\",\n                  \"value\": \"\"\n                }\n              ],\n              \"maxTaskRetryCount\": {{faker 'random.number'}},\n              \"resourceFiles\": [\n                {\n                  \"blobSource\": \"\",\n                  \"fileMode\": \"\",\n                  \"filePath\": \"\"\n                }\n              ],\n              \"userIdentity\": {\n                \"autoUser\": {\n                  \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n                  \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n                },\n                \"username\": \"\"\n              },\n              \"waitForSuccess\": {{faker 'random.boolean'}}\n            },\n            \"targetDedicatedNodes\": {{faker 'random.number'}},\n            \"targetLowPriorityNodes\": {{faker 'random.number'}},\n            \"taskSchedulingPolicy\": {\n              \"nodeFillType\": \"{{oneOf (array 'spread' 'pack')}}\"\n            },\n            \"userAccounts\": [\n              {\n                \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n                \"linuxUserConfiguration\": {\n                  \"gid\": {{faker 'random.number'}},\n                  \"sshPrivateKey\": \"\",\n                  \"uid\": {{faker 'random.number'}}\n                },\n                \"name\": \"\",\n                \"password\": \"\"\n              }\n            ],\n            \"virtualMachineConfiguration\": {\n              \"containerConfiguration\": {\n                \"containerImageNames\": [\n                  \"\"\n                ],\n                \"containerRegistries\": [\n                  {\n                    \"password\": \"\",\n                    \"registryServer\": \"\",\n                    \"username\": \"\"\n                  }\n                ],\n                \"type\": \"{{oneOf (array 'dockerCompatible')}}\"\n              },\n              \"dataDisks\": [\n                {\n                  \"caching\": \"{{oneOf (array 'none' 'readonly' 'readwrite')}}\",\n                  \"diskSizeGB\": {{faker 'random.number'}},\n                  \"lun\": {{faker 'random.number'}},\n                  \"storageAccountType\": \"{{oneOf (array 'standard_lrs' 'premium_lrs')}}\"\n                }\n              ],\n              \"imageReference\": {\n                \"offer\": \"\",\n                \"publisher\": \"\",\n                \"sku\": \"\",\n                \"version\": \"\",\n                \"virtualMachineImageId\": \"\"\n              },\n              \"licenseType\": \"\",\n              \"nodeAgentSKUId\": \"\",\n              \"osDisk\": {\n                \"caching\": \"{{oneOf (array 'none' 'readonly' 'readwrite')}}\"\n              },\n              \"windowsConfiguration\": {\n                \"enableAutomaticUpdates\": {{faker 'random.boolean'}}\n              }\n            },\n            \"vmSize\": \"\"\n          },\n          \"poolLifetimeOption\": \"{{oneOf (array 'jobschedule' 'job')}}\"\n        },\n        \"poolId\": \"\"\n      },\n      \"previousState\": \"{{oneOf (array 'active' 'disabling' 'disabled' 'enabling' 'terminating' 'completed' 'deleting')}}\",\n      \"previousStateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"priority\": {{faker 'random.number'}},\n      \"state\": \"{{oneOf (array 'active' 'disabling' 'disabled' 'enabling' 'terminating' 'completed' 'deleting')}}\",\n      \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"stats\": {\n        \"kernelCPUTime\": \"\",\n        \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n        \"numFailedTasks\": {{faker 'random.number'}},\n        \"numSucceededTasks\": {{faker 'random.number'}},\n        \"numTaskRetries\": {{faker 'random.number'}},\n        \"readIOGiB\": {{faker 'random.float'}},\n        \"readIOps\": {{faker 'random.number'}},\n        \"startTime\": \"{{faker 'date.recent' 365}}\",\n        \"url\": \"\",\n        \"userCPUTime\": \"\",\n        \"waitTime\": \"\",\n        \"wallClockTime\": \"\",\n        \"writeIOGiB\": {{faker 'random.float'}},\n        \"writeIOps\": {{faker 'random.number'}}\n      },\n      \"url\": \"\",\n      \"usesTaskDependencies\": {{faker 'random.boolean'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the list of jobs.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "13dd43d6-323e-462d-9b8b-be622616174e",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d3071910-49d9-4410-a8ce-47a2ccc93968",
      "documentation": "Adds a job to the specified account.",
      "method": "post",
      "endpoint": "jobs",
      "responses": [
        {
          "uuid": "95e27d61-4a93-4630-9435-bab4eb450469",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5918f95c-a195-4a89-bea8-c350057662f8",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "517d9cd0-2806-4819-8050-65a1a818516b",
      "documentation": "Deletes a job.",
      "method": "delete",
      "endpoint": "jobs/:jobId",
      "responses": [
        {
          "uuid": "33be86d8-253d-49f0-9dd3-da13f8a8b2a9",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f4618ece-3cc9-41f0-9bbb-207d6a9f272f",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8395372f-8c4c-4b2b-a5f1-98b9518524cf",
      "documentation": "Gets information about the specified job.",
      "method": "get",
      "endpoint": "jobs/:jobId",
      "responses": [
        {
          "uuid": "d79ec5ad-99e3-4341-ad15-653a8df26564",
          "body": "{\n  \"commonEnvironmentSettings\": [\n    {\n      \"name\": \"\",\n      \"value\": \"\"\n    }\n  ],\n  \"constraints\": {\n    \"maxTaskRetryCount\": {{faker 'random.number'}},\n    \"maxWallClockTime\": \"\"\n  },\n  \"creationTime\": \"{{faker 'date.recent' 365}}\",\n  \"displayName\": \"\",\n  \"eTag\": \"\",\n  \"executionInfo\": {\n    \"endTime\": \"{{faker 'date.recent' 365}}\",\n    \"poolId\": \"\",\n    \"schedulingError\": {\n      \"category\": \"{{oneOf (array 'usererror' 'servererror')}}\",\n      \"code\": \"\",\n      \"details\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"message\": \"\"\n    },\n    \"startTime\": \"{{faker 'date.recent' 365}}\",\n    \"terminateReason\": \"\"\n  },\n  \"id\": \"\",\n  \"jobManagerTask\": {\n    \"allowLowPriorityNode\": {{faker 'random.boolean'}},\n    \"applicationPackageReferences\": [\n      {\n        \"applicationId\": \"\",\n        \"version\": \"\"\n      }\n    ],\n    \"authenticationTokenSettings\": {\n      \"access\": [\n        \"{{oneOf (array 'job')}}\"\n      ]\n    },\n    \"commandLine\": \"\",\n    \"constraints\": {\n      \"maxTaskRetryCount\": {{faker 'random.number'}},\n      \"maxWallClockTime\": \"\",\n      \"retentionTime\": \"\"\n    },\n    \"containerSettings\": {\n      \"containerRunOptions\": \"\",\n      \"imageName\": \"\",\n      \"registry\": {\n        \"password\": \"\",\n        \"registryServer\": \"\",\n        \"username\": \"\"\n      }\n    },\n    \"displayName\": \"\",\n    \"environmentSettings\": [\n      {\n        \"name\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"id\": \"\",\n    \"killJobOnCompletion\": {{faker 'random.boolean'}},\n    \"outputFiles\": [\n      {\n        \"destination\": {\n          \"container\": {\n            \"containerUrl\": \"\",\n            \"path\": \"\"\n          }\n        },\n        \"filePattern\": \"\",\n        \"uploadOptions\": {\n          \"uploadCondition\": \"{{oneOf (array 'tasksuccess' 'taskfailure' 'taskcompletion')}}\"\n        }\n      }\n    ],\n    \"resourceFiles\": [\n      {\n        \"blobSource\": \"\",\n        \"fileMode\": \"\",\n        \"filePath\": \"\"\n      }\n    ],\n    \"runExclusive\": {{faker 'random.boolean'}},\n    \"userIdentity\": {\n      \"autoUser\": {\n        \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n        \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n      },\n      \"username\": \"\"\n    }\n  },\n  \"jobPreparationTask\": {\n    \"commandLine\": \"\",\n    \"constraints\": {\n      \"maxTaskRetryCount\": {{faker 'random.number'}},\n      \"maxWallClockTime\": \"\",\n      \"retentionTime\": \"\"\n    },\n    \"containerSettings\": {\n      \"containerRunOptions\": \"\",\n      \"imageName\": \"\",\n      \"registry\": {\n        \"password\": \"\",\n        \"registryServer\": \"\",\n        \"username\": \"\"\n      }\n    },\n    \"environmentSettings\": [\n      {\n        \"name\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"id\": \"\",\n    \"rerunOnNodeRebootAfterSuccess\": {{faker 'random.boolean'}},\n    \"resourceFiles\": [\n      {\n        \"blobSource\": \"\",\n        \"fileMode\": \"\",\n        \"filePath\": \"\"\n      }\n    ],\n    \"userIdentity\": {\n      \"autoUser\": {\n        \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n        \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n      },\n      \"username\": \"\"\n    },\n    \"waitForSuccess\": {{faker 'random.boolean'}}\n  },\n  \"jobReleaseTask\": {\n    \"commandLine\": \"\",\n    \"containerSettings\": {\n      \"containerRunOptions\": \"\",\n      \"imageName\": \"\",\n      \"registry\": {\n        \"password\": \"\",\n        \"registryServer\": \"\",\n        \"username\": \"\"\n      }\n    },\n    \"environmentSettings\": [\n      {\n        \"name\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"id\": \"\",\n    \"maxWallClockTime\": \"\",\n    \"resourceFiles\": [\n      {\n        \"blobSource\": \"\",\n        \"fileMode\": \"\",\n        \"filePath\": \"\"\n      }\n    ],\n    \"retentionTime\": \"\",\n    \"userIdentity\": {\n      \"autoUser\": {\n        \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n        \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n      },\n      \"username\": \"\"\n    }\n  },\n  \"lastModified\": \"{{faker 'date.recent' 365}}\",\n  \"metadata\": [\n    {\n      \"name\": \"\",\n      \"value\": \"\"\n    }\n  ],\n  \"onAllTasksComplete\": \"{{oneOf (array 'noaction' 'terminatejob')}}\",\n  \"onTaskFailure\": \"{{oneOf (array 'noaction' 'performexitoptionsjobaction')}}\",\n  \"poolInfo\": {\n    \"autoPoolSpecification\": {\n      \"autoPoolIdPrefix\": \"\",\n      \"keepAlive\": {{faker 'random.boolean'}},\n      \"pool\": {\n        \"applicationLicenses\": [\n          \"\"\n        ],\n        \"applicationPackageReferences\": [\n          {\n            \"applicationId\": \"\",\n            \"version\": \"\"\n          }\n        ],\n        \"autoScaleEvaluationInterval\": \"\",\n        \"autoScaleFormula\": \"\",\n        \"certificateReferences\": [\n          {\n            \"storeLocation\": \"{{oneOf (array 'currentuser' 'localmachine')}}\",\n            \"storeName\": \"\",\n            \"thumbprint\": \"\",\n            \"thumbprintAlgorithm\": \"\",\n            \"visibility\": [\n              \"{{oneOf (array 'starttask' 'task' 'remoteuser')}}\"\n            ]\n          }\n        ],\n        \"cloudServiceConfiguration\": {\n          \"currentOSVersion\": \"\",\n          \"osFamily\": \"\",\n          \"targetOSVersion\": \"\"\n        },\n        \"displayName\": \"\",\n        \"enableAutoScale\": {{faker 'random.boolean'}},\n        \"enableInterNodeCommunication\": {{faker 'random.boolean'}},\n        \"maxTasksPerNode\": {{faker 'random.number'}},\n        \"metadata\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"networkConfiguration\": {\n          \"endpointConfiguration\": {\n            \"inboundNATPools\": [\n              {\n                \"backendPort\": {{faker 'random.number'}},\n                \"frontendPortRangeEnd\": {{faker 'random.number'}},\n                \"frontendPortRangeStart\": {{faker 'random.number'}},\n                \"name\": \"\",\n                \"networkSecurityGroupRules\": [\n                  {\n                    \"access\": \"{{oneOf (array 'allow' 'deny')}}\",\n                    \"priority\": {{faker 'random.number'}},\n                    \"sourceAddressPrefix\": \"\"\n                  }\n                ],\n                \"protocol\": \"{{oneOf (array 'tcp' 'udp')}}\"\n              }\n            ]\n          },\n          \"subnetId\": \"\"\n        },\n        \"resizeTimeout\": \"\",\n        \"startTask\": {\n          \"commandLine\": \"\",\n          \"containerSettings\": {\n            \"containerRunOptions\": \"\",\n            \"imageName\": \"\",\n            \"registry\": {\n              \"password\": \"\",\n              \"registryServer\": \"\",\n              \"username\": \"\"\n            }\n          },\n          \"environmentSettings\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"maxTaskRetryCount\": {{faker 'random.number'}},\n          \"resourceFiles\": [\n            {\n              \"blobSource\": \"\",\n              \"fileMode\": \"\",\n              \"filePath\": \"\"\n            }\n          ],\n          \"userIdentity\": {\n            \"autoUser\": {\n              \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n              \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n            },\n            \"username\": \"\"\n          },\n          \"waitForSuccess\": {{faker 'random.boolean'}}\n        },\n        \"targetDedicatedNodes\": {{faker 'random.number'}},\n        \"targetLowPriorityNodes\": {{faker 'random.number'}},\n        \"taskSchedulingPolicy\": {\n          \"nodeFillType\": \"{{oneOf (array 'spread' 'pack')}}\"\n        },\n        \"userAccounts\": [\n          {\n            \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n            \"linuxUserConfiguration\": {\n              \"gid\": {{faker 'random.number'}},\n              \"sshPrivateKey\": \"\",\n              \"uid\": {{faker 'random.number'}}\n            },\n            \"name\": \"\",\n            \"password\": \"\"\n          }\n        ],\n        \"virtualMachineConfiguration\": {\n          \"containerConfiguration\": {\n            \"containerImageNames\": [\n              \"\"\n            ],\n            \"containerRegistries\": [\n              {\n                \"password\": \"\",\n                \"registryServer\": \"\",\n                \"username\": \"\"\n              }\n            ],\n            \"type\": \"{{oneOf (array 'dockerCompatible')}}\"\n          },\n          \"dataDisks\": [\n            {\n              \"caching\": \"{{oneOf (array 'none' 'readonly' 'readwrite')}}\",\n              \"diskSizeGB\": {{faker 'random.number'}},\n              \"lun\": {{faker 'random.number'}},\n              \"storageAccountType\": \"{{oneOf (array 'standard_lrs' 'premium_lrs')}}\"\n            }\n          ],\n          \"imageReference\": {\n            \"offer\": \"\",\n            \"publisher\": \"\",\n            \"sku\": \"\",\n            \"version\": \"\",\n            \"virtualMachineImageId\": \"\"\n          },\n          \"licenseType\": \"\",\n          \"nodeAgentSKUId\": \"\",\n          \"osDisk\": {\n            \"caching\": \"{{oneOf (array 'none' 'readonly' 'readwrite')}}\"\n          },\n          \"windowsConfiguration\": {\n            \"enableAutomaticUpdates\": {{faker 'random.boolean'}}\n          }\n        },\n        \"vmSize\": \"\"\n      },\n      \"poolLifetimeOption\": \"{{oneOf (array 'jobschedule' 'job')}}\"\n    },\n    \"poolId\": \"\"\n  },\n  \"previousState\": \"{{oneOf (array 'active' 'disabling' 'disabled' 'enabling' 'terminating' 'completed' 'deleting')}}\",\n  \"previousStateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n  \"priority\": {{faker 'random.number'}},\n  \"state\": \"{{oneOf (array 'active' 'disabling' 'disabled' 'enabling' 'terminating' 'completed' 'deleting')}}\",\n  \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n  \"stats\": {\n    \"kernelCPUTime\": \"\",\n    \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n    \"numFailedTasks\": {{faker 'random.number'}},\n    \"numSucceededTasks\": {{faker 'random.number'}},\n    \"numTaskRetries\": {{faker 'random.number'}},\n    \"readIOGiB\": {{faker 'random.float'}},\n    \"readIOps\": {{faker 'random.number'}},\n    \"startTime\": \"{{faker 'date.recent' 365}}\",\n    \"url\": \"\",\n    \"userCPUTime\": \"\",\n    \"waitTime\": \"\",\n    \"wallClockTime\": \"\",\n    \"writeIOGiB\": {{faker 'random.float'}},\n    \"writeIOps\": {{faker 'random.number'}}\n  },\n  \"url\": \"\",\n  \"usesTaskDependencies\": {{faker 'random.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the job.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3ff80757-d5f5-43ee-8bc2-fe59f4d9c59a",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f7ac6ff8-f619-4fd7-9687-457952dd1119",
      "documentation": "Updates the properties of the specified job.",
      "method": "patch",
      "endpoint": "jobs/:jobId",
      "responses": [
        {
          "uuid": "3f74fa3e-1d69-4594-81a4-358ed90b6853",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "98c608eb-45bd-4d65-a28e-54716df97d2f",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a1a8afeb-99d2-4f3e-8c02-8ded8a19446e",
      "documentation": "Updates the properties of the specified job.",
      "method": "put",
      "endpoint": "jobs/:jobId",
      "responses": [
        {
          "uuid": "c8c36c3e-c8d6-4395-9b81-3243e00db14f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e1017380-25be-408e-bec6-396cfdd99066",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3267ccf1-d850-43be-9f24-994c897dab15",
      "documentation": "Adds a collection of tasks to the specified job.",
      "method": "post",
      "endpoint": "jobs/:jobId/addtaskcollection",
      "responses": [
        {
          "uuid": "1e2769d3-ac14-4eeb-9383-0f0f9941afd4",
          "body": "{\n  \"value\": [\n    {\n      \"eTag\": \"\",\n      \"error\": {\n        \"code\": \"\",\n        \"message\": {\n          \"lang\": \"\",\n          \"value\": \"\"\n        },\n        \"values\": [\n          {\n            \"key\": \"\",\n            \"value\": \"\"\n          }\n        ]\n      },\n      \"lastModified\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"status\": \"{{oneOf (array 'success' 'clienterror' 'servererror')}}\",\n      \"taskId\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the results of the add task collection operation.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "471d835f-b517-432b-b11e-e95733afe4aa",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Unexpected error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "34b8843f-ab33-4eae-ac1f-7cc094808e40",
      "documentation": "Disables the specified job, preventing new tasks from running.",
      "method": "post",
      "endpoint": "jobs/:jobId/disable",
      "responses": [
        {
          "uuid": "0c23e450-d4bc-444a-a954-d6b67842aee6",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "25c206a5-6739-476a-9a21-a794f08266a2",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d9ed9e43-7d25-4fe7-af1d-1667773d6502",
      "documentation": "Enables the specified job, allowing new tasks to run.",
      "method": "post",
      "endpoint": "jobs/:jobId/enable",
      "responses": [
        {
          "uuid": "a982dc87-b201-422e-b405-43f48bcc497d",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "63766658-e3b6-49a2-b91f-ea58a13f2cad",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6fa1af91-4b60-448a-bcfd-c3b64a38ea28",
      "documentation": "Lists the execution status of the Job Preparation and Job Release task for the specified job across the compute nodes where the job has run.",
      "method": "get",
      "endpoint": "jobs/:jobId/jobpreparationandreleasetaskstatus",
      "responses": [
        {
          "uuid": "a6783906-a8af-4a73-922c-c9752ed07764",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"jobPreparationTaskExecutionInfo\": {\n        \"containerInfo\": {\n          \"containerId\": \"\",\n          \"error\": \"\",\n          \"state\": \"\"\n        },\n        \"endTime\": \"{{faker 'date.recent' 365}}\",\n        \"exitCode\": {{faker 'random.number'}},\n        \"failureInfo\": {\n          \"category\": \"{{oneOf (array 'usererror' 'servererror')}}\",\n          \"code\": \"\",\n          \"details\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"message\": \"\"\n        },\n        \"lastRetryTime\": \"{{faker 'date.recent' 365}}\",\n        \"result\": \"{{oneOf (array 'success' 'failure')}}\",\n        \"retryCount\": {{faker 'random.number'}},\n        \"startTime\": \"{{faker 'date.recent' 365}}\",\n        \"state\": \"{{oneOf (array 'running' 'completed')}}\",\n        \"taskRootDirectory\": \"\",\n        \"taskRootDirectoryUrl\": \"\"\n      },\n      \"jobReleaseTaskExecutionInfo\": {\n        \"containerInfo\": {\n          \"containerId\": \"\",\n          \"error\": \"\",\n          \"state\": \"\"\n        },\n        \"endTime\": \"{{faker 'date.recent' 365}}\",\n        \"exitCode\": {{faker 'random.number'}},\n        \"failureInfo\": {\n          \"category\": \"{{oneOf (array 'usererror' 'servererror')}}\",\n          \"code\": \"\",\n          \"details\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"message\": \"\"\n        },\n        \"result\": \"{{oneOf (array 'success' 'failure')}}\",\n        \"startTime\": \"{{faker 'date.recent' 365}}\",\n        \"state\": \"{{oneOf (array 'running' 'completed')}}\",\n        \"taskRootDirectory\": \"\",\n        \"taskRootDirectoryUrl\": \"\"\n      },\n      \"nodeId\": \"\",\n      \"nodeUrl\": \"\",\n      \"poolId\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing a list of Job Preparation and Job Release task statuses.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b5f40ff5-511d-4d64-85a0-f4460acce30b",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service. If this API is invoked on a job which has no Job Preparation or Job Release task, the Batch service returns HTTP status code 409.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b5c2f49e-f3ee-435b-acb7-9348ca091d98",
      "documentation": "Gets the task counts for the specified job.",
      "method": "get",
      "endpoint": "jobs/:jobId/taskcounts",
      "responses": [
        {
          "uuid": "5d636eb3-0021-4bcc-848c-8b51de426985",
          "body": "{\n  \"active\": {{faker 'random.number'}},\n  \"completed\": {{faker 'random.number'}},\n  \"failed\": {{faker 'random.number'}},\n  \"running\": {{faker 'random.number'}},\n  \"succeeded\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the task counts for the specified job.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "66819b0f-3c5c-4193-ab47-d4c1782aab21",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "995f5d81-5d70-4e07-a6a5-309580895079",
      "documentation": "Lists all of the tasks that are associated with the specified job.",
      "method": "get",
      "endpoint": "jobs/:jobId/tasks",
      "responses": [
        {
          "uuid": "2e56602d-163b-43a3-883b-46c9a5b20e16",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"affinityInfo\": {\n        \"affinityId\": \"\"\n      },\n      \"applicationPackageReferences\": [\n        {\n          \"applicationId\": \"\",\n          \"version\": \"\"\n        }\n      ],\n      \"authenticationTokenSettings\": {\n        \"access\": [\n          \"{{oneOf (array 'job')}}\"\n        ]\n      },\n      \"commandLine\": \"\",\n      \"constraints\": {\n        \"maxTaskRetryCount\": {{faker 'random.number'}},\n        \"maxWallClockTime\": \"\",\n        \"retentionTime\": \"\"\n      },\n      \"containerSettings\": {\n        \"containerRunOptions\": \"\",\n        \"imageName\": \"\",\n        \"registry\": {\n          \"password\": \"\",\n          \"registryServer\": \"\",\n          \"username\": \"\"\n        }\n      },\n      \"creationTime\": \"{{faker 'date.recent' 365}}\",\n      \"dependsOn\": {\n        \"taskIdRanges\": [\n          {\n            \"end\": {{faker 'random.number'}},\n            \"start\": {{faker 'random.number'}}\n          }\n        ],\n        \"taskIds\": [\n          \"\"\n        ]\n      },\n      \"displayName\": \"\",\n      \"eTag\": \"\",\n      \"environmentSettings\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"executionInfo\": {\n        \"containerInfo\": {\n          \"containerId\": \"\",\n          \"error\": \"\",\n          \"state\": \"\"\n        },\n        \"endTime\": \"{{faker 'date.recent' 365}}\",\n        \"exitCode\": {{faker 'random.number'}},\n        \"failureInfo\": {\n          \"category\": \"{{oneOf (array 'usererror' 'servererror')}}\",\n          \"code\": \"\",\n          \"details\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"message\": \"\"\n        },\n        \"lastRequeueTime\": \"{{faker 'date.recent' 365}}\",\n        \"lastRetryTime\": \"{{faker 'date.recent' 365}}\",\n        \"requeueCount\": {{faker 'random.number'}},\n        \"result\": \"{{oneOf (array 'success' 'failure')}}\",\n        \"retryCount\": {{faker 'random.number'}},\n        \"startTime\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"exitConditions\": {\n        \"default\": {\n          \"dependencyAction\": \"{{oneOf (array 'satisfy' 'block')}}\",\n          \"jobAction\": \"{{oneOf (array 'none' 'disable' 'terminate')}}\"\n        },\n        \"exitCodeRanges\": [\n          {\n            \"end\": {{faker 'random.number'}},\n            \"exitOptions\": {\n              \"dependencyAction\": \"{{oneOf (array 'satisfy' 'block')}}\",\n              \"jobAction\": \"{{oneOf (array 'none' 'disable' 'terminate')}}\"\n            },\n            \"start\": {{faker 'random.number'}}\n          }\n        ],\n        \"exitCodes\": [\n          {\n            \"code\": {{faker 'random.number'}},\n            \"exitOptions\": {\n              \"dependencyAction\": \"{{oneOf (array 'satisfy' 'block')}}\",\n              \"jobAction\": \"{{oneOf (array 'none' 'disable' 'terminate')}}\"\n            }\n          }\n        ],\n        \"fileUploadError\": {\n          \"dependencyAction\": \"{{oneOf (array 'satisfy' 'block')}}\",\n          \"jobAction\": \"{{oneOf (array 'none' 'disable' 'terminate')}}\"\n        },\n        \"preProcessingError\": {\n          \"dependencyAction\": \"{{oneOf (array 'satisfy' 'block')}}\",\n          \"jobAction\": \"{{oneOf (array 'none' 'disable' 'terminate')}}\"\n        }\n      },\n      \"id\": \"\",\n      \"lastModified\": \"{{faker 'date.recent' 365}}\",\n      \"multiInstanceSettings\": {\n        \"commonResourceFiles\": [\n          {\n            \"blobSource\": \"\",\n            \"fileMode\": \"\",\n            \"filePath\": \"\"\n          }\n        ],\n        \"coordinationCommandLine\": \"\",\n        \"numberOfInstances\": {{faker 'random.number'}}\n      },\n      \"nodeInfo\": {\n        \"affinityId\": \"\",\n        \"nodeId\": \"\",\n        \"nodeUrl\": \"\",\n        \"poolId\": \"\",\n        \"taskRootDirectory\": \"\",\n        \"taskRootDirectoryUrl\": \"\"\n      },\n      \"outputFiles\": [\n        {\n          \"destination\": {\n            \"container\": {\n              \"containerUrl\": \"\",\n              \"path\": \"\"\n            }\n          },\n          \"filePattern\": \"\",\n          \"uploadOptions\": {\n            \"uploadCondition\": \"{{oneOf (array 'tasksuccess' 'taskfailure' 'taskcompletion')}}\"\n          }\n        }\n      ],\n      \"previousState\": \"{{oneOf (array 'active' 'preparing' 'running' 'completed')}}\",\n      \"previousStateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"resourceFiles\": [\n        {\n          \"blobSource\": \"\",\n          \"fileMode\": \"\",\n          \"filePath\": \"\"\n        }\n      ],\n      \"state\": \"{{oneOf (array 'active' 'preparing' 'running' 'completed')}}\",\n      \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"stats\": {\n        \"kernelCPUTime\": \"\",\n        \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n        \"readIOGiB\": {{faker 'random.float'}},\n        \"readIOps\": {{faker 'random.number'}},\n        \"startTime\": \"{{faker 'date.recent' 365}}\",\n        \"url\": \"\",\n        \"userCPUTime\": \"\",\n        \"waitTime\": \"\",\n        \"wallClockTime\": \"\",\n        \"writeIOGiB\": {{faker 'random.float'}},\n        \"writeIOps\": {{faker 'random.number'}}\n      },\n      \"url\": \"\",\n      \"userIdentity\": {\n        \"autoUser\": {\n          \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n          \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n        },\n        \"username\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the list of tasks.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1363fd52-658d-4ce7-836c-6572b0b04167",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e2a0764b-301b-42bf-b33d-4a5294bfd8ec",
      "documentation": "Adds a task to the specified job.",
      "method": "post",
      "endpoint": "jobs/:jobId/tasks",
      "responses": [
        {
          "uuid": "c6bde476-2c30-4101-b4e4-c9b719e50ea0",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "56fdb0c0-8cd6-4d50-b633-414b6abad242",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ab3d97dd-5967-49b4-970d-ddefe35fca11",
      "documentation": "Deletes a task from the specified job.",
      "method": "delete",
      "endpoint": "jobs/:jobId/tasks/:taskId",
      "responses": [
        {
          "uuid": "979fbcfb-a8a2-4083-8f62-26512d7abb18",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dd48b77a-18cb-4476-9a59-c75ed9c449dd",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "46047fad-44b9-4067-89fe-fbad63e307d4",
      "documentation": "Gets information about the specified task.",
      "method": "get",
      "endpoint": "jobs/:jobId/tasks/:taskId",
      "responses": [
        {
          "uuid": "129cdd73-123f-4fca-87af-56c6115465f6",
          "body": "{\n  \"affinityInfo\": {\n    \"affinityId\": \"\"\n  },\n  \"applicationPackageReferences\": [\n    {\n      \"applicationId\": \"\",\n      \"version\": \"\"\n    }\n  ],\n  \"authenticationTokenSettings\": {\n    \"access\": [\n      \"{{oneOf (array 'job')}}\"\n    ]\n  },\n  \"commandLine\": \"\",\n  \"constraints\": {\n    \"maxTaskRetryCount\": {{faker 'random.number'}},\n    \"maxWallClockTime\": \"\",\n    \"retentionTime\": \"\"\n  },\n  \"containerSettings\": {\n    \"containerRunOptions\": \"\",\n    \"imageName\": \"\",\n    \"registry\": {\n      \"password\": \"\",\n      \"registryServer\": \"\",\n      \"username\": \"\"\n    }\n  },\n  \"creationTime\": \"{{faker 'date.recent' 365}}\",\n  \"dependsOn\": {\n    \"taskIdRanges\": [\n      {\n        \"end\": {{faker 'random.number'}},\n        \"start\": {{faker 'random.number'}}\n      }\n    ],\n    \"taskIds\": [\n      \"\"\n    ]\n  },\n  \"displayName\": \"\",\n  \"eTag\": \"\",\n  \"environmentSettings\": [\n    {\n      \"name\": \"\",\n      \"value\": \"\"\n    }\n  ],\n  \"executionInfo\": {\n    \"containerInfo\": {\n      \"containerId\": \"\",\n      \"error\": \"\",\n      \"state\": \"\"\n    },\n    \"endTime\": \"{{faker 'date.recent' 365}}\",\n    \"exitCode\": {{faker 'random.number'}},\n    \"failureInfo\": {\n      \"category\": \"{{oneOf (array 'usererror' 'servererror')}}\",\n      \"code\": \"\",\n      \"details\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"message\": \"\"\n    },\n    \"lastRequeueTime\": \"{{faker 'date.recent' 365}}\",\n    \"lastRetryTime\": \"{{faker 'date.recent' 365}}\",\n    \"requeueCount\": {{faker 'random.number'}},\n    \"result\": \"{{oneOf (array 'success' 'failure')}}\",\n    \"retryCount\": {{faker 'random.number'}},\n    \"startTime\": \"{{faker 'date.recent' 365}}\"\n  },\n  \"exitConditions\": {\n    \"default\": {\n      \"dependencyAction\": \"{{oneOf (array 'satisfy' 'block')}}\",\n      \"jobAction\": \"{{oneOf (array 'none' 'disable' 'terminate')}}\"\n    },\n    \"exitCodeRanges\": [\n      {\n        \"end\": {{faker 'random.number'}},\n        \"exitOptions\": {\n          \"dependencyAction\": \"{{oneOf (array 'satisfy' 'block')}}\",\n          \"jobAction\": \"{{oneOf (array 'none' 'disable' 'terminate')}}\"\n        },\n        \"start\": {{faker 'random.number'}}\n      }\n    ],\n    \"exitCodes\": [\n      {\n        \"code\": {{faker 'random.number'}},\n        \"exitOptions\": {\n          \"dependencyAction\": \"{{oneOf (array 'satisfy' 'block')}}\",\n          \"jobAction\": \"{{oneOf (array 'none' 'disable' 'terminate')}}\"\n        }\n      }\n    ],\n    \"fileUploadError\": {\n      \"dependencyAction\": \"{{oneOf (array 'satisfy' 'block')}}\",\n      \"jobAction\": \"{{oneOf (array 'none' 'disable' 'terminate')}}\"\n    },\n    \"preProcessingError\": {\n      \"dependencyAction\": \"{{oneOf (array 'satisfy' 'block')}}\",\n      \"jobAction\": \"{{oneOf (array 'none' 'disable' 'terminate')}}\"\n    }\n  },\n  \"id\": \"\",\n  \"lastModified\": \"{{faker 'date.recent' 365}}\",\n  \"multiInstanceSettings\": {\n    \"commonResourceFiles\": [\n      {\n        \"blobSource\": \"\",\n        \"fileMode\": \"\",\n        \"filePath\": \"\"\n      }\n    ],\n    \"coordinationCommandLine\": \"\",\n    \"numberOfInstances\": {{faker 'random.number'}}\n  },\n  \"nodeInfo\": {\n    \"affinityId\": \"\",\n    \"nodeId\": \"\",\n    \"nodeUrl\": \"\",\n    \"poolId\": \"\",\n    \"taskRootDirectory\": \"\",\n    \"taskRootDirectoryUrl\": \"\"\n  },\n  \"outputFiles\": [\n    {\n      \"destination\": {\n        \"container\": {\n          \"containerUrl\": \"\",\n          \"path\": \"\"\n        }\n      },\n      \"filePattern\": \"\",\n      \"uploadOptions\": {\n        \"uploadCondition\": \"{{oneOf (array 'tasksuccess' 'taskfailure' 'taskcompletion')}}\"\n      }\n    }\n  ],\n  \"previousState\": \"{{oneOf (array 'active' 'preparing' 'running' 'completed')}}\",\n  \"previousStateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n  \"resourceFiles\": [\n    {\n      \"blobSource\": \"\",\n      \"fileMode\": \"\",\n      \"filePath\": \"\"\n    }\n  ],\n  \"state\": \"{{oneOf (array 'active' 'preparing' 'running' 'completed')}}\",\n  \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n  \"stats\": {\n    \"kernelCPUTime\": \"\",\n    \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n    \"readIOGiB\": {{faker 'random.float'}},\n    \"readIOps\": {{faker 'random.number'}},\n    \"startTime\": \"{{faker 'date.recent' 365}}\",\n    \"url\": \"\",\n    \"userCPUTime\": \"\",\n    \"waitTime\": \"\",\n    \"wallClockTime\": \"\",\n    \"writeIOGiB\": {{faker 'random.float'}},\n    \"writeIOps\": {{faker 'random.number'}}\n  },\n  \"url\": \"\",\n  \"userIdentity\": {\n    \"autoUser\": {\n      \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n      \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n    },\n    \"username\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the task.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e27ee9be-51c0-48d0-a552-93682ab14245",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0aa82860-12d4-419c-92ae-75259034b409",
      "documentation": "Updates the properties of the specified task.",
      "method": "put",
      "endpoint": "jobs/:jobId/tasks/:taskId",
      "responses": [
        {
          "uuid": "6ae2ba4d-a774-41b6-9236-a298ed1a940a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "db60b9f3-f2ea-4491-898d-d58014639d73",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b18bfa53-20d1-467a-914c-1aefeb5265a9",
      "documentation": "Lists the files in a task's directory on its compute node.",
      "method": "get",
      "endpoint": "jobs/:jobId/tasks/:taskId/files",
      "responses": [
        {
          "uuid": "4879ff10-51f4-4045-9d62-3e14735e826b",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"isDirectory\": {{faker 'random.boolean'}},\n      \"name\": \"\",\n      \"properties\": {\n        \"contentLength\": {{faker 'random.number'}},\n        \"contentType\": \"\",\n        \"creationTime\": \"{{faker 'date.recent' 365}}\",\n        \"fileMode\": \"\",\n        \"lastModified\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"url\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the list of files.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b861d63d-498f-4cb8-8653-8b7ff42b4b22",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b553df9b-9c1c-4d55-b26f-8b1457173964",
      "documentation": "Deletes the specified task file from the compute node where the task ran.",
      "method": "delete",
      "endpoint": "jobs/:jobId/tasks/:taskId/files/:filePath",
      "responses": [
        {
          "uuid": "8ae40272-22ce-4863-95ed-6dc58ac492e2",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d6cf9bd1-9e4f-40fb-b8ff-7b0a748a3462",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0d64f2d1-d80c-4494-8613-789cf7486a9c",
      "documentation": "Returns the content of the specified task file.",
      "method": "get",
      "endpoint": "jobs/:jobId/tasks/:taskId/files/:filePath",
      "responses": [
        {
          "uuid": "110ba2cb-5205-40cb-8276-722c4ad7e07a",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the file content.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Content-Length",
              "value": ""
            },
            {
              "key": "Content-Type",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "ocp-batch-file-isdirectory",
              "value": ""
            },
            {
              "key": "ocp-batch-file-mode",
              "value": ""
            },
            {
              "key": "ocp-batch-file-url",
              "value": ""
            },
            {
              "key": "ocp-creation-time",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "11493450-b1c5-4b39-a2d9-847126651010",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3d8043f5-4032-4c61-8465-711e2b34e8b1",
      "documentation": "Gets the properties of the specified task file.",
      "method": "head",
      "endpoint": "jobs/:jobId/tasks/:taskId/files/:filePath",
      "responses": [
        {
          "uuid": "8f2886b9-6b66-4f31-9a96-59ec3f0ef7dd",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the file properties.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Content-Length",
              "value": ""
            },
            {
              "key": "Content-Type",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "ocp-batch-file-isdirectory",
              "value": ""
            },
            {
              "key": "ocp-batch-file-mode",
              "value": ""
            },
            {
              "key": "ocp-batch-file-url",
              "value": ""
            },
            {
              "key": "ocp-creation-time",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0e33d2ef-76b0-4619-b6ec-17bd90d0b6b4",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5d856e58-7abb-4a02-8f3e-3df2f0a82f9c",
      "documentation": "Reactivates a task, allowing it to run again even if its retry count has been exhausted.",
      "method": "post",
      "endpoint": "jobs/:jobId/tasks/:taskId/reactivate",
      "responses": [
        {
          "uuid": "54f3f108-7e6f-4c7f-a924-68977ed84774",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "78004413-f052-47bd-89ef-e05cbe459e58",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c4d94146-9543-46e6-95e7-a9e09a429948",
      "documentation": "Lists all of the subtasks that are associated with the specified multi-instance task.",
      "method": "get",
      "endpoint": "jobs/:jobId/tasks/:taskId/subtasksinfo",
      "responses": [
        {
          "uuid": "5ae15711-ccaa-4416-952c-721f2e51083c",
          "body": "{\n  \"value\": [\n    {\n      \"containerInfo\": {\n        \"containerId\": \"\",\n        \"error\": \"\",\n        \"state\": \"\"\n      },\n      \"endTime\": \"{{faker 'date.recent' 365}}\",\n      \"exitCode\": {{faker 'random.number'}},\n      \"failureInfo\": {\n        \"category\": \"{{oneOf (array 'usererror' 'servererror')}}\",\n        \"code\": \"\",\n        \"details\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"message\": \"\"\n      },\n      \"id\": {{faker 'random.number'}},\n      \"nodeInfo\": {\n        \"affinityId\": \"\",\n        \"nodeId\": \"\",\n        \"nodeUrl\": \"\",\n        \"poolId\": \"\",\n        \"taskRootDirectory\": \"\",\n        \"taskRootDirectoryUrl\": \"\"\n      },\n      \"previousState\": \"{{oneOf (array 'preparing' 'running' 'completed')}}\",\n      \"previousStateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"result\": \"{{oneOf (array 'success' 'failure')}}\",\n      \"startTime\": \"{{faker 'date.recent' 365}}\",\n      \"state\": \"{{oneOf (array 'preparing' 'running' 'completed')}}\",\n      \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the list of subtasks.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ccda0940-4ad5-4b62-a688-536ccee45332",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "84f5fbbc-91f2-445a-ae81-191b1d4dfb84",
      "documentation": "Terminates the specified task.",
      "method": "post",
      "endpoint": "jobs/:jobId/tasks/:taskId/terminate",
      "responses": [
        {
          "uuid": "a8dc21cd-701d-4ded-a618-8c5d71fdfbe0",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "47e35a32-06e2-4601-9680-45181ac3088f",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a882d889-b6a6-4fda-85af-0ba0cc5f3b3a",
      "documentation": "Terminates the specified job, marking it as completed.",
      "method": "post",
      "endpoint": "jobs/:jobId/terminate",
      "responses": [
        {
          "uuid": "7eaaa7aa-94cb-4653-a7f1-6678fcc554d6",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5238eccd-1c9a-4820-b869-19d480e88ca9",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fd43c244-ed19-442d-adff-491cb5db04e8",
      "documentation": "Lists all of the job schedules in the specified account.",
      "method": "get",
      "endpoint": "jobschedules",
      "responses": [
        {
          "uuid": "262ee93a-b015-413a-8b03-2e2547160818",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"creationTime\": \"{{faker 'date.recent' 365}}\",\n      \"displayName\": \"\",\n      \"eTag\": \"\",\n      \"executionInfo\": {\n        \"endTime\": \"{{faker 'date.recent' 365}}\",\n        \"nextRunTime\": \"{{faker 'date.recent' 365}}\",\n        \"recentJob\": {\n          \"id\": \"\",\n          \"url\": \"\"\n        }\n      },\n      \"id\": \"\",\n      \"jobSpecification\": {\n        \"commonEnvironmentSettings\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"constraints\": {\n          \"maxTaskRetryCount\": {{faker 'random.number'}},\n          \"maxWallClockTime\": \"\"\n        },\n        \"displayName\": \"\",\n        \"jobManagerTask\": {\n          \"allowLowPriorityNode\": {{faker 'random.boolean'}},\n          \"applicationPackageReferences\": [\n            {\n              \"applicationId\": \"\",\n              \"version\": \"\"\n            }\n          ],\n          \"authenticationTokenSettings\": {\n            \"access\": [\n              \"{{oneOf (array 'job')}}\"\n            ]\n          },\n          \"commandLine\": \"\",\n          \"constraints\": {\n            \"maxTaskRetryCount\": {{faker 'random.number'}},\n            \"maxWallClockTime\": \"\",\n            \"retentionTime\": \"\"\n          },\n          \"containerSettings\": {\n            \"containerRunOptions\": \"\",\n            \"imageName\": \"\",\n            \"registry\": {\n              \"password\": \"\",\n              \"registryServer\": \"\",\n              \"username\": \"\"\n            }\n          },\n          \"displayName\": \"\",\n          \"environmentSettings\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"id\": \"\",\n          \"killJobOnCompletion\": {{faker 'random.boolean'}},\n          \"outputFiles\": [\n            {\n              \"destination\": {\n                \"container\": {\n                  \"containerUrl\": \"\",\n                  \"path\": \"\"\n                }\n              },\n              \"filePattern\": \"\",\n              \"uploadOptions\": {\n                \"uploadCondition\": \"{{oneOf (array 'tasksuccess' 'taskfailure' 'taskcompletion')}}\"\n              }\n            }\n          ],\n          \"resourceFiles\": [\n            {\n              \"blobSource\": \"\",\n              \"fileMode\": \"\",\n              \"filePath\": \"\"\n            }\n          ],\n          \"runExclusive\": {{faker 'random.boolean'}},\n          \"userIdentity\": {\n            \"autoUser\": {\n              \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n              \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n            },\n            \"username\": \"\"\n          }\n        },\n        \"jobPreparationTask\": {\n          \"commandLine\": \"\",\n          \"constraints\": {\n            \"maxTaskRetryCount\": {{faker 'random.number'}},\n            \"maxWallClockTime\": \"\",\n            \"retentionTime\": \"\"\n          },\n          \"containerSettings\": {\n            \"containerRunOptions\": \"\",\n            \"imageName\": \"\",\n            \"registry\": {\n              \"password\": \"\",\n              \"registryServer\": \"\",\n              \"username\": \"\"\n            }\n          },\n          \"environmentSettings\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"id\": \"\",\n          \"rerunOnNodeRebootAfterSuccess\": {{faker 'random.boolean'}},\n          \"resourceFiles\": [\n            {\n              \"blobSource\": \"\",\n              \"fileMode\": \"\",\n              \"filePath\": \"\"\n            }\n          ],\n          \"userIdentity\": {\n            \"autoUser\": {\n              \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n              \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n            },\n            \"username\": \"\"\n          },\n          \"waitForSuccess\": {{faker 'random.boolean'}}\n        },\n        \"jobReleaseTask\": {\n          \"commandLine\": \"\",\n          \"containerSettings\": {\n            \"containerRunOptions\": \"\",\n            \"imageName\": \"\",\n            \"registry\": {\n              \"password\": \"\",\n              \"registryServer\": \"\",\n              \"username\": \"\"\n            }\n          },\n          \"environmentSettings\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"id\": \"\",\n          \"maxWallClockTime\": \"\",\n          \"resourceFiles\": [\n            {\n              \"blobSource\": \"\",\n              \"fileMode\": \"\",\n              \"filePath\": \"\"\n            }\n          ],\n          \"retentionTime\": \"\",\n          \"userIdentity\": {\n            \"autoUser\": {\n              \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n              \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n            },\n            \"username\": \"\"\n          }\n        },\n        \"metadata\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"onAllTasksComplete\": \"{{oneOf (array 'noaction' 'terminatejob')}}\",\n        \"onTaskFailure\": \"{{oneOf (array 'noaction' 'performexitoptionsjobaction')}}\",\n        \"poolInfo\": {\n          \"autoPoolSpecification\": {\n            \"autoPoolIdPrefix\": \"\",\n            \"keepAlive\": {{faker 'random.boolean'}},\n            \"pool\": {\n              \"applicationLicenses\": [\n                \"\"\n              ],\n              \"applicationPackageReferences\": [\n                {\n                  \"applicationId\": \"\",\n                  \"version\": \"\"\n                }\n              ],\n              \"autoScaleEvaluationInterval\": \"\",\n              \"autoScaleFormula\": \"\",\n              \"certificateReferences\": [\n                {\n                  \"storeLocation\": \"{{oneOf (array 'currentuser' 'localmachine')}}\",\n                  \"storeName\": \"\",\n                  \"thumbprint\": \"\",\n                  \"thumbprintAlgorithm\": \"\",\n                  \"visibility\": [\n                    \"{{oneOf (array 'starttask' 'task' 'remoteuser')}}\"\n                  ]\n                }\n              ],\n              \"cloudServiceConfiguration\": {\n                \"currentOSVersion\": \"\",\n                \"osFamily\": \"\",\n                \"targetOSVersion\": \"\"\n              },\n              \"displayName\": \"\",\n              \"enableAutoScale\": {{faker 'random.boolean'}},\n              \"enableInterNodeCommunication\": {{faker 'random.boolean'}},\n              \"maxTasksPerNode\": {{faker 'random.number'}},\n              \"metadata\": [\n                {\n                  \"name\": \"\",\n                  \"value\": \"\"\n                }\n              ],\n              \"networkConfiguration\": {\n                \"endpointConfiguration\": {\n                  \"inboundNATPools\": [\n                    {\n                      \"backendPort\": {{faker 'random.number'}},\n                      \"frontendPortRangeEnd\": {{faker 'random.number'}},\n                      \"frontendPortRangeStart\": {{faker 'random.number'}},\n                      \"name\": \"\",\n                      \"networkSecurityGroupRules\": [\n                        {\n                          \"access\": \"{{oneOf (array 'allow' 'deny')}}\",\n                          \"priority\": {{faker 'random.number'}},\n                          \"sourceAddressPrefix\": \"\"\n                        }\n                      ],\n                      \"protocol\": \"{{oneOf (array 'tcp' 'udp')}}\"\n                    }\n                  ]\n                },\n                \"subnetId\": \"\"\n              },\n              \"resizeTimeout\": \"\",\n              \"startTask\": {\n                \"commandLine\": \"\",\n                \"containerSettings\": {\n                  \"containerRunOptions\": \"\",\n                  \"imageName\": \"\",\n                  \"registry\": {\n                    \"password\": \"\",\n                    \"registryServer\": \"\",\n                    \"username\": \"\"\n                  }\n                },\n                \"environmentSettings\": [\n                  {\n                    \"name\": \"\",\n                    \"value\": \"\"\n                  }\n                ],\n                \"maxTaskRetryCount\": {{faker 'random.number'}},\n                \"resourceFiles\": [\n                  {\n                    \"blobSource\": \"\",\n                    \"fileMode\": \"\",\n                    \"filePath\": \"\"\n                  }\n                ],\n                \"userIdentity\": {\n                  \"autoUser\": {\n                    \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n                    \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n                  },\n                  \"username\": \"\"\n                },\n                \"waitForSuccess\": {{faker 'random.boolean'}}\n              },\n              \"targetDedicatedNodes\": {{faker 'random.number'}},\n              \"targetLowPriorityNodes\": {{faker 'random.number'}},\n              \"taskSchedulingPolicy\": {\n                \"nodeFillType\": \"{{oneOf (array 'spread' 'pack')}}\"\n              },\n              \"userAccounts\": [\n                {\n                  \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n                  \"linuxUserConfiguration\": {\n                    \"gid\": {{faker 'random.number'}},\n                    \"sshPrivateKey\": \"\",\n                    \"uid\": {{faker 'random.number'}}\n                  },\n                  \"name\": \"\",\n                  \"password\": \"\"\n                }\n              ],\n              \"virtualMachineConfiguration\": {\n                \"containerConfiguration\": {\n                  \"containerImageNames\": [\n                    \"\"\n                  ],\n                  \"containerRegistries\": [\n                    {\n                      \"password\": \"\",\n                      \"registryServer\": \"\",\n                      \"username\": \"\"\n                    }\n                  ],\n                  \"type\": \"{{oneOf (array 'dockerCompatible')}}\"\n                },\n                \"dataDisks\": [\n                  {\n                    \"caching\": \"{{oneOf (array 'none' 'readonly' 'readwrite')}}\",\n                    \"diskSizeGB\": {{faker 'random.number'}},\n                    \"lun\": {{faker 'random.number'}},\n                    \"storageAccountType\": \"{{oneOf (array 'standard_lrs' 'premium_lrs')}}\"\n                  }\n                ],\n                \"imageReference\": {\n                  \"offer\": \"\",\n                  \"publisher\": \"\",\n                  \"sku\": \"\",\n                  \"version\": \"\",\n                  \"virtualMachineImageId\": \"\"\n                },\n                \"licenseType\": \"\",\n                \"nodeAgentSKUId\": \"\",\n                \"osDisk\": {\n                  \"caching\": \"{{oneOf (array 'none' 'readonly' 'readwrite')}}\"\n                },\n                \"windowsConfiguration\": {\n                  \"enableAutomaticUpdates\": {{faker 'random.boolean'}}\n                }\n              },\n              \"vmSize\": \"\"\n            },\n            \"poolLifetimeOption\": \"{{oneOf (array 'jobschedule' 'job')}}\"\n          },\n          \"poolId\": \"\"\n        },\n        \"priority\": {{faker 'random.number'}},\n        \"usesTaskDependencies\": {{faker 'random.boolean'}}\n      },\n      \"lastModified\": \"{{faker 'date.recent' 365}}\",\n      \"metadata\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"previousState\": \"{{oneOf (array 'active' 'completed' 'disabled' 'terminating' 'deleting')}}\",\n      \"previousStateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"schedule\": {\n        \"doNotRunAfter\": \"{{faker 'date.recent' 365}}\",\n        \"doNotRunUntil\": \"{{faker 'date.recent' 365}}\",\n        \"recurrenceInterval\": \"\",\n        \"startWindow\": \"\"\n      },\n      \"state\": \"{{oneOf (array 'active' 'completed' 'disabled' 'terminating' 'deleting')}}\",\n      \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"stats\": {\n        \"kernelCPUTime\": \"\",\n        \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n        \"numFailedTasks\": {{faker 'random.number'}},\n        \"numSucceededTasks\": {{faker 'random.number'}},\n        \"numTaskRetries\": {{faker 'random.number'}},\n        \"readIOGiB\": {{faker 'random.float'}},\n        \"readIOps\": {{faker 'random.number'}},\n        \"startTime\": \"{{faker 'date.recent' 365}}\",\n        \"url\": \"\",\n        \"userCPUTime\": \"\",\n        \"waitTime\": \"\",\n        \"wallClockTime\": \"\",\n        \"writeIOGiB\": {{faker 'random.float'}},\n        \"writeIOps\": {{faker 'random.number'}}\n      },\n      \"url\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the list of job schedules.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4083ef16-5135-4bcf-a12a-f9974cded727",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "653baa9d-6508-48ee-8e6c-5ea80143a6da",
      "documentation": "Adds a job schedule to the specified account.",
      "method": "post",
      "endpoint": "jobschedules",
      "responses": [
        {
          "uuid": "5fa4dc23-90cc-4686-8284-f44be05c50b6",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "57b2d5e9-9c0e-45bf-b665-defbe2b9936c",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d15861ef-c4da-4e3f-807e-bf06fc5d7a3f",
      "documentation": "Deletes a job schedule from the specified account.",
      "method": "delete",
      "endpoint": "jobschedules/:jobScheduleId",
      "responses": [
        {
          "uuid": "3140bb90-847b-4194-ac9e-7ccc1a168466",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6723e8f7-ae50-4eaf-8a65-80aca3fcbbd4",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "043480fa-b579-47f1-93c6-830506a34161",
      "documentation": "Gets information about the specified job schedule.",
      "method": "get",
      "endpoint": "jobschedules/:jobScheduleId",
      "responses": [
        {
          "uuid": "ac145699-1efa-4ed1-b0ff-b0b97e602087",
          "body": "{\n  \"creationTime\": \"{{faker 'date.recent' 365}}\",\n  \"displayName\": \"\",\n  \"eTag\": \"\",\n  \"executionInfo\": {\n    \"endTime\": \"{{faker 'date.recent' 365}}\",\n    \"nextRunTime\": \"{{faker 'date.recent' 365}}\",\n    \"recentJob\": {\n      \"id\": \"\",\n      \"url\": \"\"\n    }\n  },\n  \"id\": \"\",\n  \"jobSpecification\": {\n    \"commonEnvironmentSettings\": [\n      {\n        \"name\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"constraints\": {\n      \"maxTaskRetryCount\": {{faker 'random.number'}},\n      \"maxWallClockTime\": \"\"\n    },\n    \"displayName\": \"\",\n    \"jobManagerTask\": {\n      \"allowLowPriorityNode\": {{faker 'random.boolean'}},\n      \"applicationPackageReferences\": [\n        {\n          \"applicationId\": \"\",\n          \"version\": \"\"\n        }\n      ],\n      \"authenticationTokenSettings\": {\n        \"access\": [\n          \"{{oneOf (array 'job')}}\"\n        ]\n      },\n      \"commandLine\": \"\",\n      \"constraints\": {\n        \"maxTaskRetryCount\": {{faker 'random.number'}},\n        \"maxWallClockTime\": \"\",\n        \"retentionTime\": \"\"\n      },\n      \"containerSettings\": {\n        \"containerRunOptions\": \"\",\n        \"imageName\": \"\",\n        \"registry\": {\n          \"password\": \"\",\n          \"registryServer\": \"\",\n          \"username\": \"\"\n        }\n      },\n      \"displayName\": \"\",\n      \"environmentSettings\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"id\": \"\",\n      \"killJobOnCompletion\": {{faker 'random.boolean'}},\n      \"outputFiles\": [\n        {\n          \"destination\": {\n            \"container\": {\n              \"containerUrl\": \"\",\n              \"path\": \"\"\n            }\n          },\n          \"filePattern\": \"\",\n          \"uploadOptions\": {\n            \"uploadCondition\": \"{{oneOf (array 'tasksuccess' 'taskfailure' 'taskcompletion')}}\"\n          }\n        }\n      ],\n      \"resourceFiles\": [\n        {\n          \"blobSource\": \"\",\n          \"fileMode\": \"\",\n          \"filePath\": \"\"\n        }\n      ],\n      \"runExclusive\": {{faker 'random.boolean'}},\n      \"userIdentity\": {\n        \"autoUser\": {\n          \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n          \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n        },\n        \"username\": \"\"\n      }\n    },\n    \"jobPreparationTask\": {\n      \"commandLine\": \"\",\n      \"constraints\": {\n        \"maxTaskRetryCount\": {{faker 'random.number'}},\n        \"maxWallClockTime\": \"\",\n        \"retentionTime\": \"\"\n      },\n      \"containerSettings\": {\n        \"containerRunOptions\": \"\",\n        \"imageName\": \"\",\n        \"registry\": {\n          \"password\": \"\",\n          \"registryServer\": \"\",\n          \"username\": \"\"\n        }\n      },\n      \"environmentSettings\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"id\": \"\",\n      \"rerunOnNodeRebootAfterSuccess\": {{faker 'random.boolean'}},\n      \"resourceFiles\": [\n        {\n          \"blobSource\": \"\",\n          \"fileMode\": \"\",\n          \"filePath\": \"\"\n        }\n      ],\n      \"userIdentity\": {\n        \"autoUser\": {\n          \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n          \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n        },\n        \"username\": \"\"\n      },\n      \"waitForSuccess\": {{faker 'random.boolean'}}\n    },\n    \"jobReleaseTask\": {\n      \"commandLine\": \"\",\n      \"containerSettings\": {\n        \"containerRunOptions\": \"\",\n        \"imageName\": \"\",\n        \"registry\": {\n          \"password\": \"\",\n          \"registryServer\": \"\",\n          \"username\": \"\"\n        }\n      },\n      \"environmentSettings\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"id\": \"\",\n      \"maxWallClockTime\": \"\",\n      \"resourceFiles\": [\n        {\n          \"blobSource\": \"\",\n          \"fileMode\": \"\",\n          \"filePath\": \"\"\n        }\n      ],\n      \"retentionTime\": \"\",\n      \"userIdentity\": {\n        \"autoUser\": {\n          \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n          \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n        },\n        \"username\": \"\"\n      }\n    },\n    \"metadata\": [\n      {\n        \"name\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"onAllTasksComplete\": \"{{oneOf (array 'noaction' 'terminatejob')}}\",\n    \"onTaskFailure\": \"{{oneOf (array 'noaction' 'performexitoptionsjobaction')}}\",\n    \"poolInfo\": {\n      \"autoPoolSpecification\": {\n        \"autoPoolIdPrefix\": \"\",\n        \"keepAlive\": {{faker 'random.boolean'}},\n        \"pool\": {\n          \"applicationLicenses\": [\n            \"\"\n          ],\n          \"applicationPackageReferences\": [\n            {\n              \"applicationId\": \"\",\n              \"version\": \"\"\n            }\n          ],\n          \"autoScaleEvaluationInterval\": \"\",\n          \"autoScaleFormula\": \"\",\n          \"certificateReferences\": [\n            {\n              \"storeLocation\": \"{{oneOf (array 'currentuser' 'localmachine')}}\",\n              \"storeName\": \"\",\n              \"thumbprint\": \"\",\n              \"thumbprintAlgorithm\": \"\",\n              \"visibility\": [\n                \"{{oneOf (array 'starttask' 'task' 'remoteuser')}}\"\n              ]\n            }\n          ],\n          \"cloudServiceConfiguration\": {\n            \"currentOSVersion\": \"\",\n            \"osFamily\": \"\",\n            \"targetOSVersion\": \"\"\n          },\n          \"displayName\": \"\",\n          \"enableAutoScale\": {{faker 'random.boolean'}},\n          \"enableInterNodeCommunication\": {{faker 'random.boolean'}},\n          \"maxTasksPerNode\": {{faker 'random.number'}},\n          \"metadata\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"networkConfiguration\": {\n            \"endpointConfiguration\": {\n              \"inboundNATPools\": [\n                {\n                  \"backendPort\": {{faker 'random.number'}},\n                  \"frontendPortRangeEnd\": {{faker 'random.number'}},\n                  \"frontendPortRangeStart\": {{faker 'random.number'}},\n                  \"name\": \"\",\n                  \"networkSecurityGroupRules\": [\n                    {\n                      \"access\": \"{{oneOf (array 'allow' 'deny')}}\",\n                      \"priority\": {{faker 'random.number'}},\n                      \"sourceAddressPrefix\": \"\"\n                    }\n                  ],\n                  \"protocol\": \"{{oneOf (array 'tcp' 'udp')}}\"\n                }\n              ]\n            },\n            \"subnetId\": \"\"\n          },\n          \"resizeTimeout\": \"\",\n          \"startTask\": {\n            \"commandLine\": \"\",\n            \"containerSettings\": {\n              \"containerRunOptions\": \"\",\n              \"imageName\": \"\",\n              \"registry\": {\n                \"password\": \"\",\n                \"registryServer\": \"\",\n                \"username\": \"\"\n              }\n            },\n            \"environmentSettings\": [\n              {\n                \"name\": \"\",\n                \"value\": \"\"\n              }\n            ],\n            \"maxTaskRetryCount\": {{faker 'random.number'}},\n            \"resourceFiles\": [\n              {\n                \"blobSource\": \"\",\n                \"fileMode\": \"\",\n                \"filePath\": \"\"\n              }\n            ],\n            \"userIdentity\": {\n              \"autoUser\": {\n                \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n                \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n              },\n              \"username\": \"\"\n            },\n            \"waitForSuccess\": {{faker 'random.boolean'}}\n          },\n          \"targetDedicatedNodes\": {{faker 'random.number'}},\n          \"targetLowPriorityNodes\": {{faker 'random.number'}},\n          \"taskSchedulingPolicy\": {\n            \"nodeFillType\": \"{{oneOf (array 'spread' 'pack')}}\"\n          },\n          \"userAccounts\": [\n            {\n              \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n              \"linuxUserConfiguration\": {\n                \"gid\": {{faker 'random.number'}},\n                \"sshPrivateKey\": \"\",\n                \"uid\": {{faker 'random.number'}}\n              },\n              \"name\": \"\",\n              \"password\": \"\"\n            }\n          ],\n          \"virtualMachineConfiguration\": {\n            \"containerConfiguration\": {\n              \"containerImageNames\": [\n                \"\"\n              ],\n              \"containerRegistries\": [\n                {\n                  \"password\": \"\",\n                  \"registryServer\": \"\",\n                  \"username\": \"\"\n                }\n              ],\n              \"type\": \"{{oneOf (array 'dockerCompatible')}}\"\n            },\n            \"dataDisks\": [\n              {\n                \"caching\": \"{{oneOf (array 'none' 'readonly' 'readwrite')}}\",\n                \"diskSizeGB\": {{faker 'random.number'}},\n                \"lun\": {{faker 'random.number'}},\n                \"storageAccountType\": \"{{oneOf (array 'standard_lrs' 'premium_lrs')}}\"\n              }\n            ],\n            \"imageReference\": {\n              \"offer\": \"\",\n              \"publisher\": \"\",\n              \"sku\": \"\",\n              \"version\": \"\",\n              \"virtualMachineImageId\": \"\"\n            },\n            \"licenseType\": \"\",\n            \"nodeAgentSKUId\": \"\",\n            \"osDisk\": {\n              \"caching\": \"{{oneOf (array 'none' 'readonly' 'readwrite')}}\"\n            },\n            \"windowsConfiguration\": {\n              \"enableAutomaticUpdates\": {{faker 'random.boolean'}}\n            }\n          },\n          \"vmSize\": \"\"\n        },\n        \"poolLifetimeOption\": \"{{oneOf (array 'jobschedule' 'job')}}\"\n      },\n      \"poolId\": \"\"\n    },\n    \"priority\": {{faker 'random.number'}},\n    \"usesTaskDependencies\": {{faker 'random.boolean'}}\n  },\n  \"lastModified\": \"{{faker 'date.recent' 365}}\",\n  \"metadata\": [\n    {\n      \"name\": \"\",\n      \"value\": \"\"\n    }\n  ],\n  \"previousState\": \"{{oneOf (array 'active' 'completed' 'disabled' 'terminating' 'deleting')}}\",\n  \"previousStateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n  \"schedule\": {\n    \"doNotRunAfter\": \"{{faker 'date.recent' 365}}\",\n    \"doNotRunUntil\": \"{{faker 'date.recent' 365}}\",\n    \"recurrenceInterval\": \"\",\n    \"startWindow\": \"\"\n  },\n  \"state\": \"{{oneOf (array 'active' 'completed' 'disabled' 'terminating' 'deleting')}}\",\n  \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n  \"stats\": {\n    \"kernelCPUTime\": \"\",\n    \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n    \"numFailedTasks\": {{faker 'random.number'}},\n    \"numSucceededTasks\": {{faker 'random.number'}},\n    \"numTaskRetries\": {{faker 'random.number'}},\n    \"readIOGiB\": {{faker 'random.float'}},\n    \"readIOps\": {{faker 'random.number'}},\n    \"startTime\": \"{{faker 'date.recent' 365}}\",\n    \"url\": \"\",\n    \"userCPUTime\": \"\",\n    \"waitTime\": \"\",\n    \"wallClockTime\": \"\",\n    \"writeIOGiB\": {{faker 'random.float'}},\n    \"writeIOps\": {{faker 'random.number'}}\n  },\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the job schedule.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b7e0a769-8d2b-4b57-8e61-11af28b46185",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b64d5e12-0013-4277-9778-55fbfd5ee2e2",
      "documentation": "Checks the specified job schedule exists.",
      "method": "head",
      "endpoint": "jobschedules/:jobScheduleId",
      "responses": [
        {
          "uuid": "2e13eb06-b5f6-4e72-b5e9-c82c6324b76b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing headers related to the job schedule, if it exists.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "139f2a53-e25b-4881-93be-3404a9f8d448",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "The job schedule does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5b6780d3-77d9-4508-bbcb-19e7698698ec",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9664ae15-77d7-4938-998c-223026d3d61e",
      "documentation": "Updates the properties of the specified job schedule.",
      "method": "patch",
      "endpoint": "jobschedules/:jobScheduleId",
      "responses": [
        {
          "uuid": "94c0e443-b666-4d5b-a5fb-6007be0417bd",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ab74b400-3982-458a-a88c-0d56051ce684",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dabe2f83-bf7d-4bc5-9a85-9230ec24a762",
      "documentation": "Updates the properties of the specified job schedule.",
      "method": "put",
      "endpoint": "jobschedules/:jobScheduleId",
      "responses": [
        {
          "uuid": "dc80bd17-4f24-4950-88dd-1c4a3c827636",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "812de182-51c1-4d24-9a34-da96a14d3018",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "46b72444-3c0c-4331-9f6b-96000190322c",
      "documentation": "Disables a job schedule.",
      "method": "post",
      "endpoint": "jobschedules/:jobScheduleId/disable",
      "responses": [
        {
          "uuid": "10ed6ca3-ec2c-43d9-a135-a025559c9612",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f7f7efae-de81-42f2-b1fd-93105b612568",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0907a120-cfc4-456e-86c3-1a6ad3fbf35e",
      "documentation": "Enables a job schedule.",
      "method": "post",
      "endpoint": "jobschedules/:jobScheduleId/enable",
      "responses": [
        {
          "uuid": "224391a5-dfab-4932-a9d1-a746100c7494",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "92cc83dc-9670-4ec8-9f71-c020e4ce801a",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b1a29842-393c-4a62-961e-2c35d1f23809",
      "documentation": "Lists the jobs that have been created under the specified job schedule.",
      "method": "get",
      "endpoint": "jobschedules/:jobScheduleId/jobs",
      "responses": [
        {
          "uuid": "62d40df3-6fdf-4483-a305-d520afb24ca4",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"commonEnvironmentSettings\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"constraints\": {\n        \"maxTaskRetryCount\": {{faker 'random.number'}},\n        \"maxWallClockTime\": \"\"\n      },\n      \"creationTime\": \"{{faker 'date.recent' 365}}\",\n      \"displayName\": \"\",\n      \"eTag\": \"\",\n      \"executionInfo\": {\n        \"endTime\": \"{{faker 'date.recent' 365}}\",\n        \"poolId\": \"\",\n        \"schedulingError\": {\n          \"category\": \"{{oneOf (array 'usererror' 'servererror')}}\",\n          \"code\": \"\",\n          \"details\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"message\": \"\"\n        },\n        \"startTime\": \"{{faker 'date.recent' 365}}\",\n        \"terminateReason\": \"\"\n      },\n      \"id\": \"\",\n      \"jobManagerTask\": {\n        \"allowLowPriorityNode\": {{faker 'random.boolean'}},\n        \"applicationPackageReferences\": [\n          {\n            \"applicationId\": \"\",\n            \"version\": \"\"\n          }\n        ],\n        \"authenticationTokenSettings\": {\n          \"access\": [\n            \"{{oneOf (array 'job')}}\"\n          ]\n        },\n        \"commandLine\": \"\",\n        \"constraints\": {\n          \"maxTaskRetryCount\": {{faker 'random.number'}},\n          \"maxWallClockTime\": \"\",\n          \"retentionTime\": \"\"\n        },\n        \"containerSettings\": {\n          \"containerRunOptions\": \"\",\n          \"imageName\": \"\",\n          \"registry\": {\n            \"password\": \"\",\n            \"registryServer\": \"\",\n            \"username\": \"\"\n          }\n        },\n        \"displayName\": \"\",\n        \"environmentSettings\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"killJobOnCompletion\": {{faker 'random.boolean'}},\n        \"outputFiles\": [\n          {\n            \"destination\": {\n              \"container\": {\n                \"containerUrl\": \"\",\n                \"path\": \"\"\n              }\n            },\n            \"filePattern\": \"\",\n            \"uploadOptions\": {\n              \"uploadCondition\": \"{{oneOf (array 'tasksuccess' 'taskfailure' 'taskcompletion')}}\"\n            }\n          }\n        ],\n        \"resourceFiles\": [\n          {\n            \"blobSource\": \"\",\n            \"fileMode\": \"\",\n            \"filePath\": \"\"\n          }\n        ],\n        \"runExclusive\": {{faker 'random.boolean'}},\n        \"userIdentity\": {\n          \"autoUser\": {\n            \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n            \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n          },\n          \"username\": \"\"\n        }\n      },\n      \"jobPreparationTask\": {\n        \"commandLine\": \"\",\n        \"constraints\": {\n          \"maxTaskRetryCount\": {{faker 'random.number'}},\n          \"maxWallClockTime\": \"\",\n          \"retentionTime\": \"\"\n        },\n        \"containerSettings\": {\n          \"containerRunOptions\": \"\",\n          \"imageName\": \"\",\n          \"registry\": {\n            \"password\": \"\",\n            \"registryServer\": \"\",\n            \"username\": \"\"\n          }\n        },\n        \"environmentSettings\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"rerunOnNodeRebootAfterSuccess\": {{faker 'random.boolean'}},\n        \"resourceFiles\": [\n          {\n            \"blobSource\": \"\",\n            \"fileMode\": \"\",\n            \"filePath\": \"\"\n          }\n        ],\n        \"userIdentity\": {\n          \"autoUser\": {\n            \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n            \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n          },\n          \"username\": \"\"\n        },\n        \"waitForSuccess\": {{faker 'random.boolean'}}\n      },\n      \"jobReleaseTask\": {\n        \"commandLine\": \"\",\n        \"containerSettings\": {\n          \"containerRunOptions\": \"\",\n          \"imageName\": \"\",\n          \"registry\": {\n            \"password\": \"\",\n            \"registryServer\": \"\",\n            \"username\": \"\"\n          }\n        },\n        \"environmentSettings\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"maxWallClockTime\": \"\",\n        \"resourceFiles\": [\n          {\n            \"blobSource\": \"\",\n            \"fileMode\": \"\",\n            \"filePath\": \"\"\n          }\n        ],\n        \"retentionTime\": \"\",\n        \"userIdentity\": {\n          \"autoUser\": {\n            \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n            \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n          },\n          \"username\": \"\"\n        }\n      },\n      \"lastModified\": \"{{faker 'date.recent' 365}}\",\n      \"metadata\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"onAllTasksComplete\": \"{{oneOf (array 'noaction' 'terminatejob')}}\",\n      \"onTaskFailure\": \"{{oneOf (array 'noaction' 'performexitoptionsjobaction')}}\",\n      \"poolInfo\": {\n        \"autoPoolSpecification\": {\n          \"autoPoolIdPrefix\": \"\",\n          \"keepAlive\": {{faker 'random.boolean'}},\n          \"pool\": {\n            \"applicationLicenses\": [\n              \"\"\n            ],\n            \"applicationPackageReferences\": [\n              {\n                \"applicationId\": \"\",\n                \"version\": \"\"\n              }\n            ],\n            \"autoScaleEvaluationInterval\": \"\",\n            \"autoScaleFormula\": \"\",\n            \"certificateReferences\": [\n              {\n                \"storeLocation\": \"{{oneOf (array 'currentuser' 'localmachine')}}\",\n                \"storeName\": \"\",\n                \"thumbprint\": \"\",\n                \"thumbprintAlgorithm\": \"\",\n                \"visibility\": [\n                  \"{{oneOf (array 'starttask' 'task' 'remoteuser')}}\"\n                ]\n              }\n            ],\n            \"cloudServiceConfiguration\": {\n              \"currentOSVersion\": \"\",\n              \"osFamily\": \"\",\n              \"targetOSVersion\": \"\"\n            },\n            \"displayName\": \"\",\n            \"enableAutoScale\": {{faker 'random.boolean'}},\n            \"enableInterNodeCommunication\": {{faker 'random.boolean'}},\n            \"maxTasksPerNode\": {{faker 'random.number'}},\n            \"metadata\": [\n              {\n                \"name\": \"\",\n                \"value\": \"\"\n              }\n            ],\n            \"networkConfiguration\": {\n              \"endpointConfiguration\": {\n                \"inboundNATPools\": [\n                  {\n                    \"backendPort\": {{faker 'random.number'}},\n                    \"frontendPortRangeEnd\": {{faker 'random.number'}},\n                    \"frontendPortRangeStart\": {{faker 'random.number'}},\n                    \"name\": \"\",\n                    \"networkSecurityGroupRules\": [\n                      {\n                        \"access\": \"{{oneOf (array 'allow' 'deny')}}\",\n                        \"priority\": {{faker 'random.number'}},\n                        \"sourceAddressPrefix\": \"\"\n                      }\n                    ],\n                    \"protocol\": \"{{oneOf (array 'tcp' 'udp')}}\"\n                  }\n                ]\n              },\n              \"subnetId\": \"\"\n            },\n            \"resizeTimeout\": \"\",\n            \"startTask\": {\n              \"commandLine\": \"\",\n              \"containerSettings\": {\n                \"containerRunOptions\": \"\",\n                \"imageName\": \"\",\n                \"registry\": {\n                  \"password\": \"\",\n                  \"registryServer\": \"\",\n                  \"username\": \"\"\n                }\n              },\n              \"environmentSettings\": [\n                {\n                  \"name\": \"\",\n                  \"value\": \"\"\n                }\n              ],\n              \"maxTaskRetryCount\": {{faker 'random.number'}},\n              \"resourceFiles\": [\n                {\n                  \"blobSource\": \"\",\n                  \"fileMode\": \"\",\n                  \"filePath\": \"\"\n                }\n              ],\n              \"userIdentity\": {\n                \"autoUser\": {\n                  \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n                  \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n                },\n                \"username\": \"\"\n              },\n              \"waitForSuccess\": {{faker 'random.boolean'}}\n            },\n            \"targetDedicatedNodes\": {{faker 'random.number'}},\n            \"targetLowPriorityNodes\": {{faker 'random.number'}},\n            \"taskSchedulingPolicy\": {\n              \"nodeFillType\": \"{{oneOf (array 'spread' 'pack')}}\"\n            },\n            \"userAccounts\": [\n              {\n                \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n                \"linuxUserConfiguration\": {\n                  \"gid\": {{faker 'random.number'}},\n                  \"sshPrivateKey\": \"\",\n                  \"uid\": {{faker 'random.number'}}\n                },\n                \"name\": \"\",\n                \"password\": \"\"\n              }\n            ],\n            \"virtualMachineConfiguration\": {\n              \"containerConfiguration\": {\n                \"containerImageNames\": [\n                  \"\"\n                ],\n                \"containerRegistries\": [\n                  {\n                    \"password\": \"\",\n                    \"registryServer\": \"\",\n                    \"username\": \"\"\n                  }\n                ],\n                \"type\": \"{{oneOf (array 'dockerCompatible')}}\"\n              },\n              \"dataDisks\": [\n                {\n                  \"caching\": \"{{oneOf (array 'none' 'readonly' 'readwrite')}}\",\n                  \"diskSizeGB\": {{faker 'random.number'}},\n                  \"lun\": {{faker 'random.number'}},\n                  \"storageAccountType\": \"{{oneOf (array 'standard_lrs' 'premium_lrs')}}\"\n                }\n              ],\n              \"imageReference\": {\n                \"offer\": \"\",\n                \"publisher\": \"\",\n                \"sku\": \"\",\n                \"version\": \"\",\n                \"virtualMachineImageId\": \"\"\n              },\n              \"licenseType\": \"\",\n              \"nodeAgentSKUId\": \"\",\n              \"osDisk\": {\n                \"caching\": \"{{oneOf (array 'none' 'readonly' 'readwrite')}}\"\n              },\n              \"windowsConfiguration\": {\n                \"enableAutomaticUpdates\": {{faker 'random.boolean'}}\n              }\n            },\n            \"vmSize\": \"\"\n          },\n          \"poolLifetimeOption\": \"{{oneOf (array 'jobschedule' 'job')}}\"\n        },\n        \"poolId\": \"\"\n      },\n      \"previousState\": \"{{oneOf (array 'active' 'disabling' 'disabled' 'enabling' 'terminating' 'completed' 'deleting')}}\",\n      \"previousStateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"priority\": {{faker 'random.number'}},\n      \"state\": \"{{oneOf (array 'active' 'disabling' 'disabled' 'enabling' 'terminating' 'completed' 'deleting')}}\",\n      \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"stats\": {\n        \"kernelCPUTime\": \"\",\n        \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n        \"numFailedTasks\": {{faker 'random.number'}},\n        \"numSucceededTasks\": {{faker 'random.number'}},\n        \"numTaskRetries\": {{faker 'random.number'}},\n        \"readIOGiB\": {{faker 'random.float'}},\n        \"readIOps\": {{faker 'random.number'}},\n        \"startTime\": \"{{faker 'date.recent' 365}}\",\n        \"url\": \"\",\n        \"userCPUTime\": \"\",\n        \"waitTime\": \"\",\n        \"wallClockTime\": \"\",\n        \"writeIOGiB\": {{faker 'random.float'}},\n        \"writeIOps\": {{faker 'random.number'}}\n      },\n      \"url\": \"\",\n      \"usesTaskDependencies\": {{faker 'random.boolean'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the list of jobs.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f4bf6885-519e-407a-a5d0-71bd5aab070c",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d68e17e7-753e-4d79-8693-a8b84df03729",
      "documentation": "Terminates a job schedule.",
      "method": "post",
      "endpoint": "jobschedules/:jobScheduleId/terminate",
      "responses": [
        {
          "uuid": "5a48734c-f394-4012-8042-dbf71bb13657",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b142b719-3ba4-401a-844f-b708fb9af9a8",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f01e8829-1841-43f5-a712-cc33c1ca21b0",
      "documentation": "Gets lifetime summary statistics for all of the jobs in the specified account.",
      "method": "get",
      "endpoint": "lifetimejobstats",
      "responses": [
        {
          "uuid": "62a917b0-b34c-4ec6-a193-d073506cd69a",
          "body": "{\n  \"kernelCPUTime\": \"\",\n  \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n  \"numFailedTasks\": {{faker 'random.number'}},\n  \"numSucceededTasks\": {{faker 'random.number'}},\n  \"numTaskRetries\": {{faker 'random.number'}},\n  \"readIOGiB\": {{faker 'random.float'}},\n  \"readIOps\": {{faker 'random.number'}},\n  \"startTime\": \"{{faker 'date.recent' 365}}\",\n  \"url\": \"\",\n  \"userCPUTime\": \"\",\n  \"waitTime\": \"\",\n  \"wallClockTime\": \"\",\n  \"writeIOGiB\": {{faker 'random.float'}},\n  \"writeIOps\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the job statistics for the lifetime of the Batch account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a117e128-87d4-40d0-b701-d4f946e6f3d3",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5f23ddf2-af99-459c-a1f0-86ac1c47d7f6",
      "documentation": "Gets lifetime summary statistics for all of the pools in the specified account.",
      "method": "get",
      "endpoint": "lifetimepoolstats",
      "responses": [
        {
          "uuid": "71d5c39b-9d6f-47c5-9524-dced07622595",
          "body": "{\n  \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n  \"resourceStats\": {\n    \"avgCPUPercentage\": {{faker 'random.float'}},\n    \"avgDiskGiB\": {{faker 'random.float'}},\n    \"avgMemoryGiB\": {{faker 'random.float'}},\n    \"diskReadGiB\": {{faker 'random.float'}},\n    \"diskReadIOps\": {{faker 'random.number'}},\n    \"diskWriteGiB\": {{faker 'random.float'}},\n    \"diskWriteIOps\": {{faker 'random.number'}},\n    \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n    \"networkReadGiB\": {{faker 'random.float'}},\n    \"networkWriteGiB\": {{faker 'random.float'}},\n    \"peakDiskGiB\": {{faker 'random.float'}},\n    \"peakMemoryGiB\": {{faker 'random.float'}},\n    \"startTime\": \"{{faker 'date.recent' 365}}\"\n  },\n  \"startTime\": \"{{faker 'date.recent' 365}}\",\n  \"url\": \"\",\n  \"usageStats\": {\n    \"dedicatedCoreTime\": \"\",\n    \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n    \"startTime\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the pool statistics for the lifetime of the Batch account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "772760aa-df11-442a-a8e5-91430b3129a8",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "47e663e9-fbe7-444e-9acd-34ed3fa07fc9",
      "documentation": "Lists all node agent SKUs supported by the Azure Batch service.",
      "method": "get",
      "endpoint": "nodeagentskus",
      "responses": [
        {
          "uuid": "f713599f-9c3a-4cb4-8999-4ee0bd08429b",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"id\": \"\",\n      \"osType\": \"{{oneOf (array 'linux' 'windows')}}\",\n      \"verifiedImageReferences\": [\n        {\n          \"offer\": \"\",\n          \"publisher\": \"\",\n          \"sku\": \"\",\n          \"version\": \"\",\n          \"virtualMachineImageId\": \"\"\n        }\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the list of node agent SKUs.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "efb14c8c-be50-42a1-a266-161e2efe2945",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "52949e3c-f2b1-4a54-b093-05b3cf7e43b6",
      "documentation": "Gets the number of nodes in each state, grouped by pool.",
      "method": "get",
      "endpoint": "nodecounts",
      "responses": [
        {
          "uuid": "77374b06-f7e4-44f3-95c3-41940c6b6eb0",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"dedicated\": {\n        \"creating\": {{faker 'random.number'}},\n        \"idle\": {{faker 'random.number'}},\n        \"leavingPool\": {{faker 'random.number'}},\n        \"offline\": {{faker 'random.number'}},\n        \"preempted\": {{faker 'random.number'}},\n        \"rebooting\": {{faker 'random.number'}},\n        \"reimaging\": {{faker 'random.number'}},\n        \"running\": {{faker 'random.number'}},\n        \"startTaskFailed\": {{faker 'random.number'}},\n        \"starting\": {{faker 'random.number'}},\n        \"total\": {{faker 'random.number'}},\n        \"unknown\": {{faker 'random.number'}},\n        \"unusable\": {{faker 'random.number'}},\n        \"waitingForStartTask\": {{faker 'random.number'}}\n      },\n      \"lowPriority\": {\n        \"creating\": {{faker 'random.number'}},\n        \"idle\": {{faker 'random.number'}},\n        \"leavingPool\": {{faker 'random.number'}},\n        \"offline\": {{faker 'random.number'}},\n        \"preempted\": {{faker 'random.number'}},\n        \"rebooting\": {{faker 'random.number'}},\n        \"reimaging\": {{faker 'random.number'}},\n        \"running\": {{faker 'random.number'}},\n        \"startTaskFailed\": {{faker 'random.number'}},\n        \"starting\": {{faker 'random.number'}},\n        \"total\": {{faker 'random.number'}},\n        \"unknown\": {{faker 'random.number'}},\n        \"unusable\": {{faker 'random.number'}},\n        \"waitingForStartTask\": {{faker 'random.number'}}\n      },\n      \"poolId\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The response contains the number of nodes in each node state, grouped by pool.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "172ccfd3-ba7e-4f2c-94d6-fbe7263f13f4",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d5e54835-abd3-41ae-9422-dcf2897fcd45",
      "documentation": "Lists all of the pools in the specified account.",
      "method": "get",
      "endpoint": "pools",
      "responses": [
        {
          "uuid": "5b2dd399-cc70-4d7c-8322-0c4f5d2e02ad",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"allocationState\": \"{{oneOf (array 'steady' 'resizing' 'stopping')}}\",\n      \"allocationStateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"applicationLicenses\": [\n        \"\"\n      ],\n      \"applicationPackageReferences\": [\n        {\n          \"applicationId\": \"\",\n          \"version\": \"\"\n        }\n      ],\n      \"autoScaleEvaluationInterval\": \"\",\n      \"autoScaleFormula\": \"\",\n      \"autoScaleRun\": {\n        \"error\": {\n          \"code\": \"\",\n          \"message\": \"\",\n          \"values\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ]\n        },\n        \"results\": \"\",\n        \"timestamp\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"certificateReferences\": [\n        {\n          \"storeLocation\": \"{{oneOf (array 'currentuser' 'localmachine')}}\",\n          \"storeName\": \"\",\n          \"thumbprint\": \"\",\n          \"thumbprintAlgorithm\": \"\",\n          \"visibility\": [\n            \"{{oneOf (array 'starttask' 'task' 'remoteuser')}}\"\n          ]\n        }\n      ],\n      \"cloudServiceConfiguration\": {\n        \"currentOSVersion\": \"\",\n        \"osFamily\": \"\",\n        \"targetOSVersion\": \"\"\n      },\n      \"creationTime\": \"{{faker 'date.recent' 365}}\",\n      \"currentDedicatedNodes\": {{faker 'random.number'}},\n      \"currentLowPriorityNodes\": {{faker 'random.number'}},\n      \"displayName\": \"\",\n      \"eTag\": \"\",\n      \"enableAutoScale\": {{faker 'random.boolean'}},\n      \"enableInterNodeCommunication\": {{faker 'random.boolean'}},\n      \"id\": \"\",\n      \"lastModified\": \"{{faker 'date.recent' 365}}\",\n      \"maxTasksPerNode\": {{faker 'random.number'}},\n      \"metadata\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"networkConfiguration\": {\n        \"endpointConfiguration\": {\n          \"inboundNATPools\": [\n            {\n              \"backendPort\": {{faker 'random.number'}},\n              \"frontendPortRangeEnd\": {{faker 'random.number'}},\n              \"frontendPortRangeStart\": {{faker 'random.number'}},\n              \"name\": \"\",\n              \"networkSecurityGroupRules\": [\n                {\n                  \"access\": \"{{oneOf (array 'allow' 'deny')}}\",\n                  \"priority\": {{faker 'random.number'}},\n                  \"sourceAddressPrefix\": \"\"\n                }\n              ],\n              \"protocol\": \"{{oneOf (array 'tcp' 'udp')}}\"\n            }\n          ]\n        },\n        \"subnetId\": \"\"\n      },\n      \"resizeErrors\": [\n        {\n          \"code\": \"\",\n          \"message\": \"\",\n          \"values\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ]\n        }\n      ],\n      \"resizeTimeout\": \"\",\n      \"startTask\": {\n        \"commandLine\": \"\",\n        \"containerSettings\": {\n          \"containerRunOptions\": \"\",\n          \"imageName\": \"\",\n          \"registry\": {\n            \"password\": \"\",\n            \"registryServer\": \"\",\n            \"username\": \"\"\n          }\n        },\n        \"environmentSettings\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"maxTaskRetryCount\": {{faker 'random.number'}},\n        \"resourceFiles\": [\n          {\n            \"blobSource\": \"\",\n            \"fileMode\": \"\",\n            \"filePath\": \"\"\n          }\n        ],\n        \"userIdentity\": {\n          \"autoUser\": {\n            \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n            \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n          },\n          \"username\": \"\"\n        },\n        \"waitForSuccess\": {{faker 'random.boolean'}}\n      },\n      \"state\": \"{{oneOf (array 'active' 'deleting' 'upgrading')}}\",\n      \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"stats\": {\n        \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n        \"resourceStats\": {\n          \"avgCPUPercentage\": {{faker 'random.float'}},\n          \"avgDiskGiB\": {{faker 'random.float'}},\n          \"avgMemoryGiB\": {{faker 'random.float'}},\n          \"diskReadGiB\": {{faker 'random.float'}},\n          \"diskReadIOps\": {{faker 'random.number'}},\n          \"diskWriteGiB\": {{faker 'random.float'}},\n          \"diskWriteIOps\": {{faker 'random.number'}},\n          \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n          \"networkReadGiB\": {{faker 'random.float'}},\n          \"networkWriteGiB\": {{faker 'random.float'}},\n          \"peakDiskGiB\": {{faker 'random.float'}},\n          \"peakMemoryGiB\": {{faker 'random.float'}},\n          \"startTime\": \"{{faker 'date.recent' 365}}\"\n        },\n        \"startTime\": \"{{faker 'date.recent' 365}}\",\n        \"url\": \"\",\n        \"usageStats\": {\n          \"dedicatedCoreTime\": \"\",\n          \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n          \"startTime\": \"{{faker 'date.recent' 365}}\"\n        }\n      },\n      \"targetDedicatedNodes\": {{faker 'random.number'}},\n      \"targetLowPriorityNodes\": {{faker 'random.number'}},\n      \"taskSchedulingPolicy\": {\n        \"nodeFillType\": \"{{oneOf (array 'spread' 'pack')}}\"\n      },\n      \"url\": \"\",\n      \"userAccounts\": [\n        {\n          \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n          \"linuxUserConfiguration\": {\n            \"gid\": {{faker 'random.number'}},\n            \"sshPrivateKey\": \"\",\n            \"uid\": {{faker 'random.number'}}\n          },\n          \"name\": \"\",\n          \"password\": \"\"\n        }\n      ],\n      \"virtualMachineConfiguration\": {\n        \"containerConfiguration\": {\n          \"containerImageNames\": [\n            \"\"\n          ],\n          \"containerRegistries\": [\n            {\n              \"password\": \"\",\n              \"registryServer\": \"\",\n              \"username\": \"\"\n            }\n          ],\n          \"type\": \"{{oneOf (array 'dockerCompatible')}}\"\n        },\n        \"dataDisks\": [\n          {\n            \"caching\": \"{{oneOf (array 'none' 'readonly' 'readwrite')}}\",\n            \"diskSizeGB\": {{faker 'random.number'}},\n            \"lun\": {{faker 'random.number'}},\n            \"storageAccountType\": \"{{oneOf (array 'standard_lrs' 'premium_lrs')}}\"\n          }\n        ],\n        \"imageReference\": {\n          \"offer\": \"\",\n          \"publisher\": \"\",\n          \"sku\": \"\",\n          \"version\": \"\",\n          \"virtualMachineImageId\": \"\"\n        },\n        \"licenseType\": \"\",\n        \"nodeAgentSKUId\": \"\",\n        \"osDisk\": {\n          \"caching\": \"{{oneOf (array 'none' 'readonly' 'readwrite')}}\"\n        },\n        \"windowsConfiguration\": {\n          \"enableAutomaticUpdates\": {{faker 'random.boolean'}}\n        }\n      },\n      \"vmSize\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the list of pools.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c117cc97-96ed-4a25-8a0e-56b3ae7399ad",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6c0923a7-a149-4a1f-9e63-31986d2e5d8a",
      "documentation": "Adds a pool to the specified account.",
      "method": "post",
      "endpoint": "pools",
      "responses": [
        {
          "uuid": "eb405c0f-5c83-4439-a210-e0dde8a55ce1",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "91bf92f2-9e3e-4a98-936f-3c1021cfb922",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fb504dd6-3f08-40a0-bd4a-b962a6f284ea",
      "documentation": "Deletes a pool from the specified account.",
      "method": "delete",
      "endpoint": "pools/:poolId",
      "responses": [
        {
          "uuid": "259d3403-e7d7-4dd2-be63-38b2299360cf",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4142031c-697a-49cd-a6a8-f30cc4c40113",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "afa7ca7b-a323-4462-adcb-2ba572d108d6",
      "documentation": "Gets information about the specified pool.",
      "method": "get",
      "endpoint": "pools/:poolId",
      "responses": [
        {
          "uuid": "cf113ade-86d6-4f14-a6ca-95d09429b66f",
          "body": "{\n  \"allocationState\": \"{{oneOf (array 'steady' 'resizing' 'stopping')}}\",\n  \"allocationStateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n  \"applicationLicenses\": [\n    \"\"\n  ],\n  \"applicationPackageReferences\": [\n    {\n      \"applicationId\": \"\",\n      \"version\": \"\"\n    }\n  ],\n  \"autoScaleEvaluationInterval\": \"\",\n  \"autoScaleFormula\": \"\",\n  \"autoScaleRun\": {\n    \"error\": {\n      \"code\": \"\",\n      \"message\": \"\",\n      \"values\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ]\n    },\n    \"results\": \"\",\n    \"timestamp\": \"{{faker 'date.recent' 365}}\"\n  },\n  \"certificateReferences\": [\n    {\n      \"storeLocation\": \"{{oneOf (array 'currentuser' 'localmachine')}}\",\n      \"storeName\": \"\",\n      \"thumbprint\": \"\",\n      \"thumbprintAlgorithm\": \"\",\n      \"visibility\": [\n        \"{{oneOf (array 'starttask' 'task' 'remoteuser')}}\"\n      ]\n    }\n  ],\n  \"cloudServiceConfiguration\": {\n    \"currentOSVersion\": \"\",\n    \"osFamily\": \"\",\n    \"targetOSVersion\": \"\"\n  },\n  \"creationTime\": \"{{faker 'date.recent' 365}}\",\n  \"currentDedicatedNodes\": {{faker 'random.number'}},\n  \"currentLowPriorityNodes\": {{faker 'random.number'}},\n  \"displayName\": \"\",\n  \"eTag\": \"\",\n  \"enableAutoScale\": {{faker 'random.boolean'}},\n  \"enableInterNodeCommunication\": {{faker 'random.boolean'}},\n  \"id\": \"\",\n  \"lastModified\": \"{{faker 'date.recent' 365}}\",\n  \"maxTasksPerNode\": {{faker 'random.number'}},\n  \"metadata\": [\n    {\n      \"name\": \"\",\n      \"value\": \"\"\n    }\n  ],\n  \"networkConfiguration\": {\n    \"endpointConfiguration\": {\n      \"inboundNATPools\": [\n        {\n          \"backendPort\": {{faker 'random.number'}},\n          \"frontendPortRangeEnd\": {{faker 'random.number'}},\n          \"frontendPortRangeStart\": {{faker 'random.number'}},\n          \"name\": \"\",\n          \"networkSecurityGroupRules\": [\n            {\n              \"access\": \"{{oneOf (array 'allow' 'deny')}}\",\n              \"priority\": {{faker 'random.number'}},\n              \"sourceAddressPrefix\": \"\"\n            }\n          ],\n          \"protocol\": \"{{oneOf (array 'tcp' 'udp')}}\"\n        }\n      ]\n    },\n    \"subnetId\": \"\"\n  },\n  \"resizeErrors\": [\n    {\n      \"code\": \"\",\n      \"message\": \"\",\n      \"values\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ]\n    }\n  ],\n  \"resizeTimeout\": \"\",\n  \"startTask\": {\n    \"commandLine\": \"\",\n    \"containerSettings\": {\n      \"containerRunOptions\": \"\",\n      \"imageName\": \"\",\n      \"registry\": {\n        \"password\": \"\",\n        \"registryServer\": \"\",\n        \"username\": \"\"\n      }\n    },\n    \"environmentSettings\": [\n      {\n        \"name\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"maxTaskRetryCount\": {{faker 'random.number'}},\n    \"resourceFiles\": [\n      {\n        \"blobSource\": \"\",\n        \"fileMode\": \"\",\n        \"filePath\": \"\"\n      }\n    ],\n    \"userIdentity\": {\n      \"autoUser\": {\n        \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n        \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n      },\n      \"username\": \"\"\n    },\n    \"waitForSuccess\": {{faker 'random.boolean'}}\n  },\n  \"state\": \"{{oneOf (array 'active' 'deleting' 'upgrading')}}\",\n  \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n  \"stats\": {\n    \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n    \"resourceStats\": {\n      \"avgCPUPercentage\": {{faker 'random.float'}},\n      \"avgDiskGiB\": {{faker 'random.float'}},\n      \"avgMemoryGiB\": {{faker 'random.float'}},\n      \"diskReadGiB\": {{faker 'random.float'}},\n      \"diskReadIOps\": {{faker 'random.number'}},\n      \"diskWriteGiB\": {{faker 'random.float'}},\n      \"diskWriteIOps\": {{faker 'random.number'}},\n      \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n      \"networkReadGiB\": {{faker 'random.float'}},\n      \"networkWriteGiB\": {{faker 'random.float'}},\n      \"peakDiskGiB\": {{faker 'random.float'}},\n      \"peakMemoryGiB\": {{faker 'random.float'}},\n      \"startTime\": \"{{faker 'date.recent' 365}}\"\n    },\n    \"startTime\": \"{{faker 'date.recent' 365}}\",\n    \"url\": \"\",\n    \"usageStats\": {\n      \"dedicatedCoreTime\": \"\",\n      \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n      \"startTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  },\n  \"targetDedicatedNodes\": {{faker 'random.number'}},\n  \"targetLowPriorityNodes\": {{faker 'random.number'}},\n  \"taskSchedulingPolicy\": {\n    \"nodeFillType\": \"{{oneOf (array 'spread' 'pack')}}\"\n  },\n  \"url\": \"\",\n  \"userAccounts\": [\n    {\n      \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n      \"linuxUserConfiguration\": {\n        \"gid\": {{faker 'random.number'}},\n        \"sshPrivateKey\": \"\",\n        \"uid\": {{faker 'random.number'}}\n      },\n      \"name\": \"\",\n      \"password\": \"\"\n    }\n  ],\n  \"virtualMachineConfiguration\": {\n    \"containerConfiguration\": {\n      \"containerImageNames\": [\n        \"\"\n      ],\n      \"containerRegistries\": [\n        {\n          \"password\": \"\",\n          \"registryServer\": \"\",\n          \"username\": \"\"\n        }\n      ],\n      \"type\": \"{{oneOf (array 'dockerCompatible')}}\"\n    },\n    \"dataDisks\": [\n      {\n        \"caching\": \"{{oneOf (array 'none' 'readonly' 'readwrite')}}\",\n        \"diskSizeGB\": {{faker 'random.number'}},\n        \"lun\": {{faker 'random.number'}},\n        \"storageAccountType\": \"{{oneOf (array 'standard_lrs' 'premium_lrs')}}\"\n      }\n    ],\n    \"imageReference\": {\n      \"offer\": \"\",\n      \"publisher\": \"\",\n      \"sku\": \"\",\n      \"version\": \"\",\n      \"virtualMachineImageId\": \"\"\n    },\n    \"licenseType\": \"\",\n    \"nodeAgentSKUId\": \"\",\n    \"osDisk\": {\n      \"caching\": \"{{oneOf (array 'none' 'readonly' 'readwrite')}}\"\n    },\n    \"windowsConfiguration\": {\n      \"enableAutomaticUpdates\": {{faker 'random.boolean'}}\n    }\n  },\n  \"vmSize\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the pool.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b32bb213-816c-4d9f-99a4-ea53e6350a63",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "52b513e8-3bf4-452d-84ce-722f727e14e7",
      "documentation": "Gets basic properties of a pool.",
      "method": "head",
      "endpoint": "pools/:poolId",
      "responses": [
        {
          "uuid": "304a3b1e-e41c-41da-be81-c7173fe2a64e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing headers related to the pool, if it exists.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "deddf024-1480-4fff-bc46-01ef9b0d3b8a",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "The pool does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4adb4fe1-9666-4ef4-a6a3-0802a6a7b74d",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7b3267db-f6e6-48aa-8082-a2a6b22f7f3e",
      "documentation": "Updates the properties of the specified pool.",
      "method": "patch",
      "endpoint": "pools/:poolId",
      "responses": [
        {
          "uuid": "e5ceea29-a2d0-44c2-8850-90da08e36185",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "03e919e6-96b5-403c-9560-af515de0784b",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a83b2371-51ca-40c1-9d04-5e6be5420e8c",
      "documentation": "Disables automatic scaling for a pool.",
      "method": "post",
      "endpoint": "pools/:poolId/disableautoscale",
      "responses": [
        {
          "uuid": "0c51f45f-e8fd-4fff-90dd-356cbd8e7dd0",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "403457ca-4e16-4f80-bbff-63f61e9cf8ec",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6266756f-5d32-4e93-9046-effa7409fb0b",
      "documentation": "Enables automatic scaling for a pool.",
      "method": "post",
      "endpoint": "pools/:poolId/enableautoscale",
      "responses": [
        {
          "uuid": "752e935b-c5a5-4e4c-8cbf-1e0e5dd4bf9e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2700b4f5-ae00-4a84-b0e8-b4842d319870",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c95f1be5-6a32-42c2-ac4f-60d5a4b1dd99",
      "documentation": "Gets the result of evaluating an automatic scaling formula on the pool.",
      "method": "post",
      "endpoint": "pools/:poolId/evaluateautoscale",
      "responses": [
        {
          "uuid": "5ea0c148-5956-46bb-b640-6f864d17b2d7",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"values\": [\n      {\n        \"name\": \"\",\n        \"value\": \"\"\n      }\n    ]\n  },\n  \"results\": \"\",\n  \"timestamp\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the results of the autoscale evaluation.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "23fc6ebb-88c9-48eb-b1c8-5f991ac83ded",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "84e74d5e-0719-4a14-ae71-f8deda1050a1",
      "documentation": "Lists the compute nodes in the specified pool.",
      "method": "get",
      "endpoint": "pools/:poolId/nodes",
      "responses": [
        {
          "uuid": "40ac0c11-f227-49e7-be7c-cf3a7308c9ef",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"affinityId\": \"\",\n      \"allocationTime\": \"{{faker 'date.recent' 365}}\",\n      \"certificateReferences\": [\n        {\n          \"storeLocation\": \"{{oneOf (array 'currentuser' 'localmachine')}}\",\n          \"storeName\": \"\",\n          \"thumbprint\": \"\",\n          \"thumbprintAlgorithm\": \"\",\n          \"visibility\": [\n            \"{{oneOf (array 'starttask' 'task' 'remoteuser')}}\"\n          ]\n        }\n      ],\n      \"endpointConfiguration\": {\n        \"inboundEndpoints\": [\n          {\n            \"backendPort\": {{faker 'random.number'}},\n            \"frontendPort\": {{faker 'random.number'}},\n            \"name\": \"\",\n            \"protocol\": \"{{oneOf (array 'tcp' 'udp')}}\",\n            \"publicFQDN\": \"\",\n            \"publicIPAddress\": \"\"\n          }\n        ]\n      },\n      \"errors\": [\n        {\n          \"code\": \"\",\n          \"errorDetails\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"message\": \"\"\n        }\n      ],\n      \"id\": \"\",\n      \"ipAddress\": \"\",\n      \"isDedicated\": {{faker 'random.boolean'}},\n      \"lastBootTime\": \"{{faker 'date.recent' 365}}\",\n      \"nodeAgentInfo\": {\n        \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n        \"version\": \"\"\n      },\n      \"recentTasks\": [\n        {\n          \"executionInfo\": {\n            \"containerInfo\": {\n              \"containerId\": \"\",\n              \"error\": \"\",\n              \"state\": \"\"\n            },\n            \"endTime\": \"{{faker 'date.recent' 365}}\",\n            \"exitCode\": {{faker 'random.number'}},\n            \"failureInfo\": {\n              \"category\": \"{{oneOf (array 'usererror' 'servererror')}}\",\n              \"code\": \"\",\n              \"details\": [\n                {\n                  \"name\": \"\",\n                  \"value\": \"\"\n                }\n              ],\n              \"message\": \"\"\n            },\n            \"lastRequeueTime\": \"{{faker 'date.recent' 365}}\",\n            \"lastRetryTime\": \"{{faker 'date.recent' 365}}\",\n            \"requeueCount\": {{faker 'random.number'}},\n            \"result\": \"{{oneOf (array 'success' 'failure')}}\",\n            \"retryCount\": {{faker 'random.number'}},\n            \"startTime\": \"{{faker 'date.recent' 365}}\"\n          },\n          \"jobId\": \"\",\n          \"subtaskId\": {{faker 'random.number'}},\n          \"taskId\": \"\",\n          \"taskState\": \"{{oneOf (array 'active' 'preparing' 'running' 'completed')}}\",\n          \"taskUrl\": \"\"\n        }\n      ],\n      \"runningTasksCount\": {{faker 'random.number'}},\n      \"schedulingState\": \"{{oneOf (array 'enabled' 'disabled')}}\",\n      \"startTask\": {\n        \"commandLine\": \"\",\n        \"containerSettings\": {\n          \"containerRunOptions\": \"\",\n          \"imageName\": \"\",\n          \"registry\": {\n            \"password\": \"\",\n            \"registryServer\": \"\",\n            \"username\": \"\"\n          }\n        },\n        \"environmentSettings\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"maxTaskRetryCount\": {{faker 'random.number'}},\n        \"resourceFiles\": [\n          {\n            \"blobSource\": \"\",\n            \"fileMode\": \"\",\n            \"filePath\": \"\"\n          }\n        ],\n        \"userIdentity\": {\n          \"autoUser\": {\n            \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n            \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n          },\n          \"username\": \"\"\n        },\n        \"waitForSuccess\": {{faker 'random.boolean'}}\n      },\n      \"startTaskInfo\": {\n        \"containerInfo\": {\n          \"containerId\": \"\",\n          \"error\": \"\",\n          \"state\": \"\"\n        },\n        \"endTime\": \"{{faker 'date.recent' 365}}\",\n        \"exitCode\": {{faker 'random.number'}},\n        \"failureInfo\": {\n          \"category\": \"{{oneOf (array 'usererror' 'servererror')}}\",\n          \"code\": \"\",\n          \"details\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"message\": \"\"\n        },\n        \"lastRetryTime\": \"{{faker 'date.recent' 365}}\",\n        \"result\": \"{{oneOf (array 'success' 'failure')}}\",\n        \"retryCount\": {{faker 'random.number'}},\n        \"startTime\": \"{{faker 'date.recent' 365}}\",\n        \"state\": \"{{oneOf (array 'running' 'completed')}}\"\n      },\n      \"state\": \"{{oneOf (array 'idle' 'rebooting' 'reimaging' 'running' 'unusable' 'creating' 'starting' 'waitingforstarttask' 'starttaskfailed' 'unknown' 'leavingpool' 'offline' 'preempted')}}\",\n      \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"totalTasksRun\": {{faker 'random.number'}},\n      \"totalTasksSucceeded\": {{faker 'random.number'}},\n      \"url\": \"\",\n      \"vmSize\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the list of nodes.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cd3704be-29d5-4253-9400-53e27567d677",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f3aaaa90-af4d-47a4-b185-8e86e7b83446",
      "documentation": "Gets information about the specified compute node.",
      "method": "get",
      "endpoint": "pools/:poolId/nodes/:nodeId",
      "responses": [
        {
          "uuid": "12789e15-c276-4571-99ed-0cb12bc3ef01",
          "body": "{\n  \"affinityId\": \"\",\n  \"allocationTime\": \"{{faker 'date.recent' 365}}\",\n  \"certificateReferences\": [\n    {\n      \"storeLocation\": \"{{oneOf (array 'currentuser' 'localmachine')}}\",\n      \"storeName\": \"\",\n      \"thumbprint\": \"\",\n      \"thumbprintAlgorithm\": \"\",\n      \"visibility\": [\n        \"{{oneOf (array 'starttask' 'task' 'remoteuser')}}\"\n      ]\n    }\n  ],\n  \"endpointConfiguration\": {\n    \"inboundEndpoints\": [\n      {\n        \"backendPort\": {{faker 'random.number'}},\n        \"frontendPort\": {{faker 'random.number'}},\n        \"name\": \"\",\n        \"protocol\": \"{{oneOf (array 'tcp' 'udp')}}\",\n        \"publicFQDN\": \"\",\n        \"publicIPAddress\": \"\"\n      }\n    ]\n  },\n  \"errors\": [\n    {\n      \"code\": \"\",\n      \"errorDetails\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"message\": \"\"\n    }\n  ],\n  \"id\": \"\",\n  \"ipAddress\": \"\",\n  \"isDedicated\": {{faker 'random.boolean'}},\n  \"lastBootTime\": \"{{faker 'date.recent' 365}}\",\n  \"nodeAgentInfo\": {\n    \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n    \"version\": \"\"\n  },\n  \"recentTasks\": [\n    {\n      \"executionInfo\": {\n        \"containerInfo\": {\n          \"containerId\": \"\",\n          \"error\": \"\",\n          \"state\": \"\"\n        },\n        \"endTime\": \"{{faker 'date.recent' 365}}\",\n        \"exitCode\": {{faker 'random.number'}},\n        \"failureInfo\": {\n          \"category\": \"{{oneOf (array 'usererror' 'servererror')}}\",\n          \"code\": \"\",\n          \"details\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"message\": \"\"\n        },\n        \"lastRequeueTime\": \"{{faker 'date.recent' 365}}\",\n        \"lastRetryTime\": \"{{faker 'date.recent' 365}}\",\n        \"requeueCount\": {{faker 'random.number'}},\n        \"result\": \"{{oneOf (array 'success' 'failure')}}\",\n        \"retryCount\": {{faker 'random.number'}},\n        \"startTime\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"jobId\": \"\",\n      \"subtaskId\": {{faker 'random.number'}},\n      \"taskId\": \"\",\n      \"taskState\": \"{{oneOf (array 'active' 'preparing' 'running' 'completed')}}\",\n      \"taskUrl\": \"\"\n    }\n  ],\n  \"runningTasksCount\": {{faker 'random.number'}},\n  \"schedulingState\": \"{{oneOf (array 'enabled' 'disabled')}}\",\n  \"startTask\": {\n    \"commandLine\": \"\",\n    \"containerSettings\": {\n      \"containerRunOptions\": \"\",\n      \"imageName\": \"\",\n      \"registry\": {\n        \"password\": \"\",\n        \"registryServer\": \"\",\n        \"username\": \"\"\n      }\n    },\n    \"environmentSettings\": [\n      {\n        \"name\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"maxTaskRetryCount\": {{faker 'random.number'}},\n    \"resourceFiles\": [\n      {\n        \"blobSource\": \"\",\n        \"fileMode\": \"\",\n        \"filePath\": \"\"\n      }\n    ],\n    \"userIdentity\": {\n      \"autoUser\": {\n        \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n        \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n      },\n      \"username\": \"\"\n    },\n    \"waitForSuccess\": {{faker 'random.boolean'}}\n  },\n  \"startTaskInfo\": {\n    \"containerInfo\": {\n      \"containerId\": \"\",\n      \"error\": \"\",\n      \"state\": \"\"\n    },\n    \"endTime\": \"{{faker 'date.recent' 365}}\",\n    \"exitCode\": {{faker 'random.number'}},\n    \"failureInfo\": {\n      \"category\": \"{{oneOf (array 'usererror' 'servererror')}}\",\n      \"code\": \"\",\n      \"details\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"message\": \"\"\n    },\n    \"lastRetryTime\": \"{{faker 'date.recent' 365}}\",\n    \"result\": \"{{oneOf (array 'success' 'failure')}}\",\n    \"retryCount\": {{faker 'random.number'}},\n    \"startTime\": \"{{faker 'date.recent' 365}}\",\n    \"state\": \"{{oneOf (array 'running' 'completed')}}\"\n  },\n  \"state\": \"{{oneOf (array 'idle' 'rebooting' 'reimaging' 'running' 'unusable' 'creating' 'starting' 'waitingforstarttask' 'starttaskfailed' 'unknown' 'leavingpool' 'offline' 'preempted')}}\",\n  \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n  \"totalTasksRun\": {{faker 'random.number'}},\n  \"totalTasksSucceeded\": {{faker 'random.number'}},\n  \"url\": \"\",\n  \"vmSize\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the compute node.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "09810260-ba4d-42a5-a7d3-fdcad9353eab",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "175f983d-51fd-48e3-883a-94884307a597",
      "documentation": "Disables task scheduling on the specified compute node.",
      "method": "post",
      "endpoint": "pools/:poolId/nodes/:nodeId/disablescheduling",
      "responses": [
        {
          "uuid": "a3958607-ba26-4327-b2e4-befae6934669",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6c64c1d4-b0eb-4e06-9dfb-19c63bf2ce9b",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6e1cd3eb-22ba-4d14-856d-4a55f152f6c3",
      "documentation": "Enables task scheduling on the specified compute node.",
      "method": "post",
      "endpoint": "pools/:poolId/nodes/:nodeId/enablescheduling",
      "responses": [
        {
          "uuid": "4214a902-abc0-40f8-a98f-627ec99854c6",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "30701ede-2986-4ab2-8c1b-b82d41b6228d",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1890d13e-b71f-4d1d-81c8-7d88e5769213",
      "documentation": "Lists all of the files in task directories on the specified compute node.",
      "method": "get",
      "endpoint": "pools/:poolId/nodes/:nodeId/files",
      "responses": [
        {
          "uuid": "d2c8037a-95b2-47ec-a6fe-bdf8a7bf4bcc",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"isDirectory\": {{faker 'random.boolean'}},\n      \"name\": \"\",\n      \"properties\": {\n        \"contentLength\": {{faker 'random.number'}},\n        \"contentType\": \"\",\n        \"creationTime\": \"{{faker 'date.recent' 365}}\",\n        \"fileMode\": \"\",\n        \"lastModified\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"url\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the list of files.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d16c83ae-4dab-4a85-85ae-39ec1c46e76f",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "abcd575e-2688-4f45-87f4-75dd90312941",
      "documentation": "Deletes the specified file from the compute node.",
      "method": "delete",
      "endpoint": "pools/:poolId/nodes/:nodeId/files/:filePath",
      "responses": [
        {
          "uuid": "ad0c9c3d-8b7f-4a68-9d1a-484d36c207a5",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3b074651-e2dd-4507-a0dc-77450cf34195",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6eea9ebd-cd76-4dfa-ae76-22c1aafcf2cf",
      "documentation": "Returns the content of the specified compute node file.",
      "method": "get",
      "endpoint": "pools/:poolId/nodes/:nodeId/files/:filePath",
      "responses": [
        {
          "uuid": "e255f89e-8468-490b-9888-bf69da8538e9",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "The file content.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Content-Length",
              "value": ""
            },
            {
              "key": "Content-Type",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "ocp-batch-file-isdirectory",
              "value": ""
            },
            {
              "key": "ocp-batch-file-mode",
              "value": ""
            },
            {
              "key": "ocp-batch-file-url",
              "value": ""
            },
            {
              "key": "ocp-creation-time",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9af7a846-f09d-4c45-96cd-57a6e459c634",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0b499308-15aa-49ec-8b75-9d90499f7b97",
      "documentation": "Gets the properties of the specified compute node file.",
      "method": "head",
      "endpoint": "pools/:poolId/nodes/:nodeId/files/:filePath",
      "responses": [
        {
          "uuid": "77217503-ee07-4fdd-b77a-0d3a2c10889c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the file properties.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Content-Length",
              "value": ""
            },
            {
              "key": "Content-Type",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "ocp-batch-file-isdirectory",
              "value": ""
            },
            {
              "key": "ocp-batch-file-mode",
              "value": ""
            },
            {
              "key": "ocp-batch-file-url",
              "value": ""
            },
            {
              "key": "ocp-creation-time",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0eabd3c0-b595-497c-b93b-46dd5eedd718",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8ab42b09-61df-4606-8240-1765c0532df6",
      "documentation": "Gets the Remote Desktop Protocol file for the specified compute node.",
      "method": "get",
      "endpoint": "pools/:poolId/nodes/:nodeId/rdp",
      "responses": [
        {
          "uuid": "9b40f566-0f0a-4878-b2e5-68f30e293336",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the RDP information.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a6c9a800-76fc-4deb-93d6-d6fd8ade3e8a",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8081925d-4925-4c61-b458-94c476e10931",
      "documentation": "Restarts the specified compute node.",
      "method": "post",
      "endpoint": "pools/:poolId/nodes/:nodeId/reboot",
      "responses": [
        {
          "uuid": "2e683a8f-9f56-4ae9-b6ff-df3d0d86eb2f",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "efc76836-0764-4d4c-ad86-973b61205788",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "92d7ae2a-48d7-4258-b339-9594cd52ed41",
      "documentation": "Reinstalls the operating system on the specified compute node.",
      "method": "post",
      "endpoint": "pools/:poolId/nodes/:nodeId/reimage",
      "responses": [
        {
          "uuid": "6d67418b-52a9-4db9-aa59-bddefdfd6ab1",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7b503c91-aa05-4032-9b0c-0deaea645dc3",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f3514441-b449-46c6-b3fb-942bf03dfcfb",
      "documentation": "Gets the settings required for remote login to a compute node.",
      "method": "get",
      "endpoint": "pools/:poolId/nodes/:nodeId/remoteloginsettings",
      "responses": [
        {
          "uuid": "37e4ec99-a89b-4590-afc1-ac0aaf8f582a",
          "body": "{\n  \"remoteLoginIPAddress\": \"\",\n  \"remoteLoginPort\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the login settings.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9c106882-7db6-4dfc-9303-0d04b5e97772",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1b13903e-bdfe-4a3d-9c0b-76720898d76e",
      "documentation": "Upload Azure Batch service log files from the specified compute node to Azure Blob Storage.",
      "method": "post",
      "endpoint": "pools/:poolId/nodes/:nodeId/uploadbatchservicelogs",
      "responses": [
        {
          "uuid": "a9a78d19-1170-4a38-8f58-a0f4c0eefc34",
          "body": "{\n  \"numberOfFilesUploaded\": {{faker 'random.number'}},\n  \"virtualDirectoryName\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3e32be48-0028-4881-8b1c-0e4a6a704e74",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "77cb39e3-c0b6-4191-abf7-3370f455a20b",
      "documentation": "Adds a user account to the specified compute node.",
      "method": "post",
      "endpoint": "pools/:poolId/nodes/:nodeId/users",
      "responses": [
        {
          "uuid": "e712496e-8014-4410-a551-10bbd8622d0e",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5d2749f5-19ec-4c33-8d16-a6e4537ef862",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ab065f3d-bd4c-4fa2-90eb-246663825abd",
      "documentation": "Deletes a user account from the specified compute node.",
      "method": "delete",
      "endpoint": "pools/:poolId/nodes/:nodeId/users/:userName",
      "responses": [
        {
          "uuid": "96d2fd11-e1ea-45e1-8927-7a0285a6a1a5",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c094006a-6acb-4315-ab1d-b11c684611ad",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a430276f-4bb1-4d40-b035-4693607e8ae1",
      "documentation": "Updates the password and expiration time of a user account on the specified compute node.",
      "method": "put",
      "endpoint": "pools/:poolId/nodes/:nodeId/users/:userName",
      "responses": [
        {
          "uuid": "32249ce7-75a1-425f-bd59-fd2e39b62ce6",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c471855e-e197-4953-b2cb-a761ed0d5569",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "68a47e0c-c10a-475e-aa90-88b7e8e6ce34",
      "documentation": "Removes compute nodes from the specified pool.",
      "method": "post",
      "endpoint": "pools/:poolId/removenodes",
      "responses": [
        {
          "uuid": "8b2cd876-48de-4794-86f9-1c02c17505d0",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d392dafc-1edf-40ee-9cf5-e0f175335b2a",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cdf94268-a8a3-4989-85fe-7f7ed0ce0e8c",
      "documentation": "Changes the number of compute nodes that are assigned to a pool.",
      "method": "post",
      "endpoint": "pools/:poolId/resize",
      "responses": [
        {
          "uuid": "f506635d-4a62-470a-9e83-e7b46fb6ad99",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fb9b73c7-29df-4896-af2a-d724fbb19b4e",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4d6611c6-016c-42d7-a209-23ef63f2f9cc",
      "documentation": "Stops an ongoing resize operation on the pool.",
      "method": "post",
      "endpoint": "pools/:poolId/stopresize",
      "responses": [
        {
          "uuid": "e73088f6-ff98-46f0-87db-0323b10b7695",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bf96b1e9-d3cb-463f-bf13-3ed52e9b603f",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service. If you call this API on a pool which is not in the resizing state, the request fails with HTTP status code 409.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "33fcea64-9e12-44bf-9c87-7a1c14484ead",
      "documentation": "Updates the properties of the specified pool.",
      "method": "post",
      "endpoint": "pools/:poolId/updateproperties",
      "responses": [
        {
          "uuid": "7688650b-383f-4d44-83b2-55fb940786f8",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cb20218f-1680-4fb7-84a7-c7475840ced7",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a5eff738-36a2-4c8f-a3c1-2b95765aa5b6",
      "documentation": "Upgrades the operating system of the specified pool.",
      "method": "post",
      "endpoint": "pools/:poolId/upgradeos",
      "responses": [
        {
          "uuid": "c0d12186-10ba-473e-ab41-1465a51273a7",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7104f333-8f5d-4c01-af89-9dbf8d3736dc",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8227b036-8b9c-4f39-8119-ee77593d1e79",
      "documentation": "Lists the usage metrics, aggregated by pool across individual time intervals, for the specified account.",
      "method": "get",
      "endpoint": "poolusagemetrics",
      "responses": [
        {
          "uuid": "d8916ceb-2985-4267-809d-4b01492ff7b1",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"dataEgressGiB\": {{faker 'random.float'}},\n      \"dataIngressGiB\": {{faker 'random.float'}},\n      \"endTime\": \"{{faker 'date.recent' 365}}\",\n      \"poolId\": \"\",\n      \"startTime\": \"{{faker 'date.recent' 365}}\",\n      \"totalCoreHours\": {{faker 'random.float'}},\n      \"vmSize\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the list of pool usage details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0c4a2167-ef6c-4728-9351-6684e219be02",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}