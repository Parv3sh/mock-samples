{
  "uuid": "9c8c972e-08fb-48c4-beb7-dec4140057c7",
  "lastMigration": 19,
  "name": "StorageManagementClient",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "d3fc9150-bb53-4f68-bed6-42389048c458",
      "documentation": "Start reclaim storage capacity on deleted storage objects.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/providers/Microsoft.Storage.Admin/locations/:location/reclaimStorageCapacity",
      "responses": [
        {
          "uuid": "fbab3cd7-5884-47c0-b834-c77414a5d43c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK -- Reclaim storage capacity has completed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f7153650-e9c2-42e4-9316-f543bc576953",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted -- reclaim storage capacity operation triggered; operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a879c5be-0d2f-4087-ab46-f6d31551c2ce",
          "body": "{\n  \"code\": \"\",\n  \"details\": [\n    \"\"\n  ],\n  \"message\": \"\",\n  \"target\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error Response.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "590c276d-1e0c-4ad6-82c6-fe1ca0f80104",
      "documentation": "Returns a list of storage accounts.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/providers/Microsoft.Storage.Admin/locations/:location/storageaccounts",
      "responses": [
        {
          "uuid": "5fbdadb0-4ee8-4b31-8708-7a5c43d98d94",
          "body": "{\n  \"@odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"id\": \"\",\n      \"location\": \"\",\n      \"name\": \"\",\n      \"type\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK -- The list of storage accounts has been returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dc94bb8e-54d9-4817-8e71-22922f538879",
          "body": "{\n  \"code\": \"\",\n  \"details\": [\n    \"\"\n  ],\n  \"message\": \"\",\n  \"target\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error Response.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bb2897c3-2bd0-4923-a64f-6096261d752c",
      "documentation": "Returns the requested storage account.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/providers/Microsoft.Storage.Admin/locations/:location/storageaccounts/:accountId",
      "responses": [
        {
          "uuid": "66843e77-0e61-4f24-9b20-8f87f20cf5c3",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK -- The storage account has been returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0c094e79-93cc-41f2-a2ac-f847f319282f",
          "body": "{\n  \"code\": \"\",\n  \"details\": [\n    \"\"\n  ],\n  \"message\": \"\",\n  \"target\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error Response.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5064f9c7-cd7a-4713-a441-3280c33b6c18",
      "documentation": "Undelete a deleted storage account with new account name if the a new name is provided.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/providers/Microsoft.Storage.Admin/locations/:location/storageaccounts/:accountId/undelete",
      "responses": [
        {
          "uuid": "449273ce-0e57-47fa-9232-a7978b028431",
          "body": "{\n  \"accountId\": \"\",\n  \"newAccountName\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK -- Undelete either has been performed or account was not deleted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a169cb83-21da-4198-9508-5dbd4092a7b5",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted -- undelete operation trigged; operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "80bb6c58-cd0c-4bd5-b662-082619feaff1",
          "body": "{\n  \"code\": \"\",\n  \"details\": [\n    \"\"\n  ],\n  \"message\": \"\",\n  \"target\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error Response.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}