{
  "uuid": "d88f99c1-5371-45f7-8823-3e1a67fbfea2",
  "lastMigration": 19,
  "name": "StorageManagementClient",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "dc19af8e-9fa1-46a2-9284-49b1280f5081",
      "documentation": "Start reclaim storage capacity on deleted storage objects.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/providers/Microsoft.Storage.Admin/locations/:location/reclaimStorageCapacity",
      "responses": [
        {
          "uuid": "0ebfe110-4d63-4eae-87a3-df431cdbe598",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK -- Reclaim storage capacity has completed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "01e1836f-39dc-4f14-99ee-19995b480312",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted -- reclaim storage capacity operation triggered; operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1b7555ad-8770-4b0d-9757-0642abfdf55a",
          "body": "{\n  \"code\": \"\",\n  \"details\": [\n    \"\"\n  ],\n  \"message\": \"\",\n  \"target\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error Response.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4fb9ceff-a210-41bb-b491-1b6ffb4a830f",
      "documentation": "Returns a list of storage accounts.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/providers/Microsoft.Storage.Admin/locations/:location/storageaccounts",
      "responses": [
        {
          "uuid": "f15d2770-c0f4-4246-8ad4-dbff7cc810dd",
          "body": "{\n  \"@odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"id\": \"\",\n      \"location\": \"\",\n      \"name\": \"\",\n      \"type\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK -- The list of storage accounts has been returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3eb69206-a3eb-44b5-b921-7667f28c83e1",
          "body": "{\n  \"code\": \"\",\n  \"details\": [\n    \"\"\n  ],\n  \"message\": \"\",\n  \"target\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error Response.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6683cb03-157f-4ae4-b1b2-989af7107eb9",
      "documentation": "Returns the requested storage account.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/providers/Microsoft.Storage.Admin/locations/:location/storageaccounts/:accountId",
      "responses": [
        {
          "uuid": "a589af66-b5f1-477d-b505-c23ad646b20d",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK -- The storage account has been returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e0f2bc3f-52af-4bde-ae61-227c0bb3c1be",
          "body": "{\n  \"code\": \"\",\n  \"details\": [\n    \"\"\n  ],\n  \"message\": \"\",\n  \"target\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error Response.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "93c57419-3f15-4bc3-9d74-dc4871117f3b",
      "documentation": "Undelete a deleted storage account with new account name if the a new name is provided.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/providers/Microsoft.Storage.Admin/locations/:location/storageaccounts/:accountId/undelete",
      "responses": [
        {
          "uuid": "a2ce8efb-d4b5-4805-900e-271ba19db62a",
          "body": "{\n  \"accountId\": \"\",\n  \"newAccountName\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK -- Undelete either has been performed or account was not deleted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b7cc39b8-f5cd-480c-99d7-9bae9a5ea9dd",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted -- undelete operation trigged; operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0f0606e7-c153-445f-997a-50e4a5e19b87",
          "body": "{\n  \"code\": \"\",\n  \"details\": [\n    \"\"\n  ],\n  \"message\": \"\",\n  \"target\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error Response.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}