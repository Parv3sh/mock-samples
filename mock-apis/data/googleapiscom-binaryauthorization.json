{
  "uuid": "d5f5a3a2-dd03-4af7-a4df-c5b83de6691b",
  "lastMigration": 19,
  "name": "Binary Authorization API",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "43da9c4d-9178-4161-b1d1-723eabcfed42",
      "documentation": "Returns whether the given Attestation for the given image URI was signed by the given Attestor",
      "method": "post",
      "endpoint": "v1beta1/:attestor:validateAttestationOccurrence",
      "responses": [
        {
          "uuid": "f6bb6d26-a573-4924-b53f-b8c72dad78ea",
          "body": "{\n  \"denialReason\": \"\",\n  \"result\": \"{{oneOf (array 'RESULT_UNSPECIFIED' 'VERIFIED' 'ATTESTATION_NOT_VERIFIABLE')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f4bb764f-2112-45bf-9ac9-4255dc1d3768",
      "documentation": "Deletes an attestor. Returns NOT_FOUND if the attestor does not exist.",
      "method": "delete",
      "endpoint": "v1beta1/:name",
      "responses": [
        {
          "uuid": "db501387-d225-45fc-95f2-895637763c55",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1be2d66f-3442-4fe0-b046-c9e06e66ed97",
      "documentation": "Gets the current system policy in the specified location.",
      "method": "get",
      "endpoint": "v1beta1/:name",
      "responses": [
        {
          "uuid": "78cc157d-179f-47e5-ba85-cba5d721609a",
          "body": "{\n  \"admissionWhitelistPatterns\": [\n    {\n      \"namePattern\": \"\"\n    }\n  ],\n  \"clusterAdmissionRules\": {},\n  \"defaultAdmissionRule\": {\n    \"enforcementMode\": \"{{oneOf (array 'ENFORCEMENT_MODE_UNSPECIFIED' 'ENFORCED_BLOCK_AND_AUDIT_LOG' 'DRYRUN_AUDIT_LOG_ONLY')}}\",\n    \"evaluationMode\": \"{{oneOf (array 'EVALUATION_MODE_UNSPECIFIED' 'ALWAYS_ALLOW' 'REQUIRE_ATTESTATION' 'ALWAYS_DENY')}}\",\n    \"requireAttestationsBy\": [\n      \"\"\n    ]\n  },\n  \"description\": \"\",\n  \"etag\": \"\",\n  \"globalPolicyEvaluationMode\": \"{{oneOf (array 'GLOBAL_POLICY_EVALUATION_MODE_UNSPECIFIED' 'ENABLE' 'DISABLE')}}\",\n  \"istioServiceIdentityAdmissionRules\": {},\n  \"kubernetesNamespaceAdmissionRules\": {},\n  \"kubernetesServiceAccountAdmissionRules\": {},\n  \"name\": \"\",\n  \"updateTime\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a1b160f7-db1f-488e-84da-3a27fc7fdaf2",
      "documentation": "Updates an attestor. Returns NOT_FOUND if the attestor does not exist.",
      "method": "put",
      "endpoint": "v1beta1/:name",
      "responses": [
        {
          "uuid": "9f046788-bb24-41c4-9bb9-107c39fb0c2d",
          "body": "{\n  \"description\": \"\",\n  \"etag\": \"\",\n  \"name\": \"\",\n  \"updateTime\": \"\",\n  \"userOwnedDrydockNote\": {\n    \"delegationServiceAccountEmail\": \"\",\n    \"noteReference\": \"\",\n    \"publicKeys\": [\n      {\n        \"asciiArmoredPgpPublicKey\": \"\",\n        \"comment\": \"\",\n        \"id\": \"\",\n        \"pkixPublicKey\": {\n          \"publicKeyPem\": \"\",\n          \"signatureAlgorithm\": \"{{oneOf (array 'SIGNATURE_ALGORITHM_UNSPECIFIED' 'RSA_PSS_2048_SHA256' 'RSA_SIGN_PSS_2048_SHA256' 'RSA_PSS_3072_SHA256' 'RSA_SIGN_PSS_3072_SHA256' 'RSA_PSS_4096_SHA256' 'RSA_SIGN_PSS_4096_SHA256' 'RSA_PSS_4096_SHA512' 'RSA_SIGN_PSS_4096_SHA512' 'RSA_SIGN_PKCS1_2048_SHA256' 'RSA_SIGN_PKCS1_3072_SHA256' 'RSA_SIGN_PKCS1_4096_SHA256' 'RSA_SIGN_PKCS1_4096_SHA512' 'ECDSA_P256_SHA256' 'EC_SIGN_P256_SHA256' 'ECDSA_P384_SHA384' 'EC_SIGN_P384_SHA384' 'ECDSA_P521_SHA512' 'EC_SIGN_P521_SHA512')}}\"\n        }\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "36ad9cc0-81d0-4b64-8f54-a2ee5e1a9ed2",
      "documentation": "Lists attestors. Returns INVALID_ARGUMENT if the project does not exist.",
      "method": "get",
      "endpoint": "v1beta1/:parent/attestors",
      "responses": [
        {
          "uuid": "b52228fa-847d-4d1f-9194-a00dc551610b",
          "body": "{\n  \"attestors\": [\n    {\n      \"description\": \"\",\n      \"etag\": \"\",\n      \"name\": \"\",\n      \"updateTime\": \"\",\n      \"userOwnedDrydockNote\": {\n        \"delegationServiceAccountEmail\": \"\",\n        \"noteReference\": \"\",\n        \"publicKeys\": [\n          {\n            \"asciiArmoredPgpPublicKey\": \"\",\n            \"comment\": \"\",\n            \"id\": \"\",\n            \"pkixPublicKey\": {\n              \"publicKeyPem\": \"\",\n              \"signatureAlgorithm\": \"{{oneOf (array 'SIGNATURE_ALGORITHM_UNSPECIFIED' 'RSA_PSS_2048_SHA256' 'RSA_SIGN_PSS_2048_SHA256' 'RSA_PSS_3072_SHA256' 'RSA_SIGN_PSS_3072_SHA256' 'RSA_PSS_4096_SHA256' 'RSA_SIGN_PSS_4096_SHA256' 'RSA_PSS_4096_SHA512' 'RSA_SIGN_PSS_4096_SHA512' 'RSA_SIGN_PKCS1_2048_SHA256' 'RSA_SIGN_PKCS1_3072_SHA256' 'RSA_SIGN_PKCS1_4096_SHA256' 'RSA_SIGN_PKCS1_4096_SHA512' 'ECDSA_P256_SHA256' 'EC_SIGN_P256_SHA256' 'ECDSA_P384_SHA384' 'EC_SIGN_P384_SHA384' 'ECDSA_P521_SHA512' 'EC_SIGN_P521_SHA512')}}\"\n            }\n          }\n        ]\n      }\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5648bcb0-de16-4e39-83fd-a95e8a84cf77",
      "documentation": "Creates an attestor, and returns a copy of the new attestor. Returns NOT_FOUND if the project does not exist, INVALID_ARGUMENT if the request is malformed, ALREADY_EXISTS if the attestor already exists.",
      "method": "post",
      "endpoint": "v1beta1/:parent/attestors",
      "responses": [
        {
          "uuid": "d6a5fec6-6120-4317-b57d-f50fbbe9c2a1",
          "body": "{\n  \"description\": \"\",\n  \"etag\": \"\",\n  \"name\": \"\",\n  \"updateTime\": \"\",\n  \"userOwnedDrydockNote\": {\n    \"delegationServiceAccountEmail\": \"\",\n    \"noteReference\": \"\",\n    \"publicKeys\": [\n      {\n        \"asciiArmoredPgpPublicKey\": \"\",\n        \"comment\": \"\",\n        \"id\": \"\",\n        \"pkixPublicKey\": {\n          \"publicKeyPem\": \"\",\n          \"signatureAlgorithm\": \"{{oneOf (array 'SIGNATURE_ALGORITHM_UNSPECIFIED' 'RSA_PSS_2048_SHA256' 'RSA_SIGN_PSS_2048_SHA256' 'RSA_PSS_3072_SHA256' 'RSA_SIGN_PSS_3072_SHA256' 'RSA_PSS_4096_SHA256' 'RSA_SIGN_PSS_4096_SHA256' 'RSA_PSS_4096_SHA512' 'RSA_SIGN_PSS_4096_SHA512' 'RSA_SIGN_PKCS1_2048_SHA256' 'RSA_SIGN_PKCS1_3072_SHA256' 'RSA_SIGN_PKCS1_4096_SHA256' 'RSA_SIGN_PKCS1_4096_SHA512' 'ECDSA_P256_SHA256' 'EC_SIGN_P256_SHA256' 'ECDSA_P384_SHA384' 'EC_SIGN_P384_SHA384' 'ECDSA_P521_SHA512' 'EC_SIGN_P521_SHA512')}}\"\n        }\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "311a6641-1467-4898-851d-d9acfeac471c",
      "documentation": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
      "method": "get",
      "endpoint": "v1beta1/:resource:getIamPolicy",
      "responses": [
        {
          "uuid": "0a116760-0222-40aa-9857-0c0c0c059366",
          "body": "{\n  \"bindings\": [\n    {\n      \"condition\": {\n        \"description\": \"\",\n        \"expression\": \"\",\n        \"location\": \"\",\n        \"title\": \"\"\n      },\n      \"members\": [\n        \"\"\n      ],\n      \"role\": \"\"\n    }\n  ],\n  \"etag\": \"\",\n  \"version\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9ea29277-a7da-44a2-b3d4-1a4037721744",
      "documentation": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
      "method": "post",
      "endpoint": "v1beta1/:resource:setIamPolicy",
      "responses": [
        {
          "uuid": "727936ef-7453-42a8-ab2a-114486db04c8",
          "body": "{\n  \"bindings\": [\n    {\n      \"condition\": {\n        \"description\": \"\",\n        \"expression\": \"\",\n        \"location\": \"\",\n        \"title\": \"\"\n      },\n      \"members\": [\n        \"\"\n      ],\n      \"role\": \"\"\n    }\n  ],\n  \"etag\": \"\",\n  \"version\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "79430122-eecc-4871-a18d-e297f03f2aad",
      "documentation": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
      "method": "post",
      "endpoint": "v1beta1/:resource:testIamPermissions",
      "responses": [
        {
          "uuid": "875e08fb-bceb-4b75-883d-d03792025784",
          "body": "{\n  \"permissions\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}