{
  "uuid": "eade0ff7-cd12-4d34-98ce-38522bd7dfae",
  "lastMigration": 19,
  "name": "AWS Data Pipeline",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "0c6f3d96-09d8-4d9f-b0cd-0f49f4a225ff",
      "documentation": "<p>Validates the specified pipeline and starts processing pipeline tasks. If the pipeline does not pass validation, activation fails.</p> <p>If you need to pause the pipeline to investigate an issue with a component, such as a data source or script, call <a>DeactivatePipeline</a>.</p> <p>To activate a finished pipeline, modify the end date for the pipeline and then activate it.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=DataPipeline.ActivatePipeline",
      "responses": [
        {
          "uuid": "b3923980-1e6a-4ded-87a9-7f9c645a294e",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1504f681-ba82-48dc-8fe1-5e0deb221c95",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "PipelineNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "586351e7-56ed-415f-8536-2f99d5e80a70",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "PipelineDeletedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b74f297e-403c-4628-83d2-312fe0107a85",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c4d63d79-8b3d-4de3-bf8a-c46ecf84c494",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8b27ea72-3c3d-481e-b5f0-3864047dae8c",
      "documentation": "Adds or modifies tags for the specified pipeline.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DataPipeline.AddTags",
      "responses": [
        {
          "uuid": "01d01a1b-d5c6-4ab9-a2eb-3672bd70a859",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "21c525b7-9b27-4556-8e9d-ed1f1fa8bd30",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4ce5a19f-0ba7-4760-af25-81d88b52f2a2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c0875534-8149-4de1-9603-a67dbcd6a6ab",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "PipelineNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "358a91a3-107b-436c-bd58-6fe69f5cda69",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "PipelineDeletedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "de3f9118-6d02-4368-aac8-617c46ea2e90",
      "documentation": "Creates a new, empty pipeline. Use <a>PutPipelineDefinition</a> to populate the pipeline.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DataPipeline.CreatePipeline",
      "responses": [
        {
          "uuid": "ff627094-7ff8-4875-820c-02ada8c822b5",
          "body": "{\n  \"pipelineId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "050c98c3-8756-414e-996c-9ccab6a763bd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "29fdc36b-1626-411f-ae1b-b2797c725f19",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "27fd98b1-c5c8-4d32-a0cc-f7508ddbf532",
      "documentation": "<p>Deactivates the specified running pipeline. The pipeline is set to the <code>DEACTIVATING</code> state until the deactivation process completes.</p> <p>To resume a deactivated pipeline, use <a>ActivatePipeline</a>. By default, the pipeline resumes from the last completed execution. Optionally, you can specify the date and time to resume the pipeline.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=DataPipeline.DeactivatePipeline",
      "responses": [
        {
          "uuid": "2bcc71a6-ee85-4be8-912a-ca9ab4bcbea7",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eee62cb8-efd5-46c7-a77a-838c7b1a362f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "PipelineNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "61211caf-829e-4f37-9799-379ad906bf2f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "PipelineDeletedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "42cd7395-f52a-4009-8078-8d613c93c953",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5499349d-1612-4a67-91fa-2bf6bbadeb55",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e2ac1c59-24f9-4f73-9b5b-5ed3e4a02fc9",
      "documentation": "<p>Deletes a pipeline, its pipeline definition, and its run history. AWS Data Pipeline attempts to cancel instances associated with the pipeline that are currently being processed by task runners.</p> <p>Deleting a pipeline cannot be undone. You cannot query or restore a deleted pipeline. To temporarily pause a pipeline instead of deleting it, call <a>SetStatus</a> with the status set to <code>PAUSE</code> on individual components. Components that are paused by <a>SetStatus</a> can be resumed.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=DataPipeline.DeletePipeline",
      "responses": [
        {
          "uuid": "b4195919-4d24-44b2-bd49-a4cdb63ac4fd",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "410bb68b-783a-43cf-a31a-455aae6493c0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "PipelineNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a1ea718e-9155-4c8c-90e3-464a476a6c7a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1e71fce8-0099-44e2-ad69-f73b793f99c3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bf72e470-f49a-4835-8d1e-6e67ff0e848d",
      "documentation": "Gets the object definitions for a set of objects associated with the pipeline. Object definitions are composed of a set of fields that define the properties of the object.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DataPipeline.DescribeObjects",
      "responses": [
        {
          "uuid": "7ef4bc26-8d6f-4d78-818d-8e9a2bb77377",
          "body": "{\n  \"pipelineObjects\": [\n    {\n      \"id\": \"\",\n      \"name\": \"\",\n      \"fields\": [\n        {\n          \"key\": \"\",\n          \"stringValue\": \"\",\n          \"refValue\": \"\"\n        }\n      ]\n    }\n  ],\n  \"marker\": \"\",\n  \"hasMoreResults\": {{faker 'random.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d7544dba-bdaa-4e87-a75e-356a9fa6041b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "058a7144-460a-41de-aaff-3a1fe838f249",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1c384823-ecac-440e-83e0-ef73e5b59c25",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "PipelineNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ff0f95c5-3baa-42a9-8d20-f9d04655fb92",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "PipelineDeletedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a98c5f72-4137-4e76-9006-616c61312d1b",
      "documentation": "<p>Retrieves metadata about one or more pipelines. The information retrieved includes the name of the pipeline, the pipeline identifier, its current state, and the user account that owns the pipeline. Using account credentials, you can retrieve metadata about pipelines that you or your IAM users have created. If you are using an IAM user account, you can retrieve metadata about only those pipelines for which you have read permissions.</p> <p>To retrieve the full pipeline definition instead of metadata about the pipeline, call <a>GetPipelineDefinition</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=DataPipeline.DescribePipelines",
      "responses": [
        {
          "uuid": "42b75c2e-97e6-4ee6-bde0-fe9adeaf3968",
          "body": "{\n  \"pipelineDescriptionList\": [\n    {\n      \"pipelineId\": \"\",\n      \"name\": \"\",\n      \"fields\": [\n        {\n          \"key\": \"\",\n          \"stringValue\": \"\",\n          \"refValue\": \"\"\n        }\n      ],\n      \"description\": \"\",\n      \"tags\": [\n        {\n          \"key\": \"\",\n          \"value\": \"\"\n        }\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a06bfe04-458f-4f4c-9c06-75bb758ce6d6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "PipelineNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3368a2dc-8e1f-4a8e-ae73-e4284c15201d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "PipelineDeletedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "98854dd1-437a-4586-a700-9c7b59e66432",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3b497f05-a7f1-4be6-a4a1-7002ca957c9f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "98a0a561-0e8b-4db2-bc0c-56d48913400e",
      "documentation": "Task runners call <code>EvaluateExpression</code> to evaluate a string in the context of the specified object. For example, a task runner can evaluate SQL queries stored in Amazon S3.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DataPipeline.EvaluateExpression",
      "responses": [
        {
          "uuid": "843c47e6-7000-46e8-9488-c67577a75cd9",
          "body": "{\n  \"evaluatedExpression\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8fc0131a-9d8e-4b04-8b20-770aa324d454",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7dfc4abc-d1c1-4f68-94ff-da59f070c09b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "TaskNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9bdd5e39-e093-4496-8fb0-25cad2b5f22b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "931716cf-dcd2-4ce2-a59e-8acbbdadb935",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "PipelineNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f1d568c9-67eb-482d-b5e6-c5e98eb206f3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "PipelineDeletedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "468dcbac-0814-4959-8d79-9d218b375035",
      "documentation": "Gets the definition of the specified pipeline. You can call <code>GetPipelineDefinition</code> to retrieve the pipeline definition that you provided using <a>PutPipelineDefinition</a>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DataPipeline.GetPipelineDefinition",
      "responses": [
        {
          "uuid": "0f5a78cf-8051-40c0-827f-6cd377d7b2eb",
          "body": "{\n  \"pipelineObjects\": [\n    {\n      \"id\": \"\",\n      \"name\": \"\",\n      \"fields\": [\n        {\n          \"key\": \"\",\n          \"stringValue\": \"\",\n          \"refValue\": \"\"\n        }\n      ]\n    }\n  ],\n  \"parameterObjects\": [\n    {\n      \"id\": \"\",\n      \"attributes\": [\n        {\n          \"key\": \"\",\n          \"stringValue\": \"\"\n        }\n      ]\n    }\n  ],\n  \"parameterValues\": [\n    {\n      \"id\": \"\",\n      \"stringValue\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cf07e717-2c96-4998-8575-85d33aeb2288",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2d1e4bd8-17d9-4a15-9cf0-522b46fb5225",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dcb46a2a-b818-4cd4-b52f-6d8bcebfab41",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "PipelineNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "49405629-5f66-4712-91fd-4ed28aadbdd0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "PipelineDeletedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "93e877a8-9005-415e-9b06-d31ba00ee61d",
      "documentation": "Lists the pipeline identifiers for all active pipelines that you have permission to access.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DataPipeline.ListPipelines",
      "responses": [
        {
          "uuid": "1882e868-c156-4b1b-a24f-88a40e9a6c80",
          "body": "{\n  \"pipelineIdList\": [\n    {\n      \"id\": \"\",\n      \"name\": \"\"\n    }\n  ],\n  \"marker\": \"\",\n  \"hasMoreResults\": {{faker 'random.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6fcf41f6-3b93-4d3d-8d07-c9e72f54cc24",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7ea66101-83d5-4180-b15f-d02297d3a760",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e1b06774-3842-4723-8165-d24a96222d48",
      "documentation": "<p>Task runners call <code>PollForTask</code> to receive a task to perform from AWS Data Pipeline. The task runner specifies which tasks it can perform by setting a value for the <code>workerGroup</code> parameter. The task returned can come from any of the pipelines that match the <code>workerGroup</code> value passed in by the task runner and that was launched using the IAM user credentials specified by the task runner.</p> <p>If tasks are ready in the work queue, <code>PollForTask</code> returns a response immediately. If no tasks are available in the queue, <code>PollForTask</code> uses long-polling and holds on to a poll connection for up to a 90 seconds, during which time the first newly scheduled task is handed to the task runner. To accomodate this, set the socket timeout in your task runner to 90 seconds. The task runner should not call <code>PollForTask</code> again on the same <code>workerGroup</code> until it receives a response, and this can take up to 90 seconds. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=DataPipeline.PollForTask",
      "responses": [
        {
          "uuid": "264611dd-c37d-4fbf-b06b-31e4d4b7aa03",
          "body": "{\n  \"taskObject\": {\n    \"taskId\": \"\",\n    \"pipelineId\": \"\",\n    \"attemptId\": \"\",\n    \"objects\": {}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "85c4e5d1-2f07-48d5-b8d3-48760ad8b680",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dfe8b36c-ebbd-4b95-a59c-b16b374206e3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1ccccb10-7269-432b-a9c4-f52a97ab3923",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TaskNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b5f67b78-6426-409c-85e6-f26c0df1ccd2",
      "documentation": "<p>Adds tasks, schedules, and preconditions to the specified pipeline. You can use <code>PutPipelineDefinition</code> to populate a new pipeline.</p> <p> <code>PutPipelineDefinition</code> also validates the configuration as it adds it to the pipeline. Changes to the pipeline are saved unless one of the following three validation errors exists in the pipeline. </p> <ol> <li>An object is missing a name or identifier field.</li> <li>A string or reference field is empty.</li> <li>The number of objects in the pipeline exceeds the maximum allowed objects.</li> <li>The pipeline is in a FINISHED state.</li> </ol> <p> Pipeline object definitions are passed to the <code>PutPipelineDefinition</code> action and returned by the <a>GetPipelineDefinition</a> action. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=DataPipeline.PutPipelineDefinition",
      "responses": [
        {
          "uuid": "481b486d-7346-4e95-b282-48ef3ebfb29b",
          "body": "{\n  \"validationErrors\": [\n    {\n      \"id\": \"\",\n      \"errors\": [\n        \"\"\n      ]\n    }\n  ],\n  \"validationWarnings\": [\n    {\n      \"id\": \"\",\n      \"warnings\": [\n        \"\"\n      ]\n    }\n  ],\n  \"errored\": {{faker 'random.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "01b09551-5211-4d6f-81c8-01803c3fb9b0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9586c961-3e00-46ba-ae43-a8551c44723d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "591de9f0-4b63-4c8e-b92b-60e5d69aa172",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "PipelineNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fb4a1547-f1ca-4d22-a56c-1d47ccf8f902",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "PipelineDeletedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9a91228d-f250-4f7e-a6c6-e56edb53fe9b",
      "documentation": "Queries the specified pipeline for the names of objects that match the specified set of conditions.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DataPipeline.QueryObjects",
      "responses": [
        {
          "uuid": "2f256a63-a4e7-4451-bc1d-ad9f9202733e",
          "body": "{\n  \"ids\": [\n    \"\"\n  ],\n  \"marker\": \"\",\n  \"hasMoreResults\": {{faker 'random.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ed735d2a-ee28-42ca-b69d-6c43d9b24a88",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "PipelineNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ebfbed0f-319e-45ce-b4b1-6dc20d9dda91",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "PipelineDeletedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4cccf15a-375f-4c9e-baaf-26035f3b678f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f4acfd42-9ece-4405-bc9b-e0a3a59adf76",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a2b055d3-29a8-4ff1-9a72-aaf02ad29e30",
      "documentation": "Removes existing tags from the specified pipeline.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DataPipeline.RemoveTags",
      "responses": [
        {
          "uuid": "d126f8d1-8f43-41c8-a813-89aa04ebc1a6",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1936c5a3-7cce-49dd-ae49-66a4906c4948",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "10f4fc17-d919-4248-8fe9-0b4933c5e59b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cff650dc-e99e-4988-a4fa-df366b7fe529",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "PipelineNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2c9b918f-bb72-4c45-82c9-9f5b497717ab",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "PipelineDeletedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2d9fac9b-ec86-43d0-ac83-723d56980579",
      "documentation": "<p>Task runners call <code>ReportTaskProgress</code> when assigned a task to acknowledge that it has the task. If the web service does not receive this acknowledgement within 2 minutes, it assigns the task in a subsequent <a>PollForTask</a> call. After this initial acknowledgement, the task runner only needs to report progress every 15 minutes to maintain its ownership of the task. You can change this reporting time from 15 minutes by specifying a <code>reportProgressTimeout</code> field in your pipeline.</p> <p>If a task runner does not report its status after 5 minutes, AWS Data Pipeline assumes that the task runner is unable to process the task and reassigns the task in a subsequent response to <a>PollForTask</a>. Task runners should call <code>ReportTaskProgress</code> every 60 seconds.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=DataPipeline.ReportTaskProgress",
      "responses": [
        {
          "uuid": "ec8c9861-4abb-4272-bf76-f57f4d79d546",
          "body": "{\n  \"canceled\": {{faker 'random.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1d95e5be-66ae-4777-a93d-979c891cd7ab",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eb3fbc27-f7d7-4ca9-b86b-d7bdf653215a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4eece3b3-7883-4127-a135-55e34128a323",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TaskNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e7b597f6-6843-462c-807b-a02a3468e0fb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "PipelineNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a9e0013b-169c-40d2-9d56-ccd1c60f9eac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "PipelineDeletedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ba059179-07d4-4357-8f40-c5bba15eee9a",
      "documentation": "Task runners call <code>ReportTaskRunnerHeartbeat</code> every 15 minutes to indicate that they are operational. If the AWS Data Pipeline Task Runner is launched on a resource managed by AWS Data Pipeline, the web service can use this call to detect when the task runner application has failed and restart a new instance.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DataPipeline.ReportTaskRunnerHeartbeat",
      "responses": [
        {
          "uuid": "6592a683-b16a-49a4-b4de-14d6d73328b8",
          "body": "{\n  \"terminate\": {{faker 'random.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "80af59fe-b0b6-4a11-937a-d5d948e88d57",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cba4e368-67b8-41a4-947b-a75efb451761",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3bc014c3-82f8-41ec-825f-612b39c8f891",
      "documentation": "Requests that the status of the specified physical or logical pipeline objects be updated in the specified pipeline. This update might not occur immediately, but is eventually consistent. The status that can be set depends on the type of object (for example, DataNode or Activity). You cannot perform this operation on <code>FINISHED</code> pipelines and attempting to do so returns <code>InvalidRequestException</code>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DataPipeline.SetStatus",
      "responses": [
        {
          "uuid": "386d8c25-4858-43c7-bbef-ab3e3d6e69cc",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "437c4d0f-930a-4936-87fc-b273ce10bf90",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "PipelineNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4ad83877-f4f0-4c4c-aca8-277281c69222",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "PipelineDeletedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8e2aa1cf-d382-42dd-ae9c-16ec17c46dd3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "462ad2fc-fa4a-4753-a2a5-63f0c4a0810c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8ead9305-d5b1-4494-bd4b-e29bad17b4b6",
      "documentation": "Task runners call <code>SetTaskStatus</code> to notify AWS Data Pipeline that a task is completed and provide information about the final status. A task runner makes this call regardless of whether the task was sucessful. A task runner does not need to call <code>SetTaskStatus</code> for tasks that are canceled by the web service during a call to <a>ReportTaskProgress</a>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DataPipeline.SetTaskStatus",
      "responses": [
        {
          "uuid": "e9fa24a4-dbbf-447a-958e-470fc2475bdf",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ffda9bb4-fcc4-4504-a80e-afd9a3d4d8fc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2a18e06d-938a-4d68-9019-742d16ef035b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "TaskNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5fd8be45-fe64-4cf2-b702-9727451ec318",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f774a172-af56-4449-9bb7-9e4f9b5b3cc2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "PipelineNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "747569b3-b4d4-41dc-8825-c67bb192279b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "PipelineDeletedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "81bd902d-d73c-44ca-a4bc-ec042da75d8e",
      "documentation": "Validates the specified pipeline definition to ensure that it is well formed and can be run without error.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DataPipeline.ValidatePipelineDefinition",
      "responses": [
        {
          "uuid": "a689d738-0ec1-437b-b7bc-20a399e10e5d",
          "body": "{\n  \"validationErrors\": [\n    {\n      \"id\": \"\",\n      \"errors\": [\n        \"\"\n      ]\n    }\n  ],\n  \"validationWarnings\": [\n    {\n      \"id\": \"\",\n      \"warnings\": [\n        \"\"\n      ]\n    }\n  ],\n  \"errored\": {{faker 'random.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c7f75e51-bed7-411d-8271-37be3b6f1f04",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "acdd6a7c-a5f4-4939-93b4-6fda7abf0421",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "70cfce55-cdd3-4dc3-bf96-bd7a84ec38f7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "PipelineNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "34a8454e-d673-49a8-a3b0-c3e8c5a99522",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "PipelineDeletedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}