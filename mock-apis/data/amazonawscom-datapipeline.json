{
  "uuid": "b2854962-b2bf-4f00-bd69-88258fbe1751",
  "lastMigration": 19,
  "name": "AWS Data Pipeline",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "11272349-42ff-4ba5-affd-ed79a22f1acd",
      "documentation": "<p>Validates the specified pipeline and starts processing pipeline tasks. If the pipeline does not pass validation, activation fails.</p> <p>If you need to pause the pipeline to investigate an issue with a component, such as a data source or script, call <a>DeactivatePipeline</a>.</p> <p>To activate a finished pipeline, modify the end date for the pipeline and then activate it.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=DataPipeline.ActivatePipeline",
      "responses": [
        {
          "uuid": "8ae2b450-09aa-438a-a160-a825f28948eb",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e0888502-1634-4c6e-8938-4ccd30f79e05",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "PipelineNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7ad85935-8e88-4367-9535-1d788284ddbb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "PipelineDeletedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "35a899eb-8537-4d12-98c5-df5b3c50c0dd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "87fea9e2-4231-440a-af3e-987692cdbc72",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bfc7c3ad-1b8c-43bc-bf48-9b7421a2bcbf",
      "documentation": "Adds or modifies tags for the specified pipeline.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DataPipeline.AddTags",
      "responses": [
        {
          "uuid": "9d16016f-59f7-4e9c-975c-b32a8f266626",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7353dd64-af78-4d7b-ade6-c6d0ddaeff00",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "558210cd-9c4c-459b-be8e-03dc8911cc52",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "68284ab9-019f-4a3c-9be3-ad1c1c38a507",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "PipelineNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2286cb62-0be1-4280-b543-b89ab8a48841",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "PipelineDeletedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "86087e92-9772-4e20-b327-376c292fde8c",
      "documentation": "Creates a new, empty pipeline. Use <a>PutPipelineDefinition</a> to populate the pipeline.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DataPipeline.CreatePipeline",
      "responses": [
        {
          "uuid": "045e4b65-219f-491e-b139-89a686f1d3c2",
          "body": "{\n  \"pipelineId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e7e33a11-7199-452e-9795-e2c6bbb939f1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f137339e-e0b8-4b02-a884-cab17b03f4fb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3b5e6bd4-401b-48f5-9b2d-4896779f29ec",
      "documentation": "<p>Deactivates the specified running pipeline. The pipeline is set to the <code>DEACTIVATING</code> state until the deactivation process completes.</p> <p>To resume a deactivated pipeline, use <a>ActivatePipeline</a>. By default, the pipeline resumes from the last completed execution. Optionally, you can specify the date and time to resume the pipeline.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=DataPipeline.DeactivatePipeline",
      "responses": [
        {
          "uuid": "769b0751-44b6-46ed-a1a9-4db7cd47ddbf",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0d7cf350-b792-4d15-8dcf-f47664fda296",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "PipelineNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "91f1e838-78ed-4f47-b57b-d7e482703a22",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "PipelineDeletedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "70ba4cd2-bcb2-42c4-986b-9107b338c69c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5bbe11a9-cafc-4f44-b939-cad83cc52984",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "204c1654-440b-4e3c-8c8a-aa3eec7fa14e",
      "documentation": "<p>Deletes a pipeline, its pipeline definition, and its run history. AWS Data Pipeline attempts to cancel instances associated with the pipeline that are currently being processed by task runners.</p> <p>Deleting a pipeline cannot be undone. You cannot query or restore a deleted pipeline. To temporarily pause a pipeline instead of deleting it, call <a>SetStatus</a> with the status set to <code>PAUSE</code> on individual components. Components that are paused by <a>SetStatus</a> can be resumed.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=DataPipeline.DeletePipeline",
      "responses": [
        {
          "uuid": "d9bcc15b-58f9-4062-90dc-fadfc6dab900",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5b6bf0c9-37f4-48f1-bd86-44781c96837e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "PipelineNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "71f85819-5fd1-4682-b0c6-6c5adc685f32",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5a3911f3-ddca-4469-946e-6653aeeff85f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "27399165-36f0-455b-9fee-2db43dfe3879",
      "documentation": "Gets the object definitions for a set of objects associated with the pipeline. Object definitions are composed of a set of fields that define the properties of the object.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DataPipeline.DescribeObjects",
      "responses": [
        {
          "uuid": "f3a1ab74-f6b5-431a-ad2b-a3b52350667a",
          "body": "{\n  \"pipelineObjects\": [\n    {\n      \"id\": \"\",\n      \"name\": \"\",\n      \"fields\": [\n        {\n          \"key\": \"\",\n          \"stringValue\": \"\",\n          \"refValue\": \"\"\n        }\n      ]\n    }\n  ],\n  \"marker\": \"\",\n  \"hasMoreResults\": {{faker 'random.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "75fc0679-512b-4346-a406-1a1788e178f4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a1ee4c5d-37cf-400f-9065-e0bbdaf47332",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5611ecc9-4de1-47eb-9741-9cbd5b66b7d6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "PipelineNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1d494043-07c4-4deb-a3d3-42ace4c4a407",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "PipelineDeletedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7a4c7c33-60db-46d1-97d4-77064cb2c800",
      "documentation": "<p>Retrieves metadata about one or more pipelines. The information retrieved includes the name of the pipeline, the pipeline identifier, its current state, and the user account that owns the pipeline. Using account credentials, you can retrieve metadata about pipelines that you or your IAM users have created. If you are using an IAM user account, you can retrieve metadata about only those pipelines for which you have read permissions.</p> <p>To retrieve the full pipeline definition instead of metadata about the pipeline, call <a>GetPipelineDefinition</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=DataPipeline.DescribePipelines",
      "responses": [
        {
          "uuid": "62347980-200b-4523-9d32-230b75ffdfc7",
          "body": "{\n  \"pipelineDescriptionList\": [\n    {\n      \"pipelineId\": \"\",\n      \"name\": \"\",\n      \"fields\": [\n        {\n          \"key\": \"\",\n          \"stringValue\": \"\",\n          \"refValue\": \"\"\n        }\n      ],\n      \"description\": \"\",\n      \"tags\": [\n        {\n          \"key\": \"\",\n          \"value\": \"\"\n        }\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "668dcb4c-5476-4f4e-98b2-2756188d0115",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "PipelineNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f372d253-219f-4dda-a0ff-e6a47ffe8b8b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "PipelineDeletedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d43c19be-f6d9-4ce8-8396-043a37423808",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3379a17d-327b-44f5-9ce5-92ca3eb9e947",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4594deb6-e276-4387-af36-b8e40ff0dc24",
      "documentation": "Task runners call <code>EvaluateExpression</code> to evaluate a string in the context of the specified object. For example, a task runner can evaluate SQL queries stored in Amazon S3.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DataPipeline.EvaluateExpression",
      "responses": [
        {
          "uuid": "ff0d9924-e688-4416-b9f0-d1054c4fbb33",
          "body": "{\n  \"evaluatedExpression\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eb900840-780e-47b1-ae65-cb8259d47ce3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f7ea72cb-4bb9-4b7f-a387-be8ed7880d3a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "TaskNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aeb6a8c8-2b5b-4eea-82cc-08c6dc67eb6a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a5083174-c277-481b-86bc-8132b06463d2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "PipelineNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4f2f4c3c-2232-4b93-b4b8-fc745f9405e0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "PipelineDeletedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "648c6b56-aeb8-4914-80c7-8f36a46e0ad3",
      "documentation": "Gets the definition of the specified pipeline. You can call <code>GetPipelineDefinition</code> to retrieve the pipeline definition that you provided using <a>PutPipelineDefinition</a>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DataPipeline.GetPipelineDefinition",
      "responses": [
        {
          "uuid": "fc25b4bd-ae07-4fb9-8536-fc7b39e82afa",
          "body": "{\n  \"pipelineObjects\": [\n    {\n      \"id\": \"\",\n      \"name\": \"\",\n      \"fields\": [\n        {\n          \"key\": \"\",\n          \"stringValue\": \"\",\n          \"refValue\": \"\"\n        }\n      ]\n    }\n  ],\n  \"parameterObjects\": [\n    {\n      \"id\": \"\",\n      \"attributes\": [\n        {\n          \"key\": \"\",\n          \"stringValue\": \"\"\n        }\n      ]\n    }\n  ],\n  \"parameterValues\": [\n    {\n      \"id\": \"\",\n      \"stringValue\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "744d6eb3-93e4-4963-b3bc-130193ccacde",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a4bce111-901d-4a3d-97d7-3acc3ef6ab9d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5e2911bc-486a-4dd0-98d6-8c3c3102a296",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "PipelineNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6b282f3a-9c66-4df7-87bc-8c06e5893c4b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "PipelineDeletedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "79b0f4eb-5da4-4117-9e2f-25b48683b58f",
      "documentation": "Lists the pipeline identifiers for all active pipelines that you have permission to access.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DataPipeline.ListPipelines",
      "responses": [
        {
          "uuid": "b62da341-7394-416d-8466-86747d2c5e6e",
          "body": "{\n  \"pipelineIdList\": [\n    {\n      \"id\": \"\",\n      \"name\": \"\"\n    }\n  ],\n  \"marker\": \"\",\n  \"hasMoreResults\": {{faker 'random.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8888d229-3f8a-4d81-ad3a-a3642c81dd75",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eb81a91d-9cd6-4bbd-b748-6fafaf194722",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "023a4f31-7674-4357-a874-ff5b337f8723",
      "documentation": "<p>Task runners call <code>PollForTask</code> to receive a task to perform from AWS Data Pipeline. The task runner specifies which tasks it can perform by setting a value for the <code>workerGroup</code> parameter. The task returned can come from any of the pipelines that match the <code>workerGroup</code> value passed in by the task runner and that was launched using the IAM user credentials specified by the task runner.</p> <p>If tasks are ready in the work queue, <code>PollForTask</code> returns a response immediately. If no tasks are available in the queue, <code>PollForTask</code> uses long-polling and holds on to a poll connection for up to a 90 seconds, during which time the first newly scheduled task is handed to the task runner. To accomodate this, set the socket timeout in your task runner to 90 seconds. The task runner should not call <code>PollForTask</code> again on the same <code>workerGroup</code> until it receives a response, and this can take up to 90 seconds. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=DataPipeline.PollForTask",
      "responses": [
        {
          "uuid": "71bd2be4-4c8d-4691-b42a-8e30cea30491",
          "body": "{\n  \"taskObject\": {\n    \"taskId\": \"\",\n    \"pipelineId\": \"\",\n    \"attemptId\": \"\",\n    \"objects\": {}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e9b20a2e-6ebc-4e2c-a597-45c9c620984e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "893744ea-6210-4cf7-b846-2bcb828c423b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "084c6379-e2e7-4508-82cd-d48ea28db34f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TaskNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a31aa79e-145e-4404-8d62-cdb72188f69c",
      "documentation": "<p>Adds tasks, schedules, and preconditions to the specified pipeline. You can use <code>PutPipelineDefinition</code> to populate a new pipeline.</p> <p> <code>PutPipelineDefinition</code> also validates the configuration as it adds it to the pipeline. Changes to the pipeline are saved unless one of the following three validation errors exists in the pipeline. </p> <ol> <li>An object is missing a name or identifier field.</li> <li>A string or reference field is empty.</li> <li>The number of objects in the pipeline exceeds the maximum allowed objects.</li> <li>The pipeline is in a FINISHED state.</li> </ol> <p> Pipeline object definitions are passed to the <code>PutPipelineDefinition</code> action and returned by the <a>GetPipelineDefinition</a> action. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=DataPipeline.PutPipelineDefinition",
      "responses": [
        {
          "uuid": "b84acc47-082a-4b74-abd6-8e873509b707",
          "body": "{\n  \"validationErrors\": [\n    {\n      \"id\": \"\",\n      \"errors\": [\n        \"\"\n      ]\n    }\n  ],\n  \"validationWarnings\": [\n    {\n      \"id\": \"\",\n      \"warnings\": [\n        \"\"\n      ]\n    }\n  ],\n  \"errored\": {{faker 'random.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "db0d829d-8176-49c0-aa11-1d4f05002814",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8a6e2ca8-647f-4c32-9fc2-dc1bbfc9a477",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "845c8a2b-bbef-4b45-9a84-623d7a04008e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "PipelineNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "00536b71-8a8f-49ba-899e-2c66e1678bba",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "PipelineDeletedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cb1172fa-0a46-42f3-8a5e-2837c619d86b",
      "documentation": "Queries the specified pipeline for the names of objects that match the specified set of conditions.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DataPipeline.QueryObjects",
      "responses": [
        {
          "uuid": "324d5d4b-08d5-4b9b-8dc6-3e27e1584ff1",
          "body": "{\n  \"ids\": [\n    \"\"\n  ],\n  \"marker\": \"\",\n  \"hasMoreResults\": {{faker 'random.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c5ef7d27-0387-4b45-ac4e-deae086d3dde",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "PipelineNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bc9dbb68-6260-42ee-a3aa-db2643107d18",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "PipelineDeletedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a4c6323c-2f80-4254-9b22-d37d5266e4f8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3bad30b3-3dcc-4278-9f39-02741e343232",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ff4276fb-145d-4854-aa4f-21fdb926a96b",
      "documentation": "Removes existing tags from the specified pipeline.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DataPipeline.RemoveTags",
      "responses": [
        {
          "uuid": "23de3b85-a531-4af1-b1ba-8a9346074438",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4473b0c0-7130-4ae3-8cc5-836074666cbd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c0a3f089-097d-4213-bf55-ead0ac384e21",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "13324c18-306d-41d8-ba05-808edffaff06",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "PipelineNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "daa0d5f5-be07-4c19-8a39-94ace5d2b936",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "PipelineDeletedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e3d42dea-5adf-48a3-bc6f-6e3b2b30ef0c",
      "documentation": "<p>Task runners call <code>ReportTaskProgress</code> when assigned a task to acknowledge that it has the task. If the web service does not receive this acknowledgement within 2 minutes, it assigns the task in a subsequent <a>PollForTask</a> call. After this initial acknowledgement, the task runner only needs to report progress every 15 minutes to maintain its ownership of the task. You can change this reporting time from 15 minutes by specifying a <code>reportProgressTimeout</code> field in your pipeline.</p> <p>If a task runner does not report its status after 5 minutes, AWS Data Pipeline assumes that the task runner is unable to process the task and reassigns the task in a subsequent response to <a>PollForTask</a>. Task runners should call <code>ReportTaskProgress</code> every 60 seconds.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=DataPipeline.ReportTaskProgress",
      "responses": [
        {
          "uuid": "9e8d5edc-e164-4571-bbe5-ef4acbe79963",
          "body": "{\n  \"canceled\": {{faker 'random.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1968e161-a444-4b89-95db-605a31f46fab",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4aa76837-6bed-4741-9b39-33d543857f60",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "972cdc29-4583-4ca3-9121-428e78ef88e0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TaskNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ada13a1a-f8cf-4cd5-98b9-855c34319bab",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "PipelineNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7cf93c74-7192-4992-a329-d9f9c4bbc42d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "PipelineDeletedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "83199038-175d-4082-b040-f05ae8a48dfd",
      "documentation": "Task runners call <code>ReportTaskRunnerHeartbeat</code> every 15 minutes to indicate that they are operational. If the AWS Data Pipeline Task Runner is launched on a resource managed by AWS Data Pipeline, the web service can use this call to detect when the task runner application has failed and restart a new instance.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DataPipeline.ReportTaskRunnerHeartbeat",
      "responses": [
        {
          "uuid": "e29a4061-3560-4e29-a687-1a3517071c12",
          "body": "{\n  \"terminate\": {{faker 'random.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "83320b6b-e826-4334-a373-ff723147e8d4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "73788142-35cf-4e25-a084-870f3df31b3d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "daa3bd36-4f51-4e15-b7a5-9c239994cdaa",
      "documentation": "Requests that the status of the specified physical or logical pipeline objects be updated in the specified pipeline. This update might not occur immediately, but is eventually consistent. The status that can be set depends on the type of object (for example, DataNode or Activity). You cannot perform this operation on <code>FINISHED</code> pipelines and attempting to do so returns <code>InvalidRequestException</code>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DataPipeline.SetStatus",
      "responses": [
        {
          "uuid": "bae4d05b-1726-4bbe-b52e-32923268949f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b4fa3fa4-b6dc-447c-95b4-092180ec4694",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "PipelineNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3747b19a-18ed-47ac-b235-6acd4e0c7e90",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "PipelineDeletedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "16ca2c99-0111-466d-a730-d2f038bf14ac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "199dbf98-bb3a-4ac8-85cc-7f9245a186c0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "42b89529-5cb7-4d3b-b709-2d3c265cbbf6",
      "documentation": "Task runners call <code>SetTaskStatus</code> to notify AWS Data Pipeline that a task is completed and provide information about the final status. A task runner makes this call regardless of whether the task was sucessful. A task runner does not need to call <code>SetTaskStatus</code> for tasks that are canceled by the web service during a call to <a>ReportTaskProgress</a>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DataPipeline.SetTaskStatus",
      "responses": [
        {
          "uuid": "146a5829-33b6-4e62-8258-957455820b1b",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "88215b63-1c98-4f1b-bc90-7e41b37710d4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "483a3df6-9b7f-4df3-aae9-89d66967e2d2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "TaskNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f2dae2d3-d5a2-4071-aef2-2288647dbffe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "04831582-5e4a-4e24-9bca-ebc36d08d8e0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "PipelineNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "565c6a13-880e-467e-8e7d-b18e0c96352d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "PipelineDeletedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8e763cec-7bc2-44fd-b611-41731c0466d0",
      "documentation": "Validates the specified pipeline definition to ensure that it is well formed and can be run without error.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DataPipeline.ValidatePipelineDefinition",
      "responses": [
        {
          "uuid": "f05335f8-64c9-4486-93b1-cd425540b73d",
          "body": "{\n  \"validationErrors\": [\n    {\n      \"id\": \"\",\n      \"errors\": [\n        \"\"\n      ]\n    }\n  ],\n  \"validationWarnings\": [\n    {\n      \"id\": \"\",\n      \"warnings\": [\n        \"\"\n      ]\n    }\n  ],\n  \"errored\": {{faker 'random.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "74fe83f6-a35d-44c1-a31e-d0093817ea27",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b41fc0d5-362f-42d0-b79f-47bd6e1d7d6a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "95d764e9-b79a-4ec9-a716-99238fe6cf02",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "PipelineNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "520918f6-663f-4ec9-9e1b-d042f02b223b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "PipelineDeletedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}