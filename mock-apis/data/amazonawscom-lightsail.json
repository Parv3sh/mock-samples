{
  "uuid": "7191b16d-b726-42f1-80ba-00ccf5a57cec",
  "lastMigration": 19,
  "name": "Amazon Lightsail",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "22cd5e29-d71f-4d0a-a33e-95312e4cdedc",
      "documentation": "Allocates a static IP address.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.AllocateStaticIp",
      "responses": [
        {
          "uuid": "0c83aeaf-d705-4504-9c8b-d0e3a2c80fc3",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'random.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e40051d5-8e69-4a8f-b291-dae16a4719f4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "26e6c36c-d9d8-4ed8-8637-0e5e4432efd9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c73101b5-ee1d-4029-ba14-01f093ce837c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0d44dca9-4e00-4b99-abbd-00cb389eacc0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1f813a10-d3db-4548-bce5-cf6097aceb47",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "54d8c253-8718-442a-8aec-f476a7578638",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c8df6ea7-321b-409e-95b5-389000f59d91",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e7a3433f-4ac1-45d3-8d36-1b648d3af6c9",
      "documentation": "<p>Attaches an SSL/TLS certificate to your Amazon Lightsail content delivery network (CDN) distribution.</p> <p>After the certificate is attached, your distribution accepts HTTPS traffic for all of the domains that are associated with the certificate.</p> <p>Use the <code>CreateCertificate</code> action to create a certificate that you can attach to your distribution.</p> <important> <p>Only certificates created in the <code>us-east-1</code> AWS Region can be attached to Lightsail distributions. Lightsail distributions are global resources that can reference an origin in any AWS Region, and distribute its content globally. However, all distributions are located in the <code>us-east-1</code> Region.</p> </important>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.AttachCertificateToDistribution",
      "responses": [
        {
          "uuid": "4a58e19a-31d8-43e0-aa99-20392e9185f3",
          "body": "{\n  \"operation\": {\n    \"id\": \"\",\n    \"resourceName\": \"\",\n    \"resourceType\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"isTerminal\": {{faker 'random.boolean'}},\n    \"operationDetails\": \"\",\n    \"operationType\": \"\",\n    \"status\": \"\",\n    \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n    \"errorCode\": \"\",\n    \"errorDetails\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "46ba418e-dda5-448b-8898-5fef70fa95c9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7cffdc5c-0640-4890-b8a2-e103b6e453f6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2dd037c9-9f66-41f9-84b8-47450b6d9410",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "687b7f1a-d190-46c0-9dbf-51003d8ab3b5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c580c832-b737-46c5-b4d1-93bd8f467627",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fadc8f68-152e-4d94-a8cd-3089552ee0d9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "33d72914-560e-44d2-a0f8-e347fb9b6878",
      "documentation": "<p>Attaches a block storage disk to a running or stopped Lightsail instance and exposes it to the instance with the specified disk name.</p> <p>The <code>attach disk</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>disk name</code>. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.AttachDisk",
      "responses": [
        {
          "uuid": "145008a6-5b7a-400a-9a82-a99e061534ed",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'random.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "13bc4591-4459-4df5-85aa-3463421f87ee",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "98bdc8d7-2493-474a-af79-90c207f16460",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8deee5dd-a6bd-4902-994b-4afafd8e241e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7aa6cbc2-08d2-4109-ba0f-c65e962cedf0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eaa70ba8-a00b-476b-a68f-30ce6b3353aa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5585b8be-5057-431f-92d0-7f2f1d8c8517",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cd225102-31fc-45fc-9e7f-0ebca04e5213",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9195bf5a-1910-4784-8a08-9dc981451549",
      "documentation": "<p>Attaches one or more Lightsail instances to a load balancer.</p> <p>After some time, the instances are attached to the load balancer and the health check status is available.</p> <p>The <code>attach instances to load balancer</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>load balancer name</code>. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.AttachInstancesToLoadBalancer",
      "responses": [
        {
          "uuid": "bd8b6805-2ed4-4a20-bdba-d689d256f8c8",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'random.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2dc801c2-e84b-490a-848d-96366d694d26",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c06b34be-ce85-4619-a62a-654efe4f40d7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5833aa9e-b193-4de6-b2dd-12d7150df5a3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7d17f7a7-8680-402d-a1f2-d0d5c6f8dec1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "96d0f312-5b0b-4b6a-ba23-553e6c285b3c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2ec91eab-0b13-4a8d-bcf9-74001ab73c82",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8fff2594-c693-4a0c-ba0d-a621ed51ab88",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6d16ef30-4458-45f5-b560-dd219a86683b",
      "documentation": "<p>Attaches a Transport Layer Security (TLS) certificate to your load balancer. TLS is just an updated, more secure version of Secure Socket Layer (SSL).</p> <p>Once you create and validate your certificate, you can attach it to your load balancer. You can also use this API to rotate the certificates on your account. Use the <code>AttachLoadBalancerTlsCertificate</code> action with the non-attached certificate, and it will replace the existing one and become the attached certificate.</p> <p>The <code>AttachLoadBalancerTlsCertificate</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>load balancer name</code>. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.AttachLoadBalancerTlsCertificate",
      "responses": [
        {
          "uuid": "e21f3497-e719-4d84-b894-1b9bb318d162",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'random.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b6fd2ed2-949e-4fbb-8839-bdad5503eeb2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ddf7e8f0-64b9-469e-9009-cf9e624701da",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ef47c400-eef4-4d89-9cb1-c00f3afad2fa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9e936840-76df-4c25-b72e-5d54a1291cdd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f63f6426-2aed-42ca-aa8a-a86d64153d5d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f7b4a48f-8def-45bf-9ad9-cf2537329f06",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d6b254e1-7262-43cb-b99e-5df61de6d832",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "94774519-27be-4492-8861-3e283796d061",
      "documentation": "Attaches a static IP address to a specific Amazon Lightsail instance.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.AttachStaticIp",
      "responses": [
        {
          "uuid": "fba723fe-d592-4253-9176-e58aba465d63",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'random.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2b58fccd-0166-4c15-8a19-b2253818f76c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a220b2ee-fb10-4b9a-b647-a55970f33e65",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "01631079-3d48-4c91-abf2-6f819fcc2585",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "579dc4fe-f08d-472f-acda-34d8656b8e5d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4bfdc0ca-1169-4352-a12b-9e6cbd35e2f8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a7a0f465-bb9a-41e9-9ad8-7e6e3d5a7838",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4be4df3b-35a8-490d-8c40-7be5c356997e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "53dcaf97-5736-4d74-a6ac-02077f611045",
      "documentation": "<p>Closes ports for a specific Amazon Lightsail instance.</p> <p>The <code>CloseInstancePublicPorts</code> action supports tag-based access control via resource tags applied to the resource identified by <code>instanceName</code>. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.CloseInstancePublicPorts",
      "responses": [
        {
          "uuid": "cce55f07-1709-43ce-961c-648f69a21d1c",
          "body": "{\n  \"operation\": {\n    \"id\": \"\",\n    \"resourceName\": \"\",\n    \"resourceType\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"isTerminal\": {{faker 'random.boolean'}},\n    \"operationDetails\": \"\",\n    \"operationType\": \"\",\n    \"status\": \"\",\n    \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n    \"errorCode\": \"\",\n    \"errorDetails\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f894190f-87ff-46f0-afe2-955c22694abb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "59d94af4-68a7-40d6-bfc5-0e9cd0754406",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "667ccfe1-0854-4f31-b139-8200c35937f5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "653b851f-50af-4a94-9bc3-b7fa79033d9d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b37af611-0e93-4b8d-8c61-840ca3df7ffd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "927c4007-ec1b-4487-8ccf-c42b61933363",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c170504f-5eee-4ebd-a647-6d1b5ecebe20",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1f3f9a84-598b-4a0c-a653-f25a85753646",
      "documentation": "<p>Copies a manual snapshot of an instance or disk as another manual snapshot, or copies an automatic snapshot of an instance or disk as a manual snapshot. This operation can also be used to copy a manual or automatic snapshot of an instance or a disk from one AWS Region to another in Amazon Lightsail.</p> <p>When copying a <i>manual snapshot</i>, be sure to define the <code>source region</code>, <code>source snapshot name</code>, and <code>target snapshot name</code> parameters.</p> <p>When copying an <i>automatic snapshot</i>, be sure to define the <code>source region</code>, <code>source resource name</code>, <code>target snapshot name</code>, and either the <code>restore date</code> or the <code>use latest restorable auto snapshot</code> parameters.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.CopySnapshot",
      "responses": [
        {
          "uuid": "a8c54e9e-1f2b-4229-8680-5577b213ba44",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'random.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d038b04d-dd0f-44fb-b51c-78653add8618",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dce5c9b7-b900-40d3-a75d-e6c22e330b92",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a545b6ea-838d-493c-beab-1ea25c7bbac1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "220bfce2-1802-49af-83f4-fd144ea5f5e4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9b979c23-8679-49b8-ae89-7d51c5fa7434",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "61af89c7-f2b6-4ef9-94a5-051a9fe9b372",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4267fc4e-ab7e-402e-ae19-cab255d87cc8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bd1ddd39-b035-4ae9-9cc1-ea24cb3443f6",
      "documentation": "<p>Creates an Amazon Lightsail bucket.</p> <p>A bucket is a cloud storage resource available in the Lightsail object storage service. Use buckets to store objects such as data and its descriptive metadata. For more information about buckets, see <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/buckets-in-amazon-lightsail\">Buckets in Amazon Lightsail</a> in the <i>Amazon Lightsail Developer Guide</i>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.CreateBucket",
      "responses": [
        {
          "uuid": "15ef5129-f5e5-45cf-9f80-e461dfcd2fa7",
          "body": "{\n  \"bucket\": {\n    \"resourceType\": \"\",\n    \"accessRules\": {\n      \"getObject\": \"\",\n      \"allowPublicOverrides\": {{faker 'random.boolean'}}\n    },\n    \"arn\": \"\",\n    \"bundleId\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"url\": \"\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"name\": \"\",\n    \"supportCode\": \"\",\n    \"tags\": [\n      {\n        \"key\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"objectVersioning\": \"\",\n    \"ableToUpdateBundle\": {{faker 'random.boolean'}},\n    \"readonlyAccessAccounts\": [\n      \"\"\n    ],\n    \"resourcesReceivingAccess\": [\n      {\n        \"name\": \"\",\n        \"resourceType\": \"\"\n      }\n    ],\n    \"state\": {\n      \"code\": \"\",\n      \"message\": \"\"\n    }\n  },\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'random.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "906bd1f0-b09f-44d0-83e9-b3da63a87d79",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f3089cf3-1e7e-4aa5-ae82-0b5285e3c0ec",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ffa0e157-10f6-4d5e-b1da-9d55f7937b7b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d8fbd7e5-8548-427f-b317-10b5de1ccaa9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "38a77ce0-f7a0-4e07-acb8-18af9219382e",
      "documentation": "<p>Creates a new access key for the specified Amazon Lightsail bucket. Access keys consist of an access key ID and corresponding secret access key.</p> <p>Access keys grant full programmatic access to the specified bucket and its objects. You can have a maximum of two access keys per bucket. Use the <a>GetBucketAccessKeys</a> action to get a list of current access keys for a specific bucket. For more information about access keys, see <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-creating-bucket-access-keys\">Creating access keys for a bucket in Amazon Lightsail</a> in the <i>Amazon Lightsail Developer Guide</i>.</p> <important> <p>The <code>secretAccessKey</code> value is returned only in response to the <code>CreateBucketAccessKey</code> action. You can get a secret access key only when you first create an access key; you cannot get the secret access key later. If you lose the secret access key, you must create a new access key.</p> </important>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.CreateBucketAccessKey",
      "responses": [
        {
          "uuid": "8b8b65f6-2cc3-475c-a038-1756bfd66581",
          "body": "{\n  \"accessKey\": {\n    \"accessKeyId\": \"\",\n    \"secretAccessKey\": \"\",\n    \"status\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"lastUsed\": {\n      \"lastUsedDate\": \"{{faker 'date.recent' 365}}\",\n      \"region\": \"\",\n      \"serviceName\": \"\"\n    }\n  },\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'random.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a7d47a22-c5cd-45ab-a786-4f2c70519fe1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4bde7e3b-6771-4308-96fd-bbfc9bc0ecd0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9524ac38-35a6-4c56-aa0e-f40b9bf43070",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6444d995-591f-4ab6-ad76-fb278b934241",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ea3b19eb-82f8-47b7-bf31-81e455e4d052",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b462884e-2052-4cb4-b4c9-7b9b838c879b",
      "documentation": "<p>Creates an SSL/TLS certificate for an Amazon Lightsail content delivery network (CDN) distribution and a container service.</p> <p>After the certificate is valid, use the <code>AttachCertificateToDistribution</code> action to use the certificate and its domains with your distribution. Or use the <code>UpdateContainerService</code> action to use the certificate and its domains with your container service.</p> <important> <p>Only certificates created in the <code>us-east-1</code> AWS Region can be attached to Lightsail distributions. Lightsail distributions are global resources that can reference an origin in any AWS Region, and distribute its content globally. However, all distributions are located in the <code>us-east-1</code> Region.</p> </important>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.CreateCertificate",
      "responses": [
        {
          "uuid": "904f843a-985f-4491-8190-a26c327b5411",
          "body": "{\n  \"certificate\": {\n    \"certificateArn\": \"\",\n    \"certificateName\": \"\",\n    \"domainName\": \"\",\n    \"certificateDetail\": {\n      \"arn\": \"\",\n      \"name\": \"\",\n      \"domainName\": \"\",\n      \"status\": \"\",\n      \"serialNumber\": \"\",\n      \"subjectAlternativeNames\": [\n        \"\"\n      ],\n      \"domainValidationRecords\": [\n        {\n          \"domainName\": \"\",\n          \"resourceRecord\": {\n            \"name\": \"\",\n            \"type\": \"\",\n            \"value\": \"\"\n          }\n        }\n      ],\n      \"requestFailureReason\": \"\",\n      \"inUseResourceCount\": {{faker 'random.number'}},\n      \"keyAlgorithm\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"issuedAt\": \"{{faker 'date.recent' 365}}\",\n      \"issuerCA\": \"\",\n      \"notBefore\": \"{{faker 'date.recent' 365}}\",\n      \"notAfter\": \"{{faker 'date.recent' 365}}\",\n      \"eligibleToRenew\": \"\",\n      \"renewalSummary\": {\n        \"domainValidationRecords\": [\n          {\n            \"domainName\": \"\",\n            \"resourceRecord\": {\n              \"name\": \"\",\n              \"type\": \"\",\n              \"value\": \"\"\n            }\n          }\n        ],\n        \"renewalStatus\": \"\",\n        \"renewalStatusReason\": \"\",\n        \"updatedAt\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"revokedAt\": \"{{faker 'date.recent' 365}}\",\n      \"revocationReason\": \"\",\n      \"tags\": [\n        {\n          \"key\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"supportCode\": \"\"\n    },\n    \"tags\": [\n      {\n        \"key\": \"\",\n        \"value\": \"\"\n      }\n    ]\n  },\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'random.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4eb27cab-ca12-43f9-8f87-ee38c1a30c94",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ad825a92-1501-4611-a312-fafdac45f5a6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c57c08e2-3f72-4447-9064-b98926a5bda6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "534b00a0-3c0a-4673-b76d-1e158458ccfe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "85b860b6-5d66-4dc9-a6d0-55e00f088376",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dd4ae814-8a0e-4bb6-85f4-f1d193a7d772",
      "documentation": "<p>Creates an AWS CloudFormation stack, which creates a new Amazon EC2 instance from an exported Amazon Lightsail snapshot. This operation results in a CloudFormation stack record that can be used to track the AWS CloudFormation stack created. Use the <code>get cloud formation stack records</code> operation to get a list of the CloudFormation stacks created.</p> <important> <p>Wait until after your new Amazon EC2 instance is created before running the <code>create cloud formation stack</code> operation again with the same export snapshot record.</p> </important>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.CreateCloudFormationStack",
      "responses": [
        {
          "uuid": "043ab8f2-bab5-45bf-92de-23f70508f437",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'random.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bda036f2-8d28-4c25-9028-4925a4efc783",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8942dbe5-065f-4fe2-a9ea-2069b591f602",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8030e0bd-c5e1-45f7-bc08-54509cbdf441",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d10154fc-6ba3-479b-88da-3f5da1a710fd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e5db5f2c-10a8-49ae-b76b-12da269bf7a0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3f400413-ad85-40d8-bf44-b48300e1413b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "27cceba3-7d0e-44aa-82e7-a345dac6ee57",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3521f4e4-dc27-4615-b11e-adbebd7b08fd",
      "documentation": "<p>Creates an email or SMS text message contact method.</p> <p>A contact method is used to send you notifications about your Amazon Lightsail resources. You can add one email address and one mobile phone number contact method in each AWS Region. However, SMS text messaging is not supported in some AWS Regions, and SMS text messages cannot be sent to some countries/regions. For more information, see <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-notifications\">Notifications in Amazon Lightsail</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.CreateContactMethod",
      "responses": [
        {
          "uuid": "7db7e467-4e33-466b-ae55-85f6d42e1c13",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'random.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a8f66970-99b2-4dad-b7b5-91dd1a78838b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "96af61a1-b4ca-4d38-b079-d515e7e1fb52",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "58e43f41-2fc4-4eab-a7a8-f4a9fb84bd05",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e5923530-f855-4358-8dad-de12bb4602c2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e060a22e-2057-4cc1-9c34-de1197038234",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b72bdd54-0fed-4eaa-b067-887184e3a612",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7a9453c1-d073-4ba4-b3a4-f163a9f2e974",
      "documentation": "<p>Creates an Amazon Lightsail container service.</p> <p>A Lightsail container service is a compute resource to which you can deploy containers. For more information, see <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-container-services\">Container services in Amazon Lightsail</a> in the <i>Lightsail Dev Guide</i>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.CreateContainerService",
      "responses": [
        {
          "uuid": "c88d2571-2de4-4718-9f47-1be52d52ab00",
          "body": "{\n  \"containerService\": {\n    \"containerServiceName\": \"\",\n    \"arn\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"resourceType\": \"\",\n    \"tags\": [\n      {\n        \"key\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"power\": \"\",\n    \"powerId\": \"\",\n    \"state\": \"\",\n    \"stateDetail\": {\n      \"code\": \"\",\n      \"message\": \"\"\n    },\n    \"scale\": {{faker 'random.number'}},\n    \"currentDeployment\": {\n      \"version\": {{faker 'random.number'}},\n      \"state\": \"\",\n      \"containers\": {},\n      \"publicEndpoint\": {\n        \"containerName\": \"\",\n        \"containerPort\": {{faker 'random.number'}},\n        \"healthCheck\": {\n          \"healthyThreshold\": {{faker 'random.number'}},\n          \"unhealthyThreshold\": {{faker 'random.number'}},\n          \"timeoutSeconds\": {{faker 'random.number'}},\n          \"intervalSeconds\": {{faker 'random.number'}},\n          \"path\": \"\",\n          \"successCodes\": \"\"\n        }\n      },\n      \"createdAt\": \"{{faker 'date.recent' 365}}\"\n    },\n    \"nextDeployment\": {\n      \"version\": {{faker 'random.number'}},\n      \"state\": \"\",\n      \"containers\": {},\n      \"publicEndpoint\": {\n        \"containerName\": \"\",\n        \"containerPort\": {{faker 'random.number'}},\n        \"healthCheck\": {\n          \"healthyThreshold\": {{faker 'random.number'}},\n          \"unhealthyThreshold\": {{faker 'random.number'}},\n          \"timeoutSeconds\": {{faker 'random.number'}},\n          \"intervalSeconds\": {{faker 'random.number'}},\n          \"path\": \"\",\n          \"successCodes\": \"\"\n        }\n      },\n      \"createdAt\": \"{{faker 'date.recent' 365}}\"\n    },\n    \"isDisabled\": {{faker 'random.boolean'}},\n    \"principalArn\": \"\",\n    \"privateDomainName\": \"\",\n    \"publicDomainNames\": {},\n    \"url\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7bfd2ddf-f06a-433b-81dc-c3b62f27915f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2b3919a7-c074-46fa-befd-585e0ea4c807",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "049f92d3-c1f5-4f1c-badd-a26b66fb55e3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bd06c4d3-e41b-43c2-9ac5-4dd36633cd0b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b8db53c0-65c7-4b69-bf43-054f3c7d070b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0ce83135-a89a-479c-9671-a3f3e80f8af7",
      "documentation": "<p>Creates a deployment for your Amazon Lightsail container service.</p> <p>A deployment specifies the containers that will be launched on the container service and their settings, such as the ports to open, the environment variables to apply, and the launch command to run. It also specifies the container that will serve as the public endpoint of the deployment and its settings, such as the HTTP or HTTPS port to use, and the health check configuration.</p> <p>You can deploy containers to your container service using container images from a public registry like Docker Hub, or from your local machine. For more information, see <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-creating-container-images\">Creating container images for your Amazon Lightsail container services</a> in the <i>Amazon Lightsail Developer Guide</i>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.CreateContainerServiceDeployment",
      "responses": [
        {
          "uuid": "49cc363d-7c9b-4260-8c21-b6f145f6dd81",
          "body": "{\n  \"containerService\": {\n    \"containerServiceName\": \"\",\n    \"arn\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"resourceType\": \"\",\n    \"tags\": [\n      {\n        \"key\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"power\": \"\",\n    \"powerId\": \"\",\n    \"state\": \"\",\n    \"stateDetail\": {\n      \"code\": \"\",\n      \"message\": \"\"\n    },\n    \"scale\": {{faker 'random.number'}},\n    \"currentDeployment\": {\n      \"version\": {{faker 'random.number'}},\n      \"state\": \"\",\n      \"containers\": {},\n      \"publicEndpoint\": {\n        \"containerName\": \"\",\n        \"containerPort\": {{faker 'random.number'}},\n        \"healthCheck\": {\n          \"healthyThreshold\": {{faker 'random.number'}},\n          \"unhealthyThreshold\": {{faker 'random.number'}},\n          \"timeoutSeconds\": {{faker 'random.number'}},\n          \"intervalSeconds\": {{faker 'random.number'}},\n          \"path\": \"\",\n          \"successCodes\": \"\"\n        }\n      },\n      \"createdAt\": \"{{faker 'date.recent' 365}}\"\n    },\n    \"nextDeployment\": {\n      \"version\": {{faker 'random.number'}},\n      \"state\": \"\",\n      \"containers\": {},\n      \"publicEndpoint\": {\n        \"containerName\": \"\",\n        \"containerPort\": {{faker 'random.number'}},\n        \"healthCheck\": {\n          \"healthyThreshold\": {{faker 'random.number'}},\n          \"unhealthyThreshold\": {{faker 'random.number'}},\n          \"timeoutSeconds\": {{faker 'random.number'}},\n          \"intervalSeconds\": {{faker 'random.number'}},\n          \"path\": \"\",\n          \"successCodes\": \"\"\n        }\n      },\n      \"createdAt\": \"{{faker 'date.recent' 365}}\"\n    },\n    \"isDisabled\": {{faker 'random.boolean'}},\n    \"principalArn\": \"\",\n    \"privateDomainName\": \"\",\n    \"publicDomainNames\": {},\n    \"url\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "faae0cf8-d49d-4d8f-bf29-a13e83d530ca",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f74c9ca9-6523-473b-aa92-6f5246b2ab4c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "96ab8c56-167f-4e43-ae84-9e120656c3a5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f28793e0-bb68-4db5-9709-db6d152bcf7e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "db35b808-e219-4c4c-a96f-c77659713202",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "32bd0226-48d9-47a0-93a9-8eccab8d3d21",
      "documentation": "<p>Creates a temporary set of log in credentials that you can use to log in to the Docker process on your local machine. After you're logged in, you can use the native Docker commands to push your local container images to the container image registry of your Amazon Lightsail account so that you can use them with your Lightsail container service. The log in credentials expire 12 hours after they are created, at which point you will need to create a new set of log in credentials.</p> <note> <p>You can only push container images to the container service registry of your Lightsail account. You cannot pull container images or perform any other container image management actions on the container service registry.</p> </note> <p>After you push your container images to the container image registry of your Lightsail account, use the <code>RegisterContainerImage</code> action to register the pushed images to a specific Lightsail container service.</p> <note> <p>This action is not required if you install and use the Lightsail Control (lightsailctl) plugin to push container images to your Lightsail container service. For more information, see <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-pushing-container-images\">Pushing and managing container images on your Amazon Lightsail container services</a> in the <i>Amazon Lightsail Developer Guide</i>.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.CreateContainerServiceRegistryLogin",
      "responses": [
        {
          "uuid": "f7fe961e-728c-4c6c-8ab9-49ba295e734d",
          "body": "{\n  \"registryLogin\": {\n    \"username\": \"\",\n    \"password\": \"\",\n    \"expiresAt\": \"{{faker 'date.recent' 365}}\",\n    \"registry\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b98c6d68-2fe6-48d8-bb0b-ef47b19a8e21",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "12b29ed7-0308-40a0-b5cf-0575efc66c95",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "98e0dfb9-25e6-44b7-b6c5-40349a44927f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "70bab6f8-2684-4dda-910d-608953cdd470",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "240727fa-bf6d-4111-a022-4cd575cf6bf4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "76a8a97b-2380-48ce-a818-15c1c4418233",
      "documentation": "<p>Creates a block storage disk that can be attached to an Amazon Lightsail instance in the same Availability Zone (e.g., <code>us-east-2a</code>).</p> <p>The <code>create disk</code> operation supports tag-based access control via request tags. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.CreateDisk",
      "responses": [
        {
          "uuid": "c4909bdf-bf26-4e45-9c3d-07be91f2c7f2",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'random.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cff45ce4-453d-4e63-a0bc-c7a496b97188",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f01c60b8-1f7e-4ef3-8557-949a1023251c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "48236227-9d87-453e-926a-b1557f6ae0d3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "98e6713a-a799-4b39-95ec-95198f1eccb4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6c194128-9695-40f2-a6ab-3b1b7461d080",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d7de0fc4-fbdb-49d1-a87c-d48cf5fec242",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3ecda4b7-d6f2-4bc0-bb2d-95eeb50804c9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1d1eaafe-b2dd-4139-b612-92264d5b4fa5",
      "documentation": "<p>Creates a block storage disk from a manual or automatic snapshot of a disk. The resulting disk can be attached to an Amazon Lightsail instance in the same Availability Zone (e.g., <code>us-east-2a</code>).</p> <p>The <code>create disk from snapshot</code> operation supports tag-based access control via request tags and resource tags applied to the resource identified by <code>disk snapshot name</code>. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.CreateDiskFromSnapshot",
      "responses": [
        {
          "uuid": "390b5929-a1db-478e-a1f0-e3e9c962e972",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'random.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "118bf584-6291-4bac-8541-69105f46d9b3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6202b417-5167-4564-9d18-e9a66fd67f54",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "479de142-8a97-4d87-9df4-f70fdf1f9bb3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "24355173-ee1d-4dca-9981-d3f7f9896215",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "80e20dc0-5b26-4ee4-b681-a65ee17f2dd5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d09bfa77-f738-43c4-83ab-7eb84c0ee6eb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ba0aa5bb-04d7-4489-955e-134993945af7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8d54dad3-b940-42eb-b8a7-6707b223b106",
      "documentation": "<p>Creates a snapshot of a block storage disk. You can use snapshots for backups, to make copies of disks, and to save data before shutting down a Lightsail instance.</p> <p>You can take a snapshot of an attached disk that is in use; however, snapshots only capture data that has been written to your disk at the time the snapshot command is issued. This may exclude any data that has been cached by any applications or the operating system. If you can pause any file systems on the disk long enough to take a snapshot, your snapshot should be complete. Nevertheless, if you cannot pause all file writes to the disk, you should unmount the disk from within the Lightsail instance, issue the create disk snapshot command, and then remount the disk to ensure a consistent and complete snapshot. You may remount and use your disk while the snapshot status is pending.</p> <p>You can also use this operation to create a snapshot of an instance's system volume. You might want to do this, for example, to recover data from the system volume of a botched instance or to create a backup of the system volume like you would for a block storage disk. To create a snapshot of a system volume, just define the <code>instance name</code> parameter when issuing the snapshot command, and a snapshot of the defined instance's system volume will be created. After the snapshot is available, you can create a block storage disk from the snapshot and attach it to a running instance to access the data on the disk.</p> <p>The <code>create disk snapshot</code> operation supports tag-based access control via request tags. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.CreateDiskSnapshot",
      "responses": [
        {
          "uuid": "8ae943ac-5646-46c7-bc99-621800615b6b",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'random.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "204113ec-f27e-495c-91fa-94845ae2be2a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bb45de32-c833-42cc-9cc6-823dcad51845",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "364b0b46-ea04-4732-adac-7347fffb3727",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "26ddb86f-eff2-4f2c-a715-f52d935b12e3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7eb4a8d6-6cbd-43cb-9e40-649dcbfdff87",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e5ca08a6-779c-47fe-b74f-bb5f1920ec98",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "91e05955-ed16-41ff-a1e9-3f5f965a3d50",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7a34092b-a93f-4be8-a3d0-b2bd4a0fd00f",
      "documentation": "<p>Creates an Amazon Lightsail content delivery network (CDN) distribution.</p> <p>A distribution is a globally distributed network of caching servers that improve the performance of your website or web application hosted on a Lightsail instance. For more information, see <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-content-delivery-network-distributions\">Content delivery networks in Amazon Lightsail</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.CreateDistribution",
      "responses": [
        {
          "uuid": "89597e3a-91c3-4935-922d-7a4f9624e4ee",
          "body": "{\n  \"distribution\": {\n    \"name\": \"\",\n    \"arn\": \"\",\n    \"supportCode\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"resourceType\": \"\",\n    \"alternativeDomainNames\": [\n      \"\"\n    ],\n    \"status\": \"\",\n    \"isEnabled\": {{faker 'random.boolean'}},\n    \"domainName\": \"\",\n    \"bundleId\": \"\",\n    \"certificateName\": \"\",\n    \"origin\": {\n      \"name\": \"\",\n      \"resourceType\": \"\",\n      \"regionName\": \"\",\n      \"protocolPolicy\": \"\"\n    },\n    \"originPublicDNS\": \"\",\n    \"defaultCacheBehavior\": {\n      \"behavior\": \"\"\n    },\n    \"cacheBehaviorSettings\": {\n      \"defaultTTL\": {{faker 'random.number'}},\n      \"minimumTTL\": {{faker 'random.number'}},\n      \"maximumTTL\": {{faker 'random.number'}},\n      \"allowedHTTPMethods\": \"\",\n      \"cachedHTTPMethods\": \"\",\n      \"forwardedCookies\": {\n        \"option\": \"\",\n        \"cookiesAllowList\": [\n          \"\"\n        ]\n      },\n      \"forwardedHeaders\": {\n        \"option\": \"\",\n        \"headersAllowList\": [\n          \"{{oneOf (array 'Accept' 'Accept-Charset' 'Accept-Datetime' 'Accept-Encoding' 'Accept-Language' 'Authorization' 'CloudFront-Forwarded-Proto' 'CloudFront-Is-Desktop-Viewer' 'CloudFront-Is-Mobile-Viewer' 'CloudFront-Is-SmartTV-Viewer' 'CloudFront-Is-Tablet-Viewer' 'CloudFront-Viewer-Country' 'Host' 'Origin' 'Referer')}}\"\n        ]\n      },\n      \"forwardedQueryStrings\": {\n        \"option\": {{faker 'random.boolean'}},\n        \"queryStringsAllowList\": [\n          \"\"\n        ]\n      }\n    },\n    \"cacheBehaviors\": [\n      {\n        \"path\": \"\",\n        \"behavior\": \"\"\n      }\n    ],\n    \"ableToUpdateBundle\": {{faker 'random.boolean'}},\n    \"ipAddressType\": \"\",\n    \"tags\": [\n      {\n        \"key\": \"\",\n        \"value\": \"\"\n      }\n    ]\n  },\n  \"operation\": {\n    \"id\": \"\",\n    \"resourceName\": \"\",\n    \"resourceType\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"isTerminal\": {{faker 'random.boolean'}},\n    \"operationDetails\": \"\",\n    \"operationType\": \"\",\n    \"status\": \"\",\n    \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n    \"errorCode\": \"\",\n    \"errorDetails\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c516f343-79ed-409d-a2a6-fd3873912563",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "84fd0ce1-fc79-4698-980c-3bf4e4140799",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "18bf84f3-bb06-400a-9044-993e75ae4ee9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ea7e9209-0a65-4a6b-b6d5-68991e96d87c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3ed0a565-479a-4272-8fe7-1a95432b0f77",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5b694c8e-de8b-4f4b-ab07-f8a61d3b3304",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8f3d7d1b-9664-4973-90b6-b4dd7dc6c01b",
      "documentation": "<p>Creates a domain resource for the specified domain (e.g., example.com).</p> <p>The <code>create domain</code> operation supports tag-based access control via request tags. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.CreateDomain",
      "responses": [
        {
          "uuid": "2d751286-fe7e-461d-8d1b-a1281bda3139",
          "body": "{\n  \"operation\": {\n    \"id\": \"\",\n    \"resourceName\": \"\",\n    \"resourceType\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"isTerminal\": {{faker 'random.boolean'}},\n    \"operationDetails\": \"\",\n    \"operationType\": \"\",\n    \"status\": \"\",\n    \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n    \"errorCode\": \"\",\n    \"errorDetails\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9f0e520c-bdf6-4959-a70e-f9c7438af100",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "472fbc33-f882-4e51-b22b-8ff68e2a0644",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3e2a4094-a870-4120-9081-70eaaba49cdb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "717cae84-a7be-4aa0-92c3-499895ab1220",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9488969b-1e5f-4ae4-80ea-5c39ee621b9f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d155783e-c0d2-4d1f-8015-d274944b28f8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2c185ab9-725a-4c9f-987b-0956dab0420a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2cfcd182-2a29-4e37-94d0-27da52ad1d7f",
      "documentation": "<p>Creates one of the following domain name system (DNS) records in a domain DNS zone: Address (A), canonical name (CNAME), mail exchanger (MX), name server (NS), start of authority (SOA), service locator (SRV), or text (TXT).</p> <p>The <code>create domain entry</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>domain name</code>. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.CreateDomainEntry",
      "responses": [
        {
          "uuid": "14bd1999-7e1e-496e-bb16-69f8fc512e3a",
          "body": "{\n  \"operation\": {\n    \"id\": \"\",\n    \"resourceName\": \"\",\n    \"resourceType\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"isTerminal\": {{faker 'random.boolean'}},\n    \"operationDetails\": \"\",\n    \"operationType\": \"\",\n    \"status\": \"\",\n    \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n    \"errorCode\": \"\",\n    \"errorDetails\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "18e0498c-97e4-478e-926e-70c41c599407",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2129b920-f9d5-4b7e-975c-4ea6187badbc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "35cc17f4-c867-4f48-a57c-344b9286307e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5e3a6dec-5df8-4e84-86de-06243ce4d4c0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "34508944-d286-4539-9aef-f1affe1d5a10",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "98ce6e17-7131-48e6-827e-9a9a05292f76",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2341848c-95db-47e9-95bf-eae1c7d30e72",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4085d037-2bed-4342-aa78-6f2773cb2aa6",
      "documentation": "<p>Creates a snapshot of a specific virtual private server, or <i>instance</i>. You can use a snapshot to create a new instance that is based on that snapshot.</p> <p>The <code>create instance snapshot</code> operation supports tag-based access control via request tags. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.CreateInstanceSnapshot",
      "responses": [
        {
          "uuid": "3786c6b7-e743-493f-b293-a6febc759b21",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'random.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f4cf6e8d-9ad8-4ef3-8c39-dc9016ef3683",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8d40deba-b031-4da4-bd26-95e011630b5d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1194a879-3c25-4dc4-b5c7-3a82a70ad81e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fc6c5c46-25e5-4373-afdd-59c2514893b7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ecf37d69-06b7-4747-abcd-2a54edf0f324",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "343f25df-3f39-4c91-8dbe-1021729f88e0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6a11a530-7876-48ce-b2f9-ddc4453d665c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ee1109c9-2319-4e39-b5b8-352191ae311d",
      "documentation": "<p>Creates one or more Amazon Lightsail instances.</p> <p>The <code>create instances</code> operation supports tag-based access control via request tags. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.CreateInstances",
      "responses": [
        {
          "uuid": "9bdcad44-a425-487d-9a68-1624e6680a1d",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'random.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "43a25cf5-13c9-4461-a369-6baee2b94415",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "584217b3-d88e-4b77-a2d0-e0d6eaafcf59",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "06194328-ee15-4436-89cf-47d27284ff02",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4ae03a03-181e-49c9-8121-b234be79106b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f0e8c4ca-9fe6-44cf-8ad4-d03be84389ec",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "42f25b15-8aba-4606-bdd3-f57eefe35e61",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5644f02f-c30e-4563-a51a-ebb56891a635",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0bc746ae-9f2c-4315-a3be-608320ebe695",
      "documentation": "<p>Creates one or more new instances from a manual or automatic snapshot of an instance.</p> <p>The <code>create instances from snapshot</code> operation supports tag-based access control via request tags and resource tags applied to the resource identified by <code>instance snapshot name</code>. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.CreateInstancesFromSnapshot",
      "responses": [
        {
          "uuid": "91cc8e1c-b71f-446e-a4b6-d012139a3a1f",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'random.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "13527fbd-fa31-4e4a-801a-e342bd600049",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "80d93736-cba7-44a1-a4ac-e58c403f2df6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7a8859ce-a475-4540-b69b-997420368985",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fb173c2c-0bdd-4164-89c0-b3edb5e14cc3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8d8b156a-d8cd-477e-9151-05da19f70264",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9aea2f61-1319-492e-a842-f4598db84f61",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c2ab88f9-0737-4055-acc4-572c0d0ebfcf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fe401ce3-0af3-427b-8ffe-2c0353b14607",
      "documentation": "<p>Creates an SSH key pair.</p> <p>The <code>create key pair</code> operation supports tag-based access control via request tags. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.CreateKeyPair",
      "responses": [
        {
          "uuid": "4f2eb106-beed-4caf-8914-98465e12967e",
          "body": "{\n  \"keyPair\": {\n    \"name\": \"\",\n    \"arn\": \"\",\n    \"supportCode\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"resourceType\": \"\",\n    \"tags\": [\n      {\n        \"key\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"fingerprint\": \"\"\n  },\n  \"publicKeyBase64\": \"\",\n  \"privateKeyBase64\": \"\",\n  \"operation\": {\n    \"id\": \"\",\n    \"resourceName\": \"\",\n    \"resourceType\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"isTerminal\": {{faker 'random.boolean'}},\n    \"operationDetails\": \"\",\n    \"operationType\": \"\",\n    \"status\": \"\",\n    \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n    \"errorCode\": \"\",\n    \"errorDetails\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ef6f4178-2bc5-436f-89c8-0d0ad0257966",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bbdde57c-ae85-4829-9abd-4c6931709c89",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e0b2a098-ca1f-405e-96c9-1b1b7f389007",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7500625e-cd96-4f66-b335-63d2573449b6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "200f6724-2f94-40a6-b27a-1b9e2393d058",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "987be126-0d9f-4b81-aee5-8315e09e3280",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7ff6333c-2835-4df6-a28b-b3c215c8c58b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ea07230b-c8aa-4428-8787-7776f8ea721b",
      "documentation": "<p>Creates a Lightsail load balancer. To learn more about deciding whether to load balance your application, see <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/configure-lightsail-instances-for-load-balancing\">Configure your Lightsail instances for load balancing</a>. You can create up to 5 load balancers per AWS Region in your account.</p> <p>When you create a load balancer, you can specify a unique name and port settings. To change additional load balancer settings, use the <code>UpdateLoadBalancerAttribute</code> operation.</p> <p>The <code>create load balancer</code> operation supports tag-based access control via request tags. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.CreateLoadBalancer",
      "responses": [
        {
          "uuid": "873a311a-ee2d-453d-8a8b-d28701004cc0",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'random.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d7e245fc-77e0-4bc7-a9af-e792946506a8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2b1ce706-9e76-4f11-a2c6-d47eb96b66a3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0cdb4dc4-0c24-469a-b4af-3171d458f85c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c79ec7cb-8843-4152-8d0c-30f57a8ebd00",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "de119a7f-49de-4455-84d0-0aba836f2d4a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "983938c2-7850-4f07-87e5-4bb6ff020560",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2beb54d6-826a-4061-832f-0d29be82324d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "12bf469e-ad0a-4ed1-a266-94ac2190b2d8",
      "documentation": "<p>Creates an SSL/TLS certificate for an Amazon Lightsail load balancer.</p> <p>TLS is just an updated, more secure version of Secure Socket Layer (SSL).</p> <p>The <code>CreateLoadBalancerTlsCertificate</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>load balancer name</code>. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.CreateLoadBalancerTlsCertificate",
      "responses": [
        {
          "uuid": "afc3446c-ce4b-49b7-82f3-2dbf462e856a",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'random.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "85e33b7b-026e-471f-9e39-249e7db1c1a0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6013505b-2adb-4a1e-b2de-9c4ec25972a7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b438f2d1-4152-4f62-90d0-ac9f35c3ef83",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2d864e4e-5915-409f-9633-5e2a231b9f02",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0a7963da-ac67-4ae8-aff7-faba80a6c345",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5a399ada-c25d-4e9a-888e-58d73999de04",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "227abcc4-415e-414d-8e5c-10cc9178225e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1183402a-646f-405a-a6c6-3491a10c8459",
      "documentation": "<p>Creates a new database in Amazon Lightsail.</p> <p>The <code>create relational database</code> operation supports tag-based access control via request tags. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.CreateRelationalDatabase",
      "responses": [
        {
          "uuid": "83602a05-624f-47f3-8203-2ae1cfd64a9b",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'random.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5d7ec82c-badb-4b81-bdd5-3b474f1f9626",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "23953d86-3b60-4c0a-88a1-91094d8fd184",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "64a20cc0-3697-4d7b-a1ff-df9058532919",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "df4da2f1-5d49-4435-bb20-50f806e033e6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ca0da2e7-0f2c-4678-8fe1-1bc5f394ebec",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b5f91691-5f15-4b9a-a739-477888a0aa7b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5ddbf06b-38e1-4561-bad1-257b0b1d520a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bc83de2b-b119-49ee-89e9-99d7198ed0fa",
      "documentation": "<p>Creates a new database from an existing database snapshot in Amazon Lightsail.</p> <p>You can create a new database from a snapshot in if something goes wrong with your original database, or to change it to a different plan, such as a high availability or standard plan.</p> <p>The <code>create relational database from snapshot</code> operation supports tag-based access control via request tags and resource tags applied to the resource identified by relationalDatabaseSnapshotName. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.CreateRelationalDatabaseFromSnapshot",
      "responses": [
        {
          "uuid": "9d386988-04ed-426e-a99d-1c31e8b69722",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'random.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3a114484-eb70-4732-8a8c-317ba810e931",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "15bfb4d3-d677-4870-bbe4-ba15c0f5d8a9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "257edaaa-207a-4ff7-875f-83537039cb3d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7a5d71a9-9d80-4392-9e6a-bbf67db57e38",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cbd7dfd1-b31e-4583-8387-cc6d0613d93d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "64ceb766-6539-48a6-961a-3fa90f655a31",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aa550268-09f2-4473-bd67-8699dfb5d73b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "09b76d5e-c07d-4db9-b0b9-121875ff1f13",
      "documentation": "<p>Creates a snapshot of your database in Amazon Lightsail. You can use snapshots for backups, to make copies of a database, and to save data before deleting a database.</p> <p>The <code>create relational database snapshot</code> operation supports tag-based access control via request tags. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.CreateRelationalDatabaseSnapshot",
      "responses": [
        {
          "uuid": "683028cc-431a-4969-9883-4ec53fb3cc76",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'random.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "24774fda-ba93-435c-bf94-5d274621f80b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ea044719-a71b-456a-9c19-ab882bc978bf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6e0b818c-2f23-4298-a901-fb29fc065d7c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d942a777-f684-4430-901d-af263c273da1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c2320540-f01d-4d3e-9213-ff999574a29c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "332c114e-6018-4cf2-8fbb-1e29d6a41464",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8ad13db2-5097-4160-8f96-c9e2a933e7fc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e9d3ddbf-8338-4e4b-94f8-67618c1d19b6",
      "documentation": "<p>Deletes an alarm.</p> <p>An alarm is used to monitor a single metric for one of your resources. When a metric condition is met, the alarm can notify you by email, SMS text message, and a banner displayed on the Amazon Lightsail console. For more information, see <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-alarms\">Alarms in Amazon Lightsail</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.DeleteAlarm",
      "responses": [
        {
          "uuid": "6b19e330-ca56-492a-af6c-ab89f0949097",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'random.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a7d942c4-a977-426c-bcfc-84a68aab278a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ebc0cbbd-7102-4b6b-a308-5bd2038d303c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "30caf11f-b936-4220-b935-f766524ab001",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "64df97c6-d626-469b-8458-c4db9d1cb26e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "acf9d146-3385-4526-9dd3-beedf734749d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "279fd1a0-59e3-493d-8115-55e1c7e00af5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fd825afa-c84c-421c-9338-01479f672d04",
      "documentation": "Deletes an automatic snapshot of an instance or disk. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-configuring-automatic-snapshots\">Amazon Lightsail Developer Guide</a>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.DeleteAutoSnapshot",
      "responses": [
        {
          "uuid": "027192a0-7471-4cd7-a384-e0921e07bcf2",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'random.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a4675042-a30f-4c83-b8fb-c7e6b3bcc23b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c3df4b3d-716a-4ec2-a1bf-159ac17d8061",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "969b5e74-b5b7-45c7-9ece-21c254235e0f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e7565da2-5f04-425e-bbd2-11f686c98663",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a2dc066a-6c3b-4249-9b20-183f37246690",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7efb712c-ab7a-4cfc-b95c-76d3c2b15de3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dbe7c187-61ce-4fa8-b961-362ccf45b67a",
      "documentation": "<p>Deletes a Amazon Lightsail bucket.</p> <note> <p>When you delete your bucket, the bucket name is released and can be reused for a new bucket in your account or another AWS account.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.DeleteBucket",
      "responses": [
        {
          "uuid": "91364981-aa8f-4e09-96ad-763678a07bae",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'random.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "176a5cd0-e3f5-45e7-b502-8928c4b8334b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2443c423-cd61-4a1e-8c72-e70d94b5ca8b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "535756ec-fa8d-4416-8427-5d5cc6bbf7c0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1cf8d9b8-d5a5-485b-9f1b-3f92c7091bf2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2eb2de81-e98d-4a37-9bd1-d76bafdfc9fb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "694cf01a-ed5f-426b-8f18-c287feff1ad9",
      "documentation": "<p>Deletes an access key for the specified Amazon Lightsail bucket.</p> <p>We recommend that you delete an access key if the secret access key is compromised.</p> <p>For more information about access keys, see <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-creating-bucket-access-keys\">Creating access keys for a bucket in Amazon Lightsail</a> in the <i>Amazon Lightsail Developer Guide</i>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.DeleteBucketAccessKey",
      "responses": [
        {
          "uuid": "ff775077-3101-40e4-a1a3-1b5c949d24fd",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'random.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "936bd0c3-a7cc-407e-923d-42510b20efc0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "361aa9c8-7771-466c-821c-3c705decba51",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6c673b6d-c950-498c-aad5-855a78f87583",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6e287258-ae84-4955-afff-8107fbbc2f5d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "55ba189f-1da8-4d95-b039-5e22e3dcf18c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8db5955e-4134-4307-87e5-78711e5e2f6f",
      "documentation": "<p>Deletes an SSL/TLS certificate for your Amazon Lightsail content delivery network (CDN) distribution.</p> <p>Certificates that are currently attached to a distribution cannot be deleted. Use the <code>DetachCertificateFromDistribution</code> action to detach a certificate from a distribution.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.DeleteCertificate",
      "responses": [
        {
          "uuid": "ec8bdcdf-fe03-4903-bb85-112eb26e2a87",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'random.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d1185b92-0bcc-4f2f-a877-ab98190290e6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "678ed09a-b002-462a-9c18-1a9a3dc61370",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9989fb97-72e3-4ab4-91cb-9322ff260281",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b4f43a50-a973-426e-a207-406f0a993696",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c35e2e30-55a7-40b9-b011-11f9444e0f36",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e9d86856-f410-47d6-ae34-c9277d21f5ee",
      "documentation": "<p>Deletes a contact method.</p> <p>A contact method is used to send you notifications about your Amazon Lightsail resources. You can add one email address and one mobile phone number contact method in each AWS Region. However, SMS text messaging is not supported in some AWS Regions, and SMS text messages cannot be sent to some countries/regions. For more information, see <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-notifications\">Notifications in Amazon Lightsail</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.DeleteContactMethod",
      "responses": [
        {
          "uuid": "fdbe5609-5dda-4b29-b889-ec492e802551",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'random.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0ea0a2c3-d89f-44c3-a93b-009d1d6f2d4f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "037175c8-bc7c-4d6a-aa91-e7d7b79d8da0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3a035ae6-be84-4109-9c2c-6869574d715b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d6bedb85-e2c7-499a-b7c0-7ba7733d58aa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0a9c87aa-8ab9-4d6f-a8ed-9dacad55258d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "47c94cdf-0b87-414a-834b-67e177e0325f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "30bd9fe4-0001-4c57-8405-8e1a116aef63",
      "documentation": "Deletes a container image that is registered to your Amazon Lightsail container service.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.DeleteContainerImage",
      "responses": [
        {
          "uuid": "68f9f76a-6ccb-4706-b3bf-d9fc91b73665",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b2f017d9-7ed2-4660-b952-1ca23ee2fc2f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f7cf9ca5-717c-4f55-8f78-ff05bf0ae391",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b4af1a59-6e68-4398-a6fc-7673c4c9ae24",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b184d54b-b6fb-45df-a9c9-d62a12bb23dd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d2366f1f-e25e-4341-b51f-3c2344c486f1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cc299639-0554-4a91-b50c-5b2d380fdc44",
      "documentation": "Deletes your Amazon Lightsail container service.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.DeleteContainerService",
      "responses": [
        {
          "uuid": "a309e4db-b60c-478c-b612-177642577dc9",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9b0174c5-d146-4563-95ba-34288ae32edd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c1c16bd9-b3c4-49fa-89d2-e16d424c5b78",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9f8151d0-b461-4731-ba35-9cbcf0d8606e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4fb52eb3-d747-4adc-b5ac-37759a306474",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "116bf4a7-ac3c-46bc-8a82-dc19f9bb8100",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fe4a7ae7-235b-4537-b080-99e3f7e87059",
      "documentation": "<p>Deletes the specified block storage disk. The disk must be in the <code>available</code> state (not attached to a Lightsail instance).</p> <note> <p>The disk may remain in the <code>deleting</code> state for several minutes.</p> </note> <p>The <code>delete disk</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>disk name</code>. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.DeleteDisk",
      "responses": [
        {
          "uuid": "bfb15210-7666-4f76-bf60-da41af174b07",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'random.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1d7cc293-0fc2-4933-aa74-0cc03f21f24c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "72484c6b-be1a-4cc1-b860-8d24aeda4c9d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e76b0d95-97ef-469c-9c09-ca86790d5e74",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2fbb1c05-c5f9-4cd7-907b-5ed9cac20bdc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "53ca1405-ee2e-4af6-b7aa-2035dd0cc473",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8d36f49d-8c3d-47f0-831f-3294e44dea85",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9f60e80b-4bf0-442b-bf35-53c0250e9ea7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6e48e585-e748-4ff8-9a5e-323e1a2e7d4e",
      "documentation": "<p>Deletes the specified disk snapshot.</p> <p>When you make periodic snapshots of a disk, the snapshots are incremental, and only the blocks on the device that have changed since your last snapshot are saved in the new snapshot. When you delete a snapshot, only the data not needed for any other snapshot is removed. So regardless of which prior snapshots have been deleted, all active snapshots will have access to all the information needed to restore the disk.</p> <p>The <code>delete disk snapshot</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>disk snapshot name</code>. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.DeleteDiskSnapshot",
      "responses": [
        {
          "uuid": "066fc16c-229c-4cd5-87ca-5e53184cbbc3",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'random.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "74839b38-663b-4b3c-a8a4-2755cc1e5cde",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "28c6d773-2560-4c17-bc8c-d53c3df0d9ff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d2046d35-83de-407e-b8db-9cdad15b662d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "75b4c015-5755-4c8e-8cc1-8c1862cd409f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b5a8d277-5024-4b82-84a4-6a8786ed7ab3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "01b5497d-ea1f-4957-98ca-0a8eaeba894f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1f19b430-13b8-4958-b03a-9ef356255984",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d0766e00-6ffb-4b6f-9f28-8ac2b0efc644",
      "documentation": "Deletes your Amazon Lightsail content delivery network (CDN) distribution.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.DeleteDistribution",
      "responses": [
        {
          "uuid": "429ca905-a299-4ec7-a541-0277ac00ee95",
          "body": "{\n  \"operation\": {\n    \"id\": \"\",\n    \"resourceName\": \"\",\n    \"resourceType\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"isTerminal\": {{faker 'random.boolean'}},\n    \"operationDetails\": \"\",\n    \"operationType\": \"\",\n    \"status\": \"\",\n    \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n    \"errorCode\": \"\",\n    \"errorDetails\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5f77c136-b4fb-4155-a413-de18af69afc1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "16a54b8d-3680-4301-8606-026fac9ed9fc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "274d6ed3-27d8-4f88-8b24-62cd263e507a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1afec523-1f4f-4cde-aaf0-1ff33b73f0b3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2597cbcc-e6ed-4e8c-b626-93ac57320d5c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "64dd53b3-0366-45cf-a0c8-e420c106ef06",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4d6c7f8f-cae0-4d42-9067-ddd6a75e364c",
      "documentation": "<p>Deletes the specified domain recordset and all of its domain records.</p> <p>The <code>delete domain</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>domain name</code>. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.DeleteDomain",
      "responses": [
        {
          "uuid": "bd4f4b40-6393-4515-a38e-e62e4710d453",
          "body": "{\n  \"operation\": {\n    \"id\": \"\",\n    \"resourceName\": \"\",\n    \"resourceType\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"isTerminal\": {{faker 'random.boolean'}},\n    \"operationDetails\": \"\",\n    \"operationType\": \"\",\n    \"status\": \"\",\n    \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n    \"errorCode\": \"\",\n    \"errorDetails\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "93b476fd-6abd-43a3-808e-c8a1e63ca3a8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1452fb8f-1828-4c0e-905a-f86e1d8f77d4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e05f8165-0c34-4326-a8fe-4a7b9a4da0a2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3d9752c5-3e12-4542-916c-0d5158e7b11c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d63ce916-ff99-4805-b407-4e50b8ff2cdd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5fc27d91-bd77-4256-8f5c-98339aabd263",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d51c8224-6e42-4c46-b031-cf8f39a2b410",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fbd924b3-6ce4-40f5-bceb-a0d06eb41d0a",
      "documentation": "<p>Deletes a specific domain entry.</p> <p>The <code>delete domain entry</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>domain name</code>. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.DeleteDomainEntry",
      "responses": [
        {
          "uuid": "5fac7de6-8fb5-46e7-9d28-c2a8d6f9feb6",
          "body": "{\n  \"operation\": {\n    \"id\": \"\",\n    \"resourceName\": \"\",\n    \"resourceType\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"isTerminal\": {{faker 'random.boolean'}},\n    \"operationDetails\": \"\",\n    \"operationType\": \"\",\n    \"status\": \"\",\n    \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n    \"errorCode\": \"\",\n    \"errorDetails\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "68d50622-cf0c-43cb-ad9c-4e17b421d5f7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7f83515d-7317-4d6e-b91f-9e95559af9e2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d7d84527-3b10-400d-b648-f952d90325b7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f53ca673-2c3e-44e0-bcfd-21f649d358b7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4c231b84-bf67-4db7-ae47-aed3baeae6ac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1c4df06e-9f72-483b-9cdf-8d11f3899e70",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "873df88b-cc58-4ebe-a04f-cbe37af08dac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7f6fef94-e10a-45dd-851e-ca1a12d02de9",
      "documentation": "<p>Deletes an Amazon Lightsail instance.</p> <p>The <code>delete instance</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>instance name</code>. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.DeleteInstance",
      "responses": [
        {
          "uuid": "0ce601dd-d08a-491d-8160-5fee42d986c2",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'random.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ff2df630-d473-45dd-83e2-9b696b964a02",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "64be8122-fa9d-4e7b-b844-554e588a0573",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c12230a8-0bd9-42da-8938-1cb309c1ef29",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "009630b3-0a0a-4963-977c-bf47449a4fde",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0d4fde4a-2289-4a2e-9336-82f727ea0dde",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8f7ee635-6fdd-499e-a3cb-98d92c8b1ac7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c9716496-d892-405a-8d2c-a36b3f4c249a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0b76c62f-bb0b-4846-95ee-72e571867e3e",
      "documentation": "<p>Deletes a specific snapshot of a virtual private server (or <i>instance</i>).</p> <p>The <code>delete instance snapshot</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>instance snapshot name</code>. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.DeleteInstanceSnapshot",
      "responses": [
        {
          "uuid": "757e16b7-920b-4aea-a0a6-f689de2b64d9",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'random.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "218f1aa2-f093-4351-9c48-132a0da813dd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2c6c0382-cbc4-4234-9b43-959a1adb87b2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f77965ef-74be-4c7d-b374-484c2d6952ca",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "87013f7f-ecfb-4f31-adb8-f284a431bc7a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9d5a4179-a530-41f6-85ba-d3a59b81182b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2f998dca-a283-4e6f-a33e-057f9ad04af4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "665cbd38-35fd-4807-811c-5dc13b518f72",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6f0aa1d4-19ee-481c-91b9-d77dbf16eb76",
      "documentation": "<p>Deletes a specific SSH key pair.</p> <p>The <code>delete key pair</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>key pair name</code>. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.DeleteKeyPair",
      "responses": [
        {
          "uuid": "b4387e13-b87a-48fb-beb8-500f17d530b3",
          "body": "{\n  \"operation\": {\n    \"id\": \"\",\n    \"resourceName\": \"\",\n    \"resourceType\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"isTerminal\": {{faker 'random.boolean'}},\n    \"operationDetails\": \"\",\n    \"operationType\": \"\",\n    \"status\": \"\",\n    \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n    \"errorCode\": \"\",\n    \"errorDetails\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0e1cd965-c98b-45af-a543-159c3960b5c5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5b2c7b0c-92e7-472e-ac1e-e1f040d10e0b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8f44e580-e547-4fc4-9dcc-5e230d7f3b55",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f2111820-c58a-416d-a616-840d2ca0f922",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "264c28ee-748d-4829-bc1e-c9faa85e3a59",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "177703ec-0b9d-4f80-b9a0-a671f5ee3041",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0a628ccb-ab6f-440f-9923-86a24809adc0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "36c87fcb-134c-4d83-aa8b-e23269f2cbcf",
      "documentation": "<p>Deletes the known host key or certificate used by the Amazon Lightsail browser-based SSH or RDP clients to authenticate an instance. This operation enables the Lightsail browser-based SSH or RDP clients to connect to the instance after a host key mismatch.</p> <important> <p>Perform this operation only if you were expecting the host key or certificate mismatch or if you are familiar with the new host key or certificate on the instance. For more information, see <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-troubleshooting-browser-based-ssh-rdp-client-connection\">Troubleshooting connection issues when using the Amazon Lightsail browser-based SSH or RDP client</a>.</p> </important>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.DeleteKnownHostKeys",
      "responses": [
        {
          "uuid": "d9f5b738-9434-400f-b767-5f74e46fd575",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'random.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fd2abd03-ec26-4199-a16c-820a5bf517d5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "401dbd12-eaba-4741-b273-f0cc68b41d9b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7badeebb-90ef-422f-9d9a-8ca1969cb938",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0e5c57ef-3a7e-4279-8ddf-49ea60f4dd10",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ed311216-5224-4442-a226-c72610190732",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e52d228b-29a4-4c10-8ca3-2daae6150387",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b4a4cbb6-5b3b-4c3b-b765-460847bcf09b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ba6ced57-efe6-4d25-96d6-9585fdff3a35",
      "documentation": "<p>Deletes a Lightsail load balancer and all its associated SSL/TLS certificates. Once the load balancer is deleted, you will need to create a new load balancer, create a new certificate, and verify domain ownership again.</p> <p>The <code>delete load balancer</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>load balancer name</code>. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.DeleteLoadBalancer",
      "responses": [
        {
          "uuid": "ca930cd1-10b9-4990-a219-9ec451d498cb",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'random.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7bdf3ae5-ca47-4d60-afed-39fd72f0ec55",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "86f80790-839f-4bbe-8450-12a7203fe305",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aa1237ca-b4fe-4d5a-950c-04a5ff8ec215",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8064825a-69b4-4873-b41d-1fd35d347eba",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2359174f-f4be-4338-a1be-494b7aed1aa6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cc445da5-9edf-451b-a59e-57fc3b95f5c0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eb25cf7c-f3dc-4bfa-b0c6-9438a699a349",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2a80f6cf-8557-4f7e-b8c9-1c73fe4bc395",
      "documentation": "<p>Deletes an SSL/TLS certificate associated with a Lightsail load balancer.</p> <p>The <code>DeleteLoadBalancerTlsCertificate</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>load balancer name</code>. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.DeleteLoadBalancerTlsCertificate",
      "responses": [
        {
          "uuid": "45dc7bed-2809-45dc-b7f8-6010c8ee6828",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'random.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8fcd47e3-74c7-4dc5-bcd0-585531c3ad40",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9e762e9d-98d0-4fe9-996f-37a5b02210f9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f85d22dd-0476-459a-82e6-e4a7283a9d22",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a7d35a96-0bbd-4655-afb0-380134c433ff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "de142f92-c13d-4dd5-9712-c13e6596eea5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a7532352-aebb-4155-987a-de97d60b4d48",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c9d5d561-ab79-46d9-96a0-eaae78d48490",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1e5882c1-cfa4-4ec3-baa5-92da26f35c9e",
      "documentation": "<p>Deletes a database in Amazon Lightsail.</p> <p>The <code>delete relational database</code> operation supports tag-based access control via resource tags applied to the resource identified by relationalDatabaseName. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.DeleteRelationalDatabase",
      "responses": [
        {
          "uuid": "b6b41b52-7d70-4574-8fae-ee16474979de",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'random.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ddb705db-2313-44ab-9bfd-36eb56f4aff1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d502c37a-f548-435d-8efe-b2b7a2f5ede3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1f88ebb5-a917-4e44-88a2-c2203e6ee2a4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bb892354-c325-4a6b-b609-e47238cd6994",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d2d69dd8-ae72-42bf-a63f-b111a09fc97a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d3bbe4d3-8283-4266-a779-7392521c5de5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "27d75fdb-a81e-46d6-b33c-f1eb8c4ae575",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7f47131c-9cfb-4518-a0d4-02b037f2f452",
      "documentation": "<p>Deletes a database snapshot in Amazon Lightsail.</p> <p>The <code>delete relational database snapshot</code> operation supports tag-based access control via resource tags applied to the resource identified by relationalDatabaseName. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.DeleteRelationalDatabaseSnapshot",
      "responses": [
        {
          "uuid": "3b318d5a-de40-425a-8501-cd0b1dab44a2",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'random.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bc2ab793-3668-4aa5-8eb8-903833245815",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6f177299-252e-4d77-840a-32a88dd2fa5f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e6f0d44c-d11a-4d7c-baa5-4ce6c0f23c1f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "de2ea15b-8f06-4376-8244-655ad4a0ac31",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d87ae2a3-5333-499a-8a2c-c930067553cf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1c5e27e4-913f-4259-ae87-4ba54f4b41c5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0fa8bfa2-4b25-4086-8023-e68ab768bdf7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "49ff79c7-3acc-4fcc-a841-6eefa547b38a",
      "documentation": "<p>Detaches an SSL/TLS certificate from your Amazon Lightsail content delivery network (CDN) distribution.</p> <p>After the certificate is detached, your distribution stops accepting traffic for all of the domains that are associated with the certificate.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.DetachCertificateFromDistribution",
      "responses": [
        {
          "uuid": "bf5ebc6a-d83f-4454-90b7-579e180beede",
          "body": "{\n  \"operation\": {\n    \"id\": \"\",\n    \"resourceName\": \"\",\n    \"resourceType\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"isTerminal\": {{faker 'random.boolean'}},\n    \"operationDetails\": \"\",\n    \"operationType\": \"\",\n    \"status\": \"\",\n    \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n    \"errorCode\": \"\",\n    \"errorDetails\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "123e1be3-2a30-4c1b-844e-4ba4b55ddd96",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2d9ab581-dec2-4551-8ae5-059fe6617fe6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d77f5d24-9f03-412e-a3ef-27b8dbee6ade",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "465d7dcc-c9dc-4a42-b7aa-6fb3957ea100",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cc879ac8-bc4a-463d-920a-fe111fe40b66",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7979bbe8-fe76-49ea-b45a-0597b0a3d28e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "93b3c293-9a51-48e9-8dd9-f5592b9b0238",
      "documentation": "<p>Detaches a stopped block storage disk from a Lightsail instance. Make sure to unmount any file systems on the device within your operating system before stopping the instance and detaching the disk.</p> <p>The <code>detach disk</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>disk name</code>. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.DetachDisk",
      "responses": [
        {
          "uuid": "2c5cec66-245a-4f05-8e48-59dded9d9af9",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'random.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cafa4821-8d6a-4afe-b930-1c5c8cc01433",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9b7cd068-d10f-4929-9031-f73fa6542cd8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ec303c6b-9170-4c4e-b82d-80d0846c03de",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e9b322cf-44af-459b-87fd-83b64f45ce2a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cff714b0-f184-440c-93cf-266dbe8a54c5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1d566d07-2b35-45d0-97bb-c255786a860b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d972fbd1-1976-40b5-a34b-530c0e9b709d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6e61af6e-827b-4f56-88ae-495d1bb0abe3",
      "documentation": "<p>Detaches the specified instances from a Lightsail load balancer.</p> <p>This operation waits until the instances are no longer needed before they are detached from the load balancer.</p> <p>The <code>detach instances from load balancer</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>load balancer name</code>. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.DetachInstancesFromLoadBalancer",
      "responses": [
        {
          "uuid": "b7068865-b370-4ff8-96d8-d0dbdb87886d",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'random.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "67b4555d-9ce9-49ea-9342-06d52b9c94e8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0d112910-67f9-4caf-bf23-6bc8e0f792e1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bd58602d-9c9c-409a-9985-72d1f0bae3fb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a4da6c70-66bf-4922-82ec-c48e7b519791",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2830d6e0-3dee-42b7-837c-b2a0cfded615",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b3743dba-8787-40cc-9a23-01d018a07746",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cbc6fc16-6828-4ea2-9dec-f5feecca1007",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fd603cdf-2052-4fd5-aafc-427e22a6708a",
      "documentation": "Detaches a static IP from the Amazon Lightsail instance to which it is attached.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.DetachStaticIp",
      "responses": [
        {
          "uuid": "4864ea2a-575c-4c76-9070-36b86e4d1444",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'random.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e7631e1c-feb4-49b0-b251-826ab5d14e5c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e25f535c-daba-460b-a09f-836dc3d24d1b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1214c866-8617-40a5-b76a-9bbc6fff9332",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9d6ad2b9-895c-486b-b226-dacfcfaac2dd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "055167a2-ac4c-49d0-89f3-a5a9778065bd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "88e0e465-75ed-455d-8585-519d3baa4361",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "babf9a03-6f17-452c-b73c-9d927a6120be",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9afa79cf-ed5b-4342-85bd-dd288528c8b0",
      "documentation": "Disables an add-on for an Amazon Lightsail resource. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-configuring-automatic-snapshots\">Amazon Lightsail Developer Guide</a>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.DisableAddOn",
      "responses": [
        {
          "uuid": "d4c76246-7076-4e5a-a681-869931cad0af",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'random.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9782dfc3-057f-4b48-a8e3-48c79851659b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ab7f37db-bc9d-4823-b1e9-e46d69ecc89b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "873486c3-3f42-4a7e-91a1-4fbac6f53002",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8177288c-9186-468b-a9af-2a215355152b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3759a089-69af-4a57-b57f-cdf50a18f859",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ce6656ba-5c4b-4de2-bcae-0c69f60a4051",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3c671da3-2dd3-4f39-8fed-196b2587d62d",
      "documentation": "Downloads the default SSH key pair from the user's account.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.DownloadDefaultKeyPair",
      "responses": [
        {
          "uuid": "e3f3fb46-635d-47f2-9702-00e9afe01f4d",
          "body": "{\n  \"publicKeyBase64\": \"\",\n  \"privateKeyBase64\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c15d8a2c-1688-4284-90a9-f20684775602",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "46085535-8fb8-47b6-aff3-1c4aef1047ef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "685816ee-e769-4e45-b8f3-c5e9a204c6aa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f32b1963-ac0f-499e-aa42-159ae421cda3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8a3760a0-8473-4e83-bc99-e7387b4e9091",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "401b0b11-c69b-4a7b-92e1-df5f8d402825",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0a76e683-10d5-4b02-9995-ff2b73f62576",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "391f7059-5957-4f31-9e96-4830d76ad4ce",
      "documentation": "Enables or modifies an add-on for an Amazon Lightsail resource. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-configuring-automatic-snapshots\">Amazon Lightsail Developer Guide</a>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.EnableAddOn",
      "responses": [
        {
          "uuid": "3120025c-00f6-49a9-9bb5-083143389315",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'random.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a066373f-a7b8-4d83-b3f0-ba43689a077d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6678ffa0-7613-4d20-af91-1932756bde8f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "77430faa-791d-4d36-9569-2da7a2e78dee",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0533ceeb-63e9-48cd-9ef6-4ccff590ef1d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1721e31a-4c1d-47ea-a855-3d1eb1f988c1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b527bd3a-4f63-4875-92d4-b69458d8efa5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e84d05c9-4b7b-41bd-a1a4-cac00e0a7a0f",
      "documentation": "<p>Exports an Amazon Lightsail instance or block storage disk snapshot to Amazon Elastic Compute Cloud (Amazon EC2). This operation results in an export snapshot record that can be used with the <code>create cloud formation stack</code> operation to create new Amazon EC2 instances.</p> <p>Exported instance snapshots appear in Amazon EC2 as Amazon Machine Images (AMIs), and the instance system disk appears as an Amazon Elastic Block Store (Amazon EBS) volume. Exported disk snapshots appear in Amazon EC2 as Amazon EBS volumes. Snapshots are exported to the same Amazon Web Services Region in Amazon EC2 as the source Lightsail snapshot.</p> <p/> <p>The <code>export snapshot</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>source snapshot name</code>. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p> <note> <p>Use the <code>get instance snapshots</code> or <code>get disk snapshots</code> operations to get a list of snapshots that you can export to Amazon EC2.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.ExportSnapshot",
      "responses": [
        {
          "uuid": "522fad9d-e110-42f7-a895-6abc36054fe0",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'random.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eb7c1789-791c-491f-8072-67b7d1c49e9b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5da45b6d-d7ec-4551-8828-552af37f43c2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "78045dd1-00bd-48d6-a703-7f0d2a035dd5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4c3679fc-1efd-44d8-b466-132d146fb733",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f5ad2ce7-1bbe-40f2-add2-a4f7d5da3468",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8c00002c-a642-426b-8dff-f4dc8e299419",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8866ec45-e61d-4033-b20c-bb0296dfe317",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ea51046e-9404-4dad-b205-64e36cb2cc7b",
      "documentation": "Returns the names of all active (not deleted) resources.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetActiveNames",
      "responses": [
        {
          "uuid": "866c30c4-991d-49f3-bc40-ea1b17be7a5f",
          "body": "{\n  \"activeNames\": [\n    \"\"\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f32381fe-b0cf-4787-941e-9e647fb9143b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "36f9bb56-5845-4667-819b-3db997eb964a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "450c6712-fa07-41ad-8bf2-7c7679634780",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bd42351f-43bb-4fcd-ae70-4fb5ecde2e5d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "90ab6fd7-3f19-4c55-b02e-96432b516e82",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9eea8723-b954-4286-a531-c69192d405fb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c54f826a-bdfd-48d6-bbdc-addd4622c59a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3cb34971-577d-4fff-bb87-73225ade62a9",
      "documentation": "<p>Returns information about the configured alarms. Specify an alarm name in your request to return information about a specific alarm, or specify a monitored resource name to return information about all alarms for a specific resource.</p> <p>An alarm is used to monitor a single metric for one of your resources. When a metric condition is met, the alarm can notify you by email, SMS text message, and a banner displayed on the Amazon Lightsail console. For more information, see <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-alarms\">Alarms in Amazon Lightsail</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetAlarms",
      "responses": [
        {
          "uuid": "215f2d28-d504-4f0c-b402-39d4f1d66a91",
          "body": "{\n  \"alarms\": [\n    {\n      \"name\": \"\",\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"resourceType\": \"\",\n      \"supportCode\": \"\",\n      \"monitoredResourceInfo\": {\n        \"arn\": \"\",\n        \"name\": \"\",\n        \"resourceType\": \"\"\n      },\n      \"comparisonOperator\": \"\",\n      \"evaluationPeriods\": {{faker 'random.number'}},\n      \"period\": {{faker 'random.number'}},\n      \"threshold\": {{faker 'random.float'}},\n      \"datapointsToAlarm\": {{faker 'random.number'}},\n      \"treatMissingData\": \"\",\n      \"statistic\": \"\",\n      \"metricName\": \"\",\n      \"state\": \"\",\n      \"unit\": \"\",\n      \"contactProtocols\": [\n        \"{{oneOf (array 'Email' 'SMS')}}\"\n      ],\n      \"notificationTriggers\": [\n        \"{{oneOf (array 'OK' 'ALARM' 'INSUFFICIENT_DATA')}}\"\n      ],\n      \"notificationEnabled\": {{faker 'random.boolean'}}\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b56f40ae-2b5e-442f-a665-6858c5f4d477",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d6711bb4-2d00-4ca3-9fba-81ce53f287ee",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7a01cbf7-5764-44ca-b6eb-8bdbcc0969dd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "039244ed-9b6f-47c4-8768-e28e83b55db2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4908f576-c9cc-46d8-b453-f34eacc26b43",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "380cd8a5-6b96-4476-84cb-5432396273f2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "99dfa851-e04d-48c8-9fdb-3ef09895a4ca",
      "documentation": "Returns the available automatic snapshots for an instance or disk. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-configuring-automatic-snapshots\">Amazon Lightsail Developer Guide</a>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetAutoSnapshots",
      "responses": [
        {
          "uuid": "25a0eb11-571f-4758-842a-9fd35dcf70ac",
          "body": "{\n  \"resourceName\": \"\",\n  \"resourceType\": \"\",\n  \"autoSnapshots\": [\n    {\n      \"date\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"status\": \"\",\n      \"fromAttachedDisks\": [\n        {\n          \"path\": \"\",\n          \"sizeInGb\": {{faker 'random.number'}}\n        }\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8ff04dcb-dfad-48e2-a20e-226bb94c2fbc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6273694d-887c-48e9-b3e7-bc76d63d7489",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "854c6d67-7a7f-4ebd-8d61-6c53f8c947ec",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2767e8a6-e54a-42a7-af83-adcd2dbbdc38",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "504c2b4e-3a3f-454b-9cd0-c312d4356a31",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "98fbb26d-702f-4788-ae5d-5e6fc4715ccc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "09749cb8-def2-4f39-8f54-d238a3b19fc4",
      "documentation": "<p>Returns the list of available instance images, or <i>blueprints</i>. You can use a blueprint to create a new instance already running a specific operating system, as well as a preinstalled app or development stack. The software each instance is running depends on the blueprint image you choose.</p> <note> <p>Use active blueprints when creating new instances. Inactive blueprints are listed to support customers with existing instances and are not necessarily available to create new instances. Blueprints are marked inactive when they become outdated due to operating system updates or new application releases.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetBlueprints",
      "responses": [
        {
          "uuid": "129c59a6-56c0-4f46-8712-3f5165d04437",
          "body": "{\n  \"blueprints\": [\n    {\n      \"blueprintId\": \"\",\n      \"name\": \"\",\n      \"group\": \"\",\n      \"type\": \"\",\n      \"description\": \"\",\n      \"isActive\": {{faker 'random.boolean'}},\n      \"minPower\": {{faker 'random.number'}},\n      \"version\": \"\",\n      \"versionCode\": \"\",\n      \"productUrl\": \"\",\n      \"licenseUrl\": \"\",\n      \"platform\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f84a9a35-77b8-4061-b5c0-6853c0f99f07",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5206872c-d233-469c-87c5-6807b9969edb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a8b65dcc-3938-4158-8df1-12e9275037b3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3d20e3d6-7c7d-4f84-97fd-d30adaceb1fb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8839007c-d533-47e2-8e36-c5aa30945a7d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "56597eaa-f926-4184-a892-c7b76f498ec2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "87e04b21-094f-4e9d-a830-d2455e6f6332",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f0d728fb-5a80-4d91-af40-cc13df8e78a5",
      "documentation": "<p>Returns the existing access key IDs for the specified Amazon Lightsail bucket.</p> <important> <p>This action does not return the secret access key value of an access key. You can get a secret access key only when you create it from the response of the <a>CreateBucketAccessKey</a> action. If you lose the secret access key, you must create a new access key.</p> </important>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetBucketAccessKeys",
      "responses": [
        {
          "uuid": "25638682-ab90-4fd2-a0e7-cd5eb5fc6973",
          "body": "{\n  \"accessKeys\": [\n    {\n      \"accessKeyId\": \"\",\n      \"secretAccessKey\": \"\",\n      \"status\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUsed\": {\n        \"lastUsedDate\": \"{{faker 'date.recent' 365}}\",\n        \"region\": \"\",\n        \"serviceName\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9bc68ea7-8601-411b-a85e-d1d24addcc6d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "821dfe75-3eff-4ddb-8cbc-6adabcd0dd09",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "97770751-1267-496b-ae97-47f6c9ed9f75",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6fd1c538-6ba0-482e-998a-4bf16b43da1a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "31d0305e-8542-4c0d-b04f-db08522ff568",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "35543d68-da05-404b-bb60-bc6539d5bb75",
      "documentation": "<p>Returns the bundles that you can apply to a Amazon Lightsail bucket.</p> <p>The bucket bundle specifies the monthly cost, storage quota, and data transfer quota for a bucket.</p> <p>Use the <a>UpdateBucketBundle</a> action to update the bundle for a bucket.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetBucketBundles",
      "responses": [
        {
          "uuid": "b3d92a97-7505-47df-b4d4-f6fa90a66372",
          "body": "{\n  \"bundles\": [\n    {\n      \"bundleId\": \"\",\n      \"name\": \"\",\n      \"price\": {{faker 'random.float'}},\n      \"storagePerMonthInGb\": {{faker 'random.number'}},\n      \"transferPerMonthInGb\": {{faker 'random.number'}},\n      \"isActive\": {{faker 'random.boolean'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ae1499dc-1633-4bcb-832f-a3946cc91735",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d94b999f-f0dc-4d51-a06e-47fbfaebb5a3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e8dc0718-c7a8-4892-839c-5bf0a9cb63e4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c9c6849f-f888-4e34-9b97-32bcd6f5e2b1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fc9197d3-fccc-4a09-953b-ae29e7ee7d37",
      "documentation": "<p>Returns the data points of a specific metric for an Amazon Lightsail bucket.</p> <p>Metrics report the utilization of a bucket. View and collect metric data regularly to monitor the number of objects stored in a bucket (including object versions) and the storage space used by those objects.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetBucketMetricData",
      "responses": [
        {
          "uuid": "6f0c0e9b-6aef-4be3-abf6-fc5e2b1718d1",
          "body": "{\n  \"metricName\": \"\",\n  \"metricData\": [\n    {\n      \"average\": {{faker 'random.float'}},\n      \"maximum\": {{faker 'random.float'}},\n      \"minimum\": {{faker 'random.float'}},\n      \"sampleCount\": {{faker 'random.float'}},\n      \"sum\": {{faker 'random.float'}},\n      \"timestamp\": \"{{faker 'date.recent' 365}}\",\n      \"unit\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6997a3b2-f6e3-455c-bb13-6853e6f0207b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cc7ee0a1-b62e-4bee-8192-e46b30ade614",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4b09959b-b3c1-4007-87bb-2ec3aa7ea4e9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0e0872f7-f3d3-4240-ac06-0b3065bf2ecd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c3a5d58a-4a86-497f-9b43-2f20776e364d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3c015398-7a3f-4fa6-b026-7693e0eea5d3",
      "documentation": "<p>Returns information about one or more Amazon Lightsail buckets.</p> <p>For more information about buckets, see <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/buckets-in-amazon-lightsail\">Buckets in Amazon Lightsail</a> in the <i>Amazon Lightsail Developer Guide</i>..</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetBuckets",
      "responses": [
        {
          "uuid": "a1e17666-e1c6-4c53-8d42-8b0bba445612",
          "body": "{\n  \"buckets\": [\n    {\n      \"resourceType\": \"\",\n      \"accessRules\": {\n        \"getObject\": \"\",\n        \"allowPublicOverrides\": {{faker 'random.boolean'}}\n      },\n      \"arn\": \"\",\n      \"bundleId\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"url\": \"\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"name\": \"\",\n      \"supportCode\": \"\",\n      \"tags\": [\n        {\n          \"key\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"objectVersioning\": \"\",\n      \"ableToUpdateBundle\": {{faker 'random.boolean'}},\n      \"readonlyAccessAccounts\": [\n        \"\"\n      ],\n      \"resourcesReceivingAccess\": [\n        {\n          \"name\": \"\",\n          \"resourceType\": \"\"\n        }\n      ],\n      \"state\": {\n        \"code\": \"\",\n        \"message\": \"\"\n      }\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "728841a2-b71e-411a-8126-c03c9cc4a62a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8f1bf5fa-77c2-46ca-bdaf-a33bc71f356a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4b1ea54d-117b-4c14-8592-22670a5edf05",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ec273333-ea26-4b85-89cc-76eec1c87a36",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "19cafbad-a526-461b-a9e8-5fc99133ad1c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "576d406b-dea3-4276-8daf-a41950013101",
      "documentation": "Returns the list of bundles that are available for purchase. A bundle describes the specs for your virtual private server (or <i>instance</i>).",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetBundles",
      "responses": [
        {
          "uuid": "015cc2e9-0a97-4461-99fd-a9c3097e37c5",
          "body": "{\n  \"bundles\": [\n    {\n      \"price\": {{faker 'random.float'}},\n      \"cpuCount\": {{faker 'random.number'}},\n      \"diskSizeInGb\": {{faker 'random.number'}},\n      \"bundleId\": \"\",\n      \"instanceType\": \"\",\n      \"isActive\": {{faker 'random.boolean'}},\n      \"name\": \"\",\n      \"power\": {{faker 'random.number'}},\n      \"ramSizeInGb\": {{faker 'random.float'}},\n      \"transferPerMonthInGb\": {{faker 'random.number'}},\n      \"supportedPlatforms\": [\n        \"{{oneOf (array 'LINUX_UNIX' 'WINDOWS')}}\"\n      ]\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7a2406dc-fc98-4524-99ab-dbacd7ffd356",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "14ab3a07-3179-4b8a-81bd-5a52822b81db",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d156da06-6f8b-4f1b-8b9d-55bdba758ddb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1388866f-7bb6-4b95-a47a-81955c78a1a3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f63570b1-f87d-45eb-9977-7c65ae16e0f3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e8448629-a2bd-442e-98d4-625cab7e718b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c5b52db6-ed0f-44d1-bdbd-384b2b2cf46a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d1319f9e-72d8-4439-a330-880730a93aeb",
      "documentation": "<p>Returns information about one or more Amazon Lightsail SSL/TLS certificates.</p> <note> <p>To get a summary of a certificate, ommit <code>includeCertificateDetails</code> from your request. The response will include only the certificate Amazon Resource Name (ARN), certificate name, domain name, and tags.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetCertificates",
      "responses": [
        {
          "uuid": "10ba8d4b-fd03-4b71-8f19-180c7cee6600",
          "body": "{\n  \"certificates\": [\n    {\n      \"certificateArn\": \"\",\n      \"certificateName\": \"\",\n      \"domainName\": \"\",\n      \"certificateDetail\": {\n        \"arn\": \"\",\n        \"name\": \"\",\n        \"domainName\": \"\",\n        \"status\": \"\",\n        \"serialNumber\": \"\",\n        \"subjectAlternativeNames\": [\n          \"\"\n        ],\n        \"domainValidationRecords\": [\n          {\n            \"domainName\": \"\",\n            \"resourceRecord\": {\n              \"name\": \"\",\n              \"type\": \"\",\n              \"value\": \"\"\n            }\n          }\n        ],\n        \"requestFailureReason\": \"\",\n        \"inUseResourceCount\": {{faker 'random.number'}},\n        \"keyAlgorithm\": \"\",\n        \"createdAt\": \"{{faker 'date.recent' 365}}\",\n        \"issuedAt\": \"{{faker 'date.recent' 365}}\",\n        \"issuerCA\": \"\",\n        \"notBefore\": \"{{faker 'date.recent' 365}}\",\n        \"notAfter\": \"{{faker 'date.recent' 365}}\",\n        \"eligibleToRenew\": \"\",\n        \"renewalSummary\": {\n          \"domainValidationRecords\": [\n            {\n              \"domainName\": \"\",\n              \"resourceRecord\": {\n                \"name\": \"\",\n                \"type\": \"\",\n                \"value\": \"\"\n              }\n            }\n          ],\n          \"renewalStatus\": \"\",\n          \"renewalStatusReason\": \"\",\n          \"updatedAt\": \"{{faker 'date.recent' 365}}\"\n        },\n        \"revokedAt\": \"{{faker 'date.recent' 365}}\",\n        \"revocationReason\": \"\",\n        \"tags\": [\n          {\n            \"key\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"supportCode\": \"\"\n      },\n      \"tags\": [\n        {\n          \"key\": \"\",\n          \"value\": \"\"\n        }\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a3ad4d09-058b-417e-a90a-320c3019f2a9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b7933950-87b2-4b91-be55-f9bb17f3f69f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "17144095-0660-4c76-9f27-5ad6454e7084",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5c750a6e-9597-49b1-b423-dad7f39dc41e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d2a9458e-4b1a-447f-a379-f2601357ef5d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "880796c6-949c-4511-8d59-8fc5183094f8",
      "documentation": "<p>Returns the CloudFormation stack record created as a result of the <code>create cloud formation stack</code> operation.</p> <p>An AWS CloudFormation stack is used to create a new Amazon EC2 instance from an exported Lightsail snapshot.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetCloudFormationStackRecords",
      "responses": [
        {
          "uuid": "f0cbcae5-e785-4d86-b6c4-376bc6e2aa27",
          "body": "{\n  \"cloudFormationStackRecords\": [\n    {\n      \"name\": \"\",\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"resourceType\": \"\",\n      \"state\": \"\",\n      \"sourceInfo\": [\n        {\n          \"resourceType\": \"\",\n          \"name\": \"\",\n          \"arn\": \"\"\n        }\n      ],\n      \"destinationInfo\": {\n        \"id\": \"\",\n        \"service\": \"\"\n      }\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "40cd3b91-8fdd-4731-b12a-12c10d9d0863",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dcbc0411-ec62-4505-b30d-ddb1e5bb222a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1c35c9c5-ce7a-4940-80ec-c06b343c8489",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4a3ea0c5-88ae-4879-8128-ab08e95cf147",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "db42dcd0-1b46-42e8-a06c-01085df743e8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d0aeed8e-da34-4369-91d2-4def12a25f1f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3a54bc00-4eab-46df-95b5-90bb96c2ff90",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a775e018-f0c8-41ff-836c-815eb389be99",
      "documentation": "<p>Returns information about the configured contact methods. Specify a protocol in your request to return information about a specific contact method.</p> <p>A contact method is used to send you notifications about your Amazon Lightsail resources. You can add one email address and one mobile phone number contact method in each AWS Region. However, SMS text messaging is not supported in some AWS Regions, and SMS text messages cannot be sent to some countries/regions. For more information, see <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-notifications\">Notifications in Amazon Lightsail</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetContactMethods",
      "responses": [
        {
          "uuid": "ba436904-3a06-446a-ae01-6814df811c48",
          "body": "{\n  \"contactMethods\": [\n    {\n      \"contactEndpoint\": \"\",\n      \"status\": \"\",\n      \"protocol\": \"\",\n      \"name\": \"\",\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"resourceType\": \"\",\n      \"supportCode\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "949e2ff9-ec70-4e8c-babb-c22df0e29d52",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a1113e41-cc12-44f0-9398-3210753fc388",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b5f58548-e960-4201-b46b-8acb5b4b8189",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d749e130-1d35-4087-a4a8-11df33f85f45",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "546c5a89-e943-4547-8892-c80f516549bb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cc3f5d8f-730c-4f40-a935-f876155a6694",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0e5d898b-511e-44d8-bd9a-b4c992324b29",
      "documentation": "Returns information about Amazon Lightsail containers, such as the current version of the Lightsail Control (lightsailctl) plugin.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetContainerAPIMetadata",
      "responses": [
        {
          "uuid": "9263f6b6-a473-489d-8dd9-ea9b4f9cf070",
          "body": "{\n  \"metadata\": [\n    {}\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cff32fe4-4d92-4a88-bd86-c924cd2b8924",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ae3c685b-a4b9-4feb-95e1-552b112826d3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "de65c3fe-d0e9-4f2e-989a-9df850d93144",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f99acf08-b035-43cc-a119-e6e071499bff",
      "documentation": "<p>Returns the container images that are registered to your Amazon Lightsail container service.</p> <note> <p>If you created a deployment on your Lightsail container service that uses container images from a public registry like Docker Hub, those images are not returned as part of this action. Those images are not registered to your Lightsail container service.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetContainerImages",
      "responses": [
        {
          "uuid": "394e7290-4e24-4c45-9f52-d4f280427827",
          "body": "{\n  \"containerImages\": [\n    {\n      \"image\": \"\",\n      \"digest\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eda64ae3-5b79-4761-a020-346fab79ccf3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "09bd5d40-4359-48b5-96bf-f7be903f8882",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5a1af18b-8163-41e2-8573-4215c927eeee",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2b6f6b4c-4af6-43ff-8bc6-1dd22042652b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9e8e7038-b59f-4307-ab28-41aaef8f6d77",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d47770da-12df-4f86-8589-d9f77f428300",
      "documentation": "<p>Returns the log events of a container of your Amazon Lightsail container service.</p> <p>If your container service has more than one node (i.e., a scale greater than 1), then the log events that are returned for the specified container are merged from all nodes on your container service.</p> <note> <p>Container logs are retained for a certain amount of time. For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/lightsail.html\">Amazon Lightsail endpoints and quotas</a> in the <i>AWS General Reference</i>.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetContainerLog",
      "responses": [
        {
          "uuid": "cc0841a4-6954-4aa4-92aa-0bcdbd2ef5f0",
          "body": "{\n  \"logEvents\": [\n    {\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"message\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "86de8549-02ca-4973-9648-eabda8e6a18c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2a609f44-3aa0-44a0-89e5-a58ee4b79d66",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7a4bcae9-7b85-4400-81be-54077ca0552c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "177c9194-eb9c-4a28-9588-6265c1c3cc31",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c73bd839-a95b-42ae-9731-2be8764140f4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "39ac0fdf-8c5d-4028-b138-4a3fa59df5c1",
      "documentation": "<p>Returns the deployments for your Amazon Lightsail container service</p> <p>A deployment specifies the settings, such as the ports and launch command, of containers that are deployed to your container service.</p> <p>The deployments are ordered by version in ascending order. The newest version is listed at the top of the response.</p> <note> <p>A set number of deployments are kept before the oldest one is replaced with the newest one. For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/lightsail.html\">Amazon Lightsail endpoints and quotas</a> in the <i>AWS General Reference</i>.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetContainerServiceDeployments",
      "responses": [
        {
          "uuid": "cc80a9c7-6f81-4102-99fa-0f4a205a8b38",
          "body": "{\n  \"deployments\": [\n    {\n      \"version\": {{faker 'random.number'}},\n      \"state\": \"\",\n      \"containers\": {},\n      \"publicEndpoint\": {\n        \"containerName\": \"\",\n        \"containerPort\": {{faker 'random.number'}},\n        \"healthCheck\": {\n          \"healthyThreshold\": {{faker 'random.number'}},\n          \"unhealthyThreshold\": {{faker 'random.number'}},\n          \"timeoutSeconds\": {{faker 'random.number'}},\n          \"intervalSeconds\": {{faker 'random.number'}},\n          \"path\": \"\",\n          \"successCodes\": \"\"\n        }\n      },\n      \"createdAt\": \"{{faker 'date.recent' 365}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f7423d8f-0f63-4b4c-8e3a-eb52b11267fc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e632c054-2c91-4188-b0d1-dfe4ff9448dc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0743a7ae-42f9-4024-b1c9-8e2d2eeebb69",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "12f30973-9378-42d4-b7f9-1bc00bbef16b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "30dc1070-7ae5-4d12-8c3b-857c0ec72088",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0ec6dbbe-5fc4-4bce-9f97-1e20a9138ab1",
      "documentation": "<p>Returns the data points of a specific metric of your Amazon Lightsail container service.</p> <p>Metrics report the utilization of your resources. Monitor and collect metric data regularly to maintain the reliability, availability, and performance of your resources.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetContainerServiceMetricData",
      "responses": [
        {
          "uuid": "82388126-46d5-4acb-b234-eeb191bd049e",
          "body": "{\n  \"metricName\": \"\",\n  \"metricData\": [\n    {\n      \"average\": {{faker 'random.float'}},\n      \"maximum\": {{faker 'random.float'}},\n      \"minimum\": {{faker 'random.float'}},\n      \"sampleCount\": {{faker 'random.float'}},\n      \"sum\": {{faker 'random.float'}},\n      \"timestamp\": \"{{faker 'date.recent' 365}}\",\n      \"unit\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8353cef4-632e-4cd6-ae21-f5213822e896",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a700eb0b-d4d4-46c8-b5d4-90a343aa1847",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "de4bcf3d-6a7e-44e9-89df-bf8e1dc35f4e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "600fa6e8-3fb6-48e7-860a-9aae2cdd597f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bf5177d2-495a-4e6a-a30c-e11b40e5333a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "534eaa39-8dbe-44bf-ab87-4b9e5b2ac145",
      "documentation": "<p>Returns the list of powers that can be specified for your Amazon Lightsail container services.</p> <p>The power specifies the amount of memory, the number of vCPUs, and the base price of the container service.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetContainerServicePowers",
      "responses": [
        {
          "uuid": "c0bef72c-4e85-4bcf-b324-5c62a17131fe",
          "body": "{\n  \"powers\": [\n    {\n      \"powerId\": \"\",\n      \"price\": {{faker 'random.float'}},\n      \"cpuCount\": {{faker 'random.float'}},\n      \"ramSizeInGb\": {{faker 'random.float'}},\n      \"name\": \"\",\n      \"isActive\": {{faker 'random.boolean'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0072c82a-9732-45fb-901d-9c717849124f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3fcc838e-8092-40e2-9707-3028717177dd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e1fb0096-4902-4aef-aa39-165268ef8002",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d040c7a5-6841-4fd6-b522-a03fef8792e3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0af01811-c1d6-46fb-b2c2-ac2a1991ed1e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7172e09e-4b7d-4bf2-ab56-b4d72b09cd5d",
      "documentation": "Returns information about one or more of your Amazon Lightsail container services.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetContainerServices",
      "responses": [
        {
          "uuid": "769a58d0-bb5e-44eb-b034-2f8c80fa7676",
          "body": "{\n  \"containerServices\": [\n    {\n      \"containerServiceName\": \"\",\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"resourceType\": \"\",\n      \"tags\": [\n        {\n          \"key\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"power\": \"\",\n      \"powerId\": \"\",\n      \"state\": \"\",\n      \"stateDetail\": {\n        \"code\": \"\",\n        \"message\": \"\"\n      },\n      \"scale\": {{faker 'random.number'}},\n      \"currentDeployment\": {\n        \"version\": {{faker 'random.number'}},\n        \"state\": \"\",\n        \"containers\": {},\n        \"publicEndpoint\": {\n          \"containerName\": \"\",\n          \"containerPort\": {{faker 'random.number'}},\n          \"healthCheck\": {\n            \"healthyThreshold\": {{faker 'random.number'}},\n            \"unhealthyThreshold\": {{faker 'random.number'}},\n            \"timeoutSeconds\": {{faker 'random.number'}},\n            \"intervalSeconds\": {{faker 'random.number'}},\n            \"path\": \"\",\n            \"successCodes\": \"\"\n          }\n        },\n        \"createdAt\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"nextDeployment\": {\n        \"version\": {{faker 'random.number'}},\n        \"state\": \"\",\n        \"containers\": {},\n        \"publicEndpoint\": {\n          \"containerName\": \"\",\n          \"containerPort\": {{faker 'random.number'}},\n          \"healthCheck\": {\n            \"healthyThreshold\": {{faker 'random.number'}},\n            \"unhealthyThreshold\": {{faker 'random.number'}},\n            \"timeoutSeconds\": {{faker 'random.number'}},\n            \"intervalSeconds\": {{faker 'random.number'}},\n            \"path\": \"\",\n            \"successCodes\": \"\"\n          }\n        },\n        \"createdAt\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"isDisabled\": {{faker 'random.boolean'}},\n      \"principalArn\": \"\",\n      \"privateDomainName\": \"\",\n      \"publicDomainNames\": {},\n      \"url\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8d9f7a74-a68d-4c34-b0fa-c21ab6dab38a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4e64e254-672f-4e39-bab5-0cf3fc039c67",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "557e7519-2291-4132-8826-cad3069b604b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c67cb072-8705-406d-9b8f-8e623dd03319",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "734f3e8c-c676-4b5b-921d-0d333be50491",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c97bdf91-69c2-4cca-9a06-ab6dbc6b9c56",
      "documentation": "Returns information about a specific block storage disk.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetDisk",
      "responses": [
        {
          "uuid": "da4b1fda-9263-4467-977c-84eb1452da85",
          "body": "{\n  \"disk\": {\n    \"name\": \"\",\n    \"arn\": \"\",\n    \"supportCode\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"resourceType\": \"\",\n    \"tags\": [\n      {\n        \"key\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"addOns\": [\n      {\n        \"name\": \"\",\n        \"status\": \"\",\n        \"snapshotTimeOfDay\": \"\",\n        \"nextSnapshotTimeOfDay\": \"\"\n      }\n    ],\n    \"sizeInGb\": {{faker 'random.number'}},\n    \"isSystemDisk\": {{faker 'random.boolean'}},\n    \"iops\": {{faker 'random.number'}},\n    \"path\": \"\",\n    \"state\": \"\",\n    \"attachedTo\": \"\",\n    \"isAttached\": {{faker 'random.boolean'}},\n    \"attachmentState\": \"\",\n    \"gbInUse\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b423729c-3790-4f58-9f03-d027aa039c98",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "181fa970-fd69-42f6-9a77-754acb7c0584",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3e974bd5-1e7f-4503-899e-d78e2e6a4175",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ae0f3300-6ea7-427c-b04f-4125425341bf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f94ee05c-6aba-49bf-b6f5-9276d53e9ffb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "79aa8193-bb46-4f1c-808e-c0fec7d9f99d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a577294b-ca42-4cf7-aa58-82079ed12891",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "02ae8c2c-2cae-4a60-99da-b4713b410f96",
      "documentation": "Returns information about a specific block storage disk snapshot.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetDiskSnapshot",
      "responses": [
        {
          "uuid": "2f1afdaf-0fdd-4c09-a6da-6d4faa49a3a5",
          "body": "{\n  \"diskSnapshot\": {\n    \"name\": \"\",\n    \"arn\": \"\",\n    \"supportCode\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"resourceType\": \"\",\n    \"tags\": [\n      {\n        \"key\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"sizeInGb\": {{faker 'random.number'}},\n    \"state\": \"\",\n    \"progress\": \"\",\n    \"fromDiskName\": \"\",\n    \"fromDiskArn\": \"\",\n    \"fromInstanceName\": \"\",\n    \"fromInstanceArn\": \"\",\n    \"isFromAutoSnapshot\": {{faker 'random.boolean'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c66cf276-ad2f-4c21-aa4e-3f1cdaf475a1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bd8c44ae-4968-4476-b780-020f82f11962",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6a39c20f-f702-412c-b07a-f9fc24e633a3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a8bd264a-62a7-4d9d-b134-fddde5111a56",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "233c469e-31ed-4d52-aae4-08ab3b256535",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "51db9ce1-2d53-4f71-93da-b5c003e8a8e3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2f873869-d694-4f30-a4ee-521fef53fca0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "64a85606-d3bf-4979-884b-f23e2d676d4a",
      "documentation": "Returns information about all block storage disk snapshots in your AWS account and region.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetDiskSnapshots",
      "responses": [
        {
          "uuid": "c01be294-3276-4020-981e-63c61b2c69e0",
          "body": "{\n  \"diskSnapshots\": [\n    {\n      \"name\": \"\",\n      \"arn\": \"\",\n      \"supportCode\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"resourceType\": \"\",\n      \"tags\": [\n        {\n          \"key\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"sizeInGb\": {{faker 'random.number'}},\n      \"state\": \"\",\n      \"progress\": \"\",\n      \"fromDiskName\": \"\",\n      \"fromDiskArn\": \"\",\n      \"fromInstanceName\": \"\",\n      \"fromInstanceArn\": \"\",\n      \"isFromAutoSnapshot\": {{faker 'random.boolean'}}\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fa096ef5-adda-429c-971e-ebab36106e65",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "da4e6d68-5ab4-4b00-b6d9-4524b06b8eb7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6cebee9c-9483-4d95-866b-c35b46e7ac24",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a333badb-3bce-4919-8313-57d28e35e50c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "372fd6e8-e2be-47f2-955d-f4dcf4ccdd50",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "48005183-bd4c-40b1-b47c-d8c18769a7be",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "590ee6b8-4e81-478b-81e3-e7607b4943a4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1b2ac355-770b-475c-8ecb-b2caaca4b18a",
      "documentation": "Returns information about all block storage disks in your AWS account and region.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetDisks",
      "responses": [
        {
          "uuid": "65e25c72-f396-4a6f-94f9-1525a8a85b0a",
          "body": "{\n  \"disks\": [\n    {\n      \"name\": \"\",\n      \"arn\": \"\",\n      \"supportCode\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"resourceType\": \"\",\n      \"tags\": [\n        {\n          \"key\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"addOns\": [\n        {\n          \"name\": \"\",\n          \"status\": \"\",\n          \"snapshotTimeOfDay\": \"\",\n          \"nextSnapshotTimeOfDay\": \"\"\n        }\n      ],\n      \"sizeInGb\": {{faker 'random.number'}},\n      \"isSystemDisk\": {{faker 'random.boolean'}},\n      \"iops\": {{faker 'random.number'}},\n      \"path\": \"\",\n      \"state\": \"\",\n      \"attachedTo\": \"\",\n      \"isAttached\": {{faker 'random.boolean'}},\n      \"attachmentState\": \"\",\n      \"gbInUse\": {{faker 'random.number'}}\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "11619ed0-5991-4495-851d-ba6d6558e9a5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6ff1349f-8bd0-4631-b937-7eb4d1a7e47f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "31b2de5e-3d17-4d37-a06d-c8679b368f4f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7d7967f0-764a-44df-99a6-4a7adf75ab6c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fcc70917-c34f-4eb0-a0a9-eee848691737",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6003b97a-7274-4add-a5d5-dd04745b294c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a45f5f49-8dee-4779-8a45-c937dbaac960",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e43d6785-30ec-4c28-b9d0-357db3e08d6b",
      "documentation": "<p>Returns the bundles that can be applied to your Amazon Lightsail content delivery network (CDN) distributions.</p> <p>A distribution bundle specifies the monthly network transfer quota and monthly cost of your dsitribution.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetDistributionBundles",
      "responses": [
        {
          "uuid": "6385cc0d-f8ab-4600-be1c-5f7c971ede66",
          "body": "{\n  \"bundles\": [\n    {\n      \"bundleId\": \"\",\n      \"name\": \"\",\n      \"price\": {{faker 'random.float'}},\n      \"transferPerMonthInGb\": {{faker 'random.number'}},\n      \"isActive\": {{faker 'random.boolean'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6fc6de06-1eb2-4078-b009-dedc24ea294a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2065c24f-afd7-4af1-bdd3-ab9a6f0ec4a3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bbf4a74f-ef5d-4723-a224-fdd8c2d27faa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3609df8f-94db-4a3a-9674-9b8dbded4e06",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "940e607c-c1b4-4441-a2f8-0361b1736c34",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "40bd9542-1fa7-4266-9def-0825ca3ae603",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2b8affab-aee2-4a5d-a8c2-eb7918d5f4e8",
      "documentation": "Returns the timestamp and status of the last cache reset of a specific Amazon Lightsail content delivery network (CDN) distribution.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetDistributionLatestCacheReset",
      "responses": [
        {
          "uuid": "1e11490c-fe91-4011-8a6d-9006927bce85",
          "body": "{\n  \"status\": \"\",\n  \"createTime\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "11d23f6c-df67-49e8-a28c-648af78e494c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0020d372-9c4a-416e-8624-5ec78387ebb6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "39f4b59d-c0b5-494c-a788-5045ded37d5a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "987e3b63-0eb0-4533-b1fb-9c838c791944",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4bda6eee-bb42-457b-b29b-9a651f416afe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "780c6361-2a8f-4752-90cd-74b7529fb4eb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fcea82c2-bf2b-44f8-8be8-eb733e6b8432",
      "documentation": "<p>Returns the data points of a specific metric for an Amazon Lightsail content delivery network (CDN) distribution.</p> <p>Metrics report the utilization of your resources, and the error counts generated by them. Monitor and collect metric data regularly to maintain the reliability, availability, and performance of your resources.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetDistributionMetricData",
      "responses": [
        {
          "uuid": "817d767b-4d1b-4cd2-9c56-2690d77d3711",
          "body": "{\n  \"metricName\": \"\",\n  \"metricData\": [\n    {\n      \"average\": {{faker 'random.float'}},\n      \"maximum\": {{faker 'random.float'}},\n      \"minimum\": {{faker 'random.float'}},\n      \"sampleCount\": {{faker 'random.float'}},\n      \"sum\": {{faker 'random.float'}},\n      \"timestamp\": \"{{faker 'date.recent' 365}}\",\n      \"unit\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1b665d6a-63d1-4d46-92b9-0621a6170032",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5d3ebb70-375a-4c7e-8cf6-43a7e8c560fa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5b2ff5f4-8bda-460d-8a33-66e4a98fa90c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e2bd0389-9491-441f-b00a-a5bea8add631",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "278d7ccb-8e45-4aed-a356-38751fe1a2f3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "45209884-fa6a-4ada-90f8-f3c35a1487e7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ef22bbb0-1e2a-4686-8b87-76bae671dabb",
      "documentation": "Returns information about one or more of your Amazon Lightsail content delivery network (CDN) distributions.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetDistributions",
      "responses": [
        {
          "uuid": "cad191d9-99c7-4a2b-b570-74848bd44d1e",
          "body": "{\n  \"distributions\": [\n    {\n      \"name\": \"\",\n      \"arn\": \"\",\n      \"supportCode\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"resourceType\": \"\",\n      \"alternativeDomainNames\": [\n        \"\"\n      ],\n      \"status\": \"\",\n      \"isEnabled\": {{faker 'random.boolean'}},\n      \"domainName\": \"\",\n      \"bundleId\": \"\",\n      \"certificateName\": \"\",\n      \"origin\": {\n        \"name\": \"\",\n        \"resourceType\": \"\",\n        \"regionName\": \"\",\n        \"protocolPolicy\": \"\"\n      },\n      \"originPublicDNS\": \"\",\n      \"defaultCacheBehavior\": {\n        \"behavior\": \"\"\n      },\n      \"cacheBehaviorSettings\": {\n        \"defaultTTL\": {{faker 'random.number'}},\n        \"minimumTTL\": {{faker 'random.number'}},\n        \"maximumTTL\": {{faker 'random.number'}},\n        \"allowedHTTPMethods\": \"\",\n        \"cachedHTTPMethods\": \"\",\n        \"forwardedCookies\": {\n          \"option\": \"\",\n          \"cookiesAllowList\": [\n            \"\"\n          ]\n        },\n        \"forwardedHeaders\": {\n          \"option\": \"\",\n          \"headersAllowList\": [\n            \"{{oneOf (array 'Accept' 'Accept-Charset' 'Accept-Datetime' 'Accept-Encoding' 'Accept-Language' 'Authorization' 'CloudFront-Forwarded-Proto' 'CloudFront-Is-Desktop-Viewer' 'CloudFront-Is-Mobile-Viewer' 'CloudFront-Is-SmartTV-Viewer' 'CloudFront-Is-Tablet-Viewer' 'CloudFront-Viewer-Country' 'Host' 'Origin' 'Referer')}}\"\n          ]\n        },\n        \"forwardedQueryStrings\": {\n          \"option\": {{faker 'random.boolean'}},\n          \"queryStringsAllowList\": [\n            \"\"\n          ]\n        }\n      },\n      \"cacheBehaviors\": [\n        {\n          \"path\": \"\",\n          \"behavior\": \"\"\n        }\n      ],\n      \"ableToUpdateBundle\": {{faker 'random.boolean'}},\n      \"ipAddressType\": \"\",\n      \"tags\": [\n        {\n          \"key\": \"\",\n          \"value\": \"\"\n        }\n      ]\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9c4ec67f-c0d9-4a48-bf88-beeada561db5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a557a4ca-b0e1-46ed-8da1-96a9b6b5d3fe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "895bc10d-8c85-494f-ad0e-b2f79435b2e7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "daea2ea6-4bbc-4a57-ad4e-20d57bb7d76f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f109bfa0-3683-43cc-94ad-c5cf03871e3c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7e12d238-a57f-4d64-a2ea-4a86d2ba5474",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cf6271b9-7092-47aa-b3f8-041a69d753a6",
      "documentation": "Returns information about a specific domain recordset.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetDomain",
      "responses": [
        {
          "uuid": "2bc7cb20-666c-4e7c-9dc8-8eccb0cc0d13",
          "body": "{\n  \"domain\": {\n    \"name\": \"\",\n    \"arn\": \"\",\n    \"supportCode\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"resourceType\": \"\",\n    \"tags\": [\n      {\n        \"key\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"domainEntries\": [\n      {\n        \"id\": \"\",\n        \"name\": \"\",\n        \"target\": \"\",\n        \"isAlias\": {{faker 'random.boolean'}},\n        \"type\": \"\",\n        \"options\": {}\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "273cc9b2-c8d8-490d-931a-12ec63edfe4d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "255c9da8-b9a4-46dd-aa1e-50bbff930d99",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2aad5330-5a7e-4ff8-b8d9-e933337075cb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "938c4122-0eb4-4645-83c6-9d95fd0e15cf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2b8b80a0-46cf-40d0-8f3c-7e9775fd84b5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "24c1219b-481e-4972-a587-86143307eaf3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "df086c0c-85aa-4917-aff3-dc4be5ce2352",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1254e55f-19be-495d-9628-5f7cfa5f9ac1",
      "documentation": "Returns a list of all domains in the user's account.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetDomains",
      "responses": [
        {
          "uuid": "8d04cd35-a91c-4ed5-9abe-12fe28bcb6fe",
          "body": "{\n  \"domains\": [\n    {\n      \"name\": \"\",\n      \"arn\": \"\",\n      \"supportCode\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"resourceType\": \"\",\n      \"tags\": [\n        {\n          \"key\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"domainEntries\": [\n        {\n          \"id\": \"\",\n          \"name\": \"\",\n          \"target\": \"\",\n          \"isAlias\": {{faker 'random.boolean'}},\n          \"type\": \"\",\n          \"options\": {}\n        }\n      ]\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b341af8a-c96a-4b02-9bd7-6ef441ab7a05",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2e72b96c-8dba-4d28-8945-43f834d39e7c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "89def5c5-b5d2-4c50-81da-502751ed5082",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d4b01f24-85f1-4f12-be6e-d7f8199a8a4f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "26cf63b2-36c0-4922-842c-f5c6a75f9613",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cf774f3a-fd9d-42af-8ac9-6e680f3c8fa9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "635a69b9-40d3-4485-ba92-a328f24e79ea",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4ba06df0-29ec-4020-827b-af83d5776070",
      "documentation": "<p>Returns all export snapshot records created as a result of the <code>export snapshot</code> operation.</p> <p>An export snapshot record can be used to create a new Amazon EC2 instance and its related resources with the <a>CreateCloudFormationStack</a> action.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetExportSnapshotRecords",
      "responses": [
        {
          "uuid": "1f6cfb6d-0e27-4b82-b590-cb5a1241a89f",
          "body": "{\n  \"exportSnapshotRecords\": [\n    {\n      \"name\": \"\",\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"resourceType\": \"\",\n      \"state\": \"\",\n      \"sourceInfo\": {\n        \"resourceType\": \"\",\n        \"createdAt\": \"{{faker 'date.recent' 365}}\",\n        \"name\": \"\",\n        \"arn\": \"\",\n        \"fromResourceName\": \"\",\n        \"fromResourceArn\": \"\",\n        \"instanceSnapshotInfo\": {\n          \"fromBundleId\": \"\",\n          \"fromBlueprintId\": \"\",\n          \"fromDiskInfo\": [\n            {\n              \"name\": \"\",\n              \"path\": \"\",\n              \"sizeInGb\": {{faker 'random.number'}},\n              \"isSystemDisk\": {{faker 'random.boolean'}}\n            }\n          ]\n        },\n        \"diskSnapshotInfo\": {\n          \"sizeInGb\": {{faker 'random.number'}}\n        }\n      },\n      \"destinationInfo\": {\n        \"id\": \"\",\n        \"service\": \"\"\n      }\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f22751df-dce4-4df5-aea8-7ae06c1dad1c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a8363caf-0544-4b84-b1b3-1d88af20e81c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bfe85725-dafc-443c-8763-d688b61c4396",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b5f29ec9-50ea-430f-9bc5-e664c0fce774",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "96bacf7b-527b-4c2c-b77b-10bcae70dadf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "860cde60-1f2c-4129-9450-c29d900b67e0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0302d1d8-6ba2-404e-b320-52d4d8407b0f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c42e4f17-7c40-4146-98a8-002d5eb70ef1",
      "documentation": "Returns information about a specific Amazon Lightsail instance, which is a virtual private server.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetInstance",
      "responses": [
        {
          "uuid": "bf7932ec-56ec-4edc-80b0-2bf189b1abe9",
          "body": "{\n  \"instance\": {\n    \"name\": \"\",\n    \"arn\": \"\",\n    \"supportCode\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"resourceType\": \"\",\n    \"tags\": [\n      {\n        \"key\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"blueprintId\": \"\",\n    \"blueprintName\": \"\",\n    \"bundleId\": \"\",\n    \"addOns\": [\n      {\n        \"name\": \"\",\n        \"status\": \"\",\n        \"snapshotTimeOfDay\": \"\",\n        \"nextSnapshotTimeOfDay\": \"\"\n      }\n    ],\n    \"isStaticIp\": {{faker 'random.boolean'}},\n    \"privateIpAddress\": \"\",\n    \"publicIpAddress\": \"\",\n    \"ipv6Addresses\": [\n      \"\"\n    ],\n    \"ipAddressType\": \"\",\n    \"hardware\": {\n      \"cpuCount\": {{faker 'random.number'}},\n      \"disks\": [\n        {\n          \"name\": \"\",\n          \"arn\": \"\",\n          \"supportCode\": \"\",\n          \"createdAt\": \"{{faker 'date.recent' 365}}\",\n          \"location\": {\n            \"availabilityZone\": \"\",\n            \"regionName\": \"\"\n          },\n          \"resourceType\": \"\",\n          \"tags\": [\n            {\n              \"key\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"addOns\": [\n            {\n              \"name\": \"\",\n              \"status\": \"\",\n              \"snapshotTimeOfDay\": \"\",\n              \"nextSnapshotTimeOfDay\": \"\"\n            }\n          ],\n          \"sizeInGb\": {{faker 'random.number'}},\n          \"isSystemDisk\": {{faker 'random.boolean'}},\n          \"iops\": {{faker 'random.number'}},\n          \"path\": \"\",\n          \"state\": \"\",\n          \"attachedTo\": \"\",\n          \"isAttached\": {{faker 'random.boolean'}},\n          \"attachmentState\": \"\",\n          \"gbInUse\": {{faker 'random.number'}}\n        }\n      ],\n      \"ramSizeInGb\": {{faker 'random.float'}}\n    },\n    \"networking\": {\n      \"monthlyTransfer\": {\n        \"gbPerMonthAllocated\": {{faker 'random.number'}}\n      },\n      \"ports\": [\n        {\n          \"fromPort\": {{faker 'random.number'}},\n          \"toPort\": {{faker 'random.number'}},\n          \"protocol\": \"\",\n          \"accessFrom\": \"\",\n          \"accessType\": \"\",\n          \"commonName\": \"\",\n          \"accessDirection\": \"\",\n          \"cidrs\": [\n            \"\"\n          ],\n          \"ipv6Cidrs\": [\n            \"\"\n          ],\n          \"cidrListAliases\": [\n            \"\"\n          ]\n        }\n      ]\n    },\n    \"state\": {\n      \"code\": {{faker 'random.number'}},\n      \"name\": \"\"\n    },\n    \"username\": \"\",\n    \"sshKeyName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "236f696b-c971-4de3-8ffd-6b53e5f2252a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "50d5edab-e764-489b-a717-25235f753115",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0029af0b-17dd-4860-a89b-fcaf50a30c81",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3568b7c5-5f91-4d02-8093-ef996d973fae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3d7a950c-e2ea-4aea-a378-b7838196e53a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3e438d0f-08e6-459c-818f-05029aa1872a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dce62380-610d-496e-9e81-92580f853fa4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c7ab273e-0217-4349-a761-8fc8d4910b01",
      "documentation": "<p>Returns temporary SSH keys you can use to connect to a specific virtual private server, or <i>instance</i>.</p> <p>The <code>get instance access details</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>instance name</code>. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetInstanceAccessDetails",
      "responses": [
        {
          "uuid": "9dcf9d36-c18d-4f8f-ab23-b08919c50726",
          "body": "{\n  \"accessDetails\": {\n    \"certKey\": \"\",\n    \"expiresAt\": \"{{faker 'date.recent' 365}}\",\n    \"ipAddress\": \"\",\n    \"password\": \"\",\n    \"passwordData\": {\n      \"ciphertext\": \"\",\n      \"keyPairName\": \"\"\n    },\n    \"privateKey\": \"\",\n    \"protocol\": \"\",\n    \"instanceName\": \"\",\n    \"username\": \"\",\n    \"hostKeys\": [\n      {\n        \"algorithm\": \"\",\n        \"publicKey\": \"\",\n        \"witnessedAt\": \"{{faker 'date.recent' 365}}\",\n        \"fingerprintSHA1\": \"\",\n        \"fingerprintSHA256\": \"\",\n        \"notValidBefore\": \"{{faker 'date.recent' 365}}\",\n        \"notValidAfter\": \"{{faker 'date.recent' 365}}\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8e982942-f6f9-4e5e-8327-70af8bc8964f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3a90052e-8544-42eb-af12-69f85af256d6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c9ea180e-2c48-4068-a3c6-64d48535cc40",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "13db53fa-acdd-4408-a84b-4053ba0a54c8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6ff0ff81-f513-4728-b969-33d3f5a703b8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d515f832-4899-4b8d-881e-32ec85ce685a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e17ad5e5-d006-4fd0-92b8-7beae0de72f2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "56d4e8f2-7be4-4a19-adcf-d305e25e80a3",
      "documentation": "<p>Returns the data points for the specified Amazon Lightsail instance metric, given an instance name.</p> <p>Metrics report the utilization of your resources, and the error counts generated by them. Monitor and collect metric data regularly to maintain the reliability, availability, and performance of your resources.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetInstanceMetricData",
      "responses": [
        {
          "uuid": "05a98bed-c218-4cbf-aff6-cbb9e2446170",
          "body": "{\n  \"metricName\": \"\",\n  \"metricData\": [\n    {\n      \"average\": {{faker 'random.float'}},\n      \"maximum\": {{faker 'random.float'}},\n      \"minimum\": {{faker 'random.float'}},\n      \"sampleCount\": {{faker 'random.float'}},\n      \"sum\": {{faker 'random.float'}},\n      \"timestamp\": \"{{faker 'date.recent' 365}}\",\n      \"unit\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2a71b620-0c97-4f3a-92df-1c9b362fd40a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "564f6b4d-d0ad-4731-a308-7ced3e8755ef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "74f3510c-5d85-4fcd-a41b-fbfb7bb62d08",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "07099e9d-a0fa-401f-966e-830b45383804",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "63177646-22d7-41a7-ba43-95c7c4dccade",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7bef9428-3caa-46d7-98a0-3671d5be91bb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dc99ca00-b823-4215-988a-87b9e9e0e6ab",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b9acaef1-f923-41c1-b067-2477af768d65",
      "documentation": "Returns the firewall port states for a specific Amazon Lightsail instance, the IP addresses allowed to connect to the instance through the ports, and the protocol.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetInstancePortStates",
      "responses": [
        {
          "uuid": "df417ae4-0d59-418e-91bf-7e96233ca600",
          "body": "{\n  \"portStates\": [\n    {\n      \"fromPort\": {{faker 'random.number'}},\n      \"toPort\": {{faker 'random.number'}},\n      \"protocol\": \"\",\n      \"state\": \"\",\n      \"cidrs\": [\n        \"\"\n      ],\n      \"ipv6Cidrs\": [\n        \"\"\n      ],\n      \"cidrListAliases\": [\n        \"\"\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bf0d9839-c8a6-44f3-ad55-4be6a2d073fd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0068f948-1ba5-40b0-aa66-94b0123514e4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8e018703-27f7-4880-b3c2-94aeb7a88973",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2915b147-6244-4679-959e-c97bb639b63f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "145b082b-967c-4d5b-980e-10b804259b00",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f5c02d0b-9822-4886-b268-86893331041a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d20696ab-2e60-41a3-a5d1-90024b32f69e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cc681fb1-779a-41c9-875a-0af3b1e3dc9f",
      "documentation": "Returns information about a specific instance snapshot.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetInstanceSnapshot",
      "responses": [
        {
          "uuid": "2446dfcd-746a-441f-bf2d-ec63d320d220",
          "body": "{\n  \"instanceSnapshot\": {\n    \"name\": \"\",\n    \"arn\": \"\",\n    \"supportCode\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"resourceType\": \"\",\n    \"tags\": [\n      {\n        \"key\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"state\": \"\",\n    \"progress\": \"\",\n    \"fromAttachedDisks\": [\n      {\n        \"name\": \"\",\n        \"arn\": \"\",\n        \"supportCode\": \"\",\n        \"createdAt\": \"{{faker 'date.recent' 365}}\",\n        \"location\": {\n          \"availabilityZone\": \"\",\n          \"regionName\": \"\"\n        },\n        \"resourceType\": \"\",\n        \"tags\": [\n          {\n            \"key\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"addOns\": [\n          {\n            \"name\": \"\",\n            \"status\": \"\",\n            \"snapshotTimeOfDay\": \"\",\n            \"nextSnapshotTimeOfDay\": \"\"\n          }\n        ],\n        \"sizeInGb\": {{faker 'random.number'}},\n        \"isSystemDisk\": {{faker 'random.boolean'}},\n        \"iops\": {{faker 'random.number'}},\n        \"path\": \"\",\n        \"state\": \"\",\n        \"attachedTo\": \"\",\n        \"isAttached\": {{faker 'random.boolean'}},\n        \"attachmentState\": \"\",\n        \"gbInUse\": {{faker 'random.number'}}\n      }\n    ],\n    \"fromInstanceName\": \"\",\n    \"fromInstanceArn\": \"\",\n    \"fromBlueprintId\": \"\",\n    \"fromBundleId\": \"\",\n    \"isFromAutoSnapshot\": {{faker 'random.boolean'}},\n    \"sizeInGb\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9a08a46a-f164-40c5-8cea-e3a985cd113b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3618241f-9e20-4b09-8268-5b73198c92c6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7b52816d-1be0-4bd6-b6d3-77079b5fc893",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e0274461-6319-4ddf-8919-3a091730eb9f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d9d530cb-8d11-40c4-a97b-f2979f8781e0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2ad5bf12-77bc-4a55-883b-87d70e90c74a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d9010bdc-fc9f-4aac-8de3-7541ec972ede",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "439ecb57-2e92-412f-8bf7-5db2162f9563",
      "documentation": "Returns all instance snapshots for the user's account.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetInstanceSnapshots",
      "responses": [
        {
          "uuid": "d7ceacea-b3b4-4489-b4d8-499518dd4404",
          "body": "{\n  \"instanceSnapshots\": [\n    {\n      \"name\": \"\",\n      \"arn\": \"\",\n      \"supportCode\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"resourceType\": \"\",\n      \"tags\": [\n        {\n          \"key\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"state\": \"\",\n      \"progress\": \"\",\n      \"fromAttachedDisks\": [\n        {\n          \"name\": \"\",\n          \"arn\": \"\",\n          \"supportCode\": \"\",\n          \"createdAt\": \"{{faker 'date.recent' 365}}\",\n          \"location\": {\n            \"availabilityZone\": \"\",\n            \"regionName\": \"\"\n          },\n          \"resourceType\": \"\",\n          \"tags\": [\n            {\n              \"key\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"addOns\": [\n            {\n              \"name\": \"\",\n              \"status\": \"\",\n              \"snapshotTimeOfDay\": \"\",\n              \"nextSnapshotTimeOfDay\": \"\"\n            }\n          ],\n          \"sizeInGb\": {{faker 'random.number'}},\n          \"isSystemDisk\": {{faker 'random.boolean'}},\n          \"iops\": {{faker 'random.number'}},\n          \"path\": \"\",\n          \"state\": \"\",\n          \"attachedTo\": \"\",\n          \"isAttached\": {{faker 'random.boolean'}},\n          \"attachmentState\": \"\",\n          \"gbInUse\": {{faker 'random.number'}}\n        }\n      ],\n      \"fromInstanceName\": \"\",\n      \"fromInstanceArn\": \"\",\n      \"fromBlueprintId\": \"\",\n      \"fromBundleId\": \"\",\n      \"isFromAutoSnapshot\": {{faker 'random.boolean'}},\n      \"sizeInGb\": {{faker 'random.number'}}\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "78058cbf-467e-4502-a775-b2ca719b7ce2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "388c72ff-92aa-487b-8f9b-ceed6a7413cc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6fdee3ca-13e7-46bb-b8b1-4a2647733812",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "efc2e8c9-14dc-42c1-9b32-e8af32af9c88",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2b77ccc2-587a-4f28-875e-57c6c39ccded",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c3bfddb1-c0fb-4820-b22a-24c9fcd31135",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "738eba76-14a2-4af3-9bdf-d94524b5eb22",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fc983041-ac74-4837-aa24-4a5aa16b0635",
      "documentation": "Returns the state of a specific instance. Works on one instance at a time.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetInstanceState",
      "responses": [
        {
          "uuid": "04e2be83-65d0-4258-ab97-d48d35b8ce11",
          "body": "{\n  \"state\": {\n    \"code\": {{faker 'random.number'}},\n    \"name\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9745d2e4-6b4f-4bf9-8f45-768b2ea7f7f7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ae26f4e8-495a-45f8-9fee-37584cee9109",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "31f938aa-1a0e-4ca1-818e-679c46af81f3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c5517c71-86b9-4f59-ad18-1bdf900b0071",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "39e87625-52c1-4f9d-ac46-430450332335",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e6ada9d4-a8c6-464a-ab1a-1f0a7d718955",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ae25a266-6fc2-414a-aef7-0aa84b26efac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7fb4d5b0-658c-48fa-9264-f37555a0ef1c",
      "documentation": "Returns information about all Amazon Lightsail virtual private servers, or <i>instances</i>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetInstances",
      "responses": [
        {
          "uuid": "4321e1c8-66bb-4fd5-a81f-1a729a263abd",
          "body": "{\n  \"instances\": [\n    {\n      \"name\": \"\",\n      \"arn\": \"\",\n      \"supportCode\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"resourceType\": \"\",\n      \"tags\": [\n        {\n          \"key\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"blueprintId\": \"\",\n      \"blueprintName\": \"\",\n      \"bundleId\": \"\",\n      \"addOns\": [\n        {\n          \"name\": \"\",\n          \"status\": \"\",\n          \"snapshotTimeOfDay\": \"\",\n          \"nextSnapshotTimeOfDay\": \"\"\n        }\n      ],\n      \"isStaticIp\": {{faker 'random.boolean'}},\n      \"privateIpAddress\": \"\",\n      \"publicIpAddress\": \"\",\n      \"ipv6Addresses\": [\n        \"\"\n      ],\n      \"ipAddressType\": \"\",\n      \"hardware\": {\n        \"cpuCount\": {{faker 'random.number'}},\n        \"disks\": [\n          {\n            \"name\": \"\",\n            \"arn\": \"\",\n            \"supportCode\": \"\",\n            \"createdAt\": \"{{faker 'date.recent' 365}}\",\n            \"location\": {\n              \"availabilityZone\": \"\",\n              \"regionName\": \"\"\n            },\n            \"resourceType\": \"\",\n            \"tags\": [\n              {\n                \"key\": \"\",\n                \"value\": \"\"\n              }\n            ],\n            \"addOns\": [\n              {\n                \"name\": \"\",\n                \"status\": \"\",\n                \"snapshotTimeOfDay\": \"\",\n                \"nextSnapshotTimeOfDay\": \"\"\n              }\n            ],\n            \"sizeInGb\": {{faker 'random.number'}},\n            \"isSystemDisk\": {{faker 'random.boolean'}},\n            \"iops\": {{faker 'random.number'}},\n            \"path\": \"\",\n            \"state\": \"\",\n            \"attachedTo\": \"\",\n            \"isAttached\": {{faker 'random.boolean'}},\n            \"attachmentState\": \"\",\n            \"gbInUse\": {{faker 'random.number'}}\n          }\n        ],\n        \"ramSizeInGb\": {{faker 'random.float'}}\n      },\n      \"networking\": {\n        \"monthlyTransfer\": {\n          \"gbPerMonthAllocated\": {{faker 'random.number'}}\n        },\n        \"ports\": [\n          {\n            \"fromPort\": {{faker 'random.number'}},\n            \"toPort\": {{faker 'random.number'}},\n            \"protocol\": \"\",\n            \"accessFrom\": \"\",\n            \"accessType\": \"\",\n            \"commonName\": \"\",\n            \"accessDirection\": \"\",\n            \"cidrs\": [\n              \"\"\n            ],\n            \"ipv6Cidrs\": [\n              \"\"\n            ],\n            \"cidrListAliases\": [\n              \"\"\n            ]\n          }\n        ]\n      },\n      \"state\": {\n        \"code\": {{faker 'random.number'}},\n        \"name\": \"\"\n      },\n      \"username\": \"\",\n      \"sshKeyName\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "337dce32-7d63-41cb-aeed-a466b18f024f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "db6923cd-702b-4475-a000-82b5df1df3f2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fb7ee08b-0ad5-43cf-a756-2ba2d6ad8457",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "635eaa66-d633-49d6-996a-cb6f5fa98624",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0f91de85-6808-40be-a310-64594e285287",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "251d8972-3321-4c11-a79a-1cd67e6783b8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ff05ebcd-413a-41c6-889e-53f1e710c4c3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4fcfe544-b0b4-4d52-9c0f-f4bf5802dd96",
      "documentation": "Returns information about a specific key pair.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetKeyPair",
      "responses": [
        {
          "uuid": "7de12562-80c9-45c8-a726-dfd21da720c7",
          "body": "{\n  \"keyPair\": {\n    \"name\": \"\",\n    \"arn\": \"\",\n    \"supportCode\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"resourceType\": \"\",\n    \"tags\": [\n      {\n        \"key\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"fingerprint\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e3c3b585-29a3-40c7-9d7c-94f9c534e9dd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "92dae7e1-f721-449d-b6b0-918e005db603",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cabec4b9-af02-4ab2-862c-83d5d4f1bd03",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "800861a7-0ae8-45e9-af26-2e33860b4308",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a78bb860-1326-4621-b9e0-6ae8ef9984b8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "177d73c5-b7a9-4238-9402-a52ed2133fc1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e005ee32-b00e-4770-a3bc-4cb9b883054c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3e1e7afa-8eb9-45ce-b466-748bc0b21b0c",
      "documentation": "Returns information about all key pairs in the user's account.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetKeyPairs",
      "responses": [
        {
          "uuid": "04d4c884-2ee5-476f-9de4-a60af58d241b",
          "body": "{\n  \"keyPairs\": [\n    {\n      \"name\": \"\",\n      \"arn\": \"\",\n      \"supportCode\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"resourceType\": \"\",\n      \"tags\": [\n        {\n          \"key\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"fingerprint\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7dcea6df-2edd-4b5f-aeeb-2608ada41175",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c700bcab-8f13-41bf-afe4-c4096ec4197c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1f59bb00-86cd-4284-ade2-be1a37bd3a70",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "328ba5f9-e811-4e4b-b9aa-704929e8c14f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6eb4f141-98a3-4ea0-bd11-ceb2b7297e57",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "75c8a2bb-a6af-40e8-b3cf-f45575fac178",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8210ba58-8313-47a3-b1b5-37aa13b5ea8f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "16b462ce-18e8-4d28-851a-319f76dc5b7f",
      "documentation": "Returns information about the specified Lightsail load balancer.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetLoadBalancer",
      "responses": [
        {
          "uuid": "a35866ab-261a-47ac-b3e1-6d285cb18fa2",
          "body": "{\n  \"loadBalancer\": {\n    \"name\": \"\",\n    \"arn\": \"\",\n    \"supportCode\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"resourceType\": \"\",\n    \"tags\": [\n      {\n        \"key\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"dnsName\": \"\",\n    \"state\": \"\",\n    \"protocol\": \"\",\n    \"publicPorts\": [\n      {{faker 'random.number'}}\n    ],\n    \"healthCheckPath\": \"\",\n    \"instancePort\": {{faker 'random.number'}},\n    \"instanceHealthSummary\": [\n      {\n        \"instanceName\": \"\",\n        \"instanceHealth\": \"\",\n        \"instanceHealthReason\": \"\"\n      }\n    ],\n    \"tlsCertificateSummaries\": [\n      {\n        \"name\": \"\",\n        \"isAttached\": {{faker 'random.boolean'}}\n      }\n    ],\n    \"configurationOptions\": {},\n    \"ipAddressType\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3b38a4d4-a9c0-4808-a0aa-730278d593c1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "df6b3574-93b9-46fb-aee4-535b1a0db346",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "83fff3e3-1854-4b7d-b337-adc71af4440d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fc09eb77-dec6-4b8f-ba4f-ee4f69301a5d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4ddb2daa-4104-4a3f-ab19-a0fc14f0eb3b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4a0a29db-a28a-4717-9793-dfc3b12a4e5f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f9e57d6e-c550-40df-b51f-42cdc3a4309f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f58a1c15-71f2-4f17-bb8b-09e2ec450f54",
      "documentation": "<p>Returns information about health metrics for your Lightsail load balancer.</p> <p>Metrics report the utilization of your resources, and the error counts generated by them. Monitor and collect metric data regularly to maintain the reliability, availability, and performance of your resources.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetLoadBalancerMetricData",
      "responses": [
        {
          "uuid": "8c8384d3-e874-40ce-aed8-68d76d7f9b64",
          "body": "{\n  \"metricName\": \"\",\n  \"metricData\": [\n    {\n      \"average\": {{faker 'random.float'}},\n      \"maximum\": {{faker 'random.float'}},\n      \"minimum\": {{faker 'random.float'}},\n      \"sampleCount\": {{faker 'random.float'}},\n      \"sum\": {{faker 'random.float'}},\n      \"timestamp\": \"{{faker 'date.recent' 365}}\",\n      \"unit\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8c5b3398-54ce-471d-a3f6-2ccf6dfc4526",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5c445c29-1b6f-4ce0-b6bd-9d4788434fa2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7e569d51-9b4d-4612-becf-bb2e3f29e99f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e36515fc-b142-4ad1-b323-18692bab7c8d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "443f3f1f-0ff6-4299-8570-0bdfb7b8afd2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0a46377d-0fe2-4dca-8986-336967504f82",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b69896a1-f4e5-418f-a52d-c56035425cac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8f9808f1-36e8-4290-b0a1-e94e672fc189",
      "documentation": "<p>Returns information about the TLS certificates that are associated with the specified Lightsail load balancer.</p> <p>TLS is just an updated, more secure version of Secure Socket Layer (SSL).</p> <p>You can have a maximum of 2 certificates associated with a Lightsail load balancer. One is active and the other is inactive.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetLoadBalancerTlsCertificates",
      "responses": [
        {
          "uuid": "b03a504c-2dae-4b43-ac2b-efb7b905d3d7",
          "body": "{\n  \"tlsCertificates\": [\n    {\n      \"name\": \"\",\n      \"arn\": \"\",\n      \"supportCode\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"resourceType\": \"\",\n      \"tags\": [\n        {\n          \"key\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"loadBalancerName\": \"\",\n      \"isAttached\": {{faker 'random.boolean'}},\n      \"status\": \"\",\n      \"domainName\": \"\",\n      \"domainValidationRecords\": [\n        {\n          \"name\": \"\",\n          \"type\": \"\",\n          \"value\": \"\",\n          \"validationStatus\": \"\",\n          \"domainName\": \"\"\n        }\n      ],\n      \"failureReason\": \"\",\n      \"issuedAt\": \"{{faker 'date.recent' 365}}\",\n      \"issuer\": \"\",\n      \"keyAlgorithm\": \"\",\n      \"notAfter\": \"{{faker 'date.recent' 365}}\",\n      \"notBefore\": \"{{faker 'date.recent' 365}}\",\n      \"renewalSummary\": {\n        \"renewalStatus\": \"\",\n        \"domainValidationOptions\": [\n          {\n            \"domainName\": \"\",\n            \"validationStatus\": \"\"\n          }\n        ]\n      },\n      \"revocationReason\": \"\",\n      \"revokedAt\": \"{{faker 'date.recent' 365}}\",\n      \"serial\": \"\",\n      \"signatureAlgorithm\": \"\",\n      \"subject\": \"\",\n      \"subjectAlternativeNames\": [\n        \"\"\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d4d4782f-6331-4043-8975-a303fc151b0f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cde58826-499b-420a-bc33-8be28426124a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d7a736fa-7383-4831-bcd0-08125dea5ce5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3b8d9a54-7ac3-4547-a00c-9a5d7ca0972a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b1303404-9256-4d6d-b1bd-0f6789934350",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0c0404f6-c3c9-4c84-a0b3-f5ad08a7109a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1314fcd5-c638-48c1-948b-95caf8805113",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7d860a79-de54-4b5e-b3f9-c465e144fc02",
      "documentation": "Returns information about all load balancers in an account.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetLoadBalancers",
      "responses": [
        {
          "uuid": "3b43a42f-020f-41b6-b39f-e55a27c4c2c5",
          "body": "{\n  \"loadBalancers\": [\n    {\n      \"name\": \"\",\n      \"arn\": \"\",\n      \"supportCode\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"resourceType\": \"\",\n      \"tags\": [\n        {\n          \"key\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"dnsName\": \"\",\n      \"state\": \"\",\n      \"protocol\": \"\",\n      \"publicPorts\": [\n        {{faker 'random.number'}}\n      ],\n      \"healthCheckPath\": \"\",\n      \"instancePort\": {{faker 'random.number'}},\n      \"instanceHealthSummary\": [\n        {\n          \"instanceName\": \"\",\n          \"instanceHealth\": \"\",\n          \"instanceHealthReason\": \"\"\n        }\n      ],\n      \"tlsCertificateSummaries\": [\n        {\n          \"name\": \"\",\n          \"isAttached\": {{faker 'random.boolean'}}\n        }\n      ],\n      \"configurationOptions\": {},\n      \"ipAddressType\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d8957e70-b5f1-4dc5-afed-7378689160a5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b4a3eeaa-189e-44a5-89a9-361274ef081c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "85188f1b-c03a-4dd4-a2c6-579a1ecf772e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8a82aef4-3da5-4846-a263-16096d7b0df2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1cf0fc45-a5e8-4c69-8715-cb3b44517970",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "de014164-dbfc-470d-8aed-ec48b50736b6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "495d2488-251b-4981-b283-423cf2e92613",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6887bb8a-448c-4cd6-a0a1-6886998b3f42",
      "documentation": "Returns information about a specific operation. Operations include events such as when you create an instance, allocate a static IP, attach a static IP, and so on.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetOperation",
      "responses": [
        {
          "uuid": "53529895-d536-445a-b8db-54532f109000",
          "body": "{\n  \"operation\": {\n    \"id\": \"\",\n    \"resourceName\": \"\",\n    \"resourceType\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"isTerminal\": {{faker 'random.boolean'}},\n    \"operationDetails\": \"\",\n    \"operationType\": \"\",\n    \"status\": \"\",\n    \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n    \"errorCode\": \"\",\n    \"errorDetails\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b3bda8fa-601d-40ab-bbf0-302719f43831",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6932256d-bfb8-4aa9-a1a7-5f2fb983c88c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4b685217-9457-430b-89a1-0f8f3437ab38",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "649516c2-4e3c-4ff2-9202-9876cd87d80a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "13661778-df38-4e59-86e4-6fb0240f6b1b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "90e5a482-e966-4346-bfae-28410d2501d0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "698c89d8-a6cf-4a7a-aeeb-a0943beecbb7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e86ab4a0-2201-4667-a233-7511f7c7f38a",
      "documentation": "<p>Returns information about all operations.</p> <p>Results are returned from oldest to newest, up to a maximum of 200. Results can be paged by making each subsequent call to <code>GetOperations</code> use the maximum (last) <code>statusChangedAt</code> value from the previous request.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetOperations",
      "responses": [
        {
          "uuid": "fb2880c0-ae71-4839-9d8d-3d7756d27d53",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'random.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6262d8c4-3fd2-4c55-8f2e-4b441d65b257",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a0e6161c-dbf9-4003-b07e-6ccafaeabd38",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5c7e4d46-447f-4337-a5bd-c40e1273e7de",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2f259308-388b-447f-be7f-04161f494e38",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e2af6cd0-9024-488b-b5a5-73fedbaaf14a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b1dd1b96-fa97-4bd6-bf4f-bf27bcf94018",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "777485fa-91f3-42e0-ab2f-fbb3cf718bd4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7df84aeb-43d4-4feb-98bb-49f7e90a287b",
      "documentation": "Gets operations for a specific resource (e.g., an instance or a static IP).",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetOperationsForResource",
      "responses": [
        {
          "uuid": "9ab7a0fd-5abc-46c4-8880-674bdc173877",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'random.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ],\n  \"nextPageCount\": \"\",\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4bdf4421-aaad-4bb2-af9e-72a89d74ea57",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cbdc9230-cd39-48b6-b7ff-f430b89b4e67",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dfb13534-80b2-423e-9d7f-6faa34bada04",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e3dfec09-bc31-47e8-b151-01e23dfc1672",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ef92f68f-fa39-4e79-a88b-567bb5dc5df6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a50c56a8-eaf6-443b-869e-9328fd412b83",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3e3ca8ff-4e67-417e-8718-5473444ee334",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bbecbdbf-aa8c-4d06-a0e5-8771452da1e1",
      "documentation": "Returns a list of all valid regions for Amazon Lightsail. Use the <code>include availability zones</code> parameter to also return the Availability Zones in a region.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetRegions",
      "responses": [
        {
          "uuid": "df59b4da-e443-47e5-ac25-1b11ced7c85d",
          "body": "{\n  \"regions\": [\n    {\n      \"continentCode\": \"\",\n      \"description\": \"\",\n      \"displayName\": \"\",\n      \"name\": \"\",\n      \"availabilityZones\": [\n        {\n          \"zoneName\": \"\",\n          \"state\": \"\"\n        }\n      ],\n      \"relationalDatabaseAvailabilityZones\": [\n        {\n          \"zoneName\": \"\",\n          \"state\": \"\"\n        }\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "604f02f1-40a3-49fe-9e03-c7ad7a4c2bc8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "43a57eea-f09c-4b13-89d0-2da76976c857",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a21c7eb0-a52e-4e2f-a2a2-4643071bc988",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8818e19e-364f-4848-a3f3-d65a603c0dda",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "03bb8650-af78-4fc7-b3d1-6ab580c4d5bf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bd7bbe51-c9da-44d8-ae71-cf5a21d2a0a2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2938a2ee-fce9-4147-b242-704cd0ff1387",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d2ab2f0f-8eb1-41fc-b0e4-00dd8ed32e30",
      "documentation": "Returns information about a specific database in Amazon Lightsail.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetRelationalDatabase",
      "responses": [
        {
          "uuid": "e9b9b19b-fb35-4011-b1cc-c133559ea206",
          "body": "{\n  \"relationalDatabase\": {\n    \"name\": \"\",\n    \"arn\": \"\",\n    \"supportCode\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"resourceType\": \"\",\n    \"tags\": [\n      {\n        \"key\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"relationalDatabaseBlueprintId\": \"\",\n    \"relationalDatabaseBundleId\": \"\",\n    \"masterDatabaseName\": \"\",\n    \"hardware\": {\n      \"cpuCount\": {{faker 'random.number'}},\n      \"diskSizeInGb\": {{faker 'random.number'}},\n      \"ramSizeInGb\": {{faker 'random.float'}}\n    },\n    \"state\": \"\",\n    \"secondaryAvailabilityZone\": \"\",\n    \"backupRetentionEnabled\": {{faker 'random.boolean'}},\n    \"pendingModifiedValues\": {\n      \"masterUserPassword\": \"\",\n      \"engineVersion\": \"\",\n      \"backupRetentionEnabled\": {{faker 'random.boolean'}}\n    },\n    \"engine\": \"\",\n    \"engineVersion\": \"\",\n    \"latestRestorableTime\": \"{{faker 'date.recent' 365}}\",\n    \"masterUsername\": \"\",\n    \"parameterApplyStatus\": \"\",\n    \"preferredBackupWindow\": \"\",\n    \"preferredMaintenanceWindow\": \"\",\n    \"publiclyAccessible\": {{faker 'random.boolean'}},\n    \"masterEndpoint\": {\n      \"port\": {{faker 'random.number'}},\n      \"address\": \"\"\n    },\n    \"pendingMaintenanceActions\": [\n      {\n        \"action\": \"\",\n        \"description\": \"\",\n        \"currentApplyDate\": \"{{faker 'date.recent' 365}}\"\n      }\n    ],\n    \"caCertificateIdentifier\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e1f8e864-4560-4663-be4c-bde3f9bb2209",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "88a03b9c-9f34-42dd-b574-cb16367f3db3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "06120588-5a9d-4176-b3dc-8be14ab77341",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3ff6d986-aef3-4f9e-a25b-72ea62b01384",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ef1991eb-db9f-4220-a540-f7638a17ef56",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aa1f6233-c3a8-48dd-909e-a48dd85f7cc1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cc1b8b52-fa39-436e-9ef0-3cd432c390e0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "80a3908e-f570-45d3-abe8-9722adbf2068",
      "documentation": "<p>Returns a list of available database blueprints in Amazon Lightsail. A blueprint describes the major engine version of a database.</p> <p>You can use a blueprint ID to create a new database that runs a specific database engine.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetRelationalDatabaseBlueprints",
      "responses": [
        {
          "uuid": "8d2b417b-6e79-48ab-97d8-0e65257ebb93",
          "body": "{\n  \"blueprints\": [\n    {\n      \"blueprintId\": \"\",\n      \"engine\": \"\",\n      \"engineVersion\": \"\",\n      \"engineDescription\": \"\",\n      \"engineVersionDescription\": \"\",\n      \"isEngineDefault\": {{faker 'random.boolean'}}\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c330eeb9-abcc-4777-b25f-071786e41517",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bbdcbe11-e2d7-4249-a01a-acaf3c27cd63",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2a1a68b9-fecc-4f91-96b6-8f54af484c22",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ea942378-25b3-4d07-b8e0-92946e7c4d75",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a672a91b-211d-4c8b-8e87-4e22246c3477",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eabca24d-adee-4807-bf5f-62d196606b87",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e86aa79d-2ea2-4fb1-be01-d9c60a68b57c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3fd1ca95-62ca-44d9-b36d-82e7dcf2a9ef",
      "documentation": "<p>Returns the list of bundles that are available in Amazon Lightsail. A bundle describes the performance specifications for a database.</p> <p>You can use a bundle ID to create a new database with explicit performance specifications.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetRelationalDatabaseBundles",
      "responses": [
        {
          "uuid": "abdbffe2-8073-488e-8177-aa44112dabe7",
          "body": "{\n  \"bundles\": [\n    {\n      \"bundleId\": \"\",\n      \"name\": \"\",\n      \"price\": {{faker 'random.float'}},\n      \"ramSizeInGb\": {{faker 'random.float'}},\n      \"diskSizeInGb\": {{faker 'random.number'}},\n      \"transferPerMonthInGb\": {{faker 'random.number'}},\n      \"cpuCount\": {{faker 'random.number'}},\n      \"isEncrypted\": {{faker 'random.boolean'}},\n      \"isActive\": {{faker 'random.boolean'}}\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e8945733-1a15-480b-b37b-7b0d20b7ae61",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "06f2d971-8d2b-4116-aad0-0c8ad5cdbadc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "75e32418-c4f5-4649-bf8e-d0386bcaaa14",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ba0e929c-1eb4-4097-9aca-9b6e27d21c31",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a83b184a-e752-40aa-83ef-4c8486f17df4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1238b7e5-eed9-4486-85e2-780188c2ff82",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8ecca15f-fe2b-4e62-ad15-50309b08ce88",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5bdf05bc-2f00-4287-b0a7-153a187803e6",
      "documentation": "Returns a list of events for a specific database in Amazon Lightsail.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetRelationalDatabaseEvents",
      "responses": [
        {
          "uuid": "043bf782-1d67-421b-92bb-7fa7b8f0e35a",
          "body": "{\n  \"relationalDatabaseEvents\": [\n    {\n      \"resource\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"message\": \"\",\n      \"eventCategories\": [\n        \"\"\n      ]\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c7142c03-0a14-46fe-bb86-c13c1ea927b5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4c326813-e8b3-4e6e-82a1-0c04dc920b1f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e99d7b13-535a-4bb6-a502-a6f45c5db687",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7ef3e19e-7470-4276-bbcd-7ca4e1ddd1df",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "185f7e54-c4df-4a25-8c9f-4912d6469e4c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ada67c4c-79dd-487d-8c7f-4b5c3de601ac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2a64839c-686b-4c5b-a1d9-d35a1144866a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "84f6e9c1-8fb2-492a-a9bc-0826902f5afa",
      "documentation": "Returns a list of log events for a database in Amazon Lightsail.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetRelationalDatabaseLogEvents",
      "responses": [
        {
          "uuid": "d69db67b-7765-4c49-a08f-064bc3a86a0e",
          "body": "{\n  \"resourceLogEvents\": [\n    {\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"message\": \"\"\n    }\n  ],\n  \"nextBackwardToken\": \"\",\n  \"nextForwardToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c4c76cd8-ded1-437c-9cee-bbfd3e967d26",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b274d761-b21e-4a01-af53-710b8438a922",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "661609d8-303b-49f1-8b3e-5b072468abb7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f22a739f-19ca-4ce1-97f3-7b8a8b000484",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6225b21d-3cac-4d4b-9351-e97c3660f3ab",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d83b6776-61ed-46d8-8033-ed84ad37dcbb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "755656c5-6b85-471f-ad78-81d2f65ed839",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0bccc9f8-ef19-4f60-895f-751ff094e125",
      "documentation": "Returns a list of available log streams for a specific database in Amazon Lightsail.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetRelationalDatabaseLogStreams",
      "responses": [
        {
          "uuid": "b7fd0170-79bf-42d1-9aaf-546c44067b19",
          "body": "{\n  \"logStreams\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d94c0ea6-33c5-4918-998d-44667508e843",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0b7a550f-2189-49fd-a298-616795cc2cae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4e85c36f-9d70-47d8-950b-ab013f80888b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0ae365ce-c0d8-4627-a222-3966c90f398b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "14bd4dfc-f91f-423e-8a56-2d86293e1dae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a50fbd5a-cdb5-472d-9192-fe172b638c73",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9df88184-827c-41b5-a545-4253482b31ab",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e9826443-1da6-46d6-a478-75324912912e",
      "documentation": "<p>Returns the current, previous, or pending versions of the master user password for a Lightsail database.</p> <p>The <code>GetRelationalDatabaseMasterUserPassword</code> operation supports tag-based access control via resource tags applied to the resource identified by relationalDatabaseName.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetRelationalDatabaseMasterUserPassword",
      "responses": [
        {
          "uuid": "398c269c-fb42-484e-b9f2-7d95832d7e41",
          "body": "{\n  \"masterUserPassword\": \"\",\n  \"createdAt\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "17ddd8f2-c2e2-4670-952a-41e3bf0cdcb9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6b2a057a-c7ff-4259-9ab2-0929eb3998a4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6e5215ce-ec93-4e9e-95eb-8b30a215ee60",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c21a9029-9798-47cb-b074-e3156a4f3ee7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "196ba94c-720c-446f-a643-c8cfacb6c06b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ae17799c-7a05-4e00-92f4-09c66a104b82",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "75afc9ce-37ca-4c10-885e-24cf26d4f9af",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6c1a2c64-6058-4452-99fb-17f89ad70964",
      "documentation": "<p>Returns the data points of the specified metric for a database in Amazon Lightsail.</p> <p>Metrics report the utilization of your resources, and the error counts generated by them. Monitor and collect metric data regularly to maintain the reliability, availability, and performance of your resources.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetRelationalDatabaseMetricData",
      "responses": [
        {
          "uuid": "efe4fc0c-f3ec-48e8-a6c5-0e34e139706d",
          "body": "{\n  \"metricName\": \"\",\n  \"metricData\": [\n    {\n      \"average\": {{faker 'random.float'}},\n      \"maximum\": {{faker 'random.float'}},\n      \"minimum\": {{faker 'random.float'}},\n      \"sampleCount\": {{faker 'random.float'}},\n      \"sum\": {{faker 'random.float'}},\n      \"timestamp\": \"{{faker 'date.recent' 365}}\",\n      \"unit\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "43ffdb7a-cc1c-4415-a74e-0ca7754b227a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2b66d6f0-c6ba-4650-b4fe-16b94596409c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ad3eac53-f424-42e6-8e4a-6fae6b51426c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "65d2e96b-a5c3-4e01-b16f-c775fe2cc451",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8adf5666-8521-43e8-b2ff-4c5c2e14061f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bc1f9bb0-71c8-4c6b-9010-2ef320e9501c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "042c7155-ca29-43df-9c9a-5ab959849322",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9be5cd65-946b-4b33-b579-d5e6648dbc13",
      "documentation": "<p>Returns all of the runtime parameters offered by the underlying database software, or engine, for a specific database in Amazon Lightsail.</p> <p>In addition to the parameter names and values, this operation returns other information about each parameter. This information includes whether changes require a reboot, whether the parameter is modifiable, the allowed values, and the data types.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetRelationalDatabaseParameters",
      "responses": [
        {
          "uuid": "cec60fae-48ba-43b0-84a3-3eed59760cfa",
          "body": "{\n  \"parameters\": [\n    {\n      \"allowedValues\": \"\",\n      \"applyMethod\": \"\",\n      \"applyType\": \"\",\n      \"dataType\": \"\",\n      \"description\": \"\",\n      \"isModifiable\": {{faker 'random.boolean'}},\n      \"parameterName\": \"\",\n      \"parameterValue\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "88f14b45-dfbf-41a0-bafb-9dee223d4daf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bbc58df2-b645-4959-9678-b301a6292ffb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "23e5a67f-60d1-465b-a6cd-87ddf10b09d7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6374a980-2c54-4e54-9709-adc60c4ae7b3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9d166b21-7fbd-4336-bde3-f626c5bb707f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "27b11da7-305e-43f4-8243-6de9c98c8f3d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cdf50d0f-f09f-4271-a3d6-e1d85256d27e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "313429cf-00da-4938-a438-aa8e6c4ea635",
      "documentation": "Returns information about a specific database snapshot in Amazon Lightsail.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetRelationalDatabaseSnapshot",
      "responses": [
        {
          "uuid": "31b48500-417b-468d-b04d-bd80af02d9e1",
          "body": "{\n  \"relationalDatabaseSnapshot\": {\n    \"name\": \"\",\n    \"arn\": \"\",\n    \"supportCode\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"resourceType\": \"\",\n    \"tags\": [\n      {\n        \"key\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"engine\": \"\",\n    \"engineVersion\": \"\",\n    \"sizeInGb\": {{faker 'random.number'}},\n    \"state\": \"\",\n    \"fromRelationalDatabaseName\": \"\",\n    \"fromRelationalDatabaseArn\": \"\",\n    \"fromRelationalDatabaseBundleId\": \"\",\n    \"fromRelationalDatabaseBlueprintId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7b56bfcd-b359-459c-8c8d-78b7a91be912",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8227780e-1dea-4ca3-b97e-5064f96b589b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "93960996-19a9-4075-b9fe-5fe0682a5da3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c8ff0325-aa6e-4166-b522-3f5e447c1fa5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0e340d2b-65d4-4a81-919b-80464e300a6e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d38f7efd-5870-44e7-9f61-f34cacbf2b0c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "69341556-1423-46d2-81ef-898debfc8369",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c265949f-4d53-4367-b49b-07e1dacb92ac",
      "documentation": "Returns information about all of your database snapshots in Amazon Lightsail.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetRelationalDatabaseSnapshots",
      "responses": [
        {
          "uuid": "8bbf7b45-fba4-4b71-8ba1-db5e9777b0a0",
          "body": "{\n  \"relationalDatabaseSnapshots\": [\n    {\n      \"name\": \"\",\n      \"arn\": \"\",\n      \"supportCode\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"resourceType\": \"\",\n      \"tags\": [\n        {\n          \"key\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"engine\": \"\",\n      \"engineVersion\": \"\",\n      \"sizeInGb\": {{faker 'random.number'}},\n      \"state\": \"\",\n      \"fromRelationalDatabaseName\": \"\",\n      \"fromRelationalDatabaseArn\": \"\",\n      \"fromRelationalDatabaseBundleId\": \"\",\n      \"fromRelationalDatabaseBlueprintId\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e89c36d3-e494-4af7-b7b8-0761ca93a432",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "51245009-499c-4f2a-a149-b08e173879a0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5d4a3608-32ef-4dee-8739-78bb382103b5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ca53584c-40ce-4cd7-b6d8-387557748988",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ed3dd546-2899-4a62-b99e-d297df2b0826",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "47d1bdfc-ce89-4d00-b64f-4ab9b5f18118",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9358eb37-0af3-4386-80ca-cf0a91f5913a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9a8242c8-9173-4027-ad80-fdef64b3f7a3",
      "documentation": "Returns information about all of your databases in Amazon Lightsail.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetRelationalDatabases",
      "responses": [
        {
          "uuid": "23ca453b-5446-46fb-9d47-6af90411eef3",
          "body": "{\n  \"relationalDatabases\": [\n    {\n      \"name\": \"\",\n      \"arn\": \"\",\n      \"supportCode\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"resourceType\": \"\",\n      \"tags\": [\n        {\n          \"key\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"relationalDatabaseBlueprintId\": \"\",\n      \"relationalDatabaseBundleId\": \"\",\n      \"masterDatabaseName\": \"\",\n      \"hardware\": {\n        \"cpuCount\": {{faker 'random.number'}},\n        \"diskSizeInGb\": {{faker 'random.number'}},\n        \"ramSizeInGb\": {{faker 'random.float'}}\n      },\n      \"state\": \"\",\n      \"secondaryAvailabilityZone\": \"\",\n      \"backupRetentionEnabled\": {{faker 'random.boolean'}},\n      \"pendingModifiedValues\": {\n        \"masterUserPassword\": \"\",\n        \"engineVersion\": \"\",\n        \"backupRetentionEnabled\": {{faker 'random.boolean'}}\n      },\n      \"engine\": \"\",\n      \"engineVersion\": \"\",\n      \"latestRestorableTime\": \"{{faker 'date.recent' 365}}\",\n      \"masterUsername\": \"\",\n      \"parameterApplyStatus\": \"\",\n      \"preferredBackupWindow\": \"\",\n      \"preferredMaintenanceWindow\": \"\",\n      \"publiclyAccessible\": {{faker 'random.boolean'}},\n      \"masterEndpoint\": {\n        \"port\": {{faker 'random.number'}},\n        \"address\": \"\"\n      },\n      \"pendingMaintenanceActions\": [\n        {\n          \"action\": \"\",\n          \"description\": \"\",\n          \"currentApplyDate\": \"{{faker 'date.recent' 365}}\"\n        }\n      ],\n      \"caCertificateIdentifier\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b2c3396f-5f1e-4fa9-802c-4378d0dd377b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "914a5af3-90d0-456b-a9ad-54eeb316d8d9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e21b582e-9889-4737-98bf-230c795e809e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b89c64f1-b2ca-45aa-b19b-b2b588cfc2aa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d8d9ce40-b97e-4be2-8cf8-539a6fec9e77",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "71405d84-2e24-44cc-9262-9f029bdd5037",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ab12cb4b-77d4-41ef-a6db-8e05cf2d25d7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ef5c5b7c-5562-48d9-9d17-b064264e5a6d",
      "documentation": "Returns information about an Amazon Lightsail static IP.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetStaticIp",
      "responses": [
        {
          "uuid": "06e77c9b-fb6f-4d94-998a-99723c80c998",
          "body": "{\n  \"staticIp\": {\n    \"name\": \"\",\n    \"arn\": \"\",\n    \"supportCode\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"resourceType\": \"\",\n    \"ipAddress\": \"\",\n    \"attachedTo\": \"\",\n    \"isAttached\": {{faker 'random.boolean'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c58130ab-d2b6-41a5-9e1f-272daaa9d2e7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "352772df-10c7-4327-815c-8b60a07e4862",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5c5cfe95-a9a5-4906-abcc-1604900cc9c5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1bc93926-3a16-42eb-8017-b6420320c88f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9fc8f3d0-cb39-40a7-847b-80d2ddcd259c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "66786534-8297-4838-a7ab-9e9945f1e849",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1b01a653-2ac8-4a1a-ba72-23c80eea6bc2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "46604ec2-59e0-4d70-a870-83965ec43b3d",
      "documentation": "Returns information about all static IPs in the user's account.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.GetStaticIps",
      "responses": [
        {
          "uuid": "d20222a8-f67e-4d90-9cbc-0c189cd5419a",
          "body": "{\n  \"staticIps\": [\n    {\n      \"name\": \"\",\n      \"arn\": \"\",\n      \"supportCode\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"resourceType\": \"\",\n      \"ipAddress\": \"\",\n      \"attachedTo\": \"\",\n      \"isAttached\": {{faker 'random.boolean'}}\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4efc0cf1-4bbe-427d-ab90-38f022113c87",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "856d2b9c-9a8b-400d-9e37-2621d422eceb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "401039d5-5939-4422-a2e0-8f64f7109449",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "84c30dd5-1e93-4eab-bcde-c7f10d357e4f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3e53a556-89a0-406f-9d97-9b6848b325e2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "70f63832-1abf-4f65-9c70-315bb22b9dbd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8d310e2f-1a88-4b9e-8f78-d5fc012d938c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "69b12e99-6f2d-4e56-a680-f5c9981b0940",
      "documentation": "Imports a public SSH key from a specific key pair.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.ImportKeyPair",
      "responses": [
        {
          "uuid": "772bbb5a-8d7d-4a9e-a77e-3b0ed612e393",
          "body": "{\n  \"operation\": {\n    \"id\": \"\",\n    \"resourceName\": \"\",\n    \"resourceType\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"isTerminal\": {{faker 'random.boolean'}},\n    \"operationDetails\": \"\",\n    \"operationType\": \"\",\n    \"status\": \"\",\n    \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n    \"errorCode\": \"\",\n    \"errorDetails\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d5d9159a-258a-4572-af53-f61d1a7d5205",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2363ef17-092f-4a3a-9a64-be53be2c54c8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b1d64645-9a18-4925-bcc7-c64bfca65066",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6b51fa34-3805-4f2f-8ae9-f08e6a49c392",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b0ce0249-f6d6-4acb-aef0-e5812411a0cd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "40d79584-fe15-454c-ac82-4399cffb483b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3d71ee71-f7a0-4134-a2c6-b70de4fdc7ea",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "206d94a2-6651-4de5-98ee-9e55697379b0",
      "documentation": "Returns a Boolean value indicating whether your Lightsail VPC is peered.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.IsVpcPeered",
      "responses": [
        {
          "uuid": "c9a017b5-bac7-4fd7-aa8e-7cf61d863bb6",
          "body": "{\n  \"isPeered\": {{faker 'random.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "22cefb8d-271e-4e1f-b570-de65ab71d4ea",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f426d6a8-fc6d-4fd2-b932-bd10b078c4fa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "49ad2b69-0dbf-4cc1-8b3c-bbb31815380b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d6de7763-e311-4dab-8456-ba9f2e9943af",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "829506b9-21ce-46e4-a284-8a2fc0af7681",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "77a90fae-1ee5-4fcc-bcf1-709038718e5a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1e6b07a0-a972-472f-ad95-79d4129d612c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f5c04ef5-09c8-4991-b3ac-42d8b2f4b4c2",
      "documentation": "<p>Opens ports for a specific Amazon Lightsail instance, and specifies the IP addresses allowed to connect to the instance through the ports, and the protocol.</p> <p>The <code>OpenInstancePublicPorts</code> action supports tag-based access control via resource tags applied to the resource identified by <code>instanceName</code>. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.OpenInstancePublicPorts",
      "responses": [
        {
          "uuid": "bc78156b-760c-4e02-90c4-b2a896bdea4f",
          "body": "{\n  \"operation\": {\n    \"id\": \"\",\n    \"resourceName\": \"\",\n    \"resourceType\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"isTerminal\": {{faker 'random.boolean'}},\n    \"operationDetails\": \"\",\n    \"operationType\": \"\",\n    \"status\": \"\",\n    \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n    \"errorCode\": \"\",\n    \"errorDetails\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a6e9e179-1641-476a-b423-73addcdd796d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c0ab9568-14d6-4252-9707-18595798f0c0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9057a324-fe0f-435f-9142-6f4485c0758d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7fc03eef-0b0f-413c-bf9c-5497b752f0ce",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3cc982fb-4949-4e57-874d-209033b8972f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f012da24-eb85-47ae-9ccc-0ad376dd2448",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8c44ddb9-7371-44a4-a44f-85ff1903eee8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6dde16be-aa7b-45ce-bd03-e93aeacc6e0e",
      "documentation": "Peers the Lightsail VPC with the user's default VPC.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.PeerVpc",
      "responses": [
        {
          "uuid": "e4c63146-2ee4-44b0-a254-716b1fdc18e2",
          "body": "{\n  \"operation\": {\n    \"id\": \"\",\n    \"resourceName\": \"\",\n    \"resourceType\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"isTerminal\": {{faker 'random.boolean'}},\n    \"operationDetails\": \"\",\n    \"operationType\": \"\",\n    \"status\": \"\",\n    \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n    \"errorCode\": \"\",\n    \"errorDetails\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3ae6a1c8-fff0-4a91-b562-237509c6bc22",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "be65bd97-5359-4cd1-909f-9a4be9bdfb29",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dab1c363-0758-4bfa-bd1b-ee591d12d97c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "68cf4945-3174-400e-9f78-520679bb1305",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c4806b2c-7eee-4ae0-a684-0f0b4c86c024",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "40e367d1-e9ac-4099-97a1-fcf650bd3ba2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5dd57da5-074e-44f2-a6d7-6db6b52d54b6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7d70dfa2-8b67-4915-806c-781c3f74e789",
      "documentation": "<p>Creates or updates an alarm, and associates it with the specified metric.</p> <p>An alarm is used to monitor a single metric for one of your resources. When a metric condition is met, the alarm can notify you by email, SMS text message, and a banner displayed on the Amazon Lightsail console. For more information, see <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-alarms\">Alarms in Amazon Lightsail</a>.</p> <p>When this action creates an alarm, the alarm state is immediately set to <code>INSUFFICIENT_DATA</code>. The alarm is then evaluated and its state is set appropriately. Any actions associated with the new state are then executed.</p> <p>When you update an existing alarm, its state is left unchanged, but the update completely overwrites the previous configuration of the alarm. The alarm is then evaluated with the updated configuration.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.PutAlarm",
      "responses": [
        {
          "uuid": "b95e769f-c05f-4e4b-a50a-9cc133b31a69",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'random.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8d420b8b-8e59-4c0b-b9d5-df53c8107eb9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3d8dc056-bdc6-4835-8907-d9b22a446ef6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "03386636-cb69-4d99-b4f1-690829e6efff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "76628cdf-220a-48db-ab9d-e2ab4b2e87e6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a5b31f23-f00d-4f98-8bc8-4e06eff2b12e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b693ccb5-f81d-4364-b915-dd612c4b0ab1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "63979df0-5187-42ff-a399-a475f3f19c34",
      "documentation": "<p>Opens ports for a specific Amazon Lightsail instance, and specifies the IP addresses allowed to connect to the instance through the ports, and the protocol. This action also closes all currently open ports that are not included in the request. Include all of the ports and the protocols you want to open in your <code>PutInstancePublicPorts</code>request. Or use the <code>OpenInstancePublicPorts</code> action to open ports without closing currently open ports.</p> <p>The <code>PutInstancePublicPorts</code> action supports tag-based access control via resource tags applied to the resource identified by <code>instanceName</code>. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.PutInstancePublicPorts",
      "responses": [
        {
          "uuid": "62fc7f68-8753-40ef-b6e9-e895a8519560",
          "body": "{\n  \"operation\": {\n    \"id\": \"\",\n    \"resourceName\": \"\",\n    \"resourceType\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"isTerminal\": {{faker 'random.boolean'}},\n    \"operationDetails\": \"\",\n    \"operationType\": \"\",\n    \"status\": \"\",\n    \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n    \"errorCode\": \"\",\n    \"errorDetails\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "716ef535-2e8a-4290-bfda-b62ba6160031",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1c724715-5816-4827-afe6-a0d95c7bf349",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8e769f9b-3733-4ebb-9d4e-1617b93e888f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a84ed064-8f60-4283-b714-95d3b3ffb20f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7a655ecf-24cc-47e7-a98c-5ceb67eb37fe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9dac2714-d370-4f17-9a9f-8e9169cc860e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f59af81e-572b-40ed-9083-cf4db59c1fbd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8b94afaa-7aed-4188-ae9a-c70403e8adc4",
      "documentation": "<p>Restarts a specific instance.</p> <p>The <code>reboot instance</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>instance name</code>. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.RebootInstance",
      "responses": [
        {
          "uuid": "dc32b2ce-506c-4123-847e-1ec2f2c20ee2",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'random.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "07fb8018-ad26-40d9-8575-5a935a7a46d5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8335f785-288f-4bcd-8fd3-e7f725097a8d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4bea2649-e514-407a-9280-5776e1c4eaad",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cc3e3b30-3407-4338-8009-e8536e11a2c2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "56c5fc5e-5a52-4784-b34e-1d5de997ff59",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9eebd3e4-99de-459a-8bdf-485bc652451c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d2cb3194-9878-4aaa-91d7-17776d67e4fb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "56919240-5d95-4b7b-879a-5f31e85810e4",
      "documentation": "<p>Restarts a specific database in Amazon Lightsail.</p> <p>The <code>reboot relational database</code> operation supports tag-based access control via resource tags applied to the resource identified by relationalDatabaseName. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.RebootRelationalDatabase",
      "responses": [
        {
          "uuid": "203e4ba8-3723-47b4-9dd5-e36c77ee96f1",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'random.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b33a453a-9f21-41db-abbf-bb2e31f03b58",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ba664912-ef7f-4003-ac9b-748e97f9cbe0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4c245ea9-aa06-4340-9b57-d9baca1e79fa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "76921933-1faa-4bd9-a563-2e3acdf50103",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "63d8ae5a-90bb-473a-8057-b037ef0e93eb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "434f782b-762d-4803-8a0e-6ad1a29c03cc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e880e5e4-c5e8-4065-8d86-95b6e57aa763",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3898283d-e4fc-4975-a4cc-2fe092923d3d",
      "documentation": "<p>Registers a container image to your Amazon Lightsail container service.</p> <note> <p>This action is not required if you install and use the Lightsail Control (lightsailctl) plugin to push container images to your Lightsail container service. For more information, see <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-pushing-container-images\">Pushing and managing container images on your Amazon Lightsail container services</a> in the <i>Amazon Lightsail Developer Guide</i>.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.RegisterContainerImage",
      "responses": [
        {
          "uuid": "dd153784-9f10-44df-8ce9-551da4ac1abc",
          "body": "{\n  \"containerImage\": {\n    \"image\": \"\",\n    \"digest\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "df64a1ae-28e1-40c8-9fd7-bcbec4608abf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "894465c3-466c-4816-8da7-a8a026049260",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ad6d082a-f7d2-43b0-abc3-42126f820430",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "699321a4-cc2b-4b00-bcb6-18618aec72dc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "786aa55b-e591-4447-b68f-72a3487009a6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "98312717-f7a4-475c-a839-c2767239cc0b",
      "documentation": "Deletes a specific static IP from your account.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.ReleaseStaticIp",
      "responses": [
        {
          "uuid": "46076181-5da5-41de-ad7f-66106600fb15",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'random.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "21a78a8c-fcd9-41be-8004-2f06f5ae783a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "53924fdb-a78e-4e86-9868-87e4db4ca742",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e5969eed-d4d3-4ee6-95c4-8e2a616f1fc6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dc86cdf1-5986-48fe-ac37-2009d30cd2e9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "30257d80-d554-406d-b17c-884ec4bb1864",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d6949f9a-3ebd-444b-9fd6-2cebfd10df01",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8e0e9d03-3288-4ce6-8944-ba5144279886",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c4ff85c8-4a01-49db-9047-9fd4f9d3d810",
      "documentation": "<p>Deletes currently cached content from your Amazon Lightsail content delivery network (CDN) distribution.</p> <p>After resetting the cache, the next time a content request is made, your distribution pulls, serves, and caches it from the origin.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.ResetDistributionCache",
      "responses": [
        {
          "uuid": "87fd4dbb-5ede-4fcc-9a28-3251a0b974cd",
          "body": "{\n  \"status\": \"\",\n  \"createTime\": \"{{faker 'date.recent' 365}}\",\n  \"operation\": {\n    \"id\": \"\",\n    \"resourceName\": \"\",\n    \"resourceType\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"isTerminal\": {{faker 'random.boolean'}},\n    \"operationDetails\": \"\",\n    \"operationType\": \"\",\n    \"status\": \"\",\n    \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n    \"errorCode\": \"\",\n    \"errorDetails\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3f92debd-210d-49ae-8f0e-69f4990a3d24",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a78a9c07-caff-4161-8659-558832020fe0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8b145e65-393a-4cd4-b5cd-5fa0f13cf145",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d75fce75-9a27-44c2-9336-3a7d65b0373c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "efa66502-dec8-4426-add9-85c025a3dac8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "53536f53-fb6e-495b-9fd1-5bf8c6f3bb1d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ba5cc2a9-fa89-4dfd-a0b1-f9fbec8dfaa8",
      "documentation": "<p>Sends a verification request to an email contact method to ensure it's owned by the requester. SMS contact methods don't need to be verified.</p> <p>A contact method is used to send you notifications about your Amazon Lightsail resources. You can add one email address and one mobile phone number contact method in each AWS Region. However, SMS text messaging is not supported in some AWS Regions, and SMS text messages cannot be sent to some countries/regions. For more information, see <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-notifications\">Notifications in Amazon Lightsail</a>.</p> <p>A verification request is sent to the contact method when you initially create it. Use this action to send another verification request if a previous verification request was deleted, or has expired.</p> <important> <p>Notifications are not sent to an email contact method until after it is verified, and confirmed as valid.</p> </important>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.SendContactMethodVerification",
      "responses": [
        {
          "uuid": "4f6b75f9-ccae-4e46-bc1c-0c47b0ddfc65",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'random.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "65772207-f71b-4445-87ac-f14ab60c999e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4da2d276-4e2c-43bd-aafa-af69f6284458",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "225ca3cc-d110-4959-ad7b-29fc7c039912",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "420d35df-214c-4810-bac2-3f15800545ff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c79094fb-65c5-4123-85ff-c41d798c89c5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a8e9beb0-5e6c-4b06-a286-8fac15516da8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "81b5943b-5810-4cff-a411-321b13d7c87d",
      "documentation": "<p>Sets the IP address type for an Amazon Lightsail resource.</p> <p>Use this action to enable dual-stack for a resource, which enables IPv4 and IPv6 for the specified resource. Alternately, you can use this action to disable dual-stack, and enable IPv4 only.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.SetIpAddressType",
      "responses": [
        {
          "uuid": "5e73e11d-4e48-4702-b671-680967f1d623",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'random.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2b566018-f370-474f-aea1-3bf7c70bd63c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4de56cf3-0843-4aee-8b3d-736fea81c20b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0ac1d2e6-20ac-4f10-a301-dd33a2e41314",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b4d48a4f-5aa7-4d0f-a7a4-d1ad92ba59dd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a1ea1cd0-5f4f-4bda-b7c3-310524629ff3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "93ce0298-e8e3-4095-a164-88f37acd2b02",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b12507b4-6b39-4a7e-a596-38a5bd9cdc1a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9e6bfe8d-fa35-4d46-8829-a8249aca95e9",
      "documentation": "<p>Sets the Amazon Lightsail resources that can access the specified Lightsail bucket.</p> <p>Lightsail buckets currently support setting access for Lightsail instances in the same AWS Region.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.SetResourceAccessForBucket",
      "responses": [
        {
          "uuid": "a507f093-3aaf-4b9e-acfb-4b0039b6649f",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'random.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a600a148-4089-4f12-8df0-27cb7400da76",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d96ea291-a1ba-4e57-b872-bb598e7477b3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "58e27605-e26b-4ec2-9e3d-f8716fcf3bd0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b70b171a-04a1-40fe-b06d-eba09e73a518",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "72cf2fa8-84b9-4172-9742-a9fe251be250",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2b3f5fa6-8e20-403a-913e-6e17506ab3ca",
      "documentation": "<p>Starts a specific Amazon Lightsail instance from a stopped state. To restart an instance, use the <code>reboot instance</code> operation.</p> <note> <p>When you start a stopped instance, Lightsail assigns a new public IP address to the instance. To use the same IP address after stopping and starting an instance, create a static IP address and attach it to the instance. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/lightsail-create-static-ip\">Amazon Lightsail Developer Guide</a>.</p> </note> <p>The <code>start instance</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>instance name</code>. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.StartInstance",
      "responses": [
        {
          "uuid": "62c641a3-385c-47d3-8364-f9c72a9f8176",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'random.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "49629f25-c84f-4705-a1e8-740014777740",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6fcb98fd-68f8-4990-84fb-b600b14f23e8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1b6e0a2d-60a7-4e41-852f-7c9b54643cdd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1f7991e2-b1f7-47d2-9797-451c9960a73d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2361bc2d-7534-4215-bbae-718ab195afd5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1cc3a74f-239f-4a50-a9e5-741e5f523cd4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8f318c5f-aba1-424c-af79-ab19a0574760",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "63e4495e-4b8f-4e6c-bc8d-65054d0cee76",
      "documentation": "<p>Starts a specific database from a stopped state in Amazon Lightsail. To restart a database, use the <code>reboot relational database</code> operation.</p> <p>The <code>start relational database</code> operation supports tag-based access control via resource tags applied to the resource identified by relationalDatabaseName. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.StartRelationalDatabase",
      "responses": [
        {
          "uuid": "309f8c8c-7d39-40eb-b912-45f6da9fac4f",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'random.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f31886da-6a85-42a7-89ec-37bc5e8c6d75",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "57fdea29-940b-483e-a945-1265a2f7f5dd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3a1a5614-88dd-46a6-9133-cd51e4a4b234",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fe020ae5-e05c-47b8-82aa-e69720e22566",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9fcbd632-1dca-40ff-ad20-7434170abee9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2f1a80a7-0a42-483f-9958-eb0fecb5e537",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8643b0cc-6427-480a-a84a-83ff1d4eed28",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dac8a6bb-fd2a-49c2-a1f6-4ce63b21a0ce",
      "documentation": "<p>Stops a specific Amazon Lightsail instance that is currently running.</p> <note> <p>When you start a stopped instance, Lightsail assigns a new public IP address to the instance. To use the same IP address after stopping and starting an instance, create a static IP address and attach it to the instance. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/lightsail-create-static-ip\">Amazon Lightsail Developer Guide</a>.</p> </note> <p>The <code>stop instance</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>instance name</code>. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.StopInstance",
      "responses": [
        {
          "uuid": "ed3623f7-ef53-4fea-a19b-76d5d99d8b9f",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'random.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "00dbd02f-f851-4ff5-a718-67e5ab105a71",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "495494bd-5ecf-4ebf-99de-c84c00e90bc2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e51d5a70-4962-491a-9e0d-aaf9b5a11165",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8daadf6c-8b58-4652-8a28-56bc10a5a2ef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "75252fb1-f2ed-46dc-8d83-0ba373efd603",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5898b1e6-bc84-4663-be12-875b262e5a1c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ca97aa4a-9151-4766-b857-8af52e1177d3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "810728e4-28aa-4ea5-879b-e7844e5df31f",
      "documentation": "<p>Stops a specific database that is currently running in Amazon Lightsail.</p> <p>The <code>stop relational database</code> operation supports tag-based access control via resource tags applied to the resource identified by relationalDatabaseName. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.StopRelationalDatabase",
      "responses": [
        {
          "uuid": "cf8aad77-e847-43fa-b65e-18c492fb1224",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'random.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fdab458f-1dc5-473e-8875-8384d8ee36b1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eef18d07-1c63-4255-8418-4c38883199f4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ea07ec9c-5a86-4294-8cdf-09b2b3d0341b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "be5af48c-fe89-4d5e-8cda-1ca0dfbfd3e5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9be7cfc9-9e0d-4802-abf1-a2858a6994d3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cbfbfa4e-6cea-4e19-b9c9-f25fec30eabb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "afb47121-f00c-4323-b38a-4743ee455a51",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a4e1d08c-5c74-4889-b9f9-1e1a69efa083",
      "documentation": "<p>Adds one or more tags to the specified Amazon Lightsail resource. Each resource can have a maximum of 50 tags. Each tag consists of a key and an optional value. Tag keys must be unique per resource. For more information about tags, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-tags\">Amazon Lightsail Developer Guide</a>.</p> <p>The <code>tag resource</code> operation supports tag-based access control via request tags and resource tags applied to the resource identified by <code>resource name</code>. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.TagResource",
      "responses": [
        {
          "uuid": "9f8b589d-78f0-4410-91c9-4421548ba217",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'random.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9e1ce224-b4a3-465e-bb78-903731dad788",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4fbbfc8e-a0e8-47a8-92ce-fb60d58e6351",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6bf1d36f-9e61-4bfd-84ae-bc76d004ece6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "663d3f83-66f6-490e-b317-d05dcc210b19",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3effc59b-5e35-4df1-9703-b3f34c387040",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "85405262-6657-48bd-832a-65b954a28d6e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "48cc5208-7ae4-4ccd-a8c3-b0856f138979",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "afb2a930-403c-44b6-a6cf-d0da5feb901d",
      "documentation": "<p>Tests an alarm by displaying a banner on the Amazon Lightsail console. If a notification trigger is configured for the specified alarm, the test also sends a notification to the notification protocol (<code>Email</code> and/or <code>SMS</code>) configured for the alarm.</p> <p>An alarm is used to monitor a single metric for one of your resources. When a metric condition is met, the alarm can notify you by email, SMS text message, and a banner displayed on the Amazon Lightsail console. For more information, see <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-alarms\">Alarms in Amazon Lightsail</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.TestAlarm",
      "responses": [
        {
          "uuid": "b964e394-151b-4c6b-bb44-dd6143940cce",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'random.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aa8845d9-2df1-4a99-8957-98455028f421",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "16249c46-f878-4f4c-bd85-52eeb12094d9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a1a063cb-7626-452f-b43a-80dc85fa5990",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "477caaf8-815f-4576-9cc5-2da8365bb782",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e3b7c42c-351d-475c-9cb1-60a2154be7e3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bb44e09d-fd3e-4548-b073-4e4e22d38401",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8d26f0a9-57df-401c-a211-5b8e463aefaf",
      "documentation": "Unpeers the Lightsail VPC from the user's default VPC.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.UnpeerVpc",
      "responses": [
        {
          "uuid": "f1b567ef-ba00-48af-bbaa-7defa8f0d6ac",
          "body": "{\n  \"operation\": {\n    \"id\": \"\",\n    \"resourceName\": \"\",\n    \"resourceType\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"isTerminal\": {{faker 'random.boolean'}},\n    \"operationDetails\": \"\",\n    \"operationType\": \"\",\n    \"status\": \"\",\n    \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n    \"errorCode\": \"\",\n    \"errorDetails\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6b3449b8-5cce-47d1-bb52-bcbb59d96a58",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bf6a8c6a-cd7e-44bc-8efa-8fd0a58fd041",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3a41429e-615b-4519-94e7-81f5c285e2d7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "de8da9e0-aaa2-44f8-a18e-273a2ca69468",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b318e989-04d5-4409-a565-0247f2f99fa2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a0de2075-b03e-4eb3-943c-34a21f3e4797",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "21abf637-6236-426f-97bd-66c6552f3130",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3e2d1df2-876c-47ad-b894-62e76c97f342",
      "documentation": "<p>Deletes the specified set of tag keys and their values from the specified Amazon Lightsail resource.</p> <p>The <code>untag resource</code> operation supports tag-based access control via request tags and resource tags applied to the resource identified by <code>resource name</code>. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.UntagResource",
      "responses": [
        {
          "uuid": "0b208f89-14ea-489f-b7b3-4a6eac9d1514",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'random.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "29913c68-6c9f-474f-8839-227d65260aa1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0b509470-48c0-49bc-86f0-368184b4f5fa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "083ab97b-9555-437b-bf4b-3e776c5de75e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "928d0581-8fc9-43ba-be1f-901116d6aad1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e88b32d5-7d4b-474a-bbce-9245ebb831a9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b9023c8d-1862-43bc-8fa8-10aaa278f8be",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f9d6d38f-b552-4e25-a97d-112c26cf447f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f8d50c21-73a0-40c9-b23e-258bef5cbede",
      "documentation": "<p>Updates an existing Amazon Lightsail bucket.</p> <p>Use this action to update the configuration of an existing bucket, such as versioning, public accessibility, and the AWS accounts that can access the bucket.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.UpdateBucket",
      "responses": [
        {
          "uuid": "6371e34a-e32e-4240-b0f1-5d28cd46a59a",
          "body": "{\n  \"bucket\": {\n    \"resourceType\": \"\",\n    \"accessRules\": {\n      \"getObject\": \"\",\n      \"allowPublicOverrides\": {{faker 'random.boolean'}}\n    },\n    \"arn\": \"\",\n    \"bundleId\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"url\": \"\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"name\": \"\",\n    \"supportCode\": \"\",\n    \"tags\": [\n      {\n        \"key\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"objectVersioning\": \"\",\n    \"ableToUpdateBundle\": {{faker 'random.boolean'}},\n    \"readonlyAccessAccounts\": [\n      \"\"\n    ],\n    \"resourcesReceivingAccess\": [\n      {\n        \"name\": \"\",\n        \"resourceType\": \"\"\n      }\n    ],\n    \"state\": {\n      \"code\": \"\",\n      \"message\": \"\"\n    }\n  },\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'random.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "64505ea0-1ad9-4e11-b00b-b4626d5de024",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f57be9f3-463e-47b5-b9e0-ad689f82ef4e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "53de1c08-e753-4b71-8a47-6965e0d1fce2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dd5ca038-08a5-4f12-a40d-6202a2dfc1c2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bd2d3173-96fb-4d88-8a7c-eb3e5f2ca841",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "aa2ec8d2-edef-4c2c-8a27-f3f54efab8f4",
      "documentation": "<p>Updates the bundle, or storage plan, of an existing Amazon Lightsail bucket.</p> <p>A bucket bundle specifies the monthly cost, storage space, and data transfer quota for a bucket. You can update a bucket's bundle only one time within a monthly AWS billing cycle. To determine if you can update a bucket's bundle, use the <a>GetBuckets</a> action. The <code>ableToUpdateBundle</code> parameter in the response will indicate whether you can currently update a bucket's bundle.</p> <p>Update a bucket's bundle if it's consistently going over its storage space or data transfer quota, or if a bucket's usage is consistently in the lower range of its storage space or data transfer quota. Due to the unpredictable usage fluctuations that a bucket might experience, we strongly recommend that you update a bucket's bundle only as a long-term strategy, instead of as a short-term, monthly cost-cutting measure. Choose a bucket bundle that will provide the bucket with ample storage space and data transfer for a long time to come.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.UpdateBucketBundle",
      "responses": [
        {
          "uuid": "ce29faed-21cd-469b-827e-d6e078070fe4",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'random.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c7dabab2-bb64-4f70-99a1-ee874731c25b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "df0b2ed1-e8b6-4185-aa4e-ce21297cd2b5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f69c0537-72d8-475d-986f-db2e306ec03c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a45589a3-70c0-4dae-8684-c53c22f6e1cb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "993035de-e960-4766-951b-f3cd5632e98d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "eb4a3c9e-c7d1-4b7d-b61a-24a8bae5bb9f",
      "documentation": "Updates the configuration of your Amazon Lightsail container service, such as its power, scale, and public domain names.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.UpdateContainerService",
      "responses": [
        {
          "uuid": "0194068c-3190-44be-b0b2-e0a9dc0baeb4",
          "body": "{\n  \"containerService\": {\n    \"containerServiceName\": \"\",\n    \"arn\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"resourceType\": \"\",\n    \"tags\": [\n      {\n        \"key\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"power\": \"\",\n    \"powerId\": \"\",\n    \"state\": \"\",\n    \"stateDetail\": {\n      \"code\": \"\",\n      \"message\": \"\"\n    },\n    \"scale\": {{faker 'random.number'}},\n    \"currentDeployment\": {\n      \"version\": {{faker 'random.number'}},\n      \"state\": \"\",\n      \"containers\": {},\n      \"publicEndpoint\": {\n        \"containerName\": \"\",\n        \"containerPort\": {{faker 'random.number'}},\n        \"healthCheck\": {\n          \"healthyThreshold\": {{faker 'random.number'}},\n          \"unhealthyThreshold\": {{faker 'random.number'}},\n          \"timeoutSeconds\": {{faker 'random.number'}},\n          \"intervalSeconds\": {{faker 'random.number'}},\n          \"path\": \"\",\n          \"successCodes\": \"\"\n        }\n      },\n      \"createdAt\": \"{{faker 'date.recent' 365}}\"\n    },\n    \"nextDeployment\": {\n      \"version\": {{faker 'random.number'}},\n      \"state\": \"\",\n      \"containers\": {},\n      \"publicEndpoint\": {\n        \"containerName\": \"\",\n        \"containerPort\": {{faker 'random.number'}},\n        \"healthCheck\": {\n          \"healthyThreshold\": {{faker 'random.number'}},\n          \"unhealthyThreshold\": {{faker 'random.number'}},\n          \"timeoutSeconds\": {{faker 'random.number'}},\n          \"intervalSeconds\": {{faker 'random.number'}},\n          \"path\": \"\",\n          \"successCodes\": \"\"\n        }\n      },\n      \"createdAt\": \"{{faker 'date.recent' 365}}\"\n    },\n    \"isDisabled\": {{faker 'random.boolean'}},\n    \"principalArn\": \"\",\n    \"privateDomainName\": \"\",\n    \"publicDomainNames\": {},\n    \"url\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ebf677de-4d5a-4ba8-9870-4cbcd4825850",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "533d4b0c-d7af-4309-9297-3624d8435db8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "782aba2f-63c1-4718-86bf-557301bee20e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1cdfc165-c007-426f-a06e-4c3ed1b5c63c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5ce3aafa-b1f9-4830-b508-f677147caa2f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0abaa759-e06e-4931-b153-a728dd97c62c",
      "documentation": "<p>Updates an existing Amazon Lightsail content delivery network (CDN) distribution.</p> <p>Use this action to update the configuration of your existing distribution.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.UpdateDistribution",
      "responses": [
        {
          "uuid": "ef87f2fa-4ff2-4026-a4de-27993004e96d",
          "body": "{\n  \"operation\": {\n    \"id\": \"\",\n    \"resourceName\": \"\",\n    \"resourceType\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"isTerminal\": {{faker 'random.boolean'}},\n    \"operationDetails\": \"\",\n    \"operationType\": \"\",\n    \"status\": \"\",\n    \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n    \"errorCode\": \"\",\n    \"errorDetails\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8a917039-39aa-4cad-ad37-c72a5931a512",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7006d6bb-2d8f-4128-940e-273722e43514",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2add2b74-51e1-45fd-9ee7-f629ec66203e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9962fae1-d9f5-40e6-9be7-97e46246b490",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2e9c7f1e-b9a1-498a-8806-f9f197f8944b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dcc7f185-be14-4def-b6ce-c4c81900c47c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2cffed1c-260a-4be4-89b1-1b2deebc3a81",
      "documentation": "<p>Updates the bundle of your Amazon Lightsail content delivery network (CDN) distribution.</p> <p>A distribution bundle specifies the monthly network transfer quota and monthly cost of your dsitribution.</p> <p>Update your distribution's bundle if your distribution is going over its monthly network transfer quota and is incurring an overage fee.</p> <p>You can update your distribution's bundle only one time within your monthly AWS billing cycle. To determine if you can update your distribution's bundle, use the <code>GetDistributions</code> action. The <code>ableToUpdateBundle</code> parameter in the result will indicate whether you can currently update your distribution's bundle.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.UpdateDistributionBundle",
      "responses": [
        {
          "uuid": "39626d33-32d5-44b0-b1af-adce5198a9e6",
          "body": "{\n  \"operation\": {\n    \"id\": \"\",\n    \"resourceName\": \"\",\n    \"resourceType\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"location\": {\n      \"availabilityZone\": \"\",\n      \"regionName\": \"\"\n    },\n    \"isTerminal\": {{faker 'random.boolean'}},\n    \"operationDetails\": \"\",\n    \"operationType\": \"\",\n    \"status\": \"\",\n    \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n    \"errorCode\": \"\",\n    \"errorDetails\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c1c3910e-0202-4112-9a78-94509cf3716e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "424f6cd5-0bd5-4f16-8dbc-b1e6be893a1c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f141a6ab-e26c-49fd-80e9-a6219640c6da",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "693a4f76-8c71-4964-8134-ed73c64db236",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7bcc34de-024f-46fb-98e7-b6427f014ad4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "15f9310d-e432-45ef-8794-052c71e6de52",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "654bc934-cb7a-4092-9b28-998ab906a8e8",
      "documentation": "<p>Updates a domain recordset after it is created.</p> <p>The <code>update domain entry</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>domain name</code>. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.UpdateDomainEntry",
      "responses": [
        {
          "uuid": "99bad68f-c25a-455e-b775-9a559c5b1831",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'random.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1d02b88e-2119-4b5f-ac1d-ca17c3cd7e4f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e2369b0f-05ee-4443-8430-0843f4e43a38",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ff167b0c-c92f-4320-8418-6404f4410ac1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e06cd903-03eb-4a5e-af92-31baf962290f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dc820865-b525-4eb3-a6dd-db07ce3adb8e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f9751cd2-367d-4d39-826d-029c8900e294",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e6bb145b-707c-4d64-852c-cc5ec51392bf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ddd67fc4-7236-4e46-a718-3795d4cf17e3",
      "documentation": "<p>Updates the specified attribute for a load balancer. You can only update one attribute at a time.</p> <p>The <code>update load balancer attribute</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>load balancer name</code>. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.UpdateLoadBalancerAttribute",
      "responses": [
        {
          "uuid": "77dda98c-e0e4-4dcd-bfe6-15aff872f3fc",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'random.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0ef47432-4661-46bd-995b-8fa4e1687338",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3ec6762c-99e6-4ff9-96c7-91e9a0e370c3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "898d2862-7b65-4651-a563-45308ce39df7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "92b52247-ba13-40c4-8319-0fffa78cc7b8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "deccc11b-9f2c-40cd-9f54-8bed68474793",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3a346ab2-3f3b-4766-a19d-03daa98c51ce",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4e1f4dc5-a185-420e-865a-a556ab07bbbb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cadf9dba-cea4-41e5-a2f4-24865dee2010",
      "documentation": "<p>Allows the update of one or more attributes of a database in Amazon Lightsail.</p> <p>Updates are applied immediately, or in cases where the updates could result in an outage, are applied during the database's predefined maintenance window.</p> <p>The <code>update relational database</code> operation supports tag-based access control via resource tags applied to the resource identified by relationalDatabaseName. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.UpdateRelationalDatabase",
      "responses": [
        {
          "uuid": "1c321ab1-9645-41d6-a902-4beba04e302b",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'random.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "236717af-a870-4a56-b1f2-b4531be180e5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dea9dd4d-4fda-4d13-8c3c-2bc8ca4265a6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "be5d78d4-cc25-42db-8663-72100f771a44",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "30154e8c-ac39-4636-88f3-487af130ff6b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4bca8d0b-cbfc-4551-b478-e824b772887b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "08eaa541-67e7-4b08-a529-26891f42e33e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "707fa7a9-43d1-42df-8f03-ae3f745b6bf8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "88d21dbb-7d96-4406-8342-d9546d8589c6",
      "documentation": "<p>Allows the update of one or more parameters of a database in Amazon Lightsail.</p> <p>Parameter updates don't cause outages; therefore, their application is not subject to the preferred maintenance window. However, there are two ways in which parameter updates are applied: <code>dynamic</code> or <code>pending-reboot</code>. Parameters marked with a <code>dynamic</code> apply type are applied immediately. Parameters marked with a <code>pending-reboot</code> apply type are applied only after the database is rebooted using the <code>reboot relational database</code> operation.</p> <p>The <code>update relational database parameters</code> operation supports tag-based access control via resource tags applied to the resource identified by relationalDatabaseName. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Lightsail_20161128.UpdateRelationalDatabaseParameters",
      "responses": [
        {
          "uuid": "24f82217-ddd8-4bab-a011-f2e17b9a413c",
          "body": "{\n  \"operations\": [\n    {\n      \"id\": \"\",\n      \"resourceName\": \"\",\n      \"resourceType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"location\": {\n        \"availabilityZone\": \"\",\n        \"regionName\": \"\"\n      },\n      \"isTerminal\": {{faker 'random.boolean'}},\n      \"operationDetails\": \"\",\n      \"operationType\": \"\",\n      \"status\": \"\",\n      \"statusChangedAt\": \"{{faker 'date.recent' 365}}\",\n      \"errorCode\": \"\",\n      \"errorDetails\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2114bf12-0a78-41d2-a2ec-fd5d09411297",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f7cac6aa-ea06-43cd-9a25-9f1936f64c01",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "98c23489-9f8b-4e45-986f-35cd26819845",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "335adf32-33c3-4b6d-9411-c60a3464353b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "06ed90f4-7cc1-42c3-b1ba-c04275f17ae9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f1c204a7-125b-4f39-bae3-13d8cb1a284d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccountSetupInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "56c217a7-6261-4281-a126-bf164982ef1c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnauthenticatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}