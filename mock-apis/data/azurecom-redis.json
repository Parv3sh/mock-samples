{
  "uuid": "b4c03e66-1418-49c1-b4f3-15271e85fa3a",
  "lastMigration": 19,
  "name": "RedisManagementClient",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "81e5224d-5953-4643-bd3e-27efff1933be",
      "documentation": "Lists all of the available REST API operations of the Microsoft.Cache provider.",
      "method": "get",
      "endpoint": "providers/Microsoft.Cache/operations",
      "responses": [
        {
          "uuid": "ba5115ad-7883-4d15-9f63-1e0a2d05df40",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"display\": {\n        \"description\": \"\",\n        \"operation\": \"\",\n        \"provider\": \"\",\n        \"resource\": \"\"\n      },\n      \"name\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success. The response describes the list of operations.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c4e7f3ac-8985-4216-be7e-f82cf282e3a6",
      "documentation": "Checks that the redis cache name is valid and is not already in use.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/providers/Microsoft.Cache/CheckNameAvailability",
      "responses": [
        {
          "uuid": "1fbb8e85-5b46-4751-aa0d-ab25f981f29d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Name is available",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "56fad34d-aa9a-4740-8727-67df9abe5413",
      "documentation": "Gets all Redis caches in the specified subscription.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/providers/Microsoft.Cache/Redis",
      "responses": [
        {
          "uuid": "6e78c61f-3672-448a-92ed-c7783782766e",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"location\": \"\",\n      \"tags\": {}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e3c17c3e-bef3-48b8-a16c-a0d48f0a8231",
      "documentation": "Lists all Redis caches in a resource group.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis",
      "responses": [
        {
          "uuid": "40c9fc39-c410-4eb3-b68c-a5101d234725",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"location\": \"\",\n      \"tags\": {}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d44dca93-d754-4db5-93b3-4d75fdfde408",
      "documentation": "Gets all firewall rules in the specified redis cache.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis/:cacheName/firewallRules",
      "responses": [
        {
          "uuid": "0db93c7c-88e2-4d96-8455-553bbd438cd2",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully got the current rules",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "54832b3d-111b-4d64-8976-5b23cb01b043",
      "documentation": "Deletes a single firewall rule in a specified redis cache.",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis/:cacheName/firewallRules/:ruleName",
      "responses": [
        {
          "uuid": "77627570-b2ca-4f70-8b7a-5992dcd0af9d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully deleted the rule",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "88b6b1f3-77db-498a-b281-a63e5f537bc7",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Successfully deleted the rule",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1a11d0e8-7fe2-4c7e-b264-4032c068d3ad",
      "documentation": "Gets a single firewall rule in a specified redis cache.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis/:cacheName/firewallRules/:ruleName",
      "responses": [
        {
          "uuid": "76916720-7f74-4552-940c-0bac7f34190b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully found the rule",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f77d23e7-7ee4-4329-91a4-8f72f101fff5",
      "documentation": "Create or update a redis cache firewall rule",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis/:cacheName/firewallRules/:ruleName",
      "responses": [
        {
          "uuid": "dff783ee-fe9e-4a9e-bd60-0901c900457f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Resource was successfully updated",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6e0728b2-ee98-4990-b6ca-df8e3cda40ac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 201,
          "label": "Resource was successfully created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e333f181-7e27-4cb5-bd0d-19f65d5fe9d5",
      "documentation": "Gets all patch schedules in the specified redis cache (there is only one).",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis/:cacheName/patchSchedules",
      "responses": [
        {
          "uuid": "d7c93a23-fbf3-465c-a2f1-d104b51701a1",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully got the current patch schedules",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ea088def-b959-48a3-b01e-2fcfe7202418",
      "documentation": "Deletes a Redis cache.",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis/:name",
      "responses": [
        {
          "uuid": "475922d0-f29d-4447-ad27-97ba1a29aefe",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The redis cache was successfully deleted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "89bc6911-78b0-40d5-8db2-b7c5b9cda713",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The redis cache 'delete' operation was successfully enqueued; follow the Location header to poll for final outcome.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2aa18b8f-44ab-4163-bc90-7e6be0664f85",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "The redis cache was successfully deleted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a06a3d19-e93e-44d8-ab03-e0b0e282e3db",
      "documentation": "Gets a Redis cache (resource description).",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis/:name",
      "responses": [
        {
          "uuid": "5c8b41e7-041b-4d13-977c-d3af8dc25765",
          "body": "{\n  \"location\": \"\",\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The redis cache was successfully found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "33c665fe-7243-4cb8-b20c-2ac8279bdee4",
      "documentation": "Update an existing Redis cache.",
      "method": "patch",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis/:name",
      "responses": [
        {
          "uuid": "96544eff-f92f-4a47-9659-d2a4c6450a3c",
          "body": "{\n  \"location\": \"\",\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The existing redis cache was successfully updated. Check provisioningState to see detailed status.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "25d556da-097c-4e9a-a810-066c6a7f026e",
      "documentation": "Create or replace (overwrite/recreate, with potential downtime) an existing Redis cache.",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis/:name",
      "responses": [
        {
          "uuid": "595d4e26-d6e4-40d4-9b39-b8db87fa87cf",
          "body": "{\n  \"location\": \"\",\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The existing redis cache was successfully updated. Check provisioningState to see detailed status.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1beb4918-a414-4244-8c70-9fcca11656fa",
          "body": "{\n  \"location\": \"\",\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The new redis cache was successfully created. Check provisioningState to see detailed status.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ff0cbf0f-19fc-41a3-81b1-be60cf2d6b47",
      "documentation": "Export data from the redis cache to blobs in a container.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis/:name/export",
      "responses": [
        {
          "uuid": "2a6daaa0-665e-4a32-bfa1-89eb24ec62ac",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Export operation succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7aa798b4-2935-4d03-bb32-39fed8dfd50a",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Export operation successfully enqueued; follow the Location header to poll for final outcome.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6752ea9d-c7f4-4568-bcab-92af9101bd69",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Export operation succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "45a12c98-fb88-453e-91a7-c802736548ed",
      "documentation": "Reboot specified Redis node(s). This operation requires write permission to the cache resource. There can be potential data loss.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis/:name/forceReboot",
      "responses": [
        {
          "uuid": "9ba0716e-b890-4d82-9545-4cebcbe9b928",
          "body": "{\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Reboot operation successfully enqueued",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "58b6cff1-3c81-48ed-8b43-2b6fc7e9bef6",
      "documentation": "Import data into Redis cache.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis/:name/import",
      "responses": [
        {
          "uuid": "3af03da1-d4ad-4bf4-985e-74fd18fd5aeb",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Import operation succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2d7f07d9-5062-4ad4-b26f-2aaf3c313b32",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Import operation successfully enqueued; follow the Location header to poll for final outcome.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "309f906a-69cb-4834-a2f5-e071e26c00c3",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Import operation succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cb4bda1d-a642-4573-bddb-2f0240c31b0b",
      "documentation": "Gets the list of linked servers associated with this redis cache (requires Premium SKU).",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis/:name/linkedServers",
      "responses": [
        {
          "uuid": "2d6ff2db-54e6-47e4-a741-f090e0853665",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Response of get linked servers.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "491cc23b-3edb-414a-9d20-2fb89366fe5b",
      "documentation": "Deletes the linked server from a redis cache (requires Premium SKU).",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis/:name/linkedServers/:linkedServerName",
      "responses": [
        {
          "uuid": "81bd28d4-7cba-495d-ba8e-9d49758944f8",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Linked server was successfully deleted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f033c112-4d10-4e48-8308-81b9564f7674",
      "documentation": "Gets the detailed information about a linked server of a redis cache (requires Premium SKU).",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis/:name/linkedServers/:linkedServerName",
      "responses": [
        {
          "uuid": "632d3d67-e982-452c-aa3c-a500c8b20418",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Response of get linked server.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1434dba1-f6b6-4e8f-84b2-2bd320ff8cf2",
      "documentation": "Adds a linked server to the Redis cache (requires Premium SKU).",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis/:name/linkedServers/:linkedServerName",
      "responses": [
        {
          "uuid": "e4254206-b33e-4fd9-84eb-5c29748b371e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "The linked server was successfully added.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dce1aa5f-a99f-4065-897d-3f07c42b7a14",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 201,
          "label": "The linked server was successfully added.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "deb3887e-2388-4986-97d3-5088bbb3510d",
      "documentation": "Retrieve a Redis cache's access keys. This operation requires write permission to the cache resource.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis/:name/listKeys",
      "responses": [
        {
          "uuid": "bb149f78-8702-475e-99ad-ca14f3cf4273",
          "body": "{\n  \"primaryKey\": \"\",\n  \"secondaryKey\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Lists the keys for the specified Redis cache.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a5c00ba4-211c-40e1-8bde-a188542bdac4",
      "documentation": "Gets any upgrade notifications for a Redis cache.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis/:name/listUpgradeNotifications",
      "responses": [
        {
          "uuid": "bc8ef9ed-30ea-4cca-8dcc-762cc575dfba",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"name\": \"\",\n      \"timestamp\": \"{{faker 'date.recent' 365}}\",\n      \"upsellNotification\": {}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "All upgrade notifications in given time range",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cd883397-b3bb-4e5d-bdfd-31f445dc0db9",
      "documentation": "Deletes the patching schedule of a redis cache (requires Premium SKU).",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis/:name/patchSchedules/:default",
      "responses": [
        {
          "uuid": "691f06be-d15b-4940-bb55-9df7559162ce",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "44e32464-5c8c-4bb5-8a0f-31fa741f0916",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "08aaead5-4263-4cbb-ae03-2b3297037c07",
      "documentation": "Gets the patching schedule of a redis cache (requires Premium SKU).",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis/:name/patchSchedules/:default",
      "responses": [
        {
          "uuid": "f89acfd8-9434-4552-8107-bb62a68eeac6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Response of get patch schedules.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dcee75e7-31a1-47da-a587-1a728a3599e3",
      "documentation": "Create or replace the patching schedule for Redis cache (requires Premium SKU).",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis/:name/patchSchedules/:default",
      "responses": [
        {
          "uuid": "00f102e4-8814-4f66-bc9f-88e7d8dda56a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "The patch schedule was successfully updated.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7f25926f-fe03-4b5f-9d08-bad259e3f523",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 201,
          "label": "The patch schedule was successfully created.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "76ca294a-d8be-439e-b959-3a8b6afa1bea",
      "documentation": "Regenerate Redis cache's access keys. This operation requires write permission to the cache resource.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis/:name/regenerateKey",
      "responses": [
        {
          "uuid": "c3091309-7015-4b5f-b2a8-d370e78c4b62",
          "body": "{\n  \"primaryKey\": \"\",\n  \"secondaryKey\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Lists the regenerated keys for Redis Cache",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}