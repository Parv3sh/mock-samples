{
  "uuid": "9fa34d2c-5140-4ada-8ea7-5a19a022d5c7",
  "lastMigration": 19,
  "name": "RedisManagementClient",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "4755f8e7-e726-4c29-bb1e-2f5c267732ab",
      "documentation": "Lists all of the available REST API operations of the Microsoft.Cache provider.",
      "method": "get",
      "endpoint": "providers/Microsoft.Cache/operations",
      "responses": [
        {
          "uuid": "973dd92a-9097-4058-ae9e-78e2e53e1b67",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"display\": {\n        \"description\": \"\",\n        \"operation\": \"\",\n        \"provider\": \"\",\n        \"resource\": \"\"\n      },\n      \"name\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success. The response describes the list of operations.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3f1dedfe-b098-4c72-9c7c-d661d853a488",
      "documentation": "Checks that the redis cache name is valid and is not already in use.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/providers/Microsoft.Cache/CheckNameAvailability",
      "responses": [
        {
          "uuid": "f6145adf-bed7-42c1-8355-421eee283a9b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Name is available",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8c462b5d-7907-41e1-8ec1-82fd928517d3",
      "documentation": "Gets all Redis caches in the specified subscription.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/providers/Microsoft.Cache/Redis",
      "responses": [
        {
          "uuid": "d672fb33-bfcb-4267-8eae-b1382970d0fb",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"location\": \"\",\n      \"tags\": {}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "00c4de9e-48c3-444f-9f7c-41f8750be7ab",
      "documentation": "Lists all Redis caches in a resource group.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis",
      "responses": [
        {
          "uuid": "2260af50-8536-4b4a-9ae9-e9f58379b21b",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"location\": \"\",\n      \"tags\": {}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f276cd72-88c8-4a2f-9524-d816c1105389",
      "documentation": "Gets all firewall rules in the specified redis cache.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis/:cacheName/firewallRules",
      "responses": [
        {
          "uuid": "a667e0d2-3a40-4d19-b13f-7f9b8986ee93",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully got the current rules",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1f5c1c33-7dc8-42b3-8ae1-d3c515238be5",
      "documentation": "Deletes a single firewall rule in a specified redis cache.",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis/:cacheName/firewallRules/:ruleName",
      "responses": [
        {
          "uuid": "5f3277e5-188e-4303-8c5f-9f322a46a9c2",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully deleted the rule",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "217ba668-c44b-4e34-a2e7-16812755c153",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Successfully deleted the rule",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1c417080-650b-4639-ab16-768005de9adc",
      "documentation": "Gets a single firewall rule in a specified redis cache.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis/:cacheName/firewallRules/:ruleName",
      "responses": [
        {
          "uuid": "c3f31efa-25fe-46a4-a8d6-8b22f7fe86ba",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully found the rule",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9ded47b2-a42a-4192-a3c7-e7b399c1d485",
      "documentation": "Create or update a redis cache firewall rule",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis/:cacheName/firewallRules/:ruleName",
      "responses": [
        {
          "uuid": "cd9cd979-f1d3-49c3-97cf-09ac9b18c9c9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Resource was successfully updated",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1dea7776-07d7-4f4e-b1a2-523086b51cec",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 201,
          "label": "Resource was successfully created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "25173a6f-a5b8-43ee-a8f3-5a24220f915a",
      "documentation": "Gets all patch schedules in the specified redis cache (there is only one).",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis/:cacheName/patchSchedules",
      "responses": [
        {
          "uuid": "a274f44e-db31-4f3d-8eb8-3e8830c1273d",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully got the current patch schedules",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3f2e6266-e194-420f-be1a-7c83bdbe10a2",
      "documentation": "Deletes a Redis cache.",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis/:name",
      "responses": [
        {
          "uuid": "17822c2e-2bc9-42b6-b420-be5ba02aab67",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The redis cache was successfully deleted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "290838c1-5e8b-4bc0-baff-e3f293ce3cdb",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The redis cache 'delete' operation was successfully enqueued; follow the Location header to poll for final outcome.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9b905d10-eef2-4b56-9b72-d5fc1b4fcd4f",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "The redis cache was successfully deleted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8054122b-9d04-45a1-82ce-bb01788ad822",
      "documentation": "Gets a Redis cache (resource description).",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis/:name",
      "responses": [
        {
          "uuid": "a350ef72-120e-43b4-a6fe-83bc1b062011",
          "body": "{\n  \"location\": \"\",\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The redis cache was successfully found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "56b92f0f-9ee5-4eff-b99c-82669be61632",
      "documentation": "Update an existing Redis cache.",
      "method": "patch",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis/:name",
      "responses": [
        {
          "uuid": "f98d937b-a5b2-4d7e-a172-2416fa2a5003",
          "body": "{\n  \"location\": \"\",\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The existing redis cache was successfully updated. Check provisioningState to see detailed status.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8a775e6a-3cbc-4bdc-81aa-2b828151fd93",
      "documentation": "Create or replace (overwrite/recreate, with potential downtime) an existing Redis cache.",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis/:name",
      "responses": [
        {
          "uuid": "625ddcf2-d953-4685-a45d-cd7805aeca06",
          "body": "{\n  \"location\": \"\",\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The existing redis cache was successfully updated. Check provisioningState to see detailed status.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "09335423-ee95-4e24-a28e-6f75762953a1",
          "body": "{\n  \"location\": \"\",\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The new redis cache was successfully created. Check provisioningState to see detailed status.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d00eb805-35bb-4235-9143-a3cf2bd7fdd1",
      "documentation": "Export data from the redis cache to blobs in a container.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis/:name/export",
      "responses": [
        {
          "uuid": "7b6b3e68-bd56-488e-91ab-b716bead7d22",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Export operation succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9e849702-4a04-4042-95a9-8a0c2619b4fa",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Export operation successfully enqueued; follow the Location header to poll for final outcome.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8544f7b3-5abf-4d7b-a0e7-3396552b501f",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Export operation succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1f6fef31-241b-4b32-88a7-207e939268e0",
      "documentation": "Reboot specified Redis node(s). This operation requires write permission to the cache resource. There can be potential data loss.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis/:name/forceReboot",
      "responses": [
        {
          "uuid": "ac1ca9e6-4268-4e06-a71f-0c425ab16134",
          "body": "{\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Reboot operation successfully enqueued",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3403cf30-c37f-468a-804b-24a41d4ddfff",
      "documentation": "Import data into Redis cache.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis/:name/import",
      "responses": [
        {
          "uuid": "a721e2ff-965f-4625-947c-e787c68e27f2",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Import operation succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7f7cc5bb-80ed-4e5d-8a50-689c21225b8d",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Import operation successfully enqueued; follow the Location header to poll for final outcome.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0f5b0d42-6f4a-4f51-a7ef-621e1b5466d2",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Import operation succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e05fa68b-4a22-4870-bdb7-2966ad0ef186",
      "documentation": "Gets the list of linked servers associated with this redis cache (requires Premium SKU).",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis/:name/linkedServers",
      "responses": [
        {
          "uuid": "7adb847f-8cde-4e7b-a299-3f660ebeb246",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Response of get linked servers.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6c572d5e-7237-45e7-825b-2f59a07f6aef",
      "documentation": "Deletes the linked server from a redis cache (requires Premium SKU).",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis/:name/linkedServers/:linkedServerName",
      "responses": [
        {
          "uuid": "7a7815ce-8f4f-4d7d-b8d1-0c118ba61f68",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Linked server was successfully deleted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "31b19e8c-1ee2-457e-a5d6-ac0da067c068",
      "documentation": "Gets the detailed information about a linked server of a redis cache (requires Premium SKU).",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis/:name/linkedServers/:linkedServerName",
      "responses": [
        {
          "uuid": "62844e12-012f-42ef-a3f3-b271918ddfae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Response of get linked server.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5dbd7903-622a-4472-90f9-277450ff1355",
      "documentation": "Adds a linked server to the Redis cache (requires Premium SKU).",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis/:name/linkedServers/:linkedServerName",
      "responses": [
        {
          "uuid": "96f153a1-0cd8-4b68-8483-7ce5fc87dfb6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "The linked server was successfully added.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "110ac0bd-13ca-42f5-b2b3-1208dbc72a43",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 201,
          "label": "The linked server was successfully added.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1a77ac66-09cd-4330-baeb-8e08355cc4b8",
      "documentation": "Retrieve a Redis cache's access keys. This operation requires write permission to the cache resource.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis/:name/listKeys",
      "responses": [
        {
          "uuid": "463bdfb1-1796-46eb-8c8b-ff59f34bc782",
          "body": "{\n  \"primaryKey\": \"\",\n  \"secondaryKey\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Lists the keys for the specified Redis cache.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9ddbf449-f3d4-413c-99dd-c5581066e0fb",
      "documentation": "Gets any upgrade notifications for a Redis cache.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis/:name/listUpgradeNotifications",
      "responses": [
        {
          "uuid": "cfaa4aca-d701-4caa-93ff-b8e301be2ed4",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"name\": \"\",\n      \"timestamp\": \"{{faker 'date.recent' 365}}\",\n      \"upsellNotification\": {}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "All upgrade notifications in given time range",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c0646bef-d54a-43ff-8a30-9d06710f56a8",
      "documentation": "Deletes the patching schedule of a redis cache (requires Premium SKU).",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis/:name/patchSchedules/:default",
      "responses": [
        {
          "uuid": "ebd2caf1-a96f-4f1f-a39f-8d1ffb697e44",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9f6a444a-e6c2-4289-803a-c2205a3af454",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a48f27ed-d398-4252-a1a8-859f3ae94ba5",
      "documentation": "Gets the patching schedule of a redis cache (requires Premium SKU).",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis/:name/patchSchedules/:default",
      "responses": [
        {
          "uuid": "e324c47f-d608-451e-9583-e3d019ca80cf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Response of get patch schedules.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2d436817-d749-4cc3-8f6e-f795c83041c8",
      "documentation": "Create or replace the patching schedule for Redis cache (requires Premium SKU).",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis/:name/patchSchedules/:default",
      "responses": [
        {
          "uuid": "a62f61c6-c226-44bb-b2b1-6efbdd938916",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "The patch schedule was successfully updated.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4ee9d9c1-704f-4a8b-8838-939f3a088566",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 201,
          "label": "The patch schedule was successfully created.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "62a4a2bc-3cf3-463a-8a18-4de377ba1afa",
      "documentation": "Regenerate Redis cache's access keys. This operation requires write permission to the cache resource.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Cache/Redis/:name/regenerateKey",
      "responses": [
        {
          "uuid": "e64a9d59-8664-4309-a7a5-20aac30d21e6",
          "body": "{\n  \"primaryKey\": \"\",\n  \"secondaryKey\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Lists the regenerated keys for Redis Cache",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}