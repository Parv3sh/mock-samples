{
  "uuid": "b9016447-ce9a-49d6-9730-085900c1231c",
  "lastMigration": 19,
  "name": "ShipEngine API",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "fb75bde9-2210-4540-ace5-b826f9416899",
      "documentation": "Parse an address",
      "method": "put",
      "endpoint": "v1/addresses/recognize",
      "responses": [
        {
          "uuid": "0250a72d-3a0d-4e14-b40f-c25a17bf5ecc",
          "body": "{\n  \"address\": {\n    \"address_line1\": \"1999 Bishop Grandin Blvd.\",\n    \"address_line2\": \"Unit 408\",\n    \"address_line3\": \"Building #7\",\n    \"address_residential_indicator\": \"no\",\n    \"city_locality\": \"Winnipeg\",\n    \"company_name\": \"The Home Depot\",\n    \"country_code\": \"\",\n    \"name\": \"John Doe\",\n    \"phone\": \"+1 204-253-9411 ext. 123\",\n    \"postal_code\": \"\",\n    \"state_province\": \"Manitoba\"\n  },\n  \"entities\": [\n    {\n      \"end_index\": {{faker 'random.number'}},\n      \"result\": {},\n      \"score\": {{faker 'random.float'}},\n      \"start_index\": {{faker 'random.number'}},\n      \"text\": \"\",\n      \"type\": \"\"\n    }\n  ],\n  \"score\": {{faker 'random.float'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns the parsed address, as well as a confidence score and a list of all the entities that were recognized in the text.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c01770a3-c476-44a3-b4c4-2a8ccc46ff74",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "99bd7798-ff50-453e-bb38-29f72179c2f5",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "49eea4d5-fa26-40ce-a46e-13efd09f7eaa",
      "documentation": "Validate An Address",
      "method": "post",
      "endpoint": "v1/addresses/validate",
      "responses": [
        {
          "uuid": "c8865cc2-93ba-4aa1-a6bc-cc3d4f464c73",
          "body": "[\n  {\n    \"matched_address\": {},\n    \"messages\": [],\n    \"original_address\": {},\n    \"status\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d1fe3edc-1e1c-45b2-acc0-1c456e1478c2",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d13dd2ee-b765-4a48-8325-bf7bc2507953",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "08801334-8260-4bf5-b28a-9d20d89188b1",
      "documentation": "List Batches",
      "method": "get",
      "endpoint": "v1/batches",
      "responses": [
        {
          "uuid": "9e94a6bf-9f70-49b3-a35f-322ebc161c97",
          "body": "{\n  \"batches\": [\n    {\n      \"batch_errors_url\": {\n        \"href\": \"\",\n        \"type\": \"\"\n      },\n      \"batch_id\": \"\",\n      \"batch_labels_url\": {\n        \"href\": \"\",\n        \"type\": \"\"\n      },\n      \"batch_notes\": \"Batch for morning shipment\",\n      \"batch_shipments_url\": {\n        \"href\": \"\",\n        \"type\": \"\"\n      },\n      \"completed\": 1,\n      \"count\": 2,\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"errors\": 2,\n      \"external_batch_id\": \"\",\n      \"form_download\": {\n        \"href\": \"\",\n        \"type\": \"\"\n      },\n      \"forms\": 3,\n      \"label_download\": {\n        \"href\": \"\",\n        \"pdf\": \"\",\n        \"png\": \"\",\n        \"zpl\": \"\"\n      },\n      \"label_format\": \"pdf\",\n      \"label_layout\": \"4x6\",\n      \"processed_at\": \"{{faker 'date.recent' 365}}\",\n      \"status\": \"\",\n      \"warnings\": 1\n    }\n  ],\n  \"links\": {\n    \"first\": {},\n    \"last\": {},\n    \"next\": {\n      \"href\": \"\",\n      \"type\": \"\"\n    },\n    \"prev\": {\n      \"href\": \"\",\n      \"type\": \"\"\n    }\n  },\n  \"page\": 1,\n  \"pages\": 10,\n  \"total\": 10\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d2f59dbf-89b2-4c99-ae2e-80c866386a5e",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bcc6a730-027c-4364-ab4b-69be05b8176e",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d7e6cbbc-59d6-465d-8d77-db50f76d2aa4",
      "documentation": "Create A Batch",
      "method": "post",
      "endpoint": "v1/batches",
      "responses": [
        {
          "uuid": "556e0324-5d60-45a8-9ced-d752ea1839e2",
          "body": "{\n  \"batch_errors_url\": {\n    \"href\": \"\",\n    \"type\": \"\"\n  },\n  \"batch_id\": \"\",\n  \"batch_labels_url\": {\n    \"href\": \"\",\n    \"type\": \"\"\n  },\n  \"batch_notes\": \"Batch for morning shipment\",\n  \"batch_shipments_url\": {\n    \"href\": \"\",\n    \"type\": \"\"\n  },\n  \"completed\": 1,\n  \"count\": 2,\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"errors\": 2,\n  \"external_batch_id\": \"\",\n  \"form_download\": {\n    \"href\": \"\",\n    \"type\": \"\"\n  },\n  \"forms\": 3,\n  \"label_download\": {\n    \"href\": \"\",\n    \"pdf\": \"\",\n    \"png\": \"\",\n    \"zpl\": \"\"\n  },\n  \"label_format\": \"pdf\",\n  \"label_layout\": \"4x6\",\n  \"processed_at\": \"{{faker 'date.recent' 365}}\",\n  \"status\": \"\",\n  \"warnings\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The requested object creation was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7951c526-3a8a-47c5-8251-3f57623299fc",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ab21d6c7-fd4f-469c-9255-b885630429e8",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "403e4686-fe26-48b6-b480-ffa88814e0c6",
      "documentation": "Get Batch By External ID",
      "method": "get",
      "endpoint": "v1/batches/external_batch_id/:external_batch_id",
      "responses": [
        {
          "uuid": "da7da415-9394-4453-9f9a-a3e9bd90f316",
          "body": "{\n  \"batch_errors_url\": {\n    \"href\": \"\",\n    \"type\": \"\"\n  },\n  \"batch_id\": \"\",\n  \"batch_labels_url\": {\n    \"href\": \"\",\n    \"type\": \"\"\n  },\n  \"batch_notes\": \"Batch for morning shipment\",\n  \"batch_shipments_url\": {\n    \"href\": \"\",\n    \"type\": \"\"\n  },\n  \"completed\": 1,\n  \"count\": 2,\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"errors\": 2,\n  \"external_batch_id\": \"\",\n  \"form_download\": {\n    \"href\": \"\",\n    \"type\": \"\"\n  },\n  \"forms\": 3,\n  \"label_download\": {\n    \"href\": \"\",\n    \"pdf\": \"\",\n    \"png\": \"\",\n    \"zpl\": \"\"\n  },\n  \"label_format\": \"pdf\",\n  \"label_layout\": \"4x6\",\n  \"processed_at\": \"{{faker 'date.recent' 365}}\",\n  \"status\": \"\",\n  \"warnings\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1bdee1fc-35f9-4be5-9b9a-32a1b2ad9137",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4b48b8de-9f06-4080-849a-ffce6f197a28",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "de20a88d-f3df-48ae-a5f5-0e6c8065d349",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6a626afe-675f-4952-8d9a-1f6926f99f63",
      "documentation": "Delete Batch By Id",
      "method": "delete",
      "endpoint": "v1/batches/:batch_id",
      "responses": [
        {
          "uuid": "32fe3ae1-cf35-4b62-be84-64582adf28ff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "The request was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f2663f4a-08da-403b-a36c-52c3814761b5",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c8be924e-6667-427a-91fc-5638546555c1",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d03088d8-e1f3-45ed-b1fd-53fb9864607d",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "61119f79-b0ef-4a73-ab6d-f826cfb42b04",
      "documentation": "Get Batch By ID",
      "method": "get",
      "endpoint": "v1/batches/:batch_id",
      "responses": [
        {
          "uuid": "af0386df-437a-4e3b-8d02-da983796ddf6",
          "body": "{\n  \"batch_errors_url\": {\n    \"href\": \"\",\n    \"type\": \"\"\n  },\n  \"batch_id\": \"\",\n  \"batch_labels_url\": {\n    \"href\": \"\",\n    \"type\": \"\"\n  },\n  \"batch_notes\": \"Batch for morning shipment\",\n  \"batch_shipments_url\": {\n    \"href\": \"\",\n    \"type\": \"\"\n  },\n  \"completed\": 1,\n  \"count\": 2,\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"errors\": 2,\n  \"external_batch_id\": \"\",\n  \"form_download\": {\n    \"href\": \"\",\n    \"type\": \"\"\n  },\n  \"forms\": 3,\n  \"label_download\": {\n    \"href\": \"\",\n    \"pdf\": \"\",\n    \"png\": \"\",\n    \"zpl\": \"\"\n  },\n  \"label_format\": \"pdf\",\n  \"label_layout\": \"4x6\",\n  \"processed_at\": \"{{faker 'date.recent' 365}}\",\n  \"status\": \"\",\n  \"warnings\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d85a6cba-ab82-4099-96b3-5d993f787d1a",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5fa96995-dac5-4eb8-9013-ae24d835b4c3",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0a62f294-26ba-4ee0-903f-34c22626f7a2",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "084b9967-7a80-45c7-ba27-b75c3733d069",
      "documentation": "Update Batch By Id",
      "method": "put",
      "endpoint": "v1/batches/:batch_id",
      "responses": [
        {
          "uuid": "1dd25067-9a61-4c6c-8186-c5c8ab4e3fdb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "The request was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2f343784-98d5-4ddc-9e9f-82ad4855bc9c",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c0b6e5bf-1682-4082-a8a3-4a84ec97a449",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2087fc97-af0a-4027-979e-ec6052561f24",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b4fa7333-78dd-48c8-b0a8-802915b88707",
      "documentation": "Add to a Batch",
      "method": "post",
      "endpoint": "v1/batches/:batch_id/add",
      "responses": [
        {
          "uuid": "f85a11c0-b821-427f-a649-ef0e857f44a8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "The request was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f864fe5a-5d02-42ba-89e8-39cd6c6af695",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "04c7864d-c6b0-409c-b6b4-a3b3fe90fe7b",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5dfb4ec7-c470-4d18-9a8a-0a9a295cc569",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c460f3cd-024b-4534-8a6a-82666f4acae4",
      "documentation": "Get Batch Errors",
      "method": "get",
      "endpoint": "v1/batches/:batch_id/errors",
      "responses": [
        {
          "uuid": "c58da67d-dadd-4870-9fc6-788c9976a23d",
          "body": "{\n  \"errors\": [],\n  \"links\": {\n    \"first\": {},\n    \"last\": {},\n    \"next\": {\n      \"href\": \"\",\n      \"type\": \"\"\n    },\n    \"prev\": {\n      \"href\": \"\",\n      \"type\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "89ffaa60-ab82-448b-9178-ed860924cff2",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "20d71f42-0be2-481b-a540-3619bf27c201",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5825d21c-9a93-4c92-8553-9753a38cda72",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b7837450-47c0-4dfc-ae94-233513614114",
      "documentation": "Process Batch ID Labels",
      "method": "post",
      "endpoint": "v1/batches/:batch_id/process/labels",
      "responses": [
        {
          "uuid": "b9be5333-fe65-4e05-95cf-fe480348641e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "The request was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "22e82123-6b59-4080-919a-9f7ba233e5e2",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3fd989e5-2ee4-4ee2-afe7-ea56163b81d1",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9ef9fdcf-4ee6-49a3-952b-8cc054c0ad1a",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "aa1c2217-4225-4531-b249-c46a8c73a739",
      "documentation": "Remove From Batch",
      "method": "post",
      "endpoint": "v1/batches/:batch_id/remove",
      "responses": [
        {
          "uuid": "549f4023-a3ee-4253-b0f5-a0f7c064806d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "The request was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c9562dc2-4f3e-4160-81f5-9807a27200c8",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f231cefb-5231-4542-b44f-da1989041c17",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "676b4049-2c5f-4577-a610-3ae29baecb8a",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c3428618-8430-4508-9f69-f095ab55485a",
      "documentation": "List Carriers",
      "method": "get",
      "endpoint": "v1/carriers",
      "responses": [
        {
          "uuid": "55e6238b-9f8d-43a5-8580-c290a2a143a5",
          "body": "{\n  \"carriers\": [\n    {\n      \"account_number\": \"account_570827\",\n      \"balance\": 3799.52,\n      \"carrier_code\": \"\",\n      \"carrier_id\": \"\",\n      \"friendly_name\": \"Stamps.com\",\n      \"has_multi_package_supporting_services\": {{faker 'random.boolean'}},\n      \"nickname\": \"ShipEngine Account - Stamps.com\",\n      \"options\": [\n        {\n          \"default_value\": \"\",\n          \"description\": \"\",\n          \"name\": \"contains_alcohol\"\n        }\n      ],\n      \"packages\": [\n        {\n          \"description\": \"Packaging for laptops\",\n          \"dimensions\": {\n            \"height\": {{faker 'random.float'}},\n            \"length\": {{faker 'random.float'}},\n            \"unit\": \"inch\",\n            \"width\": {{faker 'random.float'}}\n          },\n          \"name\": \"laptop_box\",\n          \"package_code\": \"\",\n          \"package_id\": \"\"\n        }\n      ],\n      \"primary\": {{faker 'random.boolean'}},\n      \"requires_funded_amount\": {{faker 'random.boolean'}},\n      \"services\": [\n        {\n          \"carrier_code\": \"\",\n          \"carrier_id\": \"\",\n          \"domestic\": {{faker 'random.boolean'}},\n          \"international\": {{faker 'random.boolean'}},\n          \"is_multi_package_supported\": {{faker 'random.boolean'}},\n          \"name\": \"USPS First Class Mail\",\n          \"service_code\": \"usps_media_mail\"\n        }\n      ],\n      \"supports_label_messages\": {{faker 'random.boolean'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fc229b7c-ad63-4242-98eb-4ab2924863c2",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fd885cc0-070f-4a3a-a86a-95c4f0908462",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4a68c6b4-72da-4cbc-8f55-e6097ebd2e3a",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b3724eb5-b0ac-4059-a37e-3ce8a511f520",
      "documentation": "Get Carrier By ID",
      "method": "get",
      "endpoint": "v1/carriers/:carrier_id",
      "responses": [
        {
          "uuid": "dc424076-1c9f-4544-a36b-f3627ae47554",
          "body": "{\n  \"account_number\": \"account_570827\",\n  \"balance\": 3799.52,\n  \"carrier_code\": \"\",\n  \"carrier_id\": \"\",\n  \"friendly_name\": \"Stamps.com\",\n  \"has_multi_package_supporting_services\": {{faker 'random.boolean'}},\n  \"nickname\": \"ShipEngine Account - Stamps.com\",\n  \"options\": [\n    {\n      \"default_value\": \"\",\n      \"description\": \"\",\n      \"name\": \"contains_alcohol\"\n    }\n  ],\n  \"packages\": [\n    {\n      \"description\": \"Packaging for laptops\",\n      \"dimensions\": {\n        \"height\": {{faker 'random.float'}},\n        \"length\": {{faker 'random.float'}},\n        \"unit\": \"inch\",\n        \"width\": {{faker 'random.float'}}\n      },\n      \"name\": \"laptop_box\",\n      \"package_code\": \"\",\n      \"package_id\": \"\"\n    }\n  ],\n  \"primary\": {{faker 'random.boolean'}},\n  \"requires_funded_amount\": {{faker 'random.boolean'}},\n  \"services\": [\n    {\n      \"carrier_code\": \"\",\n      \"carrier_id\": \"\",\n      \"domestic\": {{faker 'random.boolean'}},\n      \"international\": {{faker 'random.boolean'}},\n      \"is_multi_package_supported\": {{faker 'random.boolean'}},\n      \"name\": \"USPS First Class Mail\",\n      \"service_code\": \"usps_media_mail\"\n    }\n  ],\n  \"supports_label_messages\": {{faker 'random.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b2dc2bfd-2856-453f-a734-d7dcf9460cfb",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7d02cca8-fd8e-40d1-b1f1-a3a3c9827637",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7cb168c9-445e-42ed-ae5d-2c53e6bcdefd",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "69e04973-5121-4225-8843-33800587609c",
      "documentation": "Add Funds To Carrier",
      "method": "put",
      "endpoint": "v1/carriers/:carrier_id/add_funds",
      "responses": [
        {
          "uuid": "eaca9e46-d56f-46d0-b9b7-bc630c78a2a1",
          "body": "{\n  \"balance\": {\n    \"amount\": {{faker 'random.float'}},\n    \"currency\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3ca0a93c-5f0f-4073-ab77-d72b923aec10",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f6372e17-499f-42d2-90e3-59b3d73ca0aa",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d622c727-30db-4fa4-91ad-1c67ca01c552",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1dd0b5c2-f514-46f6-ba67-fc7d1c10f4b3",
      "documentation": "Get Carrier Options",
      "method": "get",
      "endpoint": "v1/carriers/:carrier_id/options",
      "responses": [
        {
          "uuid": "bde5f10a-f665-4905-af65-9ea8ee3fcbcd",
          "body": "{\n  \"options\": [\n    {\n      \"default_value\": \"\",\n      \"description\": \"\",\n      \"name\": \"contains_alcohol\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e97233b4-ee89-4666-83e6-d48910a5a89b",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6249b574-fb14-4d75-8d2b-56e68443c4f0",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "03baefb2-d3e0-4fa8-870a-5d9c5071071b",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b6a5cf93-5584-4c58-8089-79f25da38339",
      "documentation": "List Carrier Package Types",
      "method": "get",
      "endpoint": "v1/carriers/:carrier_id/packages",
      "responses": [
        {
          "uuid": "eca6f902-05ce-4d97-ba70-c3c44dd5ebbb",
          "body": "{\n  \"packages\": [\n    {\n      \"description\": \"Packaging for laptops\",\n      \"dimensions\": {\n        \"height\": {{faker 'random.float'}},\n        \"length\": {{faker 'random.float'}},\n        \"unit\": \"inch\",\n        \"width\": {{faker 'random.float'}}\n      },\n      \"name\": \"laptop_box\",\n      \"package_code\": \"\",\n      \"package_id\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1eef3726-c39c-441c-9d0c-5d5a70ea342c",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a3dfd9f0-711a-4f56-885a-1c404673a606",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5a9a8457-3b8a-4612-8a57-588fd00bc60a",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1aa1343d-20be-446e-b8cd-d37fa7489ca9",
      "documentation": "List Carrier Services",
      "method": "get",
      "endpoint": "v1/carriers/:carrier_id/services",
      "responses": [
        {
          "uuid": "6b2b7f16-20d7-43d5-939d-899bc3d02c72",
          "body": "{\n  \"services\": [\n    {\n      \"carrier_code\": \"\",\n      \"carrier_id\": \"\",\n      \"domestic\": {{faker 'random.boolean'}},\n      \"international\": {{faker 'random.boolean'}},\n      \"is_multi_package_supported\": {{faker 'random.boolean'}},\n      \"name\": \"USPS First Class Mail\",\n      \"service_code\": \"usps_media_mail\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1afbf145-2ec2-439b-adce-764a70ba7e87",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5d8ed33d-bc64-485a-a963-fc28c1b713ca",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5b7dd21b-ef79-46d5-8651-6f9fff1ce6ed",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "aa9a2479-23f0-4200-aa68-ec3ed625f50c",
      "documentation": "Connect a carrier account",
      "method": "post",
      "endpoint": "v1/connections/carriers/:carrier_name",
      "responses": [
        {
          "uuid": "2dc73efc-fc1a-44c1-b6a8-d5cbe2d23a11",
          "body": "{\n  \"carrier_id\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "232127e0-0a11-498a-b5aa-f6dddb1afa6d",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6d48cdb1-a1e8-48d2-9297-5ec38134e314",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "86f2b705-cab9-4b36-8dcc-c758565d2836",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "42e39757-de35-4206-befd-400646d7cf6e",
      "documentation": "Disconnect a carrier",
      "method": "delete",
      "endpoint": "v1/connections/carriers/:carrier_name/:carrier_id",
      "responses": [
        {
          "uuid": "6f8fafaf-7b65-4adf-ba3c-e2693dbec042",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "The request was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "864fe4e4-1d0d-41bc-a1bf-3de6d8d36c94",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2c5d03cf-77c2-4baa-84b9-2d3392265d45",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "47db3285-f0f1-4319-b352-7e55708e3027",
      "documentation": "Get carrier settings",
      "method": "get",
      "endpoint": "v1/connections/carriers/:carrier_name/:carrier_id/settings",
      "responses": [
        {
          "uuid": "af2fa825-cd6f-4ca3-867e-38be973dfc3f",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cdabacbd-31cf-4d0b-825b-9e9268040c98",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f329bdbb-b779-49fb-9776-3f982a30603a",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "51be42af-b3c3-4450-911a-af29b9172fde",
      "documentation": "Update carrier settings",
      "method": "put",
      "endpoint": "v1/connections/carriers/:carrier_name/:carrier_id/settings",
      "responses": [
        {
          "uuid": "3fe77a8a-f0bd-4506-9b1d-f14e25cb1b61",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "The request was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c9a3ecc3-36df-4977-b30e-18bf41898ccf",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "34875ee5-987a-407f-89c9-eb32665a7e65",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a451f453-0630-4cb6-ad9f-386e5117a1c2",
      "documentation": "Disconnect a Shipsurance Account",
      "method": "delete",
      "endpoint": "v1/connections/insurance/shipsurance",
      "responses": [
        {
          "uuid": "9faaa64c-3592-4c7f-93b9-65ede868a85c",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7d1215a0-a1e5-4a3d-8451-0ee7e6b711c3",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9e2baaa2-700d-4dab-aeb0-b7924a1e1dd0",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6b684005-8e51-4e31-98b6-939b341e090e",
      "documentation": "Connect a Shipsurance Account",
      "method": "post",
      "endpoint": "v1/connections/insurance/shipsurance",
      "responses": [
        {
          "uuid": "149ee44e-5900-41aa-abad-7f067357c0c2",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "06811bd2-4768-47ef-9336-fcc0a2841bed",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ee9dab12-8013-4dd4-9137-a61e1df479ba",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "31cc77c8-d832-468b-978b-edf8d19e14f6",
      "documentation": "Download File",
      "method": "get",
      "endpoint": "v1/downloads/:dir/:subdir/:filename",
      "responses": [
        {
          "uuid": "531e9658-c60a-4db9-8c67-71a95b6fd9b6",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/pdf"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3906cd9a-487a-40d9-bd68-ffa390b0e37e",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ae151a08-d932-4245-94f8-3fc78d90890b",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0be05729-51d2-42bb-9cc1-112734798020",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8a65b214-8267-4047-bdae-07a5440699da",
      "documentation": "List Webhooks",
      "method": "get",
      "endpoint": "v1/environment/webhooks",
      "responses": [
        {
          "uuid": "c0146ecb-b941-4161-9218-0c8a188a72bf",
          "body": "[\n  {\n    \"event\": \"\",\n    \"url\": \"https://[YOUR ENDPOINT ID].x.requestbin.com\",\n    \"webhook_id\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fa6dcf8e-0fcc-49b5-947a-91dcbd606a4f",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f9328d68-97a7-4ef4-a82a-78d8688a0585",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "94fff398-8b2b-4710-975a-e9031957ef31",
      "documentation": "Create a Webhook",
      "method": "post",
      "endpoint": "v1/environment/webhooks",
      "responses": [
        {
          "uuid": "51fdc76d-e09e-4bb8-886e-a3689a7b6890",
          "body": "{\n  \"event\": \"\",\n  \"url\": \"https://[YOUR ENDPOINT ID].x.requestbin.com\",\n  \"webhook_id\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4e76fe21-4131-44b5-8592-7cc16073b0f9",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8edcf869-0935-4a84-8d7e-397cb9089c28",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 409,
          "label": "The request conflicts with an existing resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cf480b2b-fe21-40aa-bd2e-215c97d821c2",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "295c751b-25ff-4ca9-936a-40dcff1f7c72",
      "documentation": "Delete Webhook By ID",
      "method": "delete",
      "endpoint": "v1/environment/webhooks/:webhook_id",
      "responses": [
        {
          "uuid": "4dbb44bb-eeea-4861-8136-0fc166c506aa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "The request was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a7f52db8-4f43-4f8d-948b-2082b9270d16",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "20fb2635-0657-4866-92fe-e22deaa6665e",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "533a2ec8-e699-4596-8a20-577398b88d6b",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3a3b8c21-638f-49fd-948e-39ed6c59607c",
      "documentation": "Get Webhook By ID",
      "method": "get",
      "endpoint": "v1/environment/webhooks/:webhook_id",
      "responses": [
        {
          "uuid": "d4312abd-491d-4e60-8eef-e8e44847f5ed",
          "body": "{\n  \"event\": \"\",\n  \"url\": \"https://[YOUR ENDPOINT ID].x.requestbin.com\",\n  \"webhook_id\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "baa4249b-29ed-4886-aca1-9ddc586a17b7",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4fb80b1f-22e0-4bf9-b6e3-659981b40500",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "99287c1b-1479-455b-848b-abb58fd7e94b",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ca697ae6-cb0b-478d-8e74-1be7306c8d46",
      "documentation": "Update a Webhook",
      "method": "put",
      "endpoint": "v1/environment/webhooks/:webhook_id",
      "responses": [
        {
          "uuid": "4adc1bfc-b0e8-4ed0-8faa-d712020114cf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "The request was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a8d2a741-515a-41fc-bbb8-59985ac95ca8",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "139ffe00-236e-4f20-83e9-b4ccf7e9bdac",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "990700f1-63f2-4ebf-b709-9e9cdba60369",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "89972d03-6073-4715-b162-c0cc6329bd33",
      "documentation": "Add Funds To Insurance",
      "method": "patch",
      "endpoint": "v1/insurance/shipsurance/add_funds",
      "responses": [
        {
          "uuid": "299f7572-eaf7-45c2-8e20-fbdd0e609c07",
          "body": "{\n  \"amount\": {{faker 'random.float'}},\n  \"currency\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "90318dd4-fcc8-4a53-bfcc-7df54b339124",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ae110623-a44f-4440-8316-653c8291ea30",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fc5a9a2c-0ff9-44c8-9b08-617bd19f6c10",
      "documentation": "Get Insurance Funds Balance",
      "method": "get",
      "endpoint": "v1/insurance/shipsurance/balance",
      "responses": [
        {
          "uuid": "06103944-74a5-4d5f-ac81-e6deabe1e040",
          "body": "{\n  \"amount\": {{faker 'random.float'}},\n  \"currency\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ed91cedd-5959-4794-bebf-f503f90d11a0",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d8e00bca-a8c9-4ed1-8cc2-6617c1f105ed",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c11c68af-584c-4ab4-8278-be2967d4e1c0",
      "documentation": "List labels",
      "method": "get",
      "endpoint": "v1/labels",
      "responses": [
        {
          "uuid": "62a413bd-9c1a-4e9e-9583-264b65e7204d",
          "body": "{\n  \"links\": {\n    \"first\": {},\n    \"last\": {},\n    \"next\": {\n      \"href\": \"\",\n      \"type\": \"\"\n    },\n    \"prev\": {\n      \"href\": \"\",\n      \"type\": \"\"\n    }\n  },\n  \"page\": 1,\n  \"pages\": 4,\n  \"total\": 2750\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The response includes a `labels` array containing a page of results (as determined by the `page_size` query parameter).  It also includes other useful information, such as the total number of labels that match the query criteria, the number of pages of results, and the URLs of the first, last, next, and previous pages of results.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a4d4d1e7-aaa1-4719-97f1-8e4ec51ab73c",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a29859fe-352a-400e-bbad-fd0779f94b56",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "eeedd432-ec58-41fd-9298-ac2e2afc44fd",
      "documentation": "Purchase Label",
      "method": "post",
      "endpoint": "v1/labels",
      "responses": [
        {
          "uuid": "890160ab-ddf2-4ba4-9fee-847dd5867afa",
          "body": "{\n  \"batch_id\": \"\",\n  \"carrier_code\": \"\",\n  \"carrier_id\": \"\",\n  \"charge_event\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"form_download\": {},\n  \"insurance_claim\": {},\n  \"insurance_cost\": {\n    \"amount\": {{faker 'random.float'}},\n    \"currency\": \"\"\n  },\n  \"is_international\": {{faker 'random.boolean'}},\n  \"is_return_label\": {{faker 'random.boolean'}},\n  \"label_download\": {\n    \"href\": \"\",\n    \"pdf\": \"\",\n    \"png\": \"\",\n    \"zpl\": \"\"\n  },\n  \"label_download_type\": \"url\",\n  \"label_format\": \"pdf\",\n  \"label_id\": \"\",\n  \"label_image_id\": \"\",\n  \"label_layout\": \"4x6\",\n  \"outbound_label_id\": \"\",\n  \"package_code\": \"\",\n  \"packages\": [\n    {\n      \"dimensions\": {\n        \"height\": {{faker 'random.float'}},\n        \"length\": {{faker 'random.float'}},\n        \"unit\": \"inch\",\n        \"width\": {{faker 'random.float'}}\n      },\n      \"external_package_id\": \"\",\n      \"insured_value\": [\n        {\n          \"amount\": 0,\n          \"currency\": \"usd\"\n        }\n      ],\n      \"label_messages\": {\n        \"reference1\": \"\",\n        \"reference2\": \"\",\n        \"reference3\": \"\"\n      },\n      \"package_code\": \"\",\n      \"tracking_number\": \"\",\n      \"weight\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'random.float'}}\n      }\n    }\n  ],\n  \"rma_number\": \"\",\n  \"service_code\": \"\",\n  \"ship_date\": \"{{faker 'date.recent' 365}}\",\n  \"shipment\": {},\n  \"shipment_cost\": {\n    \"amount\": {{faker 'random.float'}},\n    \"currency\": \"\"\n  },\n  \"shipment_id\": \"\",\n  \"status\": \"\",\n  \"test_label\": {{faker 'random.boolean'}},\n  \"trackable\": {{faker 'random.boolean'}},\n  \"tracking_number\": \"782758401696\",\n  \"tracking_status\": \"\",\n  \"validate_address\": \"validate_and_clean\",\n  \"voided\": {{faker 'random.boolean'}},\n  \"voided_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The requested object creation was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e7d4b0af-13e2-4ecd-96ef-146a2b32f541",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f432a85b-7d93-491d-b3d8-ec973226d963",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "86d3e6be-a122-42f5-81a6-ff5d16d93cc4",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "58541f2e-0ca3-4ec2-ab1a-f26274c75724",
      "documentation": "Get Label By External Shipment ID",
      "method": "get",
      "endpoint": "v1/labels/external_shipment_id/:external_shipment_id",
      "responses": [
        {
          "uuid": "f38c29aa-2601-4ef3-b149-eedcb24ba34b",
          "body": "{\n  \"batch_id\": \"\",\n  \"carrier_code\": \"\",\n  \"carrier_id\": \"\",\n  \"charge_event\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"form_download\": {},\n  \"insurance_claim\": {},\n  \"insurance_cost\": {\n    \"amount\": {{faker 'random.float'}},\n    \"currency\": \"\"\n  },\n  \"is_international\": {{faker 'random.boolean'}},\n  \"is_return_label\": {{faker 'random.boolean'}},\n  \"label_download\": {\n    \"href\": \"\",\n    \"pdf\": \"\",\n    \"png\": \"\",\n    \"zpl\": \"\"\n  },\n  \"label_download_type\": \"url\",\n  \"label_format\": \"pdf\",\n  \"label_id\": \"\",\n  \"label_image_id\": \"\",\n  \"label_layout\": \"4x6\",\n  \"outbound_label_id\": \"\",\n  \"package_code\": \"\",\n  \"packages\": [\n    {\n      \"dimensions\": {\n        \"height\": {{faker 'random.float'}},\n        \"length\": {{faker 'random.float'}},\n        \"unit\": \"inch\",\n        \"width\": {{faker 'random.float'}}\n      },\n      \"external_package_id\": \"\",\n      \"insured_value\": [\n        {\n          \"amount\": 0,\n          \"currency\": \"usd\"\n        }\n      ],\n      \"label_messages\": {\n        \"reference1\": \"\",\n        \"reference2\": \"\",\n        \"reference3\": \"\"\n      },\n      \"package_code\": \"\",\n      \"tracking_number\": \"\",\n      \"weight\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'random.float'}}\n      }\n    }\n  ],\n  \"rma_number\": \"\",\n  \"service_code\": \"\",\n  \"ship_date\": \"{{faker 'date.recent' 365}}\",\n  \"shipment\": {},\n  \"shipment_cost\": {\n    \"amount\": {{faker 'random.float'}},\n    \"currency\": \"\"\n  },\n  \"shipment_id\": \"\",\n  \"status\": \"\",\n  \"test_label\": {{faker 'random.boolean'}},\n  \"trackable\": {{faker 'random.boolean'}},\n  \"tracking_number\": \"782758401696\",\n  \"tracking_status\": \"\",\n  \"validate_address\": \"validate_and_clean\",\n  \"voided\": {{faker 'random.boolean'}},\n  \"voided_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The requested object creation was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "33cc0849-3e2e-42a8-9dd5-3efabba31991",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0fb57a83-00a3-42cc-8cba-2b10470e1b0f",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e3e4ff65-09c0-42fd-9ca7-bf0ed0b94456",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4a304e27-96f7-4b25-a4cb-29d9f34ba4d0",
      "documentation": "Purchase Label with Rate ID",
      "method": "post",
      "endpoint": "v1/labels/rates/:rate_id",
      "responses": [
        {
          "uuid": "e8c8339e-c491-46d5-8ec1-f2056b575c7f",
          "body": "{\n  \"batch_id\": \"\",\n  \"carrier_code\": \"\",\n  \"carrier_id\": \"\",\n  \"charge_event\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"form_download\": {},\n  \"insurance_claim\": {},\n  \"insurance_cost\": {\n    \"amount\": {{faker 'random.float'}},\n    \"currency\": \"\"\n  },\n  \"is_international\": {{faker 'random.boolean'}},\n  \"is_return_label\": {{faker 'random.boolean'}},\n  \"label_download\": {\n    \"href\": \"\",\n    \"pdf\": \"\",\n    \"png\": \"\",\n    \"zpl\": \"\"\n  },\n  \"label_download_type\": \"url\",\n  \"label_format\": \"pdf\",\n  \"label_id\": \"\",\n  \"label_image_id\": \"\",\n  \"label_layout\": \"4x6\",\n  \"outbound_label_id\": \"\",\n  \"package_code\": \"\",\n  \"packages\": [\n    {\n      \"dimensions\": {\n        \"height\": {{faker 'random.float'}},\n        \"length\": {{faker 'random.float'}},\n        \"unit\": \"inch\",\n        \"width\": {{faker 'random.float'}}\n      },\n      \"external_package_id\": \"\",\n      \"insured_value\": [\n        {\n          \"amount\": 0,\n          \"currency\": \"usd\"\n        }\n      ],\n      \"label_messages\": {\n        \"reference1\": \"\",\n        \"reference2\": \"\",\n        \"reference3\": \"\"\n      },\n      \"package_code\": \"\",\n      \"tracking_number\": \"\",\n      \"weight\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'random.float'}}\n      }\n    }\n  ],\n  \"rma_number\": \"\",\n  \"service_code\": \"\",\n  \"ship_date\": \"{{faker 'date.recent' 365}}\",\n  \"shipment\": {},\n  \"shipment_cost\": {\n    \"amount\": {{faker 'random.float'}},\n    \"currency\": \"\"\n  },\n  \"shipment_id\": \"\",\n  \"status\": \"\",\n  \"test_label\": {{faker 'random.boolean'}},\n  \"trackable\": {{faker 'random.boolean'}},\n  \"tracking_number\": \"782758401696\",\n  \"tracking_status\": \"\",\n  \"validate_address\": \"validate_and_clean\",\n  \"voided\": {{faker 'random.boolean'}},\n  \"voided_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The requested object creation was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "95b1978f-cbd5-43d0-b42c-52b4984f787d",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6e144f36-eb84-46ee-b3d1-319bb400d767",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d7d82358-237c-4363-903f-0994a93e62c8",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f502f177-8b2c-4808-89b9-4dbf5ca927ab",
      "documentation": "Purchase Label with Shipment ID",
      "method": "post",
      "endpoint": "v1/labels/shipment/:shipment_id",
      "responses": [
        {
          "uuid": "14ba7254-b497-49f8-b46d-9db0274bcf66",
          "body": "{\n  \"batch_id\": \"\",\n  \"carrier_code\": \"\",\n  \"carrier_id\": \"\",\n  \"charge_event\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"form_download\": {},\n  \"insurance_claim\": {},\n  \"insurance_cost\": {\n    \"amount\": {{faker 'random.float'}},\n    \"currency\": \"\"\n  },\n  \"is_international\": {{faker 'random.boolean'}},\n  \"is_return_label\": {{faker 'random.boolean'}},\n  \"label_download\": {\n    \"href\": \"\",\n    \"pdf\": \"\",\n    \"png\": \"\",\n    \"zpl\": \"\"\n  },\n  \"label_download_type\": \"url\",\n  \"label_format\": \"pdf\",\n  \"label_id\": \"\",\n  \"label_image_id\": \"\",\n  \"label_layout\": \"4x6\",\n  \"outbound_label_id\": \"\",\n  \"package_code\": \"\",\n  \"packages\": [\n    {\n      \"dimensions\": {\n        \"height\": {{faker 'random.float'}},\n        \"length\": {{faker 'random.float'}},\n        \"unit\": \"inch\",\n        \"width\": {{faker 'random.float'}}\n      },\n      \"external_package_id\": \"\",\n      \"insured_value\": [\n        {\n          \"amount\": 0,\n          \"currency\": \"usd\"\n        }\n      ],\n      \"label_messages\": {\n        \"reference1\": \"\",\n        \"reference2\": \"\",\n        \"reference3\": \"\"\n      },\n      \"package_code\": \"\",\n      \"tracking_number\": \"\",\n      \"weight\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'random.float'}}\n      }\n    }\n  ],\n  \"rma_number\": \"\",\n  \"service_code\": \"\",\n  \"ship_date\": \"{{faker 'date.recent' 365}}\",\n  \"shipment\": {},\n  \"shipment_cost\": {\n    \"amount\": {{faker 'random.float'}},\n    \"currency\": \"\"\n  },\n  \"shipment_id\": \"\",\n  \"status\": \"\",\n  \"test_label\": {{faker 'random.boolean'}},\n  \"trackable\": {{faker 'random.boolean'}},\n  \"tracking_number\": \"782758401696\",\n  \"tracking_status\": \"\",\n  \"validate_address\": \"validate_and_clean\",\n  \"voided\": {{faker 'random.boolean'}},\n  \"voided_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The requested object creation was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "75a3dda7-0a69-4677-9615-f6c5c7721868",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7e636484-4070-421a-97f4-6a5228584ca9",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bbfeadfa-0550-4a0d-87a3-554576d0e569",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "17f78c62-b09a-4cd9-bfe9-aa5b216dae27",
      "documentation": "Get Label By ID",
      "method": "get",
      "endpoint": "v1/labels/:label_id",
      "responses": [
        {
          "uuid": "7fa2a00d-905f-4311-9772-d311686a227e",
          "body": "{\n  \"batch_id\": \"\",\n  \"carrier_code\": \"\",\n  \"carrier_id\": \"\",\n  \"charge_event\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"form_download\": {},\n  \"insurance_claim\": {},\n  \"insurance_cost\": {\n    \"amount\": {{faker 'random.float'}},\n    \"currency\": \"\"\n  },\n  \"is_international\": {{faker 'random.boolean'}},\n  \"is_return_label\": {{faker 'random.boolean'}},\n  \"label_download\": {\n    \"href\": \"\",\n    \"pdf\": \"\",\n    \"png\": \"\",\n    \"zpl\": \"\"\n  },\n  \"label_download_type\": \"url\",\n  \"label_format\": \"pdf\",\n  \"label_id\": \"\",\n  \"label_image_id\": \"\",\n  \"label_layout\": \"4x6\",\n  \"outbound_label_id\": \"\",\n  \"package_code\": \"\",\n  \"packages\": [\n    {\n      \"dimensions\": {\n        \"height\": {{faker 'random.float'}},\n        \"length\": {{faker 'random.float'}},\n        \"unit\": \"inch\",\n        \"width\": {{faker 'random.float'}}\n      },\n      \"external_package_id\": \"\",\n      \"insured_value\": [\n        {\n          \"amount\": 0,\n          \"currency\": \"usd\"\n        }\n      ],\n      \"label_messages\": {\n        \"reference1\": \"\",\n        \"reference2\": \"\",\n        \"reference3\": \"\"\n      },\n      \"package_code\": \"\",\n      \"tracking_number\": \"\",\n      \"weight\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'random.float'}}\n      }\n    }\n  ],\n  \"rma_number\": \"\",\n  \"service_code\": \"\",\n  \"ship_date\": \"{{faker 'date.recent' 365}}\",\n  \"shipment\": {},\n  \"shipment_cost\": {\n    \"amount\": {{faker 'random.float'}},\n    \"currency\": \"\"\n  },\n  \"shipment_id\": \"\",\n  \"status\": \"\",\n  \"test_label\": {{faker 'random.boolean'}},\n  \"trackable\": {{faker 'random.boolean'}},\n  \"tracking_number\": \"782758401696\",\n  \"tracking_status\": \"\",\n  \"validate_address\": \"validate_and_clean\",\n  \"voided\": {{faker 'random.boolean'}},\n  \"voided_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c9f3ad9a-ce6f-483b-b6c3-1ed657568b1b",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ab4b50a7-4062-4876-8d84-1f7e754314cd",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7fcc3871-9acc-4e47-92be-e0b50a46ae51",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "58c70833-57d7-4146-ac14-30d4bb05a19c",
      "documentation": "Create a return label",
      "method": "post",
      "endpoint": "v1/labels/:label_id/return",
      "responses": [
        {
          "uuid": "f2a8f45d-2649-442d-b43b-6eed93d1f654",
          "body": "{\n  \"batch_id\": \"\",\n  \"carrier_code\": \"\",\n  \"carrier_id\": \"\",\n  \"charge_event\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"form_download\": {},\n  \"insurance_claim\": {},\n  \"insurance_cost\": {\n    \"amount\": {{faker 'random.float'}},\n    \"currency\": \"\"\n  },\n  \"is_international\": {{faker 'random.boolean'}},\n  \"is_return_label\": {{faker 'random.boolean'}},\n  \"label_download\": {\n    \"href\": \"\",\n    \"pdf\": \"\",\n    \"png\": \"\",\n    \"zpl\": \"\"\n  },\n  \"label_download_type\": \"url\",\n  \"label_format\": \"pdf\",\n  \"label_id\": \"\",\n  \"label_image_id\": \"\",\n  \"label_layout\": \"4x6\",\n  \"outbound_label_id\": \"\",\n  \"package_code\": \"\",\n  \"packages\": [\n    {\n      \"dimensions\": {\n        \"height\": {{faker 'random.float'}},\n        \"length\": {{faker 'random.float'}},\n        \"unit\": \"inch\",\n        \"width\": {{faker 'random.float'}}\n      },\n      \"external_package_id\": \"\",\n      \"insured_value\": [\n        {\n          \"amount\": 0,\n          \"currency\": \"usd\"\n        }\n      ],\n      \"label_messages\": {\n        \"reference1\": \"\",\n        \"reference2\": \"\",\n        \"reference3\": \"\"\n      },\n      \"package_code\": \"\",\n      \"tracking_number\": \"\",\n      \"weight\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'random.float'}}\n      }\n    }\n  ],\n  \"rma_number\": \"\",\n  \"service_code\": \"\",\n  \"ship_date\": \"{{faker 'date.recent' 365}}\",\n  \"shipment\": {},\n  \"shipment_cost\": {\n    \"amount\": {{faker 'random.float'}},\n    \"currency\": \"\"\n  },\n  \"shipment_id\": \"\",\n  \"status\": \"\",\n  \"test_label\": {{faker 'random.boolean'}},\n  \"trackable\": {{faker 'random.boolean'}},\n  \"tracking_number\": \"782758401696\",\n  \"tracking_status\": \"\",\n  \"validate_address\": \"validate_and_clean\",\n  \"voided\": {{faker 'random.boolean'}},\n  \"voided_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eca7be77-1d4f-4a93-a887-7b18de429dc5",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0acd6e2c-31d1-4aee-b14a-f8df076e5a0f",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7191471e-e4f7-4568-b4f9-6df25b75e167",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e984a6f0-7796-4db6-945d-cae19197acb3",
      "documentation": "Get Label Tracking Information",
      "method": "get",
      "endpoint": "v1/labels/:label_id/track",
      "responses": [
        {
          "uuid": "1cd0bbe4-5f85-43da-9004-d19a22182869",
          "body": "{\n  \"actual_delivery_date\": \"{{faker 'date.recent' 365}}\",\n  \"carrier_status_code\": 1,\n  \"carrier_status_description\": \"Your item was delivered in or at the mailbox at 9:10 am on March\",\n  \"estimated_delivery_date\": \"{{faker 'date.recent' 365}}\",\n  \"events\": [\n    {\n      \"carrier_occurred_at\": \"{{faker 'date.recent' 365}}\",\n      \"city_locality\": \"AUSTIN\",\n      \"company_name\": \"Stamps.com\",\n      \"country_code\": \"\",\n      \"description\": \"Delivered, In/At Mailbox\",\n      \"event_code\": \"\",\n      \"latitude\": {{faker 'random.float'}},\n      \"longitude\": {{faker 'random.float'}},\n      \"occurred_at\": \"{{faker 'date.recent' 365}}\",\n      \"postal_code\": 78756,\n      \"signer\": \"\",\n      \"state_province\": \"TX\"\n    }\n  ],\n  \"exception_description\": \"\",\n  \"ship_date\": \"{{faker 'date.recent' 365}}\",\n  \"status_code\": \"DE\",\n  \"status_description\": \"Delivered\",\n  \"tracking_number\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4003657b-40b7-452b-9b9f-b0bd55e5c88a",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9de726f3-c263-401d-8cb3-8b22ad0fd44a",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0135279c-350e-4b92-8490-b34a45aa51a5",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "db4f1f68-385f-4fc2-be6c-12dcd8e4b475",
      "documentation": "Void a Label By ID",
      "method": "put",
      "endpoint": "v1/labels/:label_id/void",
      "responses": [
        {
          "uuid": "275011e1-25fb-41ea-a8a6-9576ccc82607",
          "body": "{\n  \"approved\": {{faker 'random.boolean'}},\n  \"message\": \"Request for refund submitted.  This label has been voided.\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0c029ffe-b5dd-416d-90e1-2c1ce1f40ce4",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6709b98f-13b1-4566-8a75-8590786922aa",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a88944a2-e3f4-45ab-82a6-619dd53da57c",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "50bc7c23-a06d-4a9e-9462-015c773d196a",
      "documentation": "List Manifests",
      "method": "get",
      "endpoint": "v1/manifests",
      "responses": [
        {
          "uuid": "6f04e2b0-4a93-40d5-9881-dfaddb6224ab",
          "body": "{\n  \"links\": {\n    \"first\": {},\n    \"last\": {},\n    \"next\": {\n      \"href\": \"\",\n      \"type\": \"\"\n    },\n    \"prev\": {\n      \"href\": \"\",\n      \"type\": \"\"\n    }\n  },\n  \"manifests\": [],\n  \"page\": 3,\n  \"pages\": 4,\n  \"total\": 3\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7af6ffe6-d0b5-49dd-be3b-087ae8680168",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ddb583f5-43c3-4c1a-9291-c21212d99cec",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b9758987-5719-4cf3-80c6-ee71b70e0d05",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4c2a660e-f4ab-4f81-89b5-7ae62c6ffe1c",
      "documentation": "Create Manifest",
      "method": "post",
      "endpoint": "v1/manifests",
      "responses": [
        {
          "uuid": "ce397dea-2b60-4ac7-b571-61b34d2dc832",
          "body": "{\n  \"manifests\": [\n    {\n      \"carrier_id\": \"\",\n      \"created_at\": \"2019-07-12T13:37:39.050Z\",\n      \"form_id\": \"\",\n      \"manifest_download\": {\n        \"href\": \"\"\n      },\n      \"manifest_id\": \"\",\n      \"ship_date\": \"2019-07-12T13:37:39.050Z\",\n      \"shipments\": 100,\n      \"submission_id\": 9.475711899564878e+21,\n      \"warehouse_id\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a7420b9f-d6c8-4378-b167-116c5e332590",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ae7ee5e8-247a-4edb-9f12-1b2ea1270138",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5b71be5a-55d9-425d-9758-5d130ee3c2e4",
      "documentation": "Get Manifest By Id",
      "method": "get",
      "endpoint": "v1/manifests/:manifest_id",
      "responses": [
        {
          "uuid": "45347177-f539-468c-a782-f61dd3c8f7c1",
          "body": "{\n  \"carrier_id\": \"\",\n  \"created_at\": \"2019-07-12T13:37:39.050Z\",\n  \"form_id\": \"\",\n  \"manifest_download\": {\n    \"href\": \"\"\n  },\n  \"manifest_id\": \"\",\n  \"ship_date\": \"2019-07-12T13:37:39.050Z\",\n  \"shipments\": 100,\n  \"submission_id\": 9.475711899564878e+21,\n  \"warehouse_id\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "21d6461f-7f2d-4009-bd2c-adcbf1613310",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bc8036d7-59c8-426a-958b-3b2ce760de9e",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bbd06719-4f30-4b0b-bcfb-c06ca1225915",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "73590159-d40d-4aa6-99c7-435d4bb8cda4",
      "documentation": "List Custom Package Types",
      "method": "get",
      "endpoint": "v1/packages",
      "responses": [
        {
          "uuid": "233c6d0e-c74c-4f58-9451-bd8a4ac34e2e",
          "body": "{\n  \"packages\": [\n    {\n      \"description\": \"Packaging for laptops\",\n      \"dimensions\": {\n        \"height\": {{faker 'random.float'}},\n        \"length\": {{faker 'random.float'}},\n        \"unit\": \"inch\",\n        \"width\": {{faker 'random.float'}}\n      },\n      \"name\": \"laptop_box\",\n      \"package_code\": \"\",\n      \"package_id\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "914a53ca-42ef-4e64-a213-c98550ef10ab",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2416aac5-99bc-4908-a500-2a3b95e2e6b9",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "27db0795-84be-4bf6-be62-036135022caa",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d60944de-32d1-45aa-8ebd-c21bf414152f",
      "documentation": "Create Custom Package Type",
      "method": "post",
      "endpoint": "v1/packages",
      "responses": [
        {
          "uuid": "f9579497-f95e-454e-a418-5cb9b2c43b17",
          "body": "{\n  \"description\": \"Packaging for laptops\",\n  \"dimensions\": {\n    \"height\": {{faker 'random.float'}},\n    \"length\": {{faker 'random.float'}},\n    \"unit\": \"inch\",\n    \"width\": {{faker 'random.float'}}\n  },\n  \"name\": \"laptop_box\",\n  \"package_code\": \"\",\n  \"package_id\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f07ac6c3-d5c3-4316-9303-f227dcedd3a7",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8ce46ea5-0093-4758-8a8c-9cb68d7d6e9a",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "78ab70ab-7024-48b5-ab62-a1f152a838d4",
      "documentation": "Delete A Custom Package By ID",
      "method": "delete",
      "endpoint": "v1/packages/:package_id",
      "responses": [
        {
          "uuid": "c394b04d-4be7-4d1c-99e1-818284f8b34f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "The request was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1b2e79ea-d266-47b1-9346-7df9900f52ed",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6384b03b-2578-4414-b620-474a3e7f99c2",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cbb52c81-aaaf-461b-a0ee-4e36d7b2740d",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "020ad319-437a-459d-9106-58fb561c33e8",
      "documentation": "Get Custom Package Type By ID",
      "method": "get",
      "endpoint": "v1/packages/:package_id",
      "responses": [
        {
          "uuid": "da3af450-fd07-4e04-9bea-63c73f0bf9c0",
          "body": "{\n  \"description\": \"Packaging for laptops\",\n  \"dimensions\": {\n    \"height\": {{faker 'random.float'}},\n    \"length\": {{faker 'random.float'}},\n    \"unit\": \"inch\",\n    \"width\": {{faker 'random.float'}}\n  },\n  \"name\": \"laptop_box\",\n  \"package_code\": \"\",\n  \"package_id\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0d3c9c93-9215-43cd-8872-9403d478ae54",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8608f347-1ee4-457f-bddd-641c1675a468",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c969f2f8-a8c7-4c7d-8996-05fe8534b62a",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "059c345f-c3b8-4696-a81a-3db724efa973",
      "documentation": "Update Custom Package Type By ID",
      "method": "put",
      "endpoint": "v1/packages/:package_id",
      "responses": [
        {
          "uuid": "d298035f-e82c-40e5-b5d4-664682243cc6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "The request was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ec57318b-87dd-4897-bbe2-207aa093c790",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cef3af71-03dd-4d74-adf2-0c9079ff1be7",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c3438a66-9b8e-4dd5-a22a-4c4112b47b52",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e9c6dbca-4da7-443a-9391-cedd1058d691",
      "documentation": "Get Shipping Rates",
      "method": "post",
      "endpoint": "v1/rates",
      "responses": [
        {
          "uuid": "6ba1da41-bf4d-4ea8-bae4-df07656ac6c6",
          "body": "{\n  \"advanced_options\": {\n    \"bill_to_account\": \"\",\n    \"bill_to_country_code\": \"\",\n    \"bill_to_party\": \"\",\n    \"bill_to_postal_code\": \"\",\n    \"collect_on_delivery\": {\n      \"payment_amount\": {\n        \"amount\": {{faker 'random.float'}},\n        \"currency\": \"\"\n      },\n      \"payment_type\": \"\"\n    },\n    \"contains_alcohol\": {{faker 'random.boolean'}},\n    \"custom_field1\": \"\",\n    \"custom_field2\": \"\",\n    \"custom_field3\": \"\",\n    \"delivered_duty_paid\": {{faker 'random.boolean'}},\n    \"dry_ice\": {{faker 'random.boolean'}},\n    \"dry_ice_weight\": {\n      \"unit\": \"\",\n      \"value\": {{faker 'random.float'}}\n    },\n    \"freight_class\": 77.5,\n    \"non_machinable\": {{faker 'random.boolean'}},\n    \"saturday_delivery\": {{faker 'random.boolean'}},\n    \"use_ups_ground_freight_pricing\": {{faker 'random.boolean'}}\n  },\n  \"carrier_id\": \"\",\n  \"confirmation\": \"none\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"customs\": {\n    \"contents\": \"merchandise\",\n    \"customs_items\": [],\n    \"non_delivery\": \"return_to_sender\"\n  },\n  \"external_order_id\": \"\",\n  \"external_shipment_id\": \"\",\n  \"insurance_provider\": \"none\",\n  \"items\": [],\n  \"modified_at\": \"{{faker 'date.recent' 365}}\",\n  \"order_source_code\": \"\",\n  \"packages\": [\n    {\n      \"dimensions\": {\n        \"height\": {{faker 'random.float'}},\n        \"length\": {{faker 'random.float'}},\n        \"unit\": \"inch\",\n        \"width\": {{faker 'random.float'}}\n      },\n      \"external_package_id\": \"\",\n      \"insured_value\": [\n        {\n          \"amount\": 0,\n          \"currency\": \"usd\"\n        }\n      ],\n      \"label_messages\": {\n        \"reference1\": \"\",\n        \"reference2\": \"\",\n        \"reference3\": \"\"\n      },\n      \"package_code\": \"\",\n      \"tracking_number\": \"\",\n      \"weight\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'random.float'}}\n      }\n    }\n  ],\n  \"return_to\": {},\n  \"service_code\": \"\",\n  \"ship_date\": \"{{faker 'date.recent' 365}}\",\n  \"ship_from\": {},\n  \"ship_to\": {},\n  \"shipment_id\": \"\",\n  \"shipment_status\": \"pending\",\n  \"tags\": [],\n  \"total_weight\": {\n    \"unit\": \"\",\n    \"value\": {{faker 'random.float'}}\n  },\n  \"warehouse_id\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1d459eed-a0ef-4503-8948-79f674447e74",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "09274ad7-8f2d-4ec7-bae2-41d14f315e7b",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b4bc5e2f-d322-4185-9913-954e961222bd",
      "documentation": "Get Bulk Rates",
      "method": "post",
      "endpoint": "v1/rates/bulk",
      "responses": [
        {
          "uuid": "6a62e260-30d7-4f21-812f-19225b878787",
          "body": "[\n  {\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"errors\": [\n      {\n        \"error_code\": \"\",\n        \"error_source\": \"\",\n        \"error_type\": \"\",\n        \"message\": \"Body of request cannot be null.\"\n      }\n    ],\n    \"rate_request_id\": \"\",\n    \"shipment_id\": \"\",\n    \"status\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6e4dda13-09e3-4314-b256-98a017b0066d",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5cfb6e33-e741-4314-b7f7-0c7ebb6ae59d",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8990cbab-6846-40dd-ba0c-2eabb5aec49d",
      "documentation": "Estimate Rates",
      "method": "post",
      "endpoint": "v1/rates/estimate",
      "responses": [
        {
          "uuid": "3939371c-95c4-4253-86b3-213cc28d5033",
          "body": "[\n  {\n    \"carrier_code\": \"\",\n    \"carrier_delivery_days\": \"\",\n    \"carrier_friendly_name\": \"\",\n    \"carrier_id\": \"\",\n    \"carrier_nickname\": \"\",\n    \"confirmation_amount\": {\n      \"amount\": {{faker 'random.float'}},\n      \"currency\": \"\"\n    },\n    \"delivery_days\": 5,\n    \"error_messages\": [\n      \"\"\n    ],\n    \"estimated_delivery_date\": \"{{faker 'date.recent' 365}}\",\n    \"guaranteed_service\": {{faker 'random.boolean'}},\n    \"insurance_amount\": {\n      \"amount\": {{faker 'random.float'}},\n      \"currency\": \"\"\n    },\n    \"negotiated_rate\": {{faker 'random.boolean'}},\n    \"other_amount\": {\n      \"amount\": {{faker 'random.float'}},\n      \"currency\": \"\"\n    },\n    \"package_type\": \"package\",\n    \"rate_id\": \"\",\n    \"rate_type\": \"\",\n    \"service_code\": \"\",\n    \"service_type\": \"\",\n    \"ship_date\": \"{{faker 'date.recent' 365}}\",\n    \"shipping_amount\": {\n      \"amount\": {{faker 'random.float'}},\n      \"currency\": \"\"\n    },\n    \"tax_amount\": {\n      \"amount\": {{faker 'random.float'}},\n      \"currency\": \"\"\n    },\n    \"trackable\": {{faker 'random.boolean'}},\n    \"validation_status\": \"\",\n    \"warning_messages\": [\n      \"\"\n    ],\n    \"zone\": 6\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d3a6efa8-7cbb-45cc-82db-9c22fd62baff",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "96994c5d-eee3-4b91-9cd3-bbbc62bf53ff",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a30308b3-ca23-4d79-b811-e0bbb56ed99c",
      "documentation": "Get Rate By ID",
      "method": "get",
      "endpoint": "v1/rates/:rate_id",
      "responses": [
        {
          "uuid": "f2f2c4f3-6855-4f54-baf3-6989cdc2ae6a",
          "body": "{\n  \"carrier_code\": \"\",\n  \"carrier_delivery_days\": \"\",\n  \"carrier_friendly_name\": \"\",\n  \"carrier_id\": \"\",\n  \"carrier_nickname\": \"\",\n  \"confirmation_amount\": {\n    \"amount\": {{faker 'random.float'}},\n    \"currency\": \"\"\n  },\n  \"delivery_days\": 5,\n  \"error_messages\": [\n    \"\"\n  ],\n  \"estimated_delivery_date\": \"{{faker 'date.recent' 365}}\",\n  \"guaranteed_service\": {{faker 'random.boolean'}},\n  \"insurance_amount\": {\n    \"amount\": {{faker 'random.float'}},\n    \"currency\": \"\"\n  },\n  \"negotiated_rate\": {{faker 'random.boolean'}},\n  \"other_amount\": {\n    \"amount\": {{faker 'random.float'}},\n    \"currency\": \"\"\n  },\n  \"package_type\": \"package\",\n  \"rate_id\": \"\",\n  \"rate_type\": \"\",\n  \"service_code\": \"\",\n  \"service_type\": \"\",\n  \"ship_date\": \"{{faker 'date.recent' 365}}\",\n  \"shipping_amount\": {\n    \"amount\": {{faker 'random.float'}},\n    \"currency\": \"\"\n  },\n  \"tax_amount\": {\n    \"amount\": {{faker 'random.float'}},\n    \"currency\": \"\"\n  },\n  \"trackable\": {{faker 'random.boolean'}},\n  \"validation_status\": \"\",\n  \"warning_messages\": [\n    \"\"\n  ],\n  \"zone\": 6\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d0b75732-1d15-4a4d-9e4d-af7b26c65348",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8087d735-6f93-4be0-b0c6-317e3deac70b",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d0dfa03b-2e88-40ac-ae7c-67668e335baa",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "123f486e-b139-4036-ace1-ee3940ec6df8",
      "documentation": "List Shipments",
      "method": "get",
      "endpoint": "v1/shipments",
      "responses": [
        {
          "uuid": "701b48a8-a2f6-4392-b1f4-89e7ba6e4667",
          "body": "{\n  \"links\": {\n    \"first\": {},\n    \"last\": {},\n    \"next\": {\n      \"href\": \"\",\n      \"type\": \"\"\n    },\n    \"prev\": {\n      \"href\": \"\",\n      \"type\": \"\"\n    }\n  },\n  \"page\": \"????\",\n  \"pages\": {{faker 'random.number'}},\n  \"shipments\": [\n    {}\n  ],\n  \"total\": 1990\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5f9db303-c636-4e35-84bf-604d87eef560",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cd7e6f44-84f1-4c38-a0f4-c2c5a2d74f76",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "944bd2bb-0d00-4fce-be05-00561366667d",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f8edba34-90a0-48bf-8c0c-f80fbbc357fd",
      "documentation": "Create Shipments",
      "method": "post",
      "endpoint": "v1/shipments",
      "responses": [
        {
          "uuid": "6179477d-065e-4d65-9829-175c49cbf1c7",
          "body": "{\n  \"has_errors\": {{faker 'random.boolean'}},\n  \"shipments\": [\n    {}\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The requested object creation was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f9fb73c9-5de7-4e91-975c-0a09ede57807",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "597671c0-beb0-4e17-98d9-9484e4ca669d",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7e072daf-e4da-49fc-86a5-baab665afa1e",
      "documentation": "Get Shipment By External ID",
      "method": "get",
      "endpoint": "v1/shipments/external_shipment_id/:external_shipment_id",
      "responses": [
        {
          "uuid": "120d04d4-cd42-42be-841e-59019469a4fa",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dcf56789-9a9f-4414-9c62-7418a607dd2e",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7e342b24-e822-48d1-9204-a164c40afc13",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ec15b708-f7b2-4ff8-9e1e-6725a3d579a0",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "598dacc9-72fd-49ac-a4fd-2022ab0ef981",
      "documentation": "Parse shipping info",
      "method": "put",
      "endpoint": "v1/shipments/recognize",
      "responses": [
        {
          "uuid": "48c68493-8154-401b-a616-19602987d571",
          "body": "{\n  \"entities\": [\n    {\n      \"end_index\": {{faker 'random.number'}},\n      \"result\": {},\n      \"score\": {{faker 'random.float'}},\n      \"start_index\": {{faker 'random.number'}},\n      \"text\": \"\",\n      \"type\": \"\"\n    }\n  ],\n  \"score\": {{faker 'random.float'}},\n  \"shipment\": {\n    \"advanced_options\": {\n      \"bill_to_account\": \"\",\n      \"bill_to_country_code\": \"\",\n      \"bill_to_party\": \"\",\n      \"bill_to_postal_code\": \"\",\n      \"collect_on_delivery\": {\n        \"payment_amount\": {\n          \"amount\": {{faker 'random.float'}},\n          \"currency\": \"\"\n        },\n        \"payment_type\": \"\"\n      },\n      \"contains_alcohol\": {{faker 'random.boolean'}},\n      \"custom_field1\": \"\",\n      \"custom_field2\": \"\",\n      \"custom_field3\": \"\",\n      \"delivered_duty_paid\": {{faker 'random.boolean'}},\n      \"dry_ice\": {{faker 'random.boolean'}},\n      \"dry_ice_weight\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'random.float'}}\n      },\n      \"freight_class\": 77.5,\n      \"non_machinable\": {{faker 'random.boolean'}},\n      \"saturday_delivery\": {{faker 'random.boolean'}},\n      \"use_ups_ground_freight_pricing\": {{faker 'random.boolean'}}\n    },\n    \"carrier_id\": \"\",\n    \"confirmation\": \"none\",\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"customs\": {\n      \"contents\": \"merchandise\",\n      \"customs_items\": [],\n      \"non_delivery\": \"return_to_sender\"\n    },\n    \"external_order_id\": \"\",\n    \"external_shipment_id\": \"\",\n    \"insurance_provider\": \"none\",\n    \"items\": [],\n    \"modified_at\": \"{{faker 'date.recent' 365}}\",\n    \"order_source_code\": \"\",\n    \"packages\": [\n      {\n        \"dimensions\": {\n          \"height\": {{faker 'random.float'}},\n          \"length\": {{faker 'random.float'}},\n          \"unit\": \"inch\",\n          \"width\": {{faker 'random.float'}}\n        },\n        \"external_package_id\": \"\",\n        \"insured_value\": [\n          {\n            \"amount\": 0,\n            \"currency\": \"usd\"\n          }\n        ],\n        \"label_messages\": {\n          \"reference1\": \"\",\n          \"reference2\": \"\",\n          \"reference3\": \"\"\n        },\n        \"package_code\": \"\",\n        \"tracking_number\": \"\",\n        \"weight\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.float'}}\n        }\n      }\n    ],\n    \"return_to\": {},\n    \"service_code\": \"\",\n    \"ship_date\": \"{{faker 'date.recent' 365}}\",\n    \"ship_from\": {},\n    \"ship_to\": {},\n    \"shipment_id\": \"\",\n    \"shipment_status\": \"pending\",\n    \"tags\": [],\n    \"total_weight\": {\n      \"unit\": \"\",\n      \"value\": {{faker 'random.float'}}\n    },\n    \"warehouse_id\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns the parsed shipment, as well as a confidence score and a list of all the shipping entities that were recognized in the text.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "25d2dd3b-1cad-4327-bba5-f202b794583d",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "30399617-955c-4d52-93a6-c7e7cbb7d936",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5090bce8-bbc1-44a0-aeea-423efc770d70",
      "documentation": "Get Shipment By ID",
      "method": "get",
      "endpoint": "v1/shipments/:shipment_id",
      "responses": [
        {
          "uuid": "62ad3101-bd38-4484-a412-365f50d9eae6",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5ca3e6d1-543c-4d6b-9553-e487abe1498b",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a3183056-faf4-4ff9-8216-8528ab36eddb",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4a1c3800-04e0-449f-b4f0-cace90b27c86",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4b84ca1e-1500-4612-821c-b57ed46f3d72",
      "documentation": "Update Shipment By ID",
      "method": "put",
      "endpoint": "v1/shipments/:shipment_id",
      "responses": [
        {
          "uuid": "8596f13b-2c85-401f-9b30-ad4b0fd94a31",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "24efbb97-9750-469a-bece-204c758d2d3c",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3c05619e-46c0-4919-a06f-a0cf87ee9105",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4a409460-0c42-4b20-a41f-7c96b2ae0d43",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "437a2df5-fda7-4d40-bd97-9e2f400a8184",
      "documentation": "Cancel a Shipment",
      "method": "put",
      "endpoint": "v1/shipments/:shipment_id/cancel",
      "responses": [
        {
          "uuid": "b3a0f601-45bd-4b43-9501-0ab40533c20b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "The request was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "73c64645-3f0d-4019-bed4-191558323226",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "36b0d30b-a6b2-4f50-808e-d5924b0b4580",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "12b371e5-f999-4122-ae5d-534cf9d4ac09",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d41c04eb-6319-4151-b322-0b82e239e3e9",
      "documentation": "Get Shipment Errors",
      "method": "get",
      "endpoint": "v1/shipments/:shipment_id/errors",
      "responses": [
        {
          "uuid": "7d20909e-8543-4675-af1c-5b60557410b1",
          "body": "{\n  \"errors\": [\n    {\n      \"error\": \"\",\n      \"external_shipment_id\": \"\",\n      \"shipment_id\": \"\"\n    }\n  ],\n  \"links\": {\n    \"first\": {},\n    \"last\": {},\n    \"next\": {\n      \"href\": \"\",\n      \"type\": \"\"\n    },\n    \"prev\": {\n      \"href\": \"\",\n      \"type\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "98122d70-06d5-435b-9a41-20663ac042c7",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f60b40ed-bb45-43a0-9e9a-2e0d231f6acf",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3932c5f2-166a-4ce2-8593-ed0715b08626",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6e2f1d7b-f690-4d51-aa39-f4fe8e2a24a9",
      "documentation": "Get Shipment Rates",
      "method": "get",
      "endpoint": "v1/shipments/:shipment_id/rates",
      "responses": [
        {
          "uuid": "6a6135f2-fce4-4766-890b-d3fc17e06ded",
          "body": "{\n  \"created_at\": \"\",\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"invalid_rates\": [],\n  \"rate_request_id\": \"\",\n  \"rates\": [\n    {\n      \"carrier_code\": \"\",\n      \"carrier_delivery_days\": \"\",\n      \"carrier_friendly_name\": \"\",\n      \"carrier_id\": \"\",\n      \"carrier_nickname\": \"\",\n      \"confirmation_amount\": {\n        \"amount\": {{faker 'random.float'}},\n        \"currency\": \"\"\n      },\n      \"delivery_days\": 5,\n      \"error_messages\": [\n        \"\"\n      ],\n      \"estimated_delivery_date\": \"{{faker 'date.recent' 365}}\",\n      \"guaranteed_service\": {{faker 'random.boolean'}},\n      \"insurance_amount\": {\n        \"amount\": {{faker 'random.float'}},\n        \"currency\": \"\"\n      },\n      \"negotiated_rate\": {{faker 'random.boolean'}},\n      \"other_amount\": {\n        \"amount\": {{faker 'random.float'}},\n        \"currency\": \"\"\n      },\n      \"package_type\": \"package\",\n      \"rate_id\": \"\",\n      \"rate_type\": \"\",\n      \"service_code\": \"\",\n      \"service_type\": \"\",\n      \"ship_date\": \"{{faker 'date.recent' 365}}\",\n      \"shipping_amount\": {\n        \"amount\": {{faker 'random.float'}},\n        \"currency\": \"\"\n      },\n      \"tax_amount\": {\n        \"amount\": {{faker 'random.float'}},\n        \"currency\": \"\"\n      },\n      \"trackable\": {{faker 'random.boolean'}},\n      \"validation_status\": \"\",\n      \"warning_messages\": [\n        \"\"\n      ],\n      \"zone\": 6\n    }\n  ],\n  \"shipment_id\": \"\",\n  \"status\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9c9e78a0-8c6e-41bb-a056-13284c2ce0c3",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "432e71a9-6917-4046-8eeb-dbf120e86d87",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "97765eda-baec-447f-913d-3cb2d1d9d794",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "19921ca0-ca57-4fe2-81b3-f62732e083fa",
      "documentation": "Remove Tag from Shipment",
      "method": "delete",
      "endpoint": "v1/shipments/:shipment_id/tags/:tag_name",
      "responses": [
        {
          "uuid": "e8d0d05c-60d4-4902-99d1-5573bdbbaea2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "The request was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a59da7d3-2078-4056-9dd0-362eb82a5199",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "51e5d172-eb6b-4a5b-8ab4-8fc734c8a8ee",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9a6be4bd-fe15-4678-bccc-23e1b4682541",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "74ebdb50-76a9-4299-bee1-8ab117650b96",
      "documentation": "Add Tag to Shipment",
      "method": "post",
      "endpoint": "v1/shipments/:shipment_id/tags/:tag_name",
      "responses": [
        {
          "uuid": "af23dbe5-c4ec-4397-9c11-7496b2e38d60",
          "body": "{\n  \"shipment_id\": \"\",\n  \"tag\": {\n    \"name\": \"Fragile\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The requested object creation was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "df4f15a5-5ae8-482c-9ea2-c62863ba0098",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e7a0b9cf-2073-4d25-a743-30a44f213e2a",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "13775be2-17de-48d3-8dc6-ab4b485b8118",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fdf1d712-d932-4a9e-97b8-ec1c5b9af199",
      "documentation": "Get Tags",
      "method": "get",
      "endpoint": "v1/tags",
      "responses": [
        {
          "uuid": "63b08e36-ec6f-47d9-b1f5-5dba3d73db92",
          "body": "{\n  \"tags\": [\n    {\n      \"name\": \"Fragile\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "55264035-ec98-4fff-86c3-7b060020f6f0",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "abd24785-2a6a-400d-ab2f-f341626e08fd",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ea075ea8-4e06-40c0-a322-a95609431fba",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "93e53800-53c5-439f-8f85-53fb96edaa44",
      "documentation": "Delete Tag",
      "method": "delete",
      "endpoint": "v1/tags/:tag_name",
      "responses": [
        {
          "uuid": "467f4c57-4880-4881-8429-58751300b900",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "The request was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6d28b350-d3e5-47c4-afd2-b87446b56a0c",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "94a0598d-d690-466f-a5ea-ed3932e3aec0",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "25712c59-5a4b-4f09-9e07-c0eefd1478eb",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0c2b9aa7-f88c-4915-bb21-e59a817918e5",
      "documentation": "Create a New Tag",
      "method": "post",
      "endpoint": "v1/tags/:tag_name",
      "responses": [
        {
          "uuid": "ff366588-ebdb-4606-8932-2726da0d9f4a",
          "body": "{\n  \"name\": \"Fragile\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4914020f-d68e-49ee-9a3c-1bf813b640f1",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "85a3e9bc-7485-4abd-9a03-02699feb15f0",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "650e735b-2c91-4a5d-a6a4-68fcf1babdc7",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "01649340-1faf-42bd-9b03-5fe688a32672",
      "documentation": "Update Tag Name",
      "method": "put",
      "endpoint": "v1/tags/:tag_name/:new_tag_name",
      "responses": [
        {
          "uuid": "6b51d01c-310e-4312-b793-7194a4594010",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "The request was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "38918263-65f3-42bf-a915-803f7a4004c3",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a87d3679-f272-45a3-8ef2-397def1f0b8e",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6a607da5-4b10-42b4-92cb-e1c463706462",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fb23dfd1-af0b-4477-a9bf-c794a282c737",
      "documentation": "Get Tracking Information",
      "method": "get",
      "endpoint": "v1/tracking",
      "responses": [
        {
          "uuid": "11d8af8b-ab08-4a4b-ae8d-be956ee81671",
          "body": "{\n  \"actual_delivery_date\": \"{{faker 'date.recent' 365}}\",\n  \"carrier_status_code\": 1,\n  \"carrier_status_description\": \"Your item was delivered in or at the mailbox at 9:10 am on March\",\n  \"estimated_delivery_date\": \"{{faker 'date.recent' 365}}\",\n  \"events\": [\n    {\n      \"carrier_occurred_at\": \"{{faker 'date.recent' 365}}\",\n      \"city_locality\": \"AUSTIN\",\n      \"company_name\": \"Stamps.com\",\n      \"country_code\": \"\",\n      \"description\": \"Delivered, In/At Mailbox\",\n      \"event_code\": \"\",\n      \"latitude\": {{faker 'random.float'}},\n      \"longitude\": {{faker 'random.float'}},\n      \"occurred_at\": \"{{faker 'date.recent' 365}}\",\n      \"postal_code\": 78756,\n      \"signer\": \"\",\n      \"state_province\": \"TX\"\n    }\n  ],\n  \"exception_description\": \"\",\n  \"ship_date\": \"{{faker 'date.recent' 365}}\",\n  \"status_code\": \"DE\",\n  \"status_description\": \"Delivered\",\n  \"tracking_number\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f8e113cc-f79b-4fb8-9292-62bf1aa69c17",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "104499bf-0990-4b7f-9199-a86f2a773111",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b96a62bb-fa7a-4f34-bb4b-7b1a938a3af7",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "37ebee47-efe6-4c83-b360-19cd0a340a0e",
      "documentation": "Start Tracking a Package",
      "method": "post",
      "endpoint": "v1/tracking/start",
      "responses": [
        {
          "uuid": "9f5b9c8a-4cec-4d93-bec4-a0aeb4388c89",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "The request was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "07349b0b-de3d-400b-9369-1865319de339",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d96dbf5c-7f9f-4e54-9b40-96fca7862362",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "61c5e30d-8b3e-4a71-8662-f375952489fd",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d1afa8c9-4c7a-474e-a883-4b42cfa54350",
      "documentation": "Stop Tracking a Package",
      "method": "post",
      "endpoint": "v1/tracking/stop",
      "responses": [
        {
          "uuid": "f6d8e9ba-720c-4377-a4d4-0a99c5dd03f9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "The request was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a851394d-946f-4b3d-9597-dd148c61a3d3",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ab1b9c4c-044f-4a43-bbb1-01d15462ec71",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fe67e352-0902-4036-a9c8-7224a9f43b5a",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "382d1314-143d-4c7a-8dfd-cbb8e1d5c703",
      "documentation": "List Warehouses",
      "method": "get",
      "endpoint": "v1/warehouses",
      "responses": [
        {
          "uuid": "dc27ffe6-d60d-4fa6-8cd5-60c976367ff4",
          "body": "{\n  \"warehouses\": [\n    {\n      \"created_at\": \"2019-06-25T18:12:35.583Z\",\n      \"name\": \"Zero Cool HQ\",\n      \"origin_address\": {},\n      \"return_address\": {},\n      \"warehouse_id\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9e48144e-6557-4ef1-85df-74e84a222007",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "03a3dff9-435f-47c7-a9fa-6c9293ea3930",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "abcf1c09-0dcb-41de-86d3-d02662a986dc",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b686cebb-cf3a-4d1a-bc46-a5d4debcfbb8",
      "documentation": "Create Warehouse",
      "method": "post",
      "endpoint": "v1/warehouses",
      "responses": [
        {
          "uuid": "1e1ec1a7-1832-4576-8a11-09a1d5052338",
          "body": "{\n  \"created_at\": \"2019-06-25T18:12:35.583Z\",\n  \"name\": \"Zero Cool HQ\",\n  \"origin_address\": {},\n  \"return_address\": {},\n  \"warehouse_id\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a4c136e7-9d93-4d79-8606-40e3730d700c",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a495946c-af9d-4cef-afb1-a69b808851df",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "483d74d0-f1a4-4b80-b3e1-1cb52a668581",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b01a20df-4bca-42a4-bfe1-f2a57c84889d",
      "documentation": "Delete Warehouse By ID",
      "method": "delete",
      "endpoint": "v1/warehouses/:warehouse_id",
      "responses": [
        {
          "uuid": "52cac7d8-b0e6-4cfb-a737-ee02f2f7875c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "The request was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ad87370f-1dc3-4e0b-99ca-7d797b0db59b",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fd3f6e4e-429d-416c-9dd6-1a34d3d4d210",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "764dd4a9-a4ac-4d9c-8531-3693bdbd774c",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e6e9d047-5d19-417d-9f1c-cada0317c606",
      "documentation": "Get Warehouse By Id",
      "method": "get",
      "endpoint": "v1/warehouses/:warehouse_id",
      "responses": [
        {
          "uuid": "dc678452-6024-4b61-9fab-9dbdf4f95374",
          "body": "{\n  \"created_at\": \"2019-06-25T18:12:35.583Z\",\n  \"name\": \"Zero Cool HQ\",\n  \"origin_address\": {},\n  \"return_address\": {},\n  \"warehouse_id\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2f34af53-1c61-40bc-a361-3d3caabb0491",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "89ee17ca-3f9f-44e7-b07d-3dffea507ad4",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "acd09121-17ce-4b9b-9f6e-bf3dd29d3965",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "94f96ff4-8349-403b-a8a4-5c0ce7072d47",
      "documentation": "Update WareHouse By Id",
      "method": "put",
      "endpoint": "v1/warehouses/:warehouse_id",
      "responses": [
        {
          "uuid": "2d6483f4-9652-4f5f-a2ac-7222a1dc44ff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "The request was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d375ec86-abf9-4cb9-a1eb-77f480ea4431",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7c7bcf72-3b7c-4746-ac6b-ac2f5d284d9f",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f024242f-a9b0-4b0d-baf0-e6b0a02a3738",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}