{
  "uuid": "b12340e4-71f1-4e1c-b162-7e72329a76a7",
  "lastMigration": 19,
  "name": "ShipEngine API",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "ac89c0c5-a1d0-4d63-b921-57b6b14705e9",
      "documentation": "Parse an address",
      "method": "put",
      "endpoint": "v1/addresses/recognize",
      "responses": [
        {
          "uuid": "bd1658d5-dc96-4b0e-ba90-c29e706bf379",
          "body": "{\n  \"address\": {\n    \"address_line1\": \"1999 Bishop Grandin Blvd.\",\n    \"address_line2\": \"Unit 408\",\n    \"address_line3\": \"Building #7\",\n    \"address_residential_indicator\": \"no\",\n    \"city_locality\": \"Winnipeg\",\n    \"company_name\": \"The Home Depot\",\n    \"country_code\": \"\",\n    \"name\": \"John Doe\",\n    \"phone\": \"+1 204-253-9411 ext. 123\",\n    \"postal_code\": \"\",\n    \"state_province\": \"Manitoba\"\n  },\n  \"entities\": [\n    {\n      \"end_index\": {{faker 'random.number'}},\n      \"result\": {},\n      \"score\": {{faker 'random.float'}},\n      \"start_index\": {{faker 'random.number'}},\n      \"text\": \"\",\n      \"type\": \"\"\n    }\n  ],\n  \"score\": {{faker 'random.float'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns the parsed address, as well as a confidence score and a list of all the entities that were recognized in the text.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ab1740aa-2afe-4ce8-9562-9953f6cf341e",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "afc31ffe-6590-4ad2-b1bb-3c3116612b1f",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5e8a7332-a806-4135-bc41-040c2878de4c",
      "documentation": "Validate An Address",
      "method": "post",
      "endpoint": "v1/addresses/validate",
      "responses": [
        {
          "uuid": "28812be7-1265-4d56-9afa-75eaa0dacd43",
          "body": "[\n  {\n    \"matched_address\": {},\n    \"messages\": [],\n    \"original_address\": {},\n    \"status\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a647ca1d-0775-466c-aa1a-fc96ec9939c2",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "af500b74-9746-45af-ac7c-d025b24bc0f1",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e6abda87-c5ae-4a35-be7f-acf3db9efc88",
      "documentation": "List Batches",
      "method": "get",
      "endpoint": "v1/batches",
      "responses": [
        {
          "uuid": "1191e55f-e444-4924-9677-34923f573ad8",
          "body": "{\n  \"batches\": [\n    {\n      \"batch_errors_url\": {\n        \"href\": \"\",\n        \"type\": \"\"\n      },\n      \"batch_id\": \"\",\n      \"batch_labels_url\": {\n        \"href\": \"\",\n        \"type\": \"\"\n      },\n      \"batch_notes\": \"Batch for morning shipment\",\n      \"batch_shipments_url\": {\n        \"href\": \"\",\n        \"type\": \"\"\n      },\n      \"completed\": 1,\n      \"count\": 2,\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"errors\": 2,\n      \"external_batch_id\": \"\",\n      \"form_download\": {\n        \"href\": \"\",\n        \"type\": \"\"\n      },\n      \"forms\": 3,\n      \"label_download\": {\n        \"href\": \"\",\n        \"pdf\": \"\",\n        \"png\": \"\",\n        \"zpl\": \"\"\n      },\n      \"label_format\": \"pdf\",\n      \"label_layout\": \"4x6\",\n      \"processed_at\": \"{{faker 'date.recent' 365}}\",\n      \"status\": \"\",\n      \"warnings\": 1\n    }\n  ],\n  \"links\": {\n    \"first\": {},\n    \"last\": {},\n    \"next\": {\n      \"href\": \"\",\n      \"type\": \"\"\n    },\n    \"prev\": {\n      \"href\": \"\",\n      \"type\": \"\"\n    }\n  },\n  \"page\": 1,\n  \"pages\": 10,\n  \"total\": 10\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fcfd1c80-3ee2-455d-b052-570efbf407fc",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a92cb5be-0212-440d-85f3-ccdd067d6cf0",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0ffd94d4-e155-4682-b8ad-c062f532e702",
      "documentation": "Create A Batch",
      "method": "post",
      "endpoint": "v1/batches",
      "responses": [
        {
          "uuid": "7e5378b8-d1cf-40b1-827c-78ac6ad59b79",
          "body": "{\n  \"batch_errors_url\": {\n    \"href\": \"\",\n    \"type\": \"\"\n  },\n  \"batch_id\": \"\",\n  \"batch_labels_url\": {\n    \"href\": \"\",\n    \"type\": \"\"\n  },\n  \"batch_notes\": \"Batch for morning shipment\",\n  \"batch_shipments_url\": {\n    \"href\": \"\",\n    \"type\": \"\"\n  },\n  \"completed\": 1,\n  \"count\": 2,\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"errors\": 2,\n  \"external_batch_id\": \"\",\n  \"form_download\": {\n    \"href\": \"\",\n    \"type\": \"\"\n  },\n  \"forms\": 3,\n  \"label_download\": {\n    \"href\": \"\",\n    \"pdf\": \"\",\n    \"png\": \"\",\n    \"zpl\": \"\"\n  },\n  \"label_format\": \"pdf\",\n  \"label_layout\": \"4x6\",\n  \"processed_at\": \"{{faker 'date.recent' 365}}\",\n  \"status\": \"\",\n  \"warnings\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The requested object creation was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9cac732f-b93e-4794-854c-b8c73ede2880",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b2fe92c7-98ea-4c8a-bbd8-8356afdb8556",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c67a580f-f03a-49f7-9cd4-5db27ef2a1d6",
      "documentation": "Get Batch By External ID",
      "method": "get",
      "endpoint": "v1/batches/external_batch_id/:external_batch_id",
      "responses": [
        {
          "uuid": "6ddb3585-d45b-4f2f-a483-ab932c6f5168",
          "body": "{\n  \"batch_errors_url\": {\n    \"href\": \"\",\n    \"type\": \"\"\n  },\n  \"batch_id\": \"\",\n  \"batch_labels_url\": {\n    \"href\": \"\",\n    \"type\": \"\"\n  },\n  \"batch_notes\": \"Batch for morning shipment\",\n  \"batch_shipments_url\": {\n    \"href\": \"\",\n    \"type\": \"\"\n  },\n  \"completed\": 1,\n  \"count\": 2,\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"errors\": 2,\n  \"external_batch_id\": \"\",\n  \"form_download\": {\n    \"href\": \"\",\n    \"type\": \"\"\n  },\n  \"forms\": 3,\n  \"label_download\": {\n    \"href\": \"\",\n    \"pdf\": \"\",\n    \"png\": \"\",\n    \"zpl\": \"\"\n  },\n  \"label_format\": \"pdf\",\n  \"label_layout\": \"4x6\",\n  \"processed_at\": \"{{faker 'date.recent' 365}}\",\n  \"status\": \"\",\n  \"warnings\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d39f8561-cdbb-4406-a870-fed43dc71e3b",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d5ad66fb-a3fb-4d40-892a-7b9033446b66",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bd19fcde-047d-444f-9792-c89e2cc0efe3",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4813f270-669e-4621-a93b-615802290b72",
      "documentation": "Delete Batch By Id",
      "method": "delete",
      "endpoint": "v1/batches/:batch_id",
      "responses": [
        {
          "uuid": "f2aa1953-b86c-4c8a-a034-8eef35e2e4b8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "The request was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c26c8990-ba90-4a26-a414-6d850572fbf9",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dd7010a8-89fa-479f-ad3c-b69c318641c1",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9db8e18d-68ba-46d0-846a-f270c13d1d5e",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "199e166e-f719-4e9f-958c-a36f437dafc6",
      "documentation": "Get Batch By ID",
      "method": "get",
      "endpoint": "v1/batches/:batch_id",
      "responses": [
        {
          "uuid": "44e9cbd7-95a0-4f5c-81c3-0558349525eb",
          "body": "{\n  \"batch_errors_url\": {\n    \"href\": \"\",\n    \"type\": \"\"\n  },\n  \"batch_id\": \"\",\n  \"batch_labels_url\": {\n    \"href\": \"\",\n    \"type\": \"\"\n  },\n  \"batch_notes\": \"Batch for morning shipment\",\n  \"batch_shipments_url\": {\n    \"href\": \"\",\n    \"type\": \"\"\n  },\n  \"completed\": 1,\n  \"count\": 2,\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"errors\": 2,\n  \"external_batch_id\": \"\",\n  \"form_download\": {\n    \"href\": \"\",\n    \"type\": \"\"\n  },\n  \"forms\": 3,\n  \"label_download\": {\n    \"href\": \"\",\n    \"pdf\": \"\",\n    \"png\": \"\",\n    \"zpl\": \"\"\n  },\n  \"label_format\": \"pdf\",\n  \"label_layout\": \"4x6\",\n  \"processed_at\": \"{{faker 'date.recent' 365}}\",\n  \"status\": \"\",\n  \"warnings\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d5c66e80-97d1-433f-b268-de19590b68df",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "716a7565-e5eb-4a54-b79e-fd06a112dd39",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a83f3079-3e8c-4ca8-9e95-a0b28e2648c6",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "69fcce85-40f5-4dd4-918d-5cd71425b87b",
      "documentation": "Update Batch By Id",
      "method": "put",
      "endpoint": "v1/batches/:batch_id",
      "responses": [
        {
          "uuid": "f9209999-165e-429b-b997-11e0a871602f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "The request was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6252d39b-fe72-449f-9706-9debfe8a9be9",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5a70d58f-a789-4a1c-b82f-993928c1e640",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "30177701-213b-4a68-b49e-83f6e0d20de0",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9757960b-4550-4e4e-a8aa-857fa85345cf",
      "documentation": "Add to a Batch",
      "method": "post",
      "endpoint": "v1/batches/:batch_id/add",
      "responses": [
        {
          "uuid": "73234816-a04d-4279-a3cd-a2240e15d8c1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "The request was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "545e8d09-faa6-496b-a175-c0da453f1783",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "775f2671-7692-45f0-9965-d8f5ffb49723",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ecd4834b-f559-4d9f-87d7-4cad560fe6ec",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8193ac27-c2c6-4598-b855-1612b345ac52",
      "documentation": "Get Batch Errors",
      "method": "get",
      "endpoint": "v1/batches/:batch_id/errors",
      "responses": [
        {
          "uuid": "2e116bdd-9ec2-4c64-ba7b-b8e14c9d2133",
          "body": "{\n  \"errors\": [],\n  \"links\": {\n    \"first\": {},\n    \"last\": {},\n    \"next\": {\n      \"href\": \"\",\n      \"type\": \"\"\n    },\n    \"prev\": {\n      \"href\": \"\",\n      \"type\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "870ad5b1-22f4-4faa-973a-ea58781ffc8c",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "14633205-3c60-41ce-b364-657eb2ba71bf",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "07dd7ec1-ff20-49c3-9912-2861fe043032",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8b6c2d5c-25b1-4231-859a-8a566264d9dc",
      "documentation": "Process Batch ID Labels",
      "method": "post",
      "endpoint": "v1/batches/:batch_id/process/labels",
      "responses": [
        {
          "uuid": "90a48838-668d-45cc-a6b0-b96727e6e5dc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "The request was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1169e915-147f-4ede-a784-e1abbc5ba085",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "43dd9357-d84f-45b6-a7da-e99b11db6958",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d1a937f7-896b-46bd-bdfd-95cade5140df",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7fd76034-d926-4191-a7c8-a8271b1ddc10",
      "documentation": "Remove From Batch",
      "method": "post",
      "endpoint": "v1/batches/:batch_id/remove",
      "responses": [
        {
          "uuid": "12490b9b-637c-4764-89d8-d430e27e18da",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "The request was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5f350b54-8577-479c-b84e-2539ce88f6da",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "79f45abd-5b9d-4e52-ae0e-d9a94c6dfd98",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b032925b-1c49-4516-b26e-18e852fc9328",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0b0df899-f6e1-4943-9c71-d1470c439a35",
      "documentation": "List Carriers",
      "method": "get",
      "endpoint": "v1/carriers",
      "responses": [
        {
          "uuid": "1055d799-da93-4e63-8e35-7faa42e13024",
          "body": "{\n  \"carriers\": [\n    {\n      \"account_number\": \"account_570827\",\n      \"balance\": 3799.52,\n      \"carrier_code\": \"\",\n      \"carrier_id\": \"\",\n      \"friendly_name\": \"Stamps.com\",\n      \"has_multi_package_supporting_services\": {{faker 'random.boolean'}},\n      \"nickname\": \"ShipEngine Account - Stamps.com\",\n      \"options\": [\n        {\n          \"default_value\": \"\",\n          \"description\": \"\",\n          \"name\": \"contains_alcohol\"\n        }\n      ],\n      \"packages\": [\n        {\n          \"description\": \"Packaging for laptops\",\n          \"dimensions\": {\n            \"height\": {{faker 'random.float'}},\n            \"length\": {{faker 'random.float'}},\n            \"unit\": \"inch\",\n            \"width\": {{faker 'random.float'}}\n          },\n          \"name\": \"laptop_box\",\n          \"package_code\": \"\",\n          \"package_id\": \"\"\n        }\n      ],\n      \"primary\": {{faker 'random.boolean'}},\n      \"requires_funded_amount\": {{faker 'random.boolean'}},\n      \"services\": [\n        {\n          \"carrier_code\": \"\",\n          \"carrier_id\": \"\",\n          \"domestic\": {{faker 'random.boolean'}},\n          \"international\": {{faker 'random.boolean'}},\n          \"is_multi_package_supported\": {{faker 'random.boolean'}},\n          \"name\": \"USPS First Class Mail\",\n          \"service_code\": \"usps_media_mail\"\n        }\n      ],\n      \"supports_label_messages\": {{faker 'random.boolean'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fb3d7bfe-0a9f-4d36-9d76-e7bf1532b1bd",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "32d1fe4e-b340-457d-88fb-17f8326c5df5",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2a5acd57-82c9-4aae-a0ef-c4fb29a1e137",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0a8cd88d-a6fe-448d-850c-5127c65971c7",
      "documentation": "Get Carrier By ID",
      "method": "get",
      "endpoint": "v1/carriers/:carrier_id",
      "responses": [
        {
          "uuid": "978d1b82-59ad-4410-86be-483c6f22094c",
          "body": "{\n  \"account_number\": \"account_570827\",\n  \"balance\": 3799.52,\n  \"carrier_code\": \"\",\n  \"carrier_id\": \"\",\n  \"friendly_name\": \"Stamps.com\",\n  \"has_multi_package_supporting_services\": {{faker 'random.boolean'}},\n  \"nickname\": \"ShipEngine Account - Stamps.com\",\n  \"options\": [\n    {\n      \"default_value\": \"\",\n      \"description\": \"\",\n      \"name\": \"contains_alcohol\"\n    }\n  ],\n  \"packages\": [\n    {\n      \"description\": \"Packaging for laptops\",\n      \"dimensions\": {\n        \"height\": {{faker 'random.float'}},\n        \"length\": {{faker 'random.float'}},\n        \"unit\": \"inch\",\n        \"width\": {{faker 'random.float'}}\n      },\n      \"name\": \"laptop_box\",\n      \"package_code\": \"\",\n      \"package_id\": \"\"\n    }\n  ],\n  \"primary\": {{faker 'random.boolean'}},\n  \"requires_funded_amount\": {{faker 'random.boolean'}},\n  \"services\": [\n    {\n      \"carrier_code\": \"\",\n      \"carrier_id\": \"\",\n      \"domestic\": {{faker 'random.boolean'}},\n      \"international\": {{faker 'random.boolean'}},\n      \"is_multi_package_supported\": {{faker 'random.boolean'}},\n      \"name\": \"USPS First Class Mail\",\n      \"service_code\": \"usps_media_mail\"\n    }\n  ],\n  \"supports_label_messages\": {{faker 'random.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "efa9ccb5-d28d-4738-93ec-6c0eb196cd82",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "36d58404-9dc5-490e-9596-17747b632b54",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fd335c1c-efb2-45b3-9cf8-073b5d05ea56",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "71628659-f3de-4037-be54-924f033a647a",
      "documentation": "Add Funds To Carrier",
      "method": "put",
      "endpoint": "v1/carriers/:carrier_id/add_funds",
      "responses": [
        {
          "uuid": "c97e3a2d-ad54-4cab-ac0d-bbdf08c0e0ae",
          "body": "{\n  \"balance\": {\n    \"amount\": {{faker 'random.float'}},\n    \"currency\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2182e863-d745-44b6-ab30-f936da8e59f2",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "21929ba0-46b4-4f75-b240-7ac78a999574",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "244bae94-a47f-443b-b879-82e093ec04fa",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c00bee0e-a887-42b8-9f7a-e220499fe28b",
      "documentation": "Get Carrier Options",
      "method": "get",
      "endpoint": "v1/carriers/:carrier_id/options",
      "responses": [
        {
          "uuid": "7e2364a4-5768-41c1-95da-455725d309fc",
          "body": "{\n  \"options\": [\n    {\n      \"default_value\": \"\",\n      \"description\": \"\",\n      \"name\": \"contains_alcohol\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8676ec66-0c18-4f91-bd43-98b0afe235e2",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eb90821c-c21e-453b-8e85-71c77aa23569",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bc228e61-41d3-4859-b242-af2c1bb7ed9a",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "70310dfe-c774-4790-865c-1058b5c79e0a",
      "documentation": "List Carrier Package Types",
      "method": "get",
      "endpoint": "v1/carriers/:carrier_id/packages",
      "responses": [
        {
          "uuid": "1a465d44-b66a-412e-b952-367ac60246ec",
          "body": "{\n  \"packages\": [\n    {\n      \"description\": \"Packaging for laptops\",\n      \"dimensions\": {\n        \"height\": {{faker 'random.float'}},\n        \"length\": {{faker 'random.float'}},\n        \"unit\": \"inch\",\n        \"width\": {{faker 'random.float'}}\n      },\n      \"name\": \"laptop_box\",\n      \"package_code\": \"\",\n      \"package_id\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b9519d5b-fc24-4484-a33b-04554e7376a3",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "484f12ad-4ae3-4b50-9435-722026f2cc02",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7f42af8b-52cb-4aee-9191-df6ef3a8ab83",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1e196e91-d08f-49c5-b7a0-8eee81228fdc",
      "documentation": "List Carrier Services",
      "method": "get",
      "endpoint": "v1/carriers/:carrier_id/services",
      "responses": [
        {
          "uuid": "7f4ac933-eef9-41e5-90a6-41d56e4af494",
          "body": "{\n  \"services\": [\n    {\n      \"carrier_code\": \"\",\n      \"carrier_id\": \"\",\n      \"domestic\": {{faker 'random.boolean'}},\n      \"international\": {{faker 'random.boolean'}},\n      \"is_multi_package_supported\": {{faker 'random.boolean'}},\n      \"name\": \"USPS First Class Mail\",\n      \"service_code\": \"usps_media_mail\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cc62c502-8da4-448e-93dc-19f53cd4fdc5",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f786bf57-40d7-48fc-836b-8e6aaed20f69",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6d81644d-2bab-4817-8275-9fdd0b9816f1",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c86b17d8-f14e-4675-90cc-4f37c53fde4d",
      "documentation": "Connect a carrier account",
      "method": "post",
      "endpoint": "v1/connections/carriers/:carrier_name",
      "responses": [
        {
          "uuid": "496ffb8f-fe41-4e5e-93f6-5880a7e28bc0",
          "body": "{\n  \"carrier_id\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7c8a5c89-e7f2-433e-849d-09b8b5d401bc",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "139d5d36-0d66-4418-8622-ebcc273d98bb",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1260b74b-dd0e-49c3-93aa-946ff9b645e9",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ed261af4-dd91-4129-b482-3b4f9967d2d4",
      "documentation": "Disconnect a carrier",
      "method": "delete",
      "endpoint": "v1/connections/carriers/:carrier_name/:carrier_id",
      "responses": [
        {
          "uuid": "836282a7-3085-41d9-85c6-5e4a116a7a6a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "The request was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4f40e737-da1f-476e-8eca-87f85c0a03d8",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "75e8fb3e-9e7d-42ac-8a4e-191e5cd8eea1",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "534f6baf-e890-4eaa-99a9-8fd0f7d4568c",
      "documentation": "Get carrier settings",
      "method": "get",
      "endpoint": "v1/connections/carriers/:carrier_name/:carrier_id/settings",
      "responses": [
        {
          "uuid": "986a8d3a-cc65-4686-a6d4-1996e4ee5f6c",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3baa1891-091d-4cbb-bebc-5e2249dc7496",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "75ed4195-8df7-4140-b331-36280259856e",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5d5da7b6-8fb9-4d5f-8676-3856a5867f74",
      "documentation": "Update carrier settings",
      "method": "put",
      "endpoint": "v1/connections/carriers/:carrier_name/:carrier_id/settings",
      "responses": [
        {
          "uuid": "0aa50b43-6b36-4a1f-b38f-b7c743dc582b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "The request was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9955a947-9104-4a21-986a-2f2e619c3b41",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6c243866-159d-4ac2-b0d5-e1d9070d4ff0",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2c7d7cf8-9920-4358-8378-786f66422d40",
      "documentation": "Disconnect a Shipsurance Account",
      "method": "delete",
      "endpoint": "v1/connections/insurance/shipsurance",
      "responses": [
        {
          "uuid": "a46fe725-b5a8-4362-b944-8515543f76f3",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d6d93448-c757-4ab4-97a0-8a8413fe233c",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0489c0c1-79cb-4e06-a86a-36b8a007f7f3",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8279f35a-60ee-4c02-a13e-4882edbab5ff",
      "documentation": "Connect a Shipsurance Account",
      "method": "post",
      "endpoint": "v1/connections/insurance/shipsurance",
      "responses": [
        {
          "uuid": "923129d8-8e31-4381-8ddf-f7adbe029a7f",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ab705d42-d215-4cea-af19-33e2e8675677",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7e881ee1-207d-4e33-9b2a-2a857cf101d7",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ae279296-9b1d-4b7e-b39e-0775d7cbf74d",
      "documentation": "Download File",
      "method": "get",
      "endpoint": "v1/downloads/:dir/:subdir/:filename",
      "responses": [
        {
          "uuid": "589c040a-46de-4b4a-9020-178283721617",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/pdf"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f5a1611a-4db5-45f7-9bed-07f4182ee670",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e80742df-f78d-4c7c-9df3-3f93225e606e",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fcea6856-a891-4814-862b-71610494c8db",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a70a5b88-37b9-4d1b-9883-2d27b8b13385",
      "documentation": "List Webhooks",
      "method": "get",
      "endpoint": "v1/environment/webhooks",
      "responses": [
        {
          "uuid": "b3c05b2b-0e89-4ccf-b5b9-f8327378e4a2",
          "body": "[\n  {\n    \"event\": \"\",\n    \"url\": \"https://[YOUR ENDPOINT ID].x.requestbin.com\",\n    \"webhook_id\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5d1dba03-833f-44e6-ac0c-f144f14928ee",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e5c656b8-1f12-431a-be6d-34840b4c6030",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4a9d0f20-f858-4a81-b00b-878a6273e164",
      "documentation": "Create a Webhook",
      "method": "post",
      "endpoint": "v1/environment/webhooks",
      "responses": [
        {
          "uuid": "0e735a9f-00a8-4b97-84a4-a291a3c4c735",
          "body": "{\n  \"event\": \"\",\n  \"url\": \"https://[YOUR ENDPOINT ID].x.requestbin.com\",\n  \"webhook_id\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9e159838-cad2-45f7-a8bb-3121f4fc6e3f",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ba300512-c070-47a1-bd03-267d1ad7a21d",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 409,
          "label": "The request conflicts with an existing resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0ea20cb6-575f-4e07-8a0f-d66fb023d4df",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "adc232aa-bde6-4571-8e4a-4a4c39fec7e8",
      "documentation": "Delete Webhook By ID",
      "method": "delete",
      "endpoint": "v1/environment/webhooks/:webhook_id",
      "responses": [
        {
          "uuid": "81c06923-f4cc-40b3-8dbf-fb23b67e51b3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "The request was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "72fc6182-b879-4ed9-957a-c34c12c23040",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9c208879-0a5b-427a-86a0-0295f611d934",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "02f9cd04-07e7-43cb-9fa8-e93955ae671a",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6fd0f06a-f80d-488d-915f-834defab0502",
      "documentation": "Get Webhook By ID",
      "method": "get",
      "endpoint": "v1/environment/webhooks/:webhook_id",
      "responses": [
        {
          "uuid": "344e1802-439e-4f75-acf9-56f9f43585ac",
          "body": "{\n  \"event\": \"\",\n  \"url\": \"https://[YOUR ENDPOINT ID].x.requestbin.com\",\n  \"webhook_id\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4998e48f-cad2-4523-8c4c-86db8d992286",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f1a05955-86cc-4bb2-b723-59b3a241a0a7",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c3be35d7-e4fb-47d3-8c19-aa2eba43dfeb",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "86edd175-baa1-4459-8ca0-ae345838c4d9",
      "documentation": "Update a Webhook",
      "method": "put",
      "endpoint": "v1/environment/webhooks/:webhook_id",
      "responses": [
        {
          "uuid": "81bfaa4e-8421-4bc2-b4bc-e784a5705ba8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "The request was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f05a623c-9d3d-49d2-b30f-d870bd9ca0d4",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dce2c120-5574-4a45-9964-b228b70cccbf",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c8b410f8-fce3-4656-acd3-64bf2ba95e3e",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f45165cd-b2ab-4c7d-9d4a-f6f89a0ed1d7",
      "documentation": "Add Funds To Insurance",
      "method": "patch",
      "endpoint": "v1/insurance/shipsurance/add_funds",
      "responses": [
        {
          "uuid": "283a0184-e300-4d2a-b5a4-3850c2770d16",
          "body": "{\n  \"amount\": {{faker 'random.float'}},\n  \"currency\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7b1352bc-f19e-4d84-a946-0162701525af",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "070d64ae-5761-4187-a777-ec9c72a0c982",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fa7f8cd9-b9c0-4586-89c1-b3c2d1013534",
      "documentation": "Get Insurance Funds Balance",
      "method": "get",
      "endpoint": "v1/insurance/shipsurance/balance",
      "responses": [
        {
          "uuid": "d70eab46-c556-4252-aa45-77f0df7d812b",
          "body": "{\n  \"amount\": {{faker 'random.float'}},\n  \"currency\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "56141392-bdcf-448e-8d7b-3bd89fcf9413",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "52c45043-1f39-4d32-b2e0-659bb8065e06",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c874c7bd-3fc8-412d-89e0-f587b9ae7c5c",
      "documentation": "List labels",
      "method": "get",
      "endpoint": "v1/labels",
      "responses": [
        {
          "uuid": "b5f715cf-3488-4c53-be0d-a049d47c4c0e",
          "body": "{\n  \"links\": {\n    \"first\": {},\n    \"last\": {},\n    \"next\": {\n      \"href\": \"\",\n      \"type\": \"\"\n    },\n    \"prev\": {\n      \"href\": \"\",\n      \"type\": \"\"\n    }\n  },\n  \"page\": 1,\n  \"pages\": 4,\n  \"total\": 2750\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The response includes a `labels` array containing a page of results (as determined by the `page_size` query parameter).  It also includes other useful information, such as the total number of labels that match the query criteria, the number of pages of results, and the URLs of the first, last, next, and previous pages of results.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6599a0bb-d2d4-445c-b2c7-d492c235515f",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ec7a2bb2-7a66-4d9d-9fb2-b0778e1cd140",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4e1013c1-21fb-4d28-a168-8a3854738a96",
      "documentation": "Purchase Label",
      "method": "post",
      "endpoint": "v1/labels",
      "responses": [
        {
          "uuid": "297926a3-46c1-4023-a251-b8ce70b94780",
          "body": "{\n  \"batch_id\": \"\",\n  \"carrier_code\": \"\",\n  \"carrier_id\": \"\",\n  \"charge_event\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"form_download\": {},\n  \"insurance_claim\": {},\n  \"insurance_cost\": {\n    \"amount\": {{faker 'random.float'}},\n    \"currency\": \"\"\n  },\n  \"is_international\": {{faker 'random.boolean'}},\n  \"is_return_label\": {{faker 'random.boolean'}},\n  \"label_download\": {\n    \"href\": \"\",\n    \"pdf\": \"\",\n    \"png\": \"\",\n    \"zpl\": \"\"\n  },\n  \"label_download_type\": \"url\",\n  \"label_format\": \"pdf\",\n  \"label_id\": \"\",\n  \"label_image_id\": \"\",\n  \"label_layout\": \"4x6\",\n  \"outbound_label_id\": \"\",\n  \"package_code\": \"\",\n  \"packages\": [\n    {\n      \"dimensions\": {\n        \"height\": {{faker 'random.float'}},\n        \"length\": {{faker 'random.float'}},\n        \"unit\": \"inch\",\n        \"width\": {{faker 'random.float'}}\n      },\n      \"external_package_id\": \"\",\n      \"insured_value\": [\n        {\n          \"amount\": 0,\n          \"currency\": \"usd\"\n        }\n      ],\n      \"label_messages\": {\n        \"reference1\": \"\",\n        \"reference2\": \"\",\n        \"reference3\": \"\"\n      },\n      \"package_code\": \"\",\n      \"tracking_number\": \"\",\n      \"weight\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'random.float'}}\n      }\n    }\n  ],\n  \"rma_number\": \"\",\n  \"service_code\": \"\",\n  \"ship_date\": \"{{faker 'date.recent' 365}}\",\n  \"shipment\": {},\n  \"shipment_cost\": {\n    \"amount\": {{faker 'random.float'}},\n    \"currency\": \"\"\n  },\n  \"shipment_id\": \"\",\n  \"status\": \"\",\n  \"test_label\": {{faker 'random.boolean'}},\n  \"trackable\": {{faker 'random.boolean'}},\n  \"tracking_number\": \"782758401696\",\n  \"tracking_status\": \"\",\n  \"validate_address\": \"validate_and_clean\",\n  \"voided\": {{faker 'random.boolean'}},\n  \"voided_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The requested object creation was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "62b2ee42-d5dc-44e5-bc30-acf27ab7ea65",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f2e79fdd-4ce5-4212-b607-11c8a8ed053b",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "215eeeca-541b-47f4-996c-9e36a4189917",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bab022a5-f5e0-467c-a587-4a009d17a8a0",
      "documentation": "Get Label By External Shipment ID",
      "method": "get",
      "endpoint": "v1/labels/external_shipment_id/:external_shipment_id",
      "responses": [
        {
          "uuid": "b62245ce-baff-4777-bab3-a8a45ccb2022",
          "body": "{\n  \"batch_id\": \"\",\n  \"carrier_code\": \"\",\n  \"carrier_id\": \"\",\n  \"charge_event\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"form_download\": {},\n  \"insurance_claim\": {},\n  \"insurance_cost\": {\n    \"amount\": {{faker 'random.float'}},\n    \"currency\": \"\"\n  },\n  \"is_international\": {{faker 'random.boolean'}},\n  \"is_return_label\": {{faker 'random.boolean'}},\n  \"label_download\": {\n    \"href\": \"\",\n    \"pdf\": \"\",\n    \"png\": \"\",\n    \"zpl\": \"\"\n  },\n  \"label_download_type\": \"url\",\n  \"label_format\": \"pdf\",\n  \"label_id\": \"\",\n  \"label_image_id\": \"\",\n  \"label_layout\": \"4x6\",\n  \"outbound_label_id\": \"\",\n  \"package_code\": \"\",\n  \"packages\": [\n    {\n      \"dimensions\": {\n        \"height\": {{faker 'random.float'}},\n        \"length\": {{faker 'random.float'}},\n        \"unit\": \"inch\",\n        \"width\": {{faker 'random.float'}}\n      },\n      \"external_package_id\": \"\",\n      \"insured_value\": [\n        {\n          \"amount\": 0,\n          \"currency\": \"usd\"\n        }\n      ],\n      \"label_messages\": {\n        \"reference1\": \"\",\n        \"reference2\": \"\",\n        \"reference3\": \"\"\n      },\n      \"package_code\": \"\",\n      \"tracking_number\": \"\",\n      \"weight\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'random.float'}}\n      }\n    }\n  ],\n  \"rma_number\": \"\",\n  \"service_code\": \"\",\n  \"ship_date\": \"{{faker 'date.recent' 365}}\",\n  \"shipment\": {},\n  \"shipment_cost\": {\n    \"amount\": {{faker 'random.float'}},\n    \"currency\": \"\"\n  },\n  \"shipment_id\": \"\",\n  \"status\": \"\",\n  \"test_label\": {{faker 'random.boolean'}},\n  \"trackable\": {{faker 'random.boolean'}},\n  \"tracking_number\": \"782758401696\",\n  \"tracking_status\": \"\",\n  \"validate_address\": \"validate_and_clean\",\n  \"voided\": {{faker 'random.boolean'}},\n  \"voided_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The requested object creation was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cb2e3aff-9668-44d9-a388-579a080c4a76",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dd1f9046-894c-49c2-8f7b-6a5282f1371a",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "20f0f830-af13-4c95-ad41-829ae35072ed",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e61d4512-f506-4ffa-b745-f884d66295c6",
      "documentation": "Purchase Label with Rate ID",
      "method": "post",
      "endpoint": "v1/labels/rates/:rate_id",
      "responses": [
        {
          "uuid": "f478e1ac-bef0-432a-bb31-effb4cfdc9da",
          "body": "{\n  \"batch_id\": \"\",\n  \"carrier_code\": \"\",\n  \"carrier_id\": \"\",\n  \"charge_event\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"form_download\": {},\n  \"insurance_claim\": {},\n  \"insurance_cost\": {\n    \"amount\": {{faker 'random.float'}},\n    \"currency\": \"\"\n  },\n  \"is_international\": {{faker 'random.boolean'}},\n  \"is_return_label\": {{faker 'random.boolean'}},\n  \"label_download\": {\n    \"href\": \"\",\n    \"pdf\": \"\",\n    \"png\": \"\",\n    \"zpl\": \"\"\n  },\n  \"label_download_type\": \"url\",\n  \"label_format\": \"pdf\",\n  \"label_id\": \"\",\n  \"label_image_id\": \"\",\n  \"label_layout\": \"4x6\",\n  \"outbound_label_id\": \"\",\n  \"package_code\": \"\",\n  \"packages\": [\n    {\n      \"dimensions\": {\n        \"height\": {{faker 'random.float'}},\n        \"length\": {{faker 'random.float'}},\n        \"unit\": \"inch\",\n        \"width\": {{faker 'random.float'}}\n      },\n      \"external_package_id\": \"\",\n      \"insured_value\": [\n        {\n          \"amount\": 0,\n          \"currency\": \"usd\"\n        }\n      ],\n      \"label_messages\": {\n        \"reference1\": \"\",\n        \"reference2\": \"\",\n        \"reference3\": \"\"\n      },\n      \"package_code\": \"\",\n      \"tracking_number\": \"\",\n      \"weight\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'random.float'}}\n      }\n    }\n  ],\n  \"rma_number\": \"\",\n  \"service_code\": \"\",\n  \"ship_date\": \"{{faker 'date.recent' 365}}\",\n  \"shipment\": {},\n  \"shipment_cost\": {\n    \"amount\": {{faker 'random.float'}},\n    \"currency\": \"\"\n  },\n  \"shipment_id\": \"\",\n  \"status\": \"\",\n  \"test_label\": {{faker 'random.boolean'}},\n  \"trackable\": {{faker 'random.boolean'}},\n  \"tracking_number\": \"782758401696\",\n  \"tracking_status\": \"\",\n  \"validate_address\": \"validate_and_clean\",\n  \"voided\": {{faker 'random.boolean'}},\n  \"voided_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The requested object creation was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "42efbb52-2bdd-439b-9546-0b452f996986",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1ed77643-5d05-494c-b6e8-ea5bf216e13f",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "43d3293c-d5b1-40bf-ba24-52786bcd6ae5",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "09a328d5-3ba0-4ef2-a5e2-2120363cc175",
      "documentation": "Purchase Label with Shipment ID",
      "method": "post",
      "endpoint": "v1/labels/shipment/:shipment_id",
      "responses": [
        {
          "uuid": "e9a4475c-4ddf-4915-9f6b-af23e63453e9",
          "body": "{\n  \"batch_id\": \"\",\n  \"carrier_code\": \"\",\n  \"carrier_id\": \"\",\n  \"charge_event\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"form_download\": {},\n  \"insurance_claim\": {},\n  \"insurance_cost\": {\n    \"amount\": {{faker 'random.float'}},\n    \"currency\": \"\"\n  },\n  \"is_international\": {{faker 'random.boolean'}},\n  \"is_return_label\": {{faker 'random.boolean'}},\n  \"label_download\": {\n    \"href\": \"\",\n    \"pdf\": \"\",\n    \"png\": \"\",\n    \"zpl\": \"\"\n  },\n  \"label_download_type\": \"url\",\n  \"label_format\": \"pdf\",\n  \"label_id\": \"\",\n  \"label_image_id\": \"\",\n  \"label_layout\": \"4x6\",\n  \"outbound_label_id\": \"\",\n  \"package_code\": \"\",\n  \"packages\": [\n    {\n      \"dimensions\": {\n        \"height\": {{faker 'random.float'}},\n        \"length\": {{faker 'random.float'}},\n        \"unit\": \"inch\",\n        \"width\": {{faker 'random.float'}}\n      },\n      \"external_package_id\": \"\",\n      \"insured_value\": [\n        {\n          \"amount\": 0,\n          \"currency\": \"usd\"\n        }\n      ],\n      \"label_messages\": {\n        \"reference1\": \"\",\n        \"reference2\": \"\",\n        \"reference3\": \"\"\n      },\n      \"package_code\": \"\",\n      \"tracking_number\": \"\",\n      \"weight\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'random.float'}}\n      }\n    }\n  ],\n  \"rma_number\": \"\",\n  \"service_code\": \"\",\n  \"ship_date\": \"{{faker 'date.recent' 365}}\",\n  \"shipment\": {},\n  \"shipment_cost\": {\n    \"amount\": {{faker 'random.float'}},\n    \"currency\": \"\"\n  },\n  \"shipment_id\": \"\",\n  \"status\": \"\",\n  \"test_label\": {{faker 'random.boolean'}},\n  \"trackable\": {{faker 'random.boolean'}},\n  \"tracking_number\": \"782758401696\",\n  \"tracking_status\": \"\",\n  \"validate_address\": \"validate_and_clean\",\n  \"voided\": {{faker 'random.boolean'}},\n  \"voided_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The requested object creation was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "29a97b40-a23a-4bf7-881f-807fa9d1c6d9",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8f3b4242-1e7d-473c-aeaa-25b340f21700",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "121d6f17-6bd3-4fe1-a16c-679a5e952b52",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3e50b034-4ce5-4034-84bf-76e3bfb54843",
      "documentation": "Get Label By ID",
      "method": "get",
      "endpoint": "v1/labels/:label_id",
      "responses": [
        {
          "uuid": "9d3ed27a-0306-40cf-bb71-feaa7d2fee2c",
          "body": "{\n  \"batch_id\": \"\",\n  \"carrier_code\": \"\",\n  \"carrier_id\": \"\",\n  \"charge_event\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"form_download\": {},\n  \"insurance_claim\": {},\n  \"insurance_cost\": {\n    \"amount\": {{faker 'random.float'}},\n    \"currency\": \"\"\n  },\n  \"is_international\": {{faker 'random.boolean'}},\n  \"is_return_label\": {{faker 'random.boolean'}},\n  \"label_download\": {\n    \"href\": \"\",\n    \"pdf\": \"\",\n    \"png\": \"\",\n    \"zpl\": \"\"\n  },\n  \"label_download_type\": \"url\",\n  \"label_format\": \"pdf\",\n  \"label_id\": \"\",\n  \"label_image_id\": \"\",\n  \"label_layout\": \"4x6\",\n  \"outbound_label_id\": \"\",\n  \"package_code\": \"\",\n  \"packages\": [\n    {\n      \"dimensions\": {\n        \"height\": {{faker 'random.float'}},\n        \"length\": {{faker 'random.float'}},\n        \"unit\": \"inch\",\n        \"width\": {{faker 'random.float'}}\n      },\n      \"external_package_id\": \"\",\n      \"insured_value\": [\n        {\n          \"amount\": 0,\n          \"currency\": \"usd\"\n        }\n      ],\n      \"label_messages\": {\n        \"reference1\": \"\",\n        \"reference2\": \"\",\n        \"reference3\": \"\"\n      },\n      \"package_code\": \"\",\n      \"tracking_number\": \"\",\n      \"weight\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'random.float'}}\n      }\n    }\n  ],\n  \"rma_number\": \"\",\n  \"service_code\": \"\",\n  \"ship_date\": \"{{faker 'date.recent' 365}}\",\n  \"shipment\": {},\n  \"shipment_cost\": {\n    \"amount\": {{faker 'random.float'}},\n    \"currency\": \"\"\n  },\n  \"shipment_id\": \"\",\n  \"status\": \"\",\n  \"test_label\": {{faker 'random.boolean'}},\n  \"trackable\": {{faker 'random.boolean'}},\n  \"tracking_number\": \"782758401696\",\n  \"tracking_status\": \"\",\n  \"validate_address\": \"validate_and_clean\",\n  \"voided\": {{faker 'random.boolean'}},\n  \"voided_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4223fa21-e778-4ba6-8509-bdf12b99957c",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5c0192b4-1dfb-4cd3-bf23-4191dc2fd807",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e876aa21-d741-43dd-8788-92a1f61c4ae9",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0a256854-b769-4c41-8b44-62da36b8ea15",
      "documentation": "Create a return label",
      "method": "post",
      "endpoint": "v1/labels/:label_id/return",
      "responses": [
        {
          "uuid": "ef173212-6a09-42f0-ac2e-eb419dc28b8c",
          "body": "{\n  \"batch_id\": \"\",\n  \"carrier_code\": \"\",\n  \"carrier_id\": \"\",\n  \"charge_event\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"form_download\": {},\n  \"insurance_claim\": {},\n  \"insurance_cost\": {\n    \"amount\": {{faker 'random.float'}},\n    \"currency\": \"\"\n  },\n  \"is_international\": {{faker 'random.boolean'}},\n  \"is_return_label\": {{faker 'random.boolean'}},\n  \"label_download\": {\n    \"href\": \"\",\n    \"pdf\": \"\",\n    \"png\": \"\",\n    \"zpl\": \"\"\n  },\n  \"label_download_type\": \"url\",\n  \"label_format\": \"pdf\",\n  \"label_id\": \"\",\n  \"label_image_id\": \"\",\n  \"label_layout\": \"4x6\",\n  \"outbound_label_id\": \"\",\n  \"package_code\": \"\",\n  \"packages\": [\n    {\n      \"dimensions\": {\n        \"height\": {{faker 'random.float'}},\n        \"length\": {{faker 'random.float'}},\n        \"unit\": \"inch\",\n        \"width\": {{faker 'random.float'}}\n      },\n      \"external_package_id\": \"\",\n      \"insured_value\": [\n        {\n          \"amount\": 0,\n          \"currency\": \"usd\"\n        }\n      ],\n      \"label_messages\": {\n        \"reference1\": \"\",\n        \"reference2\": \"\",\n        \"reference3\": \"\"\n      },\n      \"package_code\": \"\",\n      \"tracking_number\": \"\",\n      \"weight\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'random.float'}}\n      }\n    }\n  ],\n  \"rma_number\": \"\",\n  \"service_code\": \"\",\n  \"ship_date\": \"{{faker 'date.recent' 365}}\",\n  \"shipment\": {},\n  \"shipment_cost\": {\n    \"amount\": {{faker 'random.float'}},\n    \"currency\": \"\"\n  },\n  \"shipment_id\": \"\",\n  \"status\": \"\",\n  \"test_label\": {{faker 'random.boolean'}},\n  \"trackable\": {{faker 'random.boolean'}},\n  \"tracking_number\": \"782758401696\",\n  \"tracking_status\": \"\",\n  \"validate_address\": \"validate_and_clean\",\n  \"voided\": {{faker 'random.boolean'}},\n  \"voided_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e1c12270-5e8f-408d-9056-d09d657e46fd",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1c8e75ff-f157-4825-8899-0e2410d9a31c",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6c288506-fd89-4109-a91b-c3ebb4dff32e",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4470997e-5053-4957-9c40-0a572913c8e7",
      "documentation": "Get Label Tracking Information",
      "method": "get",
      "endpoint": "v1/labels/:label_id/track",
      "responses": [
        {
          "uuid": "1819e8d5-ec9b-4d5f-90bf-fdaa239b0450",
          "body": "{\n  \"actual_delivery_date\": \"{{faker 'date.recent' 365}}\",\n  \"carrier_status_code\": 1,\n  \"carrier_status_description\": \"Your item was delivered in or at the mailbox at 9:10 am on March\",\n  \"estimated_delivery_date\": \"{{faker 'date.recent' 365}}\",\n  \"events\": [\n    {\n      \"carrier_occurred_at\": \"{{faker 'date.recent' 365}}\",\n      \"city_locality\": \"AUSTIN\",\n      \"company_name\": \"Stamps.com\",\n      \"country_code\": \"\",\n      \"description\": \"Delivered, In/At Mailbox\",\n      \"event_code\": \"\",\n      \"latitude\": {{faker 'random.float'}},\n      \"longitude\": {{faker 'random.float'}},\n      \"occurred_at\": \"{{faker 'date.recent' 365}}\",\n      \"postal_code\": 78756,\n      \"signer\": \"\",\n      \"state_province\": \"TX\"\n    }\n  ],\n  \"exception_description\": \"\",\n  \"ship_date\": \"{{faker 'date.recent' 365}}\",\n  \"status_code\": \"DE\",\n  \"status_description\": \"Delivered\",\n  \"tracking_number\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3d9c0063-3e2a-4290-8f4a-3e325771ce9f",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9797afae-a694-4cba-8031-c8ec651fed1f",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "80e55fb5-6f9d-49af-b49e-1d780312f6bc",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "60a9af1e-cb8a-4374-a4be-e6c3b84d58bb",
      "documentation": "Void a Label By ID",
      "method": "put",
      "endpoint": "v1/labels/:label_id/void",
      "responses": [
        {
          "uuid": "8589f29a-00d0-4975-a640-aedc537933c0",
          "body": "{\n  \"approved\": {{faker 'random.boolean'}},\n  \"message\": \"Request for refund submitted.  This label has been voided.\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c131f944-eb3d-4f66-af2e-21faaebb90ef",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d0ce974f-fb2d-45ec-86cd-6e03f204ff0b",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9621a5c7-51cc-44b6-a1e3-dcc18cd64d57",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2fa1012e-c31b-4221-9d8e-8d83298b13bd",
      "documentation": "List Manifests",
      "method": "get",
      "endpoint": "v1/manifests",
      "responses": [
        {
          "uuid": "2aaa815e-0532-47a4-8c54-6f71b938ff54",
          "body": "{\n  \"links\": {\n    \"first\": {},\n    \"last\": {},\n    \"next\": {\n      \"href\": \"\",\n      \"type\": \"\"\n    },\n    \"prev\": {\n      \"href\": \"\",\n      \"type\": \"\"\n    }\n  },\n  \"manifests\": [],\n  \"page\": 3,\n  \"pages\": 4,\n  \"total\": 3\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "59d5ebfb-2cd4-43ea-bef1-f52d9b2bd47a",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "74fdb799-ed72-416c-ba3f-cd25cbaae5db",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "91bdd3ae-7d6f-4633-bbba-8e2b4f733b9c",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3388527e-d67f-4542-be34-5585b624684f",
      "documentation": "Create Manifest",
      "method": "post",
      "endpoint": "v1/manifests",
      "responses": [
        {
          "uuid": "7e777d6b-ad5b-4cf4-869f-425825ab828b",
          "body": "{\n  \"manifests\": [\n    {\n      \"carrier_id\": \"\",\n      \"created_at\": \"2019-07-12T13:37:39.050Z\",\n      \"form_id\": \"\",\n      \"manifest_download\": {\n        \"href\": \"\"\n      },\n      \"manifest_id\": \"\",\n      \"ship_date\": \"2019-07-12T13:37:39.050Z\",\n      \"shipments\": 100,\n      \"submission_id\": 9.475711899564878e+21,\n      \"warehouse_id\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "36b6b858-15f1-4708-9609-2c32eb35d193",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a5f4800c-3596-479c-867f-9d262d3286ee",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8cd9b716-6ff3-43f7-bc68-791721419a26",
      "documentation": "Get Manifest By Id",
      "method": "get",
      "endpoint": "v1/manifests/:manifest_id",
      "responses": [
        {
          "uuid": "4a9e33f2-6036-4bea-aff5-8fe90d882130",
          "body": "{\n  \"carrier_id\": \"\",\n  \"created_at\": \"2019-07-12T13:37:39.050Z\",\n  \"form_id\": \"\",\n  \"manifest_download\": {\n    \"href\": \"\"\n  },\n  \"manifest_id\": \"\",\n  \"ship_date\": \"2019-07-12T13:37:39.050Z\",\n  \"shipments\": 100,\n  \"submission_id\": 9.475711899564878e+21,\n  \"warehouse_id\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c386aa28-0d71-4bab-9534-2e06088b3dfd",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "88ba2b5b-38fe-4d8e-8743-be8a43bae54d",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1743b023-307f-4af1-82ae-4d83a4d3b42e",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "95643ad6-903d-4c09-9f7b-22dc11cd2297",
      "documentation": "List Custom Package Types",
      "method": "get",
      "endpoint": "v1/packages",
      "responses": [
        {
          "uuid": "9ac3507a-986a-47fa-8a53-5b0a2af0d586",
          "body": "{\n  \"packages\": [\n    {\n      \"description\": \"Packaging for laptops\",\n      \"dimensions\": {\n        \"height\": {{faker 'random.float'}},\n        \"length\": {{faker 'random.float'}},\n        \"unit\": \"inch\",\n        \"width\": {{faker 'random.float'}}\n      },\n      \"name\": \"laptop_box\",\n      \"package_code\": \"\",\n      \"package_id\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "48884b55-b128-4002-a301-88a138b67653",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ecc1d2a8-f354-4eee-a1d1-f257fd5f3a28",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bec70020-c33f-487e-afa5-647bd2b7947f",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "13a72159-08ab-4ad9-b5cb-fda37b2a5e89",
      "documentation": "Create Custom Package Type",
      "method": "post",
      "endpoint": "v1/packages",
      "responses": [
        {
          "uuid": "1ec57e17-c0d2-4478-a8cc-cf02cd6dcc95",
          "body": "{\n  \"description\": \"Packaging for laptops\",\n  \"dimensions\": {\n    \"height\": {{faker 'random.float'}},\n    \"length\": {{faker 'random.float'}},\n    \"unit\": \"inch\",\n    \"width\": {{faker 'random.float'}}\n  },\n  \"name\": \"laptop_box\",\n  \"package_code\": \"\",\n  \"package_id\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "20b095fc-2bfe-4818-a3d0-2543adf5722a",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "01ebf9c7-f786-42ee-a583-bdf846253992",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5d485046-3f14-4f75-b720-b827ef0d0de1",
      "documentation": "Delete A Custom Package By ID",
      "method": "delete",
      "endpoint": "v1/packages/:package_id",
      "responses": [
        {
          "uuid": "72074309-6fef-4aaa-81da-77d10d05cb02",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "The request was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "77442e6c-fcf7-48ba-a3b4-0969471f746c",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "817bb827-ab6c-40fb-a582-10bb21fa2c2f",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9ffa0f8c-3d5f-445a-93d1-bff0c1965793",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4bd7a7fa-fe4c-4952-95ca-06f3d059ecd5",
      "documentation": "Get Custom Package Type By ID",
      "method": "get",
      "endpoint": "v1/packages/:package_id",
      "responses": [
        {
          "uuid": "50eca8bc-b9bc-4d9a-bb4a-06de3fc7c8a5",
          "body": "{\n  \"description\": \"Packaging for laptops\",\n  \"dimensions\": {\n    \"height\": {{faker 'random.float'}},\n    \"length\": {{faker 'random.float'}},\n    \"unit\": \"inch\",\n    \"width\": {{faker 'random.float'}}\n  },\n  \"name\": \"laptop_box\",\n  \"package_code\": \"\",\n  \"package_id\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d5df5c98-c947-47e6-9f34-ed7d24cead74",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2e316b76-fad5-4572-aafc-7a621bde40aa",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2d2f61d5-15e6-4db4-b61b-d2b28f9d15bc",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b2d0cdbc-8eae-443f-8520-a4769829aa13",
      "documentation": "Update Custom Package Type By ID",
      "method": "put",
      "endpoint": "v1/packages/:package_id",
      "responses": [
        {
          "uuid": "597a015e-f298-43a2-9527-8587323cb872",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "The request was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4233e805-4903-4795-b7cc-57d488b73c94",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4e92a07f-5a05-4b00-b240-e5800b050c03",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b678d9fe-e19e-4c80-98b6-973e307e8540",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9498e79f-7af2-4fea-af37-f7bca12b09c8",
      "documentation": "Get Shipping Rates",
      "method": "post",
      "endpoint": "v1/rates",
      "responses": [
        {
          "uuid": "ebbadf2b-c0f8-410a-9097-54676179941c",
          "body": "{\n  \"advanced_options\": {\n    \"bill_to_account\": \"\",\n    \"bill_to_country_code\": \"\",\n    \"bill_to_party\": \"\",\n    \"bill_to_postal_code\": \"\",\n    \"collect_on_delivery\": {\n      \"payment_amount\": {\n        \"amount\": {{faker 'random.float'}},\n        \"currency\": \"\"\n      },\n      \"payment_type\": \"\"\n    },\n    \"contains_alcohol\": {{faker 'random.boolean'}},\n    \"custom_field1\": \"\",\n    \"custom_field2\": \"\",\n    \"custom_field3\": \"\",\n    \"delivered_duty_paid\": {{faker 'random.boolean'}},\n    \"dry_ice\": {{faker 'random.boolean'}},\n    \"dry_ice_weight\": {\n      \"unit\": \"\",\n      \"value\": {{faker 'random.float'}}\n    },\n    \"freight_class\": 77.5,\n    \"non_machinable\": {{faker 'random.boolean'}},\n    \"saturday_delivery\": {{faker 'random.boolean'}},\n    \"use_ups_ground_freight_pricing\": {{faker 'random.boolean'}}\n  },\n  \"carrier_id\": \"\",\n  \"confirmation\": \"none\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"customs\": {\n    \"contents\": \"merchandise\",\n    \"customs_items\": [],\n    \"non_delivery\": \"return_to_sender\"\n  },\n  \"external_order_id\": \"\",\n  \"external_shipment_id\": \"\",\n  \"insurance_provider\": \"none\",\n  \"items\": [],\n  \"modified_at\": \"{{faker 'date.recent' 365}}\",\n  \"order_source_code\": \"\",\n  \"packages\": [\n    {\n      \"dimensions\": {\n        \"height\": {{faker 'random.float'}},\n        \"length\": {{faker 'random.float'}},\n        \"unit\": \"inch\",\n        \"width\": {{faker 'random.float'}}\n      },\n      \"external_package_id\": \"\",\n      \"insured_value\": [\n        {\n          \"amount\": 0,\n          \"currency\": \"usd\"\n        }\n      ],\n      \"label_messages\": {\n        \"reference1\": \"\",\n        \"reference2\": \"\",\n        \"reference3\": \"\"\n      },\n      \"package_code\": \"\",\n      \"tracking_number\": \"\",\n      \"weight\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'random.float'}}\n      }\n    }\n  ],\n  \"return_to\": {},\n  \"service_code\": \"\",\n  \"ship_date\": \"{{faker 'date.recent' 365}}\",\n  \"ship_from\": {},\n  \"ship_to\": {},\n  \"shipment_id\": \"\",\n  \"shipment_status\": \"pending\",\n  \"tags\": [],\n  \"total_weight\": {\n    \"unit\": \"\",\n    \"value\": {{faker 'random.float'}}\n  },\n  \"warehouse_id\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f8ea6620-021a-43ac-a235-99480994d180",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0175acf6-fbd2-44e3-9800-92e02e67634f",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c2a7cede-ab0c-4e52-9c5a-3fe04323ffa4",
      "documentation": "Get Bulk Rates",
      "method": "post",
      "endpoint": "v1/rates/bulk",
      "responses": [
        {
          "uuid": "9a44cc5a-1c9a-4cae-a6c7-37cc4a8b0d15",
          "body": "[\n  {\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"errors\": [\n      {\n        \"error_code\": \"\",\n        \"error_source\": \"\",\n        \"error_type\": \"\",\n        \"message\": \"Body of request cannot be null.\"\n      }\n    ],\n    \"rate_request_id\": \"\",\n    \"shipment_id\": \"\",\n    \"status\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e88749b5-6d3c-461c-9eac-18022f78260a",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4ec54398-1699-47ce-826c-3faeb82fe28e",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "36f85f30-123d-4d59-8ce1-956707e196ea",
      "documentation": "Estimate Rates",
      "method": "post",
      "endpoint": "v1/rates/estimate",
      "responses": [
        {
          "uuid": "a76a0431-674e-4295-bf79-fe0f39f97246",
          "body": "[\n  {\n    \"carrier_code\": \"\",\n    \"carrier_delivery_days\": \"\",\n    \"carrier_friendly_name\": \"\",\n    \"carrier_id\": \"\",\n    \"carrier_nickname\": \"\",\n    \"confirmation_amount\": {\n      \"amount\": {{faker 'random.float'}},\n      \"currency\": \"\"\n    },\n    \"delivery_days\": 5,\n    \"error_messages\": [\n      \"\"\n    ],\n    \"estimated_delivery_date\": \"{{faker 'date.recent' 365}}\",\n    \"guaranteed_service\": {{faker 'random.boolean'}},\n    \"insurance_amount\": {\n      \"amount\": {{faker 'random.float'}},\n      \"currency\": \"\"\n    },\n    \"negotiated_rate\": {{faker 'random.boolean'}},\n    \"other_amount\": {\n      \"amount\": {{faker 'random.float'}},\n      \"currency\": \"\"\n    },\n    \"package_type\": \"package\",\n    \"rate_id\": \"\",\n    \"rate_type\": \"\",\n    \"service_code\": \"\",\n    \"service_type\": \"\",\n    \"ship_date\": \"{{faker 'date.recent' 365}}\",\n    \"shipping_amount\": {\n      \"amount\": {{faker 'random.float'}},\n      \"currency\": \"\"\n    },\n    \"tax_amount\": {\n      \"amount\": {{faker 'random.float'}},\n      \"currency\": \"\"\n    },\n    \"trackable\": {{faker 'random.boolean'}},\n    \"validation_status\": \"\",\n    \"warning_messages\": [\n      \"\"\n    ],\n    \"zone\": 6\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "49ef0916-e605-4a0f-9ae1-c55674e387ef",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1163430e-3f49-4142-8489-5e1072ec94f0",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8555cd5e-66cb-4414-849c-bea115c78d70",
      "documentation": "Get Rate By ID",
      "method": "get",
      "endpoint": "v1/rates/:rate_id",
      "responses": [
        {
          "uuid": "da7f0c60-a649-4c79-80af-1810e8199791",
          "body": "{\n  \"carrier_code\": \"\",\n  \"carrier_delivery_days\": \"\",\n  \"carrier_friendly_name\": \"\",\n  \"carrier_id\": \"\",\n  \"carrier_nickname\": \"\",\n  \"confirmation_amount\": {\n    \"amount\": {{faker 'random.float'}},\n    \"currency\": \"\"\n  },\n  \"delivery_days\": 5,\n  \"error_messages\": [\n    \"\"\n  ],\n  \"estimated_delivery_date\": \"{{faker 'date.recent' 365}}\",\n  \"guaranteed_service\": {{faker 'random.boolean'}},\n  \"insurance_amount\": {\n    \"amount\": {{faker 'random.float'}},\n    \"currency\": \"\"\n  },\n  \"negotiated_rate\": {{faker 'random.boolean'}},\n  \"other_amount\": {\n    \"amount\": {{faker 'random.float'}},\n    \"currency\": \"\"\n  },\n  \"package_type\": \"package\",\n  \"rate_id\": \"\",\n  \"rate_type\": \"\",\n  \"service_code\": \"\",\n  \"service_type\": \"\",\n  \"ship_date\": \"{{faker 'date.recent' 365}}\",\n  \"shipping_amount\": {\n    \"amount\": {{faker 'random.float'}},\n    \"currency\": \"\"\n  },\n  \"tax_amount\": {\n    \"amount\": {{faker 'random.float'}},\n    \"currency\": \"\"\n  },\n  \"trackable\": {{faker 'random.boolean'}},\n  \"validation_status\": \"\",\n  \"warning_messages\": [\n    \"\"\n  ],\n  \"zone\": 6\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e833d371-4455-443e-9f46-09350f6ca944",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "95610693-550e-4ac6-9fa0-1f1d2a23cbfd",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6e30cd69-41a5-4965-a850-ea7d4788554d",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "87157361-8306-4ab6-af8f-c97d0e69b2b6",
      "documentation": "List Shipments",
      "method": "get",
      "endpoint": "v1/shipments",
      "responses": [
        {
          "uuid": "d8506b32-ffe9-489a-a0b6-3315c760ae16",
          "body": "{\n  \"links\": {\n    \"first\": {},\n    \"last\": {},\n    \"next\": {\n      \"href\": \"\",\n      \"type\": \"\"\n    },\n    \"prev\": {\n      \"href\": \"\",\n      \"type\": \"\"\n    }\n  },\n  \"page\": \"????\",\n  \"pages\": {{faker 'random.number'}},\n  \"shipments\": [\n    {}\n  ],\n  \"total\": 1990\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "206d33b4-3cd2-4e90-ac58-dd68bda0c2d8",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "649e2db3-4933-4139-a295-5cb95b72f225",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a196ad36-5c2f-465e-a77f-c860c85bd477",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "97ca9777-c76b-4185-a6a9-9e4448c811ba",
      "documentation": "Create Shipments",
      "method": "post",
      "endpoint": "v1/shipments",
      "responses": [
        {
          "uuid": "c2bd83d4-c638-4bc5-9e77-f0e6baf68f47",
          "body": "{\n  \"has_errors\": {{faker 'random.boolean'}},\n  \"shipments\": [\n    {}\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The requested object creation was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eb70014a-6723-47d2-af71-c0d3d0070b9d",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e7544080-3e0c-46f3-9c31-ec97a4d7d213",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c7b00271-fec9-498a-8f2e-87a5f166a497",
      "documentation": "Get Shipment By External ID",
      "method": "get",
      "endpoint": "v1/shipments/external_shipment_id/:external_shipment_id",
      "responses": [
        {
          "uuid": "b45fb44e-5e9c-43e8-9401-0732bcf4c5a1",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5c5d0461-f434-403e-a13d-874b38c3750a",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "542002f2-b3cb-4ee0-953d-531703b7a4c4",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "87a624e9-fe94-4986-aabd-f957b843da93",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bde665eb-397a-4090-8d22-73fe2f19cada",
      "documentation": "Parse shipping info",
      "method": "put",
      "endpoint": "v1/shipments/recognize",
      "responses": [
        {
          "uuid": "39c0d990-53e7-4810-8d9f-30fda4fd060b",
          "body": "{\n  \"entities\": [\n    {\n      \"end_index\": {{faker 'random.number'}},\n      \"result\": {},\n      \"score\": {{faker 'random.float'}},\n      \"start_index\": {{faker 'random.number'}},\n      \"text\": \"\",\n      \"type\": \"\"\n    }\n  ],\n  \"score\": {{faker 'random.float'}},\n  \"shipment\": {\n    \"advanced_options\": {\n      \"bill_to_account\": \"\",\n      \"bill_to_country_code\": \"\",\n      \"bill_to_party\": \"\",\n      \"bill_to_postal_code\": \"\",\n      \"collect_on_delivery\": {\n        \"payment_amount\": {\n          \"amount\": {{faker 'random.float'}},\n          \"currency\": \"\"\n        },\n        \"payment_type\": \"\"\n      },\n      \"contains_alcohol\": {{faker 'random.boolean'}},\n      \"custom_field1\": \"\",\n      \"custom_field2\": \"\",\n      \"custom_field3\": \"\",\n      \"delivered_duty_paid\": {{faker 'random.boolean'}},\n      \"dry_ice\": {{faker 'random.boolean'}},\n      \"dry_ice_weight\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'random.float'}}\n      },\n      \"freight_class\": 77.5,\n      \"non_machinable\": {{faker 'random.boolean'}},\n      \"saturday_delivery\": {{faker 'random.boolean'}},\n      \"use_ups_ground_freight_pricing\": {{faker 'random.boolean'}}\n    },\n    \"carrier_id\": \"\",\n    \"confirmation\": \"none\",\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"customs\": {\n      \"contents\": \"merchandise\",\n      \"customs_items\": [],\n      \"non_delivery\": \"return_to_sender\"\n    },\n    \"external_order_id\": \"\",\n    \"external_shipment_id\": \"\",\n    \"insurance_provider\": \"none\",\n    \"items\": [],\n    \"modified_at\": \"{{faker 'date.recent' 365}}\",\n    \"order_source_code\": \"\",\n    \"packages\": [\n      {\n        \"dimensions\": {\n          \"height\": {{faker 'random.float'}},\n          \"length\": {{faker 'random.float'}},\n          \"unit\": \"inch\",\n          \"width\": {{faker 'random.float'}}\n        },\n        \"external_package_id\": \"\",\n        \"insured_value\": [\n          {\n            \"amount\": 0,\n            \"currency\": \"usd\"\n          }\n        ],\n        \"label_messages\": {\n          \"reference1\": \"\",\n          \"reference2\": \"\",\n          \"reference3\": \"\"\n        },\n        \"package_code\": \"\",\n        \"tracking_number\": \"\",\n        \"weight\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.float'}}\n        }\n      }\n    ],\n    \"return_to\": {},\n    \"service_code\": \"\",\n    \"ship_date\": \"{{faker 'date.recent' 365}}\",\n    \"ship_from\": {},\n    \"ship_to\": {},\n    \"shipment_id\": \"\",\n    \"shipment_status\": \"pending\",\n    \"tags\": [],\n    \"total_weight\": {\n      \"unit\": \"\",\n      \"value\": {{faker 'random.float'}}\n    },\n    \"warehouse_id\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns the parsed shipment, as well as a confidence score and a list of all the shipping entities that were recognized in the text.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "000c76fd-2dcb-4843-8b41-60412df399ac",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "59563337-1b14-4603-8426-ddc3bc7da939",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ebf42ca2-4864-47d6-b1af-004b48c18daf",
      "documentation": "Get Shipment By ID",
      "method": "get",
      "endpoint": "v1/shipments/:shipment_id",
      "responses": [
        {
          "uuid": "d3861b25-a281-4516-9fd7-fd106a4f9ccf",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8da35ac0-9fe1-4fc4-b5be-093143d5bb02",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ae25d3e3-9d33-4a68-a9fc-a9bbdf901bea",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fd0e2800-523c-4a99-904e-f114519d4ebf",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bac579c3-a241-455d-8be9-173c061fbfc8",
      "documentation": "Update Shipment By ID",
      "method": "put",
      "endpoint": "v1/shipments/:shipment_id",
      "responses": [
        {
          "uuid": "f3e236f8-c320-4d17-badb-3e63efda494f",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b7e2c0b1-7adc-43ee-816b-3daf77a80703",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7cb5fd71-5970-4b9f-97bf-3cc462377320",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1c2e6598-6510-4b00-bc33-7b6a75b17b0f",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "79d5e1de-4244-4ff6-8b23-b94d4bd2f83a",
      "documentation": "Cancel a Shipment",
      "method": "put",
      "endpoint": "v1/shipments/:shipment_id/cancel",
      "responses": [
        {
          "uuid": "aba3f85b-b844-4899-932b-12157cd45a76",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "The request was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0cafc4ee-1de6-49a9-ad16-9f0dadd61a17",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b052655c-a19e-472a-a943-5b3e2a36b651",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4365ae7d-bb68-47ca-afed-dac9d71bc72e",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2e7b3c95-1166-44ce-b69f-3797daa63b71",
      "documentation": "Get Shipment Errors",
      "method": "get",
      "endpoint": "v1/shipments/:shipment_id/errors",
      "responses": [
        {
          "uuid": "1a139462-067f-499b-a93a-e0ff3f0c7ba6",
          "body": "{\n  \"errors\": [\n    {\n      \"error\": \"\",\n      \"external_shipment_id\": \"\",\n      \"shipment_id\": \"\"\n    }\n  ],\n  \"links\": {\n    \"first\": {},\n    \"last\": {},\n    \"next\": {\n      \"href\": \"\",\n      \"type\": \"\"\n    },\n    \"prev\": {\n      \"href\": \"\",\n      \"type\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2b700721-349a-4685-a8c9-f0cedaa6622e",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "082ee748-2667-4f99-ae48-2c19418c509f",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fe020b34-0522-4b49-a334-433b5fb17fbf",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e443280b-3c55-4807-a3f3-8b24cd48c8f2",
      "documentation": "Get Shipment Rates",
      "method": "get",
      "endpoint": "v1/shipments/:shipment_id/rates",
      "responses": [
        {
          "uuid": "4cae0ccb-787a-4f23-bc56-4e14821e0743",
          "body": "{\n  \"created_at\": \"\",\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"invalid_rates\": [],\n  \"rate_request_id\": \"\",\n  \"rates\": [\n    {\n      \"carrier_code\": \"\",\n      \"carrier_delivery_days\": \"\",\n      \"carrier_friendly_name\": \"\",\n      \"carrier_id\": \"\",\n      \"carrier_nickname\": \"\",\n      \"confirmation_amount\": {\n        \"amount\": {{faker 'random.float'}},\n        \"currency\": \"\"\n      },\n      \"delivery_days\": 5,\n      \"error_messages\": [\n        \"\"\n      ],\n      \"estimated_delivery_date\": \"{{faker 'date.recent' 365}}\",\n      \"guaranteed_service\": {{faker 'random.boolean'}},\n      \"insurance_amount\": {\n        \"amount\": {{faker 'random.float'}},\n        \"currency\": \"\"\n      },\n      \"negotiated_rate\": {{faker 'random.boolean'}},\n      \"other_amount\": {\n        \"amount\": {{faker 'random.float'}},\n        \"currency\": \"\"\n      },\n      \"package_type\": \"package\",\n      \"rate_id\": \"\",\n      \"rate_type\": \"\",\n      \"service_code\": \"\",\n      \"service_type\": \"\",\n      \"ship_date\": \"{{faker 'date.recent' 365}}\",\n      \"shipping_amount\": {\n        \"amount\": {{faker 'random.float'}},\n        \"currency\": \"\"\n      },\n      \"tax_amount\": {\n        \"amount\": {{faker 'random.float'}},\n        \"currency\": \"\"\n      },\n      \"trackable\": {{faker 'random.boolean'}},\n      \"validation_status\": \"\",\n      \"warning_messages\": [\n        \"\"\n      ],\n      \"zone\": 6\n    }\n  ],\n  \"shipment_id\": \"\",\n  \"status\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5511ad9c-db6d-40e9-b154-2155d4273664",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "019769f3-3f6b-4a6e-99c5-81715ec2ec0d",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cafaba80-b1be-478b-a45e-00289bacd12d",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b53a362d-a2b2-4d68-866b-e417ce50b205",
      "documentation": "Remove Tag from Shipment",
      "method": "delete",
      "endpoint": "v1/shipments/:shipment_id/tags/:tag_name",
      "responses": [
        {
          "uuid": "9eaeaf07-8dda-4ed5-b976-5244fbd0b036",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "The request was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bd48e38d-2c95-4b0a-8ec4-c4605dd41217",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bda9f32f-91e0-4c33-b118-0f38e2caa3c7",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "34c93f2f-56aa-4a76-938c-ce5dac205dc9",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9c616761-0c8f-4567-89f2-6fc33292d669",
      "documentation": "Add Tag to Shipment",
      "method": "post",
      "endpoint": "v1/shipments/:shipment_id/tags/:tag_name",
      "responses": [
        {
          "uuid": "a46c7375-dd01-4df1-aef8-f6963024cf8e",
          "body": "{\n  \"shipment_id\": \"\",\n  \"tag\": {\n    \"name\": \"Fragile\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The requested object creation was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5d9cae64-2bf6-4bd1-abed-193db1d9fc3a",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "be072f39-8a69-40de-b2ef-7dc3ac634634",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "90058092-928d-41a4-b090-1711e5cc2e68",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ba82cd0f-2c0c-4768-b470-9aa7f154a0e8",
      "documentation": "Get Tags",
      "method": "get",
      "endpoint": "v1/tags",
      "responses": [
        {
          "uuid": "4601d01c-53fd-43ff-babc-f03c07500fee",
          "body": "{\n  \"tags\": [\n    {\n      \"name\": \"Fragile\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "43fa45a5-7b86-429a-bc95-1a95747a5a73",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e0e03666-7796-4a3e-bae0-4dd80de5dcb9",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8482284c-77e7-4176-8310-2007cbed266c",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c7ccb0f6-198d-4827-b2dc-a0cb4e9c15d3",
      "documentation": "Delete Tag",
      "method": "delete",
      "endpoint": "v1/tags/:tag_name",
      "responses": [
        {
          "uuid": "e33379b1-e184-4592-9f24-029779ddc41d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "The request was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7a69d047-38a0-4358-825d-8d50f656dec7",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b6e37639-4279-4f8e-a271-69172563c63a",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b454e619-fee8-498f-b761-e0329dc6e5da",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d1cc2891-0059-437a-98f3-b7224dc5a5a3",
      "documentation": "Create a New Tag",
      "method": "post",
      "endpoint": "v1/tags/:tag_name",
      "responses": [
        {
          "uuid": "cccb8af8-1989-4941-b1e6-17bd6a9e52f2",
          "body": "{\n  \"name\": \"Fragile\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "67dfc75a-e53d-4804-aed5-d8844f0d920a",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c48280e9-0ef6-4f0c-9c31-1cd67c3cac86",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3398cfc9-5adb-40f4-b5cb-3cdcabcd2b26",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "44a0c21e-116a-4e7a-b657-1e31031f570a",
      "documentation": "Update Tag Name",
      "method": "put",
      "endpoint": "v1/tags/:tag_name/:new_tag_name",
      "responses": [
        {
          "uuid": "995ec713-b917-4461-8522-6525e68c7378",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "The request was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f237e947-ec83-4c20-8869-053baeb02570",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0cf949f6-97bf-4b44-bc36-2b7a05b46809",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0a467d2f-9499-4b9e-9db5-51228045f986",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "baad99f6-6744-43d5-9a58-cbb669cbe650",
      "documentation": "Get Tracking Information",
      "method": "get",
      "endpoint": "v1/tracking",
      "responses": [
        {
          "uuid": "7569a108-0f20-4ebe-b043-66867c0eb333",
          "body": "{\n  \"actual_delivery_date\": \"{{faker 'date.recent' 365}}\",\n  \"carrier_status_code\": 1,\n  \"carrier_status_description\": \"Your item was delivered in or at the mailbox at 9:10 am on March\",\n  \"estimated_delivery_date\": \"{{faker 'date.recent' 365}}\",\n  \"events\": [\n    {\n      \"carrier_occurred_at\": \"{{faker 'date.recent' 365}}\",\n      \"city_locality\": \"AUSTIN\",\n      \"company_name\": \"Stamps.com\",\n      \"country_code\": \"\",\n      \"description\": \"Delivered, In/At Mailbox\",\n      \"event_code\": \"\",\n      \"latitude\": {{faker 'random.float'}},\n      \"longitude\": {{faker 'random.float'}},\n      \"occurred_at\": \"{{faker 'date.recent' 365}}\",\n      \"postal_code\": 78756,\n      \"signer\": \"\",\n      \"state_province\": \"TX\"\n    }\n  ],\n  \"exception_description\": \"\",\n  \"ship_date\": \"{{faker 'date.recent' 365}}\",\n  \"status_code\": \"DE\",\n  \"status_description\": \"Delivered\",\n  \"tracking_number\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bf260500-6b51-4740-ab30-07019281f729",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6c689c0c-8547-43ed-b98e-ca2be124b08f",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "db231256-f396-474b-a3a6-afbc4de8b01b",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d6a587af-3e30-4f7c-8ea3-be7413ddc20c",
      "documentation": "Start Tracking a Package",
      "method": "post",
      "endpoint": "v1/tracking/start",
      "responses": [
        {
          "uuid": "58994714-78a1-4b9e-a3dd-ba296d19d821",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "The request was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9d2334d4-eaaa-4d0b-91cd-753edc924ccb",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ca14d399-9831-41fb-9970-f365ef5975bd",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "043c7e27-107b-4b6f-9825-37e1fd2a2061",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cdc2ece9-6ba9-4e7a-9a4f-20118023013b",
      "documentation": "Stop Tracking a Package",
      "method": "post",
      "endpoint": "v1/tracking/stop",
      "responses": [
        {
          "uuid": "d221025e-f79a-4552-89e6-720ac4fa9fe3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "The request was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f1daa7fd-d875-4680-b8ed-527ac0a25705",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "45484b36-42d2-4829-9941-9d2c08b653d3",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0d32cd2d-8a85-4044-90fa-efcd6982e369",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "70560a3a-0c70-4e26-a4a1-89e70ea539ad",
      "documentation": "List Warehouses",
      "method": "get",
      "endpoint": "v1/warehouses",
      "responses": [
        {
          "uuid": "a7447b7f-b4f6-4f1e-9f27-fb87cfe13d97",
          "body": "{\n  \"warehouses\": [\n    {\n      \"created_at\": \"2019-06-25T18:12:35.583Z\",\n      \"name\": \"Zero Cool HQ\",\n      \"origin_address\": {},\n      \"return_address\": {},\n      \"warehouse_id\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dc65ead6-65ea-47c8-a6dd-4b9f3efb10b9",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "93087063-c059-47ce-bde3-fb05ea514c33",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1ff09d16-4d3a-4db3-ac16-eb9a8b8d57dd",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "295b1ffa-ed5c-42ec-9378-9052255d17ce",
      "documentation": "Create Warehouse",
      "method": "post",
      "endpoint": "v1/warehouses",
      "responses": [
        {
          "uuid": "af8343a2-1da7-41a9-8c1b-f271f347a540",
          "body": "{\n  \"created_at\": \"2019-06-25T18:12:35.583Z\",\n  \"name\": \"Zero Cool HQ\",\n  \"origin_address\": {},\n  \"return_address\": {},\n  \"warehouse_id\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8cd6d146-7500-4b0b-85e8-143e9139679e",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2eae8f86-a21f-41cf-826a-a1b9a3e8c338",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ddda727d-c7b3-4b7a-996e-4c0eb4c691ea",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cc58a245-4e81-4492-91d0-dd527002d88d",
      "documentation": "Delete Warehouse By ID",
      "method": "delete",
      "endpoint": "v1/warehouses/:warehouse_id",
      "responses": [
        {
          "uuid": "662f3fc4-ef16-4092-bf9c-26bcced9795e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "The request was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b5c27eaa-fb04-44d9-a4b5-1df0dabaaa42",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6b5dbba6-0973-47ea-a80f-98b77ed3d08f",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bc87cae0-4637-4ae6-8648-1c221b64f8c0",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "472d7473-7f7b-434a-b166-cc0c4e81a08b",
      "documentation": "Get Warehouse By Id",
      "method": "get",
      "endpoint": "v1/warehouses/:warehouse_id",
      "responses": [
        {
          "uuid": "bffcf194-7ddd-41cf-a3ff-1341055e78bf",
          "body": "{\n  \"created_at\": \"2019-06-25T18:12:35.583Z\",\n  \"name\": \"Zero Cool HQ\",\n  \"origin_address\": {},\n  \"return_address\": {},\n  \"warehouse_id\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was a success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e3e85ae4-57ef-47cd-96c3-6201740e3aa3",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3dd0a7fc-ebad-420d-9c52-21684483c77d",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0b0c7dfa-75d6-4b02-b5d5-c9b4e80dc130",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3493b4be-e486-45e4-8b3a-337c9a8920cd",
      "documentation": "Update WareHouse By Id",
      "method": "put",
      "endpoint": "v1/warehouses/:warehouse_id",
      "responses": [
        {
          "uuid": "649acef5-3612-434a-ab1b-75ce4868542f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 204,
          "label": "The request was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8341594b-c555-4cc5-96ec-7fa4f4e67bd3",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "The request contained errors.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eaf7cbbd-dc4e-4b9c-a788-a9f43006cb81",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified resource does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "984a776e-9006-46a3-abc4-290dc22dd0d9",
          "body": "{\n  \"errors\": [\n    {\n      \"error_code\": \"\",\n      \"error_source\": \"\",\n      \"error_type\": \"\",\n      \"message\": \"Body of request cannot be null.\"\n    }\n  ],\n  \"request_id\": \"{{faker 'random.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}