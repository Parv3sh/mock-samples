{
  "uuid": "b2e8560c-5f3c-4616-b71c-b14bd1452e3c",
  "lastMigration": 19,
  "name": "Amazon Lex Model Building V2",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "550b8e2a-d377-4900-a8a8-61ffe727d126",
      "documentation": "Builds a bot, its intents, and its slot types into a specific locale. A bot can be built into multiple locales. At runtime the locale is used to choose a specific build of the bot.",
      "method": "post",
      "endpoint": "bots/:botId/botversions/:botVersion/botlocales/:localeId/",
      "responses": [
        {
          "uuid": "14afcac1-c2a9-41b1-bbf4-a420ad7f4570",
          "body": "{\n  \"botId\": \"\",\n  \"botVersion\": \"\",\n  \"localeId\": \"\",\n  \"botLocaleStatus\": \"\",\n  \"lastBuildSubmittedDateTime\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c3abcf14-093f-49ce-bc2e-caebe8a3fa49",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0ba850d7-d913-4436-aa6b-f2371b634065",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceQuotaExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a168235a-5095-45e5-91df-04adc16dedf2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2c73c14a-dd33-4f91-acd7-6c2105f5b530",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "PreconditionFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8e2c483c-c23b-4dbe-a490-429dfc26ff54",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "52ff9de8-8a6f-4e5d-978a-d9500056c342",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4b59c333-10d8-4c46-921c-a80596da0a45",
      "documentation": "<p>Removes a locale from a bot.</p> <p>When you delete a locale, all intents, slots, and slot types defined for the locale are also deleted.</p>",
      "method": "delete",
      "endpoint": "bots/:botId/botversions/:botVersion/botlocales/:localeId/",
      "responses": [
        {
          "uuid": "fcc12bab-031d-4be0-a815-58e05e20e63d",
          "body": "{\n  \"botId\": \"\",\n  \"botVersion\": \"\",\n  \"localeId\": \"\",\n  \"botLocaleStatus\": \"\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "887eff37-e3cf-41df-84ca-93224bbaa369",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "890a597d-ec95-41b4-a8e0-f1388a79ab8c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceQuotaExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9d98efb7-d1c3-4cda-8062-3fdb2255d731",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b2a12198-64d1-4ef2-8b1a-7873fd668aa5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "PreconditionFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2eb44fef-a6ac-4b76-96a8-21d1d31ab2bf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4581bcc7-f739-4299-b8cf-a15d542e9687",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f6a14542-e92b-4d42-a0d2-e76353e90936",
      "documentation": "Describes the settings that a bot has for a specific locale. ",
      "method": "get",
      "endpoint": "bots/:botId/botversions/:botVersion/botlocales/:localeId/",
      "responses": [
        {
          "uuid": "cd83e24c-fee1-482d-883f-6b529e20056b",
          "body": "{\n  \"botId\": \"\",\n  \"botVersion\": \"\",\n  \"localeId\": \"\",\n  \"localeName\": \"\",\n  \"description\": \"\",\n  \"nluIntentConfidenceThreshold\": {{faker 'random.float'}},\n  \"voiceSettings\": {\n    \"voiceId\": \"\"\n  },\n  \"intentsCount\": {{faker 'random.number'}},\n  \"slotTypesCount\": {{faker 'random.number'}},\n  \"botLocaleStatus\": \"\",\n  \"failureReasons\": [\n    \"\"\n  ],\n  \"creationDateTime\": \"{{faker 'date.recent' 365}}\",\n  \"lastUpdatedDateTime\": \"{{faker 'date.recent' 365}}\",\n  \"lastBuildSubmittedDateTime\": \"{{faker 'date.recent' 365}}\",\n  \"botLocaleHistoryEvents\": [\n    {\n      \"event\": \"\",\n      \"eventDate\": \"{{faker 'date.recent' 365}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "25231b1b-f569-4bd6-a782-508217ffeea3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cd4fa061-41ea-4397-a850-a977d4032b5e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceQuotaExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d59297eb-5466-44f6-8f0e-9ab06f3a853e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7859cfcf-814b-4332-9195-20c3ec872ce5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9802b0cd-7fa0-40de-bb25-956c44fbde13",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "198f2a6c-cc7c-4bfa-9f47-ba22aa37328b",
      "documentation": "Updates the settings that a bot has for a specific locale.",
      "method": "put",
      "endpoint": "bots/:botId/botversions/:botVersion/botlocales/:localeId/",
      "responses": [
        {
          "uuid": "c2136fd3-d008-436e-91a3-cc5ffdea7ce9",
          "body": "{\n  \"botId\": \"\",\n  \"botVersion\": \"\",\n  \"localeId\": \"\",\n  \"localeName\": \"\",\n  \"description\": \"\",\n  \"nluIntentConfidenceThreshold\": {{faker 'random.float'}},\n  \"voiceSettings\": {\n    \"voiceId\": \"\"\n  },\n  \"botLocaleStatus\": \"\",\n  \"failureReasons\": [\n    \"\"\n  ],\n  \"creationDateTime\": \"{{faker 'date.recent' 365}}\",\n  \"lastUpdatedDateTime\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "03336d6c-7092-4e54-ba2f-1ad842f998fd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "28db9e68-9fc6-43f7-aa64-b6d1bea35d93",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceQuotaExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a147582e-51c9-4d91-abd8-24c31d1d74c3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4142b44c-9d4c-4dfe-9a93-644d1a457535",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "PreconditionFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cd96f214-5499-4d3c-abaa-45405fd05d8a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8b429fde-98c6-4f7f-9205-1e1b90362fef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2f944dff-8c39-45dd-87dc-0042badcf5c3",
      "documentation": "Creates an Amazon Lex conversational bot. ",
      "method": "put",
      "endpoint": "bots/",
      "responses": [
        {
          "uuid": "c0d1be6d-8ae4-4f1d-b279-c4abe6dd4114",
          "body": "{\n  \"botId\": \"\",\n  \"botName\": \"\",\n  \"description\": \"\",\n  \"roleArn\": \"\",\n  \"dataPrivacy\": {\n    \"childDirected\": {{faker 'random.boolean'}}\n  },\n  \"idleSessionTTLInSeconds\": {{faker 'random.number'}},\n  \"botStatus\": \"\",\n  \"creationDateTime\": \"{{faker 'date.recent' 365}}\",\n  \"botTags\": {},\n  \"testBotAliasTags\": {}\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "33364b98-408e-4aba-9814-a427833cee0f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2e830261-1cae-44c3-af97-5390e2ea175d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceQuotaExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c85a4362-5892-4c17-a037-533265af3fe1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a3d657cc-d05d-40cd-9e9e-69554f7182df",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "PreconditionFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "79aaa42e-4db3-4fb1-99c1-1e65c9378a3e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "27f02a41-9aa1-4646-bfae-1f0558ae73bd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "80e734eb-1a96-4717-a9f0-f4a27d5923ca",
      "documentation": "Gets a list of available bots.",
      "method": "post",
      "endpoint": "bots/",
      "responses": [
        {
          "uuid": "05f6ca38-a33e-4ca4-b929-50639044f15f",
          "body": "{\n  \"botSummaries\": [\n    {\n      \"botId\": \"\",\n      \"botName\": \"\",\n      \"description\": \"\",\n      \"botStatus\": \"\",\n      \"latestBotVersion\": \"\",\n      \"lastUpdatedDateTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0b9b8b5d-8b4f-42f5-a527-bebdf686cba7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fbf1026c-3d0a-457c-b5ff-08949c741bfc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceQuotaExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f500c968-9d25-46e4-b94f-6fa735636934",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "563795e8-34be-4aaa-a968-7aa0cc873bb6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c7634ac6-a0e6-4023-aa47-01d5a28b4859",
      "documentation": "<p>Creates an alias for the specified version of a bot. Use an alias to enable you to change the version of a bot without updating applications that use the bot.</p> <p>For example, you can create an alias called \"PROD\" that your applications use to call the Amazon Lex bot. </p>",
      "method": "put",
      "endpoint": "bots/:botId/botaliases/",
      "responses": [
        {
          "uuid": "5b28a814-bd85-4762-9050-7a333034524a",
          "body": "{\n  \"botAliasId\": \"\",\n  \"botAliasName\": \"\",\n  \"description\": \"\",\n  \"botVersion\": \"\",\n  \"botAliasLocaleSettings\": {},\n  \"conversationLogSettings\": {\n    \"textLogSettings\": [\n      {\n        \"enabled\": {{faker 'random.boolean'}},\n        \"destination\": {\n          \"cloudWatch\": {\n            \"cloudWatchLogGroupArn\": \"\",\n            \"logPrefix\": \"\"\n          }\n        }\n      }\n    ],\n    \"audioLogSettings\": [\n      {\n        \"enabled\": {{faker 'random.boolean'}},\n        \"destination\": {\n          \"s3Bucket\": {\n            \"kmsKeyArn\": \"\",\n            \"s3BucketArn\": \"\",\n            \"logPrefix\": \"\"\n          }\n        }\n      }\n    ]\n  },\n  \"sentimentAnalysisSettings\": {\n    \"detectSentiment\": {{faker 'random.boolean'}}\n  },\n  \"botAliasStatus\": \"\",\n  \"botId\": \"\",\n  \"creationDateTime\": \"{{faker 'date.recent' 365}}\",\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ea5c28cd-9769-4f7d-9e4b-8b77f6338dd7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "601819bd-60f3-47a3-b9c2-9595240db501",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceQuotaExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a116b299-cc0e-486c-932b-d347463d2ab2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "879e3ee3-8ba9-4272-a470-3e882622bd8b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "PreconditionFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9624e70e-8129-4515-8fad-3b94f56314f4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9ad7602b-1077-45b5-b1c0-b0685c9b3af4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "aa3426c8-4d4b-44a6-9559-85fda9c5bd87",
      "documentation": "Gets a list of aliases for the specified bot.",
      "method": "post",
      "endpoint": "bots/:botId/botaliases/",
      "responses": [
        {
          "uuid": "c4ca2213-7218-4ac8-a683-22949d0cafde",
          "body": "{\n  \"botAliasSummaries\": [\n    {\n      \"botAliasId\": \"\",\n      \"botAliasName\": \"\",\n      \"description\": \"\",\n      \"botVersion\": \"\",\n      \"botAliasStatus\": \"\",\n      \"creationDateTime\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedDateTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"nextToken\": \"\",\n  \"botId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f8b9985e-77d3-4952-a929-b67e9295bcf6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9f4cbac2-b9b0-4bd4-8cef-9595fc19a562",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceQuotaExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "41369994-31a1-46e7-9c74-e06909a8e5a8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "73f095fd-68de-46d6-930e-54d0c79f33b8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b3fdd8d2-2d0e-49b6-a2be-b07a87de7971",
      "documentation": "Creates a locale in the bot. The locale contains the intents and slot types that the bot uses in conversations with users in the specified language and locale. You must add a locale to a bot before you can add intents and slot types to the bot.",
      "method": "put",
      "endpoint": "bots/:botId/botversions/:botVersion/botlocales/",
      "responses": [
        {
          "uuid": "e5b6df41-e51e-4c96-933e-9466e0bbf9ef",
          "body": "{\n  \"botId\": \"\",\n  \"botVersion\": \"\",\n  \"localeName\": \"\",\n  \"localeId\": \"\",\n  \"description\": \"\",\n  \"nluIntentConfidenceThreshold\": {{faker 'random.float'}},\n  \"voiceSettings\": {\n    \"voiceId\": \"\"\n  },\n  \"botLocaleStatus\": \"\",\n  \"creationDateTime\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b065cd82-4244-4ef8-a6fc-44a3deea5601",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "66e42d60-28ab-4db8-b508-db2c2741c9fa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceQuotaExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "44f4e914-23eb-41a7-bdd6-e2d5e47b9c8e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d128c71c-fe0e-4a85-a600-9874c7b91eaf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "PreconditionFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a2dab681-c851-4112-8cb0-4ebc9310ee9b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "90b0df8a-8b1e-4f0a-8433-370194973359",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9be5e6b7-8fb8-4508-b32d-e3c97f47dedc",
      "documentation": "Gets a list of locales for the specified bot.",
      "method": "post",
      "endpoint": "bots/:botId/botversions/:botVersion/botlocales/",
      "responses": [
        {
          "uuid": "1bed9857-b892-4c40-9c33-3a03ed0f567e",
          "body": "{\n  \"botId\": \"\",\n  \"botVersion\": \"\",\n  \"nextToken\": \"\",\n  \"botLocaleSummaries\": [\n    {\n      \"localeId\": \"\",\n      \"localeName\": \"\",\n      \"description\": \"\",\n      \"botLocaleStatus\": \"\",\n      \"lastUpdatedDateTime\": \"{{faker 'date.recent' 365}}\",\n      \"lastBuildSubmittedDateTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c2949379-431f-4075-879f-b26c0fe1f1d1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d607238d-e29a-4c18-994b-106956efaab8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceQuotaExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "667dea28-bc93-41ba-b843-4a0ec4b7144a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4525f56d-2eb2-4efa-833b-2f27664db251",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "64fc2a90-df0e-4c59-af75-50db2f7d9065",
      "documentation": "<p>Creates a new version of the bot based on the <code>DRAFT</code> version. If the <code>DRAFT</code> version of this resource hasn't changed since you created the last version, Amazon Lex doesn't create a new version, it returns the last created version.</p> <p>When you create the first version of a bot, Amazon Lex sets the version to 1. Subsequent versions increment by 1.</p>",
      "method": "put",
      "endpoint": "bots/:botId/botversions/",
      "responses": [
        {
          "uuid": "3166edf6-5ccb-46cf-8fc0-b30d4a27df51",
          "body": "{\n  \"botId\": \"\",\n  \"description\": \"\",\n  \"botVersion\": \"\",\n  \"botVersionLocaleSpecification\": {},\n  \"botStatus\": \"\",\n  \"creationDateTime\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "80180072-5e8d-4eec-87b2-ce08db044882",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c536b718-52e3-4136-9cd3-ce250816fe49",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceQuotaExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6b30e3f7-8364-48ac-9d35-4108392229a6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "56beec27-a408-4cd3-a4f7-8c56dbd859ca",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "PreconditionFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d824f807-c138-4650-a46b-47c777ccf35c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e652b52d-87c6-4104-ab99-c47f0851aa03",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fdc1b2ee-19fc-46c4-b463-cc9a0050030e",
      "documentation": "<p>Gets information about all of the versions of a bot.</p> <p>The <code>ListBotVersions</code> operation returns a summary of each version of a bot. For example, if a bot has three numbered versions, the <code>ListBotVersions</code> operation returns for summaries, one for each numbered version and one for the <code>DRAFT</code> version.</p> <p>The <code>ListBotVersions</code> operation always returns at least one version, the <code>DRAFT</code> version.</p>",
      "method": "post",
      "endpoint": "bots/:botId/botversions/",
      "responses": [
        {
          "uuid": "7de4804a-7735-4368-af4e-7a9d77028e6c",
          "body": "{\n  \"botId\": \"\",\n  \"botVersionSummaries\": [\n    {\n      \"botName\": \"\",\n      \"botVersion\": \"\",\n      \"description\": \"\",\n      \"botStatus\": \"\",\n      \"creationDateTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f6c00a09-94ec-4e81-902b-f78d7e3590f0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ca2f27a8-8296-4012-a53a-3f673e3bc5fb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceQuotaExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "69db13db-358e-4e93-b8cf-3ecd9bb2da26",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ec641665-e8ad-4db3-baf1-ea2eb362dab8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fb02d527-8648-4472-a75d-496c0c294cd4",
      "documentation": "<p>Creates a zip archive containing the contents of a bot or a bot locale. The archive contains a directory structure that contains JSON files that define the bot.</p> <p>You can create an archive that contains the complete definition of a bot, or you can specify that the archive contain only the definition of a single bot locale.</p> <p>For more information about exporting bots, and about the structure of the export archive, see <a href=\"https://docs.aws.amazon.com/lexv2/latest/dg/importing-exporting.html\"> Importing and exporting bots </a> </p>",
      "method": "put",
      "endpoint": "exports/",
      "responses": [
        {
          "uuid": "0bd0b832-bc1d-43f3-ab11-1d553ed7e5f1",
          "body": "{\n  \"exportId\": \"\",\n  \"resourceSpecification\": {\n    \"botExportSpecification\": {\n      \"botId\": \"\",\n      \"botVersion\": \"\"\n    },\n    \"botLocaleExportSpecification\": {\n      \"botId\": \"\",\n      \"botVersion\": \"\",\n      \"localeId\": \"\"\n    }\n  },\n  \"fileFormat\": \"\",\n  \"exportStatus\": \"\",\n  \"creationDateTime\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e8a8b3b2-fabe-49bb-9f57-3ad5ab6019d5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "210e9931-249d-467a-9a9d-43ed4398d799",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceQuotaExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "883378ce-f21d-4351-8edc-551a924fa685",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1000f7be-ddc0-4dc5-be56-0d864ce25e9d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e40a22e7-7a6a-4f8c-a503-966358472225",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0a9d057e-e838-4bcb-a703-3f8aad25bd62",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "25662b80-317a-4ee7-9920-6f63c900a1e2",
      "documentation": "Lists the exports for a bot or bot locale. Exports are kept in the list for 7 days.",
      "method": "post",
      "endpoint": "exports/",
      "responses": [
        {
          "uuid": "d9654fd7-b885-44f7-92db-fbbe82b7706c",
          "body": "{\n  \"botId\": \"\",\n  \"botVersion\": \"\",\n  \"exportSummaries\": [\n    {\n      \"exportId\": \"\",\n      \"resourceSpecification\": {\n        \"botExportSpecification\": {\n          \"botId\": \"\",\n          \"botVersion\": \"\"\n        },\n        \"botLocaleExportSpecification\": {\n          \"botId\": \"\",\n          \"botVersion\": \"\",\n          \"localeId\": \"\"\n        }\n      },\n      \"fileFormat\": \"\",\n      \"exportStatus\": \"\",\n      \"creationDateTime\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedDateTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4d394cd1-28bf-4d0f-9d34-6dad9ccbd4d2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "49941635-7407-4691-9515-a27785ebcb74",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d6b88582-d8df-432e-bf1e-af85b0dfc5df",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "add8a460-792e-427d-b9d8-294a53d5e834",
      "documentation": "<p>Creates an intent.</p> <p>To define the interaction between the user and your bot, you define one or more intents. For example, for a pizza ordering bot you would create an <code>OrderPizza</code> intent.</p> <p>When you create an intent, you must provide a name. You can optionally provide the following:</p> <ul> <li> <p>Sample utterances. For example, \"I want to order a pizza\" and \"Can I order a pizza.\" You can't provide utterances for built-in intents.</p> </li> <li> <p>Information to be gathered. You specify slots for the information that you bot requests from the user. You can specify standard slot types, such as date and time, or custom slot types for your application.</p> </li> <li> <p>How the intent is fulfilled. You can provide a Lambda function or configure the intent to return the intent information to your client application. If you use a Lambda function, Amazon Lex invokes the function when all of the intent information is available.</p> </li> <li> <p>A confirmation prompt to send to the user to confirm an intent. For example, \"Shall I order your pizza?\"</p> </li> <li> <p>A conclusion statement to send to the user after the intent is fulfilled. For example, \"I ordered your pizza.\"</p> </li> <li> <p>A follow-up prompt that asks the user for additional activity. For example, \"Do you want a drink with your pizza?\"</p> </li> </ul>",
      "method": "put",
      "endpoint": "bots/:botId/botversions/:botVersion/botlocales/:localeId/intents/",
      "responses": [
        {
          "uuid": "065848a5-bcfb-4bfc-994f-43eb70516f3a",
          "body": "{\n  \"intentId\": \"\",\n  \"intentName\": \"\",\n  \"description\": \"\",\n  \"parentIntentSignature\": \"\",\n  \"sampleUtterances\": [\n    {\n      \"utterance\": \"\"\n    }\n  ],\n  \"dialogCodeHook\": {\n    \"enabled\": {{faker 'random.boolean'}}\n  },\n  \"fulfillmentCodeHook\": {\n    \"enabled\": {{faker 'random.boolean'}}\n  },\n  \"intentConfirmationSetting\": {\n    \"promptSpecification\": {\n      \"messageGroups\": [\n        {\n          \"message\": {\n            \"plainTextMessage\": {\n              \"value\": \"\"\n            },\n            \"customPayload\": {\n              \"value\": \"\"\n            },\n            \"ssmlMessage\": {\n              \"value\": \"\"\n            },\n            \"imageResponseCard\": {\n              \"title\": \"\",\n              \"subtitle\": \"\",\n              \"imageUrl\": \"\",\n              \"buttons\": [\n                {\n                  \"text\": \"\",\n                  \"value\": \"\"\n                }\n              ]\n            }\n          },\n          \"variations\": [\n            {\n              \"plainTextMessage\": {\n                \"value\": \"\"\n              },\n              \"customPayload\": {\n                \"value\": \"\"\n              },\n              \"ssmlMessage\": {\n                \"value\": \"\"\n              },\n              \"imageResponseCard\": {\n                \"title\": \"\",\n                \"subtitle\": \"\",\n                \"imageUrl\": \"\",\n                \"buttons\": [\n                  {\n                    \"text\": \"\",\n                    \"value\": \"\"\n                  }\n                ]\n              }\n            }\n          ]\n        }\n      ],\n      \"maxRetries\": {{faker 'random.number'}},\n      \"allowInterrupt\": {{faker 'random.boolean'}}\n    },\n    \"declinationResponse\": {\n      \"messageGroups\": [\n        {\n          \"message\": {\n            \"plainTextMessage\": {\n              \"value\": \"\"\n            },\n            \"customPayload\": {\n              \"value\": \"\"\n            },\n            \"ssmlMessage\": {\n              \"value\": \"\"\n            },\n            \"imageResponseCard\": {\n              \"title\": \"\",\n              \"subtitle\": \"\",\n              \"imageUrl\": \"\",\n              \"buttons\": [\n                {\n                  \"text\": \"\",\n                  \"value\": \"\"\n                }\n              ]\n            }\n          },\n          \"variations\": [\n            {\n              \"plainTextMessage\": {\n                \"value\": \"\"\n              },\n              \"customPayload\": {\n                \"value\": \"\"\n              },\n              \"ssmlMessage\": {\n                \"value\": \"\"\n              },\n              \"imageResponseCard\": {\n                \"title\": \"\",\n                \"subtitle\": \"\",\n                \"imageUrl\": \"\",\n                \"buttons\": [\n                  {\n                    \"text\": \"\",\n                    \"value\": \"\"\n                  }\n                ]\n              }\n            }\n          ]\n        }\n      ],\n      \"allowInterrupt\": {{faker 'random.boolean'}}\n    },\n    \"active\": {{faker 'random.boolean'}}\n  },\n  \"intentClosingSetting\": {\n    \"closingResponse\": {\n      \"messageGroups\": [\n        {\n          \"message\": {\n            \"plainTextMessage\": {\n              \"value\": \"\"\n            },\n            \"customPayload\": {\n              \"value\": \"\"\n            },\n            \"ssmlMessage\": {\n              \"value\": \"\"\n            },\n            \"imageResponseCard\": {\n              \"title\": \"\",\n              \"subtitle\": \"\",\n              \"imageUrl\": \"\",\n              \"buttons\": [\n                {\n                  \"text\": \"\",\n                  \"value\": \"\"\n                }\n              ]\n            }\n          },\n          \"variations\": [\n            {\n              \"plainTextMessage\": {\n                \"value\": \"\"\n              },\n              \"customPayload\": {\n                \"value\": \"\"\n              },\n              \"ssmlMessage\": {\n                \"value\": \"\"\n              },\n              \"imageResponseCard\": {\n                \"title\": \"\",\n                \"subtitle\": \"\",\n                \"imageUrl\": \"\",\n                \"buttons\": [\n                  {\n                    \"text\": \"\",\n                    \"value\": \"\"\n                  }\n                ]\n              }\n            }\n          ]\n        }\n      ],\n      \"allowInterrupt\": {{faker 'random.boolean'}}\n    },\n    \"active\": {{faker 'random.boolean'}}\n  },\n  \"inputContexts\": [\n    {\n      \"name\": \"\"\n    }\n  ],\n  \"outputContexts\": [\n    {\n      \"name\": \"\",\n      \"timeToLiveInSeconds\": {{faker 'random.number'}},\n      \"turnsToLive\": {{faker 'random.number'}}\n    }\n  ],\n  \"kendraConfiguration\": {\n    \"kendraIndex\": \"\",\n    \"queryFilterStringEnabled\": {{faker 'random.boolean'}},\n    \"queryFilterString\": \"\"\n  },\n  \"botId\": \"\",\n  \"botVersion\": \"\",\n  \"localeId\": \"\",\n  \"creationDateTime\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cb4f28a6-1d85-449a-9e31-2db6ec4fcef9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f43f1e47-19e1-4bf2-9dd5-ddf64c8d271d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceQuotaExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8fb2026d-4b7c-4697-8fda-e8c7631c9cc8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "296f7216-1e5c-4c7a-9483-e72d899fae08",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "PreconditionFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9e3bea9a-494c-4d2a-adaa-873edf063036",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "321d5710-3c8b-4f7e-9962-2355bc47f819",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "64121379-e633-48f0-b23a-2b9b774ca9f3",
      "documentation": "Get a list of intents that meet the specified criteria.",
      "method": "post",
      "endpoint": "bots/:botId/botversions/:botVersion/botlocales/:localeId/intents/",
      "responses": [
        {
          "uuid": "db531a2d-e447-4851-baf1-a76e31063a53",
          "body": "{\n  \"botId\": \"\",\n  \"botVersion\": \"\",\n  \"localeId\": \"\",\n  \"intentSummaries\": [\n    {\n      \"intentId\": \"\",\n      \"intentName\": \"\",\n      \"description\": \"\",\n      \"parentIntentSignature\": \"\",\n      \"inputContexts\": [\n        {\n          \"name\": \"\"\n        }\n      ],\n      \"outputContexts\": [\n        {\n          \"name\": \"\",\n          \"timeToLiveInSeconds\": {{faker 'random.number'}},\n          \"turnsToLive\": {{faker 'random.number'}}\n        }\n      ],\n      \"lastUpdatedDateTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "04ee0dca-5e12-4660-a94b-4a481b78e469",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c58e519c-dd24-42ec-a752-1ffa743dc7e3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceQuotaExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1b6d65da-a186-44d3-a2d5-907345824f4d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8c4df36a-4b79-4dc3-9fb6-6110fbfdfa72",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f2682d9f-4259-4393-899b-1388def2c5ee",
      "documentation": "Creates a new resource policy with the specified policy statements.",
      "method": "post",
      "endpoint": "policy/:resourceArn/",
      "responses": [
        {
          "uuid": "671d2f19-194f-4620-a628-017288c8315f",
          "body": "{\n  \"resourceArn\": \"\",\n  \"revisionId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cf994045-31a4-4b7e-ba64-6ee47a5ecb22",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9d200b05-581a-4d05-8e48-36b11fcce4a6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceQuotaExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "356e2c50-82d5-41c4-8514-a6080915cb54",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "PreconditionFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9bc23fd1-a499-463b-8366-f42e2f3c2149",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0b79fcf1-fd4a-4c17-954c-d4e280386270",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f5f01e97-eb8d-47b1-8cc6-f4f13709a289",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e7d450a9-935e-4f56-81c3-b5779ee93cab",
      "documentation": "Removes an existing policy from a bot or bot alias. If the resource doesn't have a policy attached, Amazon Lex returns an exception.",
      "method": "delete",
      "endpoint": "policy/:resourceArn/",
      "responses": [
        {
          "uuid": "6934cf17-b255-4730-81f1-89b2db9b82bf",
          "body": "{\n  \"resourceArn\": \"\",\n  \"revisionId\": \"\"\n}",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b377464f-4da9-4be1-960d-c422fdcb293d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3a161d3f-daaf-41ac-9ee4-979cda357667",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "PreconditionFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ce1607e5-9d2a-4a23-9182-735a9e49fd2b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f6dc4c33-384f-4998-ba77-1782a5198d55",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "69d0690f-3a53-4923-8142-b9774a7b5bb6",
      "documentation": "Gets the resource policy and policy revision for a bot or bot alias.",
      "method": "get",
      "endpoint": "policy/:resourceArn/",
      "responses": [
        {
          "uuid": "8c8af187-d35f-4373-a9b9-9f35326921e4",
          "body": "{\n  \"resourceArn\": \"\",\n  \"policy\": \"\",\n  \"revisionId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8f73dc9f-4005-4f53-9194-8ba13eb0f60f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "afed0f0d-e577-4fb3-a78e-3099ab33e984",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "45627fbb-3fab-4886-a202-986e4dfef498",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1b9470b7-99f1-4301-aeb7-8bb32ede80e3",
      "documentation": "Replaces the existing resource policy for a bot or bot alias with a new one. If the policy doesn't exist, Amazon Lex returns an exception.",
      "method": "put",
      "endpoint": "policy/:resourceArn/",
      "responses": [
        {
          "uuid": "de99c6a8-1adc-4270-845c-c98695894476",
          "body": "{\n  \"resourceArn\": \"\",\n  \"revisionId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "852df47b-7458-440b-99b2-1749e83aa162",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a3eff250-5871-4efc-832c-0eed25d5b433",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceQuotaExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9755b6c2-dfd9-440d-a31e-a5546b39dc73",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "PreconditionFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ed1e2359-1722-41bf-9a1f-dc2ffdf1f306",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a98b28be-7cf0-4ba1-bb41-7fef2a6b139d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "75797dcf-c1fa-476c-8d19-caccd8a0aa57",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dfc78063-190b-4e73-954d-c9b45bbd9ccb",
      "documentation": "<p>Adds a new resource policy statement to a bot or bot alias. If a resource policy exists, the statement is added to the current resource policy. If a policy doesn't exist, a new policy is created.</p> <p>You can't create a resource policy statement that allows cross-account access.</p>",
      "method": "post",
      "endpoint": "policy/:resourceArn/statements/",
      "responses": [
        {
          "uuid": "c4e98d87-94c1-439e-bbbf-4d5d75501efd",
          "body": "{\n  \"resourceArn\": \"\",\n  \"revisionId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "24eb85cf-a2c9-47b0-a29d-b0323f8eadc9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fd35b589-bb4d-49d8-8043-baf938a0dbbb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "13fe91d8-b0aa-44a6-96cd-565020d5b592",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ServiceQuotaExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "869719e0-e96a-4205-be6a-d60e20967af8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "PreconditionFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "05e3ce6a-84d6-41e1-9e15-0b025947fad4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fe8b6634-79d4-4d27-be93-128e1315ce1f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "73b3910b-000c-47d5-86e3-b6b3a646ef2a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "19174cda-bc0a-4de9-83f9-b780edd749fd",
      "documentation": "Creates a slot in an intent. A slot is a variable needed to fulfill an intent. For example, an <code>OrderPizza</code> intent might need slots for size, crust, and number of pizzas. For each slot, you define one or more utterances that Amazon Lex uses to elicit a response from the user. ",
      "method": "put",
      "endpoint": "bots/:botId/botversions/:botVersion/botlocales/:localeId/intents/:intentId/slots/",
      "responses": [
        {
          "uuid": "70dbbf8f-51dc-4a4c-afd1-d39e62438f85",
          "body": "{\n  \"slotId\": \"\",\n  \"slotName\": \"\",\n  \"description\": \"\",\n  \"slotTypeId\": \"\",\n  \"valueElicitationSetting\": {\n    \"defaultValueSpecification\": {\n      \"defaultValueList\": [\n        {\n          \"defaultValue\": \"\"\n        }\n      ]\n    },\n    \"slotConstraint\": \"\",\n    \"promptSpecification\": {\n      \"messageGroups\": [\n        {\n          \"message\": {\n            \"plainTextMessage\": {\n              \"value\": \"\"\n            },\n            \"customPayload\": {\n              \"value\": \"\"\n            },\n            \"ssmlMessage\": {\n              \"value\": \"\"\n            },\n            \"imageResponseCard\": {\n              \"title\": \"\",\n              \"subtitle\": \"\",\n              \"imageUrl\": \"\",\n              \"buttons\": [\n                {\n                  \"text\": \"\",\n                  \"value\": \"\"\n                }\n              ]\n            }\n          },\n          \"variations\": [\n            {\n              \"plainTextMessage\": {\n                \"value\": \"\"\n              },\n              \"customPayload\": {\n                \"value\": \"\"\n              },\n              \"ssmlMessage\": {\n                \"value\": \"\"\n              },\n              \"imageResponseCard\": {\n                \"title\": \"\",\n                \"subtitle\": \"\",\n                \"imageUrl\": \"\",\n                \"buttons\": [\n                  {\n                    \"text\": \"\",\n                    \"value\": \"\"\n                  }\n                ]\n              }\n            }\n          ]\n        }\n      ],\n      \"maxRetries\": {{faker 'random.number'}},\n      \"allowInterrupt\": {{faker 'random.boolean'}}\n    },\n    \"sampleUtterances\": [\n      {\n        \"utterance\": \"\"\n      }\n    ],\n    \"waitAndContinueSpecification\": {\n      \"waitingResponse\": {\n        \"messageGroups\": [\n          {\n            \"message\": {\n              \"plainTextMessage\": {\n                \"value\": \"\"\n              },\n              \"customPayload\": {\n                \"value\": \"\"\n              },\n              \"ssmlMessage\": {\n                \"value\": \"\"\n              },\n              \"imageResponseCard\": {\n                \"title\": \"\",\n                \"subtitle\": \"\",\n                \"imageUrl\": \"\",\n                \"buttons\": [\n                  {\n                    \"text\": \"\",\n                    \"value\": \"\"\n                  }\n                ]\n              }\n            },\n            \"variations\": [\n              {\n                \"plainTextMessage\": {\n                  \"value\": \"\"\n                },\n                \"customPayload\": {\n                  \"value\": \"\"\n                },\n                \"ssmlMessage\": {\n                  \"value\": \"\"\n                },\n                \"imageResponseCard\": {\n                  \"title\": \"\",\n                  \"subtitle\": \"\",\n                  \"imageUrl\": \"\",\n                  \"buttons\": [\n                    {\n                      \"text\": \"\",\n                      \"value\": \"\"\n                    }\n                  ]\n                }\n              }\n            ]\n          }\n        ],\n        \"allowInterrupt\": {{faker 'random.boolean'}}\n      },\n      \"continueResponse\": {\n        \"messageGroups\": [\n          {\n            \"message\": {\n              \"plainTextMessage\": {\n                \"value\": \"\"\n              },\n              \"customPayload\": {\n                \"value\": \"\"\n              },\n              \"ssmlMessage\": {\n                \"value\": \"\"\n              },\n              \"imageResponseCard\": {\n                \"title\": \"\",\n                \"subtitle\": \"\",\n                \"imageUrl\": \"\",\n                \"buttons\": [\n                  {\n                    \"text\": \"\",\n                    \"value\": \"\"\n                  }\n                ]\n              }\n            },\n            \"variations\": [\n              {\n                \"plainTextMessage\": {\n                  \"value\": \"\"\n                },\n                \"customPayload\": {\n                  \"value\": \"\"\n                },\n                \"ssmlMessage\": {\n                  \"value\": \"\"\n                },\n                \"imageResponseCard\": {\n                  \"title\": \"\",\n                  \"subtitle\": \"\",\n                  \"imageUrl\": \"\",\n                  \"buttons\": [\n                    {\n                      \"text\": \"\",\n                      \"value\": \"\"\n                    }\n                  ]\n                }\n              }\n            ]\n          }\n        ],\n        \"allowInterrupt\": {{faker 'random.boolean'}}\n      },\n      \"stillWaitingResponse\": {\n        \"messageGroups\": [\n          {\n            \"message\": {\n              \"plainTextMessage\": {\n                \"value\": \"\"\n              },\n              \"customPayload\": {\n                \"value\": \"\"\n              },\n              \"ssmlMessage\": {\n                \"value\": \"\"\n              },\n              \"imageResponseCard\": {\n                \"title\": \"\",\n                \"subtitle\": \"\",\n                \"imageUrl\": \"\",\n                \"buttons\": [\n                  {\n                    \"text\": \"\",\n                    \"value\": \"\"\n                  }\n                ]\n              }\n            },\n            \"variations\": [\n              {\n                \"plainTextMessage\": {\n                  \"value\": \"\"\n                },\n                \"customPayload\": {\n                  \"value\": \"\"\n                },\n                \"ssmlMessage\": {\n                  \"value\": \"\"\n                },\n                \"imageResponseCard\": {\n                  \"title\": \"\",\n                  \"subtitle\": \"\",\n                  \"imageUrl\": \"\",\n                  \"buttons\": [\n                    {\n                      \"text\": \"\",\n                      \"value\": \"\"\n                    }\n                  ]\n                }\n              }\n            ]\n          }\n        ],\n        \"frequencyInSeconds\": {{faker 'random.number'}},\n        \"timeoutInSeconds\": {{faker 'random.number'}},\n        \"allowInterrupt\": {{faker 'random.boolean'}}\n      },\n      \"active\": {{faker 'random.boolean'}}\n    }\n  },\n  \"obfuscationSetting\": {\n    \"obfuscationSettingType\": \"\"\n  },\n  \"botId\": \"\",\n  \"botVersion\": \"\",\n  \"localeId\": \"\",\n  \"intentId\": \"\",\n  \"creationDateTime\": \"{{faker 'date.recent' 365}}\",\n  \"multipleValuesSetting\": {\n    \"allowMultipleValues\": {{faker 'random.boolean'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "048c0f5d-06c0-4b3d-9e46-327be4ed3218",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3630fe0b-7a5a-4b99-894a-308d22c46aeb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceQuotaExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "77579a33-5f06-4c87-ac2e-19fbeeab1c41",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2603ad97-f110-45e5-9dcb-7710ae5ae833",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "PreconditionFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dccca939-91f7-4a81-a00a-d2ddf56c5065",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3f0c90de-7734-4de4-92c7-b898eb5e47a6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9c0f01b2-a180-4342-a3cb-bc15fe0bf7cf",
      "documentation": "Gets a list of slots that match the specified criteria.",
      "method": "post",
      "endpoint": "bots/:botId/botversions/:botVersion/botlocales/:localeId/intents/:intentId/slots/",
      "responses": [
        {
          "uuid": "74a7af4f-4bf0-4b17-be67-7fdd932fdd72",
          "body": "{\n  \"botId\": \"\",\n  \"botVersion\": \"\",\n  \"localeId\": \"\",\n  \"intentId\": \"\",\n  \"slotSummaries\": [\n    {\n      \"slotId\": \"\",\n      \"slotName\": \"\",\n      \"description\": \"\",\n      \"slotConstraint\": \"\",\n      \"slotTypeId\": \"\",\n      \"valueElicitationPromptSpecification\": {\n        \"messageGroups\": [\n          {\n            \"message\": {\n              \"plainTextMessage\": {\n                \"value\": \"\"\n              },\n              \"customPayload\": {\n                \"value\": \"\"\n              },\n              \"ssmlMessage\": {\n                \"value\": \"\"\n              },\n              \"imageResponseCard\": {\n                \"title\": \"\",\n                \"subtitle\": \"\",\n                \"imageUrl\": \"\",\n                \"buttons\": [\n                  {\n                    \"text\": \"\",\n                    \"value\": \"\"\n                  }\n                ]\n              }\n            },\n            \"variations\": [\n              {\n                \"plainTextMessage\": {\n                  \"value\": \"\"\n                },\n                \"customPayload\": {\n                  \"value\": \"\"\n                },\n                \"ssmlMessage\": {\n                  \"value\": \"\"\n                },\n                \"imageResponseCard\": {\n                  \"title\": \"\",\n                  \"subtitle\": \"\",\n                  \"imageUrl\": \"\",\n                  \"buttons\": [\n                    {\n                      \"text\": \"\",\n                      \"value\": \"\"\n                    }\n                  ]\n                }\n              }\n            ]\n          }\n        ],\n        \"maxRetries\": {{faker 'random.number'}},\n        \"allowInterrupt\": {{faker 'random.boolean'}}\n      },\n      \"lastUpdatedDateTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "38b0ba27-30fa-4594-a376-463180ed33f1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8642e222-89bf-401e-b45a-00436b897b36",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceQuotaExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6fdd7ddf-d8a2-4613-9e86-0b4884ba7485",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1a1cd3b4-0d03-4745-8adb-0668f2ae8b17",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e90c51da-b6e3-4423-879f-302522922129",
      "documentation": "<p>Creates a custom slot type</p> <p> To create a custom slot type, specify a name for the slot type and a set of enumeration values, the values that a slot of this type can assume. </p>",
      "method": "put",
      "endpoint": "bots/:botId/botversions/:botVersion/botlocales/:localeId/slottypes/",
      "responses": [
        {
          "uuid": "e2b47966-2e27-42ee-85e1-1ca87269c7d0",
          "body": "{\n  \"slotTypeId\": \"\",\n  \"slotTypeName\": \"\",\n  \"description\": \"\",\n  \"slotTypeValues\": [\n    {\n      \"sampleValue\": {\n        \"value\": \"\"\n      },\n      \"synonyms\": [\n        {\n          \"value\": \"\"\n        }\n      ]\n    }\n  ],\n  \"valueSelectionSetting\": {\n    \"resolutionStrategy\": \"\",\n    \"regexFilter\": {\n      \"pattern\": \"\"\n    }\n  },\n  \"parentSlotTypeSignature\": \"\",\n  \"botId\": \"\",\n  \"botVersion\": \"\",\n  \"localeId\": \"\",\n  \"creationDateTime\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cf593552-0e91-4812-8138-e3f5b7989f77",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f2045124-2e75-4f9a-a970-fa08571809c3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceQuotaExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b878cf96-4cc3-4787-b941-fca12b5feacf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f26e23ad-51fc-4f68-a6d6-08e4a037a687",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "PreconditionFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7fbcdeee-9989-4c24-bfd7-46cb17774cb0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f13f6db0-dcb6-4b05-8afd-a11a97cfc602",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4f088dbb-5642-48cf-9389-d72faf84a70d",
      "documentation": "Gets a list of slot types that match the specified criteria.",
      "method": "post",
      "endpoint": "bots/:botId/botversions/:botVersion/botlocales/:localeId/slottypes/",
      "responses": [
        {
          "uuid": "0d9ad883-47ef-4dab-a0e6-25387d553870",
          "body": "{\n  \"botId\": \"\",\n  \"botVersion\": \"\",\n  \"localeId\": \"\",\n  \"slotTypeSummaries\": [\n    {\n      \"slotTypeId\": \"\",\n      \"slotTypeName\": \"\",\n      \"description\": \"\",\n      \"parentSlotTypeSignature\": \"\",\n      \"lastUpdatedDateTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "29bd4c7b-bd5b-4d7e-9643-959dfa458a2f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7c0efc8c-91f5-47db-a990-c50fe5dc3792",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceQuotaExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "410392ec-2250-4985-b18e-4f7241c9c0eb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a95efb28-5eed-4b75-9d5e-aaf1c3be90ac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "83c58cca-078b-42d5-a003-caa26b4aafb1",
      "documentation": "Gets a pre-signed S3 write URL that you use to upload the zip archive when importing a bot or a bot locale. ",
      "method": "post",
      "endpoint": "createuploadurl/",
      "responses": [
        {
          "uuid": "b15cfcfb-5679-4681-827b-94bce3cef95a",
          "body": "{\n  \"importId\": \"\",\n  \"uploadUrl\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c0bf4d45-6c33-46cb-90b2-97d9ecf147b4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cf392bf2-a439-49c4-a3a3-894b4553de51",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0c858f0a-539e-42f2-aafd-333035d48cd3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "969ba34b-b933-498c-bfb9-cda9d3269f87",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c1b6bbc2-00ed-4cfb-a18f-5dfb6547f325",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e5b4e3a9-d77a-402b-83e7-d60a88e9f589",
      "documentation": "<p>Deletes all versions of a bot, including the <code>Draft</code> version. To delete a specific version, use the <code>DeleteBotVersion</code> operation.</p> <p>When you delete a bot, all of the resources contained in the bot are also deleted. Deleting a bot removes all locales, intents, slot, and slot types defined for the bot.</p> <p>If a bot has an alias, the <code>DeleteBot</code> operation returns a <code>ResourceInUseException</code> exception. If you want to delete the bot and the alias, set the <code>skipResourceInUseCheck</code> parameter to <code>true</code>.</p>",
      "method": "delete",
      "endpoint": "bots/:botId/",
      "responses": [
        {
          "uuid": "a94865eb-6768-4d47-b263-a8ef596a383d",
          "body": "{\n  \"botId\": \"\",\n  \"botStatus\": \"\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d08a26b8-2863-42f0-b36f-5f8763a47ba6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b3c558d1-401f-4b54-9296-675dc7e0cc4a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceQuotaExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a4256c36-ec08-4719-8bc7-a63c0b1b915e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c5155b18-1654-4eed-a054-c53d5e7de256",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2786cd04-3876-4eec-a4ff-bb54394b756e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "PreconditionFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "560abbef-c028-4a97-bda2-f57c3d6aa804",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "652eb3c8-14d1-41eb-bc79-9e71cb0c92c4",
      "documentation": "Provides metadata information about a bot. ",
      "method": "get",
      "endpoint": "bots/:botId/",
      "responses": [
        {
          "uuid": "15b75ba1-c39f-48b5-bc8e-243e1d096fb8",
          "body": "{\n  \"botId\": \"\",\n  \"botName\": \"\",\n  \"description\": \"\",\n  \"roleArn\": \"\",\n  \"dataPrivacy\": {\n    \"childDirected\": {{faker 'random.boolean'}}\n  },\n  \"idleSessionTTLInSeconds\": {{faker 'random.number'}},\n  \"botStatus\": \"\",\n  \"creationDateTime\": \"{{faker 'date.recent' 365}}\",\n  \"lastUpdatedDateTime\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b40ea937-0574-47c1-9b2c-65c936918cb1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bbcfccaf-c861-4d57-a1d7-8210c25a7d36",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceQuotaExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "de4d82d6-deb8-4515-8d48-51336b5b26f6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4e28989a-d12d-48ae-920d-ca58358685e5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ba1f3b70-27e1-48e7-a568-c8f53fefa40b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dae255cb-1a28-4bfc-9080-9775df43e912",
      "documentation": "Updates the configuration of an existing bot. ",
      "method": "put",
      "endpoint": "bots/:botId/",
      "responses": [
        {
          "uuid": "0f4ba133-a462-4428-8403-17b899148de4",
          "body": "{\n  \"botId\": \"\",\n  \"botName\": \"\",\n  \"description\": \"\",\n  \"roleArn\": \"\",\n  \"dataPrivacy\": {\n    \"childDirected\": {{faker 'random.boolean'}}\n  },\n  \"idleSessionTTLInSeconds\": {{faker 'random.number'}},\n  \"botStatus\": \"\",\n  \"creationDateTime\": \"{{faker 'date.recent' 365}}\",\n  \"lastUpdatedDateTime\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "60b7fc3f-0d56-459f-bf94-accffc62dc7c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bb491676-9d45-41f8-b459-61f59f56a1e2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceQuotaExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b4d38ff5-b652-4c8b-b9e0-410b5ce1311f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1c05e0e5-7153-473b-b3c8-392c81c5877c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "PreconditionFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1ed8d598-f76f-4813-adef-3a092eed3671",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7fb1e012-966b-4d7d-b331-8391128ef751",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b49947b0-8c76-4a66-b5b1-9b2c485bbb2e",
      "documentation": "Deletes the specified bot alias.",
      "method": "delete",
      "endpoint": "bots/:botId/botaliases/:botAliasId/",
      "responses": [
        {
          "uuid": "069da580-07c4-4ab9-b721-9b4cc8e9c7e9",
          "body": "{\n  \"botAliasId\": \"\",\n  \"botId\": \"\",\n  \"botAliasStatus\": \"\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "845d93ff-4fa2-43b6-9335-8e371f655350",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "17c8fc06-c8ce-436f-925d-94027a9426e7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceQuotaExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "74fdd2b7-c858-4c59-960a-b85d2d656203",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c56d197f-648c-421d-afcb-c7d84f612cf9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2dd70ec3-9b5f-4c4f-b22f-18e23abbd0fc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "PreconditionFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "321e5fd6-0cb8-46eb-a9f1-37e48a6f2f8e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c5bb513e-5380-43b7-8da1-6df4f518dc8f",
      "documentation": "Get information about a specific bot alias.",
      "method": "get",
      "endpoint": "bots/:botId/botaliases/:botAliasId/",
      "responses": [
        {
          "uuid": "c1af018c-86bd-49b6-8f43-f0200466eb1b",
          "body": "{\n  \"botAliasId\": \"\",\n  \"botAliasName\": \"\",\n  \"description\": \"\",\n  \"botVersion\": \"\",\n  \"botAliasLocaleSettings\": {},\n  \"conversationLogSettings\": {\n    \"textLogSettings\": [\n      {\n        \"enabled\": {{faker 'random.boolean'}},\n        \"destination\": {\n          \"cloudWatch\": {\n            \"cloudWatchLogGroupArn\": \"\",\n            \"logPrefix\": \"\"\n          }\n        }\n      }\n    ],\n    \"audioLogSettings\": [\n      {\n        \"enabled\": {{faker 'random.boolean'}},\n        \"destination\": {\n          \"s3Bucket\": {\n            \"kmsKeyArn\": \"\",\n            \"s3BucketArn\": \"\",\n            \"logPrefix\": \"\"\n          }\n        }\n      }\n    ]\n  },\n  \"sentimentAnalysisSettings\": {\n    \"detectSentiment\": {{faker 'random.boolean'}}\n  },\n  \"botAliasHistoryEvents\": [\n    {\n      \"botVersion\": \"\",\n      \"startDate\": \"{{faker 'date.recent' 365}}\",\n      \"endDate\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"botAliasStatus\": \"\",\n  \"botId\": \"\",\n  \"creationDateTime\": \"{{faker 'date.recent' 365}}\",\n  \"lastUpdatedDateTime\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bed831a6-a1ed-4bae-8b1b-6b544ab52b1f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "24c32378-501b-4a60-b123-12dce7a4d94c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceQuotaExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2ad52340-fbe7-474c-b7a0-8ffeefe8eea8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6fbaaa89-cbf3-49a8-b631-5c3193d29b71",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0d57b9cf-c076-479e-985d-364f37e88484",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "42eae917-5134-4275-995e-ab2a2bd83d7c",
      "documentation": "Updates the configuration of an existing bot alias.",
      "method": "put",
      "endpoint": "bots/:botId/botaliases/:botAliasId/",
      "responses": [
        {
          "uuid": "272dc0c2-6e2f-46d0-9322-9b817049d3c1",
          "body": "{\n  \"botAliasId\": \"\",\n  \"botAliasName\": \"\",\n  \"description\": \"\",\n  \"botVersion\": \"\",\n  \"botAliasLocaleSettings\": {},\n  \"conversationLogSettings\": {\n    \"textLogSettings\": [\n      {\n        \"enabled\": {{faker 'random.boolean'}},\n        \"destination\": {\n          \"cloudWatch\": {\n            \"cloudWatchLogGroupArn\": \"\",\n            \"logPrefix\": \"\"\n          }\n        }\n      }\n    ],\n    \"audioLogSettings\": [\n      {\n        \"enabled\": {{faker 'random.boolean'}},\n        \"destination\": {\n          \"s3Bucket\": {\n            \"kmsKeyArn\": \"\",\n            \"s3BucketArn\": \"\",\n            \"logPrefix\": \"\"\n          }\n        }\n      }\n    ]\n  },\n  \"sentimentAnalysisSettings\": {\n    \"detectSentiment\": {{faker 'random.boolean'}}\n  },\n  \"botAliasStatus\": \"\",\n  \"botId\": \"\",\n  \"creationDateTime\": \"{{faker 'date.recent' 365}}\",\n  \"lastUpdatedDateTime\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9f6dc36d-05c7-4d05-8c80-ed8be1666655",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ae87d1e9-55c8-4a76-9c19-aaf5840cc3ee",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceQuotaExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b05a9802-46db-4927-a841-dcd855c5200d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ea5ddcf9-7907-44c2-9ef1-401ab517cc21",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "PreconditionFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f0ae26be-4fcf-4964-8ec8-a83d30b72401",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "694aebaf-4e04-47a1-8ec1-7922c63d5d46",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f71fc5da-ccd4-4e3d-a6a3-5e6bb4b6cea0",
      "documentation": "Deletes a specific version of a bot. To delete all version of a bot, use the <a>DeleteBot</a> operation.",
      "method": "delete",
      "endpoint": "bots/:botId/botversions/:botVersion/",
      "responses": [
        {
          "uuid": "6627a9e7-2574-4f4f-8159-00b956b04a8d",
          "body": "{\n  \"botId\": \"\",\n  \"botVersion\": \"\",\n  \"botStatus\": \"\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "37e1bb3a-3974-4a1f-9e1a-72a2f24a5f54",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c836b35e-5ff4-4acd-9feb-62dba9a63a9e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceQuotaExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5a0a74a7-31f8-4a1d-bc86-3a97d3d2ab37",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f07eb7c1-07bc-47ba-aa94-3237f048d2e5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "376caf6c-a5d1-45b2-bda0-415c6f8c64ad",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "PreconditionFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8273d794-2786-4504-9b1c-36c8820ed912",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2bf45654-d9a5-4ccb-ba02-d62a97b5b3f4",
      "documentation": "Provides metadata about a version of a bot.",
      "method": "get",
      "endpoint": "bots/:botId/botversions/:botVersion/",
      "responses": [
        {
          "uuid": "74876667-b0b7-4d2d-807e-ec7645029fb9",
          "body": "{\n  \"botId\": \"\",\n  \"botName\": \"\",\n  \"botVersion\": \"\",\n  \"description\": \"\",\n  \"roleArn\": \"\",\n  \"dataPrivacy\": {\n    \"childDirected\": {{faker 'random.boolean'}}\n  },\n  \"idleSessionTTLInSeconds\": {{faker 'random.number'}},\n  \"botStatus\": \"\",\n  \"failureReasons\": [\n    \"\"\n  ],\n  \"creationDateTime\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "90a993a0-02ab-4267-a390-e92ecf0928fa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "89f293e1-e775-4de6-a51c-6707fc57142b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceQuotaExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "04eb877d-413a-4eed-b7a7-890317545ed9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2e1007f0-27f2-4c11-9224-4a2d01b0392f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "244550b3-d63f-42dd-b9d7-15bee82aa4ee",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "aa4c5346-a1af-4db1-b425-5bb2862f2b3d",
      "documentation": "Removes a previous export and the associated files stored in an S3 bucket.",
      "method": "delete",
      "endpoint": "exports/:exportId/",
      "responses": [
        {
          "uuid": "38e1183d-6faf-4141-a20e-e96fef7dfda4",
          "body": "{\n  \"exportId\": \"\",\n  \"exportStatus\": \"\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2547cdf9-4077-4f54-8466-4f6c297b1768",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a38a3dc6-bd8c-4bd3-aa14-15bce2aa531a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceQuotaExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "012fd972-a055-4050-9271-7fdf1ff8fc92",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c12e9082-171a-480b-8ba8-473276413be8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "PreconditionFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8666cddb-467c-4066-bdae-a275e521fb83",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "389f66d6-a328-43fa-8d44-6811704a149c",
      "documentation": "Gets information about a specific export.",
      "method": "get",
      "endpoint": "exports/:exportId/",
      "responses": [
        {
          "uuid": "bf96a9b0-7ebd-405c-8706-6d99cf46a154",
          "body": "{\n  \"exportId\": \"\",\n  \"resourceSpecification\": {\n    \"botExportSpecification\": {\n      \"botId\": \"\",\n      \"botVersion\": \"\"\n    },\n    \"botLocaleExportSpecification\": {\n      \"botId\": \"\",\n      \"botVersion\": \"\",\n      \"localeId\": \"\"\n    }\n  },\n  \"fileFormat\": \"\",\n  \"exportStatus\": \"\",\n  \"failureReasons\": [\n    \"\"\n  ],\n  \"downloadUrl\": \"\",\n  \"creationDateTime\": \"{{faker 'date.recent' 365}}\",\n  \"lastUpdatedDateTime\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5582d24d-c359-4b4b-a840-050250df5883",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "07a58b52-5da0-42e5-a845-c3d514716cc1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bc98bb09-afc8-499b-9c5f-0a465348f23c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b3d1b35b-4a6f-4e0c-9e5e-6d14fe40ac7f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8b533262-55eb-4443-acb4-2a095477b61b",
      "documentation": "<p>Updates the password used to protect an export zip archive.</p> <p>The password is not required. If you don't supply a password, Amazon Lex generates a zip file that is not protected by a password. This is the archive that is available at the pre-signed S3 URL provided by the operation.</p>",
      "method": "put",
      "endpoint": "exports/:exportId/",
      "responses": [
        {
          "uuid": "e441af53-ccd0-4837-ac36-6369ddb9c179",
          "body": "{\n  \"exportId\": \"\",\n  \"resourceSpecification\": {\n    \"botExportSpecification\": {\n      \"botId\": \"\",\n      \"botVersion\": \"\"\n    },\n    \"botLocaleExportSpecification\": {\n      \"botId\": \"\",\n      \"botVersion\": \"\",\n      \"localeId\": \"\"\n    }\n  },\n  \"fileFormat\": \"\",\n  \"exportStatus\": \"\",\n  \"creationDateTime\": \"{{faker 'date.recent' 365}}\",\n  \"lastUpdatedDateTime\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4d897fe9-76e0-45bf-9650-95a9816f63c7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6869b3dd-69d3-44b7-aea8-b775f38a2cce",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceQuotaExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bd2c7168-f446-470c-8011-3cba42af88c8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "df15e2a0-4b0f-454c-8be0-332e1a40150b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "980b6db7-bd4a-4e94-96f6-5ef98ebd609e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8fb8322f-bbe1-4e43-b0ad-61e04f3f9d49",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3e79ec8b-51aa-4312-b0e8-bda2362250f2",
      "documentation": "Removes a previous import and the associated file stored in an S3 bucket.",
      "method": "delete",
      "endpoint": "imports/:importId/",
      "responses": [
        {
          "uuid": "aff62d41-5b40-47f2-8cc4-24c2f2752b5b",
          "body": "{\n  \"importId\": \"\",\n  \"importStatus\": \"\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4ca71755-cf1f-43db-9b43-5e77418eaedf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "160a0d11-6c2e-4329-8418-e48d5c016133",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceQuotaExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b7a4ee79-79cc-4a10-b242-2a5158308366",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f22d3b1e-5a88-46b0-8389-cdf63de684ec",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "PreconditionFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "97e7736c-c17d-4453-8521-428207b61e44",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "376b6c74-9f7b-47b7-abbd-15f425e1566e",
      "documentation": "Gets information about a specific import.",
      "method": "get",
      "endpoint": "imports/:importId/",
      "responses": [
        {
          "uuid": "17cec15a-18f9-4c1c-854e-439ef1cb151d",
          "body": "{\n  \"importId\": \"\",\n  \"resourceSpecification\": {\n    \"botImportSpecification\": {\n      \"botName\": \"\",\n      \"roleArn\": \"\",\n      \"dataPrivacy\": {\n        \"childDirected\": {{faker 'random.boolean'}}\n      },\n      \"idleSessionTTLInSeconds\": {{faker 'random.number'}},\n      \"botTags\": {},\n      \"testBotAliasTags\": {}\n    },\n    \"botLocaleImportSpecification\": {\n      \"botId\": \"\",\n      \"botVersion\": \"\",\n      \"localeId\": \"\",\n      \"nluIntentConfidenceThreshold\": {{faker 'random.float'}},\n      \"voiceSettings\": {\n        \"voiceId\": \"\"\n      }\n    }\n  },\n  \"importedResourceId\": \"\",\n  \"importedResourceName\": \"\",\n  \"mergeStrategy\": \"\",\n  \"importStatus\": \"\",\n  \"failureReasons\": [\n    \"\"\n  ],\n  \"creationDateTime\": \"{{faker 'date.recent' 365}}\",\n  \"lastUpdatedDateTime\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "59d868cf-fe25-445f-ae89-ab563511ceb8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c4da2c17-fc81-4a9e-b7dc-2c01c851071e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "35d81094-8cfa-43cd-8b53-330e976f9d7e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2f32875f-c8a7-445f-bf5e-02f81cb874b8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "826b48be-bd75-4b2f-a978-818dc250f92e",
      "documentation": "<p>Removes the specified intent.</p> <p>Deleting an intent also deletes the slots associated with the intent.</p>",
      "method": "delete",
      "endpoint": "bots/:botId/botversions/:botVersion/botlocales/:localeId/intents/:intentId/",
      "responses": [
        {
          "uuid": "7c6d1500-8b30-4f73-9f91-598d8f9554af",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "59a3b74e-eb00-425a-9100-244482e9d8c4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "31b5caa6-efb3-422b-b47f-1ec414bff724",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceQuotaExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f83cab1a-1401-46a3-a5e5-7e234ac52ea4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9c0cbebb-0809-4471-9298-9521e6d2bd40",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d486a854-ef20-4a28-ae33-4796f555342e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "PreconditionFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e2f8a351-b074-46e2-b478-1f1400dfa993",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6b4eb069-bbeb-4eed-93ec-530b18aa517c",
      "documentation": "Returns metadata about an intent.",
      "method": "get",
      "endpoint": "bots/:botId/botversions/:botVersion/botlocales/:localeId/intents/:intentId/",
      "responses": [
        {
          "uuid": "ae4bfcf1-70a3-4121-8c61-8a3a6e8dfb85",
          "body": "{\n  \"intentId\": \"\",\n  \"intentName\": \"\",\n  \"description\": \"\",\n  \"parentIntentSignature\": \"\",\n  \"sampleUtterances\": [\n    {\n      \"utterance\": \"\"\n    }\n  ],\n  \"dialogCodeHook\": {\n    \"enabled\": {{faker 'random.boolean'}}\n  },\n  \"fulfillmentCodeHook\": {\n    \"enabled\": {{faker 'random.boolean'}}\n  },\n  \"slotPriorities\": [\n    {\n      \"priority\": {{faker 'random.number'}},\n      \"slotId\": \"\"\n    }\n  ],\n  \"intentConfirmationSetting\": {\n    \"promptSpecification\": {\n      \"messageGroups\": [\n        {\n          \"message\": {\n            \"plainTextMessage\": {\n              \"value\": \"\"\n            },\n            \"customPayload\": {\n              \"value\": \"\"\n            },\n            \"ssmlMessage\": {\n              \"value\": \"\"\n            },\n            \"imageResponseCard\": {\n              \"title\": \"\",\n              \"subtitle\": \"\",\n              \"imageUrl\": \"\",\n              \"buttons\": [\n                {\n                  \"text\": \"\",\n                  \"value\": \"\"\n                }\n              ]\n            }\n          },\n          \"variations\": [\n            {\n              \"plainTextMessage\": {\n                \"value\": \"\"\n              },\n              \"customPayload\": {\n                \"value\": \"\"\n              },\n              \"ssmlMessage\": {\n                \"value\": \"\"\n              },\n              \"imageResponseCard\": {\n                \"title\": \"\",\n                \"subtitle\": \"\",\n                \"imageUrl\": \"\",\n                \"buttons\": [\n                  {\n                    \"text\": \"\",\n                    \"value\": \"\"\n                  }\n                ]\n              }\n            }\n          ]\n        }\n      ],\n      \"maxRetries\": {{faker 'random.number'}},\n      \"allowInterrupt\": {{faker 'random.boolean'}}\n    },\n    \"declinationResponse\": {\n      \"messageGroups\": [\n        {\n          \"message\": {\n            \"plainTextMessage\": {\n              \"value\": \"\"\n            },\n            \"customPayload\": {\n              \"value\": \"\"\n            },\n            \"ssmlMessage\": {\n              \"value\": \"\"\n            },\n            \"imageResponseCard\": {\n              \"title\": \"\",\n              \"subtitle\": \"\",\n              \"imageUrl\": \"\",\n              \"buttons\": [\n                {\n                  \"text\": \"\",\n                  \"value\": \"\"\n                }\n              ]\n            }\n          },\n          \"variations\": [\n            {\n              \"plainTextMessage\": {\n                \"value\": \"\"\n              },\n              \"customPayload\": {\n                \"value\": \"\"\n              },\n              \"ssmlMessage\": {\n                \"value\": \"\"\n              },\n              \"imageResponseCard\": {\n                \"title\": \"\",\n                \"subtitle\": \"\",\n                \"imageUrl\": \"\",\n                \"buttons\": [\n                  {\n                    \"text\": \"\",\n                    \"value\": \"\"\n                  }\n                ]\n              }\n            }\n          ]\n        }\n      ],\n      \"allowInterrupt\": {{faker 'random.boolean'}}\n    },\n    \"active\": {{faker 'random.boolean'}}\n  },\n  \"intentClosingSetting\": {\n    \"closingResponse\": {\n      \"messageGroups\": [\n        {\n          \"message\": {\n            \"plainTextMessage\": {\n              \"value\": \"\"\n            },\n            \"customPayload\": {\n              \"value\": \"\"\n            },\n            \"ssmlMessage\": {\n              \"value\": \"\"\n            },\n            \"imageResponseCard\": {\n              \"title\": \"\",\n              \"subtitle\": \"\",\n              \"imageUrl\": \"\",\n              \"buttons\": [\n                {\n                  \"text\": \"\",\n                  \"value\": \"\"\n                }\n              ]\n            }\n          },\n          \"variations\": [\n            {\n              \"plainTextMessage\": {\n                \"value\": \"\"\n              },\n              \"customPayload\": {\n                \"value\": \"\"\n              },\n              \"ssmlMessage\": {\n                \"value\": \"\"\n              },\n              \"imageResponseCard\": {\n                \"title\": \"\",\n                \"subtitle\": \"\",\n                \"imageUrl\": \"\",\n                \"buttons\": [\n                  {\n                    \"text\": \"\",\n                    \"value\": \"\"\n                  }\n                ]\n              }\n            }\n          ]\n        }\n      ],\n      \"allowInterrupt\": {{faker 'random.boolean'}}\n    },\n    \"active\": {{faker 'random.boolean'}}\n  },\n  \"inputContexts\": [\n    {\n      \"name\": \"\"\n    }\n  ],\n  \"outputContexts\": [\n    {\n      \"name\": \"\",\n      \"timeToLiveInSeconds\": {{faker 'random.number'}},\n      \"turnsToLive\": {{faker 'random.number'}}\n    }\n  ],\n  \"kendraConfiguration\": {\n    \"kendraIndex\": \"\",\n    \"queryFilterStringEnabled\": {{faker 'random.boolean'}},\n    \"queryFilterString\": \"\"\n  },\n  \"botId\": \"\",\n  \"botVersion\": \"\",\n  \"localeId\": \"\",\n  \"creationDateTime\": \"{{faker 'date.recent' 365}}\",\n  \"lastUpdatedDateTime\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f88911ec-a6f8-472d-abba-f4562868efa2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6558c399-64d3-4e9a-942d-6068c9aaa88a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceQuotaExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6f42d982-94be-457a-a7b9-c459c9451753",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d82cc2d0-eb51-4217-88c1-67e0de1ca6a5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e1acc55d-42bc-4852-ba67-18497f5723e3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "83b833d1-3fdf-4245-baed-885637c67035",
      "documentation": "Updates the settings for an intent.",
      "method": "put",
      "endpoint": "bots/:botId/botversions/:botVersion/botlocales/:localeId/intents/:intentId/",
      "responses": [
        {
          "uuid": "ce93d1ac-c585-4058-a544-f9c4f0bda42e",
          "body": "{\n  \"intentId\": \"\",\n  \"intentName\": \"\",\n  \"description\": \"\",\n  \"parentIntentSignature\": \"\",\n  \"sampleUtterances\": [\n    {\n      \"utterance\": \"\"\n    }\n  ],\n  \"dialogCodeHook\": {\n    \"enabled\": {{faker 'random.boolean'}}\n  },\n  \"fulfillmentCodeHook\": {\n    \"enabled\": {{faker 'random.boolean'}}\n  },\n  \"slotPriorities\": [\n    {\n      \"priority\": {{faker 'random.number'}},\n      \"slotId\": \"\"\n    }\n  ],\n  \"intentConfirmationSetting\": {\n    \"promptSpecification\": {\n      \"messageGroups\": [\n        {\n          \"message\": {\n            \"plainTextMessage\": {\n              \"value\": \"\"\n            },\n            \"customPayload\": {\n              \"value\": \"\"\n            },\n            \"ssmlMessage\": {\n              \"value\": \"\"\n            },\n            \"imageResponseCard\": {\n              \"title\": \"\",\n              \"subtitle\": \"\",\n              \"imageUrl\": \"\",\n              \"buttons\": [\n                {\n                  \"text\": \"\",\n                  \"value\": \"\"\n                }\n              ]\n            }\n          },\n          \"variations\": [\n            {\n              \"plainTextMessage\": {\n                \"value\": \"\"\n              },\n              \"customPayload\": {\n                \"value\": \"\"\n              },\n              \"ssmlMessage\": {\n                \"value\": \"\"\n              },\n              \"imageResponseCard\": {\n                \"title\": \"\",\n                \"subtitle\": \"\",\n                \"imageUrl\": \"\",\n                \"buttons\": [\n                  {\n                    \"text\": \"\",\n                    \"value\": \"\"\n                  }\n                ]\n              }\n            }\n          ]\n        }\n      ],\n      \"maxRetries\": {{faker 'random.number'}},\n      \"allowInterrupt\": {{faker 'random.boolean'}}\n    },\n    \"declinationResponse\": {\n      \"messageGroups\": [\n        {\n          \"message\": {\n            \"plainTextMessage\": {\n              \"value\": \"\"\n            },\n            \"customPayload\": {\n              \"value\": \"\"\n            },\n            \"ssmlMessage\": {\n              \"value\": \"\"\n            },\n            \"imageResponseCard\": {\n              \"title\": \"\",\n              \"subtitle\": \"\",\n              \"imageUrl\": \"\",\n              \"buttons\": [\n                {\n                  \"text\": \"\",\n                  \"value\": \"\"\n                }\n              ]\n            }\n          },\n          \"variations\": [\n            {\n              \"plainTextMessage\": {\n                \"value\": \"\"\n              },\n              \"customPayload\": {\n                \"value\": \"\"\n              },\n              \"ssmlMessage\": {\n                \"value\": \"\"\n              },\n              \"imageResponseCard\": {\n                \"title\": \"\",\n                \"subtitle\": \"\",\n                \"imageUrl\": \"\",\n                \"buttons\": [\n                  {\n                    \"text\": \"\",\n                    \"value\": \"\"\n                  }\n                ]\n              }\n            }\n          ]\n        }\n      ],\n      \"allowInterrupt\": {{faker 'random.boolean'}}\n    },\n    \"active\": {{faker 'random.boolean'}}\n  },\n  \"intentClosingSetting\": {\n    \"closingResponse\": {\n      \"messageGroups\": [\n        {\n          \"message\": {\n            \"plainTextMessage\": {\n              \"value\": \"\"\n            },\n            \"customPayload\": {\n              \"value\": \"\"\n            },\n            \"ssmlMessage\": {\n              \"value\": \"\"\n            },\n            \"imageResponseCard\": {\n              \"title\": \"\",\n              \"subtitle\": \"\",\n              \"imageUrl\": \"\",\n              \"buttons\": [\n                {\n                  \"text\": \"\",\n                  \"value\": \"\"\n                }\n              ]\n            }\n          },\n          \"variations\": [\n            {\n              \"plainTextMessage\": {\n                \"value\": \"\"\n              },\n              \"customPayload\": {\n                \"value\": \"\"\n              },\n              \"ssmlMessage\": {\n                \"value\": \"\"\n              },\n              \"imageResponseCard\": {\n                \"title\": \"\",\n                \"subtitle\": \"\",\n                \"imageUrl\": \"\",\n                \"buttons\": [\n                  {\n                    \"text\": \"\",\n                    \"value\": \"\"\n                  }\n                ]\n              }\n            }\n          ]\n        }\n      ],\n      \"allowInterrupt\": {{faker 'random.boolean'}}\n    },\n    \"active\": {{faker 'random.boolean'}}\n  },\n  \"inputContexts\": [\n    {\n      \"name\": \"\"\n    }\n  ],\n  \"outputContexts\": [\n    {\n      \"name\": \"\",\n      \"timeToLiveInSeconds\": {{faker 'random.number'}},\n      \"turnsToLive\": {{faker 'random.number'}}\n    }\n  ],\n  \"kendraConfiguration\": {\n    \"kendraIndex\": \"\",\n    \"queryFilterStringEnabled\": {{faker 'random.boolean'}},\n    \"queryFilterString\": \"\"\n  },\n  \"botId\": \"\",\n  \"botVersion\": \"\",\n  \"localeId\": \"\",\n  \"creationDateTime\": \"{{faker 'date.recent' 365}}\",\n  \"lastUpdatedDateTime\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "47ee8d44-966e-4a90-a5e1-7d554d5c8266",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9ed78e4e-b88c-4764-8f2e-2275476d276c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceQuotaExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6eca3b41-cb93-4c5b-830b-9cb4502f38ff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6e44a554-916a-44d0-8bb2-59f93c30a5bc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "PreconditionFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b44b16eb-5bcd-4a19-a393-396ca01c4260",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b0604453-6a39-498a-9287-a75d08227510",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b1d77a4a-a097-444f-875b-a1689233925c",
      "documentation": "Deletes a policy statement from a resource policy. If you delete the last statement from a policy, the policy is deleted. If you specify a statement ID that doesn't exist in the policy, or if the bot or bot alias doesn't have a policy attached, Amazon Lex returns an exception.",
      "method": "delete",
      "endpoint": "policy/:resourceArn/statements/:statementId/",
      "responses": [
        {
          "uuid": "1df35807-cadc-4996-a998-305fe73fa7cf",
          "body": "{\n  \"resourceArn\": \"\",\n  \"revisionId\": \"\"\n}",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2e8369da-928d-4436-86ac-99faab6d7b80",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0cbff816-187a-4ef2-9387-8243974f7de3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "PreconditionFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d6978c1f-d150-400c-a5fb-f68ef0943afe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "da2675c0-b81c-4cec-9f49-d65cdcf97054",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "446d4b8e-9d69-4ca6-ba17-b90ecf89939a",
      "documentation": "Deletes the specified slot from an intent.",
      "method": "delete",
      "endpoint": "bots/:botId/botversions/:botVersion/botlocales/:localeId/intents/:intentId/slots/:slotId/",
      "responses": [
        {
          "uuid": "3032d006-0743-4f2a-969d-807ec93f9769",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "695a7a90-dfa5-4f12-a1ec-7ebdae629a91",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9aae817b-fe54-4d40-9254-5448e1a71261",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceQuotaExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5c461e71-490c-4baa-96ab-08d4b60fb199",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3963016d-6dfd-4cf5-83f5-836a9a71cc9a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6718d447-3b37-4eec-a5ea-9ecf0fe4d2a4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "PreconditionFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "407ad043-cbb4-4f5f-aa3e-3908596410f4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "75819aae-fc9d-46ca-9e4e-9b68664c6f63",
      "documentation": "Gets metadata information about a slot.",
      "method": "get",
      "endpoint": "bots/:botId/botversions/:botVersion/botlocales/:localeId/intents/:intentId/slots/:slotId/",
      "responses": [
        {
          "uuid": "4fa27582-f8d9-4246-a041-a8eddf682334",
          "body": "{\n  \"slotId\": \"\",\n  \"slotName\": \"\",\n  \"description\": \"\",\n  \"slotTypeId\": \"\",\n  \"valueElicitationSetting\": {\n    \"defaultValueSpecification\": {\n      \"defaultValueList\": [\n        {\n          \"defaultValue\": \"\"\n        }\n      ]\n    },\n    \"slotConstraint\": \"\",\n    \"promptSpecification\": {\n      \"messageGroups\": [\n        {\n          \"message\": {\n            \"plainTextMessage\": {\n              \"value\": \"\"\n            },\n            \"customPayload\": {\n              \"value\": \"\"\n            },\n            \"ssmlMessage\": {\n              \"value\": \"\"\n            },\n            \"imageResponseCard\": {\n              \"title\": \"\",\n              \"subtitle\": \"\",\n              \"imageUrl\": \"\",\n              \"buttons\": [\n                {\n                  \"text\": \"\",\n                  \"value\": \"\"\n                }\n              ]\n            }\n          },\n          \"variations\": [\n            {\n              \"plainTextMessage\": {\n                \"value\": \"\"\n              },\n              \"customPayload\": {\n                \"value\": \"\"\n              },\n              \"ssmlMessage\": {\n                \"value\": \"\"\n              },\n              \"imageResponseCard\": {\n                \"title\": \"\",\n                \"subtitle\": \"\",\n                \"imageUrl\": \"\",\n                \"buttons\": [\n                  {\n                    \"text\": \"\",\n                    \"value\": \"\"\n                  }\n                ]\n              }\n            }\n          ]\n        }\n      ],\n      \"maxRetries\": {{faker 'random.number'}},\n      \"allowInterrupt\": {{faker 'random.boolean'}}\n    },\n    \"sampleUtterances\": [\n      {\n        \"utterance\": \"\"\n      }\n    ],\n    \"waitAndContinueSpecification\": {\n      \"waitingResponse\": {\n        \"messageGroups\": [\n          {\n            \"message\": {\n              \"plainTextMessage\": {\n                \"value\": \"\"\n              },\n              \"customPayload\": {\n                \"value\": \"\"\n              },\n              \"ssmlMessage\": {\n                \"value\": \"\"\n              },\n              \"imageResponseCard\": {\n                \"title\": \"\",\n                \"subtitle\": \"\",\n                \"imageUrl\": \"\",\n                \"buttons\": [\n                  {\n                    \"text\": \"\",\n                    \"value\": \"\"\n                  }\n                ]\n              }\n            },\n            \"variations\": [\n              {\n                \"plainTextMessage\": {\n                  \"value\": \"\"\n                },\n                \"customPayload\": {\n                  \"value\": \"\"\n                },\n                \"ssmlMessage\": {\n                  \"value\": \"\"\n                },\n                \"imageResponseCard\": {\n                  \"title\": \"\",\n                  \"subtitle\": \"\",\n                  \"imageUrl\": \"\",\n                  \"buttons\": [\n                    {\n                      \"text\": \"\",\n                      \"value\": \"\"\n                    }\n                  ]\n                }\n              }\n            ]\n          }\n        ],\n        \"allowInterrupt\": {{faker 'random.boolean'}}\n      },\n      \"continueResponse\": {\n        \"messageGroups\": [\n          {\n            \"message\": {\n              \"plainTextMessage\": {\n                \"value\": \"\"\n              },\n              \"customPayload\": {\n                \"value\": \"\"\n              },\n              \"ssmlMessage\": {\n                \"value\": \"\"\n              },\n              \"imageResponseCard\": {\n                \"title\": \"\",\n                \"subtitle\": \"\",\n                \"imageUrl\": \"\",\n                \"buttons\": [\n                  {\n                    \"text\": \"\",\n                    \"value\": \"\"\n                  }\n                ]\n              }\n            },\n            \"variations\": [\n              {\n                \"plainTextMessage\": {\n                  \"value\": \"\"\n                },\n                \"customPayload\": {\n                  \"value\": \"\"\n                },\n                \"ssmlMessage\": {\n                  \"value\": \"\"\n                },\n                \"imageResponseCard\": {\n                  \"title\": \"\",\n                  \"subtitle\": \"\",\n                  \"imageUrl\": \"\",\n                  \"buttons\": [\n                    {\n                      \"text\": \"\",\n                      \"value\": \"\"\n                    }\n                  ]\n                }\n              }\n            ]\n          }\n        ],\n        \"allowInterrupt\": {{faker 'random.boolean'}}\n      },\n      \"stillWaitingResponse\": {\n        \"messageGroups\": [\n          {\n            \"message\": {\n              \"plainTextMessage\": {\n                \"value\": \"\"\n              },\n              \"customPayload\": {\n                \"value\": \"\"\n              },\n              \"ssmlMessage\": {\n                \"value\": \"\"\n              },\n              \"imageResponseCard\": {\n                \"title\": \"\",\n                \"subtitle\": \"\",\n                \"imageUrl\": \"\",\n                \"buttons\": [\n                  {\n                    \"text\": \"\",\n                    \"value\": \"\"\n                  }\n                ]\n              }\n            },\n            \"variations\": [\n              {\n                \"plainTextMessage\": {\n                  \"value\": \"\"\n                },\n                \"customPayload\": {\n                  \"value\": \"\"\n                },\n                \"ssmlMessage\": {\n                  \"value\": \"\"\n                },\n                \"imageResponseCard\": {\n                  \"title\": \"\",\n                  \"subtitle\": \"\",\n                  \"imageUrl\": \"\",\n                  \"buttons\": [\n                    {\n                      \"text\": \"\",\n                      \"value\": \"\"\n                    }\n                  ]\n                }\n              }\n            ]\n          }\n        ],\n        \"frequencyInSeconds\": {{faker 'random.number'}},\n        \"timeoutInSeconds\": {{faker 'random.number'}},\n        \"allowInterrupt\": {{faker 'random.boolean'}}\n      },\n      \"active\": {{faker 'random.boolean'}}\n    }\n  },\n  \"obfuscationSetting\": {\n    \"obfuscationSettingType\": \"\"\n  },\n  \"botId\": \"\",\n  \"botVersion\": \"\",\n  \"localeId\": \"\",\n  \"intentId\": \"\",\n  \"creationDateTime\": \"{{faker 'date.recent' 365}}\",\n  \"lastUpdatedDateTime\": \"{{faker 'date.recent' 365}}\",\n  \"multipleValuesSetting\": {\n    \"allowMultipleValues\": {{faker 'random.boolean'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "815de6b1-fea4-42a3-bedd-f7ea6be42fe9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5339beb8-44e0-4979-9114-840ef146d2d9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceQuotaExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "52cf04a0-52d6-45be-9a53-0d66b6a2790d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b749a08f-034a-4a41-8fce-5f592ba36d55",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3f2f9540-39b9-499f-8291-68327b9540c5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "21c78dd0-897d-4c75-81aa-a1a5b7522dca",
      "documentation": "Updates the settings for a slot.",
      "method": "put",
      "endpoint": "bots/:botId/botversions/:botVersion/botlocales/:localeId/intents/:intentId/slots/:slotId/",
      "responses": [
        {
          "uuid": "507d092f-bf1c-4923-9126-e105af801c20",
          "body": "{\n  \"slotId\": \"\",\n  \"slotName\": \"\",\n  \"description\": \"\",\n  \"slotTypeId\": \"\",\n  \"valueElicitationSetting\": {\n    \"defaultValueSpecification\": {\n      \"defaultValueList\": [\n        {\n          \"defaultValue\": \"\"\n        }\n      ]\n    },\n    \"slotConstraint\": \"\",\n    \"promptSpecification\": {\n      \"messageGroups\": [\n        {\n          \"message\": {\n            \"plainTextMessage\": {\n              \"value\": \"\"\n            },\n            \"customPayload\": {\n              \"value\": \"\"\n            },\n            \"ssmlMessage\": {\n              \"value\": \"\"\n            },\n            \"imageResponseCard\": {\n              \"title\": \"\",\n              \"subtitle\": \"\",\n              \"imageUrl\": \"\",\n              \"buttons\": [\n                {\n                  \"text\": \"\",\n                  \"value\": \"\"\n                }\n              ]\n            }\n          },\n          \"variations\": [\n            {\n              \"plainTextMessage\": {\n                \"value\": \"\"\n              },\n              \"customPayload\": {\n                \"value\": \"\"\n              },\n              \"ssmlMessage\": {\n                \"value\": \"\"\n              },\n              \"imageResponseCard\": {\n                \"title\": \"\",\n                \"subtitle\": \"\",\n                \"imageUrl\": \"\",\n                \"buttons\": [\n                  {\n                    \"text\": \"\",\n                    \"value\": \"\"\n                  }\n                ]\n              }\n            }\n          ]\n        }\n      ],\n      \"maxRetries\": {{faker 'random.number'}},\n      \"allowInterrupt\": {{faker 'random.boolean'}}\n    },\n    \"sampleUtterances\": [\n      {\n        \"utterance\": \"\"\n      }\n    ],\n    \"waitAndContinueSpecification\": {\n      \"waitingResponse\": {\n        \"messageGroups\": [\n          {\n            \"message\": {\n              \"plainTextMessage\": {\n                \"value\": \"\"\n              },\n              \"customPayload\": {\n                \"value\": \"\"\n              },\n              \"ssmlMessage\": {\n                \"value\": \"\"\n              },\n              \"imageResponseCard\": {\n                \"title\": \"\",\n                \"subtitle\": \"\",\n                \"imageUrl\": \"\",\n                \"buttons\": [\n                  {\n                    \"text\": \"\",\n                    \"value\": \"\"\n                  }\n                ]\n              }\n            },\n            \"variations\": [\n              {\n                \"plainTextMessage\": {\n                  \"value\": \"\"\n                },\n                \"customPayload\": {\n                  \"value\": \"\"\n                },\n                \"ssmlMessage\": {\n                  \"value\": \"\"\n                },\n                \"imageResponseCard\": {\n                  \"title\": \"\",\n                  \"subtitle\": \"\",\n                  \"imageUrl\": \"\",\n                  \"buttons\": [\n                    {\n                      \"text\": \"\",\n                      \"value\": \"\"\n                    }\n                  ]\n                }\n              }\n            ]\n          }\n        ],\n        \"allowInterrupt\": {{faker 'random.boolean'}}\n      },\n      \"continueResponse\": {\n        \"messageGroups\": [\n          {\n            \"message\": {\n              \"plainTextMessage\": {\n                \"value\": \"\"\n              },\n              \"customPayload\": {\n                \"value\": \"\"\n              },\n              \"ssmlMessage\": {\n                \"value\": \"\"\n              },\n              \"imageResponseCard\": {\n                \"title\": \"\",\n                \"subtitle\": \"\",\n                \"imageUrl\": \"\",\n                \"buttons\": [\n                  {\n                    \"text\": \"\",\n                    \"value\": \"\"\n                  }\n                ]\n              }\n            },\n            \"variations\": [\n              {\n                \"plainTextMessage\": {\n                  \"value\": \"\"\n                },\n                \"customPayload\": {\n                  \"value\": \"\"\n                },\n                \"ssmlMessage\": {\n                  \"value\": \"\"\n                },\n                \"imageResponseCard\": {\n                  \"title\": \"\",\n                  \"subtitle\": \"\",\n                  \"imageUrl\": \"\",\n                  \"buttons\": [\n                    {\n                      \"text\": \"\",\n                      \"value\": \"\"\n                    }\n                  ]\n                }\n              }\n            ]\n          }\n        ],\n        \"allowInterrupt\": {{faker 'random.boolean'}}\n      },\n      \"stillWaitingResponse\": {\n        \"messageGroups\": [\n          {\n            \"message\": {\n              \"plainTextMessage\": {\n                \"value\": \"\"\n              },\n              \"customPayload\": {\n                \"value\": \"\"\n              },\n              \"ssmlMessage\": {\n                \"value\": \"\"\n              },\n              \"imageResponseCard\": {\n                \"title\": \"\",\n                \"subtitle\": \"\",\n                \"imageUrl\": \"\",\n                \"buttons\": [\n                  {\n                    \"text\": \"\",\n                    \"value\": \"\"\n                  }\n                ]\n              }\n            },\n            \"variations\": [\n              {\n                \"plainTextMessage\": {\n                  \"value\": \"\"\n                },\n                \"customPayload\": {\n                  \"value\": \"\"\n                },\n                \"ssmlMessage\": {\n                  \"value\": \"\"\n                },\n                \"imageResponseCard\": {\n                  \"title\": \"\",\n                  \"subtitle\": \"\",\n                  \"imageUrl\": \"\",\n                  \"buttons\": [\n                    {\n                      \"text\": \"\",\n                      \"value\": \"\"\n                    }\n                  ]\n                }\n              }\n            ]\n          }\n        ],\n        \"frequencyInSeconds\": {{faker 'random.number'}},\n        \"timeoutInSeconds\": {{faker 'random.number'}},\n        \"allowInterrupt\": {{faker 'random.boolean'}}\n      },\n      \"active\": {{faker 'random.boolean'}}\n    }\n  },\n  \"obfuscationSetting\": {\n    \"obfuscationSettingType\": \"\"\n  },\n  \"botId\": \"\",\n  \"botVersion\": \"\",\n  \"localeId\": \"\",\n  \"intentId\": \"\",\n  \"creationDateTime\": \"{{faker 'date.recent' 365}}\",\n  \"lastUpdatedDateTime\": \"{{faker 'date.recent' 365}}\",\n  \"multipleValuesSetting\": {\n    \"allowMultipleValues\": {{faker 'random.boolean'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1480f6a4-6326-4170-a6b4-d9e3e43bf732",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a98bc26e-7e75-48d5-95eb-fe4fc80a4a8c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceQuotaExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4f42d54a-19c9-464d-91a0-147427d9d8c2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dd367a3e-36b2-4658-bf60-db30249f68c6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "PreconditionFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "31d8481c-eaf7-4efa-9431-e84c581c3331",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6054bf79-d71f-45f3-8061-e4be16d843b7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "62e3f99e-6584-46ec-a7d3-08e101191648",
      "documentation": "<p>Deletes a slot type from a bot locale.</p> <p>If a slot is using the slot type, Amazon Lex throws a <code>ResourceInUseException</code> exception. To avoid the exception, set the <code>skipResourceInUseCheck</code> parameter to <code>true</code>.</p>",
      "method": "delete",
      "endpoint": "bots/:botId/botversions/:botVersion/botlocales/:localeId/slottypes/:slotTypeId/",
      "responses": [
        {
          "uuid": "c74ec842-a911-4597-837f-59bc9aa9aacd",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ddeb2c0a-43d1-46d2-a341-3cf25c90fe1b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "63a64e96-ca6e-41de-a20f-26ae6ccdaec2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceQuotaExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "42dbdc15-7165-43d7-8408-178a5cb7b50d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c233520e-31c7-4479-ad3d-7ca4e390e114",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2bc7efe6-8a58-494a-aafa-d115678697db",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "PreconditionFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fd189909-d8d4-4c91-aa34-09bff0202b2c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "025d0db5-6807-438e-a4d4-f95c19d2c77a",
      "documentation": "Gets metadata information about a slot type.",
      "method": "get",
      "endpoint": "bots/:botId/botversions/:botVersion/botlocales/:localeId/slottypes/:slotTypeId/",
      "responses": [
        {
          "uuid": "ef228168-b75d-4f8c-a957-e13d467179f1",
          "body": "{\n  \"slotTypeId\": \"\",\n  \"slotTypeName\": \"\",\n  \"description\": \"\",\n  \"slotTypeValues\": [\n    {\n      \"sampleValue\": {\n        \"value\": \"\"\n      },\n      \"synonyms\": [\n        {\n          \"value\": \"\"\n        }\n      ]\n    }\n  ],\n  \"valueSelectionSetting\": {\n    \"resolutionStrategy\": \"\",\n    \"regexFilter\": {\n      \"pattern\": \"\"\n    }\n  },\n  \"parentSlotTypeSignature\": \"\",\n  \"botId\": \"\",\n  \"botVersion\": \"\",\n  \"localeId\": \"\",\n  \"creationDateTime\": \"{{faker 'date.recent' 365}}\",\n  \"lastUpdatedDateTime\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "960e747b-1446-4b6a-a34d-f22f0a23cdea",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8a7c7701-0f54-4dda-9281-6bfd7e48aa5c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceQuotaExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e7abcfca-76d9-4837-840e-92c1d0acbb6b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5c2a4252-8130-4048-8149-7a2287b483d4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "845499f5-31cb-4c70-bba7-f435ce4748b5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f42be3cb-14ec-444d-bb6a-7c7b9caec23b",
      "documentation": "Updates the configuration of an existing slot type.",
      "method": "put",
      "endpoint": "bots/:botId/botversions/:botVersion/botlocales/:localeId/slottypes/:slotTypeId/",
      "responses": [
        {
          "uuid": "7315d02a-81dd-489f-b074-b6d3d14bb1d7",
          "body": "{\n  \"slotTypeId\": \"\",\n  \"slotTypeName\": \"\",\n  \"description\": \"\",\n  \"slotTypeValues\": [\n    {\n      \"sampleValue\": {\n        \"value\": \"\"\n      },\n      \"synonyms\": [\n        {\n          \"value\": \"\"\n        }\n      ]\n    }\n  ],\n  \"valueSelectionSetting\": {\n    \"resolutionStrategy\": \"\",\n    \"regexFilter\": {\n      \"pattern\": \"\"\n    }\n  },\n  \"parentSlotTypeSignature\": \"\",\n  \"botId\": \"\",\n  \"botVersion\": \"\",\n  \"localeId\": \"\",\n  \"creationDateTime\": \"{{faker 'date.recent' 365}}\",\n  \"lastUpdatedDateTime\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "87a12cf7-5308-43dc-ac83-ea340678338f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "951bb66f-6f8b-4eda-82dc-9e30ebfde943",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceQuotaExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8ff20f21-3342-4cf0-aa72-05d29360dfa4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "de3aa980-fc7f-4bde-9af3-e4dc7f5a38d5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "PreconditionFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8842432c-0721-40e1-a106-ced2fd19f5b1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "45d073ec-fed3-4738-85fd-19bcdb227e2a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "11df8ee6-a1c2-4875-bdb9-096ca57cdf95",
      "documentation": "<p>Gets a list of built-in intents provided by Amazon Lex that you can use in your bot. </p> <p>To use a built-in intent as a the base for your own intent, include the built-in intent signature in the <code>parentIntentSignature</code> parameter when you call the <code>CreateIntent</code> operation. For more information, see <a>CreateIntent</a>.</p>",
      "method": "post",
      "endpoint": "builtins/locales/:localeId/intents/",
      "responses": [
        {
          "uuid": "04fcc456-d525-44e7-a45b-5f75521ec518",
          "body": "{\n  \"builtInIntentSummaries\": [\n    {\n      \"intentSignature\": \"\",\n      \"description\": \"\"\n    }\n  ],\n  \"nextToken\": \"\",\n  \"localeId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "59f00e93-a70b-49d2-af74-4f638bf0462c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "64cd42a7-3ab6-42b8-ab0b-fe264661d594",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceQuotaExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "398527f6-d2b4-4157-bf6d-57d29625e857",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4eb7f58d-3141-4e19-a719-25c2432d8876",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "80503d88-2eb4-46d2-9e65-4ef8cda412a3",
      "documentation": "Gets a list of built-in slot types that meet the specified criteria.",
      "method": "post",
      "endpoint": "builtins/locales/:localeId/slottypes/",
      "responses": [
        {
          "uuid": "4863326b-2381-40d4-a5fd-a540f08a00d4",
          "body": "{\n  \"builtInSlotTypeSummaries\": [\n    {\n      \"slotTypeSignature\": \"\",\n      \"description\": \"\"\n    }\n  ],\n  \"nextToken\": \"\",\n  \"localeId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8313f1a0-54e0-40c0-8155-90cc9c2a15d6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5f55aba9-2eb5-415e-bdb0-9711bd49331c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceQuotaExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8d1457d6-6dc6-4678-a1fb-cd6e33c69d53",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ca78930f-e8f6-46c4-94ea-89a6e0ec7502",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "331e7316-d62f-42aa-ae1f-426c2df67d8a",
      "documentation": "Lists the imports for a bot or bot locale. Imports are kept in the list for 7 days.",
      "method": "post",
      "endpoint": "imports/",
      "responses": [
        {
          "uuid": "20ef61c3-d4f3-4f7a-8ecd-b6ed3d6eddda",
          "body": "{\n  \"botId\": \"\",\n  \"botVersion\": \"\",\n  \"importSummaries\": [\n    {\n      \"importId\": \"\",\n      \"importedResourceId\": \"\",\n      \"importedResourceName\": \"\",\n      \"importStatus\": \"\",\n      \"mergeStrategy\": \"\",\n      \"creationDateTime\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedDateTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e6d8713f-eeb2-4522-961e-17865670e824",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e7b8c269-e6d0-4646-a174-f997fd49e8dc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c34b4de1-c725-407b-a984-ae0be084d78e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "788998d9-11ae-4f4b-81d6-0fd4474a2df2",
      "documentation": "Starts importing a bot or bot locale from a zip archive that you uploaded to an S3 bucket.",
      "method": "put",
      "endpoint": "imports/",
      "responses": [
        {
          "uuid": "d3393bad-ffc9-45be-80f0-6466459049ac",
          "body": "{\n  \"importId\": \"\",\n  \"resourceSpecification\": {\n    \"botImportSpecification\": {\n      \"botName\": \"\",\n      \"roleArn\": \"\",\n      \"dataPrivacy\": {\n        \"childDirected\": {{faker 'random.boolean'}}\n      },\n      \"idleSessionTTLInSeconds\": {{faker 'random.number'}},\n      \"botTags\": {},\n      \"testBotAliasTags\": {}\n    },\n    \"botLocaleImportSpecification\": {\n      \"botId\": \"\",\n      \"botVersion\": \"\",\n      \"localeId\": \"\",\n      \"nluIntentConfidenceThreshold\": {{faker 'random.float'}},\n      \"voiceSettings\": {\n        \"voiceId\": \"\"\n      }\n    }\n  },\n  \"mergeStrategy\": \"\",\n  \"importStatus\": \"\",\n  \"creationDateTime\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e5ece341-036c-4faa-b9a7-57ddb6d30463",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8b5b95a0-4111-43e7-8127-e8ba0fc39ab2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceQuotaExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "af25c426-e79b-4f9c-8f7a-6d52f8f35ce8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e33678fd-72c5-4dbf-a71b-83ff3c3f97a1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7c059045-4f68-4fee-b270-d41623f434a7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "971b5943-eda1-4d21-a9ee-5ffaa0371a4e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4deedfc8-b167-4c0a-95f2-03e2f4da06ca",
      "documentation": "Gets a list of tags associated with a resource. Only bots, bot aliases, and bot channels can have tags associated with them.",
      "method": "get",
      "endpoint": "tags/:resourceARN",
      "responses": [
        {
          "uuid": "36b9ea2f-2fe7-4afb-9152-107e8e304796",
          "body": "{\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9bf635d3-b655-43f9-86fc-bd6e51663cc4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dba8c1ef-db2a-4f19-9d3a-22e13dd4eb06",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1b2cc259-b56d-4ead-b6f6-c322de57a80b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "531518a7-bc6f-43cb-b433-ba298e366392",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4a0e38b1-8256-4748-adfc-8126d09956bd",
      "documentation": "Adds the specified tags to the specified resource. If a tag key already exists, the existing value is replaced with the new value.",
      "method": "post",
      "endpoint": "tags/:resourceARN",
      "responses": [
        {
          "uuid": "9b122985-31e6-4fd1-ba3c-89b60f0a735a",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b1552302-ee2a-49a8-839e-ebec51548a00",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "04450317-3f7b-48dc-8801-569e951c5b4c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0b4ecae8-45bb-44d2-ac7d-7e76e4133f5c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d70981d8-15d2-43d7-9c4b-d370a6062f4d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5d82e36b-3748-4904-9629-6584227c85f0",
      "documentation": "Removes tags from a bot, bot alias, or bot channel.",
      "method": "delete",
      "endpoint": "tags/:resourceARN#tagKeys",
      "responses": [
        {
          "uuid": "4738ebc5-fa5a-455e-8c53-f9ca677bc237",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6beb7c20-0202-4389-90a6-58166060045c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dbac8a99-8a87-4b36-9412-6c7e4fe3a4d4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fdc399c1-f75c-4690-ad35-36e1d6c5c64f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0a37948a-2b4d-4755-81f6-00080d8764a8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}