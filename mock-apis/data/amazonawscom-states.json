{
  "uuid": "249cd704-015d-4e0a-9256-06f3fe5e5583",
  "lastMigration": 19,
  "name": "AWS Step Functions",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "12ddfc1a-f1d6-4b53-894b-54a5d193843f",
      "documentation": "<p>Creates an activity. An activity is a task that you write in any programming language and host on any machine that has access to AWS Step Functions. Activities must poll Step Functions using the <code>GetActivityTask</code> API action and respond using <code>SendTask*</code> API actions. This function lets Step Functions know the existence of your activity and returns an identifier for use in a state machine and when polling from the activity.</p> <note> <p>This operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.</p> </note> <note> <p> <code>CreateActivity</code> is an idempotent API. Subsequent requests won’t create a duplicate resource if it was already created. <code>CreateActivity</code>'s idempotency check is based on the activity <code>name</code>. If a following request has different <code>tags</code> values, Step Functions will ignore these differences and treat it as an idempotent request of the previous. In this case, <code>tags</code> will not be updated, even if they are different.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.CreateActivity",
      "responses": [
        {
          "uuid": "0b282023-9818-43e3-b640-c603412d5318",
          "body": "{\n  \"activityArn\": \"\",\n  \"creationDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f7f8a99b-ac88-4edd-8edc-188ba33043ce",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ActivityLimitExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a934708e-d756-4874-973c-e166fea778ac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidName",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3fb0f780-88d2-4c3e-a312-fb9773f9b11d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyTags",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "03999f20-fb4d-4be8-a29e-b8a99b77ed29",
      "documentation": "<p>Creates a state machine. A state machine consists of a collection of states that can do work (<code>Task</code> states), determine to which states to transition next (<code>Choice</code> states), stop an execution with an error (<code>Fail</code> states), and so on. State machines are specified using a JSON-based, structured language. For more information, see <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/concepts-amazon-states-language.html\">Amazon States Language</a> in the AWS Step Functions User Guide.</p> <note> <p>This operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.</p> </note> <note> <p> <code>CreateStateMachine</code> is an idempotent API. Subsequent requests won’t create a duplicate resource if it was already created. <code>CreateStateMachine</code>'s idempotency check is based on the state machine <code>name</code>, <code>definition</code>, <code>type</code>, <code>LoggingConfiguration</code> and <code>TracingConfiguration</code>. If a following request has a different <code>roleArn</code> or <code>tags</code>, Step Functions will ignore these differences and treat it as an idempotent request of the previous. In this case, <code>roleArn</code> and <code>tags</code> will not be updated, even if they are different.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.CreateStateMachine",
      "responses": [
        {
          "uuid": "f747dff2-23d2-4f79-8280-a5b3f181837c",
          "body": "{\n  \"stateMachineArn\": \"\",\n  \"creationDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cb3614a2-e078-49e8-b021-e25e6664b591",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidArn",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9fb2862f-e443-4585-b848-e4cd610817ce",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDefinition",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "86d5e0cd-9d2b-4307-b54e-be6d23ed5d9d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidName",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a9b4b6b4-f954-4983-8e2b-3f750d8fec00",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidLoggingConfiguration",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9f19c8b4-2d7e-491b-ac36-b49b6cfea327",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidTracingConfiguration",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9d06ec39-6cbd-45fb-9425-c53dd1d11e9f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "StateMachineAlreadyExists",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f930353a-0870-4225-bc2c-8a55fa60b227",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "StateMachineDeleting",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0edc6989-93ef-43e2-a55e-1746a68f3279",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "StateMachineLimitExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "73405ad7-1595-4681-bbd2-399b4dd9aa8a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "StateMachineTypeNotSupported",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d2edce45-e044-4623-ae5b-ffee6eb189f6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "TooManyTags",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "73334374-47e6-40fa-96c8-5585755394f9",
      "documentation": "Deletes an activity.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.DeleteActivity",
      "responses": [
        {
          "uuid": "09274175-9e23-4843-b473-d06caff82fff",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "842c9b21-6476-4bd5-9c1a-076d6904e946",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidArn",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "028156ab-d4d2-428f-9f00-bc7d0f41e567",
      "documentation": "<p>Deletes a state machine. This is an asynchronous operation: It sets the state machine's status to <code>DELETING</code> and begins the deletion process. </p> <note> <p>For <code>EXPRESS</code>state machines, the deletion will happen eventually (usually less than a minute). Running executions may emit logs after <code>DeleteStateMachine</code> API is called.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.DeleteStateMachine",
      "responses": [
        {
          "uuid": "0e82dcde-4df6-480f-8780-3d409ee5f136",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6c1603cb-7250-4f03-adc1-8d45f69a0dfd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidArn",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "53097df8-567b-4f47-b808-ec84fc12c5b4",
      "documentation": "<p>Describes an activity.</p> <note> <p>This operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.DescribeActivity",
      "responses": [
        {
          "uuid": "aead1f23-503d-4081-b2eb-a5914e0ccc1e",
          "body": "{\n  \"activityArn\": \"\",\n  \"name\": \"\",\n  \"creationDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6dde9bcc-b76d-4f2b-83d0-048ec5113461",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ActivityDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a5fcd5b2-5a19-4c43-8f3f-9ae01321934e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidArn",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cffcdcee-142c-4358-a7cc-bc5fc7227571",
      "documentation": "<p>Describes an execution.</p> <note> <p>This operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.</p> </note> <p>This API action is not supported by <code>EXPRESS</code> state machines.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.DescribeExecution",
      "responses": [
        {
          "uuid": "692929a2-146a-4273-aa69-d12828b6f98b",
          "body": "{\n  \"executionArn\": \"\",\n  \"stateMachineArn\": \"\",\n  \"name\": \"\",\n  \"status\": \"\",\n  \"startDate\": \"{{faker 'date.recent' 365}}\",\n  \"stopDate\": \"{{faker 'date.recent' 365}}\",\n  \"input\": \"\",\n  \"inputDetails\": {\n    \"included\": {{faker 'random.boolean'}}\n  },\n  \"output\": \"\",\n  \"outputDetails\": {\n    \"included\": {{faker 'random.boolean'}}\n  },\n  \"traceHeader\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5472be00-7505-4b69-9d08-319d24f35504",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ExecutionDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1bada62a-ecb4-437b-ae6a-953720a39c08",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidArn",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a61e2e8c-43bc-4846-97f9-b926b019b1ba",
      "documentation": "<p>Describes a state machine.</p> <note> <p>This operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.DescribeStateMachine",
      "responses": [
        {
          "uuid": "a8f16bcd-76bb-46e2-990a-b1c80ea70b2b",
          "body": "{\n  \"stateMachineArn\": \"\",\n  \"name\": \"\",\n  \"status\": \"\",\n  \"definition\": \"\",\n  \"roleArn\": \"\",\n  \"type\": \"\",\n  \"creationDate\": \"{{faker 'date.recent' 365}}\",\n  \"loggingConfiguration\": {\n    \"level\": \"\",\n    \"includeExecutionData\": {{faker 'random.boolean'}},\n    \"destinations\": [\n      {\n        \"cloudWatchLogsLogGroup\": {\n          \"logGroupArn\": \"\"\n        }\n      }\n    ]\n  },\n  \"tracingConfiguration\": {\n    \"enabled\": {{faker 'random.boolean'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "183d1a67-6367-48fa-88c6-7856162eb301",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidArn",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6cec3355-0066-4cd5-acc1-0c9691d6d76e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "StateMachineDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "895f302c-90f7-4324-b9a7-41f95016acfb",
      "documentation": "<p>Describes the state machine associated with a specific execution.</p> <note> <p>This operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.</p> </note> <p>This API action is not supported by <code>EXPRESS</code> state machines.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.DescribeStateMachineForExecution",
      "responses": [
        {
          "uuid": "e293d4b6-cfda-437f-b839-f3907584d891",
          "body": "{\n  \"stateMachineArn\": \"\",\n  \"name\": \"\",\n  \"definition\": \"\",\n  \"roleArn\": \"\",\n  \"updateDate\": \"{{faker 'date.recent' 365}}\",\n  \"loggingConfiguration\": {\n    \"level\": \"\",\n    \"includeExecutionData\": {{faker 'random.boolean'}},\n    \"destinations\": [\n      {\n        \"cloudWatchLogsLogGroup\": {\n          \"logGroupArn\": \"\"\n        }\n      }\n    ]\n  },\n  \"tracingConfiguration\": {\n    \"enabled\": {{faker 'random.boolean'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f3d74f89-f636-456c-96f2-72063820b1e0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ExecutionDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "981b16b0-efef-4a2e-96b4-468d0d72db77",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidArn",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b5566090-b233-4335-954b-aa8d80842026",
      "documentation": "<p>Used by workers to retrieve a task (with the specified activity ARN) which has been scheduled for execution by a running state machine. This initiates a long poll, where the service holds the HTTP connection open and responds as soon as a task becomes available (i.e. an execution of a task of this type is needed.) The maximum time the service holds on to the request before responding is 60 seconds. If no task is available within 60 seconds, the poll returns a <code>taskToken</code> with a null string.</p> <important> <p>Workers should set their client side socket timeout to at least 65 seconds (5 seconds higher than the maximum time the service may hold the poll request).</p> <p>Polling with <code>GetActivityTask</code> can cause latency in some implementations. See <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/bp-activity-pollers.html\">Avoid Latency When Polling for Activity Tasks</a> in the Step Functions Developer Guide.</p> </important>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.GetActivityTask",
      "responses": [
        {
          "uuid": "bf6b103d-a4aa-491d-9572-23460b9c94f7",
          "body": "{\n  \"taskToken\": \"\",\n  \"input\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1d8e3451-6020-4039-9f3c-a880dceae87a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ActivityDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f95d98d2-8841-43ed-9e65-aa45701d636b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ActivityWorkerLimitExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9149a2a2-ba80-4b7e-b2f3-5cc925b967df",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidArn",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8d1452f4-c219-445a-a1ce-9a2d2a5c3e36",
      "documentation": "<p>Returns the history of the specified execution as a list of events. By default, the results are returned in ascending order of the <code>timeStamp</code> of the events. Use the <code>reverseOrder</code> parameter to get the latest events first.</p> <p>If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken</i> error.</p> <p>This API action is not supported by <code>EXPRESS</code> state machines.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.GetExecutionHistory",
      "responses": [
        {
          "uuid": "8a79c512-4543-4eb5-8b97-99d6fb1d574f",
          "body": "{\n  \"events\": [\n    {\n      \"timestamp\": \"{{faker 'date.recent' 365}}\",\n      \"type\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"previousEventId\": {{faker 'random.number'}},\n      \"activityFailedEventDetails\": {\n        \"error\": \"\",\n        \"cause\": \"\"\n      },\n      \"activityScheduleFailedEventDetails\": {\n        \"error\": \"\",\n        \"cause\": \"\"\n      },\n      \"activityScheduledEventDetails\": {\n        \"resource\": \"\",\n        \"input\": \"\",\n        \"inputDetails\": {\n          \"truncated\": {{faker 'random.boolean'}}\n        },\n        \"timeoutInSeconds\": {{faker 'random.number'}},\n        \"heartbeatInSeconds\": {{faker 'random.number'}}\n      },\n      \"activityStartedEventDetails\": {\n        \"workerName\": \"\"\n      },\n      \"activitySucceededEventDetails\": {\n        \"output\": \"\",\n        \"outputDetails\": {\n          \"truncated\": {{faker 'random.boolean'}}\n        }\n      },\n      \"activityTimedOutEventDetails\": {\n        \"error\": \"\",\n        \"cause\": \"\"\n      },\n      \"taskFailedEventDetails\": {\n        \"resourceType\": \"\",\n        \"resource\": \"\",\n        \"error\": \"\",\n        \"cause\": \"\"\n      },\n      \"taskScheduledEventDetails\": {\n        \"resourceType\": \"\",\n        \"resource\": \"\",\n        \"region\": \"\",\n        \"parameters\": \"\",\n        \"timeoutInSeconds\": {{faker 'random.number'}},\n        \"heartbeatInSeconds\": {{faker 'random.number'}}\n      },\n      \"taskStartFailedEventDetails\": {\n        \"resourceType\": \"\",\n        \"resource\": \"\",\n        \"error\": \"\",\n        \"cause\": \"\"\n      },\n      \"taskStartedEventDetails\": {\n        \"resourceType\": \"\",\n        \"resource\": \"\"\n      },\n      \"taskSubmitFailedEventDetails\": {\n        \"resourceType\": \"\",\n        \"resource\": \"\",\n        \"error\": \"\",\n        \"cause\": \"\"\n      },\n      \"taskSubmittedEventDetails\": {\n        \"resourceType\": \"\",\n        \"resource\": \"\",\n        \"output\": \"\",\n        \"outputDetails\": {\n          \"truncated\": {{faker 'random.boolean'}}\n        }\n      },\n      \"taskSucceededEventDetails\": {\n        \"resourceType\": \"\",\n        \"resource\": \"\",\n        \"output\": \"\",\n        \"outputDetails\": {\n          \"truncated\": {{faker 'random.boolean'}}\n        }\n      },\n      \"taskTimedOutEventDetails\": {\n        \"resourceType\": \"\",\n        \"resource\": \"\",\n        \"error\": \"\",\n        \"cause\": \"\"\n      },\n      \"executionFailedEventDetails\": {\n        \"error\": \"\",\n        \"cause\": \"\"\n      },\n      \"executionStartedEventDetails\": {\n        \"input\": \"\",\n        \"inputDetails\": {\n          \"truncated\": {{faker 'random.boolean'}}\n        },\n        \"roleArn\": \"\"\n      },\n      \"executionSucceededEventDetails\": {\n        \"output\": \"\",\n        \"outputDetails\": {\n          \"truncated\": {{faker 'random.boolean'}}\n        }\n      },\n      \"executionAbortedEventDetails\": {\n        \"error\": \"\",\n        \"cause\": \"\"\n      },\n      \"executionTimedOutEventDetails\": {\n        \"error\": \"\",\n        \"cause\": \"\"\n      },\n      \"mapStateStartedEventDetails\": {\n        \"length\": {{faker 'random.number'}}\n      },\n      \"mapIterationStartedEventDetails\": {\n        \"name\": \"\",\n        \"index\": {{faker 'random.number'}}\n      },\n      \"mapIterationSucceededEventDetails\": {\n        \"name\": \"\",\n        \"index\": {{faker 'random.number'}}\n      },\n      \"mapIterationFailedEventDetails\": {\n        \"name\": \"\",\n        \"index\": {{faker 'random.number'}}\n      },\n      \"mapIterationAbortedEventDetails\": {\n        \"name\": \"\",\n        \"index\": {{faker 'random.number'}}\n      },\n      \"lambdaFunctionFailedEventDetails\": {\n        \"error\": \"\",\n        \"cause\": \"\"\n      },\n      \"lambdaFunctionScheduleFailedEventDetails\": {\n        \"error\": \"\",\n        \"cause\": \"\"\n      },\n      \"lambdaFunctionScheduledEventDetails\": {\n        \"resource\": \"\",\n        \"input\": \"\",\n        \"inputDetails\": {\n          \"truncated\": {{faker 'random.boolean'}}\n        },\n        \"timeoutInSeconds\": {{faker 'random.number'}}\n      },\n      \"lambdaFunctionStartFailedEventDetails\": {\n        \"error\": \"\",\n        \"cause\": \"\"\n      },\n      \"lambdaFunctionSucceededEventDetails\": {\n        \"output\": \"\",\n        \"outputDetails\": {\n          \"truncated\": {{faker 'random.boolean'}}\n        }\n      },\n      \"lambdaFunctionTimedOutEventDetails\": {\n        \"error\": \"\",\n        \"cause\": \"\"\n      },\n      \"stateEnteredEventDetails\": {\n        \"name\": \"\",\n        \"input\": \"\",\n        \"inputDetails\": {\n          \"truncated\": {{faker 'random.boolean'}}\n        }\n      },\n      \"stateExitedEventDetails\": {\n        \"name\": \"\",\n        \"output\": \"\",\n        \"outputDetails\": {\n          \"truncated\": {{faker 'random.boolean'}}\n        }\n      }\n    }\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0f3a8c5e-28eb-4691-9d59-51d7e2338a3c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ExecutionDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "21834ae3-6d41-4aa1-96da-32f3b7f0ad40",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidArn",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "73bd1a98-ada6-439e-ba7d-a3551211fef9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1806fb1a-da30-4554-af99-aca476073157",
      "documentation": "<p>Lists the existing activities.</p> <p>If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken</i> error.</p> <note> <p>This operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.ListActivities",
      "responses": [
        {
          "uuid": "953faafa-d069-4475-ace4-61d7c517e582",
          "body": "{\n  \"activities\": [\n    {\n      \"activityArn\": \"\",\n      \"name\": \"\",\n      \"creationDate\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ee492ba5-2532-46fc-bf47-4779dcf8ce68",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b54f1cad-94f9-4588-a95d-e6d68741377b",
      "documentation": "<p>Lists the executions of a state machine that meet the filtering criteria. Results are sorted by time, with the most recent execution first.</p> <p>If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken</i> error.</p> <note> <p>This operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.</p> </note> <p>This API action is not supported by <code>EXPRESS</code> state machines.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.ListExecutions",
      "responses": [
        {
          "uuid": "ba855487-b11d-43ad-bf22-253793399376",
          "body": "{\n  \"executions\": [\n    {\n      \"executionArn\": \"\",\n      \"stateMachineArn\": \"\",\n      \"name\": \"\",\n      \"status\": \"\",\n      \"startDate\": \"{{faker 'date.recent' 365}}\",\n      \"stopDate\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eb0bbef0-4249-4663-b8a6-d2efb61857df",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidArn",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "20f3629a-c886-4eba-aff0-cfc6aace3899",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7f5ebe94-1e35-46a6-a817-59e69e4506ce",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "StateMachineDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8615db58-9c96-4c48-b73c-f07a092f7c6c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "StateMachineTypeNotSupported",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a1b82b1d-256e-4e46-b980-6890075b2487",
      "documentation": "<p>Lists the existing state machines.</p> <p>If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken</i> error.</p> <note> <p>This operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.ListStateMachines",
      "responses": [
        {
          "uuid": "4185abfd-a3e9-4f66-be48-803402b5bb9d",
          "body": "{\n  \"stateMachines\": [\n    {\n      \"stateMachineArn\": \"\",\n      \"name\": \"\",\n      \"type\": \"\",\n      \"creationDate\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9db9f95a-4147-462f-a4fc-0f0962ca2a97",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "38ce288f-7d83-4edf-bbea-dd21fbd477d3",
      "documentation": "<p>List tags for a given resource.</p> <p>Tags may only contain Unicode letters, digits, white space, or these symbols: <code>_ . : / = + - @</code>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.ListTagsForResource",
      "responses": [
        {
          "uuid": "2e4318fe-f1b0-45f5-b57b-ae8a0119707b",
          "body": "{\n  \"tags\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9c17c4a2-b200-4efb-9034-01be0d3b3d12",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidArn",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "008ac6df-5cc3-4193-99f3-484cca89a307",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ac28266c-9352-4d93-902b-01f443723dd4",
      "documentation": "Used by activity workers and task states using the <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/connect-to-resource.html#connect-wait-token\">callback</a> pattern to report that the task identified by the <code>taskToken</code> failed.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.SendTaskFailure",
      "responses": [
        {
          "uuid": "51fa6005-0469-4aa2-872c-4a389861d4d3",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bc0b9602-f6e5-4a15-8f54-3b5d1b1a94d4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "TaskDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "714c8e73-d00b-42cd-a4ce-8288cd36319a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1989f2ec-aa06-48d9-986a-74692b149fee",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TaskTimedOut",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "618c0c7e-be44-4852-b07f-6e0aefb8b4f9",
      "documentation": "<p>Used by activity workers and task states using the <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/connect-to-resource.html#connect-wait-token\">callback</a> pattern to report to Step Functions that the task represented by the specified <code>taskToken</code> is still making progress. This action resets the <code>Heartbeat</code> clock. The <code>Heartbeat</code> threshold is specified in the state machine's Amazon States Language definition (<code>HeartbeatSeconds</code>). This action does not in itself create an event in the execution history. However, if the task times out, the execution history contains an <code>ActivityTimedOut</code> entry for activities, or a <code>TaskTimedOut</code> entry for for tasks using the <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/connect-to-resource.html#connect-sync\">job run</a> or <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/connect-to-resource.html#connect-wait-token\">callback</a> pattern.</p> <note> <p>The <code>Timeout</code> of a task, defined in the state machine's Amazon States Language definition, is its maximum allowed duration, regardless of the number of <a>SendTaskHeartbeat</a> requests received. Use <code>HeartbeatSeconds</code> to configure the timeout interval for heartbeats.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.SendTaskHeartbeat",
      "responses": [
        {
          "uuid": "1f85d262-ec4f-4a52-959a-3a1fc2b73ec8",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1b2f642a-1445-47cf-980b-cbdb83400e8a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "TaskDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "587652dd-9c2c-4f3a-9a7c-a4babf2e3a94",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a76e9be6-622b-4df4-856f-d4ab889e411a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TaskTimedOut",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b6d8636c-c70f-4c5e-8e4a-6408219c721a",
      "documentation": "Used by activity workers and task states using the <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/connect-to-resource.html#connect-wait-token\">callback</a> pattern to report that the task identified by the <code>taskToken</code> completed successfully.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.SendTaskSuccess",
      "responses": [
        {
          "uuid": "d873a6ef-6638-4ec6-9583-2fb246029788",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b2631c11-eef1-48cb-a8eb-98db6414b23d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "TaskDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aa46a303-0d3f-4403-b168-3fb7709cd120",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidOutput",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "749c6d3b-e5e2-4f08-96d0-ee26143b99e9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5a1b2650-8c67-4188-90db-246d981eb006",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TaskTimedOut",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "19a9d488-2578-457b-af03-f3a37ba687b7",
      "documentation": "<p>Starts a state machine execution.</p> <note> <p> <code>StartExecution</code> is idempotent. If <code>StartExecution</code> is called with the same name and input as a running execution, the call will succeed and return the same response as the original request. If the execution is closed or if the input is different, it will return a 400 <code>ExecutionAlreadyExists</code> error. Names can be reused after 90 days. </p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.StartExecution",
      "responses": [
        {
          "uuid": "91fc8377-04e4-45a7-8b3a-e1d5b4600076",
          "body": "{\n  \"executionArn\": \"\",\n  \"startDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fcca07c8-0e15-4d38-bfc5-6d71370f7e2e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ExecutionLimitExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b661009e-c66c-4c95-b9dc-a1f5699f9351",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ExecutionAlreadyExists",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2223f930-159b-4646-a3f1-e42d4e943ce8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidArn",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f2b86f24-3af3-438f-b1da-4408ba9ce337",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidExecutionInput",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "60cdf23f-2732-489e-b1a3-c617acb83d6f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidName",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fa4ad0a0-3f7d-4473-9ea3-9f220ecff601",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "StateMachineDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "68a50f3f-6e2b-46fe-812e-d4b835b82c4a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "StateMachineDeleting",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "94ac52b2-972c-4021-9a35-9d283aae86d8",
      "documentation": "Starts a Synchronous Express state machine execution.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.StartSyncExecution",
      "responses": [
        {
          "uuid": "5b8c2f2e-727f-46be-91f0-31836b391204",
          "body": "{\n  \"executionArn\": \"\",\n  \"stateMachineArn\": \"\",\n  \"name\": \"\",\n  \"startDate\": \"{{faker 'date.recent' 365}}\",\n  \"stopDate\": \"{{faker 'date.recent' 365}}\",\n  \"status\": \"\",\n  \"error\": \"\",\n  \"cause\": \"\",\n  \"input\": \"\",\n  \"inputDetails\": {\n    \"included\": {{faker 'random.boolean'}}\n  },\n  \"output\": \"\",\n  \"outputDetails\": {\n    \"included\": {{faker 'random.boolean'}}\n  },\n  \"traceHeader\": \"\",\n  \"billingDetails\": {\n    \"billedMemoryUsedInMB\": {{faker 'random.number'}},\n    \"billedDurationInMilliseconds\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f61873a5-57d2-4849-b8ed-99d15a9ac4db",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidArn",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "950a035c-4062-4a11-9613-6ff006e2c586",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidExecutionInput",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8d2314dc-e250-44e5-b1ed-6bfffa25ce70",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidName",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "261630d9-355c-41a3-b3ca-6e30185091c9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "StateMachineDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ffb02902-d962-4574-8c82-b6022a39efda",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "StateMachineDeleting",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8149dbbf-a4b9-4e1e-b711-29e2d85810e5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "StateMachineTypeNotSupported",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6f914112-7e4e-467d-b425-a7c78ab816e6",
      "documentation": "<p>Stops an execution.</p> <p>This API action is not supported by <code>EXPRESS</code> state machines.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.StopExecution",
      "responses": [
        {
          "uuid": "bf3469ed-e937-47e5-81c7-e3a03ac8620c",
          "body": "{\n  \"stopDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cf8a05f6-d2de-46c9-ae8d-7d5afb553936",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ExecutionDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e3d04773-66a8-4128-8bc7-0f6df99a1730",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidArn",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0dda8447-8364-4fa8-9fc5-c467ae97d72d",
      "documentation": "<p>Add a tag to a Step Functions resource.</p> <p>An array of key-value pairs. For more information, see <a href=\"https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html\">Using Cost Allocation Tags</a> in the <i>AWS Billing and Cost Management User Guide</i>, and <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_iam-tags.html\">Controlling Access Using IAM Tags</a>.</p> <p>Tags may only contain Unicode letters, digits, white space, or these symbols: <code>_ . : / = + - @</code>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.TagResource",
      "responses": [
        {
          "uuid": "4e7bfb67-502c-4012-9d3d-6f6a110fb2ad",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "44aaa314-a6ba-46f9-962c-338f9c7d0d9e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidArn",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7f09f023-553c-4a3b-a2d4-71b330182c41",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2b2646a3-56ed-47a2-afb5-58dc094ee2a8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyTags",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "98ffca61-7d25-4d3b-8b97-387133416874",
      "documentation": "Remove a tag from a Step Functions resource",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.UntagResource",
      "responses": [
        {
          "uuid": "e6be9ffd-13c7-4970-a0f7-6334f6011ab7",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c907d09f-879c-424f-be10-1338bb395bbb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidArn",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2e4ed013-419d-4dc1-8ff9-83f70764b5e3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "64ac2b69-f05c-4338-b4ae-a01d0a9efe9e",
      "documentation": "<p>Updates an existing state machine by modifying its <code>definition</code>, <code>roleArn</code>, or <code>loggingConfiguration</code>. Running executions will continue to use the previous <code>definition</code> and <code>roleArn</code>. You must include at least one of <code>definition</code> or <code>roleArn</code> or you will receive a <code>MissingRequiredParameter</code> error.</p> <note> <p>All <code>StartExecution</code> calls within a few seconds will use the updated <code>definition</code> and <code>roleArn</code>. Executions started immediately after calling <code>UpdateStateMachine</code> may use the previous state machine <code>definition</code> and <code>roleArn</code>. </p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.UpdateStateMachine",
      "responses": [
        {
          "uuid": "8611695e-9aeb-4e8c-9ae1-2c27701d754e",
          "body": "{\n  \"updateDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c7c35d5e-4fab-4b3a-81f7-340ee1c9b09d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidArn",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3c6e7e07-b98a-40a9-b1e8-9f0a40a10e1e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDefinition",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "321964fb-d68a-4e82-91e9-b902d00fa295",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidLoggingConfiguration",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f517fbf6-48f1-416f-ac1e-25fc48458ff2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidTracingConfiguration",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "83ab0acc-9817-468b-803b-84a4ea65557c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "MissingRequiredParameter",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d9b3e204-6d93-4915-a43a-80c7a07057ac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "StateMachineDeleting",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "948267b5-c107-4334-86f2-bb2cc7bf4155",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "StateMachineDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}