{
  "uuid": "d09839f2-b5d3-4d52-a893-682044699040",
  "lastMigration": 19,
  "name": "AWS Step Functions",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "c5ed9099-5177-4ccd-8be7-f919c39e139e",
      "documentation": "<p>Creates an activity. An activity is a task that you write in any programming language and host on any machine that has access to AWS Step Functions. Activities must poll Step Functions using the <code>GetActivityTask</code> API action and respond using <code>SendTask*</code> API actions. This function lets Step Functions know the existence of your activity and returns an identifier for use in a state machine and when polling from the activity.</p> <note> <p>This operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.</p> </note> <note> <p> <code>CreateActivity</code> is an idempotent API. Subsequent requests won’t create a duplicate resource if it was already created. <code>CreateActivity</code>'s idempotency check is based on the activity <code>name</code>. If a following request has different <code>tags</code> values, Step Functions will ignore these differences and treat it as an idempotent request of the previous. In this case, <code>tags</code> will not be updated, even if they are different.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.CreateActivity",
      "responses": [
        {
          "uuid": "060528b0-5dd7-45e4-8bbd-cd60f588a7ad",
          "body": "{\n  \"activityArn\": \"\",\n  \"creationDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e40fc640-d59a-4e4c-87f5-055b0cbe0040",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ActivityLimitExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "58374a7c-1057-4a86-9c0a-6f97e3cec76c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidName",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "662c27b7-d9e6-4b62-a0d2-1fe80aec66a7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyTags",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "36df5f6c-6754-4d36-95d7-d49a9b836144",
      "documentation": "<p>Creates a state machine. A state machine consists of a collection of states that can do work (<code>Task</code> states), determine to which states to transition next (<code>Choice</code> states), stop an execution with an error (<code>Fail</code> states), and so on. State machines are specified using a JSON-based, structured language. For more information, see <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/concepts-amazon-states-language.html\">Amazon States Language</a> in the AWS Step Functions User Guide.</p> <note> <p>This operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.</p> </note> <note> <p> <code>CreateStateMachine</code> is an idempotent API. Subsequent requests won’t create a duplicate resource if it was already created. <code>CreateStateMachine</code>'s idempotency check is based on the state machine <code>name</code>, <code>definition</code>, <code>type</code>, <code>LoggingConfiguration</code> and <code>TracingConfiguration</code>. If a following request has a different <code>roleArn</code> or <code>tags</code>, Step Functions will ignore these differences and treat it as an idempotent request of the previous. In this case, <code>roleArn</code> and <code>tags</code> will not be updated, even if they are different.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.CreateStateMachine",
      "responses": [
        {
          "uuid": "59c6a6ea-2962-4b9b-8c11-4bb31e947459",
          "body": "{\n  \"stateMachineArn\": \"\",\n  \"creationDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "184078c7-9257-48f2-aa9d-8766ee0b4110",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidArn",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c77ec58d-bc78-4015-927a-5394cdd7c03f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDefinition",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3ba446b5-1995-4702-8a4a-6bc9b57a1c66",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidName",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "50f87cca-1a43-4408-9530-b49ddfb644b3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidLoggingConfiguration",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0322d9aa-5a26-4cca-80a5-da0e8d157809",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidTracingConfiguration",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "80b02589-ba84-4628-8e67-a08565de2602",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "StateMachineAlreadyExists",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bc0d561d-aab0-4ede-8b5c-de85ac10f3cb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "StateMachineDeleting",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f0a3640f-86be-4867-a296-5b87673db69c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "StateMachineLimitExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cc676439-be1b-4f45-89bb-082e8d301bdc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "StateMachineTypeNotSupported",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "97138352-43d5-499a-a7ae-f5e94ca0f7dd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "TooManyTags",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c63745d8-1f81-4f76-bbae-d7dc0ba3ce03",
      "documentation": "Deletes an activity.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.DeleteActivity",
      "responses": [
        {
          "uuid": "c365f284-f444-49dc-85a6-ea76d521a84f",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "188ea001-2e82-4183-a3c2-8926347bbc64",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidArn",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "52ff269d-1739-4d9d-b792-3d0f7ed80212",
      "documentation": "<p>Deletes a state machine. This is an asynchronous operation: It sets the state machine's status to <code>DELETING</code> and begins the deletion process. </p> <note> <p>For <code>EXPRESS</code>state machines, the deletion will happen eventually (usually less than a minute). Running executions may emit logs after <code>DeleteStateMachine</code> API is called.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.DeleteStateMachine",
      "responses": [
        {
          "uuid": "07516254-1bcc-4cd4-85d0-e99ce58daae0",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "292144b0-8c70-45a5-ab9b-d1d8f6d2fb5d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidArn",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3cf340f8-bcf7-4f58-a94b-c39133284507",
      "documentation": "<p>Describes an activity.</p> <note> <p>This operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.DescribeActivity",
      "responses": [
        {
          "uuid": "8d4598b2-8d7f-4c1d-9100-6ba072a7c844",
          "body": "{\n  \"activityArn\": \"\",\n  \"name\": \"\",\n  \"creationDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "86d1dede-8cf8-4ae1-bfde-359947afedfa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ActivityDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "210f027a-2e66-4208-89dd-d5cb6e228747",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidArn",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "54bb8b92-161e-4255-b18c-7e5053d2ec73",
      "documentation": "<p>Describes an execution.</p> <note> <p>This operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.</p> </note> <p>This API action is not supported by <code>EXPRESS</code> state machines.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.DescribeExecution",
      "responses": [
        {
          "uuid": "1b17e247-4651-4b16-a602-3c32ecd09a35",
          "body": "{\n  \"executionArn\": \"\",\n  \"stateMachineArn\": \"\",\n  \"name\": \"\",\n  \"status\": \"\",\n  \"startDate\": \"{{faker 'date.recent' 365}}\",\n  \"stopDate\": \"{{faker 'date.recent' 365}}\",\n  \"input\": \"\",\n  \"inputDetails\": {\n    \"included\": {{faker 'random.boolean'}}\n  },\n  \"output\": \"\",\n  \"outputDetails\": {\n    \"included\": {{faker 'random.boolean'}}\n  },\n  \"traceHeader\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5e37750b-b753-499f-92e1-26f360d28e4e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ExecutionDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "edc34d95-1f74-4bc4-a682-8ab484fc0f28",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidArn",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c862ea7f-6288-486a-80de-5e1df67efe21",
      "documentation": "<p>Describes a state machine.</p> <note> <p>This operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.DescribeStateMachine",
      "responses": [
        {
          "uuid": "46fdb851-688e-456b-8e6b-65f34a5a182e",
          "body": "{\n  \"stateMachineArn\": \"\",\n  \"name\": \"\",\n  \"status\": \"\",\n  \"definition\": \"\",\n  \"roleArn\": \"\",\n  \"type\": \"\",\n  \"creationDate\": \"{{faker 'date.recent' 365}}\",\n  \"loggingConfiguration\": {\n    \"level\": \"\",\n    \"includeExecutionData\": {{faker 'random.boolean'}},\n    \"destinations\": [\n      {\n        \"cloudWatchLogsLogGroup\": {\n          \"logGroupArn\": \"\"\n        }\n      }\n    ]\n  },\n  \"tracingConfiguration\": {\n    \"enabled\": {{faker 'random.boolean'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "37d5b71d-30d4-4c4e-a3f7-335bd370df4e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidArn",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "edf1bf17-6923-42e7-a025-b7a8640f1c37",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "StateMachineDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bb15744c-d936-4f85-9a43-478dcbe2f4d5",
      "documentation": "<p>Describes the state machine associated with a specific execution.</p> <note> <p>This operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.</p> </note> <p>This API action is not supported by <code>EXPRESS</code> state machines.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.DescribeStateMachineForExecution",
      "responses": [
        {
          "uuid": "9613d1e5-5def-45db-8a14-f1f59989f207",
          "body": "{\n  \"stateMachineArn\": \"\",\n  \"name\": \"\",\n  \"definition\": \"\",\n  \"roleArn\": \"\",\n  \"updateDate\": \"{{faker 'date.recent' 365}}\",\n  \"loggingConfiguration\": {\n    \"level\": \"\",\n    \"includeExecutionData\": {{faker 'random.boolean'}},\n    \"destinations\": [\n      {\n        \"cloudWatchLogsLogGroup\": {\n          \"logGroupArn\": \"\"\n        }\n      }\n    ]\n  },\n  \"tracingConfiguration\": {\n    \"enabled\": {{faker 'random.boolean'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "10ea368c-62e5-4695-89b6-7fe64da8feca",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ExecutionDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "59a81d3c-d4b2-461d-8490-f108eab5be4d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidArn",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cb12ba4f-d3e3-4109-b16e-0781527f41cb",
      "documentation": "<p>Used by workers to retrieve a task (with the specified activity ARN) which has been scheduled for execution by a running state machine. This initiates a long poll, where the service holds the HTTP connection open and responds as soon as a task becomes available (i.e. an execution of a task of this type is needed.) The maximum time the service holds on to the request before responding is 60 seconds. If no task is available within 60 seconds, the poll returns a <code>taskToken</code> with a null string.</p> <important> <p>Workers should set their client side socket timeout to at least 65 seconds (5 seconds higher than the maximum time the service may hold the poll request).</p> <p>Polling with <code>GetActivityTask</code> can cause latency in some implementations. See <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/bp-activity-pollers.html\">Avoid Latency When Polling for Activity Tasks</a> in the Step Functions Developer Guide.</p> </important>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.GetActivityTask",
      "responses": [
        {
          "uuid": "dc88e9a1-92da-44ad-aa1a-0821288bcb2c",
          "body": "{\n  \"taskToken\": \"\",\n  \"input\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "064e1352-2a82-4037-ae03-a43631d4d246",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ActivityDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4179230b-ad6f-48c4-bd54-bf48ae0e2828",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ActivityWorkerLimitExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6756e185-2bbf-4910-9da9-9176ea3b941f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidArn",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "16c2473a-16dc-4d14-b628-80123449e849",
      "documentation": "<p>Returns the history of the specified execution as a list of events. By default, the results are returned in ascending order of the <code>timeStamp</code> of the events. Use the <code>reverseOrder</code> parameter to get the latest events first.</p> <p>If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken</i> error.</p> <p>This API action is not supported by <code>EXPRESS</code> state machines.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.GetExecutionHistory",
      "responses": [
        {
          "uuid": "d6487b1e-a52b-46e0-a237-aae7c3f4e194",
          "body": "{\n  \"events\": [\n    {\n      \"timestamp\": \"{{faker 'date.recent' 365}}\",\n      \"type\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"previousEventId\": {{faker 'random.number'}},\n      \"activityFailedEventDetails\": {\n        \"error\": \"\",\n        \"cause\": \"\"\n      },\n      \"activityScheduleFailedEventDetails\": {\n        \"error\": \"\",\n        \"cause\": \"\"\n      },\n      \"activityScheduledEventDetails\": {\n        \"resource\": \"\",\n        \"input\": \"\",\n        \"inputDetails\": {\n          \"truncated\": {{faker 'random.boolean'}}\n        },\n        \"timeoutInSeconds\": {{faker 'random.number'}},\n        \"heartbeatInSeconds\": {{faker 'random.number'}}\n      },\n      \"activityStartedEventDetails\": {\n        \"workerName\": \"\"\n      },\n      \"activitySucceededEventDetails\": {\n        \"output\": \"\",\n        \"outputDetails\": {\n          \"truncated\": {{faker 'random.boolean'}}\n        }\n      },\n      \"activityTimedOutEventDetails\": {\n        \"error\": \"\",\n        \"cause\": \"\"\n      },\n      \"taskFailedEventDetails\": {\n        \"resourceType\": \"\",\n        \"resource\": \"\",\n        \"error\": \"\",\n        \"cause\": \"\"\n      },\n      \"taskScheduledEventDetails\": {\n        \"resourceType\": \"\",\n        \"resource\": \"\",\n        \"region\": \"\",\n        \"parameters\": \"\",\n        \"timeoutInSeconds\": {{faker 'random.number'}},\n        \"heartbeatInSeconds\": {{faker 'random.number'}}\n      },\n      \"taskStartFailedEventDetails\": {\n        \"resourceType\": \"\",\n        \"resource\": \"\",\n        \"error\": \"\",\n        \"cause\": \"\"\n      },\n      \"taskStartedEventDetails\": {\n        \"resourceType\": \"\",\n        \"resource\": \"\"\n      },\n      \"taskSubmitFailedEventDetails\": {\n        \"resourceType\": \"\",\n        \"resource\": \"\",\n        \"error\": \"\",\n        \"cause\": \"\"\n      },\n      \"taskSubmittedEventDetails\": {\n        \"resourceType\": \"\",\n        \"resource\": \"\",\n        \"output\": \"\",\n        \"outputDetails\": {\n          \"truncated\": {{faker 'random.boolean'}}\n        }\n      },\n      \"taskSucceededEventDetails\": {\n        \"resourceType\": \"\",\n        \"resource\": \"\",\n        \"output\": \"\",\n        \"outputDetails\": {\n          \"truncated\": {{faker 'random.boolean'}}\n        }\n      },\n      \"taskTimedOutEventDetails\": {\n        \"resourceType\": \"\",\n        \"resource\": \"\",\n        \"error\": \"\",\n        \"cause\": \"\"\n      },\n      \"executionFailedEventDetails\": {\n        \"error\": \"\",\n        \"cause\": \"\"\n      },\n      \"executionStartedEventDetails\": {\n        \"input\": \"\",\n        \"inputDetails\": {\n          \"truncated\": {{faker 'random.boolean'}}\n        },\n        \"roleArn\": \"\"\n      },\n      \"executionSucceededEventDetails\": {\n        \"output\": \"\",\n        \"outputDetails\": {\n          \"truncated\": {{faker 'random.boolean'}}\n        }\n      },\n      \"executionAbortedEventDetails\": {\n        \"error\": \"\",\n        \"cause\": \"\"\n      },\n      \"executionTimedOutEventDetails\": {\n        \"error\": \"\",\n        \"cause\": \"\"\n      },\n      \"mapStateStartedEventDetails\": {\n        \"length\": {{faker 'random.number'}}\n      },\n      \"mapIterationStartedEventDetails\": {\n        \"name\": \"\",\n        \"index\": {{faker 'random.number'}}\n      },\n      \"mapIterationSucceededEventDetails\": {\n        \"name\": \"\",\n        \"index\": {{faker 'random.number'}}\n      },\n      \"mapIterationFailedEventDetails\": {\n        \"name\": \"\",\n        \"index\": {{faker 'random.number'}}\n      },\n      \"mapIterationAbortedEventDetails\": {\n        \"name\": \"\",\n        \"index\": {{faker 'random.number'}}\n      },\n      \"lambdaFunctionFailedEventDetails\": {\n        \"error\": \"\",\n        \"cause\": \"\"\n      },\n      \"lambdaFunctionScheduleFailedEventDetails\": {\n        \"error\": \"\",\n        \"cause\": \"\"\n      },\n      \"lambdaFunctionScheduledEventDetails\": {\n        \"resource\": \"\",\n        \"input\": \"\",\n        \"inputDetails\": {\n          \"truncated\": {{faker 'random.boolean'}}\n        },\n        \"timeoutInSeconds\": {{faker 'random.number'}}\n      },\n      \"lambdaFunctionStartFailedEventDetails\": {\n        \"error\": \"\",\n        \"cause\": \"\"\n      },\n      \"lambdaFunctionSucceededEventDetails\": {\n        \"output\": \"\",\n        \"outputDetails\": {\n          \"truncated\": {{faker 'random.boolean'}}\n        }\n      },\n      \"lambdaFunctionTimedOutEventDetails\": {\n        \"error\": \"\",\n        \"cause\": \"\"\n      },\n      \"stateEnteredEventDetails\": {\n        \"name\": \"\",\n        \"input\": \"\",\n        \"inputDetails\": {\n          \"truncated\": {{faker 'random.boolean'}}\n        }\n      },\n      \"stateExitedEventDetails\": {\n        \"name\": \"\",\n        \"output\": \"\",\n        \"outputDetails\": {\n          \"truncated\": {{faker 'random.boolean'}}\n        }\n      }\n    }\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9fdd726a-2f7b-455a-a1bc-366259a221b7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ExecutionDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1f797993-316e-427e-a8d7-3ab8030d2940",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidArn",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3214a03e-20d3-407e-9bf3-ac3c055a4b58",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0ea46da3-8a4e-4023-87b2-56df081a9833",
      "documentation": "<p>Lists the existing activities.</p> <p>If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken</i> error.</p> <note> <p>This operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.ListActivities",
      "responses": [
        {
          "uuid": "beb4a6dd-c96b-4d6f-8a3b-5af41b71f5ee",
          "body": "{\n  \"activities\": [\n    {\n      \"activityArn\": \"\",\n      \"name\": \"\",\n      \"creationDate\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f5acc856-8409-42c6-ab9e-2a1b73a6185b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "489bc311-a3b8-4c5e-8316-543d642b1093",
      "documentation": "<p>Lists the executions of a state machine that meet the filtering criteria. Results are sorted by time, with the most recent execution first.</p> <p>If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken</i> error.</p> <note> <p>This operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.</p> </note> <p>This API action is not supported by <code>EXPRESS</code> state machines.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.ListExecutions",
      "responses": [
        {
          "uuid": "141c685c-ce8c-45f0-acf5-30c1478d3cca",
          "body": "{\n  \"executions\": [\n    {\n      \"executionArn\": \"\",\n      \"stateMachineArn\": \"\",\n      \"name\": \"\",\n      \"status\": \"\",\n      \"startDate\": \"{{faker 'date.recent' 365}}\",\n      \"stopDate\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e003ad0a-07df-430d-b3e6-407a6ad3e284",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidArn",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5a9b0f2f-4411-4675-b28c-f50c481be96e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "36a18598-8ace-41cf-8a7b-28ee9e5a2f93",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "StateMachineDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eaa04c6d-8190-4998-bf63-62375685faea",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "StateMachineTypeNotSupported",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "afce45a1-126d-4b3f-ad47-a64af334d699",
      "documentation": "<p>Lists the existing state machines.</p> <p>If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken</i> error.</p> <note> <p>This operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.ListStateMachines",
      "responses": [
        {
          "uuid": "59207807-a9fa-43b9-b373-45374b09685c",
          "body": "{\n  \"stateMachines\": [\n    {\n      \"stateMachineArn\": \"\",\n      \"name\": \"\",\n      \"type\": \"\",\n      \"creationDate\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fd2b9ab4-257a-4117-a06b-045fe86a0736",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d383c17f-aa1f-4c42-8396-96727fa3b7a9",
      "documentation": "<p>List tags for a given resource.</p> <p>Tags may only contain Unicode letters, digits, white space, or these symbols: <code>_ . : / = + - @</code>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.ListTagsForResource",
      "responses": [
        {
          "uuid": "11bac787-07a3-46a9-b98b-12b66b679b9c",
          "body": "{\n  \"tags\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1740950c-3977-478b-8922-bc9e0dba8144",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidArn",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "967f63ef-c69b-4493-bb8f-4a40af4ba2d7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1dfc4004-313b-4a11-b6d7-a0fe5e02b51d",
      "documentation": "Used by activity workers and task states using the <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/connect-to-resource.html#connect-wait-token\">callback</a> pattern to report that the task identified by the <code>taskToken</code> failed.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.SendTaskFailure",
      "responses": [
        {
          "uuid": "83bc4ffa-9a8d-4229-885f-67ebeb226df3",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f31b0f17-7b4b-4cf7-b1b5-f95ddce7860a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "TaskDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b9b50fa2-9eb7-454a-bdf4-e0dec2c014bd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dcc9a050-5021-4eff-9d78-3d2da677cb7b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TaskTimedOut",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "51abb2ae-18a7-42d5-a5ca-0946298265aa",
      "documentation": "<p>Used by activity workers and task states using the <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/connect-to-resource.html#connect-wait-token\">callback</a> pattern to report to Step Functions that the task represented by the specified <code>taskToken</code> is still making progress. This action resets the <code>Heartbeat</code> clock. The <code>Heartbeat</code> threshold is specified in the state machine's Amazon States Language definition (<code>HeartbeatSeconds</code>). This action does not in itself create an event in the execution history. However, if the task times out, the execution history contains an <code>ActivityTimedOut</code> entry for activities, or a <code>TaskTimedOut</code> entry for for tasks using the <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/connect-to-resource.html#connect-sync\">job run</a> or <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/connect-to-resource.html#connect-wait-token\">callback</a> pattern.</p> <note> <p>The <code>Timeout</code> of a task, defined in the state machine's Amazon States Language definition, is its maximum allowed duration, regardless of the number of <a>SendTaskHeartbeat</a> requests received. Use <code>HeartbeatSeconds</code> to configure the timeout interval for heartbeats.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.SendTaskHeartbeat",
      "responses": [
        {
          "uuid": "a262e545-f41f-420e-beb2-896e9dd291eb",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0e03f3da-c028-438c-851c-14d669c8f664",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "TaskDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "799731b2-8acb-40f8-b3a6-12509cc3511d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c6d7fc0c-1c07-439a-b9c1-b4060787a3a5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TaskTimedOut",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f19993ee-7edc-4dd7-a514-0f8c8ea1be97",
      "documentation": "Used by activity workers and task states using the <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/connect-to-resource.html#connect-wait-token\">callback</a> pattern to report that the task identified by the <code>taskToken</code> completed successfully.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.SendTaskSuccess",
      "responses": [
        {
          "uuid": "a16bdb53-dc17-4799-8a98-8c00257fbdc6",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6e1ced08-1e1a-4e8f-b37a-2d84d6975b42",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "TaskDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "644e4960-11eb-468b-b738-e1014ca035e6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidOutput",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aca6f847-62b2-43bd-89b0-6ef4dfc3e3bb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "69b36191-33d4-45bf-8f87-2391d221ebef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TaskTimedOut",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cf71415f-e6ba-45f3-b6cc-c629eccd393f",
      "documentation": "<p>Starts a state machine execution.</p> <note> <p> <code>StartExecution</code> is idempotent. If <code>StartExecution</code> is called with the same name and input as a running execution, the call will succeed and return the same response as the original request. If the execution is closed or if the input is different, it will return a 400 <code>ExecutionAlreadyExists</code> error. Names can be reused after 90 days. </p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.StartExecution",
      "responses": [
        {
          "uuid": "65dbc8a2-bde1-4d9a-ab4c-6f8bc074cb1f",
          "body": "{\n  \"executionArn\": \"\",\n  \"startDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "166af617-c9f0-4620-9e30-4ce2e2da80d8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ExecutionLimitExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5f27c072-e364-4e41-b2a7-64be6564a870",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ExecutionAlreadyExists",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "08e0d643-672d-45c0-b644-3847c9ce6538",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidArn",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "04a0f21f-cdf0-40f2-ae94-bf03e0a6315f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidExecutionInput",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1b39bc4f-5103-410a-81b3-c2fa3033ff40",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidName",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d60f5a13-f349-412e-b57e-79343b4f757d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "StateMachineDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cf1c31d5-f5fb-4916-b16c-33130df386b1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "StateMachineDeleting",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ec7a0a1a-05d8-4c87-af45-dabc2d0a2b16",
      "documentation": "Starts a Synchronous Express state machine execution.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.StartSyncExecution",
      "responses": [
        {
          "uuid": "e8f5b4dd-e6b2-4551-b976-2abdceb9a1dc",
          "body": "{\n  \"executionArn\": \"\",\n  \"stateMachineArn\": \"\",\n  \"name\": \"\",\n  \"startDate\": \"{{faker 'date.recent' 365}}\",\n  \"stopDate\": \"{{faker 'date.recent' 365}}\",\n  \"status\": \"\",\n  \"error\": \"\",\n  \"cause\": \"\",\n  \"input\": \"\",\n  \"inputDetails\": {\n    \"included\": {{faker 'random.boolean'}}\n  },\n  \"output\": \"\",\n  \"outputDetails\": {\n    \"included\": {{faker 'random.boolean'}}\n  },\n  \"traceHeader\": \"\",\n  \"billingDetails\": {\n    \"billedMemoryUsedInMB\": {{faker 'random.number'}},\n    \"billedDurationInMilliseconds\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "49fecda6-9fa9-433d-afff-e59dd5941c5a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidArn",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "975b93bf-56b4-4de8-8805-965530355957",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidExecutionInput",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7b33d829-bf58-4097-8f64-cd32939aa8e9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidName",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ffae4ad8-e962-4a77-b239-23ca2d9cc103",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "StateMachineDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "23c13d21-0b63-4efb-94a1-8256d2957d61",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "StateMachineDeleting",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "746bf296-31dc-4b73-99a1-13532a24a988",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "StateMachineTypeNotSupported",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f205bab7-8179-4b82-b1fc-99f4757205ed",
      "documentation": "<p>Stops an execution.</p> <p>This API action is not supported by <code>EXPRESS</code> state machines.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.StopExecution",
      "responses": [
        {
          "uuid": "f3298be8-c02e-4713-9fa0-413b2b4fcfb2",
          "body": "{\n  \"stopDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c0d4bac7-0d2d-49e4-8ff2-6010ac0432ce",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ExecutionDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1e97244f-3cce-45b5-8d1c-c9c17332272b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidArn",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "16feddbd-5a25-4e6d-b3ef-6e698100584b",
      "documentation": "<p>Add a tag to a Step Functions resource.</p> <p>An array of key-value pairs. For more information, see <a href=\"https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html\">Using Cost Allocation Tags</a> in the <i>AWS Billing and Cost Management User Guide</i>, and <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_iam-tags.html\">Controlling Access Using IAM Tags</a>.</p> <p>Tags may only contain Unicode letters, digits, white space, or these symbols: <code>_ . : / = + - @</code>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.TagResource",
      "responses": [
        {
          "uuid": "e22e8a47-36c3-4819-9b48-4d61f2ff0417",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d67fb512-836e-49d8-b019-5dee0c839f9e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidArn",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b8fbad1f-9647-4bea-a263-8813be039b46",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a66e8d1b-d5ab-471a-b3d8-56e70826b051",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyTags",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2f3c1ad7-4605-4133-99cb-94e95a21f91f",
      "documentation": "Remove a tag from a Step Functions resource",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.UntagResource",
      "responses": [
        {
          "uuid": "b2411ff2-a612-4e6d-8194-673855b3df3a",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "79751728-c069-4995-8dac-8e822aea4dd9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidArn",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b6ff2be2-7280-44bd-8b09-715260094e9e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d433650d-b5af-4e37-a6f9-ad1dc96032dd",
      "documentation": "<p>Updates an existing state machine by modifying its <code>definition</code>, <code>roleArn</code>, or <code>loggingConfiguration</code>. Running executions will continue to use the previous <code>definition</code> and <code>roleArn</code>. You must include at least one of <code>definition</code> or <code>roleArn</code> or you will receive a <code>MissingRequiredParameter</code> error.</p> <note> <p>All <code>StartExecution</code> calls within a few seconds will use the updated <code>definition</code> and <code>roleArn</code>. Executions started immediately after calling <code>UpdateStateMachine</code> may use the previous state machine <code>definition</code> and <code>roleArn</code>. </p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSStepFunctions.UpdateStateMachine",
      "responses": [
        {
          "uuid": "bdd8f90a-85fb-4dcd-9c01-df29ba3503de",
          "body": "{\n  \"updateDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a6983412-40d7-4399-921a-991c0dd27637",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidArn",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a3158df8-ee36-4917-983f-11f00f010f6f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDefinition",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "66406eea-3017-4ce6-973c-829f6e1ba916",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidLoggingConfiguration",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aa0296e7-b09b-4037-b06e-6b7752773a6f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidTracingConfiguration",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c6e056aa-623e-4dc4-b958-b912af963985",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "MissingRequiredParameter",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "84241ec1-3326-4a1e-a35c-0943c9321e7d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "StateMachineDeleting",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "35985c1b-5250-4366-89da-55edef6e0319",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "StateMachineDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}