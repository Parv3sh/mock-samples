{
  "uuid": "5e2de45b-ecc4-4d13-8250-7399e57419a6",
  "lastMigration": 19,
  "name": "AWS Transfer Family",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "a2a76c60-7a19-4e49-84af-a11a89b21b48",
      "documentation": "Used by administrators to choose which groups in the directory should have access to upload and download files over the enabled protocols using Amazon Web Services Transfer Family. For example, a Microsoft Active Directory might contain 50,000 users, but only a small fraction might need the ability to transfer files to the server. An administrator can use <code>CreateAccess</code> to limit the access to the correct set of users who need this ability.",
      "method": "post",
      "endpoint": "#X-Amz-Target=TransferService.CreateAccess",
      "responses": [
        {
          "uuid": "256c4e43-157b-4cfb-a2b8-bd6559e83428",
          "body": "{\n  \"ServerId\": \"\",\n  \"ExternalId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "813a341d-60e5-42f7-b202-a5c47e78be33",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fae705d7-4ec8-410d-a20b-93bf845ae335",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "60d33759-6681-4d59-9808-42adffab77b3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ffede613-5a79-4492-b4d5-c746301d3eed",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7dc62480-36be-4fd9-a1ec-ddb0c56cef8d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "981dd536-d9ee-4184-ba52-dea1f2c41ba1",
      "documentation": "Instantiates an auto-scaling virtual server based on the selected file transfer protocol in Amazon Web Services. When you make updates to your file transfer protocol-enabled server or when you work with users, use the service-generated <code>ServerId</code> property that is assigned to the newly created server.",
      "method": "post",
      "endpoint": "#X-Amz-Target=TransferService.CreateServer",
      "responses": [
        {
          "uuid": "276148cb-7bc9-480c-a586-7d2f9aeab9b0",
          "body": "{\n  \"ServerId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "daee162f-6248-4954-9f78-a9b23a3c683d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "198fc879-07af-41fb-b7d0-12463875dad1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eb09303a-a135-4d9e-89c8-683565e2ad43",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "76a13056-5d01-44ef-bcf8-1642ed0d6716",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c6524cac-977d-4833-91af-f1fce40ab562",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1e80a929-6f10-43ac-bec1-dee80d5a70be",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bfb64d50-6ff4-4aa8-affb-29ba6934a5e5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3c8f4590-f554-4cf8-91f3-7987bfcd3a6d",
      "documentation": "Creates a user and associates them with an existing file transfer protocol-enabled server. You can only create and associate users with servers that have the <code>IdentityProviderType</code> set to <code>SERVICE_MANAGED</code>. Using parameters for <code>CreateUser</code>, you can specify the user name, set the home directory, store the user's public key, and assign the user's Amazon Web Services Identity and Access Management (IAM) role. You can also optionally add a session policy, and assign metadata with tags that can be used to group and search for users.",
      "method": "post",
      "endpoint": "#X-Amz-Target=TransferService.CreateUser",
      "responses": [
        {
          "uuid": "b76376a9-a247-4424-9fd3-6580d6b7f276",
          "body": "{\n  \"ServerId\": \"\",\n  \"UserName\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6719493e-e8ca-474f-bcd1-738a961e8ea0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "077cb95f-e450-467a-9661-4943f113da9b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d9adb03b-d1a2-40b8-9f45-971dc8c5b9e0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bd22f670-e714-489b-93a3-e02665681107",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ac846587-9a4a-403a-8230-48031db82130",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "81dabc60-3155-4fcb-b707-336101e82d0d",
      "documentation": " Allows you to create a workflow with specified steps and step details the workflow invokes after file transfer completes. After creating a workflow, you can associate the workflow created with any transfer servers by specifying the <code>workflow-details</code> field in <code>CreateServer</code> and <code>UpdateServer</code> operations. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=TransferService.CreateWorkflow",
      "responses": [
        {
          "uuid": "0409ef7b-44a3-47f2-b304-bc65812041cd",
          "body": "{\n  \"WorkflowId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "34fef3c1-cbbe-4b3f-b9f3-530d1d98dd2c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "12e291e2-0c77-40e9-b010-f98bd2b9ca1b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b663e076-f0c5-4cbc-9ba8-7ed7b2f2baa5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b43bb462-c778-4fe1-95f8-f85ff19bf283",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e3863d7b-7a65-4b71-a7e8-3c5cf7f6e568",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5ecbb414-f17f-4f1d-aaab-73efb66b6ff7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7ecabcfc-3df6-44d1-9773-60f12668842a",
      "documentation": "Allows you to delete the access specified in the <code>ServerID</code> and <code>ExternalID</code> parameters.",
      "method": "post",
      "endpoint": "#X-Amz-Target=TransferService.DeleteAccess",
      "responses": [
        {
          "uuid": "29ef1901-0ac3-4eaf-b941-50432417135c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8750edb4-b740-4ca1-a793-e90fc324e1c8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1be0c942-2729-4982-b854-063b9d738e88",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0a4428bd-bd0f-4454-a52e-82de7f25abb0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "10818d05-7045-4ed7-b5be-dd371ac8188e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5872867a-a28e-4204-aa85-afe1da19292a",
      "documentation": "<p>Deletes the file transfer protocol-enabled server that you specify.</p> <p>No response returns from this operation.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=TransferService.DeleteServer",
      "responses": [
        {
          "uuid": "f68905a1-d681-4c95-be3c-47d608344797",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7d66b7db-c4d2-40c4-9ddf-b4b8e9c87174",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d172bd0e-6a4a-4788-8b32-6703956698e1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "af7d862d-2016-417e-8df2-ec889346794d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3e6dc48f-2ad1-4ca9-aefa-3b2cfaeee16c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5276a6e0-be32-4af4-bfa0-9509f575f36e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "45b6c61f-6703-4ded-90f4-c11699d74fa6",
      "documentation": "Deletes a user's Secure Shell (SSH) public key.",
      "method": "post",
      "endpoint": "#X-Amz-Target=TransferService.DeleteSshPublicKey",
      "responses": [
        {
          "uuid": "49db9f12-dd55-4051-b5d8-0550c3af0490",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "187481c7-fc1f-4a51-be16-f63306666783",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "93812950-5ffa-448a-bdfa-6adda9d7d174",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "18a6ec39-5ceb-4903-9e86-1f1ca8b29f8c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4f05e7bc-5b65-44ec-8dd4-ba92d9cf852e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "81f1a737-2bfe-4785-97b0-68f091ddd61e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "50b4b0cc-042c-4c31-85e0-42e6dca72753",
      "documentation": "<p>Deletes the user belonging to a file transfer protocol-enabled server you specify.</p> <p>No response returns from this operation.</p> <note> <p>When you delete a user from a server, the user's information is lost.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=TransferService.DeleteUser",
      "responses": [
        {
          "uuid": "ca974e96-910e-421b-91b6-f45bb3b619e3",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2462f3d0-cc55-416f-82b4-c042bd66c00f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5a03b78e-6232-4b89-a083-be8bde2cb0c3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1da49860-7ec8-4117-9d87-87f0494610fe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "caac8961-e8b6-4b20-8c1d-232a43543928",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "55e6c1c4-2d8e-4bec-bec6-cf8950b26257",
      "documentation": "Deletes the specified workflow.",
      "method": "post",
      "endpoint": "#X-Amz-Target=TransferService.DeleteWorkflow",
      "responses": [
        {
          "uuid": "b7f93f04-bcaa-47c2-851a-d3784390a102",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c77c4c06-5274-44f7-b420-1effb694feff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a32bc3de-9250-49fb-ad27-3e5a0a406ca2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0ff2bd23-5997-4cba-841e-aa33e5acaf05",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2e6157b4-65a0-4e13-a74c-014e2da77325",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c4c0f72b-ef74-45e3-8681-e6a0d408a03a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "783ea1f1-080a-4161-9b86-70d27365f4e7",
      "documentation": "<p>Describes the access that is assigned to the specific file transfer protocol-enabled server, as identified by its <code>ServerId</code> property and its <code>ExternalID</code>.</p> <p>The response from this call returns the properties of the access that is associated with the <code>ServerId</code> value that was specified.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=TransferService.DescribeAccess",
      "responses": [
        {
          "uuid": "c6f99586-c6f7-4a34-9fc8-2b1366218f05",
          "body": "{\n  \"ServerId\": \"\",\n  \"Access\": {\n    \"HomeDirectory\": \"\",\n    \"HomeDirectoryMappings\": [\n      {\n        \"Entry\": \"\",\n        \"Target\": \"\"\n      }\n    ],\n    \"HomeDirectoryType\": \"\",\n    \"Policy\": \"\",\n    \"PosixProfile\": {\n      \"Uid\": {{faker 'random.number'}},\n      \"Gid\": {{faker 'random.number'}},\n      \"SecondaryGids\": [\n        {{faker 'random.number'}}\n      ]\n    },\n    \"Role\": \"\",\n    \"ExternalId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "646a47ce-1eab-4eaf-98cf-5d1b3525d3cd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7f37b143-46a8-44c5-8cff-5dc88064273e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3e90a807-32b8-4a1f-8f29-6e0130b82e1d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "95f69bcc-f640-4dea-a404-251f3ec761ce",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "28f3bd73-efe7-4b3d-8569-a5c07e389419",
      "documentation": "You can use <code>DescribeExecution</code> to check the details of the execution of the specified workflow.",
      "method": "post",
      "endpoint": "#X-Amz-Target=TransferService.DescribeExecution",
      "responses": [
        {
          "uuid": "efc13f4c-e90a-41b5-97e3-c044b4dd2407",
          "body": "{\n  \"WorkflowId\": \"\",\n  \"Execution\": {\n    \"ExecutionId\": \"\",\n    \"InitialFileLocation\": {\n      \"S3FileLocation\": {\n        \"Bucket\": \"\",\n        \"Key\": \"\",\n        \"VersionId\": \"\",\n        \"Etag\": \"\"\n      },\n      \"EfsFileLocation\": {\n        \"FileSystemId\": \"\",\n        \"Path\": \"\"\n      }\n    },\n    \"ServiceMetadata\": {\n      \"UserDetails\": {\n        \"UserName\": \"\",\n        \"ServerId\": \"\",\n        \"SessionId\": \"\"\n      }\n    },\n    \"ExecutionRole\": \"\",\n    \"LoggingConfiguration\": {\n      \"LoggingRole\": \"\",\n      \"LogGroupName\": \"\"\n    },\n    \"PosixProfile\": {\n      \"Uid\": {{faker 'random.number'}},\n      \"Gid\": {{faker 'random.number'}},\n      \"SecondaryGids\": [\n        {{faker 'random.number'}}\n      ]\n    },\n    \"Status\": \"\",\n    \"Results\": {\n      \"Steps\": [\n        {\n          \"StepType\": \"\",\n          \"Outputs\": \"\",\n          \"Error\": {\n            \"Type\": \"\",\n            \"Message\": \"\"\n          }\n        }\n      ],\n      \"OnExceptionSteps\": [\n        {\n          \"StepType\": \"\",\n          \"Outputs\": \"\",\n          \"Error\": {\n            \"Type\": \"\",\n            \"Message\": \"\"\n          }\n        }\n      ]\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "930c5ece-7f41-4b1b-bf2a-9b869a534603",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6a6846ab-9660-4c6b-b9a9-545e08d82320",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4298720e-d160-4380-b32f-3a685bf1e2f9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0f84f0a9-e8cd-47f9-8728-b327542c8c12",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ecaad9d3-d7d9-4db9-a362-c7f3fd250423",
      "documentation": "Describes the security policy that is attached to your file transfer protocol-enabled server. The response contains a description of the security policy's properties. For more information about security policies, see <a href=\"https://docs.aws.amazon.com/transfer/latest/userguide/security-policies.html\">Working with security policies</a>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=TransferService.DescribeSecurityPolicy",
      "responses": [
        {
          "uuid": "9bb2dfb1-4aff-4330-9c58-5a7c28466270",
          "body": "{\n  \"SecurityPolicy\": {\n    \"Fips\": {{faker 'random.boolean'}},\n    \"SecurityPolicyName\": \"\",\n    \"SshCiphers\": [\n      \"\"\n    ],\n    \"SshKexs\": [\n      \"\"\n    ],\n    \"SshMacs\": [\n      \"\"\n    ],\n    \"TlsCiphers\": [\n      \"\"\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2181d639-7482-424e-a12c-77c217d2513c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b1ce3d32-bbc7-4750-82c8-00530a1e712c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e8c5d3eb-5738-4d26-9d49-cddd95230e74",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8a9b8286-2782-4765-91fd-0b84b13fb9b7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "409f05d9-b6d0-4267-9fd0-383d988401d7",
      "documentation": "<p>Describes a file transfer protocol-enabled server that you specify by passing the <code>ServerId</code> parameter.</p> <p>The response contains a description of a server's properties. When you set <code>EndpointType</code> to VPC, the response will contain the <code>EndpointDetails</code>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=TransferService.DescribeServer",
      "responses": [
        {
          "uuid": "51caa51a-9f9b-4d8e-aee5-c9ab9b54db47",
          "body": "{\n  \"Server\": {\n    \"Arn\": \"\",\n    \"Certificate\": \"\",\n    \"ProtocolDetails\": {\n      \"PassiveIp\": \"\"\n    },\n    \"Domain\": \"\",\n    \"EndpointDetails\": {\n      \"AddressAllocationIds\": [\n        \"\"\n      ],\n      \"SubnetIds\": [\n        \"\"\n      ],\n      \"VpcEndpointId\": \"\",\n      \"VpcId\": \"\",\n      \"SecurityGroupIds\": [\n        \"\"\n      ]\n    },\n    \"EndpointType\": \"\",\n    \"HostKeyFingerprint\": \"\",\n    \"IdentityProviderDetails\": {\n      \"Url\": \"\",\n      \"InvocationRole\": \"\",\n      \"DirectoryId\": \"\"\n    },\n    \"IdentityProviderType\": \"\",\n    \"LoggingRole\": \"\",\n    \"Protocols\": [\n      \"{{oneOf (array 'SFTP' 'FTP' 'FTPS')}}\"\n    ],\n    \"SecurityPolicyName\": \"\",\n    \"ServerId\": \"\",\n    \"State\": \"\",\n    \"Tags\": [\n      {\n        \"Key\": \"\",\n        \"Value\": \"\"\n      }\n    ],\n    \"UserCount\": {{faker 'random.number'}},\n    \"WorkflowDetails\": {\n      \"OnUpload\": [\n        {\n          \"WorkflowId\": \"\",\n          \"ExecutionRole\": \"\"\n        }\n      ]\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cf1340c8-3091-426d-81bf-c65052819693",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9bb082c2-3bc3-41db-9d2d-76dd90e5b087",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d70e7d43-7b7f-4ef7-aa33-07f874ae0685",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "db4a0409-7d64-4968-8050-225856881254",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6d1be315-34f4-4600-b26a-cc2e8300565d",
      "documentation": "<p>Describes the user assigned to the specific file transfer protocol-enabled server, as identified by its <code>ServerId</code> property.</p> <p>The response from this call returns the properties of the user associated with the <code>ServerId</code> value that was specified.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=TransferService.DescribeUser",
      "responses": [
        {
          "uuid": "2db35357-6680-4e40-8a11-182a2d8a98fe",
          "body": "{\n  \"ServerId\": \"\",\n  \"User\": {\n    \"Arn\": \"\",\n    \"HomeDirectory\": \"\",\n    \"HomeDirectoryMappings\": [\n      {\n        \"Entry\": \"\",\n        \"Target\": \"\"\n      }\n    ],\n    \"HomeDirectoryType\": \"\",\n    \"Policy\": \"\",\n    \"PosixProfile\": {\n      \"Uid\": {{faker 'random.number'}},\n      \"Gid\": {{faker 'random.number'}},\n      \"SecondaryGids\": [\n        {{faker 'random.number'}}\n      ]\n    },\n    \"Role\": \"\",\n    \"SshPublicKeys\": [\n      {\n        \"DateImported\": \"{{faker 'date.recent' 365}}\",\n        \"SshPublicKeyBody\": \"\",\n        \"SshPublicKeyId\": \"\"\n      }\n    ],\n    \"Tags\": [\n      {\n        \"Key\": \"\",\n        \"Value\": \"\"\n      }\n    ],\n    \"UserName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b5d481d0-fc37-4042-a38d-63889fd95fe6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5fa60442-b78a-4444-85bf-9559f42df474",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8150924c-4dc0-4467-acf4-98ae6c7bde19",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "10fdd584-d75f-4552-8443-b436d8b8008d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "868398e4-bdcb-48f6-8857-09aad6f52f20",
      "documentation": "Describes the specified workflow.",
      "method": "post",
      "endpoint": "#X-Amz-Target=TransferService.DescribeWorkflow",
      "responses": [
        {
          "uuid": "9f6b301c-0715-454b-a003-b19e2f40d864",
          "body": "{\n  \"Workflow\": {\n    \"Arn\": \"\",\n    \"Description\": \"\",\n    \"Steps\": [\n      {\n        \"Type\": \"\",\n        \"CopyStepDetails\": {\n          \"Name\": \"\",\n          \"DestinationFileLocation\": {\n            \"S3FileLocation\": {\n              \"Bucket\": \"\",\n              \"Key\": \"\"\n            },\n            \"EfsFileLocation\": {\n              \"FileSystemId\": \"\",\n              \"Path\": \"\"\n            }\n          },\n          \"OverwriteExisting\": \"\"\n        },\n        \"CustomStepDetails\": {\n          \"Name\": \"\",\n          \"Target\": \"\",\n          \"TimeoutSeconds\": {{faker 'random.number'}}\n        },\n        \"DeleteStepDetails\": {\n          \"Name\": \"\"\n        },\n        \"TagStepDetails\": {\n          \"Name\": \"\",\n          \"Tags\": [\n            {\n              \"Key\": \"\",\n              \"Value\": \"\"\n            }\n          ]\n        }\n      }\n    ],\n    \"OnExceptionSteps\": [\n      {\n        \"Type\": \"\",\n        \"CopyStepDetails\": {\n          \"Name\": \"\",\n          \"DestinationFileLocation\": {\n            \"S3FileLocation\": {\n              \"Bucket\": \"\",\n              \"Key\": \"\"\n            },\n            \"EfsFileLocation\": {\n              \"FileSystemId\": \"\",\n              \"Path\": \"\"\n            }\n          },\n          \"OverwriteExisting\": \"\"\n        },\n        \"CustomStepDetails\": {\n          \"Name\": \"\",\n          \"Target\": \"\",\n          \"TimeoutSeconds\": {{faker 'random.number'}}\n        },\n        \"DeleteStepDetails\": {\n          \"Name\": \"\"\n        },\n        \"TagStepDetails\": {\n          \"Name\": \"\",\n          \"Tags\": [\n            {\n              \"Key\": \"\",\n              \"Value\": \"\"\n            }\n          ]\n        }\n      }\n    ],\n    \"WorkflowId\": \"\",\n    \"Tags\": [\n      {\n        \"Key\": \"\",\n        \"Value\": \"\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c1eb8f6a-7d00-4565-8cd4-0e1fb80e54ba",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4696585f-f126-4fb7-9895-216f1647f9e2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "17820ad3-880c-49b7-9d9c-6f0514df6d89",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "76aef1fd-0409-4579-bf89-43d8aebaf352",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "10fbd332-d70b-4bcb-b556-c91d1fba2204",
      "documentation": "<p>Adds a Secure Shell (SSH) public key to a user account identified by a <code>UserName</code> value assigned to the specific file transfer protocol-enabled server, identified by <code>ServerId</code>.</p> <p>The response returns the <code>UserName</code> value, the <code>ServerId</code> value, and the name of the <code>SshPublicKeyId</code>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=TransferService.ImportSshPublicKey",
      "responses": [
        {
          "uuid": "476ba501-7713-40b1-bd35-f5403f52fa31",
          "body": "{\n  \"ServerId\": \"\",\n  \"SshPublicKeyId\": \"\",\n  \"UserName\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "35247016-faa5-452f-8a3b-8de6665bbeba",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f10360d2-fd58-4402-a3e9-5862cc1d39b4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2dd10acd-73d9-4932-94d5-1b46120fbac5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1ec2ecd0-4451-4b1a-9a9e-8a60b80dc741",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6431405d-e2f7-46d9-bb8f-3f5019c53be1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3191e4e4-f906-4b65-a2ab-66bce1ff827d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a661300b-e475-451b-b947-fd5a4e10e423",
      "documentation": "Lists the details for all the accesses you have on your server.",
      "method": "post",
      "endpoint": "#X-Amz-Target=TransferService.ListAccesses",
      "responses": [
        {
          "uuid": "059b6cb3-a0b8-4182-92d0-bc2ed13d973a",
          "body": "{\n  \"NextToken\": \"\",\n  \"ServerId\": \"\",\n  \"Accesses\": [\n    {\n      \"HomeDirectory\": \"\",\n      \"HomeDirectoryType\": \"\",\n      \"Role\": \"\",\n      \"ExternalId\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8b8a64dc-5353-4fac-bc16-55acd49f0286",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "af8f3ff9-2be5-4b7e-8b20-7d4488264dd9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eda7cc56-16b3-4e93-a560-14f42433741e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "496c7b8d-aa0c-491e-b969-e61747d3b1b3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "61ae4869-9587-4223-9d63-d09d0770493d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "05a93df1-78db-4d8c-ab05-a46450b8de87",
      "documentation": "Lists all executions for the specified workflow.",
      "method": "post",
      "endpoint": "#X-Amz-Target=TransferService.ListExecutions",
      "responses": [
        {
          "uuid": "389c3c6c-d220-4c61-b064-f2b2f11cfe95",
          "body": "{\n  \"NextToken\": \"\",\n  \"WorkflowId\": \"\",\n  \"Executions\": [\n    {\n      \"ExecutionId\": \"\",\n      \"InitialFileLocation\": {\n        \"S3FileLocation\": {\n          \"Bucket\": \"\",\n          \"Key\": \"\",\n          \"VersionId\": \"\",\n          \"Etag\": \"\"\n        },\n        \"EfsFileLocation\": {\n          \"FileSystemId\": \"\",\n          \"Path\": \"\"\n        }\n      },\n      \"ServiceMetadata\": {\n        \"UserDetails\": {\n          \"UserName\": \"\",\n          \"ServerId\": \"\",\n          \"SessionId\": \"\"\n        }\n      },\n      \"Status\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e14bf204-e3a9-4335-845d-449fdb4afbb8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "581e43ae-6b5f-4f5e-9a79-28e0c238cc02",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ef0b9e25-ee13-4f2d-bdc7-2e3d3935ab21",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9ae8b098-c8fc-4aed-8103-02cb67dc526c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cac90349-f079-48bc-b9e3-f8cf928539e3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6f4f2633-75bf-47b0-b2a5-0ad8dd54fcb1",
      "documentation": "Lists the security policies that are attached to your file transfer protocol-enabled servers.",
      "method": "post",
      "endpoint": "#X-Amz-Target=TransferService.ListSecurityPolicies",
      "responses": [
        {
          "uuid": "cb3bbf55-4ece-462b-97b7-5f97c079fb33",
          "body": "{\n  \"NextToken\": \"\",\n  \"SecurityPolicyNames\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f41ffb93-9ae8-45a7-8d36-47d15497d620",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "62ead4dc-04cf-479e-9d4f-401edbe54a1f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0145492e-3957-4944-ae51-7f0cb0ccbc5a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2a357c1a-48f4-4c08-b4a2-5e0b96a8b144",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6d4292d9-10f0-4e4b-81bd-5a2ac6282dd9",
      "documentation": "Lists the file transfer protocol-enabled servers that are associated with your Amazon Web Services account.",
      "method": "post",
      "endpoint": "#X-Amz-Target=TransferService.ListServers",
      "responses": [
        {
          "uuid": "f08b13b7-ace2-4dca-9a01-72540f602344",
          "body": "{\n  \"NextToken\": \"\",\n  \"Servers\": [\n    {\n      \"Arn\": \"\",\n      \"Domain\": \"\",\n      \"IdentityProviderType\": \"\",\n      \"EndpointType\": \"\",\n      \"LoggingRole\": \"\",\n      \"ServerId\": \"\",\n      \"State\": \"\",\n      \"UserCount\": {{faker 'random.number'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9ce0778b-af52-42e0-8201-2b25e31c25d3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e0a2944d-a097-4206-b96c-05858b4db122",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9ca7023a-e321-49fb-a89e-aeef6aafc40a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3483c16c-88dc-47e2-a881-9fc629d64cd9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "43f28947-05e4-400e-bb50-ce1920aa50b3",
      "documentation": "Lists all of the tags associated with the Amazon Resource Name (ARN) that you specify. The resource can be a user, server, or role.",
      "method": "post",
      "endpoint": "#X-Amz-Target=TransferService.ListTagsForResource",
      "responses": [
        {
          "uuid": "1dd3d126-7f2c-404c-82bd-ffcb8d4e04e2",
          "body": "{\n  \"Arn\": \"\",\n  \"NextToken\": \"\",\n  \"Tags\": [\n    {\n      \"Key\": \"\",\n      \"Value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "53057196-c826-4b72-b283-b797e0e5c521",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3acd1189-98fe-4f08-a867-cada7d92548c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2dbf4172-b81c-414f-9100-e03c911a56bb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "147448c5-74c9-4ad6-afdd-8b3dd11dadd5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5d3bebc7-2ab3-4cc0-941b-501f4d4943ce",
      "documentation": "Lists the users for a file transfer protocol-enabled server that you specify by passing the <code>ServerId</code> parameter.",
      "method": "post",
      "endpoint": "#X-Amz-Target=TransferService.ListUsers",
      "responses": [
        {
          "uuid": "8194b044-6b80-411b-9c72-404235a3e0b0",
          "body": "{\n  \"NextToken\": \"\",\n  \"ServerId\": \"\",\n  \"Users\": [\n    {\n      \"Arn\": \"\",\n      \"HomeDirectory\": \"\",\n      \"HomeDirectoryType\": \"\",\n      \"Role\": \"\",\n      \"SshPublicKeyCount\": {{faker 'random.number'}},\n      \"UserName\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "45336090-2da3-45dc-8309-a8814bbc1efe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ac53cd46-b31b-4677-8ea5-af9af73972bd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0d226856-8432-4b6e-b43d-5262026082c1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "df60c9ed-1bc8-4f42-96df-ba4604041a96",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "df427913-32c1-4a98-b291-9a8cfc306baa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "28e72ce6-7df6-4240-9fb3-1f6099969595",
      "documentation": "Lists all of your workflows.",
      "method": "post",
      "endpoint": "#X-Amz-Target=TransferService.ListWorkflows",
      "responses": [
        {
          "uuid": "81c70460-ad7d-4bac-a398-1a74269b2d77",
          "body": "{\n  \"NextToken\": \"\",\n  \"Workflows\": [\n    {\n      \"WorkflowId\": \"\",\n      \"Description\": \"\",\n      \"Arn\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6e5c0f86-42b3-4e91-ab6c-d745ff93bb87",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5bc2b33f-bbeb-486e-a1b6-170419222a19",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6c76febc-24e0-44f8-b6b1-67039bb28840",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "750c522e-b411-48bf-a51b-56b26d3f729a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "86209944-b382-41bf-821e-46240d9e7185",
      "documentation": "<p>Sends a callback for asynchronous custom steps.</p> <p> The <code>ExecutionId</code>, <code>WorkflowId</code>, and <code>Token</code> are passed to the target resource during execution of a custom step of a workflow. You must include those with their callback as well as providing a status. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=TransferService.SendWorkflowStepState",
      "responses": [
        {
          "uuid": "05052a14-ca3d-4d87-8435-13f5855f600f",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bbdfb64f-cbc5-42c3-9256-9fb29c72442d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6cc18cb6-7961-4600-b6fb-29bbc38a8930",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7477c6f7-5d14-41c1-82b1-b6648d877ba4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "54e13c39-32b7-49e6-8205-0a67a4c69344",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a5e64551-ae3e-47ab-b83c-6ec976ce3b7d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "485d9430-4d64-4d60-9358-6ccf2b0df698",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "005ae727-b827-435c-a03b-f0c2fdabb55a",
      "documentation": "<p>Changes the state of a file transfer protocol-enabled server from <code>OFFLINE</code> to <code>ONLINE</code>. It has no impact on a server that is already <code>ONLINE</code>. An <code>ONLINE</code> server can accept and process file transfer jobs.</p> <p>The state of <code>STARTING</code> indicates that the server is in an intermediate state, either not fully able to respond, or not fully online. The values of <code>START_FAILED</code> can indicate an error condition.</p> <p>No response is returned from this call.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=TransferService.StartServer",
      "responses": [
        {
          "uuid": "ba06bfeb-31e8-43ee-95cb-799c6d2e004b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "26cbb36b-b043-4fe5-9b39-133c5d54e7f9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6c35e436-569d-4d42-a099-0c7de9c983b7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fd5c0b7a-9b7f-4181-b5ec-aadbbd6199e9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eb9612cc-17b1-4d78-b7e8-9eb88fce9559",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3cdbb5db-2cf6-40bb-a8ec-0ca5d1955b3d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "27268681-f129-4464-b370-b0860e63939e",
      "documentation": "<p>Changes the state of a file transfer protocol-enabled server from <code>ONLINE</code> to <code>OFFLINE</code>. An <code>OFFLINE</code> server cannot accept and process file transfer jobs. Information tied to your server, such as server and user properties, are not affected by stopping your server.</p> <note> <p>Stopping the server will not reduce or impact your file transfer protocol endpoint billing; you must delete the server to stop being billed.</p> </note> <p>The state of <code>STOPPING</code> indicates that the server is in an intermediate state, either not fully able to respond, or not fully offline. The values of <code>STOP_FAILED</code> can indicate an error condition.</p> <p>No response is returned from this call.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=TransferService.StopServer",
      "responses": [
        {
          "uuid": "137ee0d3-2e96-43db-8dc3-6e8d6aef59f4",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "35cb2beb-0a85-4f2e-bcd5-0aba88d3dd55",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "411077dd-ce8a-40c7-8782-a64717097197",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6767f307-a345-4d87-9c09-020ede5d7fe5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a1c3e112-b567-4370-8026-0b3fd8d677e9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5165641a-07fa-4662-95e8-72391c7c9d58",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f4eeae79-c0ef-4187-9f9b-93e0e5100ac4",
      "documentation": "<p>Attaches a key-value pair to a resource, as identified by its Amazon Resource Name (ARN). Resources are users, servers, roles, and other entities.</p> <p>There is no response returned from this call.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=TransferService.TagResource",
      "responses": [
        {
          "uuid": "525c6b8e-de31-4f8b-84c0-1368c18a4813",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4fc036b5-1cd8-4359-8e81-8d97cc791403",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ea8fd63f-82c9-4fcb-9fb5-0e7fb0bb5eb4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cac0c271-aaa5-45f7-b5cf-73282919864b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3583028a-75e0-4bf1-9d84-b128ace62785",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7182b270-6972-44e8-8f9a-d6fd0a80920e",
      "documentation": "<p>If the <code>IdentityProviderType</code> of a file transfer protocol-enabled server is <code>AWS_DIRECTORY_SERVICE</code> or <code>API_Gateway</code>, tests whether your identity provider is set up successfully. We highly recommend that you call this operation to test your authentication method as soon as you create your server. By doing so, you can troubleshoot issues with the identity provider integration to ensure that your users can successfully use the service.</p> <p> The <code>ServerId</code> and <code>UserName</code> parameters are required. The <code>ServerProtocol</code>, <code>SourceIp</code>, and <code>UserPassword</code> are all optional. </p> <note> <p> You cannot use <code>TestIdentityProvider</code> if the <code>IdentityProviderType</code> of your server is <code>SERVICE_MANAGED</code>. </p> </note> <ul> <li> <p> If you provide any incorrect values for any parameters, the <code>Response</code> field is empty. </p> </li> <li> <p> If you provide a server ID for a server that uses service-managed users, you get an error: </p> <p> <code> An error occurred (InvalidRequestException) when calling the TestIdentityProvider operation: s-<i>server-ID</i> not configured for external auth </code> </p> </li> <li> <p> If you enter a Server ID for the <code>--server-id</code> parameter that does not identify an actual Transfer server, you receive the following error: </p> <p> <code>An error occurred (ResourceNotFoundException) when calling the TestIdentityProvider operation: Unknown server</code> </p> </li> </ul>",
      "method": "post",
      "endpoint": "#X-Amz-Target=TransferService.TestIdentityProvider",
      "responses": [
        {
          "uuid": "ec1591a0-8d04-4291-a931-9b90e8446f2e",
          "body": "{\n  \"Response\": \"\",\n  \"StatusCode\": {{faker 'random.number'}},\n  \"Message\": \"\",\n  \"Url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2976dece-98d6-4187-a3a1-663d0960a986",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "71d6bd6b-50ba-4771-91ae-a0bae6717fb3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "265f1479-c3f7-45b5-8e36-fdee6ffb51b7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "382bae30-9c05-4827-9b53-64f2a01a1772",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2f0ddd28-3994-449a-aad5-e4e548dbd48d",
      "documentation": "<p>Detaches a key-value pair from a resource, as identified by its Amazon Resource Name (ARN). Resources are users, servers, roles, and other entities.</p> <p>No response is returned from this call.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=TransferService.UntagResource",
      "responses": [
        {
          "uuid": "52975416-69c5-4298-a144-630b1d7ef7ae",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b77d9c9d-ddcd-4f4e-876a-5c90380fd002",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d4e2db4c-9644-46e7-8934-63862a5c48a6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9cc429c5-5e82-4106-ac5b-df02953c9fdf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "55c4804f-c2b3-4457-ac20-e5163ed16732",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2cca1791-b6c3-449c-9ffb-0e72a0e934bb",
      "documentation": "Allows you to update parameters for the access specified in the <code>ServerID</code> and <code>ExternalID</code> parameters.",
      "method": "post",
      "endpoint": "#X-Amz-Target=TransferService.UpdateAccess",
      "responses": [
        {
          "uuid": "35fea8e5-b61c-41d4-8df1-b194139ecb85",
          "body": "{\n  \"ServerId\": \"\",\n  \"ExternalId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d82255f3-e950-4c29-bdfc-c279c1673b11",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5c957e02-9d22-4d3a-bfd6-631fac72fdd1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fd99cdae-1a9f-4683-b7cb-50debb1be486",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2d4c35e9-563d-46df-bdaa-9499f9492a4d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d8d08f7c-7cd9-460f-b209-043b1f4d5cad",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fdf64209-18a1-4925-89ef-fdfb8806d090",
      "documentation": "<p>Updates the file transfer protocol-enabled server's properties after that server has been created.</p> <p>The <code>UpdateServer</code> call returns the <code>ServerId</code> of the server you updated.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=TransferService.UpdateServer",
      "responses": [
        {
          "uuid": "bfb5a062-f8fa-4472-a4fb-ee71a98efad2",
          "body": "{\n  \"ServerId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "356cfc5e-d510-4563-8b61-3e3e42a3839b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c027ddf0-8147-4560-bee9-4cbc96f3d681",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a51a4ec1-6a4a-4bb2-8115-fbe223a3538c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4f339e5e-39cc-45a6-a6c4-6ed6f61b3fb0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d8c33c7d-235f-4579-a252-3f73af74a275",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8d103769-f3df-44fb-bfbf-327fafde5113",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ResourceExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fd986269-a9cd-4e7a-ae83-087e5c1ceb2f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "888f2b25-bd90-4067-bed3-0af1c28e6c1a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f70ca45a-d507-428b-857d-efff23bc68fe",
      "documentation": "<p>Assigns new properties to a user. Parameters you pass modify any or all of the following: the home directory, role, and policy for the <code>UserName</code> and <code>ServerId</code> you specify.</p> <p>The response returns the <code>ServerId</code> and the <code>UserName</code> for the updated user.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=TransferService.UpdateUser",
      "responses": [
        {
          "uuid": "8b9356f2-d0ed-4944-aa25-d9322da3a753",
          "body": "{\n  \"ServerId\": \"\",\n  \"UserName\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8f960bbc-3f06-4199-b0e6-fc6a9374d495",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3eb5efc1-32dc-4407-9629-0958a1df0d73",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "af091954-8cfd-4021-8095-1bf4017c0543",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b4bc21f5-80e4-435c-b687-f96631fd5db2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "82acf585-2342-4cbf-a6f7-05c35ef007c0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}