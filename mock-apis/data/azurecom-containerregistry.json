{
  "uuid": "6c791481-7c7c-4b55-ab56-8a1ceab040bb",
  "lastMigration": 19,
  "name": "ContainerRegistryManagementClient",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "9d9604ff-a2e4-4c4e-81d4-7ee4e34cfae7",
      "documentation": "Lists all of the available Azure Container Registry REST API operations.",
      "method": "get",
      "endpoint": "providers/Microsoft.ContainerRegistry/operations",
      "responses": [
        {
          "uuid": "8927064c-eb7c-43f6-9134-b6d16797acd7",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"display\": {\n        \"description\": \"\",\n        \"operation\": \"\",\n        \"provider\": \"\",\n        \"resource\": \"\"\n      },\n      \"name\": \"\",\n      \"origin\": \"\",\n      \"properties\": {\n        \"serviceSpecification\": {\n          \"metricSpecifications\": [\n            {\n              \"aggregationType\": \"\",\n              \"displayDescription\": \"\",\n              \"displayName\": \"\",\n              \"internalMetricName\": \"\",\n              \"name\": \"\",\n              \"unit\": \"\"\n            }\n          ]\n        }\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1fce75d5-008b-4a6b-926c-4c064f2a6dc9",
      "documentation": "Checks whether the container registry name is available for use. The name must contain only alphanumeric characters, be globally unique, and between 5 and 50 characters in length.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/providers/Microsoft.ContainerRegistry/checkNameAvailability",
      "responses": [
        {
          "uuid": "c0d25110-6f3b-43a0-aa3b-5e56ee0b1d14",
          "body": "{\n  \"message\": \"\",\n  \"nameAvailable\": {{faker 'random.boolean'}},\n  \"reason\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c6a54b5c-20c4-49cf-973c-c653520e7a57",
      "documentation": "Lists all the container registries under the specified subscription.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/providers/Microsoft.ContainerRegistry/registries",
      "responses": [
        {
          "uuid": "f83c00ba-9593-4ff3-92d1-313e4fdb4d29",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"id\": \"\",\n      \"location\": \"\",\n      \"name\": \"\",\n      \"tags\": {},\n      \"type\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f61226e0-283a-4c04-8d7d-656e1be92341",
      "documentation": "Lists all the container registries under the specified resource group.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.ContainerRegistry/registries",
      "responses": [
        {
          "uuid": "c8809ed4-5776-4b8c-9bff-cf0c28b480d3",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"id\": \"\",\n      \"location\": \"\",\n      \"name\": \"\",\n      \"tags\": {},\n      \"type\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b158f147-7876-4a05-a9f0-fd0c5ccc1af6",
      "documentation": "Deletes a container registry.",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.ContainerRegistry/registries/:registryName",
      "responses": [
        {
          "uuid": "56bd604e-4bec-4cd1-8359-ec468a429b92",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c2699531-37ea-4e46-879f-16eefbfe1629",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request was successful; the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8f8d0e5d-2596-4e9a-9811-127aa2a25088",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "The container registry does not exist in the subscription.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "16c13550-6864-4cbd-8dee-739ebfa92990",
      "documentation": "Gets the properties of the specified container registry.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.ContainerRegistry/registries/:registryName",
      "responses": [
        {
          "uuid": "7bac878f-f864-490d-86ec-144d767a9b07",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9517daf0-f7ba-4f01-abbe-b0c4ef90eef7",
      "documentation": "Updates a container registry with the specified parameters.",
      "method": "patch",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.ContainerRegistry/registries/:registryName",
      "responses": [
        {
          "uuid": "38e58fc1-c790-4bb7-9d5b-657b3ebadc6f",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e66ca86b-ab3b-4be4-aa5b-3b8e03ab90a8",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The request was successful; the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9ec64389-fb92-4fd3-ba73-cbd6a359fc7b",
      "documentation": "Creates a container registry with the specified parameters.",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.ContainerRegistry/registries/:registryName",
      "responses": [
        {
          "uuid": "c612d5e0-4d5e-4931-9f41-b319fabceb50",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "44c622f9-fd3d-4ea6-ad23-dd01e8785eda",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The request was successful; the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dd8bb316-c79c-41ed-951a-1e65f95657b6",
      "documentation": "Copies an image to this container registry from the specified container registry.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.ContainerRegistry/registries/:registryName/importImage",
      "responses": [
        {
          "uuid": "f0b60d50-3f93-4f8e-9a7d-b9b98f25019d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the operation has completed successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "af1977c7-fe67-45a5-94ce-ad8e7327ba71",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request was successful; the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "794ed952-cc29-4715-b35c-f009bc9e9f94",
      "documentation": "Lists the login credentials for the specified container registry.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.ContainerRegistry/registries/:registryName/listCredentials",
      "responses": [
        {
          "uuid": "1717b321-76f2-4e3a-9dc1-4234ab65ef1e",
          "body": "{\n  \"passwords\": [\n    {\n      \"name\": \"{{oneOf (array 'password' 'password2')}}\",\n      \"value\": \"\"\n    }\n  ],\n  \"username\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the list of credentials retrieved and returned successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "daba78b9-1ab8-46b7-bf50-60bf29c5415c",
      "documentation": "Gets the quota usages for the specified container registry.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.ContainerRegistry/registries/:registryName/listUsages",
      "responses": [
        {
          "uuid": "66b3f2aa-a26c-4d55-aa24-29e5ccf5462a",
          "body": "{\n  \"value\": [\n    {\n      \"currentValue\": {{faker 'random.number'}},\n      \"limit\": {{faker 'random.number'}},\n      \"name\": \"\",\n      \"unit\": \"{{oneOf (array 'Count' 'Bytes')}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the registry usages retrieved and returned successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a2326c84-e78e-4a66-ab03-d4ce8ce863d7",
      "documentation": "Regenerates one of the login credentials for the specified container registry.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.ContainerRegistry/registries/:registryName/regenerateCredential",
      "responses": [
        {
          "uuid": "e5cf0755-c6a9-4b9e-b64d-0e717cef0c9c",
          "body": "{\n  \"passwords\": [\n    {\n      \"name\": \"{{oneOf (array 'password' 'password2')}}\",\n      \"value\": \"\"\n    }\n  ],\n  \"username\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the specified credential regenerated successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f70e0722-3f46-4e0a-90a3-c35ca37cbee6",
      "documentation": "Lists all the replications for the specified container registry.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.ContainerRegistry/registries/:registryName/replications",
      "responses": [
        {
          "uuid": "89fcded7-6e92-4963-81fb-e0b9f9a33e07",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"id\": \"\",\n      \"location\": \"\",\n      \"name\": \"\",\n      \"tags\": {},\n      \"type\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dfae2d41-cee6-4414-9e6e-8bd9db25da4f",
      "documentation": "Deletes a replication from a container registry.",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.ContainerRegistry/registries/:registryName/replications/:replicationName",
      "responses": [
        {
          "uuid": "399174be-ed25-440d-96e7-6db89d2c6b4e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eb2e5b9d-2b4c-401d-871a-9793045dbcaa",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request was successful; the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "65fbe86c-1c33-45ec-8075-8a06dd9a89eb",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "The replication does not exist in the subscription.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a2a9b04c-4b70-46aa-a9c5-a1d416b2a854",
      "documentation": "Gets the properties of the specified replication.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.ContainerRegistry/registries/:registryName/replications/:replicationName",
      "responses": [
        {
          "uuid": "13e1eaf1-b8fe-40f1-b9e0-342d262dbb09",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "72608f04-737f-4718-be39-bcfb51e75bc1",
      "documentation": "Updates a replication for a container registry with the specified parameters.",
      "method": "patch",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.ContainerRegistry/registries/:registryName/replications/:replicationName",
      "responses": [
        {
          "uuid": "5dbdd058-1db6-4529-be3f-9b75dac96940",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ca1643ce-338c-42da-95e4-32ecdf66e8f3",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The request was successful; the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f9cbd937-6b22-4c37-8548-451c2f8aedcc",
      "documentation": "Creates a replication for a container registry with the specified parameters.",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.ContainerRegistry/registries/:registryName/replications/:replicationName",
      "responses": [
        {
          "uuid": "333afb1e-e6ca-40a5-84fb-4b4d976bc446",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "674580f6-7081-43b8-8b01-b17730dd9b70",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The request was successful; the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c117af3c-c4ca-49df-b3e0-6da233874ac3",
      "documentation": "Lists all the webhooks for the specified container registry.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.ContainerRegistry/registries/:registryName/webhooks",
      "responses": [
        {
          "uuid": "7e53ec2c-421f-43b7-96f5-e6d3f72d7d8c",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"id\": \"\",\n      \"location\": \"\",\n      \"name\": \"\",\n      \"tags\": {},\n      \"type\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "60536408-3f36-4ec8-90ff-af1d6f4754e7",
      "documentation": "Deletes a webhook from a container registry.",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.ContainerRegistry/registries/:registryName/webhooks/:webhookName",
      "responses": [
        {
          "uuid": "053098b9-8220-4c42-bcb0-0d5f3f646864",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ea9e505b-6065-429a-9901-370f8b1a43a6",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request was successful; the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "738c991f-350e-4c72-a6a5-ffb9f2b25182",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "The webhook does not exist in the subscription.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "24a59ddb-7522-4d9c-804a-230e7810f853",
      "documentation": "Gets the properties of the specified webhook.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.ContainerRegistry/registries/:registryName/webhooks/:webhookName",
      "responses": [
        {
          "uuid": "e57e3bf2-89fb-4c05-aa43-0de28cd4c883",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "75a39c4c-939e-4576-a49d-916eb792f1ca",
      "documentation": "Updates a webhook with the specified parameters.",
      "method": "patch",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.ContainerRegistry/registries/:registryName/webhooks/:webhookName",
      "responses": [
        {
          "uuid": "b2547a3f-da5f-4898-9f3c-3026912b6b1d",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7b2cbea5-7947-4fee-a38d-51d2a7275727",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The request was successful; the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "00745b61-9a87-4f88-b322-5f815272d6e3",
      "documentation": "Creates a webhook for a container registry with the specified parameters.",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.ContainerRegistry/registries/:registryName/webhooks/:webhookName",
      "responses": [
        {
          "uuid": "b167a172-0e0a-4140-b8ac-8a080bd88697",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d723785d-f7b6-4bb6-bcef-4b9354d767af",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The request was successful; the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "da735e17-15fa-4e40-9079-7631ab8c539e",
      "documentation": "Gets the configuration of service URI and custom headers for the webhook.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.ContainerRegistry/registries/:registryName/webhooks/:webhookName/getCallbackConfig",
      "responses": [
        {
          "uuid": "b3860233-905c-43f4-9de7-4e7020c36338",
          "body": "{\n  \"customHeaders\": {},\n  \"serviceUri\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "40d8eb95-878b-40af-9135-159bae225447",
      "documentation": "Lists recent events for the specified webhook.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.ContainerRegistry/registries/:registryName/webhooks/:webhookName/listEvents",
      "responses": [
        {
          "uuid": "c9c198e4-142c-41c6-968c-3994a8a57131",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"id\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ff15d7b7-6aab-4b3e-b563-192e97a624cf",
      "documentation": "Triggers a ping event to be sent to the webhook.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.ContainerRegistry/registries/:registryName/webhooks/:webhookName/ping",
      "responses": [
        {
          "uuid": "1d8f69fe-c2c1-46f7-97b5-c5705b61bde7",
          "body": "{\n  \"id\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}