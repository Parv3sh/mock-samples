{
  "uuid": "155f314b-1b92-4ebd-90ff-f6982bbd2a3c",
  "lastMigration": 19,
  "name": "NetworkManagementClient",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "0be3f9a7-95ea-4a9f-b6af-c0cf5c56852e",
      "documentation": "Gets all network watchers by subscription.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/providers/Microsoft.Network/networkWatchers",
      "responses": [
        {
          "uuid": "c0013501-cdbd-4573-ba50-21c504a12ba4",
          "body": "{\n  \"value\": [\n    {\n      \"id\": \"\",\n      \"location\": \"\",\n      \"name\": \"\",\n      \"tags\": {},\n      \"type\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful. The operation returns a list of network watcher resources.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6fb9d8b5-3d17-4a54-848f-30bd23849554",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "47ce7f1f-f16a-4829-8943-57703497b46d",
      "documentation": "Gets all network watchers by resource group.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers",
      "responses": [
        {
          "uuid": "ec8358ab-f04e-4270-89b8-8edae7a21cbb",
          "body": "{\n  \"value\": [\n    {\n      \"id\": \"\",\n      \"location\": \"\",\n      \"name\": \"\",\n      \"tags\": {},\n      \"type\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful. The operation returns a list of network watcher resources.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "89e60686-eaf8-42ef-a0df-e89605aa21e6",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "943c781e-e01c-4217-9173-18f3f84af31b",
      "documentation": "Deletes the specified network watcher resource.",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName",
      "responses": [
        {
          "uuid": "2489a814-eabb-45ac-941a-13b05f897d0b",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted and the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f45ec97e-f57f-4701-97ca-f3df465011ea",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Delete successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "82e6c36f-e70b-4e96-ae1f-461bfd7aea27",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "07566287-2636-4560-83f3-bbfd942dcd3a",
      "documentation": "Gets the specified network watcher by resource group.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName",
      "responses": [
        {
          "uuid": "d805195b-2b4c-43ec-ad6b-e43b7b2cb82e",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful. The operation returns a network watcher resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "30c36c44-4231-4340-808c-c120526b90a2",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b73e8678-3af2-4792-8076-37f551effcee",
      "documentation": "Updates a network watcher tags.",
      "method": "patch",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName",
      "responses": [
        {
          "uuid": "41fc493b-b202-4712-afb5-fda35729b69d",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Update successful. The operation returns the resulting network watcher resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0756ccf7-e1a8-43a2-96c7-29d4cec58a59",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6d8ec7a4-8305-44ac-91fc-5d3badd1d857",
      "documentation": "Creates or updates a network watcher in the specified resource group.",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName",
      "responses": [
        {
          "uuid": "e792a4fa-b51b-4425-9e3c-2737fda75869",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Update successful. The operation returns the resulting network watcher resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "168f76e9-332a-4e49-ac65-e142c6eb2959",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Create successful. The operation returns the resulting network watcher resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2038780a-6262-4324-906b-b5cdf1753a02",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "52786a95-41a3-446c-87a0-5928680ac550",
      "documentation": "NOTE: This feature is currently in preview and still being tested for stability. Lists all available internet service providers for a specified Azure region.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/availableProvidersList",
      "responses": [
        {
          "uuid": "8f3c6957-4ef3-42d2-8c76-cba86db3f353",
          "body": "{\n  \"countries\": [\n    {\n      \"countryName\": \"\",\n      \"providers\": [\n        \"\"\n      ],\n      \"states\": [\n        {\n          \"cities\": [\n            {\n              \"cityName\": \"\",\n              \"providers\": [\n                \"\"\n              ]\n            }\n          ],\n          \"providers\": [\n            \"\"\n          ],\n          \"stateName\": \"\"\n        }\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful request for list of available providers.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "300fc5c2-17b4-4511-b41a-6dbc8a9faf58",
          "body": "{\n  \"countries\": [\n    {\n      \"countryName\": \"\",\n      \"providers\": [\n        \"\"\n      ],\n      \"states\": [\n        {\n          \"cities\": [\n            {\n              \"cityName\": \"\",\n              \"providers\": [\n                \"\"\n              ]\n            }\n          ],\n          \"providers\": [\n            \"\"\n          ],\n          \"stateName\": \"\"\n        }\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted and the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7f23aacd-a7c2-4e6f-87b1-da7e48505952",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b7768d82-0b84-4782-9d39-ad505bc715ce",
      "documentation": "NOTE: This feature is currently in preview and still being tested for stability. Gets the relative latency score for internet service providers from a specified location to Azure regions.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/azureReachabilityReport",
      "responses": [
        {
          "uuid": "df87b1c8-1491-4061-a284-94695170c30c",
          "body": "{\n  \"aggregationLevel\": \"\",\n  \"providerLocation\": {\n    \"city\": \"\",\n    \"country\": \"\",\n    \"state\": \"\"\n  },\n  \"reachabilityReport\": [\n    {\n      \"azureLocation\": \"\",\n      \"latencies\": [\n        {\n          \"score\": {{faker 'random.number'}},\n          \"timeStamp\": \"{{faker 'date.recent' 365}}\"\n        }\n      ],\n      \"provider\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful request for Azure reachability report.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3b6269c2-ec11-419a-92fe-9ddc0edf3d00",
          "body": "{\n  \"aggregationLevel\": \"\",\n  \"providerLocation\": {\n    \"city\": \"\",\n    \"country\": \"\",\n    \"state\": \"\"\n  },\n  \"reachabilityReport\": [\n    {\n      \"azureLocation\": \"\",\n      \"latencies\": [\n        {\n          \"score\": {{faker 'random.number'}},\n          \"timeStamp\": \"{{faker 'date.recent' 365}}\"\n        }\n      ],\n      \"provider\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted and the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "89db3bf6-9318-494c-b058-c0818976d6e7",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e9420f91-c58d-46d0-b132-9afc520a469d",
      "documentation": "Configures flow log and traffic analytics (optional) on a specified resource.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/configureFlowLog",
      "responses": [
        {
          "uuid": "f85905c4-7cc7-437e-8588-414cd525b150",
          "body": "{\n  \"flowAnalyticsConfiguration\": {\n    \"networkWatcherFlowAnalyticsConfiguration\": {\n      \"enabled\": {{faker 'random.boolean'}},\n      \"trafficAnalyticsInterval\": {{faker 'random.number'}},\n      \"workspaceId\": \"\",\n      \"workspaceRegion\": \"\",\n      \"workspaceResourceId\": \"\"\n    }\n  },\n  \"properties\": {\n    \"enabled\": {{faker 'random.boolean'}},\n    \"format\": {\n      \"type\": \"{{oneOf (array 'JSON')}}\",\n      \"version\": {{faker 'random.number'}}\n    },\n    \"retentionPolicy\": {\n      \"days\": {{faker 'random.number'}},\n      \"enabled\": {{faker 'random.boolean'}}\n    },\n    \"storageId\": \"\"\n  },\n  \"targetResourceId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful request for setting flow log and traffic analytics (optional) configuration.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4528d43c-bc3e-4540-9faa-a6dab6ec2481",
          "body": "{\n  \"flowAnalyticsConfiguration\": {\n    \"networkWatcherFlowAnalyticsConfiguration\": {\n      \"enabled\": {{faker 'random.boolean'}},\n      \"trafficAnalyticsInterval\": {{faker 'random.number'}},\n      \"workspaceId\": \"\",\n      \"workspaceRegion\": \"\",\n      \"workspaceResourceId\": \"\"\n    }\n  },\n  \"properties\": {\n    \"enabled\": {{faker 'random.boolean'}},\n    \"format\": {\n      \"type\": \"{{oneOf (array 'JSON')}}\",\n      \"version\": {{faker 'random.number'}}\n    },\n    \"retentionPolicy\": {\n      \"days\": {{faker 'random.number'}},\n      \"enabled\": {{faker 'random.boolean'}}\n    },\n    \"storageId\": \"\"\n  },\n  \"targetResourceId\": \"\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted and the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "78396af4-3cb7-4b0d-aec0-79878c22853e",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ec4108dd-0df3-455d-aee4-755cd9473abd",
      "documentation": "Lists all connection monitors for the specified Network Watcher.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/connectionMonitors",
      "responses": [
        {
          "uuid": "416a0dc2-4efc-48bf-b313-3f67323aebe3",
          "body": "{\n  \"value\": [\n    {\n      \"etag\": \"\",\n      \"id\": \"\",\n      \"location\": \"\",\n      \"name\": \"\",\n      \"properties\": {\n        \"autoStart\": true,\n        \"destination\": {\n          \"address\": \"\",\n          \"port\": {{faker 'random.number'}},\n          \"resourceId\": \"\"\n        },\n        \"endpoints\": [\n          {\n            \"address\": \"\",\n            \"filter\": {\n              \"items\": [\n                {\n                  \"address\": \"\",\n                  \"type\": \"{{oneOf (array 'AgentAddress')}}\"\n                }\n              ],\n              \"type\": \"{{oneOf (array 'Include')}}\"\n            },\n            \"name\": \"\",\n            \"resourceId\": \"\"\n          }\n        ],\n        \"monitoringIntervalInSeconds\": 60,\n        \"notes\": \"\",\n        \"outputs\": [\n          {\n            \"type\": \"{{oneOf (array 'Workspace')}}\",\n            \"workspaceSettings\": {\n              \"workspaceResourceId\": \"\"\n            }\n          }\n        ],\n        \"source\": {\n          \"port\": {{faker 'random.number'}},\n          \"resourceId\": \"\"\n        },\n        \"testConfigurations\": [\n          {\n            \"httpConfiguration\": {\n              \"method\": \"{{oneOf (array 'Get' 'Post')}}\",\n              \"path\": \"\",\n              \"port\": {{faker 'random.number'}},\n              \"preferHTTPS\": {{faker 'random.boolean'}},\n              \"requestHeaders\": [\n                {\n                  \"name\": \"\",\n                  \"value\": \"\"\n                }\n              ],\n              \"validStatusCodeRanges\": [\n                \"\"\n              ]\n            },\n            \"icmpConfiguration\": {\n              \"disableTraceRoute\": {{faker 'random.boolean'}}\n            },\n            \"name\": \"\",\n            \"preferredIPVersion\": \"{{oneOf (array 'IPv4' 'IPv6')}}\",\n            \"protocol\": \"{{oneOf (array 'Tcp' 'Http' 'Icmp')}}\",\n            \"successThreshold\": {\n              \"checksFailedPercent\": {{faker 'random.number'}},\n              \"roundTripTimeMs\": {{faker 'random.number'}}\n            },\n            \"tcpConfiguration\": {\n              \"disableTraceRoute\": {{faker 'random.boolean'}},\n              \"port\": {{faker 'random.number'}}\n            },\n            \"testFrequencySec\": {{faker 'random.number'}}\n          }\n        ],\n        \"testGroups\": [\n          {\n            \"destinations\": [\n              \"\"\n            ],\n            \"disable\": {{faker 'random.boolean'}},\n            \"name\": \"\",\n            \"sources\": [\n              \"\"\n            ],\n            \"testConfigurations\": [\n              \"\"\n            ]\n          }\n        ]\n      },\n      \"tags\": {},\n      \"type\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful connection monitor enumeration request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a2023d65-44aa-498f-a9a1-394b8e7182d1",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "35630f66-d4fa-4e30-83bd-e3ac43b991f6",
      "documentation": "Deletes the specified connection monitor.",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/connectionMonitors/:connectionMonitorName",
      "responses": [
        {
          "uuid": "6d547e2c-af4a-40d8-8373-22b8197ac5c0",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted. The operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4753d7c1-2e1b-4932-b161-f110bbb14201",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Delete successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e0a18916-d1a7-45c8-828c-40988a716212",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d6c026eb-9279-485b-bf5c-75b588120cc5",
      "documentation": "Gets a connection monitor by name.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/connectionMonitors/:connectionMonitorName",
      "responses": [
        {
          "uuid": "00a95589-47ec-44a2-9bda-6a000a9ecf3e",
          "body": "{\n  \"etag\": \"\",\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"properties\": {\n    \"autoStart\": true,\n    \"destination\": {\n      \"address\": \"\",\n      \"port\": {{faker 'random.number'}},\n      \"resourceId\": \"\"\n    },\n    \"endpoints\": [\n      {\n        \"address\": \"\",\n        \"filter\": {\n          \"items\": [\n            {\n              \"address\": \"\",\n              \"type\": \"{{oneOf (array 'AgentAddress')}}\"\n            }\n          ],\n          \"type\": \"{{oneOf (array 'Include')}}\"\n        },\n        \"name\": \"\",\n        \"resourceId\": \"\"\n      }\n    ],\n    \"monitoringIntervalInSeconds\": 60,\n    \"notes\": \"\",\n    \"outputs\": [\n      {\n        \"type\": \"{{oneOf (array 'Workspace')}}\",\n        \"workspaceSettings\": {\n          \"workspaceResourceId\": \"\"\n        }\n      }\n    ],\n    \"source\": {\n      \"port\": {{faker 'random.number'}},\n      \"resourceId\": \"\"\n    },\n    \"testConfigurations\": [\n      {\n        \"httpConfiguration\": {\n          \"method\": \"{{oneOf (array 'Get' 'Post')}}\",\n          \"path\": \"\",\n          \"port\": {{faker 'random.number'}},\n          \"preferHTTPS\": {{faker 'random.boolean'}},\n          \"requestHeaders\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"validStatusCodeRanges\": [\n            \"\"\n          ]\n        },\n        \"icmpConfiguration\": {\n          \"disableTraceRoute\": {{faker 'random.boolean'}}\n        },\n        \"name\": \"\",\n        \"preferredIPVersion\": \"{{oneOf (array 'IPv4' 'IPv6')}}\",\n        \"protocol\": \"{{oneOf (array 'Tcp' 'Http' 'Icmp')}}\",\n        \"successThreshold\": {\n          \"checksFailedPercent\": {{faker 'random.number'}},\n          \"roundTripTimeMs\": {{faker 'random.number'}}\n        },\n        \"tcpConfiguration\": {\n          \"disableTraceRoute\": {{faker 'random.boolean'}},\n          \"port\": {{faker 'random.number'}}\n        },\n        \"testFrequencySec\": {{faker 'random.number'}}\n      }\n    ],\n    \"testGroups\": [\n      {\n        \"destinations\": [\n          \"\"\n        ],\n        \"disable\": {{faker 'random.boolean'}},\n        \"name\": \"\",\n        \"sources\": [\n          \"\"\n        ],\n        \"testConfigurations\": [\n          \"\"\n        ]\n      }\n    ]\n  },\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful. The operation returns a connection monitor.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7c763e8e-0293-448c-9525-9014e18e33a1",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8251b2ee-bcd5-427d-848d-61ac39ced56d",
      "documentation": "Update tags of the specified connection monitor.",
      "method": "patch",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/connectionMonitors/:connectionMonitorName",
      "responses": [
        {
          "uuid": "f17f20db-15c5-4895-8c3a-98e05cf6cf02",
          "body": "{\n  \"etag\": \"\",\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"properties\": {\n    \"autoStart\": true,\n    \"destination\": {\n      \"address\": \"\",\n      \"port\": {{faker 'random.number'}},\n      \"resourceId\": \"\"\n    },\n    \"endpoints\": [\n      {\n        \"address\": \"\",\n        \"filter\": {\n          \"items\": [\n            {\n              \"address\": \"\",\n              \"type\": \"{{oneOf (array 'AgentAddress')}}\"\n            }\n          ],\n          \"type\": \"{{oneOf (array 'Include')}}\"\n        },\n        \"name\": \"\",\n        \"resourceId\": \"\"\n      }\n    ],\n    \"monitoringIntervalInSeconds\": 60,\n    \"notes\": \"\",\n    \"outputs\": [\n      {\n        \"type\": \"{{oneOf (array 'Workspace')}}\",\n        \"workspaceSettings\": {\n          \"workspaceResourceId\": \"\"\n        }\n      }\n    ],\n    \"source\": {\n      \"port\": {{faker 'random.number'}},\n      \"resourceId\": \"\"\n    },\n    \"testConfigurations\": [\n      {\n        \"httpConfiguration\": {\n          \"method\": \"{{oneOf (array 'Get' 'Post')}}\",\n          \"path\": \"\",\n          \"port\": {{faker 'random.number'}},\n          \"preferHTTPS\": {{faker 'random.boolean'}},\n          \"requestHeaders\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"validStatusCodeRanges\": [\n            \"\"\n          ]\n        },\n        \"icmpConfiguration\": {\n          \"disableTraceRoute\": {{faker 'random.boolean'}}\n        },\n        \"name\": \"\",\n        \"preferredIPVersion\": \"{{oneOf (array 'IPv4' 'IPv6')}}\",\n        \"protocol\": \"{{oneOf (array 'Tcp' 'Http' 'Icmp')}}\",\n        \"successThreshold\": {\n          \"checksFailedPercent\": {{faker 'random.number'}},\n          \"roundTripTimeMs\": {{faker 'random.number'}}\n        },\n        \"tcpConfiguration\": {\n          \"disableTraceRoute\": {{faker 'random.boolean'}},\n          \"port\": {{faker 'random.number'}}\n        },\n        \"testFrequencySec\": {{faker 'random.number'}}\n      }\n    ],\n    \"testGroups\": [\n      {\n        \"destinations\": [\n          \"\"\n        ],\n        \"disable\": {{faker 'random.boolean'}},\n        \"name\": \"\",\n        \"sources\": [\n          \"\"\n        ],\n        \"testConfigurations\": [\n          \"\"\n        ]\n      }\n    ]\n  },\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful. The operation returns updated connection monitor.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "89ba68b0-4abd-4643-ae47-a40cbb3db9a9",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bf35cad1-ae27-4775-84ea-fee979f52ce4",
      "documentation": "Create or update a connection monitor.",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/connectionMonitors/:connectionMonitorName",
      "responses": [
        {
          "uuid": "812d81b8-a258-487b-8b03-00ae73ff2c4e",
          "body": "{\n  \"etag\": \"\",\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"properties\": {\n    \"autoStart\": true,\n    \"destination\": {\n      \"address\": \"\",\n      \"port\": {{faker 'random.number'}},\n      \"resourceId\": \"\"\n    },\n    \"endpoints\": [\n      {\n        \"address\": \"\",\n        \"filter\": {\n          \"items\": [\n            {\n              \"address\": \"\",\n              \"type\": \"{{oneOf (array 'AgentAddress')}}\"\n            }\n          ],\n          \"type\": \"{{oneOf (array 'Include')}}\"\n        },\n        \"name\": \"\",\n        \"resourceId\": \"\"\n      }\n    ],\n    \"monitoringIntervalInSeconds\": 60,\n    \"notes\": \"\",\n    \"outputs\": [\n      {\n        \"type\": \"{{oneOf (array 'Workspace')}}\",\n        \"workspaceSettings\": {\n          \"workspaceResourceId\": \"\"\n        }\n      }\n    ],\n    \"source\": {\n      \"port\": {{faker 'random.number'}},\n      \"resourceId\": \"\"\n    },\n    \"testConfigurations\": [\n      {\n        \"httpConfiguration\": {\n          \"method\": \"{{oneOf (array 'Get' 'Post')}}\",\n          \"path\": \"\",\n          \"port\": {{faker 'random.number'}},\n          \"preferHTTPS\": {{faker 'random.boolean'}},\n          \"requestHeaders\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"validStatusCodeRanges\": [\n            \"\"\n          ]\n        },\n        \"icmpConfiguration\": {\n          \"disableTraceRoute\": {{faker 'random.boolean'}}\n        },\n        \"name\": \"\",\n        \"preferredIPVersion\": \"{{oneOf (array 'IPv4' 'IPv6')}}\",\n        \"protocol\": \"{{oneOf (array 'Tcp' 'Http' 'Icmp')}}\",\n        \"successThreshold\": {\n          \"checksFailedPercent\": {{faker 'random.number'}},\n          \"roundTripTimeMs\": {{faker 'random.number'}}\n        },\n        \"tcpConfiguration\": {\n          \"disableTraceRoute\": {{faker 'random.boolean'}},\n          \"port\": {{faker 'random.number'}}\n        },\n        \"testFrequencySec\": {{faker 'random.number'}}\n      }\n    ],\n    \"testGroups\": [\n      {\n        \"destinations\": [\n          \"\"\n        ],\n        \"disable\": {{faker 'random.boolean'}},\n        \"name\": \"\",\n        \"sources\": [\n          \"\"\n        ],\n        \"testConfigurations\": [\n          \"\"\n        ]\n      }\n    ]\n  },\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Update successful. The operation returns the resulting network watcher resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d3f1e873-6825-4179-99a1-66d2e21eec90",
          "body": "{\n  \"etag\": \"\",\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"properties\": {\n    \"autoStart\": true,\n    \"destination\": {\n      \"address\": \"\",\n      \"port\": {{faker 'random.number'}},\n      \"resourceId\": \"\"\n    },\n    \"endpoints\": [\n      {\n        \"address\": \"\",\n        \"filter\": {\n          \"items\": [\n            {\n              \"address\": \"\",\n              \"type\": \"{{oneOf (array 'AgentAddress')}}\"\n            }\n          ],\n          \"type\": \"{{oneOf (array 'Include')}}\"\n        },\n        \"name\": \"\",\n        \"resourceId\": \"\"\n      }\n    ],\n    \"monitoringIntervalInSeconds\": 60,\n    \"notes\": \"\",\n    \"outputs\": [\n      {\n        \"type\": \"{{oneOf (array 'Workspace')}}\",\n        \"workspaceSettings\": {\n          \"workspaceResourceId\": \"\"\n        }\n      }\n    ],\n    \"source\": {\n      \"port\": {{faker 'random.number'}},\n      \"resourceId\": \"\"\n    },\n    \"testConfigurations\": [\n      {\n        \"httpConfiguration\": {\n          \"method\": \"{{oneOf (array 'Get' 'Post')}}\",\n          \"path\": \"\",\n          \"port\": {{faker 'random.number'}},\n          \"preferHTTPS\": {{faker 'random.boolean'}},\n          \"requestHeaders\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"validStatusCodeRanges\": [\n            \"\"\n          ]\n        },\n        \"icmpConfiguration\": {\n          \"disableTraceRoute\": {{faker 'random.boolean'}}\n        },\n        \"name\": \"\",\n        \"preferredIPVersion\": \"{{oneOf (array 'IPv4' 'IPv6')}}\",\n        \"protocol\": \"{{oneOf (array 'Tcp' 'Http' 'Icmp')}}\",\n        \"successThreshold\": {\n          \"checksFailedPercent\": {{faker 'random.number'}},\n          \"roundTripTimeMs\": {{faker 'random.number'}}\n        },\n        \"tcpConfiguration\": {\n          \"disableTraceRoute\": {{faker 'random.boolean'}},\n          \"port\": {{faker 'random.number'}}\n        },\n        \"testFrequencySec\": {{faker 'random.number'}}\n      }\n    ],\n    \"testGroups\": [\n      {\n        \"destinations\": [\n          \"\"\n        ],\n        \"disable\": {{faker 'random.boolean'}},\n        \"name\": \"\",\n        \"sources\": [\n          \"\"\n        ],\n        \"testConfigurations\": [\n          \"\"\n        ]\n      }\n    ]\n  },\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Create successful. The operation returns the resulting network watcher resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9178b8bf-5775-4b92-baa0-a6e288eda060",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c5c5c152-21cc-4410-8af6-36ecc95f0c0a",
      "documentation": "Query a snapshot of the most recent connection states.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/connectionMonitors/:connectionMonitorName/query",
      "responses": [
        {
          "uuid": "c52059a5-f767-4ef0-a5a8-91b511c15cbc",
          "body": "{\n  \"sourceStatus\": \"{{oneOf (array 'Unknown' 'Active' 'Inactive')}}\",\n  \"states\": [\n    {\n      \"avgLatencyInMs\": {{faker 'random.number'}},\n      \"connectionState\": \"{{oneOf (array 'Reachable' 'Unreachable' 'Unknown')}}\",\n      \"endTime\": \"{{faker 'date.recent' 365}}\",\n      \"evaluationState\": \"{{oneOf (array 'NotStarted' 'InProgress' 'Completed')}}\",\n      \"hops\": [\n        {\n          \"address\": \"\",\n          \"id\": \"\",\n          \"issues\": [\n            {\n              \"context\": [\n                {}\n              ],\n              \"origin\": \"{{oneOf (array 'Local' 'Inbound' 'Outbound')}}\",\n              \"severity\": \"{{oneOf (array 'Error' 'Warning')}}\",\n              \"type\": \"{{oneOf (array 'Unknown' 'AgentStopped' 'GuestFirewall' 'DnsResolution' 'SocketBind' 'NetworkSecurityRule' 'UserDefinedRoute' 'PortThrottled' 'Platform')}}\"\n            }\n          ],\n          \"nextHopIds\": [\n            \"\"\n          ],\n          \"resourceId\": \"\",\n          \"type\": \"\"\n        }\n      ],\n      \"maxLatencyInMs\": {{faker 'random.number'}},\n      \"minLatencyInMs\": {{faker 'random.number'}},\n      \"probesFailed\": {{faker 'random.number'}},\n      \"probesSent\": {{faker 'random.number'}},\n      \"startTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful query of connection states.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cff86a98-e39d-4b67-8897-77a4d1d65f58",
          "body": "{\n  \"sourceStatus\": \"{{oneOf (array 'Unknown' 'Active' 'Inactive')}}\",\n  \"states\": [\n    {\n      \"avgLatencyInMs\": {{faker 'random.number'}},\n      \"connectionState\": \"{{oneOf (array 'Reachable' 'Unreachable' 'Unknown')}}\",\n      \"endTime\": \"{{faker 'date.recent' 365}}\",\n      \"evaluationState\": \"{{oneOf (array 'NotStarted' 'InProgress' 'Completed')}}\",\n      \"hops\": [\n        {\n          \"address\": \"\",\n          \"id\": \"\",\n          \"issues\": [\n            {\n              \"context\": [\n                {}\n              ],\n              \"origin\": \"{{oneOf (array 'Local' 'Inbound' 'Outbound')}}\",\n              \"severity\": \"{{oneOf (array 'Error' 'Warning')}}\",\n              \"type\": \"{{oneOf (array 'Unknown' 'AgentStopped' 'GuestFirewall' 'DnsResolution' 'SocketBind' 'NetworkSecurityRule' 'UserDefinedRoute' 'PortThrottled' 'Platform')}}\"\n            }\n          ],\n          \"nextHopIds\": [\n            \"\"\n          ],\n          \"resourceId\": \"\",\n          \"type\": \"\"\n        }\n      ],\n      \"maxLatencyInMs\": {{faker 'random.number'}},\n      \"minLatencyInMs\": {{faker 'random.number'}},\n      \"probesFailed\": {{faker 'random.number'}},\n      \"probesSent\": {{faker 'random.number'}},\n      \"startTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted query of connection states.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "32ee3995-475a-44d2-bc4b-9d805764128e",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a8b7483c-3395-463e-bced-61cf80553a75",
      "documentation": "Starts the specified connection monitor.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/connectionMonitors/:connectionMonitorName/start",
      "responses": [
        {
          "uuid": "7fa2a668-a328-428e-8cfe-d20c910ab370",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful. The operation starts the connection monitor.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6b963afe-5513-40c3-aa20-8ea107584571",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted. The operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b2e81bd4-b1e0-484b-b9b2-4f2bab7d615a",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bdbf11fe-9117-45ff-b4b2-bfa3e1c113c8",
      "documentation": "Stops the specified connection monitor.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/connectionMonitors/:connectionMonitorName/stop",
      "responses": [
        {
          "uuid": "6aab892c-5ea8-4833-80ba-5cbb54269fdc",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful. The operation stops the connection monitor.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "50ad1562-8fa0-4ff5-83a8-8883401a974c",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted. The operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "17c6029c-0841-4bed-b722-6cfcb7bc93e8",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cbabda45-afec-48f6-82b4-33fcf72edd6c",
      "documentation": "Verifies the possibility of establishing a direct TCP connection from a virtual machine to a given endpoint including another VM or an arbitrary remote server.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/connectivityCheck",
      "responses": [
        {
          "uuid": "d296025d-ec40-49e1-825b-f605f0af46a4",
          "body": "{\n  \"avgLatencyInMs\": {{faker 'random.number'}},\n  \"connectionStatus\": \"{{oneOf (array 'Unknown' 'Connected' 'Disconnected' 'Degraded')}}\",\n  \"hops\": [\n    {\n      \"address\": \"\",\n      \"id\": \"\",\n      \"issues\": [\n        {\n          \"context\": [\n            {}\n          ],\n          \"origin\": \"{{oneOf (array 'Local' 'Inbound' 'Outbound')}}\",\n          \"severity\": \"{{oneOf (array 'Error' 'Warning')}}\",\n          \"type\": \"{{oneOf (array 'Unknown' 'AgentStopped' 'GuestFirewall' 'DnsResolution' 'SocketBind' 'NetworkSecurityRule' 'UserDefinedRoute' 'PortThrottled' 'Platform')}}\"\n        }\n      ],\n      \"nextHopIds\": [\n        \"\"\n      ],\n      \"resourceId\": \"\",\n      \"type\": \"\"\n    }\n  ],\n  \"maxLatencyInMs\": {{faker 'random.number'}},\n  \"minLatencyInMs\": {{faker 'random.number'}},\n  \"probesFailed\": {{faker 'random.number'}},\n  \"probesSent\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful request for checking connectivity.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4b541a24-d49d-435b-9740-853755464deb",
          "body": "{\n  \"avgLatencyInMs\": {{faker 'random.number'}},\n  \"connectionStatus\": \"{{oneOf (array 'Unknown' 'Connected' 'Disconnected' 'Degraded')}}\",\n  \"hops\": [\n    {\n      \"address\": \"\",\n      \"id\": \"\",\n      \"issues\": [\n        {\n          \"context\": [\n            {}\n          ],\n          \"origin\": \"{{oneOf (array 'Local' 'Inbound' 'Outbound')}}\",\n          \"severity\": \"{{oneOf (array 'Error' 'Warning')}}\",\n          \"type\": \"{{oneOf (array 'Unknown' 'AgentStopped' 'GuestFirewall' 'DnsResolution' 'SocketBind' 'NetworkSecurityRule' 'UserDefinedRoute' 'PortThrottled' 'Platform')}}\"\n        }\n      ],\n      \"nextHopIds\": [\n        \"\"\n      ],\n      \"resourceId\": \"\",\n      \"type\": \"\"\n    }\n  ],\n  \"maxLatencyInMs\": {{faker 'random.number'}},\n  \"minLatencyInMs\": {{faker 'random.number'}},\n  \"probesFailed\": {{faker 'random.number'}},\n  \"probesSent\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted and the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c15897a4-9b8f-4c49-82bb-1ed54967f657",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b0163c17-dff4-4a8f-8414-ec370dd54d20",
      "documentation": "Lists all flow log resources for the specified Network Watcher.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/flowLogs",
      "responses": [
        {
          "uuid": "ccc9c7c2-7347-4e8e-9b0d-ed2526fc5118",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"id\": \"\",\n      \"location\": \"\",\n      \"name\": \"\",\n      \"tags\": {},\n      \"type\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful flow log enumeration request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c4dda32c-860d-4d18-8222-21b722709dd6",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dd92f6ca-eeca-4df4-8858-5c1bb213a305",
      "documentation": "Deletes the specified flow log resource.",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/flowLogs/:flowLogName",
      "responses": [
        {
          "uuid": "9e451781-ddbc-4202-bc5d-edb5e244e115",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted and the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "38384b2f-d0df-4bce-83df-88bc5b6c5470",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Delete successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "19d288a9-8cf8-4959-aa12-8b96bde8d822",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "53dcb4bf-aa52-41d6-b782-6962e510da93",
      "documentation": "Gets a flow log resource by name.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/flowLogs/:flowLogName",
      "responses": [
        {
          "uuid": "48020cfd-65ad-4578-8482-782e27068662",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful. The operation returns a flow log resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c1f3617f-eec7-42ea-a004-9fca9e342551",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e182774a-056c-4330-ba96-edd9140fb515",
      "documentation": "Create or update a flow log for the specified network security group.",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/flowLogs/:flowLogName",
      "responses": [
        {
          "uuid": "ef6f4fc8-b283-4ccb-b3dd-55582e1950d6",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Update successful. The operation returns the resulting flow log resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "10ebdbc3-28c8-4868-9318-edf3b400f186",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Request successful. The operation returns the resulting flow log resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8ca615a4-9316-476c-a1d7-092bbbe31785",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3de40d84-8b2a-4b6a-8b68-88360f793d20",
      "documentation": "Verify IP flow from the specified VM to a location given the currently configured NSG rules.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/ipFlowVerify",
      "responses": [
        {
          "uuid": "77b433f8-7fb6-4e57-a797-3b65c7a04373",
          "body": "{\n  \"access\": \"{{oneOf (array 'Allow' 'Deny')}}\",\n  \"ruleName\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful. The operation returns the result of IP flow verification.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f080a9ab-d36f-446e-80e9-34246ed26dfb",
          "body": "{\n  \"access\": \"{{oneOf (array 'Allow' 'Deny')}}\",\n  \"ruleName\": \"\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted and the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a16ce17e-a6b3-4b4e-9af3-e8416a742a30",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fcb78af1-5855-4285-a672-e2175a8660fb",
      "documentation": "Gets Network Configuration Diagnostic data to help customers understand and debug network behavior. It provides detailed information on what security rules were applied to a specified traffic flow and the result of evaluating these rules. Customers must provide details of a flow like source, destination, protocol, etc. The API returns whether traffic was allowed or denied, the rules evaluated for the specified flow and the evaluation results.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/networkConfigurationDiagnostic",
      "responses": [
        {
          "uuid": "8dab23fb-b6aa-41ca-854a-4ca8afd91635",
          "body": "{\n  \"results\": [\n    {\n      \"networkSecurityGroupResult\": {\n        \"evaluatedNetworkSecurityGroups\": [\n          {\n            \"appliedTo\": \"\",\n            \"matchedRule\": {\n              \"action\": \"\",\n              \"ruleName\": \"\"\n            },\n            \"networkSecurityGroupId\": \"\",\n            \"rulesEvaluationResult\": [\n              {\n                \"destinationMatched\": {{faker 'random.boolean'}},\n                \"destinationPortMatched\": {{faker 'random.boolean'}},\n                \"name\": \"\",\n                \"protocolMatched\": {{faker 'random.boolean'}},\n                \"sourceMatched\": {{faker 'random.boolean'}},\n                \"sourcePortMatched\": {{faker 'random.boolean'}}\n              }\n            ]\n          }\n        ],\n        \"securityRuleAccessResult\": \"{{oneOf (array 'Allow' 'Deny')}}\"\n      },\n      \"profile\": {\n        \"destination\": \"\",\n        \"destinationPort\": \"\",\n        \"direction\": \"{{oneOf (array 'Inbound' 'Outbound')}}\",\n        \"protocol\": \"\",\n        \"source\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful. The operation returns the result of network configuration diagnostic.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1b26fe76-678b-47f5-82e2-0cc96b3503da",
          "body": "{\n  \"results\": [\n    {\n      \"networkSecurityGroupResult\": {\n        \"evaluatedNetworkSecurityGroups\": [\n          {\n            \"appliedTo\": \"\",\n            \"matchedRule\": {\n              \"action\": \"\",\n              \"ruleName\": \"\"\n            },\n            \"networkSecurityGroupId\": \"\",\n            \"rulesEvaluationResult\": [\n              {\n                \"destinationMatched\": {{faker 'random.boolean'}},\n                \"destinationPortMatched\": {{faker 'random.boolean'}},\n                \"name\": \"\",\n                \"protocolMatched\": {{faker 'random.boolean'}},\n                \"sourceMatched\": {{faker 'random.boolean'}},\n                \"sourcePortMatched\": {{faker 'random.boolean'}}\n              }\n            ]\n          }\n        ],\n        \"securityRuleAccessResult\": \"{{oneOf (array 'Allow' 'Deny')}}\"\n      },\n      \"profile\": {\n        \"destination\": \"\",\n        \"destinationPort\": \"\",\n        \"direction\": \"{{oneOf (array 'Inbound' 'Outbound')}}\",\n        \"protocol\": \"\",\n        \"source\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted and the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dfdbcde6-7faa-4d34-a747-0542a24c0cf6",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7e487eb6-2d20-4cdc-9cac-d3e007ae1030",
      "documentation": "Gets the next hop from the specified VM.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/nextHop",
      "responses": [
        {
          "uuid": "ffeebf48-a80d-4d18-91dc-c20a9447eb83",
          "body": "{\n  \"nextHopIpAddress\": \"\",\n  \"nextHopType\": \"{{oneOf (array 'Internet' 'VirtualAppliance' 'VirtualNetworkGateway' 'VnetLocal' 'HyperNetGateway' 'None')}}\",\n  \"routeTableId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful. The operation returns the next hop from the VM.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "628c9e32-248b-41cf-843c-69ff9eb10549",
          "body": "{\n  \"nextHopIpAddress\": \"\",\n  \"nextHopType\": \"{{oneOf (array 'Internet' 'VirtualAppliance' 'VirtualNetworkGateway' 'VnetLocal' 'HyperNetGateway' 'None')}}\",\n  \"routeTableId\": \"\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted and the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "75e9e935-f2d0-4e49-a93f-cb61d0f936df",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5b1ac0bb-ce31-4428-83a4-d0536718648c",
      "documentation": "Lists all packet capture sessions within the specified resource group.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/packetCaptures",
      "responses": [
        {
          "uuid": "b9f715d6-fa7e-4f47-813c-59f1a489f598",
          "body": "{\n  \"value\": [\n    {\n      \"etag\": \"\",\n      \"id\": \"\",\n      \"name\": \"\",\n      \"properties\": {\n        \"bytesToCapturePerPacket\": {{faker 'random.number'}},\n        \"filters\": [\n          {\n            \"localIPAddress\": \"\",\n            \"localPort\": \"\",\n            \"protocol\": \"{{oneOf (array 'TCP' 'UDP' 'Any')}}\",\n            \"remoteIPAddress\": \"\",\n            \"remotePort\": \"\"\n          }\n        ],\n        \"storageLocation\": {\n          \"filePath\": \"\",\n          \"storageId\": \"\",\n          \"storagePath\": \"\"\n        },\n        \"target\": \"\",\n        \"timeLimitInSeconds\": 18000,\n        \"totalBytesPerSession\": 1073741824\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful packet capture enumeration request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "86d55e32-033c-45e3-a398-dde396773a27",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2b8b1a88-f696-49f9-91a4-0ba8427233f2",
      "documentation": "Deletes the specified packet capture session.",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/packetCaptures/:packetCaptureName",
      "responses": [
        {
          "uuid": "f3bb4bd9-5629-4277-95f2-20e3b386b4cc",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted and the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8fecd7ff-a99d-4b1e-a7a1-2cbdadc77bd0",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Delete successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b2f47d1f-2327-4b7b-a133-fbaa105a08b8",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fad847b5-8458-4fea-af5a-7f690c5819fe",
      "documentation": "Gets a packet capture session by name.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/packetCaptures/:packetCaptureName",
      "responses": [
        {
          "uuid": "67dcc713-9fd7-4531-b3c5-2abe3d0f7ed6",
          "body": "{\n  \"etag\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"properties\": {\n    \"bytesToCapturePerPacket\": {{faker 'random.number'}},\n    \"filters\": [\n      {\n        \"localIPAddress\": \"\",\n        \"localPort\": \"\",\n        \"protocol\": \"{{oneOf (array 'TCP' 'UDP' 'Any')}}\",\n        \"remoteIPAddress\": \"\",\n        \"remotePort\": \"\"\n      }\n    ],\n    \"storageLocation\": {\n      \"filePath\": \"\",\n      \"storageId\": \"\",\n      \"storagePath\": \"\"\n    },\n    \"target\": \"\",\n    \"timeLimitInSeconds\": 18000,\n    \"totalBytesPerSession\": 1073741824\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful. The operation returns a packet capture session.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8f0687bb-a18f-4344-b8ab-d0d97a184907",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "568ba876-79f0-4a72-aa4b-a3c9e5751298",
      "documentation": "Create and start a packet capture on the specified VM.",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/packetCaptures/:packetCaptureName",
      "responses": [
        {
          "uuid": "3876af03-7b28-47ba-b51b-2d5151ae15bc",
          "body": "{\n  \"etag\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"properties\": {\n    \"bytesToCapturePerPacket\": {{faker 'random.number'}},\n    \"filters\": [\n      {\n        \"localIPAddress\": \"\",\n        \"localPort\": \"\",\n        \"protocol\": \"{{oneOf (array 'TCP' 'UDP' 'Any')}}\",\n        \"remoteIPAddress\": \"\",\n        \"remotePort\": \"\"\n      }\n    ],\n    \"storageLocation\": {\n      \"filePath\": \"\",\n      \"storageId\": \"\",\n      \"storagePath\": \"\"\n    },\n    \"target\": \"\",\n    \"timeLimitInSeconds\": 18000,\n    \"totalBytesPerSession\": 1073741824\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Request successful. The operation returns the resulting packet capture session.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "76bd732e-5a28-4301-824c-e9435463d60c",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6ed557b7-016d-443a-b9f4-efcd8351c852",
      "documentation": "Query the status of a running packet capture session.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/packetCaptures/:packetCaptureName/queryStatus",
      "responses": [
        {
          "uuid": "fdba258e-9829-47e4-b197-a922b7cd6deb",
          "body": "{\n  \"captureStartTime\": \"{{faker 'date.recent' 365}}\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"packetCaptureError\": [\n    \"{{oneOf (array 'InternalError' 'AgentStopped' 'CaptureFailed' 'LocalFileFailed' 'StorageFailed')}}\"\n  ],\n  \"packetCaptureStatus\": \"{{oneOf (array 'NotStarted' 'Running' 'Stopped' 'Error' 'Unknown')}}\",\n  \"stopReason\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful query of packet capture status.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "67f066a8-cdd3-408b-a7de-2e4bd8aa808d",
          "body": "{\n  \"captureStartTime\": \"{{faker 'date.recent' 365}}\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"packetCaptureError\": [\n    \"{{oneOf (array 'InternalError' 'AgentStopped' 'CaptureFailed' 'LocalFileFailed' 'StorageFailed')}}\"\n  ],\n  \"packetCaptureStatus\": \"{{oneOf (array 'NotStarted' 'Running' 'Stopped' 'Error' 'Unknown')}}\",\n  \"stopReason\": \"\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted query status of packet capture.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "22631bc7-848d-426c-a7de-081bda757105",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d1b57259-c6ad-4242-a82e-0979bd51bd28",
      "documentation": "Stops a specified packet capture session.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/packetCaptures/:packetCaptureName/stop",
      "responses": [
        {
          "uuid": "ed62b49d-a12c-4216-8f59-58f93cfefdb2",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful. The operation stops the packet capture session.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "92ddee7a-1935-4fd2-9765-b6c6397d6f4d",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted and the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "abc497ae-5b9e-46ba-8b07-63d965e91c4c",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8bad3035-71a2-4fe4-b12e-0b4cc12b1cd4",
      "documentation": "Queries status of flow log and traffic analytics (optional) on a specified resource.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/queryFlowLogStatus",
      "responses": [
        {
          "uuid": "49af1570-8384-4f96-8e00-ae29930b2e00",
          "body": "{\n  \"flowAnalyticsConfiguration\": {\n    \"networkWatcherFlowAnalyticsConfiguration\": {\n      \"enabled\": {{faker 'random.boolean'}},\n      \"trafficAnalyticsInterval\": {{faker 'random.number'}},\n      \"workspaceId\": \"\",\n      \"workspaceRegion\": \"\",\n      \"workspaceResourceId\": \"\"\n    }\n  },\n  \"properties\": {\n    \"enabled\": {{faker 'random.boolean'}},\n    \"format\": {\n      \"type\": \"{{oneOf (array 'JSON')}}\",\n      \"version\": {{faker 'random.number'}}\n    },\n    \"retentionPolicy\": {\n      \"days\": {{faker 'random.number'}},\n      \"enabled\": {{faker 'random.boolean'}}\n    },\n    \"storageId\": \"\"\n  },\n  \"targetResourceId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful request for query flow log and traffic analytics (optional) status.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "823bfa05-a6ef-4b85-b848-1c281c6ba2d6",
          "body": "{\n  \"flowAnalyticsConfiguration\": {\n    \"networkWatcherFlowAnalyticsConfiguration\": {\n      \"enabled\": {{faker 'random.boolean'}},\n      \"trafficAnalyticsInterval\": {{faker 'random.number'}},\n      \"workspaceId\": \"\",\n      \"workspaceRegion\": \"\",\n      \"workspaceResourceId\": \"\"\n    }\n  },\n  \"properties\": {\n    \"enabled\": {{faker 'random.boolean'}},\n    \"format\": {\n      \"type\": \"{{oneOf (array 'JSON')}}\",\n      \"version\": {{faker 'random.number'}}\n    },\n    \"retentionPolicy\": {\n      \"days\": {{faker 'random.number'}},\n      \"enabled\": {{faker 'random.boolean'}}\n    },\n    \"storageId\": \"\"\n  },\n  \"targetResourceId\": \"\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted and the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "90b854aa-6964-4aea-9a0c-e9fb3e55dec7",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "46ee6c6a-529d-4db1-bc46-e1437af024b3",
      "documentation": "Get the last completed troubleshooting result on a specified resource.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/queryTroubleshootResult",
      "responses": [
        {
          "uuid": "aa6af8dc-c5a4-4ba3-b5cb-dacd8fbd96a4",
          "body": "{\n  \"code\": \"\",\n  \"endTime\": \"{{faker 'date.recent' 365}}\",\n  \"results\": [\n    {\n      \"detail\": \"\",\n      \"id\": \"\",\n      \"reasonType\": \"\",\n      \"recommendedActions\": [\n        {\n          \"actionId\": \"\",\n          \"actionText\": \"\",\n          \"actionUri\": \"\",\n          \"actionUriText\": \"\"\n        }\n      ],\n      \"summary\": \"\"\n    }\n  ],\n  \"startTime\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful get troubleshooting result request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e6619217-aa5f-4495-b557-9efebd2ad33c",
          "body": "{\n  \"code\": \"\",\n  \"endTime\": \"{{faker 'date.recent' 365}}\",\n  \"results\": [\n    {\n      \"detail\": \"\",\n      \"id\": \"\",\n      \"reasonType\": \"\",\n      \"recommendedActions\": [\n        {\n          \"actionId\": \"\",\n          \"actionText\": \"\",\n          \"actionUri\": \"\",\n          \"actionUriText\": \"\"\n        }\n      ],\n      \"summary\": \"\"\n    }\n  ],\n  \"startTime\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted get troubleshooting result request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c6508583-93b5-41a1-a871-af1cd87d6974",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "78b68f24-25b2-4286-a47a-bec4690431d7",
      "documentation": "Gets the configured and effective security group rules on the specified VM.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/securityGroupView",
      "responses": [
        {
          "uuid": "209a1b93-3c56-4de6-8c89-ca583766c2c8",
          "body": "{\n  \"networkInterfaces\": [\n    {\n      \"id\": \"\",\n      \"securityRuleAssociations\": {\n        \"defaultSecurityRules\": [\n          {\n            \"id\": \"\"\n          }\n        ],\n        \"effectiveSecurityRules\": [\n          {\n            \"access\": \"{{oneOf (array 'Allow' 'Deny')}}\",\n            \"destinationAddressPrefix\": \"\",\n            \"destinationAddressPrefixes\": [\n              \"\"\n            ],\n            \"destinationPortRange\": \"\",\n            \"destinationPortRanges\": [\n              \"\"\n            ],\n            \"direction\": \"{{oneOf (array 'Inbound' 'Outbound')}}\",\n            \"expandedDestinationAddressPrefix\": [\n              \"\"\n            ],\n            \"expandedSourceAddressPrefix\": [\n              \"\"\n            ],\n            \"name\": \"\",\n            \"priority\": {{faker 'random.number'}},\n            \"protocol\": \"{{oneOf (array 'Tcp' 'Udp' 'All')}}\",\n            \"sourceAddressPrefix\": \"\",\n            \"sourceAddressPrefixes\": [\n              \"\"\n            ],\n            \"sourcePortRange\": \"\",\n            \"sourcePortRanges\": [\n              \"\"\n            ]\n          }\n        ],\n        \"networkInterfaceAssociation\": {\n          \"id\": \"\",\n          \"securityRules\": [\n            {\n              \"id\": \"\"\n            }\n          ]\n        },\n        \"subnetAssociation\": {\n          \"id\": \"\",\n          \"securityRules\": [\n            {\n              \"id\": \"\"\n            }\n          ]\n        }\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful. The operation returns security group rules on the VM.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9b035c52-ae82-4234-93fe-027fc1d695c2",
          "body": "{\n  \"networkInterfaces\": [\n    {\n      \"id\": \"\",\n      \"securityRuleAssociations\": {\n        \"defaultSecurityRules\": [\n          {\n            \"id\": \"\"\n          }\n        ],\n        \"effectiveSecurityRules\": [\n          {\n            \"access\": \"{{oneOf (array 'Allow' 'Deny')}}\",\n            \"destinationAddressPrefix\": \"\",\n            \"destinationAddressPrefixes\": [\n              \"\"\n            ],\n            \"destinationPortRange\": \"\",\n            \"destinationPortRanges\": [\n              \"\"\n            ],\n            \"direction\": \"{{oneOf (array 'Inbound' 'Outbound')}}\",\n            \"expandedDestinationAddressPrefix\": [\n              \"\"\n            ],\n            \"expandedSourceAddressPrefix\": [\n              \"\"\n            ],\n            \"name\": \"\",\n            \"priority\": {{faker 'random.number'}},\n            \"protocol\": \"{{oneOf (array 'Tcp' 'Udp' 'All')}}\",\n            \"sourceAddressPrefix\": \"\",\n            \"sourceAddressPrefixes\": [\n              \"\"\n            ],\n            \"sourcePortRange\": \"\",\n            \"sourcePortRanges\": [\n              \"\"\n            ]\n          }\n        ],\n        \"networkInterfaceAssociation\": {\n          \"id\": \"\",\n          \"securityRules\": [\n            {\n              \"id\": \"\"\n            }\n          ]\n        },\n        \"subnetAssociation\": {\n          \"id\": \"\",\n          \"securityRules\": [\n            {\n              \"id\": \"\"\n            }\n          ]\n        }\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted and the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2aeb9965-7f54-41fd-83fb-549eeacc94b9",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "43b2dd8d-4a42-4bd5-959b-efc256472f13",
      "documentation": "Gets the current network topology by resource group.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/topology",
      "responses": [
        {
          "uuid": "f5687589-9869-4043-a34d-a1b3218171a4",
          "body": "{\n  \"createdDateTime\": \"{{faker 'date.recent' 365}}\",\n  \"id\": \"\",\n  \"lastModified\": \"{{faker 'date.recent' 365}}\",\n  \"resources\": [\n    {\n      \"associations\": [\n        {\n          \"associationType\": \"{{oneOf (array 'Associated' 'Contains')}}\",\n          \"name\": \"\",\n          \"resourceId\": \"\"\n        }\n      ],\n      \"id\": \"\",\n      \"location\": \"\",\n      \"name\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful. The operation returns the topology of resource group.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "96c7e5e7-a03b-4b8c-8f41-7313953ce6a9",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2c148837-8b47-4ab0-9303-310f7224d6ac",
      "documentation": "Initiate troubleshooting on a specified resource.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/troubleshoot",
      "responses": [
        {
          "uuid": "f94c9c99-1367-417b-936e-ca3e96cf77ce",
          "body": "{\n  \"code\": \"\",\n  \"endTime\": \"{{faker 'date.recent' 365}}\",\n  \"results\": [\n    {\n      \"detail\": \"\",\n      \"id\": \"\",\n      \"reasonType\": \"\",\n      \"recommendedActions\": [\n        {\n          \"actionId\": \"\",\n          \"actionText\": \"\",\n          \"actionUri\": \"\",\n          \"actionUriText\": \"\"\n        }\n      ],\n      \"summary\": \"\"\n    }\n  ],\n  \"startTime\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful troubleshooting request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fc902ae5-4f40-4c4a-b68e-4565e0b1450b",
          "body": "{\n  \"code\": \"\",\n  \"endTime\": \"{{faker 'date.recent' 365}}\",\n  \"results\": [\n    {\n      \"detail\": \"\",\n      \"id\": \"\",\n      \"reasonType\": \"\",\n      \"recommendedActions\": [\n        {\n          \"actionId\": \"\",\n          \"actionText\": \"\",\n          \"actionUri\": \"\",\n          \"actionUriText\": \"\"\n        }\n      ],\n      \"summary\": \"\"\n    }\n  ],\n  \"startTime\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted get troubleshooting request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6b501e94-d9b7-466f-9f1f-ee59a3f4f86c",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}