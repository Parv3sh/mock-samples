{
  "uuid": "8a476c69-1f3c-4216-8ae8-77baef1af69b",
  "lastMigration": 19,
  "name": "NetworkManagementClient",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "9dc71bab-0ab7-4cf4-96fc-b41980a01b27",
      "documentation": "Gets all network watchers by subscription.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/providers/Microsoft.Network/networkWatchers",
      "responses": [
        {
          "uuid": "cdd12777-a9e5-4afa-81f9-8aa9c73f83bb",
          "body": "{\n  \"value\": [\n    {\n      \"id\": \"\",\n      \"location\": \"\",\n      \"name\": \"\",\n      \"tags\": {},\n      \"type\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful. The operation returns a list of network watcher resources.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3d47d7f4-71d5-4890-8e99-d4ea211cec49",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b1197c86-47a0-4a27-a576-f9d5e1ce50ca",
      "documentation": "Gets all network watchers by resource group.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers",
      "responses": [
        {
          "uuid": "75475123-d4b3-4844-8bdc-06e97b3c4420",
          "body": "{\n  \"value\": [\n    {\n      \"id\": \"\",\n      \"location\": \"\",\n      \"name\": \"\",\n      \"tags\": {},\n      \"type\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful. The operation returns a list of network watcher resources.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "94ff0a1c-2609-472e-8614-c6426c2a19bb",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "df583c46-9c33-425e-b35d-59a0c9c77201",
      "documentation": "Deletes the specified network watcher resource.",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName",
      "responses": [
        {
          "uuid": "cab263ff-bdba-446b-ac57-8285a0e303d5",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted and the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aff87525-ea73-44d6-9b74-c5ed5e60904c",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Delete successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eb28fa0b-f9fb-436f-9310-1371f0615683",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "268cf3e1-a6ff-4407-b2b8-3bfb9c8333cf",
      "documentation": "Gets the specified network watcher by resource group.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName",
      "responses": [
        {
          "uuid": "22a47906-c579-429d-85b2-f7de67492b5e",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful. The operation returns a network watcher resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2217e376-74ca-4c23-b9db-f21c9067e38a",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cd991910-da8b-4049-8eaa-bb92accebec4",
      "documentation": "Updates a network watcher tags.",
      "method": "patch",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName",
      "responses": [
        {
          "uuid": "80e64624-80e3-4c4f-aa14-686a38bd01fc",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Update successful. The operation returns the resulting network watcher resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "57a28e65-290b-4ed8-bd9c-e8ab7dc767e6",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "172df18c-91ef-4d5e-b98a-1544fcfbcea4",
      "documentation": "Creates or updates a network watcher in the specified resource group.",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName",
      "responses": [
        {
          "uuid": "1ebbae83-9d73-476e-a2b1-122c6777e9bb",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Update successful. The operation returns the resulting network watcher resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c121d0c5-7017-477d-b6b3-361ee3cd0b13",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Create successful. The operation returns the resulting network watcher resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6912e11f-d84c-4af7-9a09-967bc1c1576a",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b283e9ad-d052-4e19-bbdf-a238fa3a0ec7",
      "documentation": "NOTE: This feature is currently in preview and still being tested for stability. Lists all available internet service providers for a specified Azure region.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/availableProvidersList",
      "responses": [
        {
          "uuid": "632596cb-b075-47cf-bd7c-ce51900a4db7",
          "body": "{\n  \"countries\": [\n    {\n      \"countryName\": \"\",\n      \"providers\": [\n        \"\"\n      ],\n      \"states\": [\n        {\n          \"cities\": [\n            {\n              \"cityName\": \"\",\n              \"providers\": [\n                \"\"\n              ]\n            }\n          ],\n          \"providers\": [\n            \"\"\n          ],\n          \"stateName\": \"\"\n        }\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful request for list of available providers.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eaf20489-d552-4ab4-89ec-7d6aa1acf8e7",
          "body": "{\n  \"countries\": [\n    {\n      \"countryName\": \"\",\n      \"providers\": [\n        \"\"\n      ],\n      \"states\": [\n        {\n          \"cities\": [\n            {\n              \"cityName\": \"\",\n              \"providers\": [\n                \"\"\n              ]\n            }\n          ],\n          \"providers\": [\n            \"\"\n          ],\n          \"stateName\": \"\"\n        }\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted and the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3c62ec65-e6bb-4d1c-9b79-de56d2825380",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "31bfa58d-ebb4-4f8e-ad44-e9c12e61531a",
      "documentation": "NOTE: This feature is currently in preview and still being tested for stability. Gets the relative latency score for internet service providers from a specified location to Azure regions.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/azureReachabilityReport",
      "responses": [
        {
          "uuid": "27ea62f2-c1f9-4864-9fab-cf94815f7045",
          "body": "{\n  \"aggregationLevel\": \"\",\n  \"providerLocation\": {\n    \"city\": \"\",\n    \"country\": \"\",\n    \"state\": \"\"\n  },\n  \"reachabilityReport\": [\n    {\n      \"azureLocation\": \"\",\n      \"latencies\": [\n        {\n          \"score\": {{faker 'random.number'}},\n          \"timeStamp\": \"{{faker 'date.recent' 365}}\"\n        }\n      ],\n      \"provider\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful request for Azure reachability report.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e3efb3e1-3979-464a-a913-55cb15b83016",
          "body": "{\n  \"aggregationLevel\": \"\",\n  \"providerLocation\": {\n    \"city\": \"\",\n    \"country\": \"\",\n    \"state\": \"\"\n  },\n  \"reachabilityReport\": [\n    {\n      \"azureLocation\": \"\",\n      \"latencies\": [\n        {\n          \"score\": {{faker 'random.number'}},\n          \"timeStamp\": \"{{faker 'date.recent' 365}}\"\n        }\n      ],\n      \"provider\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted and the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ab3b21fb-7109-48f9-9c3c-dfaf0167d30c",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6d054203-a350-46f9-8485-c535616eabba",
      "documentation": "Configures flow log and traffic analytics (optional) on a specified resource.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/configureFlowLog",
      "responses": [
        {
          "uuid": "51c0f589-91a0-455b-92f9-d680299a73c7",
          "body": "{\n  \"flowAnalyticsConfiguration\": {\n    \"networkWatcherFlowAnalyticsConfiguration\": {\n      \"enabled\": {{faker 'random.boolean'}},\n      \"trafficAnalyticsInterval\": {{faker 'random.number'}},\n      \"workspaceId\": \"\",\n      \"workspaceRegion\": \"\",\n      \"workspaceResourceId\": \"\"\n    }\n  },\n  \"properties\": {\n    \"enabled\": {{faker 'random.boolean'}},\n    \"format\": {\n      \"type\": \"{{oneOf (array 'JSON')}}\",\n      \"version\": {{faker 'random.number'}}\n    },\n    \"retentionPolicy\": {\n      \"days\": {{faker 'random.number'}},\n      \"enabled\": {{faker 'random.boolean'}}\n    },\n    \"storageId\": \"\"\n  },\n  \"targetResourceId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful request for setting flow log and traffic analytics (optional) configuration.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ec60b964-3522-484c-8962-2324e2a3e353",
          "body": "{\n  \"flowAnalyticsConfiguration\": {\n    \"networkWatcherFlowAnalyticsConfiguration\": {\n      \"enabled\": {{faker 'random.boolean'}},\n      \"trafficAnalyticsInterval\": {{faker 'random.number'}},\n      \"workspaceId\": \"\",\n      \"workspaceRegion\": \"\",\n      \"workspaceResourceId\": \"\"\n    }\n  },\n  \"properties\": {\n    \"enabled\": {{faker 'random.boolean'}},\n    \"format\": {\n      \"type\": \"{{oneOf (array 'JSON')}}\",\n      \"version\": {{faker 'random.number'}}\n    },\n    \"retentionPolicy\": {\n      \"days\": {{faker 'random.number'}},\n      \"enabled\": {{faker 'random.boolean'}}\n    },\n    \"storageId\": \"\"\n  },\n  \"targetResourceId\": \"\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted and the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3494df02-9bee-4345-85af-df1852f41cfd",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "55cebb5d-51cf-4623-9453-a5e40f071014",
      "documentation": "Lists all connection monitors for the specified Network Watcher.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/connectionMonitors",
      "responses": [
        {
          "uuid": "5b65d086-1300-45d7-8e49-87b12c154ef2",
          "body": "{\n  \"value\": [\n    {\n      \"etag\": \"\",\n      \"id\": \"\",\n      \"location\": \"\",\n      \"name\": \"\",\n      \"properties\": {\n        \"autoStart\": true,\n        \"destination\": {\n          \"address\": \"\",\n          \"port\": {{faker 'random.number'}},\n          \"resourceId\": \"\"\n        },\n        \"endpoints\": [\n          {\n            \"address\": \"\",\n            \"filter\": {\n              \"items\": [\n                {\n                  \"address\": \"\",\n                  \"type\": \"{{oneOf (array 'AgentAddress')}}\"\n                }\n              ],\n              \"type\": \"{{oneOf (array 'Include')}}\"\n            },\n            \"name\": \"\",\n            \"resourceId\": \"\"\n          }\n        ],\n        \"monitoringIntervalInSeconds\": 60,\n        \"notes\": \"\",\n        \"outputs\": [\n          {\n            \"type\": \"{{oneOf (array 'Workspace')}}\",\n            \"workspaceSettings\": {\n              \"workspaceResourceId\": \"\"\n            }\n          }\n        ],\n        \"source\": {\n          \"port\": {{faker 'random.number'}},\n          \"resourceId\": \"\"\n        },\n        \"testConfigurations\": [\n          {\n            \"httpConfiguration\": {\n              \"method\": \"{{oneOf (array 'Get' 'Post')}}\",\n              \"path\": \"\",\n              \"port\": {{faker 'random.number'}},\n              \"preferHTTPS\": {{faker 'random.boolean'}},\n              \"requestHeaders\": [\n                {\n                  \"name\": \"\",\n                  \"value\": \"\"\n                }\n              ],\n              \"validStatusCodeRanges\": [\n                \"\"\n              ]\n            },\n            \"icmpConfiguration\": {\n              \"disableTraceRoute\": {{faker 'random.boolean'}}\n            },\n            \"name\": \"\",\n            \"preferredIPVersion\": \"{{oneOf (array 'IPv4' 'IPv6')}}\",\n            \"protocol\": \"{{oneOf (array 'Tcp' 'Http' 'Icmp')}}\",\n            \"successThreshold\": {\n              \"checksFailedPercent\": {{faker 'random.number'}},\n              \"roundTripTimeMs\": {{faker 'random.number'}}\n            },\n            \"tcpConfiguration\": {\n              \"disableTraceRoute\": {{faker 'random.boolean'}},\n              \"port\": {{faker 'random.number'}}\n            },\n            \"testFrequencySec\": {{faker 'random.number'}}\n          }\n        ],\n        \"testGroups\": [\n          {\n            \"destinations\": [\n              \"\"\n            ],\n            \"disable\": {{faker 'random.boolean'}},\n            \"name\": \"\",\n            \"sources\": [\n              \"\"\n            ],\n            \"testConfigurations\": [\n              \"\"\n            ]\n          }\n        ]\n      },\n      \"tags\": {},\n      \"type\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful connection monitor enumeration request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e3024a31-4f1d-43d0-8b36-8c248feea667",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ce0b4d27-471e-45e2-b594-60d5ba9b3569",
      "documentation": "Deletes the specified connection monitor.",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/connectionMonitors/:connectionMonitorName",
      "responses": [
        {
          "uuid": "a20c474a-998f-4577-bc3f-891b8ab36ce4",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted. The operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c525cbb5-5586-46d0-9dab-06fe0e812e56",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Delete successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4ea5c9b2-786c-4447-8020-373954cee3ba",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "683cd7cd-ac25-4740-b5b3-8913051f5e70",
      "documentation": "Gets a connection monitor by name.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/connectionMonitors/:connectionMonitorName",
      "responses": [
        {
          "uuid": "c3180ab2-dbc3-4c71-a396-65375a15e096",
          "body": "{\n  \"etag\": \"\",\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"properties\": {\n    \"autoStart\": true,\n    \"destination\": {\n      \"address\": \"\",\n      \"port\": {{faker 'random.number'}},\n      \"resourceId\": \"\"\n    },\n    \"endpoints\": [\n      {\n        \"address\": \"\",\n        \"filter\": {\n          \"items\": [\n            {\n              \"address\": \"\",\n              \"type\": \"{{oneOf (array 'AgentAddress')}}\"\n            }\n          ],\n          \"type\": \"{{oneOf (array 'Include')}}\"\n        },\n        \"name\": \"\",\n        \"resourceId\": \"\"\n      }\n    ],\n    \"monitoringIntervalInSeconds\": 60,\n    \"notes\": \"\",\n    \"outputs\": [\n      {\n        \"type\": \"{{oneOf (array 'Workspace')}}\",\n        \"workspaceSettings\": {\n          \"workspaceResourceId\": \"\"\n        }\n      }\n    ],\n    \"source\": {\n      \"port\": {{faker 'random.number'}},\n      \"resourceId\": \"\"\n    },\n    \"testConfigurations\": [\n      {\n        \"httpConfiguration\": {\n          \"method\": \"{{oneOf (array 'Get' 'Post')}}\",\n          \"path\": \"\",\n          \"port\": {{faker 'random.number'}},\n          \"preferHTTPS\": {{faker 'random.boolean'}},\n          \"requestHeaders\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"validStatusCodeRanges\": [\n            \"\"\n          ]\n        },\n        \"icmpConfiguration\": {\n          \"disableTraceRoute\": {{faker 'random.boolean'}}\n        },\n        \"name\": \"\",\n        \"preferredIPVersion\": \"{{oneOf (array 'IPv4' 'IPv6')}}\",\n        \"protocol\": \"{{oneOf (array 'Tcp' 'Http' 'Icmp')}}\",\n        \"successThreshold\": {\n          \"checksFailedPercent\": {{faker 'random.number'}},\n          \"roundTripTimeMs\": {{faker 'random.number'}}\n        },\n        \"tcpConfiguration\": {\n          \"disableTraceRoute\": {{faker 'random.boolean'}},\n          \"port\": {{faker 'random.number'}}\n        },\n        \"testFrequencySec\": {{faker 'random.number'}}\n      }\n    ],\n    \"testGroups\": [\n      {\n        \"destinations\": [\n          \"\"\n        ],\n        \"disable\": {{faker 'random.boolean'}},\n        \"name\": \"\",\n        \"sources\": [\n          \"\"\n        ],\n        \"testConfigurations\": [\n          \"\"\n        ]\n      }\n    ]\n  },\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful. The operation returns a connection monitor.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "12cd2964-b7fe-4011-8041-c44cc5a785ae",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cee20667-d046-4376-8456-fcf0b0b95710",
      "documentation": "Update tags of the specified connection monitor.",
      "method": "patch",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/connectionMonitors/:connectionMonitorName",
      "responses": [
        {
          "uuid": "1a3f88d3-d219-47c1-a851-d90f94c1eebd",
          "body": "{\n  \"etag\": \"\",\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"properties\": {\n    \"autoStart\": true,\n    \"destination\": {\n      \"address\": \"\",\n      \"port\": {{faker 'random.number'}},\n      \"resourceId\": \"\"\n    },\n    \"endpoints\": [\n      {\n        \"address\": \"\",\n        \"filter\": {\n          \"items\": [\n            {\n              \"address\": \"\",\n              \"type\": \"{{oneOf (array 'AgentAddress')}}\"\n            }\n          ],\n          \"type\": \"{{oneOf (array 'Include')}}\"\n        },\n        \"name\": \"\",\n        \"resourceId\": \"\"\n      }\n    ],\n    \"monitoringIntervalInSeconds\": 60,\n    \"notes\": \"\",\n    \"outputs\": [\n      {\n        \"type\": \"{{oneOf (array 'Workspace')}}\",\n        \"workspaceSettings\": {\n          \"workspaceResourceId\": \"\"\n        }\n      }\n    ],\n    \"source\": {\n      \"port\": {{faker 'random.number'}},\n      \"resourceId\": \"\"\n    },\n    \"testConfigurations\": [\n      {\n        \"httpConfiguration\": {\n          \"method\": \"{{oneOf (array 'Get' 'Post')}}\",\n          \"path\": \"\",\n          \"port\": {{faker 'random.number'}},\n          \"preferHTTPS\": {{faker 'random.boolean'}},\n          \"requestHeaders\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"validStatusCodeRanges\": [\n            \"\"\n          ]\n        },\n        \"icmpConfiguration\": {\n          \"disableTraceRoute\": {{faker 'random.boolean'}}\n        },\n        \"name\": \"\",\n        \"preferredIPVersion\": \"{{oneOf (array 'IPv4' 'IPv6')}}\",\n        \"protocol\": \"{{oneOf (array 'Tcp' 'Http' 'Icmp')}}\",\n        \"successThreshold\": {\n          \"checksFailedPercent\": {{faker 'random.number'}},\n          \"roundTripTimeMs\": {{faker 'random.number'}}\n        },\n        \"tcpConfiguration\": {\n          \"disableTraceRoute\": {{faker 'random.boolean'}},\n          \"port\": {{faker 'random.number'}}\n        },\n        \"testFrequencySec\": {{faker 'random.number'}}\n      }\n    ],\n    \"testGroups\": [\n      {\n        \"destinations\": [\n          \"\"\n        ],\n        \"disable\": {{faker 'random.boolean'}},\n        \"name\": \"\",\n        \"sources\": [\n          \"\"\n        ],\n        \"testConfigurations\": [\n          \"\"\n        ]\n      }\n    ]\n  },\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful. The operation returns updated connection monitor.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "19c7ed57-b89d-42fb-982d-f138b40aebc2",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d4265840-4e58-4f39-9cdd-95cd1a81b891",
      "documentation": "Create or update a connection monitor.",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/connectionMonitors/:connectionMonitorName",
      "responses": [
        {
          "uuid": "27bc0bcd-e470-4154-b9de-eb85b2ffeb57",
          "body": "{\n  \"etag\": \"\",\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"properties\": {\n    \"autoStart\": true,\n    \"destination\": {\n      \"address\": \"\",\n      \"port\": {{faker 'random.number'}},\n      \"resourceId\": \"\"\n    },\n    \"endpoints\": [\n      {\n        \"address\": \"\",\n        \"filter\": {\n          \"items\": [\n            {\n              \"address\": \"\",\n              \"type\": \"{{oneOf (array 'AgentAddress')}}\"\n            }\n          ],\n          \"type\": \"{{oneOf (array 'Include')}}\"\n        },\n        \"name\": \"\",\n        \"resourceId\": \"\"\n      }\n    ],\n    \"monitoringIntervalInSeconds\": 60,\n    \"notes\": \"\",\n    \"outputs\": [\n      {\n        \"type\": \"{{oneOf (array 'Workspace')}}\",\n        \"workspaceSettings\": {\n          \"workspaceResourceId\": \"\"\n        }\n      }\n    ],\n    \"source\": {\n      \"port\": {{faker 'random.number'}},\n      \"resourceId\": \"\"\n    },\n    \"testConfigurations\": [\n      {\n        \"httpConfiguration\": {\n          \"method\": \"{{oneOf (array 'Get' 'Post')}}\",\n          \"path\": \"\",\n          \"port\": {{faker 'random.number'}},\n          \"preferHTTPS\": {{faker 'random.boolean'}},\n          \"requestHeaders\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"validStatusCodeRanges\": [\n            \"\"\n          ]\n        },\n        \"icmpConfiguration\": {\n          \"disableTraceRoute\": {{faker 'random.boolean'}}\n        },\n        \"name\": \"\",\n        \"preferredIPVersion\": \"{{oneOf (array 'IPv4' 'IPv6')}}\",\n        \"protocol\": \"{{oneOf (array 'Tcp' 'Http' 'Icmp')}}\",\n        \"successThreshold\": {\n          \"checksFailedPercent\": {{faker 'random.number'}},\n          \"roundTripTimeMs\": {{faker 'random.number'}}\n        },\n        \"tcpConfiguration\": {\n          \"disableTraceRoute\": {{faker 'random.boolean'}},\n          \"port\": {{faker 'random.number'}}\n        },\n        \"testFrequencySec\": {{faker 'random.number'}}\n      }\n    ],\n    \"testGroups\": [\n      {\n        \"destinations\": [\n          \"\"\n        ],\n        \"disable\": {{faker 'random.boolean'}},\n        \"name\": \"\",\n        \"sources\": [\n          \"\"\n        ],\n        \"testConfigurations\": [\n          \"\"\n        ]\n      }\n    ]\n  },\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Update successful. The operation returns the resulting network watcher resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e0890539-9eb8-49fb-b59f-8f35e49600f1",
          "body": "{\n  \"etag\": \"\",\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"properties\": {\n    \"autoStart\": true,\n    \"destination\": {\n      \"address\": \"\",\n      \"port\": {{faker 'random.number'}},\n      \"resourceId\": \"\"\n    },\n    \"endpoints\": [\n      {\n        \"address\": \"\",\n        \"filter\": {\n          \"items\": [\n            {\n              \"address\": \"\",\n              \"type\": \"{{oneOf (array 'AgentAddress')}}\"\n            }\n          ],\n          \"type\": \"{{oneOf (array 'Include')}}\"\n        },\n        \"name\": \"\",\n        \"resourceId\": \"\"\n      }\n    ],\n    \"monitoringIntervalInSeconds\": 60,\n    \"notes\": \"\",\n    \"outputs\": [\n      {\n        \"type\": \"{{oneOf (array 'Workspace')}}\",\n        \"workspaceSettings\": {\n          \"workspaceResourceId\": \"\"\n        }\n      }\n    ],\n    \"source\": {\n      \"port\": {{faker 'random.number'}},\n      \"resourceId\": \"\"\n    },\n    \"testConfigurations\": [\n      {\n        \"httpConfiguration\": {\n          \"method\": \"{{oneOf (array 'Get' 'Post')}}\",\n          \"path\": \"\",\n          \"port\": {{faker 'random.number'}},\n          \"preferHTTPS\": {{faker 'random.boolean'}},\n          \"requestHeaders\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"validStatusCodeRanges\": [\n            \"\"\n          ]\n        },\n        \"icmpConfiguration\": {\n          \"disableTraceRoute\": {{faker 'random.boolean'}}\n        },\n        \"name\": \"\",\n        \"preferredIPVersion\": \"{{oneOf (array 'IPv4' 'IPv6')}}\",\n        \"protocol\": \"{{oneOf (array 'Tcp' 'Http' 'Icmp')}}\",\n        \"successThreshold\": {\n          \"checksFailedPercent\": {{faker 'random.number'}},\n          \"roundTripTimeMs\": {{faker 'random.number'}}\n        },\n        \"tcpConfiguration\": {\n          \"disableTraceRoute\": {{faker 'random.boolean'}},\n          \"port\": {{faker 'random.number'}}\n        },\n        \"testFrequencySec\": {{faker 'random.number'}}\n      }\n    ],\n    \"testGroups\": [\n      {\n        \"destinations\": [\n          \"\"\n        ],\n        \"disable\": {{faker 'random.boolean'}},\n        \"name\": \"\",\n        \"sources\": [\n          \"\"\n        ],\n        \"testConfigurations\": [\n          \"\"\n        ]\n      }\n    ]\n  },\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Create successful. The operation returns the resulting network watcher resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ac42d46e-3d7d-4b42-a014-549b0b1601b3",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "74f5c131-2e74-4bda-bf4d-afb4a1ee790c",
      "documentation": "Query a snapshot of the most recent connection states.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/connectionMonitors/:connectionMonitorName/query",
      "responses": [
        {
          "uuid": "56782772-c1e5-49be-9a4f-1979b41bf33b",
          "body": "{\n  \"sourceStatus\": \"{{oneOf (array 'Unknown' 'Active' 'Inactive')}}\",\n  \"states\": [\n    {\n      \"avgLatencyInMs\": {{faker 'random.number'}},\n      \"connectionState\": \"{{oneOf (array 'Reachable' 'Unreachable' 'Unknown')}}\",\n      \"endTime\": \"{{faker 'date.recent' 365}}\",\n      \"evaluationState\": \"{{oneOf (array 'NotStarted' 'InProgress' 'Completed')}}\",\n      \"hops\": [\n        {\n          \"address\": \"\",\n          \"id\": \"\",\n          \"issues\": [\n            {\n              \"context\": [\n                {}\n              ],\n              \"origin\": \"{{oneOf (array 'Local' 'Inbound' 'Outbound')}}\",\n              \"severity\": \"{{oneOf (array 'Error' 'Warning')}}\",\n              \"type\": \"{{oneOf (array 'Unknown' 'AgentStopped' 'GuestFirewall' 'DnsResolution' 'SocketBind' 'NetworkSecurityRule' 'UserDefinedRoute' 'PortThrottled' 'Platform')}}\"\n            }\n          ],\n          \"nextHopIds\": [\n            \"\"\n          ],\n          \"resourceId\": \"\",\n          \"type\": \"\"\n        }\n      ],\n      \"maxLatencyInMs\": {{faker 'random.number'}},\n      \"minLatencyInMs\": {{faker 'random.number'}},\n      \"probesFailed\": {{faker 'random.number'}},\n      \"probesSent\": {{faker 'random.number'}},\n      \"startTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful query of connection states.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "37fb5c60-ec8f-4a52-8655-3b7acfb571b1",
          "body": "{\n  \"sourceStatus\": \"{{oneOf (array 'Unknown' 'Active' 'Inactive')}}\",\n  \"states\": [\n    {\n      \"avgLatencyInMs\": {{faker 'random.number'}},\n      \"connectionState\": \"{{oneOf (array 'Reachable' 'Unreachable' 'Unknown')}}\",\n      \"endTime\": \"{{faker 'date.recent' 365}}\",\n      \"evaluationState\": \"{{oneOf (array 'NotStarted' 'InProgress' 'Completed')}}\",\n      \"hops\": [\n        {\n          \"address\": \"\",\n          \"id\": \"\",\n          \"issues\": [\n            {\n              \"context\": [\n                {}\n              ],\n              \"origin\": \"{{oneOf (array 'Local' 'Inbound' 'Outbound')}}\",\n              \"severity\": \"{{oneOf (array 'Error' 'Warning')}}\",\n              \"type\": \"{{oneOf (array 'Unknown' 'AgentStopped' 'GuestFirewall' 'DnsResolution' 'SocketBind' 'NetworkSecurityRule' 'UserDefinedRoute' 'PortThrottled' 'Platform')}}\"\n            }\n          ],\n          \"nextHopIds\": [\n            \"\"\n          ],\n          \"resourceId\": \"\",\n          \"type\": \"\"\n        }\n      ],\n      \"maxLatencyInMs\": {{faker 'random.number'}},\n      \"minLatencyInMs\": {{faker 'random.number'}},\n      \"probesFailed\": {{faker 'random.number'}},\n      \"probesSent\": {{faker 'random.number'}},\n      \"startTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted query of connection states.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1f54ab36-2e64-42fa-9bbc-cfd2db3af0de",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2c09fdca-a1fc-46a5-927b-0a7da1a84253",
      "documentation": "Starts the specified connection monitor.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/connectionMonitors/:connectionMonitorName/start",
      "responses": [
        {
          "uuid": "2c775ac2-f16e-41e1-959e-3d2728bd66e5",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful. The operation starts the connection monitor.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "db1c8b7b-f07d-4427-98ef-ec998d1e19e0",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted. The operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d04fad04-d80b-447e-a1f0-8e8ea69a55ad",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b1d53d95-f8ca-4fb3-afc3-02d314826451",
      "documentation": "Stops the specified connection monitor.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/connectionMonitors/:connectionMonitorName/stop",
      "responses": [
        {
          "uuid": "4c6f32a8-4095-4bda-a124-367d7c562663",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful. The operation stops the connection monitor.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8410aff5-6556-4860-b361-b86c97258e62",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted. The operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "96014254-c89a-437f-a741-67ac9edcbb08",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "724146a5-020b-4d6b-8c10-78acc1dd1dd2",
      "documentation": "Verifies the possibility of establishing a direct TCP connection from a virtual machine to a given endpoint including another VM or an arbitrary remote server.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/connectivityCheck",
      "responses": [
        {
          "uuid": "314739af-3092-49b9-a71e-70c1f2216233",
          "body": "{\n  \"avgLatencyInMs\": {{faker 'random.number'}},\n  \"connectionStatus\": \"{{oneOf (array 'Unknown' 'Connected' 'Disconnected' 'Degraded')}}\",\n  \"hops\": [\n    {\n      \"address\": \"\",\n      \"id\": \"\",\n      \"issues\": [\n        {\n          \"context\": [\n            {}\n          ],\n          \"origin\": \"{{oneOf (array 'Local' 'Inbound' 'Outbound')}}\",\n          \"severity\": \"{{oneOf (array 'Error' 'Warning')}}\",\n          \"type\": \"{{oneOf (array 'Unknown' 'AgentStopped' 'GuestFirewall' 'DnsResolution' 'SocketBind' 'NetworkSecurityRule' 'UserDefinedRoute' 'PortThrottled' 'Platform')}}\"\n        }\n      ],\n      \"nextHopIds\": [\n        \"\"\n      ],\n      \"resourceId\": \"\",\n      \"type\": \"\"\n    }\n  ],\n  \"maxLatencyInMs\": {{faker 'random.number'}},\n  \"minLatencyInMs\": {{faker 'random.number'}},\n  \"probesFailed\": {{faker 'random.number'}},\n  \"probesSent\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful request for checking connectivity.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cc035241-e3d7-4aa3-a0f6-8ead08dc511b",
          "body": "{\n  \"avgLatencyInMs\": {{faker 'random.number'}},\n  \"connectionStatus\": \"{{oneOf (array 'Unknown' 'Connected' 'Disconnected' 'Degraded')}}\",\n  \"hops\": [\n    {\n      \"address\": \"\",\n      \"id\": \"\",\n      \"issues\": [\n        {\n          \"context\": [\n            {}\n          ],\n          \"origin\": \"{{oneOf (array 'Local' 'Inbound' 'Outbound')}}\",\n          \"severity\": \"{{oneOf (array 'Error' 'Warning')}}\",\n          \"type\": \"{{oneOf (array 'Unknown' 'AgentStopped' 'GuestFirewall' 'DnsResolution' 'SocketBind' 'NetworkSecurityRule' 'UserDefinedRoute' 'PortThrottled' 'Platform')}}\"\n        }\n      ],\n      \"nextHopIds\": [\n        \"\"\n      ],\n      \"resourceId\": \"\",\n      \"type\": \"\"\n    }\n  ],\n  \"maxLatencyInMs\": {{faker 'random.number'}},\n  \"minLatencyInMs\": {{faker 'random.number'}},\n  \"probesFailed\": {{faker 'random.number'}},\n  \"probesSent\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted and the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7ffd08a4-cd43-43f6-bb07-1cded960dcba",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a3b0e61f-9e52-462a-b69e-4f410688d620",
      "documentation": "Lists all flow log resources for the specified Network Watcher.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/flowLogs",
      "responses": [
        {
          "uuid": "deb66871-9f18-4f8a-8527-1cabbd826016",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"id\": \"\",\n      \"location\": \"\",\n      \"name\": \"\",\n      \"tags\": {},\n      \"type\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful flow log enumeration request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d2a6e8f9-977b-4280-8eb8-e72f638e4bde",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e9f45261-0671-4438-b2a0-1799b939a422",
      "documentation": "Deletes the specified flow log resource.",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/flowLogs/:flowLogName",
      "responses": [
        {
          "uuid": "2d5f7f94-05e0-4447-b241-b370ab615648",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted and the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "466027a2-1f39-458a-9167-5153bc36e4a3",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Delete successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b5944167-5c0d-4654-b33b-6a1c4353c907",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "504aea6d-45ca-433a-a096-0333f7599cc9",
      "documentation": "Gets a flow log resource by name.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/flowLogs/:flowLogName",
      "responses": [
        {
          "uuid": "ee6e23ac-386e-46a1-9e68-0266ce0fe804",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful. The operation returns a flow log resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ff5d9a8c-a50d-4bf0-8dbf-5ac26d5cf70a",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3256c5b7-51e3-418e-8882-bd7213d10102",
      "documentation": "Create or update a flow log for the specified network security group.",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/flowLogs/:flowLogName",
      "responses": [
        {
          "uuid": "cc9b633d-45ba-4968-a2ae-0836f6e665ba",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Update successful. The operation returns the resulting flow log resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cd93ade2-0433-4a80-87c1-a02a104755ed",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Request successful. The operation returns the resulting flow log resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5fa425c4-8945-4bdf-9637-d6c388b586ab",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9759db61-19fa-4763-ac87-bfcbb69d0433",
      "documentation": "Verify IP flow from the specified VM to a location given the currently configured NSG rules.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/ipFlowVerify",
      "responses": [
        {
          "uuid": "0929c345-bcf5-4110-86d3-f12a22249c54",
          "body": "{\n  \"access\": \"{{oneOf (array 'Allow' 'Deny')}}\",\n  \"ruleName\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful. The operation returns the result of IP flow verification.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5c6d73c1-f604-4aef-bb23-cbace2c9b697",
          "body": "{\n  \"access\": \"{{oneOf (array 'Allow' 'Deny')}}\",\n  \"ruleName\": \"\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted and the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8954a6f9-4cc0-4c45-ac72-b09e7eee417d",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c7ebef92-1fc0-4647-af9a-5975276a96a1",
      "documentation": "Gets Network Configuration Diagnostic data to help customers understand and debug network behavior. It provides detailed information on what security rules were applied to a specified traffic flow and the result of evaluating these rules. Customers must provide details of a flow like source, destination, protocol, etc. The API returns whether traffic was allowed or denied, the rules evaluated for the specified flow and the evaluation results.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/networkConfigurationDiagnostic",
      "responses": [
        {
          "uuid": "3f539535-d4f5-496c-bae3-04d14fccfad1",
          "body": "{\n  \"results\": [\n    {\n      \"networkSecurityGroupResult\": {\n        \"evaluatedNetworkSecurityGroups\": [\n          {\n            \"appliedTo\": \"\",\n            \"matchedRule\": {\n              \"action\": \"\",\n              \"ruleName\": \"\"\n            },\n            \"networkSecurityGroupId\": \"\",\n            \"rulesEvaluationResult\": [\n              {\n                \"destinationMatched\": {{faker 'random.boolean'}},\n                \"destinationPortMatched\": {{faker 'random.boolean'}},\n                \"name\": \"\",\n                \"protocolMatched\": {{faker 'random.boolean'}},\n                \"sourceMatched\": {{faker 'random.boolean'}},\n                \"sourcePortMatched\": {{faker 'random.boolean'}}\n              }\n            ]\n          }\n        ],\n        \"securityRuleAccessResult\": \"{{oneOf (array 'Allow' 'Deny')}}\"\n      },\n      \"profile\": {\n        \"destination\": \"\",\n        \"destinationPort\": \"\",\n        \"direction\": \"{{oneOf (array 'Inbound' 'Outbound')}}\",\n        \"protocol\": \"\",\n        \"source\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful. The operation returns the result of network configuration diagnostic.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a5a0294a-fa47-4fe4-b05b-eacb5247c19c",
          "body": "{\n  \"results\": [\n    {\n      \"networkSecurityGroupResult\": {\n        \"evaluatedNetworkSecurityGroups\": [\n          {\n            \"appliedTo\": \"\",\n            \"matchedRule\": {\n              \"action\": \"\",\n              \"ruleName\": \"\"\n            },\n            \"networkSecurityGroupId\": \"\",\n            \"rulesEvaluationResult\": [\n              {\n                \"destinationMatched\": {{faker 'random.boolean'}},\n                \"destinationPortMatched\": {{faker 'random.boolean'}},\n                \"name\": \"\",\n                \"protocolMatched\": {{faker 'random.boolean'}},\n                \"sourceMatched\": {{faker 'random.boolean'}},\n                \"sourcePortMatched\": {{faker 'random.boolean'}}\n              }\n            ]\n          }\n        ],\n        \"securityRuleAccessResult\": \"{{oneOf (array 'Allow' 'Deny')}}\"\n      },\n      \"profile\": {\n        \"destination\": \"\",\n        \"destinationPort\": \"\",\n        \"direction\": \"{{oneOf (array 'Inbound' 'Outbound')}}\",\n        \"protocol\": \"\",\n        \"source\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted and the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c26d9be9-af7d-4465-a12e-aa01c3872e7c",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f96d0b7b-fbab-452e-a2af-cc3a6e3f356c",
      "documentation": "Gets the next hop from the specified VM.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/nextHop",
      "responses": [
        {
          "uuid": "50780063-c692-4c14-983e-092d4b80cb76",
          "body": "{\n  \"nextHopIpAddress\": \"\",\n  \"nextHopType\": \"{{oneOf (array 'Internet' 'VirtualAppliance' 'VirtualNetworkGateway' 'VnetLocal' 'HyperNetGateway' 'None')}}\",\n  \"routeTableId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful. The operation returns the next hop from the VM.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b6b862f1-d49a-4439-a7b3-51295b3a655f",
          "body": "{\n  \"nextHopIpAddress\": \"\",\n  \"nextHopType\": \"{{oneOf (array 'Internet' 'VirtualAppliance' 'VirtualNetworkGateway' 'VnetLocal' 'HyperNetGateway' 'None')}}\",\n  \"routeTableId\": \"\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted and the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c03a6fe6-1170-4286-b28c-0264d597495b",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "08f7b488-cbcb-4b15-82f3-cbbad7e50cbf",
      "documentation": "Lists all packet capture sessions within the specified resource group.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/packetCaptures",
      "responses": [
        {
          "uuid": "a1650930-66ee-4760-8399-caafd564a796",
          "body": "{\n  \"value\": [\n    {\n      \"etag\": \"\",\n      \"id\": \"\",\n      \"name\": \"\",\n      \"properties\": {\n        \"bytesToCapturePerPacket\": {{faker 'random.number'}},\n        \"filters\": [\n          {\n            \"localIPAddress\": \"\",\n            \"localPort\": \"\",\n            \"protocol\": \"{{oneOf (array 'TCP' 'UDP' 'Any')}}\",\n            \"remoteIPAddress\": \"\",\n            \"remotePort\": \"\"\n          }\n        ],\n        \"storageLocation\": {\n          \"filePath\": \"\",\n          \"storageId\": \"\",\n          \"storagePath\": \"\"\n        },\n        \"target\": \"\",\n        \"timeLimitInSeconds\": 18000,\n        \"totalBytesPerSession\": 1073741824\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful packet capture enumeration request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "40d75063-bf03-4b92-8685-4850ce424f12",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "83753039-6f3f-40d4-bcd6-d93a764ae683",
      "documentation": "Deletes the specified packet capture session.",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/packetCaptures/:packetCaptureName",
      "responses": [
        {
          "uuid": "6a33b1a9-e6d1-4317-8274-7daebeb9d089",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted and the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "68fffddd-9175-4ba2-b504-e27c9634082d",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Delete successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "40f79647-6593-47d0-915c-00e3193388a8",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dec8326a-c500-4777-a5a1-9690dad8ddb8",
      "documentation": "Gets a packet capture session by name.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/packetCaptures/:packetCaptureName",
      "responses": [
        {
          "uuid": "a8b6a0c0-8999-4edf-a3bf-a986e613b668",
          "body": "{\n  \"etag\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"properties\": {\n    \"bytesToCapturePerPacket\": {{faker 'random.number'}},\n    \"filters\": [\n      {\n        \"localIPAddress\": \"\",\n        \"localPort\": \"\",\n        \"protocol\": \"{{oneOf (array 'TCP' 'UDP' 'Any')}}\",\n        \"remoteIPAddress\": \"\",\n        \"remotePort\": \"\"\n      }\n    ],\n    \"storageLocation\": {\n      \"filePath\": \"\",\n      \"storageId\": \"\",\n      \"storagePath\": \"\"\n    },\n    \"target\": \"\",\n    \"timeLimitInSeconds\": 18000,\n    \"totalBytesPerSession\": 1073741824\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful. The operation returns a packet capture session.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cb431c16-4722-4f19-9338-6d1bd50f77b2",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d9aad610-174a-4278-a5c4-76eaf98cf591",
      "documentation": "Create and start a packet capture on the specified VM.",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/packetCaptures/:packetCaptureName",
      "responses": [
        {
          "uuid": "89f55ae9-1212-4f09-afad-143cddbc2d93",
          "body": "{\n  \"etag\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"properties\": {\n    \"bytesToCapturePerPacket\": {{faker 'random.number'}},\n    \"filters\": [\n      {\n        \"localIPAddress\": \"\",\n        \"localPort\": \"\",\n        \"protocol\": \"{{oneOf (array 'TCP' 'UDP' 'Any')}}\",\n        \"remoteIPAddress\": \"\",\n        \"remotePort\": \"\"\n      }\n    ],\n    \"storageLocation\": {\n      \"filePath\": \"\",\n      \"storageId\": \"\",\n      \"storagePath\": \"\"\n    },\n    \"target\": \"\",\n    \"timeLimitInSeconds\": 18000,\n    \"totalBytesPerSession\": 1073741824\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Request successful. The operation returns the resulting packet capture session.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3beca853-9f32-4f81-bb79-b137afe97872",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "66bbcbb4-4aa7-4a42-a21a-dff0f5c09993",
      "documentation": "Query the status of a running packet capture session.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/packetCaptures/:packetCaptureName/queryStatus",
      "responses": [
        {
          "uuid": "bb72afbd-767b-4bc2-bfa2-5e3380a7fa00",
          "body": "{\n  \"captureStartTime\": \"{{faker 'date.recent' 365}}\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"packetCaptureError\": [\n    \"{{oneOf (array 'InternalError' 'AgentStopped' 'CaptureFailed' 'LocalFileFailed' 'StorageFailed')}}\"\n  ],\n  \"packetCaptureStatus\": \"{{oneOf (array 'NotStarted' 'Running' 'Stopped' 'Error' 'Unknown')}}\",\n  \"stopReason\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful query of packet capture status.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5b574448-e883-4c03-aecf-bebfeadfa984",
          "body": "{\n  \"captureStartTime\": \"{{faker 'date.recent' 365}}\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"packetCaptureError\": [\n    \"{{oneOf (array 'InternalError' 'AgentStopped' 'CaptureFailed' 'LocalFileFailed' 'StorageFailed')}}\"\n  ],\n  \"packetCaptureStatus\": \"{{oneOf (array 'NotStarted' 'Running' 'Stopped' 'Error' 'Unknown')}}\",\n  \"stopReason\": \"\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted query status of packet capture.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d7364bd2-b581-4b71-b5dc-7453da884621",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5abd328f-12e9-41d7-9b44-ff508e52d626",
      "documentation": "Stops a specified packet capture session.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/packetCaptures/:packetCaptureName/stop",
      "responses": [
        {
          "uuid": "21508c84-7270-4e94-bb32-90fe2af02ff0",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful. The operation stops the packet capture session.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9f8d7b1f-db48-4ff5-a8d8-9d55fc7d22d9",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted and the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "abbe79d6-8cbf-4210-959e-460265b1f4ef",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "032e1230-7ea0-40cd-ae53-879a701639cd",
      "documentation": "Queries status of flow log and traffic analytics (optional) on a specified resource.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/queryFlowLogStatus",
      "responses": [
        {
          "uuid": "f97c9dbd-2ea5-4998-8bc7-684515c021fb",
          "body": "{\n  \"flowAnalyticsConfiguration\": {\n    \"networkWatcherFlowAnalyticsConfiguration\": {\n      \"enabled\": {{faker 'random.boolean'}},\n      \"trafficAnalyticsInterval\": {{faker 'random.number'}},\n      \"workspaceId\": \"\",\n      \"workspaceRegion\": \"\",\n      \"workspaceResourceId\": \"\"\n    }\n  },\n  \"properties\": {\n    \"enabled\": {{faker 'random.boolean'}},\n    \"format\": {\n      \"type\": \"{{oneOf (array 'JSON')}}\",\n      \"version\": {{faker 'random.number'}}\n    },\n    \"retentionPolicy\": {\n      \"days\": {{faker 'random.number'}},\n      \"enabled\": {{faker 'random.boolean'}}\n    },\n    \"storageId\": \"\"\n  },\n  \"targetResourceId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful request for query flow log and traffic analytics (optional) status.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f52b0600-4e1a-4c4b-9839-21fe5d82dc77",
          "body": "{\n  \"flowAnalyticsConfiguration\": {\n    \"networkWatcherFlowAnalyticsConfiguration\": {\n      \"enabled\": {{faker 'random.boolean'}},\n      \"trafficAnalyticsInterval\": {{faker 'random.number'}},\n      \"workspaceId\": \"\",\n      \"workspaceRegion\": \"\",\n      \"workspaceResourceId\": \"\"\n    }\n  },\n  \"properties\": {\n    \"enabled\": {{faker 'random.boolean'}},\n    \"format\": {\n      \"type\": \"{{oneOf (array 'JSON')}}\",\n      \"version\": {{faker 'random.number'}}\n    },\n    \"retentionPolicy\": {\n      \"days\": {{faker 'random.number'}},\n      \"enabled\": {{faker 'random.boolean'}}\n    },\n    \"storageId\": \"\"\n  },\n  \"targetResourceId\": \"\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted and the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e5c44fa9-d630-479c-94a1-dda4c21ff479",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7eaa7120-86dd-4b03-9df5-9cd76f0f560e",
      "documentation": "Get the last completed troubleshooting result on a specified resource.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/queryTroubleshootResult",
      "responses": [
        {
          "uuid": "5d01b759-2bd5-4d0a-aabc-07b81927986f",
          "body": "{\n  \"code\": \"\",\n  \"endTime\": \"{{faker 'date.recent' 365}}\",\n  \"results\": [\n    {\n      \"detail\": \"\",\n      \"id\": \"\",\n      \"reasonType\": \"\",\n      \"recommendedActions\": [\n        {\n          \"actionId\": \"\",\n          \"actionText\": \"\",\n          \"actionUri\": \"\",\n          \"actionUriText\": \"\"\n        }\n      ],\n      \"summary\": \"\"\n    }\n  ],\n  \"startTime\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful get troubleshooting result request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f1094c56-8cb0-4844-b763-d50684803f22",
          "body": "{\n  \"code\": \"\",\n  \"endTime\": \"{{faker 'date.recent' 365}}\",\n  \"results\": [\n    {\n      \"detail\": \"\",\n      \"id\": \"\",\n      \"reasonType\": \"\",\n      \"recommendedActions\": [\n        {\n          \"actionId\": \"\",\n          \"actionText\": \"\",\n          \"actionUri\": \"\",\n          \"actionUriText\": \"\"\n        }\n      ],\n      \"summary\": \"\"\n    }\n  ],\n  \"startTime\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted get troubleshooting result request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "58b815e2-f7c1-44df-9956-55640287de5e",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b1b72d7c-aaa7-4590-98ad-ce78c543bb99",
      "documentation": "Gets the configured and effective security group rules on the specified VM.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/securityGroupView",
      "responses": [
        {
          "uuid": "dd65ded5-06e5-4202-832a-aef88f5844dc",
          "body": "{\n  \"networkInterfaces\": [\n    {\n      \"id\": \"\",\n      \"securityRuleAssociations\": {\n        \"defaultSecurityRules\": [\n          {\n            \"id\": \"\"\n          }\n        ],\n        \"effectiveSecurityRules\": [\n          {\n            \"access\": \"{{oneOf (array 'Allow' 'Deny')}}\",\n            \"destinationAddressPrefix\": \"\",\n            \"destinationAddressPrefixes\": [\n              \"\"\n            ],\n            \"destinationPortRange\": \"\",\n            \"destinationPortRanges\": [\n              \"\"\n            ],\n            \"direction\": \"{{oneOf (array 'Inbound' 'Outbound')}}\",\n            \"expandedDestinationAddressPrefix\": [\n              \"\"\n            ],\n            \"expandedSourceAddressPrefix\": [\n              \"\"\n            ],\n            \"name\": \"\",\n            \"priority\": {{faker 'random.number'}},\n            \"protocol\": \"{{oneOf (array 'Tcp' 'Udp' 'All')}}\",\n            \"sourceAddressPrefix\": \"\",\n            \"sourceAddressPrefixes\": [\n              \"\"\n            ],\n            \"sourcePortRange\": \"\",\n            \"sourcePortRanges\": [\n              \"\"\n            ]\n          }\n        ],\n        \"networkInterfaceAssociation\": {\n          \"id\": \"\",\n          \"securityRules\": [\n            {\n              \"id\": \"\"\n            }\n          ]\n        },\n        \"subnetAssociation\": {\n          \"id\": \"\",\n          \"securityRules\": [\n            {\n              \"id\": \"\"\n            }\n          ]\n        }\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful. The operation returns security group rules on the VM.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bcc4ba9f-db05-44a3-b3a7-59a53b09f461",
          "body": "{\n  \"networkInterfaces\": [\n    {\n      \"id\": \"\",\n      \"securityRuleAssociations\": {\n        \"defaultSecurityRules\": [\n          {\n            \"id\": \"\"\n          }\n        ],\n        \"effectiveSecurityRules\": [\n          {\n            \"access\": \"{{oneOf (array 'Allow' 'Deny')}}\",\n            \"destinationAddressPrefix\": \"\",\n            \"destinationAddressPrefixes\": [\n              \"\"\n            ],\n            \"destinationPortRange\": \"\",\n            \"destinationPortRanges\": [\n              \"\"\n            ],\n            \"direction\": \"{{oneOf (array 'Inbound' 'Outbound')}}\",\n            \"expandedDestinationAddressPrefix\": [\n              \"\"\n            ],\n            \"expandedSourceAddressPrefix\": [\n              \"\"\n            ],\n            \"name\": \"\",\n            \"priority\": {{faker 'random.number'}},\n            \"protocol\": \"{{oneOf (array 'Tcp' 'Udp' 'All')}}\",\n            \"sourceAddressPrefix\": \"\",\n            \"sourceAddressPrefixes\": [\n              \"\"\n            ],\n            \"sourcePortRange\": \"\",\n            \"sourcePortRanges\": [\n              \"\"\n            ]\n          }\n        ],\n        \"networkInterfaceAssociation\": {\n          \"id\": \"\",\n          \"securityRules\": [\n            {\n              \"id\": \"\"\n            }\n          ]\n        },\n        \"subnetAssociation\": {\n          \"id\": \"\",\n          \"securityRules\": [\n            {\n              \"id\": \"\"\n            }\n          ]\n        }\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted and the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f59d0777-12f5-412f-bc18-0fdbc2ec4a4e",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b9683f33-b61e-4794-93aa-ff5c6e14910a",
      "documentation": "Gets the current network topology by resource group.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/topology",
      "responses": [
        {
          "uuid": "7d86010b-cc56-405e-bc62-6b9dedc1c0eb",
          "body": "{\n  \"createdDateTime\": \"{{faker 'date.recent' 365}}\",\n  \"id\": \"\",\n  \"lastModified\": \"{{faker 'date.recent' 365}}\",\n  \"resources\": [\n    {\n      \"associations\": [\n        {\n          \"associationType\": \"{{oneOf (array 'Associated' 'Contains')}}\",\n          \"name\": \"\",\n          \"resourceId\": \"\"\n        }\n      ],\n      \"id\": \"\",\n      \"location\": \"\",\n      \"name\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful. The operation returns the topology of resource group.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "34b97b94-fe8f-439d-b6a0-c1e80d3a6568",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2d35a4f7-5e70-4c0c-9dd3-559859702166",
      "documentation": "Initiate troubleshooting on a specified resource.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/troubleshoot",
      "responses": [
        {
          "uuid": "af93ff7f-34ce-49fb-a960-2457cba4316f",
          "body": "{\n  \"code\": \"\",\n  \"endTime\": \"{{faker 'date.recent' 365}}\",\n  \"results\": [\n    {\n      \"detail\": \"\",\n      \"id\": \"\",\n      \"reasonType\": \"\",\n      \"recommendedActions\": [\n        {\n          \"actionId\": \"\",\n          \"actionText\": \"\",\n          \"actionUri\": \"\",\n          \"actionUriText\": \"\"\n        }\n      ],\n      \"summary\": \"\"\n    }\n  ],\n  \"startTime\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful troubleshooting request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "227d2515-8380-4359-945d-e645a23c4c86",
          "body": "{\n  \"code\": \"\",\n  \"endTime\": \"{{faker 'date.recent' 365}}\",\n  \"results\": [\n    {\n      \"detail\": \"\",\n      \"id\": \"\",\n      \"reasonType\": \"\",\n      \"recommendedActions\": [\n        {\n          \"actionId\": \"\",\n          \"actionText\": \"\",\n          \"actionUri\": \"\",\n          \"actionUriText\": \"\"\n        }\n      ],\n      \"summary\": \"\"\n    }\n  ],\n  \"startTime\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted get troubleshooting request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fa09e13b-a09d-49be-b4f0-1eccbf279180",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}