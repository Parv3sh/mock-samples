{
  "uuid": "5382c54c-b20e-4249-9c6c-fdd2eaf5f37e",
  "lastMigration": 19,
  "name": "Amazon Athena",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "57358df7-f694-4c9a-bf34-01d0ec33f214",
      "documentation": "Returns the details of a single named query or a list of up to 50 queries, which you provide as an array of query ID strings. Requires you to have access to the workgroup in which the queries were saved. Use <a>ListNamedQueriesInput</a> to get the list of named query IDs in the specified workgroup. If information could not be retrieved for a submitted query ID, information about the query ID submitted is listed under <a>UnprocessedNamedQueryId</a>. Named queries differ from executed queries. Use <a>BatchGetQueryExecutionInput</a> to get details about each unique query execution, and <a>ListQueryExecutionsInput</a> to get a list of query execution IDs.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonAthena.BatchGetNamedQuery",
      "responses": [
        {
          "uuid": "2c22c397-34c7-4578-a3b8-86df93772d3e",
          "body": "{\n  \"NamedQueries\": [\n    {\n      \"Name\": \"\",\n      \"Description\": \"\",\n      \"Database\": \"\",\n      \"QueryString\": \"\",\n      \"NamedQueryId\": \"\",\n      \"WorkGroup\": \"\"\n    }\n  ],\n  \"UnprocessedNamedQueryIds\": [\n    {\n      \"NamedQueryId\": \"\",\n      \"ErrorCode\": \"\",\n      \"ErrorMessage\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f783aae5-ed31-42bf-9012-615d349b5770",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a5d51630-aef4-4db5-81ed-4d05b5d3a4d4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b81da046-433c-4b3f-8454-b03931a36ef3",
      "documentation": "Returns the details of a single query execution or a list of up to 50 query executions, which you provide as an array of query execution ID strings. Requires you to have access to the workgroup in which the queries ran. To get a list of query execution IDs, use <a>ListQueryExecutionsInput$WorkGroup</a>. Query executions differ from named (saved) queries. Use <a>BatchGetNamedQueryInput</a> to get details about named queries.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonAthena.BatchGetQueryExecution",
      "responses": [
        {
          "uuid": "638888a4-c543-458b-9985-a896836086db",
          "body": "{\n  \"QueryExecutions\": [\n    {\n      \"QueryExecutionId\": \"\",\n      \"Query\": \"\",\n      \"StatementType\": \"\",\n      \"ResultConfiguration\": {\n        \"OutputLocation\": \"\",\n        \"EncryptionConfiguration\": {\n          \"EncryptionOption\": \"\",\n          \"KmsKey\": \"\"\n        }\n      },\n      \"QueryExecutionContext\": {\n        \"Database\": \"\",\n        \"Catalog\": \"\"\n      },\n      \"Status\": {\n        \"State\": \"\",\n        \"StateChangeReason\": \"\",\n        \"SubmissionDateTime\": \"{{faker 'date.recent' 365}}\",\n        \"CompletionDateTime\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"Statistics\": {\n        \"EngineExecutionTimeInMillis\": {{faker 'random.number'}},\n        \"DataScannedInBytes\": {{faker 'random.number'}},\n        \"DataManifestLocation\": \"\",\n        \"TotalExecutionTimeInMillis\": {{faker 'random.number'}},\n        \"QueryQueueTimeInMillis\": {{faker 'random.number'}},\n        \"QueryPlanningTimeInMillis\": {{faker 'random.number'}},\n        \"ServiceProcessingTimeInMillis\": {{faker 'random.number'}}\n      },\n      \"WorkGroup\": \"\",\n      \"EngineVersion\": {\n        \"SelectedEngineVersion\": \"\",\n        \"EffectiveEngineVersion\": \"\"\n      }\n    }\n  ],\n  \"UnprocessedQueryExecutionIds\": [\n    {\n      \"QueryExecutionId\": \"\",\n      \"ErrorCode\": \"\",\n      \"ErrorMessage\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c8cfb155-951b-437e-b5f9-ab7ed8f8e2ee",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ef872338-5343-448d-a0a4-48ead07d4a98",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "02428c48-e8d1-4fb2-988e-9a1bde8a83e9",
      "documentation": "Creates (registers) a data catalog with the specified name and properties. Catalogs created are visible to all users of the same Amazon Web Services account.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonAthena.CreateDataCatalog",
      "responses": [
        {
          "uuid": "0400fceb-1c65-4e89-90dd-fed4e362cc46",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ed398ef3-81d1-4ae3-b974-cbf587234195",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "67ec94a8-d162-42b6-8628-0ba650cbba3a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "53d62afe-1c11-4436-8b38-a865c8aef112",
      "documentation": "<p>Creates a named query in the specified workgroup. Requires that you have access to the workgroup.</p> <p>For code samples using the Amazon Web Services SDK for Java, see <a href=\"http://docs.aws.amazon.com/athena/latest/ug/code-samples.html\">Examples and Code Samples</a> in the <i>Amazon Athena User Guide</i>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonAthena.CreateNamedQuery",
      "responses": [
        {
          "uuid": "af8543a2-4c87-4af0-bae7-b2d25d3d49ab",
          "body": "{\n  \"NamedQueryId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "37e19f42-3e13-4e52-ac61-5a1ccc85fa96",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ecdf4346-ce70-4339-abba-7e668c7cb3db",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b04a648d-e916-4a56-bfb8-75ee79adb35e",
      "documentation": "Creates a prepared statement for use with SQL queries in Athena.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonAthena.CreatePreparedStatement",
      "responses": [
        {
          "uuid": "5558dd86-6087-4250-91da-eeaea8efc3a1",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3faab831-2efd-48d8-bddd-b19587232db8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c9ca18e8-850d-495d-9ddd-85a301f8e54b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "216a9531-fe65-44f1-bb65-93069a08cb37",
      "documentation": "Creates a workgroup with the specified name.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonAthena.CreateWorkGroup",
      "responses": [
        {
          "uuid": "142e338c-3877-47bf-aa4a-2e58b6c29d7e",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ae881794-36b7-4ace-93c2-af7c0e4740aa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "60f027c7-dc00-4707-ba40-d307bbbd2779",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c9964d12-178d-47ff-8f47-231aa5726a90",
      "documentation": "Deletes a data catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonAthena.DeleteDataCatalog",
      "responses": [
        {
          "uuid": "9d0db248-8463-4a65-8a64-8c51f2a20836",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "52cdce54-9c4b-45f4-ba3a-310eed15b5e6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bd95ffd5-e013-451c-b331-907136a5b6d3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8f41c666-6ac6-40b0-9a1c-b9621d51d537",
      "documentation": "<p>Deletes the named query if you have access to the workgroup in which the query was saved.</p> <p>For code samples using the Amazon Web Services SDK for Java, see <a href=\"http://docs.aws.amazon.com/athena/latest/ug/code-samples.html\">Examples and Code Samples</a> in the <i>Amazon Athena User Guide</i>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonAthena.DeleteNamedQuery",
      "responses": [
        {
          "uuid": "3819bc34-a794-4dd9-ac73-58e7ca361a90",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "725c9c2f-94a9-47a0-86e9-ec87e8740566",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ebe82f78-5430-40fe-8aab-d8d06362ba7e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ce340033-ec2b-4388-93c5-adcbcc6ea759",
      "documentation": "Deletes the prepared statement with the specified name from the specified workgroup.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonAthena.DeletePreparedStatement",
      "responses": [
        {
          "uuid": "9e5073cc-b831-440c-8378-a23247991608",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "287e5577-da4a-47ef-8d69-ba91399573c3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "34d855cb-def1-4073-8299-1c72931a7649",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bd869c75-e3dd-48e8-9591-672648fa258c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "44e62dc0-6ad6-4713-826c-f7c9a32ceb9c",
      "documentation": "Deletes the workgroup with the specified name. The primary workgroup cannot be deleted.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonAthena.DeleteWorkGroup",
      "responses": [
        {
          "uuid": "94906df8-4d92-487e-b875-5bb837ee8110",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "430ad1de-3fa4-4408-a648-c931a920a5fd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a1a54dfa-22b3-4b35-936a-f21a0c8daab1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b3b5d8af-8c4b-4b3c-bb89-d932f07d9a31",
      "documentation": "Returns the specified data catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonAthena.GetDataCatalog",
      "responses": [
        {
          "uuid": "10ffe642-7e17-489b-afbf-bd19dfbf7305",
          "body": "{\n  \"DataCatalog\": {\n    \"Name\": \"\",\n    \"Description\": \"\",\n    \"Type\": \"\",\n    \"Parameters\": {}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fa6ab4a2-3af0-4f16-b1ff-c2ff3c31403b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "79066aa3-e6c5-4acd-b469-b8e187b971cb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4eb2c8cc-f7dd-41a3-99f0-76171f4c3e2e",
      "documentation": "Returns a database object for the specified database and data catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonAthena.GetDatabase",
      "responses": [
        {
          "uuid": "cfd21cfc-bde9-44de-937d-3c80eccd89f5",
          "body": "{\n  \"Database\": {\n    \"Name\": \"\",\n    \"Description\": \"\",\n    \"Parameters\": {}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "08a0e616-51c8-4fcf-9ba8-1780d7a3b669",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3d2686fc-42cc-4d7b-8498-cb11a72f0a37",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9d0cf4b6-b9fe-42b5-83b5-2c98a4393da9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "MetadataException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "64a7aff7-8c69-45a3-88b5-916621835d18",
      "documentation": "Returns information about a single query. Requires that you have access to the workgroup in which the query was saved.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonAthena.GetNamedQuery",
      "responses": [
        {
          "uuid": "d1b440da-d6d5-456f-8b62-10f5ea1cf10e",
          "body": "{\n  \"NamedQuery\": {\n    \"Name\": \"\",\n    \"Description\": \"\",\n    \"Database\": \"\",\n    \"QueryString\": \"\",\n    \"NamedQueryId\": \"\",\n    \"WorkGroup\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c1d0aced-adde-4b4b-ba5c-b77a7292e87d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0454ba53-b4f8-478a-a402-7002c1877608",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "313f080a-ac90-426c-8556-1108fb80ab07",
      "documentation": "Retrieves the prepared statement with the specified name from the specified workgroup.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonAthena.GetPreparedStatement",
      "responses": [
        {
          "uuid": "b497aa7d-8bd0-4598-acc1-32c308b01cb9",
          "body": "{\n  \"PreparedStatement\": {\n    \"StatementName\": \"\",\n    \"QueryStatement\": \"\",\n    \"WorkGroupName\": \"\",\n    \"Description\": \"\",\n    \"LastModifiedTime\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d9f3177f-cc3d-462f-a703-6f07f7fa14fe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5d171169-47be-4c2b-af36-f954d083ea08",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2ef16d02-3d8d-42b8-abb9-e0111ac45313",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d36d500e-2510-4341-9384-afd079ca8d55",
      "documentation": "Returns information about a single execution of a query if you have access to the workgroup in which the query ran. Each time a query executes, information about the query execution is saved with a unique ID.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonAthena.GetQueryExecution",
      "responses": [
        {
          "uuid": "df0f15ed-1423-4e8d-8df7-399889b5e818",
          "body": "{\n  \"QueryExecution\": {\n    \"QueryExecutionId\": \"\",\n    \"Query\": \"\",\n    \"StatementType\": \"\",\n    \"ResultConfiguration\": {\n      \"OutputLocation\": \"\",\n      \"EncryptionConfiguration\": {\n        \"EncryptionOption\": \"\",\n        \"KmsKey\": \"\"\n      }\n    },\n    \"QueryExecutionContext\": {\n      \"Database\": \"\",\n      \"Catalog\": \"\"\n    },\n    \"Status\": {\n      \"State\": \"\",\n      \"StateChangeReason\": \"\",\n      \"SubmissionDateTime\": \"{{faker 'date.recent' 365}}\",\n      \"CompletionDateTime\": \"{{faker 'date.recent' 365}}\"\n    },\n    \"Statistics\": {\n      \"EngineExecutionTimeInMillis\": {{faker 'random.number'}},\n      \"DataScannedInBytes\": {{faker 'random.number'}},\n      \"DataManifestLocation\": \"\",\n      \"TotalExecutionTimeInMillis\": {{faker 'random.number'}},\n      \"QueryQueueTimeInMillis\": {{faker 'random.number'}},\n      \"QueryPlanningTimeInMillis\": {{faker 'random.number'}},\n      \"ServiceProcessingTimeInMillis\": {{faker 'random.number'}}\n    },\n    \"WorkGroup\": \"\",\n    \"EngineVersion\": {\n      \"SelectedEngineVersion\": \"\",\n      \"EffectiveEngineVersion\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5f40c49f-cc4c-4a28-9a55-4d550674a0e5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0a0ebdb5-09c3-424b-b9eb-75fce1570a97",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "04427be9-8710-47e9-8ce9-1d8017429e1d",
      "documentation": "<p>Streams the results of a single query execution specified by <code>QueryExecutionId</code> from the Athena query results location in Amazon S3. For more information, see <a href=\"https://docs.aws.amazon.com/athena/latest/ug/querying.html\">Query Results</a> in the <i>Amazon Athena User Guide</i>. This request does not execute the query but returns results. Use <a>StartQueryExecution</a> to run a query.</p> <p>To stream query results successfully, the IAM principal with permission to call <code>GetQueryResults</code> also must have permissions to the Amazon S3 <code>GetObject</code> action for the Athena query results location.</p> <important> <p>IAM principals with permission to the Amazon S3 <code>GetObject</code> action for the query results location are able to retrieve query results from Amazon S3 even if permission to the <code>GetQueryResults</code> action is denied. To restrict user or role access, ensure that Amazon S3 permissions to the Athena query location are denied.</p> </important>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonAthena.GetQueryResults",
      "responses": [
        {
          "uuid": "dddc8e51-bcf7-471f-ac32-8382818e5ddf",
          "body": "{\n  \"UpdateCount\": {{faker 'random.number'}},\n  \"ResultSet\": {\n    \"Rows\": [\n      {\n        \"Data\": [\n          {\n            \"VarCharValue\": \"\"\n          }\n        ]\n      }\n    ],\n    \"ResultSetMetadata\": {\n      \"ColumnInfo\": [\n        {\n          \"CatalogName\": \"\",\n          \"SchemaName\": \"\",\n          \"TableName\": \"\",\n          \"Name\": \"\",\n          \"Label\": \"\",\n          \"Type\": \"\",\n          \"Precision\": {{faker 'random.number'}},\n          \"Scale\": {{faker 'random.number'}},\n          \"Nullable\": \"\",\n          \"CaseSensitive\": {{faker 'random.boolean'}}\n        }\n      ]\n    }\n  },\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "67f8299f-f82d-4cc2-b61d-1c892ef6bd05",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "52b1aec9-5189-4a2c-a59e-cb986234ce26",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ceb42159-af65-4c14-8fa0-f3a885cc370f",
      "documentation": "Returns table metadata for the specified catalog, database, and table.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonAthena.GetTableMetadata",
      "responses": [
        {
          "uuid": "bd059322-3637-426e-bab1-fb1e76d457f3",
          "body": "{\n  \"TableMetadata\": {\n    \"Name\": \"\",\n    \"CreateTime\": \"{{faker 'date.recent' 365}}\",\n    \"LastAccessTime\": \"{{faker 'date.recent' 365}}\",\n    \"TableType\": \"\",\n    \"Columns\": [\n      {\n        \"Name\": \"\",\n        \"Type\": \"\",\n        \"Comment\": \"\"\n      }\n    ],\n    \"PartitionKeys\": [\n      {\n        \"Name\": \"\",\n        \"Type\": \"\",\n        \"Comment\": \"\"\n      }\n    ],\n    \"Parameters\": {}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "636ffc68-f05b-4266-ad1c-49f388260f4c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "67261614-8878-4e92-b0fb-23042a646526",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "294f8126-de42-4b27-a4d8-e0e19ac36425",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "MetadataException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "af05b0ec-9ead-47d9-b617-32ac579b6945",
      "documentation": "Returns information about the workgroup with the specified name.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonAthena.GetWorkGroup",
      "responses": [
        {
          "uuid": "d7f7378a-d655-43b1-8028-ad74de3c63c3",
          "body": "{\n  \"WorkGroup\": {\n    \"Name\": \"\",\n    \"State\": \"\",\n    \"Configuration\": {\n      \"ResultConfiguration\": {\n        \"OutputLocation\": \"\",\n        \"EncryptionConfiguration\": {\n          \"EncryptionOption\": \"\",\n          \"KmsKey\": \"\"\n        }\n      },\n      \"EnforceWorkGroupConfiguration\": {{faker 'random.boolean'}},\n      \"PublishCloudWatchMetricsEnabled\": {{faker 'random.boolean'}},\n      \"BytesScannedCutoffPerQuery\": {{faker 'random.number'}},\n      \"RequesterPaysEnabled\": {{faker 'random.boolean'}},\n      \"EngineVersion\": {\n        \"SelectedEngineVersion\": \"\",\n        \"EffectiveEngineVersion\": \"\"\n      }\n    },\n    \"Description\": \"\",\n    \"CreationTime\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "18b319da-86dd-49c7-9e09-d6307e4c0d52",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3a3dcbbb-8597-447a-a6c2-a26e5ff6539a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9ca050d3-eb0a-4f45-8642-2bbbb3caa753",
      "documentation": "Lists the data catalogs in the current Amazon Web Services account.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonAthena.ListDataCatalogs",
      "responses": [
        {
          "uuid": "209a8546-5dcf-4a22-bb47-ded19d59ad11",
          "body": "{\n  \"DataCatalogsSummary\": [\n    {\n      \"CatalogName\": \"\",\n      \"Type\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f9f94e35-93df-4baf-a16c-9c08214baec1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "16c2a0f0-30bd-42d5-ae6c-1a981255da5f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1bf556c4-71b2-47a9-bef1-6ddcc951749a",
      "documentation": "Lists the databases in the specified data catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonAthena.ListDatabases",
      "responses": [
        {
          "uuid": "bbdcd35b-0987-4ca2-b97f-61ea1a6339eb",
          "body": "{\n  \"DatabaseList\": [\n    {\n      \"Name\": \"\",\n      \"Description\": \"\",\n      \"Parameters\": {}\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ef2e1756-cd3a-4d65-8fc2-6f377a51a9b9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f4b37f02-99c7-468b-bf59-51a0db4e9d79",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ec9b0d8f-22e5-4947-b992-c5afd8e79888",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "MetadataException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "73a36d55-af2c-4f5a-8372-223859b3a647",
      "documentation": "Returns a list of engine versions that are available to choose from, including the Auto option.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonAthena.ListEngineVersions",
      "responses": [
        {
          "uuid": "882b3dc6-7d40-4642-ab56-8ca1e9275e59",
          "body": "{\n  \"EngineVersions\": [\n    {\n      \"SelectedEngineVersion\": \"\",\n      \"EffectiveEngineVersion\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b5e0c429-c20b-4bfa-a023-06aec376b0bf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "89bf3a7c-0629-427b-bac6-175f3dff99eb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "936de85b-e411-4126-82e3-07af5c421e0c",
      "documentation": "<p>Provides a list of available query IDs only for queries saved in the specified workgroup. Requires that you have access to the specified workgroup. If a workgroup is not specified, lists the saved queries for the primary workgroup.</p> <p>For code samples using the Amazon Web Services SDK for Java, see <a href=\"http://docs.aws.amazon.com/athena/latest/ug/code-samples.html\">Examples and Code Samples</a> in the <i>Amazon Athena User Guide</i>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonAthena.ListNamedQueries",
      "responses": [
        {
          "uuid": "93ad0dce-9ed2-40ec-a039-5f2d09173290",
          "body": "{\n  \"NamedQueryIds\": [\n    \"\"\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "97443db4-664d-47a6-8887-a6d2d26a0c76",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c3223c28-c035-4b09-b47d-c54d5be9db6c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "31755af9-85f1-4e4f-93ba-a2763467aeab",
      "documentation": "Lists the prepared statements in the specfied workgroup.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonAthena.ListPreparedStatements",
      "responses": [
        {
          "uuid": "d820f342-c7f3-4d0b-bda6-370cd0487dd9",
          "body": "{\n  \"PreparedStatements\": [\n    {\n      \"StatementName\": \"\",\n      \"LastModifiedTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3967af51-943b-4e4a-8315-9dc83669b2f4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "16e30edf-fd6d-4a80-b3f7-84ea4b7dc24a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b65cf393-fa28-44f2-998f-693781350cb5",
      "documentation": "<p>Provides a list of available query execution IDs for the queries in the specified workgroup. If a workgroup is not specified, returns a list of query execution IDs for the primary workgroup. Requires you to have access to the workgroup in which the queries ran.</p> <p>For code samples using the Amazon Web Services SDK for Java, see <a href=\"http://docs.aws.amazon.com/athena/latest/ug/code-samples.html\">Examples and Code Samples</a> in the <i>Amazon Athena User Guide</i>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonAthena.ListQueryExecutions",
      "responses": [
        {
          "uuid": "415fd781-87b3-40cd-912a-dfc81e75db1a",
          "body": "{\n  \"QueryExecutionIds\": [\n    \"\"\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "04528330-3f10-4fc4-8cf2-86b9ffaed23c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d42fb965-6fc6-4e5f-8fd1-a07f430611f7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d41358d5-05a4-4a2e-9e1c-e3fe5f2f5cf0",
      "documentation": "Lists the metadata for the tables in the specified data catalog database.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonAthena.ListTableMetadata",
      "responses": [
        {
          "uuid": "c699eb6c-4ab2-4bca-88aa-1e3bb2d485c1",
          "body": "{\n  \"TableMetadataList\": [\n    {\n      \"Name\": \"\",\n      \"CreateTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastAccessTime\": \"{{faker 'date.recent' 365}}\",\n      \"TableType\": \"\",\n      \"Columns\": [\n        {\n          \"Name\": \"\",\n          \"Type\": \"\",\n          \"Comment\": \"\"\n        }\n      ],\n      \"PartitionKeys\": [\n        {\n          \"Name\": \"\",\n          \"Type\": \"\",\n          \"Comment\": \"\"\n        }\n      ],\n      \"Parameters\": {}\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a1dc514c-0681-4c07-b066-d85e48e1b8cf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8c19c8fb-22a7-447c-9e0d-dc6dc4fd4e90",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9836c896-aaca-4499-bd89-d0105122e7a5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "MetadataException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b55a459f-9939-43d0-abff-888ea6f2a599",
      "documentation": "Lists the tags associated with an Athena workgroup or data catalog resource.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonAthena.ListTagsForResource",
      "responses": [
        {
          "uuid": "756e111b-ea39-4c0f-9a04-ff8cabbf5af2",
          "body": "{\n  \"Tags\": [\n    {\n      \"Key\": \"\",\n      \"Value\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e1433053-8097-4c20-bc91-4c1e055ca75f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "175b54ae-ec82-45be-8849-4d397ab7d569",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "824c1d22-6d94-45de-bd36-8f72f4ff7a86",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "478ea5ff-a489-468f-9f5d-776101ca4275",
      "documentation": "Lists available workgroups for the account.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonAthena.ListWorkGroups",
      "responses": [
        {
          "uuid": "2693d49c-2f0b-47df-a91c-61163b9d6ae4",
          "body": "{\n  \"WorkGroups\": [\n    {\n      \"Name\": \"\",\n      \"State\": \"\",\n      \"Description\": \"\",\n      \"CreationTime\": \"{{faker 'date.recent' 365}}\",\n      \"EngineVersion\": {\n        \"SelectedEngineVersion\": \"\",\n        \"EffectiveEngineVersion\": \"\"\n      }\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "67b946c7-467b-4716-991f-f3c33b643c02",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "36d7f80a-1609-44e2-abe3-aede1020dec3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "40f9d0e6-3671-4884-b3a5-ffd534906e17",
      "documentation": "Runs the SQL query statements contained in the <code>Query</code>. Requires you to have access to the workgroup in which the query ran. Running queries against an external catalog requires <a>GetDataCatalog</a> permission to the catalog. For code samples using the Amazon Web Services SDK for Java, see <a href=\"http://docs.aws.amazon.com/athena/latest/ug/code-samples.html\">Examples and Code Samples</a> in the <i>Amazon Athena User Guide</i>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonAthena.StartQueryExecution",
      "responses": [
        {
          "uuid": "ec81df1e-0651-44f6-81a3-a7a4a8f81dcf",
          "body": "{\n  \"QueryExecutionId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b6beec43-99e9-4154-83e7-83bd96049e3d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fc30a137-b158-4388-8739-55c986c7c213",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8ad72f58-4d2d-4838-8b85-26a6de839e98",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "efe328d4-4550-4016-8b50-759fc787be81",
      "documentation": "<p>Stops a query execution. Requires you to have access to the workgroup in which the query ran.</p> <p>For code samples using the Amazon Web Services SDK for Java, see <a href=\"http://docs.aws.amazon.com/athena/latest/ug/code-samples.html\">Examples and Code Samples</a> in the <i>Amazon Athena User Guide</i>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonAthena.StopQueryExecution",
      "responses": [
        {
          "uuid": "add56a9c-2ab2-46fa-bb9a-c01c2774264c",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6f5faaf2-e193-4698-a6a4-d7601e1913f6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c2cef73b-a435-4cbb-aeaa-ed285815a5cd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "73a797af-70e4-4b2a-a110-4a1d58054ee4",
      "documentation": "Adds one or more tags to an Athena resource. A tag is a label that you assign to a resource. In Athena, a resource can be a workgroup or data catalog. Each tag consists of a key and an optional value, both of which you define. For example, you can use tags to categorize Athena workgroups or data catalogs by purpose, owner, or environment. Use a consistent set of tag keys to make it easier to search and filter workgroups or data catalogs in your account. For best practices, see <a href=\"https://aws.amazon.com/answers/account-management/aws-tagging-strategies/\">Tagging Best Practices</a>. Tag keys can be from 1 to 128 UTF-8 Unicode characters, and tag values can be from 0 to 256 UTF-8 Unicode characters. Tags can use letters and numbers representable in UTF-8, and the following characters: + - = . _ : / @. Tag keys and values are case-sensitive. Tag keys must be unique per resource. If you specify more than one tag, separate them by commas.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonAthena.TagResource",
      "responses": [
        {
          "uuid": "e2017ddd-8e06-44f6-8010-928f6320a371",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eb82ed08-b778-4575-a5ee-f11c83d45661",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1b2166ef-1865-4a07-aac9-ec2c52970c52",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "60134b94-8965-492a-9cbc-648109eecaac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cfcb2aa8-43cf-4eee-b31f-e4813aa5210c",
      "documentation": "Removes one or more tags from a data catalog or workgroup resource.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonAthena.UntagResource",
      "responses": [
        {
          "uuid": "75fea401-be07-44a7-b033-8b6a8de9aa07",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0b607715-146f-4d49-b51d-26958e412be6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a903b619-80e3-4bd4-95c1-edfe108d1885",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c257dda9-8a9b-49e1-ba37-a0900fdcb9ea",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c096be78-37a3-45bf-a231-3ccda6cd7fdf",
      "documentation": "Updates the data catalog that has the specified name.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonAthena.UpdateDataCatalog",
      "responses": [
        {
          "uuid": "1d926f93-5363-468e-9a1f-3c3455519de5",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "49a5187e-5bee-4ab2-86fb-e22174e311ad",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9a14a45d-ba16-4453-a069-ca39f62e8e68",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "28081e56-a787-4c66-9e63-06e85aea6ca8",
      "documentation": "Updates a prepared statement.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonAthena.UpdatePreparedStatement",
      "responses": [
        {
          "uuid": "1830cc07-d98e-4cec-ab23-ce500280dd6c",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "430aa4ec-2d2f-40f5-8de4-dbe9b2a6d1ac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "99923d7d-fb5d-4d20-bdd0-06fec2dfd640",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8a4db988-82db-4dbf-9502-f93de2cebc6c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0d20ce48-1305-4fae-8ece-49fc69c00e1f",
      "documentation": "Updates the workgroup with the specified name. The workgroup's name cannot be changed.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonAthena.UpdateWorkGroup",
      "responses": [
        {
          "uuid": "25c0c037-d8c0-4734-950c-529911e3c336",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "157e22d8-cb4b-400d-baa2-d976f26271ad",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cdfebe09-8040-4f44-a871-073871d6b005",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}