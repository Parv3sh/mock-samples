{
  "uuid": "578a9ccd-16fd-4d94-bb73-721c2169df34",
  "lastMigration": 19,
  "name": "Amazon Athena",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "b74b5784-4e62-48be-b857-db024bcee445",
      "documentation": "Returns the details of a single named query or a list of up to 50 queries, which you provide as an array of query ID strings. Requires you to have access to the workgroup in which the queries were saved. Use <a>ListNamedQueriesInput</a> to get the list of named query IDs in the specified workgroup. If information could not be retrieved for a submitted query ID, information about the query ID submitted is listed under <a>UnprocessedNamedQueryId</a>. Named queries differ from executed queries. Use <a>BatchGetQueryExecutionInput</a> to get details about each unique query execution, and <a>ListQueryExecutionsInput</a> to get a list of query execution IDs.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonAthena.BatchGetNamedQuery",
      "responses": [
        {
          "uuid": "e9261b19-6333-4d98-ac11-0fb03334293f",
          "body": "{\n  \"NamedQueries\": [\n    {\n      \"Name\": \"\",\n      \"Description\": \"\",\n      \"Database\": \"\",\n      \"QueryString\": \"\",\n      \"NamedQueryId\": \"\",\n      \"WorkGroup\": \"\"\n    }\n  ],\n  \"UnprocessedNamedQueryIds\": [\n    {\n      \"NamedQueryId\": \"\",\n      \"ErrorCode\": \"\",\n      \"ErrorMessage\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e66ea8d4-2372-42ec-b05f-860c10877537",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5d214a0f-1ec2-40e2-b43e-ba67728e444a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8d86f060-77d0-4afc-accb-13513f1ab8eb",
      "documentation": "Returns the details of a single query execution or a list of up to 50 query executions, which you provide as an array of query execution ID strings. Requires you to have access to the workgroup in which the queries ran. To get a list of query execution IDs, use <a>ListQueryExecutionsInput$WorkGroup</a>. Query executions differ from named (saved) queries. Use <a>BatchGetNamedQueryInput</a> to get details about named queries.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonAthena.BatchGetQueryExecution",
      "responses": [
        {
          "uuid": "876097cf-1098-46cd-84a0-7fec7fb3f7cd",
          "body": "{\n  \"QueryExecutions\": [\n    {\n      \"QueryExecutionId\": \"\",\n      \"Query\": \"\",\n      \"StatementType\": \"\",\n      \"ResultConfiguration\": {\n        \"OutputLocation\": \"\",\n        \"EncryptionConfiguration\": {\n          \"EncryptionOption\": \"\",\n          \"KmsKey\": \"\"\n        }\n      },\n      \"QueryExecutionContext\": {\n        \"Database\": \"\",\n        \"Catalog\": \"\"\n      },\n      \"Status\": {\n        \"State\": \"\",\n        \"StateChangeReason\": \"\",\n        \"SubmissionDateTime\": \"{{faker 'date.recent' 365}}\",\n        \"CompletionDateTime\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"Statistics\": {\n        \"EngineExecutionTimeInMillis\": {{faker 'random.number'}},\n        \"DataScannedInBytes\": {{faker 'random.number'}},\n        \"DataManifestLocation\": \"\",\n        \"TotalExecutionTimeInMillis\": {{faker 'random.number'}},\n        \"QueryQueueTimeInMillis\": {{faker 'random.number'}},\n        \"QueryPlanningTimeInMillis\": {{faker 'random.number'}},\n        \"ServiceProcessingTimeInMillis\": {{faker 'random.number'}}\n      },\n      \"WorkGroup\": \"\",\n      \"EngineVersion\": {\n        \"SelectedEngineVersion\": \"\",\n        \"EffectiveEngineVersion\": \"\"\n      }\n    }\n  ],\n  \"UnprocessedQueryExecutionIds\": [\n    {\n      \"QueryExecutionId\": \"\",\n      \"ErrorCode\": \"\",\n      \"ErrorMessage\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2bd3e086-8a53-49d4-baae-f9d3a3a81cc5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "20789867-3754-4a3b-b4b5-3af8987b9f83",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b4d6f909-13a8-4c4f-b576-fd5f1c3f6ec4",
      "documentation": "Creates (registers) a data catalog with the specified name and properties. Catalogs created are visible to all users of the same Amazon Web Services account.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonAthena.CreateDataCatalog",
      "responses": [
        {
          "uuid": "46c21fa8-c003-4f97-ba35-878b962a73b9",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "168d82b9-193d-4625-a6eb-64c9d66e51fd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6764e260-02a7-4875-86cc-b049cab024e3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b6a2463e-3f44-43f0-9f9a-bc5be5f74059",
      "documentation": "<p>Creates a named query in the specified workgroup. Requires that you have access to the workgroup.</p> <p>For code samples using the Amazon Web Services SDK for Java, see <a href=\"http://docs.aws.amazon.com/athena/latest/ug/code-samples.html\">Examples and Code Samples</a> in the <i>Amazon Athena User Guide</i>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonAthena.CreateNamedQuery",
      "responses": [
        {
          "uuid": "77badb49-07fc-48e0-9993-3cfc81e4ddd3",
          "body": "{\n  \"NamedQueryId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7d0c2260-66a4-4711-901e-2a38e4a01d3b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "529724f7-6cc0-47ad-8945-dbb77d2a78dd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "eaee2f73-5fcb-4f7b-a0a5-1f37ee90b3e1",
      "documentation": "Creates a prepared statement for use with SQL queries in Athena.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonAthena.CreatePreparedStatement",
      "responses": [
        {
          "uuid": "1fa946f6-2293-41bf-bff6-8ff1f7290475",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3df95402-978e-4311-8836-62e09ce74abb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cfc6c8d7-6c71-4264-b5de-62812e83f45b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2b609982-4d39-4b54-9f9a-4a1f7d0ce458",
      "documentation": "Creates a workgroup with the specified name.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonAthena.CreateWorkGroup",
      "responses": [
        {
          "uuid": "bed5bb99-527b-4805-88ef-ba2089075d05",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dcd18233-5beb-4d5d-9536-92f6c4c87c8c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0f040e5a-6d0d-4a11-ab1c-2c8411be1755",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2cc68d5d-e7b4-415e-9015-ad2f5e294722",
      "documentation": "Deletes a data catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonAthena.DeleteDataCatalog",
      "responses": [
        {
          "uuid": "8eaf231f-ae33-4b72-9caf-fbf22953e1b6",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f05302c5-c367-4fb8-8b1e-984214134a72",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9e428c60-27fa-4019-8b4f-7489906a727a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "703affb8-bc02-4ee2-86f7-a20c3b6baed7",
      "documentation": "<p>Deletes the named query if you have access to the workgroup in which the query was saved.</p> <p>For code samples using the Amazon Web Services SDK for Java, see <a href=\"http://docs.aws.amazon.com/athena/latest/ug/code-samples.html\">Examples and Code Samples</a> in the <i>Amazon Athena User Guide</i>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonAthena.DeleteNamedQuery",
      "responses": [
        {
          "uuid": "9d05e252-241d-47ea-bd51-752ee31d4bd4",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ccfa1bcc-29be-4667-8b42-d02540055140",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eb1cdff7-f05e-40fe-8fbe-04a92c6bc46a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4d129c37-f079-4792-ab20-1413da9ec139",
      "documentation": "Deletes the prepared statement with the specified name from the specified workgroup.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonAthena.DeletePreparedStatement",
      "responses": [
        {
          "uuid": "fc6a6ba6-0b12-4095-af38-65d3ccb93103",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "77238b82-f540-4248-ac5b-d66dadf0aa56",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6329a229-b580-45c1-bbcd-7904551ada44",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7e01a1a1-3e4d-4419-9313-b8a1f261d931",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "70b72c4f-41b2-45d2-bd42-758eee680f03",
      "documentation": "Deletes the workgroup with the specified name. The primary workgroup cannot be deleted.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonAthena.DeleteWorkGroup",
      "responses": [
        {
          "uuid": "64bd921e-6a2d-4328-8b1a-75069b91a3c2",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1672abc8-f73e-4141-ae3d-006fbbb5c555",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0934a993-3beb-4955-b5ac-37f0506425c1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f660f9a9-c750-45d0-8ea8-c7d69edd1687",
      "documentation": "Returns the specified data catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonAthena.GetDataCatalog",
      "responses": [
        {
          "uuid": "3e86d9ae-96a4-459a-8962-de45be24d50f",
          "body": "{\n  \"DataCatalog\": {\n    \"Name\": \"\",\n    \"Description\": \"\",\n    \"Type\": \"\",\n    \"Parameters\": {}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "86e07474-2068-4af8-914c-3ae50c965622",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a35540c1-1c5b-42d9-8e66-a911bd76c627",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "419efa0b-3462-4762-8aae-317f0adf5273",
      "documentation": "Returns a database object for the specified database and data catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonAthena.GetDatabase",
      "responses": [
        {
          "uuid": "3ad32a95-946e-42f9-93b7-843fff0dc9e3",
          "body": "{\n  \"Database\": {\n    \"Name\": \"\",\n    \"Description\": \"\",\n    \"Parameters\": {}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5c86e282-7a69-4853-b519-a727e6486d47",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7ae682a0-e575-4e12-9c16-d52021b54c66",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4dbcd532-cd64-4b28-b44a-87e48f220217",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "MetadataException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1ea895b9-685d-443e-be30-d42683b830fc",
      "documentation": "Returns information about a single query. Requires that you have access to the workgroup in which the query was saved.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonAthena.GetNamedQuery",
      "responses": [
        {
          "uuid": "78b087aa-4ab7-4327-9f1a-346c2ba0f6c0",
          "body": "{\n  \"NamedQuery\": {\n    \"Name\": \"\",\n    \"Description\": \"\",\n    \"Database\": \"\",\n    \"QueryString\": \"\",\n    \"NamedQueryId\": \"\",\n    \"WorkGroup\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a103a616-689e-42a5-b1f1-27c0081ed553",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3b4ad0b2-7e27-4796-bf8f-4cb719645b12",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e074bca7-3b30-42f4-bd25-d9412f8ec891",
      "documentation": "Retrieves the prepared statement with the specified name from the specified workgroup.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonAthena.GetPreparedStatement",
      "responses": [
        {
          "uuid": "5605c251-a20a-429c-aa93-bbfd9961b142",
          "body": "{\n  \"PreparedStatement\": {\n    \"StatementName\": \"\",\n    \"QueryStatement\": \"\",\n    \"WorkGroupName\": \"\",\n    \"Description\": \"\",\n    \"LastModifiedTime\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3d620b35-d52b-47db-87f8-e6c3b6ab0965",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eaafdda8-521c-4fe3-b564-1bc7c91f1e1e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dac14daa-08a1-41c0-97c6-333eec4a84f3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f60c02d6-4314-42f5-8ea2-427447805a2b",
      "documentation": "Returns information about a single execution of a query if you have access to the workgroup in which the query ran. Each time a query executes, information about the query execution is saved with a unique ID.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonAthena.GetQueryExecution",
      "responses": [
        {
          "uuid": "8dfcec48-7747-44db-bc50-95d354983eb0",
          "body": "{\n  \"QueryExecution\": {\n    \"QueryExecutionId\": \"\",\n    \"Query\": \"\",\n    \"StatementType\": \"\",\n    \"ResultConfiguration\": {\n      \"OutputLocation\": \"\",\n      \"EncryptionConfiguration\": {\n        \"EncryptionOption\": \"\",\n        \"KmsKey\": \"\"\n      }\n    },\n    \"QueryExecutionContext\": {\n      \"Database\": \"\",\n      \"Catalog\": \"\"\n    },\n    \"Status\": {\n      \"State\": \"\",\n      \"StateChangeReason\": \"\",\n      \"SubmissionDateTime\": \"{{faker 'date.recent' 365}}\",\n      \"CompletionDateTime\": \"{{faker 'date.recent' 365}}\"\n    },\n    \"Statistics\": {\n      \"EngineExecutionTimeInMillis\": {{faker 'random.number'}},\n      \"DataScannedInBytes\": {{faker 'random.number'}},\n      \"DataManifestLocation\": \"\",\n      \"TotalExecutionTimeInMillis\": {{faker 'random.number'}},\n      \"QueryQueueTimeInMillis\": {{faker 'random.number'}},\n      \"QueryPlanningTimeInMillis\": {{faker 'random.number'}},\n      \"ServiceProcessingTimeInMillis\": {{faker 'random.number'}}\n    },\n    \"WorkGroup\": \"\",\n    \"EngineVersion\": {\n      \"SelectedEngineVersion\": \"\",\n      \"EffectiveEngineVersion\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "11e9ad09-d84f-47a6-a02d-3e4febea6834",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "765692ec-5166-43f8-8a05-1c3a8752a9f2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8bfb1f87-606b-4779-a6cf-73e1efb154c4",
      "documentation": "<p>Streams the results of a single query execution specified by <code>QueryExecutionId</code> from the Athena query results location in Amazon S3. For more information, see <a href=\"https://docs.aws.amazon.com/athena/latest/ug/querying.html\">Query Results</a> in the <i>Amazon Athena User Guide</i>. This request does not execute the query but returns results. Use <a>StartQueryExecution</a> to run a query.</p> <p>To stream query results successfully, the IAM principal with permission to call <code>GetQueryResults</code> also must have permissions to the Amazon S3 <code>GetObject</code> action for the Athena query results location.</p> <important> <p>IAM principals with permission to the Amazon S3 <code>GetObject</code> action for the query results location are able to retrieve query results from Amazon S3 even if permission to the <code>GetQueryResults</code> action is denied. To restrict user or role access, ensure that Amazon S3 permissions to the Athena query location are denied.</p> </important>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonAthena.GetQueryResults",
      "responses": [
        {
          "uuid": "9f8e0222-3fd3-483d-8a8a-4c16dbc21197",
          "body": "{\n  \"UpdateCount\": {{faker 'random.number'}},\n  \"ResultSet\": {\n    \"Rows\": [\n      {\n        \"Data\": [\n          {\n            \"VarCharValue\": \"\"\n          }\n        ]\n      }\n    ],\n    \"ResultSetMetadata\": {\n      \"ColumnInfo\": [\n        {\n          \"CatalogName\": \"\",\n          \"SchemaName\": \"\",\n          \"TableName\": \"\",\n          \"Name\": \"\",\n          \"Label\": \"\",\n          \"Type\": \"\",\n          \"Precision\": {{faker 'random.number'}},\n          \"Scale\": {{faker 'random.number'}},\n          \"Nullable\": \"\",\n          \"CaseSensitive\": {{faker 'random.boolean'}}\n        }\n      ]\n    }\n  },\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0ea8f47c-3933-4937-967d-cee4fd1170ee",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ea50cd98-f400-4ad3-a120-6738673eda1b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8baf9b76-720f-463b-a8c0-e6517e34dd6a",
      "documentation": "Returns table metadata for the specified catalog, database, and table.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonAthena.GetTableMetadata",
      "responses": [
        {
          "uuid": "6a10e1f9-07e4-4619-a93f-6c1377e6322d",
          "body": "{\n  \"TableMetadata\": {\n    \"Name\": \"\",\n    \"CreateTime\": \"{{faker 'date.recent' 365}}\",\n    \"LastAccessTime\": \"{{faker 'date.recent' 365}}\",\n    \"TableType\": \"\",\n    \"Columns\": [\n      {\n        \"Name\": \"\",\n        \"Type\": \"\",\n        \"Comment\": \"\"\n      }\n    ],\n    \"PartitionKeys\": [\n      {\n        \"Name\": \"\",\n        \"Type\": \"\",\n        \"Comment\": \"\"\n      }\n    ],\n    \"Parameters\": {}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e4732adc-baa5-4fd3-98b0-cd9182df91ec",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6a2b7729-087c-48c1-be8e-39392206bf54",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "efa3006c-0f4e-4312-8775-e44fd8f35324",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "MetadataException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "91ed42f6-ad42-4839-9649-cb1930528f96",
      "documentation": "Returns information about the workgroup with the specified name.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonAthena.GetWorkGroup",
      "responses": [
        {
          "uuid": "97a210d1-a736-489c-af9c-e1acb202a647",
          "body": "{\n  \"WorkGroup\": {\n    \"Name\": \"\",\n    \"State\": \"\",\n    \"Configuration\": {\n      \"ResultConfiguration\": {\n        \"OutputLocation\": \"\",\n        \"EncryptionConfiguration\": {\n          \"EncryptionOption\": \"\",\n          \"KmsKey\": \"\"\n        }\n      },\n      \"EnforceWorkGroupConfiguration\": {{faker 'random.boolean'}},\n      \"PublishCloudWatchMetricsEnabled\": {{faker 'random.boolean'}},\n      \"BytesScannedCutoffPerQuery\": {{faker 'random.number'}},\n      \"RequesterPaysEnabled\": {{faker 'random.boolean'}},\n      \"EngineVersion\": {\n        \"SelectedEngineVersion\": \"\",\n        \"EffectiveEngineVersion\": \"\"\n      }\n    },\n    \"Description\": \"\",\n    \"CreationTime\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "11d4c808-b60c-427a-a1fc-a987508f15d3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1a22f613-b396-4921-ab2c-a69ecb2c742e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dd5de4de-4a91-4d5b-97de-71e3ae8fa3df",
      "documentation": "Lists the data catalogs in the current Amazon Web Services account.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonAthena.ListDataCatalogs",
      "responses": [
        {
          "uuid": "638a9bc4-1873-40af-8f30-0ee8cf2b143e",
          "body": "{\n  \"DataCatalogsSummary\": [\n    {\n      \"CatalogName\": \"\",\n      \"Type\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d2a4be45-b3cc-4483-a08d-df3849db4bc1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c3e6a310-585c-4408-bd52-a23059fd59d1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "20448573-c913-4adb-b2ee-f95f93fbc307",
      "documentation": "Lists the databases in the specified data catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonAthena.ListDatabases",
      "responses": [
        {
          "uuid": "e3fbedca-2c56-439e-9723-09968a5f2ea0",
          "body": "{\n  \"DatabaseList\": [\n    {\n      \"Name\": \"\",\n      \"Description\": \"\",\n      \"Parameters\": {}\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0775440c-6e01-401b-91a0-3eaa1ae3bce5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "015f50b6-9ba2-40fe-a69b-5715f22bd343",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "95db60c1-19ca-44ee-af91-dd8ec750e1dd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "MetadataException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9c00d7fb-f473-4687-b7ba-19d2d07a34be",
      "documentation": "Returns a list of engine versions that are available to choose from, including the Auto option.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonAthena.ListEngineVersions",
      "responses": [
        {
          "uuid": "efa710d8-d803-4e5d-88e5-e60a9604fad7",
          "body": "{\n  \"EngineVersions\": [\n    {\n      \"SelectedEngineVersion\": \"\",\n      \"EffectiveEngineVersion\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "62cedb0d-a67f-4f9f-82b3-1491495523b9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "25c0aa4f-fd79-45bb-9f64-969c4dc2aaaf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "33d80304-2af6-40fc-aa00-8e9ca5c35897",
      "documentation": "<p>Provides a list of available query IDs only for queries saved in the specified workgroup. Requires that you have access to the specified workgroup. If a workgroup is not specified, lists the saved queries for the primary workgroup.</p> <p>For code samples using the Amazon Web Services SDK for Java, see <a href=\"http://docs.aws.amazon.com/athena/latest/ug/code-samples.html\">Examples and Code Samples</a> in the <i>Amazon Athena User Guide</i>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonAthena.ListNamedQueries",
      "responses": [
        {
          "uuid": "4292c28b-ef66-4cb1-8e5f-25bcb3336def",
          "body": "{\n  \"NamedQueryIds\": [\n    \"\"\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b7c285af-3621-4b56-ba08-8d9e81ca26e0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0a750b0b-3e63-487c-a81c-9ef96d2cd85c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "17547845-2082-4b3e-b8d9-ac135753e234",
      "documentation": "Lists the prepared statements in the specfied workgroup.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonAthena.ListPreparedStatements",
      "responses": [
        {
          "uuid": "d8f4eac5-38dc-418b-8f06-6edf0278d5ad",
          "body": "{\n  \"PreparedStatements\": [\n    {\n      \"StatementName\": \"\",\n      \"LastModifiedTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "04a2a73a-d518-4c7d-bb2f-f6a70aa70827",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d873ff43-7a3e-42f4-afbc-d20d11ca32c2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "69329b0a-bb24-43f3-b591-6c83177c6756",
      "documentation": "<p>Provides a list of available query execution IDs for the queries in the specified workgroup. If a workgroup is not specified, returns a list of query execution IDs for the primary workgroup. Requires you to have access to the workgroup in which the queries ran.</p> <p>For code samples using the Amazon Web Services SDK for Java, see <a href=\"http://docs.aws.amazon.com/athena/latest/ug/code-samples.html\">Examples and Code Samples</a> in the <i>Amazon Athena User Guide</i>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonAthena.ListQueryExecutions",
      "responses": [
        {
          "uuid": "1401da40-d06e-45eb-bb15-ad43a3697ea6",
          "body": "{\n  \"QueryExecutionIds\": [\n    \"\"\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "86429eab-91a3-4fa7-83b9-0b4246835d49",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1f1291b5-1905-4118-bb49-7121358b7a22",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8c09e1cd-4a65-46fd-a594-c0be1849738a",
      "documentation": "Lists the metadata for the tables in the specified data catalog database.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonAthena.ListTableMetadata",
      "responses": [
        {
          "uuid": "5ce4cf96-9463-4e32-b8fa-78c27bf4212d",
          "body": "{\n  \"TableMetadataList\": [\n    {\n      \"Name\": \"\",\n      \"CreateTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastAccessTime\": \"{{faker 'date.recent' 365}}\",\n      \"TableType\": \"\",\n      \"Columns\": [\n        {\n          \"Name\": \"\",\n          \"Type\": \"\",\n          \"Comment\": \"\"\n        }\n      ],\n      \"PartitionKeys\": [\n        {\n          \"Name\": \"\",\n          \"Type\": \"\",\n          \"Comment\": \"\"\n        }\n      ],\n      \"Parameters\": {}\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c8821430-cc41-4b88-bd2b-1d3c7a8ef0fe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2f200825-882f-4b41-9a07-f2c1465520a6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "68773ef5-65e8-4ee5-ade0-a9590029396f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "MetadataException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fca01a76-a9e0-432a-9095-cfda16c916b9",
      "documentation": "Lists the tags associated with an Athena workgroup or data catalog resource.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonAthena.ListTagsForResource",
      "responses": [
        {
          "uuid": "5118e11a-fbc7-44f9-8d73-41dbf46cc43d",
          "body": "{\n  \"Tags\": [\n    {\n      \"Key\": \"\",\n      \"Value\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d02856bb-11f8-4d1e-8984-c732b6c3f8fe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6ed6c552-cb06-492b-b9cf-ff42ea03b685",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ac107ae2-e0f9-4dc8-879c-4b2a2a9ab8b4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ad746cd8-e851-4c7f-a162-518a5b448c32",
      "documentation": "Lists available workgroups for the account.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonAthena.ListWorkGroups",
      "responses": [
        {
          "uuid": "5ddbee2b-adb9-46fb-964b-f21035ca61c8",
          "body": "{\n  \"WorkGroups\": [\n    {\n      \"Name\": \"\",\n      \"State\": \"\",\n      \"Description\": \"\",\n      \"CreationTime\": \"{{faker 'date.recent' 365}}\",\n      \"EngineVersion\": {\n        \"SelectedEngineVersion\": \"\",\n        \"EffectiveEngineVersion\": \"\"\n      }\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "000a2e09-5ea6-4e1a-85bc-2052620fd780",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a1ae20a5-340a-48a8-a98f-978231efbdf6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fb3acd05-24a2-42c9-b6fd-b0c8644f3d59",
      "documentation": "Runs the SQL query statements contained in the <code>Query</code>. Requires you to have access to the workgroup in which the query ran. Running queries against an external catalog requires <a>GetDataCatalog</a> permission to the catalog. For code samples using the Amazon Web Services SDK for Java, see <a href=\"http://docs.aws.amazon.com/athena/latest/ug/code-samples.html\">Examples and Code Samples</a> in the <i>Amazon Athena User Guide</i>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonAthena.StartQueryExecution",
      "responses": [
        {
          "uuid": "00db052d-a8fd-4974-8fcc-ede2d4b143e1",
          "body": "{\n  \"QueryExecutionId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "508cda8a-72a8-4148-ad98-4eaeb13fbf40",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "622cddee-3be7-46d7-a812-c712d134b008",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6313cde4-5b60-40d6-bd47-df230e477aff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f7bc69fa-955e-47b5-9562-c8b37f22f1bf",
      "documentation": "<p>Stops a query execution. Requires you to have access to the workgroup in which the query ran.</p> <p>For code samples using the Amazon Web Services SDK for Java, see <a href=\"http://docs.aws.amazon.com/athena/latest/ug/code-samples.html\">Examples and Code Samples</a> in the <i>Amazon Athena User Guide</i>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonAthena.StopQueryExecution",
      "responses": [
        {
          "uuid": "8d0d91b8-085d-4277-b528-633ca5b00f53",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "574abaf1-cbd3-465e-82b4-0a6b86632aa2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "951c7b6d-e1a7-4978-a20b-5b7aecf876e3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1dcbccb0-6274-4250-b1f3-c1bea7ed1980",
      "documentation": "Adds one or more tags to an Athena resource. A tag is a label that you assign to a resource. In Athena, a resource can be a workgroup or data catalog. Each tag consists of a key and an optional value, both of which you define. For example, you can use tags to categorize Athena workgroups or data catalogs by purpose, owner, or environment. Use a consistent set of tag keys to make it easier to search and filter workgroups or data catalogs in your account. For best practices, see <a href=\"https://aws.amazon.com/answers/account-management/aws-tagging-strategies/\">Tagging Best Practices</a>. Tag keys can be from 1 to 128 UTF-8 Unicode characters, and tag values can be from 0 to 256 UTF-8 Unicode characters. Tags can use letters and numbers representable in UTF-8, and the following characters: + - = . _ : / @. Tag keys and values are case-sensitive. Tag keys must be unique per resource. If you specify more than one tag, separate them by commas.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonAthena.TagResource",
      "responses": [
        {
          "uuid": "48f0ba1f-30d1-4f65-8341-c763d817b269",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a69d38c0-d832-44e1-921a-1a9d363f9535",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1c577db8-64a0-4206-bbbc-8d48e40b4a70",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "21dfa68c-a2f9-49fe-a10f-12a773854907",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cae5a07e-2042-4c7d-bf72-ee2e6c98e56f",
      "documentation": "Removes one or more tags from a data catalog or workgroup resource.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonAthena.UntagResource",
      "responses": [
        {
          "uuid": "ff56ac2f-1c33-4310-b9da-c24d624326b6",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2308b020-499f-4bff-b177-ebd835771980",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a7563144-8101-4a87-bf25-6b81719baa68",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c7428876-bfe7-4774-acf1-235d7f0b7261",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9648f012-6335-48a0-9d09-6f4e90935b2d",
      "documentation": "Updates the data catalog that has the specified name.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonAthena.UpdateDataCatalog",
      "responses": [
        {
          "uuid": "25bf6efe-6c2c-4d1d-a9a9-6f9ff495a54f",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b213379b-3733-4ac2-84fd-b1fbf12ce60b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "83701a36-0315-442d-a85b-4aecf6144173",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "58f85b60-9c1c-432c-895e-162e853b892f",
      "documentation": "Updates a prepared statement.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonAthena.UpdatePreparedStatement",
      "responses": [
        {
          "uuid": "afcc2080-e788-4af2-a013-f1e6245f29ba",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4b6ff91e-5d66-4c13-ab75-f2edb5e9b753",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4f7342b3-059a-40ff-ba55-7a9a82531279",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7e91b5ee-b791-40ce-95c9-720cb44a4550",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2c8b90fb-9347-462c-951d-97b92f4995eb",
      "documentation": "Updates the workgroup with the specified name. The workgroup's name cannot be changed.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonAthena.UpdateWorkGroup",
      "responses": [
        {
          "uuid": "5d16cefb-4a91-4265-967e-dc40f4b6b9d5",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b8d174d8-ea7d-408c-8c8d-accc12af7cf9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "224a5ae1-19fb-4aa9-99a9-680e0de8bae9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}