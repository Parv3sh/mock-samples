{
  "uuid": "73042c7c-334b-4f07-b306-378dc2aa4b5a",
  "lastMigration": 19,
  "name": "Car Configurator",
  "endpointPrefix": "configurator_tryout/v1",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "e4151897-62bc-49dd-83f7-e378c9aa7c6a",
      "documentation": "Get all available markets.",
      "method": "get",
      "endpoint": "markets",
      "responses": [
        {
          "uuid": "732ffa77-37ec-4189-98d5-947b6ae9150a",
          "body": "[\n  {\n    \"_links\": {\n      \"bodies\": {\n        \"href\": \"\"\n      },\n      \"classes\": {\n        \"href\": \"\"\n      },\n      \"models\": {\n        \"href\": \"\"\n      },\n      \"productgroups\": {\n        \"href\": \"\"\n      },\n      \"self\": {\n        \"href\": \"\"\n      }\n    },\n    \"country\": \"\",\n    \"language\": \"\",\n    \"marketId\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "94f03cd2-bf88-4903-98b1-650433d961db",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No content found for requested parameters language and/or country",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "83b39aaf-05e9-4893-98fe-edfe92f6e4e3",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid parameter was specified:\n * Language parameter is not valid\n * Country parameter is not valid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f329950d-6d5b-4662-82e7-f8c057a614fc",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eb554378-41ce-4bde-8c98-5edca0962b81",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6675587f-9bf2-4b8a-a500-0ded62f9df2a",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "An Error occurred on the server side",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "46bd0017-efe4-4fd5-930e-952e85b69fc0",
      "documentation": "Get the market with the given marketId.",
      "method": "get",
      "endpoint": "markets/:marketId",
      "responses": [
        {
          "uuid": "14d68165-1aca-4416-8921-006959fd641a",
          "body": "{\n  \"_links\": {\n    \"bodies\": {\n      \"href\": \"\"\n    },\n    \"classes\": {\n      \"href\": \"\"\n    },\n    \"models\": {\n      \"href\": \"\"\n    },\n    \"productgroups\": {\n      \"href\": \"\"\n    },\n    \"self\": {\n      \"href\": \"\"\n    }\n  },\n  \"country\": \"\",\n  \"language\": \"\",\n  \"marketId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c3ea9f7e-0bea-4d29-9d41-78e3792c4fce",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "MarketId is not valid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "245f1fd8-ab75-4267-84f2-7a86a79eb6ec",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7f8d64df-10a4-4ee4-ab90-9c2f6927fd5d",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Market not found for requested marketId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "375deab9-df78-432b-a55a-4d20e9f29543",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f4060a42-deaa-43aa-8e6a-b90bf10c3c1e",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "An Error occurred on the server side",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "430e4c7f-91d1-45a8-8051-98d1a1d55a3f",
      "documentation": "Get all available bodies for the given marketId.",
      "method": "get",
      "endpoint": "markets/:marketId/bodies",
      "responses": [
        {
          "uuid": "a8e6133f-ff9d-485f-9f26-a3d014c6ae00",
          "body": "[\n  {\n    \"_links\": {\n      \"models\": {\n        \"href\": \"\"\n      },\n      \"self\": {\n        \"href\": \"\"\n      }\n    },\n    \"bodyId\": \"\",\n    \"bodyName\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9e7cbe04-4627-4869-b2a4-2712867f6e32",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No content found for requested parameters classId, bodyId and/or productGroups",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "117ea441-f84e-4663-ac7b-714618acd2e3",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid parameter was specified:\n * MarketId is not valid\n * ClassId is not valid\n * BodyId is not valid\n * ProductGroups is not valid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ec4e1a0d-bc66-416c-9bc1-311fea9d7bf7",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cf2aa03f-6914-44c3-8ac8-50326ed8942f",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Market not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b0394314-8313-45d1-b56c-dc45adca5deb",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d483a22b-bc3e-4136-b981-00b4e21dc3c6",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "An Error occurred on the server side",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b2d6a791-d19f-4370-b3af-1527d402ea86",
      "documentation": "Get the body for the given marketId and bodyId.",
      "method": "get",
      "endpoint": "markets/:marketId/bodies/:bodyId",
      "responses": [
        {
          "uuid": "30328ebc-d574-4a63-a16e-2e04a6529e20",
          "body": "{\n  \"_links\": {\n    \"models\": {\n      \"href\": \"\"\n    },\n    \"self\": {\n      \"href\": \"\"\n    }\n  },\n  \"bodyId\": \"\",\n  \"bodyName\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "88e855f9-8658-4d4d-bf2f-b38414e9864d",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid parameter was specified:\n * MarketId is not valid\n * BodyId is not valid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "386cd7cc-f310-4338-b616-02813cdca13f",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bea3defc-8af1-482b-8de6-2b9ccc09f6fd",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Market or VehicleBody not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b5e4def0-bdbb-4c22-a3cb-57ff96feda3f",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "52ed14ea-f48a-4af6-b7dc-2c8187cae7ad",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "An Error occurred on the server side",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3bee5b7b-be57-4e6e-a55b-2ab243e5049a",
      "documentation": "Get all available classes for the given marketId.",
      "method": "get",
      "endpoint": "markets/:marketId/classes",
      "responses": [
        {
          "uuid": "ce509708-f438-4213-9028-836db41d41b9",
          "body": "[\n  {\n    \"_links\": {\n      \"models\": {\n        \"href\": \"\"\n      },\n      \"self\": {\n        \"href\": \"\"\n      }\n    },\n    \"classId\": \"\",\n    \"className\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3c265be0-545f-49bb-9e1e-7da91e0354b8",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No content found for requested parameters classId, bodyId and/or productGroups",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e92e16ed-2987-44fa-81bd-c51d05faac94",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid parameter was specified:\n * MarketId is not valid\n * ClassId is not valid\n * BodyId is not valid\n * Product group is not valid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "433b2c39-dae9-465e-9c30-08906f9df2ed",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ae723b4a-5d19-4540-a4e8-532a3cc31b1a",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Market has not been found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "13e6e46b-8db8-4153-b329-483927275b05",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6193871f-466f-4171-b232-3df9d4b71565",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "An Error occurred on the server side",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ab7ac82b-a0c1-4ecf-8d41-56e7dc882322",
      "documentation": "Get the class for the given marketId and classId.",
      "method": "get",
      "endpoint": "markets/:marketId/classes/:classId",
      "responses": [
        {
          "uuid": "eb4c8408-692c-42cc-94e4-263882b95ffb",
          "body": "{\n  \"_links\": {\n    \"models\": {\n      \"href\": \"\"\n    },\n    \"self\": {\n      \"href\": \"\"\n    }\n  },\n  \"classId\": \"\",\n  \"className\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "238cb96c-3bab-4df6-877a-0e1c101f0db7",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid parameter was specified:\n * MarketId is not valid\n * ClassId is not valid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8f73e036-4006-428a-a9d4-5956ebda9961",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4266429c-51ec-4a86-b5d3-7ab786849aa8",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Market or VehicleClass not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "86a8f66f-8f15-4ccd-9cf6-e82f8d11a5ba",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e7a05370-a92b-4453-ac47-ac4e2b6a1431",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "An Error occurred on the server side",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c3dda124-3458-4c94-9683-0cb924b9b1a9",
      "documentation": "Get all available models for the given marketId.",
      "method": "get",
      "endpoint": "markets/:marketId/models",
      "responses": [
        {
          "uuid": "db7b7adb-6198-408e-90f2-f470bd8f9310",
          "body": "[\n  {\n    \"_links\": {\n      \"configuration\": {\n        \"href\": \"\"\n      },\n      \"self\": {\n        \"href\": \"\"\n      }\n    },\n    \"baumuster\": \"\",\n    \"modelId\": \"\",\n    \"name\": \"\",\n    \"nationalSalesType\": \"\",\n    \"priceInformation\": {\n      \"currency\": \"\",\n      \"instalmentPrice\": {{faker 'random.number'}},\n      \"netPrice\": {{faker 'random.number'}},\n      \"price\": {{faker 'random.number'}},\n      \"taxes\": [\n        {\n          \"amount\": {{faker 'random.number'}},\n          \"baseAmount\": {{faker 'random.number'}},\n          \"charge\": {{faker 'random.number'}},\n          \"id\": \"\",\n          \"rate\": {{faker 'random.number'}}\n        }\n      ]\n    },\n    \"productGroup\": \"{{oneOf (array 'PKW' 'VAN' 'SMART')}}\",\n    \"shortName\": \"\",\n    \"vehicleBody\": {\n      \"_links\": {\n        \"models\": {\n          \"href\": \"\"\n        },\n        \"self\": {\n          \"href\": \"\"\n        }\n      },\n      \"bodyId\": \"\",\n      \"bodyName\": \"\"\n    },\n    \"vehicleClass\": {\n      \"_links\": {\n        \"models\": {\n          \"href\": \"\"\n        },\n        \"self\": {\n          \"href\": \"\"\n        }\n      },\n      \"classId\": \"\",\n      \"className\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1df06bce-f3a3-4088-b211-5eba9acff14e",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No content found for requested parameters classId, bodyId, baumuster4prefix, baumuster, nationalSalesType and/or productGroups",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fcc8a960-f5dc-4127-a097-5e1f2f49ddee",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid parameter was specified:\n * MarketId is not valid\n * ClassId is not valid\n * BodyId is not valid\n * Product group is not valid\n * baumuster4prefix is not valid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eb9bb69b-2b87-4692-96b7-5e6112338dfa",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "98ec13b3-9db1-49c2-8033-2ab8cc3ce97b",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Market not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a3d841a6-9583-41d6-a174-01194a559fb3",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1e0dda52-f3b4-4845-8eef-d1b04d562f79",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "An Error occurred on the server side",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "af51f3e2-6d46-4c85-971f-3aaf9367eca4",
      "documentation": "Get the model for the given marketId and modelId.",
      "method": "get",
      "endpoint": "markets/:marketId/models/:modelId",
      "responses": [
        {
          "uuid": "8dadfabf-97d3-40a5-a163-4821e2283e5c",
          "body": "{\n  \"_links\": {\n    \"configuration\": {\n      \"href\": \"\"\n    },\n    \"self\": {\n      \"href\": \"\"\n    }\n  },\n  \"baumuster\": \"\",\n  \"modelId\": \"\",\n  \"name\": \"\",\n  \"nationalSalesType\": \"\",\n  \"priceInformation\": {\n    \"currency\": \"\",\n    \"instalmentPrice\": {{faker 'random.number'}},\n    \"netPrice\": {{faker 'random.number'}},\n    \"price\": {{faker 'random.number'}},\n    \"taxes\": [\n      {\n        \"amount\": {{faker 'random.number'}},\n        \"baseAmount\": {{faker 'random.number'}},\n        \"charge\": {{faker 'random.number'}},\n        \"id\": \"\",\n        \"rate\": {{faker 'random.number'}}\n      }\n    ]\n  },\n  \"productGroup\": \"{{oneOf (array 'PKW' 'VAN' 'SMART')}}\",\n  \"shortName\": \"\",\n  \"vehicleBody\": {\n    \"_links\": {\n      \"models\": {\n        \"href\": \"\"\n      },\n      \"self\": {\n        \"href\": \"\"\n      }\n    },\n    \"bodyId\": \"\",\n    \"bodyName\": \"\"\n  },\n  \"vehicleClass\": {\n    \"_links\": {\n      \"models\": {\n        \"href\": \"\"\n      },\n      \"self\": {\n        \"href\": \"\"\n      }\n    },\n    \"classId\": \"\",\n    \"className\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7f7325e7-238f-4715-8085-0f77e3a0d270",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid parameter was specified:\n * MarketId is not valid\n * ModelId is not valid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "37894b30-d8f4-48c2-a4eb-36662c367d6b",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2a1cf331-39e9-4095-a21c-2b346396daa3",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Market or Model not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7f8f0500-f0e3-4d7a-9b62-bf6c83cff0d6",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "df386401-425d-4f4c-b42c-307cb38b255a",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "An Error occurred on the server side",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7b417a57-7cbf-441f-98c9-c7478818169f",
      "documentation": "Get the initial configuration for the given marketId and modelId.",
      "method": "get",
      "endpoint": "markets/:marketId/models/:modelId/configurations/initial",
      "responses": [
        {
          "uuid": "96eb3f37-f177-4109-b313-63808fe76b0f",
          "body": "{\n  \"_links\": {\n    \"imageapi_vehicle\": {\n      \"href\": \"\"\n    },\n    \"selectables\": {\n      \"href\": \"\"\n    },\n    \"self\": {\n      \"href\": \"\"\n    }\n  },\n  \"changeYear\": \"\",\n  \"configurationId\": \"\",\n  \"configurationPrice\": {\n    \"currency\": \"\",\n    \"instalmentPrice\": {{faker 'random.number'}},\n    \"netPrice\": {{faker 'random.number'}},\n    \"price\": {{faker 'random.number'}},\n    \"taxes\": [\n      {\n        \"amount\": {{faker 'random.number'}},\n        \"baseAmount\": {{faker 'random.number'}},\n        \"charge\": {{faker 'random.number'}},\n        \"id\": \"\",\n        \"rate\": {{faker 'random.number'}}\n      }\n    ]\n  },\n  \"initialPrice\": {\n    \"currency\": \"\",\n    \"instalmentPrice\": {{faker 'random.number'}},\n    \"netPrice\": {{faker 'random.number'}},\n    \"price\": {{faker 'random.number'}},\n    \"taxes\": [\n      {\n        \"amount\": {{faker 'random.number'}},\n        \"baseAmount\": {{faker 'random.number'}},\n        \"charge\": {{faker 'random.number'}},\n        \"id\": \"\",\n        \"rate\": {{faker 'random.number'}}\n      }\n    ]\n  },\n  \"marketId\": \"\",\n  \"modelId\": \"\",\n  \"modelYear\": \"\",\n  \"technicalInformation\": {\n    \"acceleration\": {\n      \"unit\": \"\",\n      \"value\": {{faker 'random.number'}}\n    },\n    \"doors\": {{faker 'random.number'}},\n    \"energyEfficiencyClass\": \"\",\n    \"engine\": {\n      \"alternativeFuelType\": \"{{oneOf (array 'NORMAL' 'SUPER' 'SUPERPLUS' 'DIESEL' 'HGAS' 'GAS' 'ELECTRIC' 'FUELCELL' 'UNDEFINED')}}\",\n      \"capacity\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'random.number'}}\n      },\n      \"cylinder\": \"\",\n      \"driveConcept\": \"{{oneOf (array 'COMBUSTOR' 'HYBRID' 'ELECTRIC' 'FUELCELL' 'UNDEFINED')}}\",\n      \"emissionStandard\": \"\",\n      \"engineConcept\": \"{{oneOf (array 'MONO_REGULAR' 'MONO_DIESEL' 'MONO_GAS' 'MONO_ELECTRIC' 'MONO_FUELCELL' 'BI_NGT' 'BI_NGD' 'BI_MILD' 'BI_PLUGIN' 'MONO_UNDEFINED' 'BI_UNDEFINED' 'BI_HYBRID_UNDEFINED' 'BI_COMBUSTION_UNDEFINED' 'UNDEFINED')}}\",\n      \"fuelEconomy\": {\n        \"consumptionOfElectricityMax\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"consumptionOfElectricityMin\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"emissionCO2Max\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"emissionCO2Min\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"fuelConsumptionCityMax\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"fuelConsumptionCityMin\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"fuelConsumptionCombinedMax\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"fuelConsumptionCombinedMin\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"fuelConsumptionElectricity\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"fuelConsumptionOverlandMax\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"fuelConsumptionOverlandMin\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        }\n      },\n      \"fuelType\": \"{{oneOf (array 'NORMAL' 'SUPER' 'SUPERPLUS' 'DIESEL' 'HGAS' 'GAS' 'ELECTRIC' 'FUELCELL' 'UNDEFINED')}}\",\n      \"powerHp\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'random.number'}}\n      },\n      \"powerHybridExtensionHp\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'random.number'}}\n      },\n      \"powerHybridExtensionKw\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'random.number'}}\n      },\n      \"powerKw\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'random.number'}}\n      }\n    },\n    \"nedc\": {\n      \"consumption\": {\n        \"city\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"combined\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"country\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"electric\": {\n          \"individual\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"max\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"min\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          }\n        },\n        \"weighted\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        }\n      },\n      \"electricRange\": {\n        \"individual\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"max\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"min\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        }\n      },\n      \"emission\": {\n        \"city\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"combined\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"country\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"weighted\": {\n          \"individual\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"max\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"min\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          }\n        }\n      },\n      \"weight\": {\n        \"individual\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"max\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"min\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        }\n      }\n    },\n    \"seats\": {{faker 'random.number'}},\n    \"topSpeed\": {\n      \"unit\": \"\",\n      \"value\": {{faker 'random.number'}}\n    },\n    \"transmission\": {\n      \"code\": \"\",\n      \"codeType\": \"\",\n      \"name\": \"\"\n    },\n    \"wltp\": {\n      \"consumption\": {\n        \"chargeDeplete\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"chargeDepleteCop\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"extraHigh\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"high\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"low\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"medium\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"total\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"weighted\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        }\n      },\n      \"emission\": {\n        \"chargeDeplete\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"chargeDepleteCop\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"chargeDepleteWeighted\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"extraHigh\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"high\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"low\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"lowMid\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"medium\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"total\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"weighted\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        }\n      }\n    }\n  },\n  \"vehicleComponents\": [\n    {\n      \"_links\": {\n        \"imageapi_component\": {\n          \"href\": \"\"\n        }\n      },\n      \"code\": \"\",\n      \"codeType\": \"\",\n      \"componentSortId\": {{faker 'random.number'}},\n      \"componentType\": \"{{oneOf (array 'ANY' 'WHEELS' 'PAINTS' 'UPHOLSTERIES' 'TRIMS' 'PACKAGES' 'LINES' 'SPECIAL_EDITION' 'SPECIAL_EQUIPMENT')}}\",\n      \"description\": \"\",\n      \"fixed\": {{faker 'random.boolean'}},\n      \"hidden\": {{faker 'random.boolean'}},\n      \"id\": \"\",\n      \"name\": \"\",\n      \"priceInformation\": {\n        \"currency\": \"\",\n        \"instalmentPrice\": {{faker 'random.number'}},\n        \"netPrice\": {{faker 'random.number'}},\n        \"price\": {{faker 'random.number'}},\n        \"taxes\": [\n          {\n            \"amount\": {{faker 'random.number'}},\n            \"baseAmount\": {{faker 'random.number'}},\n            \"charge\": {{faker 'random.number'}},\n            \"id\": \"\",\n            \"rate\": {{faker 'random.number'}}\n          }\n        ]\n      },\n      \"pseudoCode\": {{faker 'random.boolean'}},\n      \"selected\": {{faker 'random.boolean'}},\n      \"standard\": {{faker 'random.boolean'}}\n    }\n  ],\n  \"wltpConfiguration\": {{faker 'random.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7d44985b-5664-4a3e-b164-2fede20e966f",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid parameter was specified:\n * MarketId is not valid\n * ModelId is not valid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1ccf1499-ef2f-4c73-b7bd-ea338201c067",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "879e7b75-6a09-4dd4-ba74-b0fdb4aa2f45",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Market or Model not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3b5a2759-a978-4691-91c5-324b1dd21e2e",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c5edc8e3-b14b-45a5-baa6-949032c1974a",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "An Error occurred on the server side",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0763ef14-8cea-4d9d-a7ec-35e1f02e8a31",
      "documentation": "Get the configuration for the given marketId, modelId and configurationId.",
      "method": "get",
      "endpoint": "markets/:marketId/models/:modelId/configurations/:configurationId",
      "responses": [
        {
          "uuid": "3171f16e-c8e3-45d8-b369-82ba0ddd1f4e",
          "body": "{\n  \"_links\": {\n    \"imageapi_vehicle\": {\n      \"href\": \"\"\n    },\n    \"selectables\": {\n      \"href\": \"\"\n    },\n    \"self\": {\n      \"href\": \"\"\n    }\n  },\n  \"changeYear\": \"\",\n  \"configurationId\": \"\",\n  \"configurationPrice\": {\n    \"currency\": \"\",\n    \"instalmentPrice\": {{faker 'random.number'}},\n    \"netPrice\": {{faker 'random.number'}},\n    \"price\": {{faker 'random.number'}},\n    \"taxes\": [\n      {\n        \"amount\": {{faker 'random.number'}},\n        \"baseAmount\": {{faker 'random.number'}},\n        \"charge\": {{faker 'random.number'}},\n        \"id\": \"\",\n        \"rate\": {{faker 'random.number'}}\n      }\n    ]\n  },\n  \"initialPrice\": {\n    \"currency\": \"\",\n    \"instalmentPrice\": {{faker 'random.number'}},\n    \"netPrice\": {{faker 'random.number'}},\n    \"price\": {{faker 'random.number'}},\n    \"taxes\": [\n      {\n        \"amount\": {{faker 'random.number'}},\n        \"baseAmount\": {{faker 'random.number'}},\n        \"charge\": {{faker 'random.number'}},\n        \"id\": \"\",\n        \"rate\": {{faker 'random.number'}}\n      }\n    ]\n  },\n  \"marketId\": \"\",\n  \"modelId\": \"\",\n  \"modelYear\": \"\",\n  \"technicalInformation\": {\n    \"acceleration\": {\n      \"unit\": \"\",\n      \"value\": {{faker 'random.number'}}\n    },\n    \"doors\": {{faker 'random.number'}},\n    \"energyEfficiencyClass\": \"\",\n    \"engine\": {\n      \"alternativeFuelType\": \"{{oneOf (array 'NORMAL' 'SUPER' 'SUPERPLUS' 'DIESEL' 'HGAS' 'GAS' 'ELECTRIC' 'FUELCELL' 'UNDEFINED')}}\",\n      \"capacity\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'random.number'}}\n      },\n      \"cylinder\": \"\",\n      \"driveConcept\": \"{{oneOf (array 'COMBUSTOR' 'HYBRID' 'ELECTRIC' 'FUELCELL' 'UNDEFINED')}}\",\n      \"emissionStandard\": \"\",\n      \"engineConcept\": \"{{oneOf (array 'MONO_REGULAR' 'MONO_DIESEL' 'MONO_GAS' 'MONO_ELECTRIC' 'MONO_FUELCELL' 'BI_NGT' 'BI_NGD' 'BI_MILD' 'BI_PLUGIN' 'MONO_UNDEFINED' 'BI_UNDEFINED' 'BI_HYBRID_UNDEFINED' 'BI_COMBUSTION_UNDEFINED' 'UNDEFINED')}}\",\n      \"fuelEconomy\": {\n        \"consumptionOfElectricityMax\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"consumptionOfElectricityMin\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"emissionCO2Max\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"emissionCO2Min\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"fuelConsumptionCityMax\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"fuelConsumptionCityMin\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"fuelConsumptionCombinedMax\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"fuelConsumptionCombinedMin\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"fuelConsumptionElectricity\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"fuelConsumptionOverlandMax\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"fuelConsumptionOverlandMin\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        }\n      },\n      \"fuelType\": \"{{oneOf (array 'NORMAL' 'SUPER' 'SUPERPLUS' 'DIESEL' 'HGAS' 'GAS' 'ELECTRIC' 'FUELCELL' 'UNDEFINED')}}\",\n      \"powerHp\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'random.number'}}\n      },\n      \"powerHybridExtensionHp\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'random.number'}}\n      },\n      \"powerHybridExtensionKw\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'random.number'}}\n      },\n      \"powerKw\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'random.number'}}\n      }\n    },\n    \"nedc\": {\n      \"consumption\": {\n        \"city\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"combined\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"country\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"electric\": {\n          \"individual\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"max\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"min\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          }\n        },\n        \"weighted\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        }\n      },\n      \"electricRange\": {\n        \"individual\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"max\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"min\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        }\n      },\n      \"emission\": {\n        \"city\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"combined\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"country\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"weighted\": {\n          \"individual\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"max\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"min\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          }\n        }\n      },\n      \"weight\": {\n        \"individual\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"max\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"min\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        }\n      }\n    },\n    \"seats\": {{faker 'random.number'}},\n    \"topSpeed\": {\n      \"unit\": \"\",\n      \"value\": {{faker 'random.number'}}\n    },\n    \"transmission\": {\n      \"code\": \"\",\n      \"codeType\": \"\",\n      \"name\": \"\"\n    },\n    \"wltp\": {\n      \"consumption\": {\n        \"chargeDeplete\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"chargeDepleteCop\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"extraHigh\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"high\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"low\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"medium\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"total\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"weighted\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        }\n      },\n      \"emission\": {\n        \"chargeDeplete\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"chargeDepleteCop\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"chargeDepleteWeighted\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"extraHigh\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"high\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"low\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"lowMid\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"medium\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"total\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"weighted\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        }\n      }\n    }\n  },\n  \"vehicleComponents\": [\n    {\n      \"_links\": {\n        \"imageapi_component\": {\n          \"href\": \"\"\n        }\n      },\n      \"code\": \"\",\n      \"codeType\": \"\",\n      \"componentSortId\": {{faker 'random.number'}},\n      \"componentType\": \"{{oneOf (array 'ANY' 'WHEELS' 'PAINTS' 'UPHOLSTERIES' 'TRIMS' 'PACKAGES' 'LINES' 'SPECIAL_EDITION' 'SPECIAL_EQUIPMENT')}}\",\n      \"description\": \"\",\n      \"fixed\": {{faker 'random.boolean'}},\n      \"hidden\": {{faker 'random.boolean'}},\n      \"id\": \"\",\n      \"name\": \"\",\n      \"priceInformation\": {\n        \"currency\": \"\",\n        \"instalmentPrice\": {{faker 'random.number'}},\n        \"netPrice\": {{faker 'random.number'}},\n        \"price\": {{faker 'random.number'}},\n        \"taxes\": [\n          {\n            \"amount\": {{faker 'random.number'}},\n            \"baseAmount\": {{faker 'random.number'}},\n            \"charge\": {{faker 'random.number'}},\n            \"id\": \"\",\n            \"rate\": {{faker 'random.number'}}\n          }\n        ]\n      },\n      \"pseudoCode\": {{faker 'random.boolean'}},\n      \"selected\": {{faker 'random.boolean'}},\n      \"standard\": {{faker 'random.boolean'}}\n    }\n  ],\n  \"wltpConfiguration\": {{faker 'random.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e3dd9458-1b32-4149-85f0-c743ec0aad08",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid parameter was specified:\n * MarketId is not valid\n * ModelId is not valid\n * ConfigurationId is not valid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f488d88a-01ab-42dc-929c-f3b9e46e08f1",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "64f9a6e2-d806-4581-92b6-86dd13758c49",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Market, Model or Configuration not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2e8e691f-4257-4671-b20e-f59c6ffe1adb",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a588f4d2-b885-43ec-95cc-358ab2e6d675",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "An Error occurred on the server side",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ab07a02e-743c-4a8d-b19f-2f1efdd2bfcf",
      "documentation": "Get the alternatives for the given marketId, modelId, configurationId and componentList.",
      "method": "get",
      "endpoint": "markets/:marketId/models/:modelId/configurations/:configurationId/alternatives/:componentList",
      "responses": [
        {
          "uuid": "2868fae5-fa70-4167-8b83-960fe649f89d",
          "body": "[\n  {\n    \"_links\": {\n      \"imageapi_vehicle\": {\n        \"href\": \"\"\n      },\n      \"selectables\": {\n        \"href\": \"\"\n      },\n      \"self\": {\n        \"href\": \"\"\n      }\n    },\n    \"addedComponents\": [\n      {\n        \"_links\": {\n          \"imageapi_component\": {\n            \"href\": \"\"\n          }\n        },\n        \"code\": \"\",\n        \"codeType\": \"\",\n        \"componentSortId\": {{faker 'random.number'}},\n        \"componentType\": \"{{oneOf (array 'ANY' 'WHEELS' 'PAINTS' 'UPHOLSTERIES' 'TRIMS' 'PACKAGES' 'LINES' 'SPECIAL_EDITION' 'SPECIAL_EQUIPMENT')}}\",\n        \"description\": \"\",\n        \"fixed\": {{faker 'random.boolean'}},\n        \"hidden\": {{faker 'random.boolean'}},\n        \"id\": \"\",\n        \"name\": \"\",\n        \"priceInformation\": {\n          \"currency\": \"\",\n          \"instalmentPrice\": {{faker 'random.number'}},\n          \"netPrice\": {{faker 'random.number'}},\n          \"price\": {{faker 'random.number'}},\n          \"taxes\": [\n            {\n              \"amount\": {{faker 'random.number'}},\n              \"baseAmount\": {{faker 'random.number'}},\n              \"charge\": {{faker 'random.number'}},\n              \"id\": \"\",\n              \"rate\": {{faker 'random.number'}}\n            }\n          ]\n        },\n        \"pseudoCode\": {{faker 'random.boolean'}},\n        \"selected\": {{faker 'random.boolean'}},\n        \"standard\": {{faker 'random.boolean'}}\n      }\n    ],\n    \"configurationId\": \"\",\n    \"marketId\": \"\",\n    \"modelId\": \"\",\n    \"priceInformation\": {},\n    \"removedComponents\": [\n      {\n        \"_links\": {\n          \"imageapi_component\": {\n            \"href\": \"\"\n          }\n        },\n        \"code\": \"\",\n        \"codeType\": \"\",\n        \"componentSortId\": {{faker 'random.number'}},\n        \"componentType\": \"{{oneOf (array 'ANY' 'WHEELS' 'PAINTS' 'UPHOLSTERIES' 'TRIMS' 'PACKAGES' 'LINES' 'SPECIAL_EDITION' 'SPECIAL_EQUIPMENT')}}\",\n        \"description\": \"\",\n        \"fixed\": {{faker 'random.boolean'}},\n        \"hidden\": {{faker 'random.boolean'}},\n        \"id\": \"\",\n        \"name\": \"\",\n        \"priceInformation\": {\n          \"currency\": \"\",\n          \"instalmentPrice\": {{faker 'random.number'}},\n          \"netPrice\": {{faker 'random.number'}},\n          \"price\": {{faker 'random.number'}},\n          \"taxes\": [\n            {\n              \"amount\": {{faker 'random.number'}},\n              \"baseAmount\": {{faker 'random.number'}},\n              \"charge\": {{faker 'random.number'}},\n              \"id\": \"\",\n              \"rate\": {{faker 'random.number'}}\n            }\n          ]\n        },\n        \"pseudoCode\": {{faker 'random.boolean'}},\n        \"selected\": {{faker 'random.boolean'}},\n        \"standard\": {{faker 'random.boolean'}}\n      }\n    ],\n    \"updatedComponents\": [\n      {\n        \"_links\": {\n          \"imageapi_component\": {\n            \"href\": \"\"\n          }\n        },\n        \"code\": \"\",\n        \"codeType\": \"\",\n        \"componentSortId\": {{faker 'random.number'}},\n        \"componentType\": \"{{oneOf (array 'ANY' 'WHEELS' 'PAINTS' 'UPHOLSTERIES' 'TRIMS' 'PACKAGES' 'LINES' 'SPECIAL_EDITION' 'SPECIAL_EQUIPMENT')}}\",\n        \"description\": \"\",\n        \"fixed\": {{faker 'random.boolean'}},\n        \"hidden\": {{faker 'random.boolean'}},\n        \"id\": \"\",\n        \"name\": \"\",\n        \"priceInformation\": {\n          \"currency\": \"\",\n          \"instalmentPrice\": {{faker 'random.number'}},\n          \"netPrice\": {{faker 'random.number'}},\n          \"price\": {{faker 'random.number'}},\n          \"taxes\": [\n            {\n              \"amount\": {{faker 'random.number'}},\n              \"baseAmount\": {{faker 'random.number'}},\n              \"charge\": {{faker 'random.number'}},\n              \"id\": \"\",\n              \"rate\": {{faker 'random.number'}}\n            }\n          ]\n        },\n        \"pseudoCode\": {{faker 'random.boolean'}},\n        \"selected\": {{faker 'random.boolean'}},\n        \"standard\": {{faker 'random.boolean'}}\n      }\n    ]\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "90c36386-c2c6-419d-a937-cad33575c113",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid parameter was specified:\n * MarketId is not valid\n * ModelId is not valid\n * ConfigurationId is not valid\n * ComponentList is not valid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9b0c195a-aa8b-4a9f-a6fc-25973aece9f8",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a6b13b14-a58a-4c76-b1ed-853a5b87ed3f",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Market, Model or Configuration not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f359d8b1-1a89-4f9e-8131-2567e6d72192",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4203e449-fbfe-4a14-b807-6db4af8192e0",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "An Error occurred on the server side",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8a7dd729-589f-4560-a577-4b50309f7fad",
      "documentation": "Returns URLs pointing to images in JPG format in the highest available resolution (depending on the component) of the vehicle's:\n  * engine (1024x576 px),\n  * rim (710x710 px),\n  * trim (800x600 px),\n  * paints (800x600 px),\n  * upholstery (800x600 px) and\n  * equipments (740x416 px).",
      "method": "get",
      "endpoint": "markets/:marketId/models/:modelId/configurations/:configurationId/images/components",
      "responses": [
        {
          "uuid": "c1590158-b1a5-4cf3-8c23-8de05a205b68",
          "body": "{\n  \"components\": {\n    \"engine\": {\n      \"url\": \"\"\n    },\n    \"equipments\": {},\n    \"paint\": {\n      \"paint1\": {\n        \"code\": \"\",\n        \"url\": \"\"\n      },\n      \"paint2\": {\n        \"code\": \"\",\n        \"url\": \"\"\n      }\n    },\n    \"rim\": {\n      \"code\": \"\",\n      \"url\": \"\"\n    },\n    \"trim\": {\n      \"code\": \"\",\n      \"url\": \"\"\n    },\n    \"upholstery\": {\n      \"code\": \"\",\n      \"url\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e998292e-b6fb-4932-8dcc-66bed297b7cd",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No content could be found for your request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fd147771-3260-41d4-bcdf-42ef1cb71948",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3a0f7e3b-eacb-462c-8d88-159d986ec878",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\",\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The requested marketId, modelId and/or configurationId not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0558bc25-ddd7-4190-aabd-33ae73db38a4",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9c22b1c1-3ce3-4c28-b637-204cece9511b",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\",\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "The server encountered an internal error.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "00fbe15a-8541-4733-af0e-34bd0b52477d",
      "documentation": "Returns a URL pointing to an image of the vehicles engine.  These images are available in the resolution 1024x576 px.",
      "method": "get",
      "endpoint": "markets/:marketId/models/:modelId/configurations/:configurationId/images/components/engine",
      "responses": [
        {
          "uuid": "4b8a1bc7-cd8b-45a2-babb-7cf9b3ee9f37",
          "body": "{\n  \"engine\": {\n    \"url\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "869dfef2-0450-4075-896a-7f9d34cd7ab7",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No content could be found for your request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d2338b25-e161-4ceb-922b-bca637b865d8",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c77bc9de-92a7-467e-8ffd-1dad9c65c1a1",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\",\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The requested marketId, modelId and/or configurationId not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "beee3503-fb43-433f-86be-8c61eeea5e0d",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "383726d9-100f-4be2-81c2-e8fc0c4fa94d",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\",\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "The server encountered an internal error.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "03f98c98-7a7a-4a6d-95d0-bcded7597d8d",
      "documentation": "Returns URLs pointing to images of this vehicle's equipments. The images are available in the highest possible resolution (usually 740x416 px).",
      "method": "get",
      "endpoint": "markets/:marketId/models/:modelId/configurations/:configurationId/images/components/equipments",
      "responses": [
        {
          "uuid": "e95a7b26-8779-49b1-84b2-029d47619c2c",
          "body": "{\n  \"equipments\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4424bd9e-9c2a-4380-b994-be3e42943bbd",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No content could be found for your request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a8dc4ec0-682d-4e1e-b6ec-c1d867818ac8",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "24d69a5a-cf79-4e11-a452-41a141355e21",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\",\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The requested marketId, modelId and/or configurationId not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5fc54a05-a709-4a81-837e-f69123a8c947",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2bca0532-874b-4955-84ac-faf87e55a218",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\",\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "The server encountered an internal error.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c2fa5bbb-a719-470c-96f0-c905c1112c13",
      "documentation": "Returns URLs pointing to images of this vehicle's equipments. The images are available in the highest possible resolution (usually 740x416 px).",
      "method": "get",
      "endpoint": "markets/:marketId/models/:modelId/configurations/:configurationId/images/components/equipments/:componentCode",
      "responses": [
        {
          "uuid": "17f678d8-0436-43a2-aa1a-406837b5771d",
          "body": "{\n  \"equipment\": {\n    \"url\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4c1c120b-f2ff-4d12-9a5e-624f10426b88",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No content could be found for your request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4fc31ec0-7216-4b9a-b3b8-479058a39162",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "90b9a0bb-2b53-4772-9e49-49a8ae5e2900",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\",\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The requested marketId, modelId and/or configurationId not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "670273b7-ecb6-4ba6-bd35-1c9eb5ce0f17",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "15c3bdfb-a9e3-4c5c-98b0-6a90c25b0830",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\",\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "The server encountered an internal error.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f4a93f47-5ccc-4c3e-a6f3-2e3dbba80f33",
      "documentation": "Returns URLs pointing to images of this vehicles paint.  These images are available in resolution 800x600 px.  Note there might be two paints (e.g. Smart, 'paint' for body panel and 'paint2' for the tridion cell)",
      "method": "get",
      "endpoint": "markets/:marketId/models/:modelId/configurations/:configurationId/images/components/paint",
      "responses": [
        {
          "uuid": "ba566487-042b-49ca-8623-23032419cd96",
          "body": "{\n  \"paint\": {\n    \"paint1\": {\n      \"code\": \"\",\n      \"url\": \"\"\n    },\n    \"paint2\": {\n      \"code\": \"\",\n      \"url\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d06506d8-9892-4e6a-9dbb-1f3f728f0e3b",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No content could be found for your request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3b606d76-dacf-40f9-bf8f-5b03f3da82c5",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4cff5682-e399-44f4-ba3a-549a9a0edbf7",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\",\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The requested marketId, modelId and/or configurationId not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2444be1c-43d5-4605-a85c-6960583f1a42",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "acc75bef-85b9-44d4-9ae2-15c61daa9de6",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\",\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "The server encountered an internal error.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "326f5a82-746a-44d0-9b5e-02f890961c30",
      "documentation": "Returns a URL pointing to an image of the vehicles rim.  These images are available in the resolution 710x710 px.",
      "method": "get",
      "endpoint": "markets/:marketId/models/:modelId/configurations/:configurationId/images/components/rim",
      "responses": [
        {
          "uuid": "02efafed-deae-454a-8607-1b0863cbac2e",
          "body": "{\n  \"rim\": {\n    \"code\": \"\",\n    \"url\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "48274298-2692-44a7-8267-5db0c45c1e27",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No content could be found for your request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "38f1fdbe-ae24-42f8-a7e6-dffe1a2ba8c1",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4734f4b6-262e-49e2-a792-c4ba8b85d9d7",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\",\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The requested marketId, modelId and/or configurationId not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bf557360-3386-47ee-9dad-e2678cf5818b",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6ddd4304-bfe0-4742-9150-95b2ae5308a1",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\",\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "The server encountered an internal error.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "42a1a9f5-1a10-4441-9158-d0cd06783b17",
      "documentation": "Returns a URL pointing to an image of this vehicles trim.  These images are available in resolution 800x600 px.",
      "method": "get",
      "endpoint": "markets/:marketId/models/:modelId/configurations/:configurationId/images/components/trim",
      "responses": [
        {
          "uuid": "664a15eb-755a-44a3-8c78-98b7450573d8",
          "body": "{\n  \"trim\": {\n    \"code\": \"\",\n    \"url\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "75ef4de5-fa86-411c-be40-ab1d5e545710",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No content could be found for your request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6a1bdd17-db4d-45ac-bf20-679643824a62",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1fc8c8ad-85c7-4a21-a168-c523c8d56828",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\",\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The requested marketId, modelId and/or configurationId not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9d993cfc-67a0-49bf-a10d-b6c013bf4e2e",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3b0416d1-a5cd-4f68-91d8-43f589444233",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\",\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "The server encountered an internal error.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0d01c14a-7de6-4503-aa94-5cf40f067932",
      "documentation": "Returns URLs pointing to images of the vehicle's upholsteries. Tge images are available in the highest possible resolution (usually 800x600 px).",
      "method": "get",
      "endpoint": "markets/:marketId/models/:modelId/configurations/:configurationId/images/components/upholstery",
      "responses": [
        {
          "uuid": "44a6f1f8-44b6-43e8-867d-367d0f57a65a",
          "body": "{\n  \"upholstery\": {\n    \"code\": \"\",\n    \"url\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a8936afb-c72a-49e6-a81a-eaa0ea549306",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No content could be found for your request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9fc7afe8-cc07-4df9-8fb0-8f344d33b4cf",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "30d53249-d076-46b1-ad3a-181cfdb47243",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\",\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The requested marketId, modelId and/or configurationId not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0d0180ab-705c-4775-9577-5f0154f48c0d",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "84d63543-5072-4d51-a25c-6853495ce023",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\",\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "The server encountered an internal error.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e656f647-732d-4cde-a4d0-c6712b67387f",
      "documentation": "Returns URLs pointing to PNG images of a vehicle with a white background.",
      "method": "get",
      "endpoint": "markets/:marketId/models/:modelId/configurations/:configurationId/images/vehicle",
      "responses": [
        {
          "uuid": "042db7b6-87d9-48ae-bcfd-3b501b726351",
          "body": "{\n  \"vehicle\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3606ed22-68ed-4c0d-a6b5-385e186ba395",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No content could be found for your request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7f01ba98-b8ac-4f5f-8627-c68b4780598a",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\",\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "One of the provided parameters was invalid. Verify your query and inspect the global error object in the response for further information.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fa44410e-89dc-4311-95ad-cabfdbaae782",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ccc3e263-d7dc-4bcd-b306-977aa4b50242",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\",\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The requested marketId, modelId and/or configurationId not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b497387d-ea8a-4453-ae3b-d5dc3a613828",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9358e836-ace5-4eb7-b6a8-554c6d28bfaa",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\",\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "The server encountered an internal error.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "57700717-c9c9-4022-94eb-1a58b51671c8",
      "documentation": "Get the selectable components for the given marketId, modelId and configurationId.",
      "method": "get",
      "endpoint": "markets/:marketId/models/:modelId/configurations/:configurationId/selectables",
      "responses": [
        {
          "uuid": "71398cf0-4be6-4c85-ac9a-44900a5e2105",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "14b429f1-b10e-4859-9179-f521aeae01e0",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No content found for requested componentTypes",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f46bc58f-5b94-4098-a15c-1f44bc8234f4",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid parameter was specified:\n * MarketId is not valid\n * ModelId is not valid\n * ConfigurationId is not valid\n * ComponentTypes is not valid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "931bd1e3-221f-4f0d-8f82-42a7ca0799bf",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "90469ae6-5d91-4f47-8374-51c24f27f344",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Market, Model or Configuration not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "777b9176-1154-48fe-889e-3fb6a41a01de",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0913dbb0-72ab-44f4-900e-7b64d7d5f4cf",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "An Error occurred on the server side",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "05e34acd-33f4-479e-90e3-8d47dca13df9",
      "documentation": "Stores the configuration of the given configurationId and modelId",
      "method": "post",
      "endpoint": "markets/:marketId/onlinecode",
      "responses": [
        {
          "uuid": "85d5f610-b8ea-4054-b107-11bb46ec7e60",
          "body": "{\n  \"onlineCode\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6cbb1eaa-903b-4c7b-8301-c6f8239a738a",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid parameter was specified:\n * MarketId is not valid\n * ModelId is not valid\n * ConfigurationId is not valid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2b0e502b-bb51-4a96-86b9-23ffc07f9cc8",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5a90f2b0-a093-451f-b76c-34863ff35498",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Configuration has not been found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "269e6ff9-87b3-4111-8396-291be21ea9f1",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1b14442e-da2b-42a3-af80-42bce944c25d",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "An Error occurred on the server side",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d789dc5a-8e8f-4dbd-aeae-c4e90e492c42",
      "documentation": "Get the configuration of the given onlineCode and marketId.",
      "method": "get",
      "endpoint": "markets/:marketId/onlinecode/:onlineCode",
      "responses": [
        {
          "uuid": "595a4d87-981e-413a-8e9b-3cfdd9d47e05",
          "body": "{\n  \"_links\": {\n    \"imageapi_vehicle\": {\n      \"href\": \"\"\n    },\n    \"selectables\": {\n      \"href\": \"\"\n    },\n    \"self\": {\n      \"href\": \"\"\n    }\n  },\n  \"changeYear\": \"\",\n  \"configurationId\": \"\",\n  \"configurationPrice\": {\n    \"currency\": \"\",\n    \"instalmentPrice\": {{faker 'random.number'}},\n    \"netPrice\": {{faker 'random.number'}},\n    \"price\": {{faker 'random.number'}},\n    \"taxes\": [\n      {\n        \"amount\": {{faker 'random.number'}},\n        \"baseAmount\": {{faker 'random.number'}},\n        \"charge\": {{faker 'random.number'}},\n        \"id\": \"\",\n        \"rate\": {{faker 'random.number'}}\n      }\n    ]\n  },\n  \"initialPrice\": {\n    \"currency\": \"\",\n    \"instalmentPrice\": {{faker 'random.number'}},\n    \"netPrice\": {{faker 'random.number'}},\n    \"price\": {{faker 'random.number'}},\n    \"taxes\": [\n      {\n        \"amount\": {{faker 'random.number'}},\n        \"baseAmount\": {{faker 'random.number'}},\n        \"charge\": {{faker 'random.number'}},\n        \"id\": \"\",\n        \"rate\": {{faker 'random.number'}}\n      }\n    ]\n  },\n  \"marketId\": \"\",\n  \"modelId\": \"\",\n  \"modelYear\": \"\",\n  \"technicalInformation\": {\n    \"acceleration\": {\n      \"unit\": \"\",\n      \"value\": {{faker 'random.number'}}\n    },\n    \"doors\": {{faker 'random.number'}},\n    \"energyEfficiencyClass\": \"\",\n    \"engine\": {\n      \"alternativeFuelType\": \"{{oneOf (array 'NORMAL' 'SUPER' 'SUPERPLUS' 'DIESEL' 'HGAS' 'GAS' 'ELECTRIC' 'FUELCELL' 'UNDEFINED')}}\",\n      \"capacity\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'random.number'}}\n      },\n      \"cylinder\": \"\",\n      \"driveConcept\": \"{{oneOf (array 'COMBUSTOR' 'HYBRID' 'ELECTRIC' 'FUELCELL' 'UNDEFINED')}}\",\n      \"emissionStandard\": \"\",\n      \"engineConcept\": \"{{oneOf (array 'MONO_REGULAR' 'MONO_DIESEL' 'MONO_GAS' 'MONO_ELECTRIC' 'MONO_FUELCELL' 'BI_NGT' 'BI_NGD' 'BI_MILD' 'BI_PLUGIN' 'MONO_UNDEFINED' 'BI_UNDEFINED' 'BI_HYBRID_UNDEFINED' 'BI_COMBUSTION_UNDEFINED' 'UNDEFINED')}}\",\n      \"fuelEconomy\": {\n        \"consumptionOfElectricityMax\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"consumptionOfElectricityMin\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"emissionCO2Max\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"emissionCO2Min\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"fuelConsumptionCityMax\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"fuelConsumptionCityMin\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"fuelConsumptionCombinedMax\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"fuelConsumptionCombinedMin\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"fuelConsumptionElectricity\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"fuelConsumptionOverlandMax\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"fuelConsumptionOverlandMin\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        }\n      },\n      \"fuelType\": \"{{oneOf (array 'NORMAL' 'SUPER' 'SUPERPLUS' 'DIESEL' 'HGAS' 'GAS' 'ELECTRIC' 'FUELCELL' 'UNDEFINED')}}\",\n      \"powerHp\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'random.number'}}\n      },\n      \"powerHybridExtensionHp\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'random.number'}}\n      },\n      \"powerHybridExtensionKw\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'random.number'}}\n      },\n      \"powerKw\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'random.number'}}\n      }\n    },\n    \"nedc\": {\n      \"consumption\": {\n        \"city\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"combined\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"country\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"electric\": {\n          \"individual\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"max\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"min\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          }\n        },\n        \"weighted\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        }\n      },\n      \"electricRange\": {\n        \"individual\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"max\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"min\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        }\n      },\n      \"emission\": {\n        \"city\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"combined\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"country\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"weighted\": {\n          \"individual\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"max\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"min\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          }\n        }\n      },\n      \"weight\": {\n        \"individual\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"max\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"min\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        }\n      }\n    },\n    \"seats\": {{faker 'random.number'}},\n    \"topSpeed\": {\n      \"unit\": \"\",\n      \"value\": {{faker 'random.number'}}\n    },\n    \"transmission\": {\n      \"code\": \"\",\n      \"codeType\": \"\",\n      \"name\": \"\"\n    },\n    \"wltp\": {\n      \"consumption\": {\n        \"chargeDeplete\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"chargeDepleteCop\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"extraHigh\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"high\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"low\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"medium\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"total\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"weighted\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        }\n      },\n      \"emission\": {\n        \"chargeDeplete\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"chargeDepleteCop\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"chargeDepleteWeighted\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"extraHigh\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"high\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"low\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"lowMid\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"medium\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"total\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"weighted\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        }\n      }\n    }\n  },\n  \"vehicleComponents\": [\n    {\n      \"_links\": {\n        \"imageapi_component\": {\n          \"href\": \"\"\n        }\n      },\n      \"code\": \"\",\n      \"codeType\": \"\",\n      \"componentSortId\": {{faker 'random.number'}},\n      \"componentType\": \"{{oneOf (array 'ANY' 'WHEELS' 'PAINTS' 'UPHOLSTERIES' 'TRIMS' 'PACKAGES' 'LINES' 'SPECIAL_EDITION' 'SPECIAL_EQUIPMENT')}}\",\n      \"description\": \"\",\n      \"fixed\": {{faker 'random.boolean'}},\n      \"hidden\": {{faker 'random.boolean'}},\n      \"id\": \"\",\n      \"name\": \"\",\n      \"priceInformation\": {\n        \"currency\": \"\",\n        \"instalmentPrice\": {{faker 'random.number'}},\n        \"netPrice\": {{faker 'random.number'}},\n        \"price\": {{faker 'random.number'}},\n        \"taxes\": [\n          {\n            \"amount\": {{faker 'random.number'}},\n            \"baseAmount\": {{faker 'random.number'}},\n            \"charge\": {{faker 'random.number'}},\n            \"id\": \"\",\n            \"rate\": {{faker 'random.number'}}\n          }\n        ]\n      },\n      \"pseudoCode\": {{faker 'random.boolean'}},\n      \"selected\": {{faker 'random.boolean'}},\n      \"standard\": {{faker 'random.boolean'}}\n    }\n  ],\n  \"wltpConfiguration\": {{faker 'random.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3c5028b6-90e8-4913-83fd-1a766783c7f6",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid parameter was specified:\n * MarketId is not valid\n * OnlineCode is not valid\n * Fields is not valid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "59a55a6c-a443-4fa2-83d7-aaaf70984f0c",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5ff89c79-944b-4a12-892b-4f49b9ac2b76",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Configuration or Market has not been found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a13fcc39-dbef-4e63-96a8-76b638f7b4c1",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f7e9896b-4cf8-4e6c-81bd-15040406209c",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "An Error occurred on the server side",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1c6fe50d-1f21-40b7-9068-8dbce2352fa0",
      "documentation": "Get all configured active product groups for the given marketId.",
      "method": "get",
      "endpoint": "markets/:marketId/productgroups",
      "responses": [
        {
          "uuid": "b2441f7c-fe2d-4950-9f98-50295eac1388",
          "body": "{\n  \"_links\": {\n    \"models\": {\n      \"href\": \"\"\n    },\n    \"self\": {\n      \"href\": \"\"\n    }\n  },\n  \"market\": {\n    \"_links\": {\n      \"bodies\": {\n        \"href\": \"\"\n      },\n      \"classes\": {\n        \"href\": \"\"\n      },\n      \"models\": {\n        \"href\": \"\"\n      },\n      \"productgroups\": {\n        \"href\": \"\"\n      },\n      \"self\": {\n        \"href\": \"\"\n      }\n    },\n    \"country\": \"\",\n    \"language\": \"\",\n    \"marketId\": \"\"\n  },\n  \"productGroups\": [\n    \"{{oneOf (array 'PKW' 'VAN' 'SMART')}}\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bb2dc28b-0189-45f1-8da3-554787ae25ad",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "MarketId is not valid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "21b2a46d-bc63-4901-8089-d2c2183a2727",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9dd99c00-2a0d-441d-8f5e-ca3eba71f5fc",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Market not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4f1ec42e-014f-4439-8aab-618a9cabfea4",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1487aca3-aaf6-489a-92fd-90b3334fc2f3",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "An Error occurred on the server side",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}