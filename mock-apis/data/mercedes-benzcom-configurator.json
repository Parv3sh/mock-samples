{
  "uuid": "e035a814-74a1-4a91-9538-2fd43cdb4c63",
  "lastMigration": 19,
  "name": "Car Configurator",
  "endpointPrefix": "configurator_tryout/v1",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "139b571c-e478-45e5-b6c1-0a49bf3dd0a7",
      "documentation": "Get all available markets.",
      "method": "get",
      "endpoint": "markets",
      "responses": [
        {
          "uuid": "88718fdf-5722-4410-a243-a13d572337d0",
          "body": "[\n  {\n    \"_links\": {\n      \"bodies\": {\n        \"href\": \"\"\n      },\n      \"classes\": {\n        \"href\": \"\"\n      },\n      \"models\": {\n        \"href\": \"\"\n      },\n      \"productgroups\": {\n        \"href\": \"\"\n      },\n      \"self\": {\n        \"href\": \"\"\n      }\n    },\n    \"country\": \"\",\n    \"language\": \"\",\n    \"marketId\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e4e7e6eb-8c8d-4c7b-bc57-b95e9a625c47",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No content found for requested parameters language and/or country",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b39c7c82-b700-4699-90ac-7567ab578748",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid parameter was specified:\n * Language parameter is not valid\n * Country parameter is not valid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7a3adc19-62b6-47bc-8ede-a366ae2135f6",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6e91fde6-9fa7-44f3-a7b1-8e59c8ac2f10",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b87aa4d0-dc2f-47ef-8cea-dd7539178069",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "An Error occurred on the server side",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9eaa486b-2176-42b8-b9d9-d50102a093ba",
      "documentation": "Get the market with the given marketId.",
      "method": "get",
      "endpoint": "markets/:marketId",
      "responses": [
        {
          "uuid": "3c8bf2b0-26f4-4900-ac9b-87b78e498c73",
          "body": "{\n  \"_links\": {\n    \"bodies\": {\n      \"href\": \"\"\n    },\n    \"classes\": {\n      \"href\": \"\"\n    },\n    \"models\": {\n      \"href\": \"\"\n    },\n    \"productgroups\": {\n      \"href\": \"\"\n    },\n    \"self\": {\n      \"href\": \"\"\n    }\n  },\n  \"country\": \"\",\n  \"language\": \"\",\n  \"marketId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f41fd050-8f63-4cd8-b9a1-7e0ff75f3b81",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "MarketId is not valid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6d93fef3-35d9-43ea-93db-25ab8bdd906f",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "42ea15f8-e20b-4b9a-87a6-353d54a73078",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Market not found for requested marketId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2586bb72-a951-4db7-a447-c956ecef4780",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0c6f705f-dab3-4318-99af-1b4afafce26a",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "An Error occurred on the server side",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f4bfbf15-7531-42dd-81bb-24f423ca9ab8",
      "documentation": "Get all available bodies for the given marketId.",
      "method": "get",
      "endpoint": "markets/:marketId/bodies",
      "responses": [
        {
          "uuid": "788ae11d-570d-47e9-8c8e-6ea6d257f1f2",
          "body": "[\n  {\n    \"_links\": {\n      \"models\": {\n        \"href\": \"\"\n      },\n      \"self\": {\n        \"href\": \"\"\n      }\n    },\n    \"bodyId\": \"\",\n    \"bodyName\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "39818318-4bc2-4e35-8d84-0b10d7571cc6",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No content found for requested parameters classId, bodyId and/or productGroups",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f520d090-c57a-4ce9-b9af-3086190ea6e9",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid parameter was specified:\n * MarketId is not valid\n * ClassId is not valid\n * BodyId is not valid\n * ProductGroups is not valid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e840c3c2-2da1-411e-8088-3009f5cfcbc1",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "12ec6ba3-55e4-41be-85ef-c953bf53ffa3",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Market not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d9e56226-ab83-4cfe-8041-0642e432470f",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "16f977aa-8c8c-4726-aa4c-e54e91cd3112",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "An Error occurred on the server side",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8853c04a-6d57-442e-a576-5035a66ab36d",
      "documentation": "Get the body for the given marketId and bodyId.",
      "method": "get",
      "endpoint": "markets/:marketId/bodies/:bodyId",
      "responses": [
        {
          "uuid": "86ba587a-058b-4a9c-bda7-0d0f08664db6",
          "body": "{\n  \"_links\": {\n    \"models\": {\n      \"href\": \"\"\n    },\n    \"self\": {\n      \"href\": \"\"\n    }\n  },\n  \"bodyId\": \"\",\n  \"bodyName\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3959b8de-bf59-4761-805c-db9c43fee729",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid parameter was specified:\n * MarketId is not valid\n * BodyId is not valid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "599bcfed-363d-4386-8ed8-5610bd144ed8",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a8bd2fdc-0a09-4fe0-ae85-dd34adf32d59",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Market or VehicleBody not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3bc311d2-bc17-444c-b27e-65700b91b517",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "30376f65-b20c-4a39-8d45-600f5b445b9b",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "An Error occurred on the server side",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3c9133e8-cfff-411f-803b-0f6b8a95cc0e",
      "documentation": "Get all available classes for the given marketId.",
      "method": "get",
      "endpoint": "markets/:marketId/classes",
      "responses": [
        {
          "uuid": "8fd6a113-e118-4e9e-89e5-fdbb5710be1f",
          "body": "[\n  {\n    \"_links\": {\n      \"models\": {\n        \"href\": \"\"\n      },\n      \"self\": {\n        \"href\": \"\"\n      }\n    },\n    \"classId\": \"\",\n    \"className\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "727901ff-eaa7-419d-bbf7-950157fad03d",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No content found for requested parameters classId, bodyId and/or productGroups",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "edece5b9-c66b-4d76-9b76-b2e8e7adadc4",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid parameter was specified:\n * MarketId is not valid\n * ClassId is not valid\n * BodyId is not valid\n * Product group is not valid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c6ce6ba2-c654-43d5-acfd-839476f2f3ca",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5230c18c-4a68-4f2b-87f8-4b992f6a248f",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Market has not been found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e277669f-9258-4abe-ba9b-a8478d27caf7",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7928545a-d5dd-415d-a9c9-05a8f6f661ef",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "An Error occurred on the server side",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "97bc48e7-e466-443e-a5ad-891bbf9fdcba",
      "documentation": "Get the class for the given marketId and classId.",
      "method": "get",
      "endpoint": "markets/:marketId/classes/:classId",
      "responses": [
        {
          "uuid": "95bd8c49-2070-4613-8e0d-53a60f178293",
          "body": "{\n  \"_links\": {\n    \"models\": {\n      \"href\": \"\"\n    },\n    \"self\": {\n      \"href\": \"\"\n    }\n  },\n  \"classId\": \"\",\n  \"className\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cdcbb4ba-f072-455e-9238-de846e250474",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid parameter was specified:\n * MarketId is not valid\n * ClassId is not valid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4e3e6392-2d52-4d8c-b48f-db2a50ba3c6f",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cb869480-6063-4669-bcc8-f1cc06d9c501",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Market or VehicleClass not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ce087848-663b-4cdc-8faa-57280da65874",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5cf066a8-5dd6-4da5-b5f6-1bb53f13b9a6",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "An Error occurred on the server side",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "210f61a5-efc4-43ad-bcfd-c7d85a25cb58",
      "documentation": "Get all available models for the given marketId.",
      "method": "get",
      "endpoint": "markets/:marketId/models",
      "responses": [
        {
          "uuid": "82196983-de42-4583-b736-6802c8937bcc",
          "body": "[\n  {\n    \"_links\": {\n      \"configuration\": {\n        \"href\": \"\"\n      },\n      \"self\": {\n        \"href\": \"\"\n      }\n    },\n    \"baumuster\": \"\",\n    \"modelId\": \"\",\n    \"name\": \"\",\n    \"nationalSalesType\": \"\",\n    \"priceInformation\": {\n      \"currency\": \"\",\n      \"instalmentPrice\": {{faker 'random.number'}},\n      \"netPrice\": {{faker 'random.number'}},\n      \"price\": {{faker 'random.number'}},\n      \"taxes\": [\n        {\n          \"amount\": {{faker 'random.number'}},\n          \"baseAmount\": {{faker 'random.number'}},\n          \"charge\": {{faker 'random.number'}},\n          \"id\": \"\",\n          \"rate\": {{faker 'random.number'}}\n        }\n      ]\n    },\n    \"productGroup\": \"{{oneOf (array 'PKW' 'VAN' 'SMART')}}\",\n    \"shortName\": \"\",\n    \"vehicleBody\": {\n      \"_links\": {\n        \"models\": {\n          \"href\": \"\"\n        },\n        \"self\": {\n          \"href\": \"\"\n        }\n      },\n      \"bodyId\": \"\",\n      \"bodyName\": \"\"\n    },\n    \"vehicleClass\": {\n      \"_links\": {\n        \"models\": {\n          \"href\": \"\"\n        },\n        \"self\": {\n          \"href\": \"\"\n        }\n      },\n      \"classId\": \"\",\n      \"className\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "900b2872-37a9-414a-85e7-7b9f7a4d63da",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No content found for requested parameters classId, bodyId, baumuster4prefix, baumuster, nationalSalesType and/or productGroups",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c9919b75-e4df-4c4b-b6b8-c7416823edf6",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid parameter was specified:\n * MarketId is not valid\n * ClassId is not valid\n * BodyId is not valid\n * Product group is not valid\n * baumuster4prefix is not valid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "91cf74f8-a3a4-4cc2-9e04-b4e5f780e8ae",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7e6b0935-491b-4816-b460-141ff38247ac",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Market not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9e14ebd2-eb9f-4cf7-97d9-cd7008ba5766",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "62513ec1-a9e5-476d-b159-018dcb1fd6cd",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "An Error occurred on the server side",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8f609dcb-9c5d-4bc3-8d8f-e03e7a2be7d8",
      "documentation": "Get the model for the given marketId and modelId.",
      "method": "get",
      "endpoint": "markets/:marketId/models/:modelId",
      "responses": [
        {
          "uuid": "e33f95b7-8b63-4daa-9672-a9e385da3305",
          "body": "{\n  \"_links\": {\n    \"configuration\": {\n      \"href\": \"\"\n    },\n    \"self\": {\n      \"href\": \"\"\n    }\n  },\n  \"baumuster\": \"\",\n  \"modelId\": \"\",\n  \"name\": \"\",\n  \"nationalSalesType\": \"\",\n  \"priceInformation\": {\n    \"currency\": \"\",\n    \"instalmentPrice\": {{faker 'random.number'}},\n    \"netPrice\": {{faker 'random.number'}},\n    \"price\": {{faker 'random.number'}},\n    \"taxes\": [\n      {\n        \"amount\": {{faker 'random.number'}},\n        \"baseAmount\": {{faker 'random.number'}},\n        \"charge\": {{faker 'random.number'}},\n        \"id\": \"\",\n        \"rate\": {{faker 'random.number'}}\n      }\n    ]\n  },\n  \"productGroup\": \"{{oneOf (array 'PKW' 'VAN' 'SMART')}}\",\n  \"shortName\": \"\",\n  \"vehicleBody\": {\n    \"_links\": {\n      \"models\": {\n        \"href\": \"\"\n      },\n      \"self\": {\n        \"href\": \"\"\n      }\n    },\n    \"bodyId\": \"\",\n    \"bodyName\": \"\"\n  },\n  \"vehicleClass\": {\n    \"_links\": {\n      \"models\": {\n        \"href\": \"\"\n      },\n      \"self\": {\n        \"href\": \"\"\n      }\n    },\n    \"classId\": \"\",\n    \"className\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d1a91b1d-1348-4c3b-82f8-ea11aa04cb7a",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid parameter was specified:\n * MarketId is not valid\n * ModelId is not valid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4498740e-92cc-431f-b792-2708ef5259e2",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "928d2bed-4e5c-4619-ba97-f16d964d3354",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Market or Model not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "78decb5e-a957-4d23-83c8-09e7230f4bdf",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4a2a4eb1-1098-4feb-9c7c-e70359f4f0d8",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "An Error occurred on the server side",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "97821d9c-2c81-400d-942d-4efc867c1c87",
      "documentation": "Get the initial configuration for the given marketId and modelId.",
      "method": "get",
      "endpoint": "markets/:marketId/models/:modelId/configurations/initial",
      "responses": [
        {
          "uuid": "47cd30bb-8702-4529-a76f-b74030c15cf9",
          "body": "{\n  \"_links\": {\n    \"imageapi_vehicle\": {\n      \"href\": \"\"\n    },\n    \"selectables\": {\n      \"href\": \"\"\n    },\n    \"self\": {\n      \"href\": \"\"\n    }\n  },\n  \"changeYear\": \"\",\n  \"configurationId\": \"\",\n  \"configurationPrice\": {\n    \"currency\": \"\",\n    \"instalmentPrice\": {{faker 'random.number'}},\n    \"netPrice\": {{faker 'random.number'}},\n    \"price\": {{faker 'random.number'}},\n    \"taxes\": [\n      {\n        \"amount\": {{faker 'random.number'}},\n        \"baseAmount\": {{faker 'random.number'}},\n        \"charge\": {{faker 'random.number'}},\n        \"id\": \"\",\n        \"rate\": {{faker 'random.number'}}\n      }\n    ]\n  },\n  \"initialPrice\": {\n    \"currency\": \"\",\n    \"instalmentPrice\": {{faker 'random.number'}},\n    \"netPrice\": {{faker 'random.number'}},\n    \"price\": {{faker 'random.number'}},\n    \"taxes\": [\n      {\n        \"amount\": {{faker 'random.number'}},\n        \"baseAmount\": {{faker 'random.number'}},\n        \"charge\": {{faker 'random.number'}},\n        \"id\": \"\",\n        \"rate\": {{faker 'random.number'}}\n      }\n    ]\n  },\n  \"marketId\": \"\",\n  \"modelId\": \"\",\n  \"modelYear\": \"\",\n  \"technicalInformation\": {\n    \"acceleration\": {\n      \"unit\": \"\",\n      \"value\": {{faker 'random.number'}}\n    },\n    \"doors\": {{faker 'random.number'}},\n    \"energyEfficiencyClass\": \"\",\n    \"engine\": {\n      \"alternativeFuelType\": \"{{oneOf (array 'NORMAL' 'SUPER' 'SUPERPLUS' 'DIESEL' 'HGAS' 'GAS' 'ELECTRIC' 'FUELCELL' 'UNDEFINED')}}\",\n      \"capacity\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'random.number'}}\n      },\n      \"cylinder\": \"\",\n      \"driveConcept\": \"{{oneOf (array 'COMBUSTOR' 'HYBRID' 'ELECTRIC' 'FUELCELL' 'UNDEFINED')}}\",\n      \"emissionStandard\": \"\",\n      \"engineConcept\": \"{{oneOf (array 'MONO_REGULAR' 'MONO_DIESEL' 'MONO_GAS' 'MONO_ELECTRIC' 'MONO_FUELCELL' 'BI_NGT' 'BI_NGD' 'BI_MILD' 'BI_PLUGIN' 'MONO_UNDEFINED' 'BI_UNDEFINED' 'BI_HYBRID_UNDEFINED' 'BI_COMBUSTION_UNDEFINED' 'UNDEFINED')}}\",\n      \"fuelEconomy\": {\n        \"consumptionOfElectricityMax\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"consumptionOfElectricityMin\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"emissionCO2Max\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"emissionCO2Min\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"fuelConsumptionCityMax\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"fuelConsumptionCityMin\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"fuelConsumptionCombinedMax\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"fuelConsumptionCombinedMin\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"fuelConsumptionElectricity\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"fuelConsumptionOverlandMax\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"fuelConsumptionOverlandMin\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        }\n      },\n      \"fuelType\": \"{{oneOf (array 'NORMAL' 'SUPER' 'SUPERPLUS' 'DIESEL' 'HGAS' 'GAS' 'ELECTRIC' 'FUELCELL' 'UNDEFINED')}}\",\n      \"powerHp\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'random.number'}}\n      },\n      \"powerHybridExtensionHp\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'random.number'}}\n      },\n      \"powerHybridExtensionKw\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'random.number'}}\n      },\n      \"powerKw\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'random.number'}}\n      }\n    },\n    \"nedc\": {\n      \"consumption\": {\n        \"city\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"combined\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"country\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"electric\": {\n          \"individual\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"max\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"min\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          }\n        },\n        \"weighted\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        }\n      },\n      \"electricRange\": {\n        \"individual\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"max\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"min\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        }\n      },\n      \"emission\": {\n        \"city\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"combined\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"country\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"weighted\": {\n          \"individual\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"max\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"min\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          }\n        }\n      },\n      \"weight\": {\n        \"individual\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"max\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"min\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        }\n      }\n    },\n    \"seats\": {{faker 'random.number'}},\n    \"topSpeed\": {\n      \"unit\": \"\",\n      \"value\": {{faker 'random.number'}}\n    },\n    \"transmission\": {\n      \"code\": \"\",\n      \"codeType\": \"\",\n      \"name\": \"\"\n    },\n    \"wltp\": {\n      \"consumption\": {\n        \"chargeDeplete\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"chargeDepleteCop\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"extraHigh\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"high\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"low\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"medium\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"total\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"weighted\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        }\n      },\n      \"emission\": {\n        \"chargeDeplete\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"chargeDepleteCop\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"chargeDepleteWeighted\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"extraHigh\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"high\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"low\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"lowMid\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"medium\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"total\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"weighted\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        }\n      }\n    }\n  },\n  \"vehicleComponents\": [\n    {\n      \"_links\": {\n        \"imageapi_component\": {\n          \"href\": \"\"\n        }\n      },\n      \"code\": \"\",\n      \"codeType\": \"\",\n      \"componentSortId\": {{faker 'random.number'}},\n      \"componentType\": \"{{oneOf (array 'ANY' 'WHEELS' 'PAINTS' 'UPHOLSTERIES' 'TRIMS' 'PACKAGES' 'LINES' 'SPECIAL_EDITION' 'SPECIAL_EQUIPMENT')}}\",\n      \"description\": \"\",\n      \"fixed\": {{faker 'random.boolean'}},\n      \"hidden\": {{faker 'random.boolean'}},\n      \"id\": \"\",\n      \"name\": \"\",\n      \"priceInformation\": {\n        \"currency\": \"\",\n        \"instalmentPrice\": {{faker 'random.number'}},\n        \"netPrice\": {{faker 'random.number'}},\n        \"price\": {{faker 'random.number'}},\n        \"taxes\": [\n          {\n            \"amount\": {{faker 'random.number'}},\n            \"baseAmount\": {{faker 'random.number'}},\n            \"charge\": {{faker 'random.number'}},\n            \"id\": \"\",\n            \"rate\": {{faker 'random.number'}}\n          }\n        ]\n      },\n      \"pseudoCode\": {{faker 'random.boolean'}},\n      \"selected\": {{faker 'random.boolean'}},\n      \"standard\": {{faker 'random.boolean'}}\n    }\n  ],\n  \"wltpConfiguration\": {{faker 'random.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "50c5976f-2806-43b1-8256-bd63cc45a40c",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid parameter was specified:\n * MarketId is not valid\n * ModelId is not valid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "728734d3-ed44-4664-89d7-4c1bda198e3b",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5c829508-41b2-43c7-8c1c-ae199ae6a85a",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Market or Model not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "14cad6fc-0a8a-490b-a02e-655537087558",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e2eb1fee-3065-4c7f-9207-0fee84bc1811",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "An Error occurred on the server side",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "196bed00-7e07-4876-8cbc-9918e19cd547",
      "documentation": "Get the configuration for the given marketId, modelId and configurationId.",
      "method": "get",
      "endpoint": "markets/:marketId/models/:modelId/configurations/:configurationId",
      "responses": [
        {
          "uuid": "5829db02-e246-43da-be05-0219d42877a7",
          "body": "{\n  \"_links\": {\n    \"imageapi_vehicle\": {\n      \"href\": \"\"\n    },\n    \"selectables\": {\n      \"href\": \"\"\n    },\n    \"self\": {\n      \"href\": \"\"\n    }\n  },\n  \"changeYear\": \"\",\n  \"configurationId\": \"\",\n  \"configurationPrice\": {\n    \"currency\": \"\",\n    \"instalmentPrice\": {{faker 'random.number'}},\n    \"netPrice\": {{faker 'random.number'}},\n    \"price\": {{faker 'random.number'}},\n    \"taxes\": [\n      {\n        \"amount\": {{faker 'random.number'}},\n        \"baseAmount\": {{faker 'random.number'}},\n        \"charge\": {{faker 'random.number'}},\n        \"id\": \"\",\n        \"rate\": {{faker 'random.number'}}\n      }\n    ]\n  },\n  \"initialPrice\": {\n    \"currency\": \"\",\n    \"instalmentPrice\": {{faker 'random.number'}},\n    \"netPrice\": {{faker 'random.number'}},\n    \"price\": {{faker 'random.number'}},\n    \"taxes\": [\n      {\n        \"amount\": {{faker 'random.number'}},\n        \"baseAmount\": {{faker 'random.number'}},\n        \"charge\": {{faker 'random.number'}},\n        \"id\": \"\",\n        \"rate\": {{faker 'random.number'}}\n      }\n    ]\n  },\n  \"marketId\": \"\",\n  \"modelId\": \"\",\n  \"modelYear\": \"\",\n  \"technicalInformation\": {\n    \"acceleration\": {\n      \"unit\": \"\",\n      \"value\": {{faker 'random.number'}}\n    },\n    \"doors\": {{faker 'random.number'}},\n    \"energyEfficiencyClass\": \"\",\n    \"engine\": {\n      \"alternativeFuelType\": \"{{oneOf (array 'NORMAL' 'SUPER' 'SUPERPLUS' 'DIESEL' 'HGAS' 'GAS' 'ELECTRIC' 'FUELCELL' 'UNDEFINED')}}\",\n      \"capacity\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'random.number'}}\n      },\n      \"cylinder\": \"\",\n      \"driveConcept\": \"{{oneOf (array 'COMBUSTOR' 'HYBRID' 'ELECTRIC' 'FUELCELL' 'UNDEFINED')}}\",\n      \"emissionStandard\": \"\",\n      \"engineConcept\": \"{{oneOf (array 'MONO_REGULAR' 'MONO_DIESEL' 'MONO_GAS' 'MONO_ELECTRIC' 'MONO_FUELCELL' 'BI_NGT' 'BI_NGD' 'BI_MILD' 'BI_PLUGIN' 'MONO_UNDEFINED' 'BI_UNDEFINED' 'BI_HYBRID_UNDEFINED' 'BI_COMBUSTION_UNDEFINED' 'UNDEFINED')}}\",\n      \"fuelEconomy\": {\n        \"consumptionOfElectricityMax\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"consumptionOfElectricityMin\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"emissionCO2Max\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"emissionCO2Min\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"fuelConsumptionCityMax\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"fuelConsumptionCityMin\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"fuelConsumptionCombinedMax\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"fuelConsumptionCombinedMin\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"fuelConsumptionElectricity\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"fuelConsumptionOverlandMax\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"fuelConsumptionOverlandMin\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        }\n      },\n      \"fuelType\": \"{{oneOf (array 'NORMAL' 'SUPER' 'SUPERPLUS' 'DIESEL' 'HGAS' 'GAS' 'ELECTRIC' 'FUELCELL' 'UNDEFINED')}}\",\n      \"powerHp\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'random.number'}}\n      },\n      \"powerHybridExtensionHp\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'random.number'}}\n      },\n      \"powerHybridExtensionKw\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'random.number'}}\n      },\n      \"powerKw\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'random.number'}}\n      }\n    },\n    \"nedc\": {\n      \"consumption\": {\n        \"city\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"combined\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"country\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"electric\": {\n          \"individual\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"max\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"min\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          }\n        },\n        \"weighted\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        }\n      },\n      \"electricRange\": {\n        \"individual\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"max\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"min\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        }\n      },\n      \"emission\": {\n        \"city\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"combined\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"country\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"weighted\": {\n          \"individual\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"max\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"min\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          }\n        }\n      },\n      \"weight\": {\n        \"individual\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"max\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"min\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        }\n      }\n    },\n    \"seats\": {{faker 'random.number'}},\n    \"topSpeed\": {\n      \"unit\": \"\",\n      \"value\": {{faker 'random.number'}}\n    },\n    \"transmission\": {\n      \"code\": \"\",\n      \"codeType\": \"\",\n      \"name\": \"\"\n    },\n    \"wltp\": {\n      \"consumption\": {\n        \"chargeDeplete\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"chargeDepleteCop\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"extraHigh\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"high\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"low\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"medium\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"total\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"weighted\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        }\n      },\n      \"emission\": {\n        \"chargeDeplete\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"chargeDepleteCop\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"chargeDepleteWeighted\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"extraHigh\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"high\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"low\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"lowMid\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"medium\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"total\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"weighted\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        }\n      }\n    }\n  },\n  \"vehicleComponents\": [\n    {\n      \"_links\": {\n        \"imageapi_component\": {\n          \"href\": \"\"\n        }\n      },\n      \"code\": \"\",\n      \"codeType\": \"\",\n      \"componentSortId\": {{faker 'random.number'}},\n      \"componentType\": \"{{oneOf (array 'ANY' 'WHEELS' 'PAINTS' 'UPHOLSTERIES' 'TRIMS' 'PACKAGES' 'LINES' 'SPECIAL_EDITION' 'SPECIAL_EQUIPMENT')}}\",\n      \"description\": \"\",\n      \"fixed\": {{faker 'random.boolean'}},\n      \"hidden\": {{faker 'random.boolean'}},\n      \"id\": \"\",\n      \"name\": \"\",\n      \"priceInformation\": {\n        \"currency\": \"\",\n        \"instalmentPrice\": {{faker 'random.number'}},\n        \"netPrice\": {{faker 'random.number'}},\n        \"price\": {{faker 'random.number'}},\n        \"taxes\": [\n          {\n            \"amount\": {{faker 'random.number'}},\n            \"baseAmount\": {{faker 'random.number'}},\n            \"charge\": {{faker 'random.number'}},\n            \"id\": \"\",\n            \"rate\": {{faker 'random.number'}}\n          }\n        ]\n      },\n      \"pseudoCode\": {{faker 'random.boolean'}},\n      \"selected\": {{faker 'random.boolean'}},\n      \"standard\": {{faker 'random.boolean'}}\n    }\n  ],\n  \"wltpConfiguration\": {{faker 'random.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f02576e2-5144-410b-9369-848aecb1283f",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid parameter was specified:\n * MarketId is not valid\n * ModelId is not valid\n * ConfigurationId is not valid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "24c70591-5120-4c8c-9699-05613955d028",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cd5e9b98-a323-474c-886b-03dbba6ee404",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Market, Model or Configuration not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "40e64106-d890-4230-9a2a-668f007d686a",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "729312a5-1c01-43c5-9b22-b43c53028aed",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "An Error occurred on the server side",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f4fa11dd-7748-4300-9637-cb1d5c17c032",
      "documentation": "Get the alternatives for the given marketId, modelId, configurationId and componentList.",
      "method": "get",
      "endpoint": "markets/:marketId/models/:modelId/configurations/:configurationId/alternatives/:componentList",
      "responses": [
        {
          "uuid": "20cc0726-e94b-4248-a822-23f878c1638c",
          "body": "[\n  {\n    \"_links\": {\n      \"imageapi_vehicle\": {\n        \"href\": \"\"\n      },\n      \"selectables\": {\n        \"href\": \"\"\n      },\n      \"self\": {\n        \"href\": \"\"\n      }\n    },\n    \"addedComponents\": [\n      {\n        \"_links\": {\n          \"imageapi_component\": {\n            \"href\": \"\"\n          }\n        },\n        \"code\": \"\",\n        \"codeType\": \"\",\n        \"componentSortId\": {{faker 'random.number'}},\n        \"componentType\": \"{{oneOf (array 'ANY' 'WHEELS' 'PAINTS' 'UPHOLSTERIES' 'TRIMS' 'PACKAGES' 'LINES' 'SPECIAL_EDITION' 'SPECIAL_EQUIPMENT')}}\",\n        \"description\": \"\",\n        \"fixed\": {{faker 'random.boolean'}},\n        \"hidden\": {{faker 'random.boolean'}},\n        \"id\": \"\",\n        \"name\": \"\",\n        \"priceInformation\": {\n          \"currency\": \"\",\n          \"instalmentPrice\": {{faker 'random.number'}},\n          \"netPrice\": {{faker 'random.number'}},\n          \"price\": {{faker 'random.number'}},\n          \"taxes\": [\n            {\n              \"amount\": {{faker 'random.number'}},\n              \"baseAmount\": {{faker 'random.number'}},\n              \"charge\": {{faker 'random.number'}},\n              \"id\": \"\",\n              \"rate\": {{faker 'random.number'}}\n            }\n          ]\n        },\n        \"pseudoCode\": {{faker 'random.boolean'}},\n        \"selected\": {{faker 'random.boolean'}},\n        \"standard\": {{faker 'random.boolean'}}\n      }\n    ],\n    \"configurationId\": \"\",\n    \"marketId\": \"\",\n    \"modelId\": \"\",\n    \"priceInformation\": {},\n    \"removedComponents\": [\n      {\n        \"_links\": {\n          \"imageapi_component\": {\n            \"href\": \"\"\n          }\n        },\n        \"code\": \"\",\n        \"codeType\": \"\",\n        \"componentSortId\": {{faker 'random.number'}},\n        \"componentType\": \"{{oneOf (array 'ANY' 'WHEELS' 'PAINTS' 'UPHOLSTERIES' 'TRIMS' 'PACKAGES' 'LINES' 'SPECIAL_EDITION' 'SPECIAL_EQUIPMENT')}}\",\n        \"description\": \"\",\n        \"fixed\": {{faker 'random.boolean'}},\n        \"hidden\": {{faker 'random.boolean'}},\n        \"id\": \"\",\n        \"name\": \"\",\n        \"priceInformation\": {\n          \"currency\": \"\",\n          \"instalmentPrice\": {{faker 'random.number'}},\n          \"netPrice\": {{faker 'random.number'}},\n          \"price\": {{faker 'random.number'}},\n          \"taxes\": [\n            {\n              \"amount\": {{faker 'random.number'}},\n              \"baseAmount\": {{faker 'random.number'}},\n              \"charge\": {{faker 'random.number'}},\n              \"id\": \"\",\n              \"rate\": {{faker 'random.number'}}\n            }\n          ]\n        },\n        \"pseudoCode\": {{faker 'random.boolean'}},\n        \"selected\": {{faker 'random.boolean'}},\n        \"standard\": {{faker 'random.boolean'}}\n      }\n    ],\n    \"updatedComponents\": [\n      {\n        \"_links\": {\n          \"imageapi_component\": {\n            \"href\": \"\"\n          }\n        },\n        \"code\": \"\",\n        \"codeType\": \"\",\n        \"componentSortId\": {{faker 'random.number'}},\n        \"componentType\": \"{{oneOf (array 'ANY' 'WHEELS' 'PAINTS' 'UPHOLSTERIES' 'TRIMS' 'PACKAGES' 'LINES' 'SPECIAL_EDITION' 'SPECIAL_EQUIPMENT')}}\",\n        \"description\": \"\",\n        \"fixed\": {{faker 'random.boolean'}},\n        \"hidden\": {{faker 'random.boolean'}},\n        \"id\": \"\",\n        \"name\": \"\",\n        \"priceInformation\": {\n          \"currency\": \"\",\n          \"instalmentPrice\": {{faker 'random.number'}},\n          \"netPrice\": {{faker 'random.number'}},\n          \"price\": {{faker 'random.number'}},\n          \"taxes\": [\n            {\n              \"amount\": {{faker 'random.number'}},\n              \"baseAmount\": {{faker 'random.number'}},\n              \"charge\": {{faker 'random.number'}},\n              \"id\": \"\",\n              \"rate\": {{faker 'random.number'}}\n            }\n          ]\n        },\n        \"pseudoCode\": {{faker 'random.boolean'}},\n        \"selected\": {{faker 'random.boolean'}},\n        \"standard\": {{faker 'random.boolean'}}\n      }\n    ]\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "276c4d87-b05d-477e-9d76-ffa9fa871960",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid parameter was specified:\n * MarketId is not valid\n * ModelId is not valid\n * ConfigurationId is not valid\n * ComponentList is not valid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8482213d-942f-46e2-8fd8-b56bae3f79ec",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f0222310-c6ac-4ed5-8454-0e967f840da2",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Market, Model or Configuration not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "95d8ba2f-465b-4551-8a14-b7d704c1f9d2",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0bf15925-23c0-47af-b115-fe2883771544",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "An Error occurred on the server side",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e7e2740f-da4e-41b9-bbbe-10952b1c6a6d",
      "documentation": "Returns URLs pointing to images in JPG format in the highest available resolution (depending on the component) of the vehicle's:\n  * engine (1024x576 px),\n  * rim (710x710 px),\n  * trim (800x600 px),\n  * paints (800x600 px),\n  * upholstery (800x600 px) and\n  * equipments (740x416 px).",
      "method": "get",
      "endpoint": "markets/:marketId/models/:modelId/configurations/:configurationId/images/components",
      "responses": [
        {
          "uuid": "73a678a3-e5b5-452f-a80e-abbaea0c712f",
          "body": "{\n  \"components\": {\n    \"engine\": {\n      \"url\": \"\"\n    },\n    \"equipments\": {},\n    \"paint\": {\n      \"paint1\": {\n        \"code\": \"\",\n        \"url\": \"\"\n      },\n      \"paint2\": {\n        \"code\": \"\",\n        \"url\": \"\"\n      }\n    },\n    \"rim\": {\n      \"code\": \"\",\n      \"url\": \"\"\n    },\n    \"trim\": {\n      \"code\": \"\",\n      \"url\": \"\"\n    },\n    \"upholstery\": {\n      \"code\": \"\",\n      \"url\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5a504897-0837-4a1a-be99-b578dd4e840c",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No content could be found for your request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cc9d5570-7ddc-44e6-8ba1-76c8f875ad20",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8206c0f7-8a4a-43c0-9f95-9141cc5ba457",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\",\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The requested marketId, modelId and/or configurationId not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a660139d-014e-4447-a5ef-b4090be35483",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d8c66618-603e-4d0c-bee3-603723c27392",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\",\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "The server encountered an internal error.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e9978303-65f5-459e-98ff-e64b143d97b4",
      "documentation": "Returns a URL pointing to an image of the vehicles engine.  These images are available in the resolution 1024x576 px.",
      "method": "get",
      "endpoint": "markets/:marketId/models/:modelId/configurations/:configurationId/images/components/engine",
      "responses": [
        {
          "uuid": "b3872ca0-50da-4362-9311-09432f69832e",
          "body": "{\n  \"engine\": {\n    \"url\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fc78c6fb-5997-4b01-a147-9cbde57bba94",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No content could be found for your request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "08fc9b1e-9642-4433-8624-7ea9a4be73a3",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4a0a7df5-d6f9-4bcc-b8c9-29d40d97c0a2",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\",\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The requested marketId, modelId and/or configurationId not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "886f7fdb-d91c-4fc8-8772-4496f30fdaf6",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f6905251-e1be-47ac-a86b-e8d68be11e82",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\",\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "The server encountered an internal error.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4141d815-01d8-4d86-9d64-0ffc903229a5",
      "documentation": "Returns URLs pointing to images of this vehicle's equipments. The images are available in the highest possible resolution (usually 740x416 px).",
      "method": "get",
      "endpoint": "markets/:marketId/models/:modelId/configurations/:configurationId/images/components/equipments",
      "responses": [
        {
          "uuid": "f05420ff-6c53-4a53-a7c7-20ce730a9987",
          "body": "{\n  \"equipments\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fedce57d-0808-4a70-bb78-bd7d08259792",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No content could be found for your request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d8562f32-12dc-4a76-a6a0-bbcbbdc6afc8",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4c94ed61-9bed-40c7-8d43-25ad074b97a7",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\",\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The requested marketId, modelId and/or configurationId not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "93ecd0b2-dbb0-4ae8-8ff3-387cb9b4366e",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "edb3f277-c3e5-468f-84ac-7d193d425877",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\",\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "The server encountered an internal error.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7c979feb-e2c8-4b06-843e-0788d8ea20f2",
      "documentation": "Returns URLs pointing to images of this vehicle's equipments. The images are available in the highest possible resolution (usually 740x416 px).",
      "method": "get",
      "endpoint": "markets/:marketId/models/:modelId/configurations/:configurationId/images/components/equipments/:componentCode",
      "responses": [
        {
          "uuid": "82d206b9-866c-4a9e-9180-68feee685721",
          "body": "{\n  \"equipment\": {\n    \"url\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "61b5cbdd-3741-4e76-a5a4-9677457cd7b2",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No content could be found for your request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2a94861a-cea9-4dcc-8de7-4291709befb5",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5d165e15-599d-44ca-b882-5b52e63f91a0",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\",\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The requested marketId, modelId and/or configurationId not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f48e170f-8d43-497d-9caa-dea38ad274f0",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "58b14fc2-1c1e-4753-8cd2-e896265d8983",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\",\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "The server encountered an internal error.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4bc7ec9c-4f9d-4861-b2f7-1fcf6f0cff2d",
      "documentation": "Returns URLs pointing to images of this vehicles paint.  These images are available in resolution 800x600 px.  Note there might be two paints (e.g. Smart, 'paint' for body panel and 'paint2' for the tridion cell)",
      "method": "get",
      "endpoint": "markets/:marketId/models/:modelId/configurations/:configurationId/images/components/paint",
      "responses": [
        {
          "uuid": "bd27b610-270d-4eed-99c0-1e1cf39eed02",
          "body": "{\n  \"paint\": {\n    \"paint1\": {\n      \"code\": \"\",\n      \"url\": \"\"\n    },\n    \"paint2\": {\n      \"code\": \"\",\n      \"url\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "86f254bf-b73c-4391-86c3-ef4cfaf5e4aa",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No content could be found for your request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bdf1e877-000e-4e08-b4b7-82140b9d0c79",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8bdb5df5-a25a-41f9-915f-8064c51aa3cd",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\",\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The requested marketId, modelId and/or configurationId not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d0da03a9-a8ca-477f-bb77-dc7fe8d7d6fd",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7026f8ab-7c41-4e69-b11a-f5845cccdfbf",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\",\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "The server encountered an internal error.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e0dd9eec-1186-43a2-abc4-a3443d0e4d62",
      "documentation": "Returns a URL pointing to an image of the vehicles rim.  These images are available in the resolution 710x710 px.",
      "method": "get",
      "endpoint": "markets/:marketId/models/:modelId/configurations/:configurationId/images/components/rim",
      "responses": [
        {
          "uuid": "b5109869-51b1-4947-9263-d4c80a64c057",
          "body": "{\n  \"rim\": {\n    \"code\": \"\",\n    \"url\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f80184f7-5a56-4973-a27c-3e28ff08777c",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No content could be found for your request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ab11e406-f19f-4c8b-a4c0-398bdf46d45e",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "83fad490-3c15-44de-b2aa-f72577f734a8",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\",\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The requested marketId, modelId and/or configurationId not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9d256a94-9aa9-4f94-96c7-9dd9edaed775",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9dd76bf0-076e-4170-affa-6c3dc8743626",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\",\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "The server encountered an internal error.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3c2e9e55-89b2-4b40-8b72-cbc64678e3d5",
      "documentation": "Returns a URL pointing to an image of this vehicles trim.  These images are available in resolution 800x600 px.",
      "method": "get",
      "endpoint": "markets/:marketId/models/:modelId/configurations/:configurationId/images/components/trim",
      "responses": [
        {
          "uuid": "db93c989-d97f-4249-8762-9a017ee17938",
          "body": "{\n  \"trim\": {\n    \"code\": \"\",\n    \"url\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2f084ba1-c142-4e79-9aa5-22a10d3927f6",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No content could be found for your request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7a2115d3-1f6a-4375-9862-d97eb725102b",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "12cda4e5-afac-4a67-b4d5-4b772f7dc242",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\",\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The requested marketId, modelId and/or configurationId not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "286212af-5e59-4307-b6ef-2f078fa8a35b",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f3e2a7f2-41be-4522-8484-373fbf4aa6ad",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\",\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "The server encountered an internal error.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1c34a8fd-92b1-4d09-9dcd-232c6a2ace72",
      "documentation": "Returns URLs pointing to images of the vehicle's upholsteries. Tge images are available in the highest possible resolution (usually 800x600 px).",
      "method": "get",
      "endpoint": "markets/:marketId/models/:modelId/configurations/:configurationId/images/components/upholstery",
      "responses": [
        {
          "uuid": "5fcf415b-959b-4e4e-8b7a-36e903c69e39",
          "body": "{\n  \"upholstery\": {\n    \"code\": \"\",\n    \"url\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f2fde61e-d7b9-4b00-b399-73a709b687ad",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No content could be found for your request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f39ed520-7ccf-4f0f-914c-22341b1edd57",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c9ebe0b4-4bf1-4bc1-babd-7fc6d4633519",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\",\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The requested marketId, modelId and/or configurationId not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "69daf5f1-b13f-4f8c-bb2b-ef85c5dede7e",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7dfee8c0-2540-4a01-9a40-ba084bb57d82",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\",\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "The server encountered an internal error.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c8359234-0821-4552-8c7a-4cad63b3e31e",
      "documentation": "Returns URLs pointing to PNG images of a vehicle with a white background.",
      "method": "get",
      "endpoint": "markets/:marketId/models/:modelId/configurations/:configurationId/images/vehicle",
      "responses": [
        {
          "uuid": "d9941555-c824-4bf4-b5b7-54a7c1d7dc56",
          "body": "{\n  \"vehicle\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d592f0c2-d15e-483d-ab9f-09ae2ff6c280",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No content could be found for your request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "507136a1-1a0a-424e-abec-ad9d5bdc5571",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\",\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "One of the provided parameters was invalid. Verify your query and inspect the global error object in the response for further information.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b963a13b-d830-48ce-a2b4-a5b7451f3ca1",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e83f0eb8-e4cb-4daf-b4b0-7e644cfadd1b",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\",\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The requested marketId, modelId and/or configurationId not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cef3d970-92f0-4445-a346-cf11101d79b8",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fbf4a1c3-dfc4-4d0f-99d1-6a57a5bbfcb4",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\",\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "The server encountered an internal error.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d686cada-25f0-4169-a1b0-cf245e0089cb",
      "documentation": "Get the selectable components for the given marketId, modelId and configurationId.",
      "method": "get",
      "endpoint": "markets/:marketId/models/:modelId/configurations/:configurationId/selectables",
      "responses": [
        {
          "uuid": "73fa584b-7425-4fb6-bc0d-46f558ab964c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "56cb8dd7-c00b-41cc-8f2f-f47084c3f82e",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No content found for requested componentTypes",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "af72b15f-d52b-4b5b-9b44-f421713af1d3",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid parameter was specified:\n * MarketId is not valid\n * ModelId is not valid\n * ConfigurationId is not valid\n * ComponentTypes is not valid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "88739b63-c1c3-440a-90a3-738b962e664d",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4bf2b82c-7168-4149-9692-031d73159239",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Market, Model or Configuration not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eee41821-71aa-4593-86ff-8cd0aaf7433c",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ba95eba3-2d7e-4596-bf93-8b21da3d6d65",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "An Error occurred on the server side",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5a6cbb55-7d9d-4ea5-a7f6-95e3edb59c3d",
      "documentation": "Stores the configuration of the given configurationId and modelId",
      "method": "post",
      "endpoint": "markets/:marketId/onlinecode",
      "responses": [
        {
          "uuid": "da16c09b-0ca0-40a6-b6c5-6e9cfbe98939",
          "body": "{\n  \"onlineCode\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1af3fe88-9f71-46eb-af32-c811637b1520",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid parameter was specified:\n * MarketId is not valid\n * ModelId is not valid\n * ConfigurationId is not valid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3200569d-08e0-4cfd-9192-1d20e4e3526a",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bcbb1f01-d69b-4209-addd-087ec7061fe4",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Configuration has not been found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a9dae799-2fd5-4a9d-873d-d7e6db43ab74",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6b40ace1-c1cf-4be8-a477-acccc1e7e1b4",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "An Error occurred on the server side",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9f53ef72-6e29-4ea2-90c6-df26226349d9",
      "documentation": "Get the configuration of the given onlineCode and marketId.",
      "method": "get",
      "endpoint": "markets/:marketId/onlinecode/:onlineCode",
      "responses": [
        {
          "uuid": "7e9ac4cb-db59-42bb-b3d4-9db33e38a09f",
          "body": "{\n  \"_links\": {\n    \"imageapi_vehicle\": {\n      \"href\": \"\"\n    },\n    \"selectables\": {\n      \"href\": \"\"\n    },\n    \"self\": {\n      \"href\": \"\"\n    }\n  },\n  \"changeYear\": \"\",\n  \"configurationId\": \"\",\n  \"configurationPrice\": {\n    \"currency\": \"\",\n    \"instalmentPrice\": {{faker 'random.number'}},\n    \"netPrice\": {{faker 'random.number'}},\n    \"price\": {{faker 'random.number'}},\n    \"taxes\": [\n      {\n        \"amount\": {{faker 'random.number'}},\n        \"baseAmount\": {{faker 'random.number'}},\n        \"charge\": {{faker 'random.number'}},\n        \"id\": \"\",\n        \"rate\": {{faker 'random.number'}}\n      }\n    ]\n  },\n  \"initialPrice\": {\n    \"currency\": \"\",\n    \"instalmentPrice\": {{faker 'random.number'}},\n    \"netPrice\": {{faker 'random.number'}},\n    \"price\": {{faker 'random.number'}},\n    \"taxes\": [\n      {\n        \"amount\": {{faker 'random.number'}},\n        \"baseAmount\": {{faker 'random.number'}},\n        \"charge\": {{faker 'random.number'}},\n        \"id\": \"\",\n        \"rate\": {{faker 'random.number'}}\n      }\n    ]\n  },\n  \"marketId\": \"\",\n  \"modelId\": \"\",\n  \"modelYear\": \"\",\n  \"technicalInformation\": {\n    \"acceleration\": {\n      \"unit\": \"\",\n      \"value\": {{faker 'random.number'}}\n    },\n    \"doors\": {{faker 'random.number'}},\n    \"energyEfficiencyClass\": \"\",\n    \"engine\": {\n      \"alternativeFuelType\": \"{{oneOf (array 'NORMAL' 'SUPER' 'SUPERPLUS' 'DIESEL' 'HGAS' 'GAS' 'ELECTRIC' 'FUELCELL' 'UNDEFINED')}}\",\n      \"capacity\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'random.number'}}\n      },\n      \"cylinder\": \"\",\n      \"driveConcept\": \"{{oneOf (array 'COMBUSTOR' 'HYBRID' 'ELECTRIC' 'FUELCELL' 'UNDEFINED')}}\",\n      \"emissionStandard\": \"\",\n      \"engineConcept\": \"{{oneOf (array 'MONO_REGULAR' 'MONO_DIESEL' 'MONO_GAS' 'MONO_ELECTRIC' 'MONO_FUELCELL' 'BI_NGT' 'BI_NGD' 'BI_MILD' 'BI_PLUGIN' 'MONO_UNDEFINED' 'BI_UNDEFINED' 'BI_HYBRID_UNDEFINED' 'BI_COMBUSTION_UNDEFINED' 'UNDEFINED')}}\",\n      \"fuelEconomy\": {\n        \"consumptionOfElectricityMax\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"consumptionOfElectricityMin\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"emissionCO2Max\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"emissionCO2Min\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"fuelConsumptionCityMax\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"fuelConsumptionCityMin\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"fuelConsumptionCombinedMax\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"fuelConsumptionCombinedMin\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"fuelConsumptionElectricity\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"fuelConsumptionOverlandMax\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"fuelConsumptionOverlandMin\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        }\n      },\n      \"fuelType\": \"{{oneOf (array 'NORMAL' 'SUPER' 'SUPERPLUS' 'DIESEL' 'HGAS' 'GAS' 'ELECTRIC' 'FUELCELL' 'UNDEFINED')}}\",\n      \"powerHp\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'random.number'}}\n      },\n      \"powerHybridExtensionHp\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'random.number'}}\n      },\n      \"powerHybridExtensionKw\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'random.number'}}\n      },\n      \"powerKw\": {\n        \"unit\": \"\",\n        \"value\": {{faker 'random.number'}}\n      }\n    },\n    \"nedc\": {\n      \"consumption\": {\n        \"city\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"combined\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"country\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"electric\": {\n          \"individual\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"max\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"min\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          }\n        },\n        \"weighted\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        }\n      },\n      \"electricRange\": {\n        \"individual\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"max\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"min\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        }\n      },\n      \"emission\": {\n        \"city\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"combined\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"country\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"weighted\": {\n          \"individual\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"max\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"min\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          }\n        }\n      },\n      \"weight\": {\n        \"individual\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"max\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        },\n        \"min\": {\n          \"unit\": \"\",\n          \"value\": {{faker 'random.number'}}\n        }\n      }\n    },\n    \"seats\": {{faker 'random.number'}},\n    \"topSpeed\": {\n      \"unit\": \"\",\n      \"value\": {{faker 'random.number'}}\n    },\n    \"transmission\": {\n      \"code\": \"\",\n      \"codeType\": \"\",\n      \"name\": \"\"\n    },\n    \"wltp\": {\n      \"consumption\": {\n        \"chargeDeplete\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"chargeDepleteCop\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"extraHigh\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"high\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"low\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"medium\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"total\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"weighted\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        }\n      },\n      \"emission\": {\n        \"chargeDeplete\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"chargeDepleteCop\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"chargeDepleteWeighted\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"extraHigh\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"high\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"low\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"lowMid\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"medium\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"total\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"weighted\": {\n          \"primaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          },\n          \"secondaryGear\": {\n            \"individual\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"max\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"min\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            }\n          }\n        }\n      }\n    }\n  },\n  \"vehicleComponents\": [\n    {\n      \"_links\": {\n        \"imageapi_component\": {\n          \"href\": \"\"\n        }\n      },\n      \"code\": \"\",\n      \"codeType\": \"\",\n      \"componentSortId\": {{faker 'random.number'}},\n      \"componentType\": \"{{oneOf (array 'ANY' 'WHEELS' 'PAINTS' 'UPHOLSTERIES' 'TRIMS' 'PACKAGES' 'LINES' 'SPECIAL_EDITION' 'SPECIAL_EQUIPMENT')}}\",\n      \"description\": \"\",\n      \"fixed\": {{faker 'random.boolean'}},\n      \"hidden\": {{faker 'random.boolean'}},\n      \"id\": \"\",\n      \"name\": \"\",\n      \"priceInformation\": {\n        \"currency\": \"\",\n        \"instalmentPrice\": {{faker 'random.number'}},\n        \"netPrice\": {{faker 'random.number'}},\n        \"price\": {{faker 'random.number'}},\n        \"taxes\": [\n          {\n            \"amount\": {{faker 'random.number'}},\n            \"baseAmount\": {{faker 'random.number'}},\n            \"charge\": {{faker 'random.number'}},\n            \"id\": \"\",\n            \"rate\": {{faker 'random.number'}}\n          }\n        ]\n      },\n      \"pseudoCode\": {{faker 'random.boolean'}},\n      \"selected\": {{faker 'random.boolean'}},\n      \"standard\": {{faker 'random.boolean'}}\n    }\n  ],\n  \"wltpConfiguration\": {{faker 'random.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e35acd61-d198-44f4-8f75-3b4d3b8e96a3",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid parameter was specified:\n * MarketId is not valid\n * OnlineCode is not valid\n * Fields is not valid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "586927c0-0525-4912-b88b-75225668e5dc",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1d1c1c12-4c5a-418d-a8c2-9b393cd2ea65",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Configuration or Market has not been found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6c4e3933-221a-4c74-8139-e9a2549d883e",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "76a0f372-4401-4639-90cb-997c4938800c",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "An Error occurred on the server side",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8a31d77c-43ba-4182-ad20-19648689cd57",
      "documentation": "Get all configured active product groups for the given marketId.",
      "method": "get",
      "endpoint": "markets/:marketId/productgroups",
      "responses": [
        {
          "uuid": "a23fad2d-8b83-4b73-b121-fa7e7826fd27",
          "body": "{\n  \"_links\": {\n    \"models\": {\n      \"href\": \"\"\n    },\n    \"self\": {\n      \"href\": \"\"\n    }\n  },\n  \"market\": {\n    \"_links\": {\n      \"bodies\": {\n        \"href\": \"\"\n      },\n      \"classes\": {\n        \"href\": \"\"\n      },\n      \"models\": {\n        \"href\": \"\"\n      },\n      \"productgroups\": {\n        \"href\": \"\"\n      },\n      \"self\": {\n        \"href\": \"\"\n      }\n    },\n    \"country\": \"\",\n    \"language\": \"\",\n    \"marketId\": \"\"\n  },\n  \"productGroups\": [\n    \"{{oneOf (array 'PKW' 'VAN' 'SMART')}}\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c5787292-5391-4b51-9116-62e1ba9ade0b",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "MarketId is not valid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "11b27042-19f2-4b57-ac87-565875c15f19",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c41e5332-b54b-4530-819c-a4a8f68f850a",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Market not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7d80d17a-5278-452a-b49e-aa01c72b5361",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Quota limit is exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6b5c52a4-8409-4c1f-8705-f1a545bf5351",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "An Error occurred on the server side",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}