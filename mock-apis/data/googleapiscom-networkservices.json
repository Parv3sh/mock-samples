{
  "uuid": "09d19f64-65d9-4a94-a5e6-b4d626e90eb5",
  "lastMigration": 19,
  "name": "Network Services API",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "6a062437-710c-4b2b-a142-fac1e85d743f",
      "documentation": "Deletes a single TlsRoute.",
      "method": "delete",
      "endpoint": "v1beta1/:name",
      "responses": [
        {
          "uuid": "c75c9277-3b86-4249-a6f3-bbc81612bb34",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5983b81a-4897-4f43-986a-1c4c1eb9d053",
      "documentation": "Gets details of a single TlsRoute.",
      "method": "get",
      "endpoint": "v1beta1/:name",
      "responses": [
        {
          "uuid": "409ff546-13c8-40d6-9826-ce14451c2b43",
          "body": "{\n  \"createTime\": \"\",\n  \"description\": \"\",\n  \"gateways\": [\n    \"\"\n  ],\n  \"meshes\": [\n    \"\"\n  ],\n  \"name\": \"\",\n  \"rules\": [\n    {\n      \"action\": {\n        \"destinations\": [\n          {\n            \"serviceName\": \"\",\n            \"weight\": {{faker 'random.number'}}\n          }\n        ]\n      },\n      \"matches\": [\n        {\n          \"alpn\": [\n            \"\"\n          ],\n          \"sniHost\": [\n            \"\"\n          ]\n        }\n      ]\n    }\n  ],\n  \"selfLink\": \"\",\n  \"updateTime\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9e1343fd-e94c-48e0-a0e0-d85e0869637b",
      "documentation": "Updates the parameters of a single TlsRoute.",
      "method": "patch",
      "endpoint": "v1beta1/:name",
      "responses": [
        {
          "uuid": "981fac17-a385-441c-86e0-009e4321fdd6",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9274c46e-1655-4b31-8f04-ffcaa5c7340e",
      "documentation": "Lists information about the supported locations for this service.",
      "method": "get",
      "endpoint": "v1beta1/:name/locations",
      "responses": [
        {
          "uuid": "113da1c9-07d3-4bbe-9170-9be42727d7d7",
          "body": "{\n  \"locations\": [\n    {\n      \"displayName\": \"\",\n      \"labels\": {},\n      \"locationId\": \"\",\n      \"metadata\": {},\n      \"name\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "211715fe-980c-4047-bb35-a103f0bc6fef",
      "documentation": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
      "method": "get",
      "endpoint": "v1beta1/:name/operations",
      "responses": [
        {
          "uuid": "de5f98c6-0f6b-4958-93ec-0e755e5920cf",
          "body": "{\n  \"nextPageToken\": \"\",\n  \"operations\": [\n    {\n      \"done\": {{faker 'random.boolean'}},\n      \"error\": {\n        \"code\": {{faker 'random.number'}},\n        \"details\": [\n          {}\n        ],\n        \"message\": \"\"\n      },\n      \"metadata\": {},\n      \"name\": \"\",\n      \"response\": {}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e5bb23b4-1c17-4164-9716-76c3ad388291",
      "documentation": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
      "method": "post",
      "endpoint": "v1beta1/:name:cancel",
      "responses": [
        {
          "uuid": "c42444cf-34fb-4dc9-87cd-dccf23cbdb8e",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d2dd2a8b-674b-4888-a49b-bec240f25caf",
      "documentation": "Lists EndpointPolicies in a given project and location.",
      "method": "get",
      "endpoint": "v1beta1/:parent/endpointPolicies",
      "responses": [
        {
          "uuid": "e1232fdf-0877-4b22-ba68-4098480c4ec9",
          "body": "{\n  \"endpointPolicies\": [\n    {\n      \"authorizationPolicy\": \"\",\n      \"clientTlsPolicy\": \"\",\n      \"createTime\": \"\",\n      \"description\": \"\",\n      \"endpointMatcher\": {\n        \"metadataLabelMatcher\": {\n          \"metadataLabelMatchCriteria\": \"{{oneOf (array 'METADATA_LABEL_MATCH_CRITERIA_UNSPECIFIED' 'MATCH_ANY' 'MATCH_ALL')}}\",\n          \"metadataLabels\": [\n            {\n              \"labelName\": \"\",\n              \"labelValue\": \"\"\n            }\n          ]\n        }\n      },\n      \"labels\": {},\n      \"name\": \"\",\n      \"serverTlsPolicy\": \"\",\n      \"trafficPortSelector\": {\n        \"ports\": [\n          \"\"\n        ]\n      },\n      \"type\": \"{{oneOf (array 'ENDPOINT_POLICY_TYPE_UNSPECIFIED' 'SIDECAR_PROXY' 'GRPC_SERVER')}}\",\n      \"updateTime\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "41e669d2-2fd8-4f5e-b849-8ef6ed3458fc",
      "documentation": "Creates a new EndpointPolicy in a given project and location.",
      "method": "post",
      "endpoint": "v1beta1/:parent/endpointPolicies",
      "responses": [
        {
          "uuid": "0f8cc011-fa63-4c7e-a123-7d3c3fd2d2e9",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c149f4eb-2c8f-4a18-8407-f4238126a5f7",
      "documentation": "Lists Gateways in a given project and location.",
      "method": "get",
      "endpoint": "v1beta1/:parent/gateways",
      "responses": [
        {
          "uuid": "f91d5c00-44ac-40e3-b2fd-7437289282d0",
          "body": "{\n  \"gateways\": [\n    {\n      \"createTime\": \"\",\n      \"description\": \"\",\n      \"labels\": {},\n      \"name\": \"\",\n      \"ports\": [\n        {{faker 'random.number'}}\n      ],\n      \"scope\": \"\",\n      \"selfLink\": \"\",\n      \"serverTlsPolicy\": \"\",\n      \"type\": \"{{oneOf (array 'TYPE_UNSPECIFIED' 'OPEN_MESH' 'SECURE_WEB_GATEWAY')}}\",\n      \"updateTime\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "37f71e54-6f51-4e8f-b866-9e8ac6bb4ad5",
      "documentation": "Creates a new Gateway in a given project and location.",
      "method": "post",
      "endpoint": "v1beta1/:parent/gateways",
      "responses": [
        {
          "uuid": "1683563d-07e9-4577-b7fe-679e4f15c8d7",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5041c507-43e1-4bab-aa9d-81a6bd250ecd",
      "documentation": "Lists GrpcRoutes in a given project and location.",
      "method": "get",
      "endpoint": "v1beta1/:parent/grpcRoutes",
      "responses": [
        {
          "uuid": "45707baa-aace-4ef7-9293-f82d20a9d140",
          "body": "{\n  \"grpcRoutes\": [\n    {\n      \"createTime\": \"\",\n      \"description\": \"\",\n      \"gateways\": [\n        \"\"\n      ],\n      \"hostnames\": [\n        \"\"\n      ],\n      \"labels\": {},\n      \"meshes\": [\n        \"\"\n      ],\n      \"name\": \"\",\n      \"rules\": [\n        {\n          \"action\": {\n            \"destinations\": [\n              {\n                \"serviceName\": \"\",\n                \"weight\": {{faker 'random.number'}}\n              }\n            ],\n            \"faultInjectionPolicy\": {\n              \"abort\": {\n                \"httpStatus\": {{faker 'random.number'}},\n                \"percentage\": {{faker 'random.number'}}\n              },\n              \"delay\": {\n                \"fixedDelay\": \"\",\n                \"percentage\": {{faker 'random.number'}}\n              }\n            },\n            \"retryPolicy\": {\n              \"numRetries\": {{faker 'random.number'}},\n              \"retryConditions\": [\n                \"\"\n              ]\n            },\n            \"timeout\": \"\"\n          },\n          \"matches\": [\n            {\n              \"headers\": [\n                {\n                  \"key\": \"\",\n                  \"type\": \"{{oneOf (array 'TYPE_UNSPECIFIED' 'EXACT' 'REGULAR_EXPRESSION')}}\",\n                  \"value\": \"\"\n                }\n              ],\n              \"method\": {\n                \"caseSensitive\": {{faker 'random.boolean'}},\n                \"grpcMethod\": \"\",\n                \"grpcService\": \"\",\n                \"type\": \"{{oneOf (array 'TYPE_UNSPECIFIED' 'EXACT' 'REGULAR_EXPRESSION')}}\"\n              }\n            }\n          ]\n        }\n      ],\n      \"selfLink\": \"\",\n      \"updateTime\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6d8937d0-16a6-4107-be7a-1f6f1e4da819",
      "documentation": "Creates a new GrpcRoute in a given project and location.",
      "method": "post",
      "endpoint": "v1beta1/:parent/grpcRoutes",
      "responses": [
        {
          "uuid": "236e8c79-1247-4ad9-b8a9-be750e7a0d37",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6558aed9-b985-48a8-a709-2bf4edfcd329",
      "documentation": "Lists HttpRoute in a given project and location.",
      "method": "get",
      "endpoint": "v1beta1/:parent/httpRoutes",
      "responses": [
        {
          "uuid": "be6520db-dab4-480b-a0d8-0390b2952560",
          "body": "{\n  \"httpRoutes\": [\n    {\n      \"createTime\": \"\",\n      \"description\": \"\",\n      \"gateways\": [\n        \"\"\n      ],\n      \"hostnames\": [\n        \"\"\n      ],\n      \"labels\": {},\n      \"meshes\": [\n        \"\"\n      ],\n      \"name\": \"\",\n      \"rules\": [\n        {\n          \"action\": {\n            \"corsPolicy\": {\n              \"allowCredentials\": {{faker 'random.boolean'}},\n              \"allowHeaders\": [\n                \"\"\n              ],\n              \"allowMethods\": [\n                \"\"\n              ],\n              \"allowOriginRegexes\": [\n                \"\"\n              ],\n              \"allowOrigins\": [\n                \"\"\n              ],\n              \"disabled\": {{faker 'random.boolean'}},\n              \"exposeHeaders\": [\n                \"\"\n              ],\n              \"maxAge\": \"\"\n            },\n            \"destinations\": [\n              {\n                \"serviceName\": \"\",\n                \"weight\": {{faker 'random.number'}}\n              }\n            ],\n            \"faultInjectionPolicy\": {\n              \"abort\": {\n                \"httpStatus\": {{faker 'random.number'}},\n                \"percentage\": {{faker 'random.number'}}\n              },\n              \"delay\": {\n                \"fixedDelay\": \"\",\n                \"percentage\": {{faker 'random.number'}}\n              }\n            },\n            \"redirect\": {\n              \"hostRedirect\": \"\",\n              \"httpsRedirect\": {{faker 'random.boolean'}},\n              \"pathRedirect\": \"\",\n              \"portRedirect\": {{faker 'random.number'}},\n              \"prefixRewrite\": \"\",\n              \"responseCode\": \"{{oneOf (array 'RESPONSE_CODE_UNSPECIFIED' 'MOVED_PERMANENTLY_DEFAULT' 'FOUND' 'SEE_OTHER' 'TEMPORARY_REDIRECT' 'PERMANENT_REDIRECT')}}\",\n              \"stripQuery\": {{faker 'random.boolean'}}\n            },\n            \"requestHeaderModifier\": {\n              \"add\": {},\n              \"remove\": [\n                \"\"\n              ],\n              \"set\": {}\n            },\n            \"requestMirrorPolicy\": {\n              \"destination\": {\n                \"serviceName\": \"\",\n                \"weight\": {{faker 'random.number'}}\n              }\n            },\n            \"responseHeaderModifier\": {\n              \"add\": {},\n              \"remove\": [\n                \"\"\n              ],\n              \"set\": {}\n            },\n            \"retryPolicy\": {\n              \"numRetries\": {{faker 'random.number'}},\n              \"perTryTimeout\": \"\",\n              \"retryConditions\": [\n                \"\"\n              ]\n            },\n            \"timeout\": \"\",\n            \"urlRewrite\": {\n              \"hostRewrite\": \"\",\n              \"pathPrefixRewrite\": \"\"\n            }\n          },\n          \"matches\": [\n            {\n              \"fullPathMatch\": \"\",\n              \"headers\": [\n                {\n                  \"exactMatch\": \"\",\n                  \"header\": \"\",\n                  \"invertMatch\": {{faker 'random.boolean'}},\n                  \"prefixMatch\": \"\",\n                  \"presentMatch\": {{faker 'random.boolean'}},\n                  \"rangeMatch\": {\n                    \"end\": {{faker 'random.number'}},\n                    \"start\": {{faker 'random.number'}}\n                  },\n                  \"regexMatch\": \"\",\n                  \"suffixMatch\": \"\"\n                }\n              ],\n              \"ignoreCase\": {{faker 'random.boolean'}},\n              \"prefixMatch\": \"\",\n              \"queryParameters\": [\n                {\n                  \"exactMatch\": \"\",\n                  \"presentMatch\": {{faker 'random.boolean'}},\n                  \"queryParameter\": \"\",\n                  \"regexMatch\": \"\"\n                }\n              ],\n              \"regexMatch\": \"\"\n            }\n          ]\n        }\n      ],\n      \"selfLink\": \"\",\n      \"updateTime\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7aa8e30a-4b65-4802-bb73-12f6212709fb",
      "documentation": "Creates a new HttpRoute in a given project and location.",
      "method": "post",
      "endpoint": "v1beta1/:parent/httpRoutes",
      "responses": [
        {
          "uuid": "317e8786-5902-4353-ab19-eaa3389bd9dd",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d317d095-be3b-49c4-8ea7-6078a46f2ab6",
      "documentation": "Lists Meshes in a given project and location.",
      "method": "get",
      "endpoint": "v1beta1/:parent/meshes",
      "responses": [
        {
          "uuid": "4d949f90-63de-40b2-b376-5e58089b616c",
          "body": "{\n  \"meshes\": [\n    {\n      \"createTime\": \"\",\n      \"description\": \"\",\n      \"interceptionPort\": {{faker 'random.number'}},\n      \"labels\": {},\n      \"name\": \"\",\n      \"selfLink\": \"\",\n      \"updateTime\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e428737d-4b53-43e4-86d4-c4d1d0c86826",
      "documentation": "Creates a new Mesh in a given project and location.",
      "method": "post",
      "endpoint": "v1beta1/:parent/meshes",
      "responses": [
        {
          "uuid": "fd6a3049-678e-4805-aaf9-927bc332e395",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7a83eb88-68ff-4fe2-9d5f-94f828947840",
      "documentation": "Lists ServiceBinding in a given project and location.",
      "method": "get",
      "endpoint": "v1beta1/:parent/serviceBindings",
      "responses": [
        {
          "uuid": "7b2bff9b-ad40-4ffe-8820-1625411cff06",
          "body": "{\n  \"nextPageToken\": \"\",\n  \"serviceBindings\": [\n    {\n      \"createTime\": \"\",\n      \"description\": \"\",\n      \"labels\": {},\n      \"name\": \"\",\n      \"service\": \"\",\n      \"updateTime\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b5e1c738-8330-4b82-8ad5-1e79edf600e1",
      "documentation": "Creates a new ServiceBinding in a given project and location.",
      "method": "post",
      "endpoint": "v1beta1/:parent/serviceBindings",
      "responses": [
        {
          "uuid": "3eded1ed-247d-4fe7-bf8b-68d36b1bdd9b",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7ecefcd3-cfb2-4c23-97a4-14ae75dc2c35",
      "documentation": "Lists TcpRoute in a given project and location.",
      "method": "get",
      "endpoint": "v1beta1/:parent/tcpRoutes",
      "responses": [
        {
          "uuid": "0046e7b2-dfe9-4f62-b37a-2cd183a6682f",
          "body": "{\n  \"nextPageToken\": \"\",\n  \"tcpRoutes\": [\n    {\n      \"createTime\": \"\",\n      \"description\": \"\",\n      \"labels\": {},\n      \"meshes\": [\n        \"\"\n      ],\n      \"name\": \"\",\n      \"rules\": [\n        {\n          \"action\": {\n            \"destinations\": [\n              {\n                \"serviceName\": \"\",\n                \"weight\": {{faker 'random.number'}}\n              }\n            ],\n            \"originalDestination\": {{faker 'random.boolean'}}\n          },\n          \"matches\": [\n            {\n              \"address\": \"\",\n              \"port\": \"\"\n            }\n          ]\n        }\n      ],\n      \"selfLink\": \"\",\n      \"updateTime\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bf320995-2a00-425d-864c-b031697d1a15",
      "documentation": "Creates a new TcpRoute in a given project and location.",
      "method": "post",
      "endpoint": "v1beta1/:parent/tcpRoutes",
      "responses": [
        {
          "uuid": "7dcb58fc-6f43-4fe9-a085-3bd9edf99b92",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8953c93d-e7de-4c40-a6ec-c4aa7d4641fd",
      "documentation": "Lists TlsRoute in a given project and location.",
      "method": "get",
      "endpoint": "v1beta1/:parent/tlsRoutes",
      "responses": [
        {
          "uuid": "11084610-1b43-4dd4-a40d-8e2bd39d5a3b",
          "body": "{\n  \"nextPageToken\": \"\",\n  \"tlsRoutes\": [\n    {\n      \"createTime\": \"\",\n      \"description\": \"\",\n      \"gateways\": [\n        \"\"\n      ],\n      \"meshes\": [\n        \"\"\n      ],\n      \"name\": \"\",\n      \"rules\": [\n        {\n          \"action\": {\n            \"destinations\": [\n              {\n                \"serviceName\": \"\",\n                \"weight\": {{faker 'random.number'}}\n              }\n            ]\n          },\n          \"matches\": [\n            {\n              \"alpn\": [\n                \"\"\n              ],\n              \"sniHost\": [\n                \"\"\n              ]\n            }\n          ]\n        }\n      ],\n      \"selfLink\": \"\",\n      \"updateTime\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9bae7412-5e5d-46ee-9ee9-78857612cbc5",
      "documentation": "Creates a new TlsRoute in a given project and location.",
      "method": "post",
      "endpoint": "v1beta1/:parent/tlsRoutes",
      "responses": [
        {
          "uuid": "d023d91e-5239-42cf-be4e-80a9cb506b42",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "289030b8-9c04-439c-ba4c-2907dfc1405f",
      "documentation": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
      "method": "get",
      "endpoint": "v1beta1/:resource:getIamPolicy",
      "responses": [
        {
          "uuid": "c65af134-3d98-44aa-aa01-1df6c8505565",
          "body": "{\n  \"auditConfigs\": [\n    {\n      \"auditLogConfigs\": [\n        {\n          \"exemptedMembers\": [\n            \"\"\n          ],\n          \"logType\": \"{{oneOf (array 'LOG_TYPE_UNSPECIFIED' 'ADMIN_READ' 'DATA_WRITE' 'DATA_READ')}}\"\n        }\n      ],\n      \"service\": \"\"\n    }\n  ],\n  \"bindings\": [\n    {\n      \"condition\": {\n        \"description\": \"\",\n        \"expression\": \"\",\n        \"location\": \"\",\n        \"title\": \"\"\n      },\n      \"members\": [\n        \"\"\n      ],\n      \"role\": \"\"\n    }\n  ],\n  \"etag\": \"\",\n  \"version\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "016c36ea-066e-4f7e-ba9e-1d8a91d00b57",
      "documentation": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
      "method": "post",
      "endpoint": "v1beta1/:resource:setIamPolicy",
      "responses": [
        {
          "uuid": "f71f94c0-e8f1-4f78-8c1f-3befcc88e959",
          "body": "{\n  \"auditConfigs\": [\n    {\n      \"auditLogConfigs\": [\n        {\n          \"exemptedMembers\": [\n            \"\"\n          ],\n          \"logType\": \"{{oneOf (array 'LOG_TYPE_UNSPECIFIED' 'ADMIN_READ' 'DATA_WRITE' 'DATA_READ')}}\"\n        }\n      ],\n      \"service\": \"\"\n    }\n  ],\n  \"bindings\": [\n    {\n      \"condition\": {\n        \"description\": \"\",\n        \"expression\": \"\",\n        \"location\": \"\",\n        \"title\": \"\"\n      },\n      \"members\": [\n        \"\"\n      ],\n      \"role\": \"\"\n    }\n  ],\n  \"etag\": \"\",\n  \"version\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8ae3fde8-28c7-43e5-9cbf-69381759e023",
      "documentation": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
      "method": "post",
      "endpoint": "v1beta1/:resource:testIamPermissions",
      "responses": [
        {
          "uuid": "e5b30e58-b3ab-48df-a81d-377da507e151",
          "body": "{\n  \"permissions\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}