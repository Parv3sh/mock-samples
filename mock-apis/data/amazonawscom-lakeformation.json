{
  "uuid": "e561dbeb-382f-457d-93ad-86c01f25a31a",
  "lastMigration": 19,
  "name": "AWS Lake Formation",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "acfb572a-8051-4894-a603-d3b51cd142e5",
      "documentation": "Attaches one or more tags to an existing resource.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSLakeFormation.AddLFTagsToResource",
      "responses": [
        {
          "uuid": "5ebdcc51-c2ab-4fe6-93f3-4e38331bb812",
          "body": "{\n  \"Failures\": [\n    {\n      \"LFTag\": {\n        \"CatalogId\": \"\",\n        \"TagKey\": \"\",\n        \"TagValues\": [\n          \"\"\n        ]\n      },\n      \"Error\": {\n        \"ErrorCode\": \"\",\n        \"ErrorMessage\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "32732bc3-f9f8-4eeb-810a-cd41aeabfe49",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "109ea60b-bc89-4158-8083-38167996dc4a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "16f2e968-f87a-4c8f-b781-3f4731d6cc89",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "263905f0-01b3-49c9-a785-9cfdfca89ae7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "636d70de-8971-4bfb-9783-007b3e38599a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "107d2604-c920-4e29-9520-93509fda0c5f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2ebedb14-ef19-42f0-b69d-9341c6dbcbad",
      "documentation": "Batch operation to grant permissions to the principal.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSLakeFormation.BatchGrantPermissions",
      "responses": [
        {
          "uuid": "89822d9d-c4ed-434c-89d5-69ffd64d17d8",
          "body": "{\n  \"Failures\": [\n    {\n      \"RequestEntry\": {\n        \"Id\": \"\",\n        \"Principal\": {\n          \"DataLakePrincipalIdentifier\": \"\"\n        },\n        \"Resource\": {\n          \"Catalog\": {},\n          \"Database\": {\n            \"CatalogId\": \"\",\n            \"Name\": \"\"\n          },\n          \"Table\": {\n            \"CatalogId\": \"\",\n            \"DatabaseName\": \"\",\n            \"Name\": \"\",\n            \"TableWildcard\": {}\n          },\n          \"TableWithColumns\": {\n            \"CatalogId\": \"\",\n            \"DatabaseName\": \"\",\n            \"Name\": \"\",\n            \"ColumnNames\": [\n              \"\"\n            ],\n            \"ColumnWildcard\": {\n              \"ExcludedColumnNames\": [\n                \"\"\n              ]\n            }\n          },\n          \"DataLocation\": {\n            \"CatalogId\": \"\",\n            \"ResourceArn\": \"\"\n          },\n          \"LFTag\": {\n            \"CatalogId\": \"\",\n            \"TagKey\": \"\",\n            \"TagValues\": [\n              \"\"\n            ]\n          },\n          \"LFTagPolicy\": {\n            \"CatalogId\": \"\",\n            \"ResourceType\": \"\",\n            \"Expression\": [\n              {\n                \"TagKey\": \"\",\n                \"TagValues\": [\n                  \"\"\n                ]\n              }\n            ]\n          }\n        },\n        \"Permissions\": [\n          \"{{oneOf (array 'ALL' 'SELECT' 'ALTER' 'DROP' 'DELETE' 'INSERT' 'DESCRIBE' 'CREATE_DATABASE' 'CREATE_TABLE' 'DATA_LOCATION_ACCESS' 'CREATE_TAG' 'ALTER_TAG' 'DELETE_TAG' 'DESCRIBE_TAG' 'ASSOCIATE_TAG')}}\"\n        ],\n        \"PermissionsWithGrantOption\": [\n          \"{{oneOf (array 'ALL' 'SELECT' 'ALTER' 'DROP' 'DELETE' 'INSERT' 'DESCRIBE' 'CREATE_DATABASE' 'CREATE_TABLE' 'DATA_LOCATION_ACCESS' 'CREATE_TAG' 'ALTER_TAG' 'DELETE_TAG' 'DESCRIBE_TAG' 'ASSOCIATE_TAG')}}\"\n        ]\n      },\n      \"Error\": {\n        \"ErrorCode\": \"\",\n        \"ErrorMessage\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "88271650-6266-44d3-ba78-70a9a2725b6b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d2582a85-758b-482d-a425-ad7e6087d643",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "33ce14da-1344-454f-bbd7-6baee27687fc",
      "documentation": "Batch operation to revoke permissions from the principal.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSLakeFormation.BatchRevokePermissions",
      "responses": [
        {
          "uuid": "51c9456e-c56c-402d-a352-216909aff29e",
          "body": "{\n  \"Failures\": [\n    {\n      \"RequestEntry\": {\n        \"Id\": \"\",\n        \"Principal\": {\n          \"DataLakePrincipalIdentifier\": \"\"\n        },\n        \"Resource\": {\n          \"Catalog\": {},\n          \"Database\": {\n            \"CatalogId\": \"\",\n            \"Name\": \"\"\n          },\n          \"Table\": {\n            \"CatalogId\": \"\",\n            \"DatabaseName\": \"\",\n            \"Name\": \"\",\n            \"TableWildcard\": {}\n          },\n          \"TableWithColumns\": {\n            \"CatalogId\": \"\",\n            \"DatabaseName\": \"\",\n            \"Name\": \"\",\n            \"ColumnNames\": [\n              \"\"\n            ],\n            \"ColumnWildcard\": {\n              \"ExcludedColumnNames\": [\n                \"\"\n              ]\n            }\n          },\n          \"DataLocation\": {\n            \"CatalogId\": \"\",\n            \"ResourceArn\": \"\"\n          },\n          \"LFTag\": {\n            \"CatalogId\": \"\",\n            \"TagKey\": \"\",\n            \"TagValues\": [\n              \"\"\n            ]\n          },\n          \"LFTagPolicy\": {\n            \"CatalogId\": \"\",\n            \"ResourceType\": \"\",\n            \"Expression\": [\n              {\n                \"TagKey\": \"\",\n                \"TagValues\": [\n                  \"\"\n                ]\n              }\n            ]\n          }\n        },\n        \"Permissions\": [\n          \"{{oneOf (array 'ALL' 'SELECT' 'ALTER' 'DROP' 'DELETE' 'INSERT' 'DESCRIBE' 'CREATE_DATABASE' 'CREATE_TABLE' 'DATA_LOCATION_ACCESS' 'CREATE_TAG' 'ALTER_TAG' 'DELETE_TAG' 'DESCRIBE_TAG' 'ASSOCIATE_TAG')}}\"\n        ],\n        \"PermissionsWithGrantOption\": [\n          \"{{oneOf (array 'ALL' 'SELECT' 'ALTER' 'DROP' 'DELETE' 'INSERT' 'DESCRIBE' 'CREATE_DATABASE' 'CREATE_TABLE' 'DATA_LOCATION_ACCESS' 'CREATE_TAG' 'ALTER_TAG' 'DELETE_TAG' 'DESCRIBE_TAG' 'ASSOCIATE_TAG')}}\"\n        ]\n      },\n      \"Error\": {\n        \"ErrorCode\": \"\",\n        \"ErrorMessage\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5a5b3598-3f5d-4ce3-b3b9-76bf0d9ba147",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "896b3516-d7ff-488b-837b-c6952b9a8de9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c4fc1f5c-cb58-4aac-8c74-fc61d58d4a90",
      "documentation": "Creates a tag with the specified name and values.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSLakeFormation.CreateLFTag",
      "responses": [
        {
          "uuid": "a11f19b4-b579-47bc-8abe-6c704ac7fbe1",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8d0beb8a-19a5-41a4-8d91-57751d507344",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0758f126-10d3-438c-aac8-f00ee08e327c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5926d891-2da6-4284-a915-a6e7f2419395",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "757917d8-eddd-4b3c-a919-54225bb147f8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f0694bdf-5fa1-4815-af80-302bc704ade5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e3d9b2cd-ce3f-4868-84cc-9d18e3638918",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "70d27730-8949-405e-962e-2e6b802419f1",
      "documentation": "Deletes the specified tag key name. If the attribute key does not exist or the tag does not exist, then the operation will not do anything. If the attribute key exists, then the operation checks if any resources are tagged with this attribute key, if yes, the API throws a 400 Exception with the message \"Delete not allowed\" as the tag key is still attached with resources. You can consider untagging resources with this tag key.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSLakeFormation.DeleteLFTag",
      "responses": [
        {
          "uuid": "090040bf-3a4b-4612-b440-ccff07b3dfb1",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f4b1cca8-7cab-4b91-934e-cef998ff2ef5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8e3fc33b-1192-44b7-94f7-ebd4d6062ba9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6b7d4f2a-4092-4c50-9949-0eaa7d2ef38e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cc8b9cd8-8944-4117-bd5e-2fb03f6c1c35",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7b0a48b7-dad2-498a-8547-d38b8a57dbc0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2814d32f-0a08-4d38-8997-89293148afb3",
      "documentation": "<p>Deregisters the resource as managed by the Data Catalog.</p> <p>When you deregister a path, Lake Formation removes the path from the inline policy attached to your service-linked role.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSLakeFormation.DeregisterResource",
      "responses": [
        {
          "uuid": "2ba15393-1711-4bb3-9cae-feff5f5f0716",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3d3baf59-da2b-43c2-8843-df6db74a12bb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "03a813ab-4784-41e4-b313-98d7a3e6caf0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8e61c3b4-caef-45c0-a191-3b2beb4d1ce7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "de29de02-a132-46a7-ab18-022983f7ff2b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "21e72c0c-9a60-4fb1-85ef-c854a83112cb",
      "documentation": "Retrieves the current data access role for the given resource registered in AWS Lake Formation.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSLakeFormation.DescribeResource",
      "responses": [
        {
          "uuid": "5b1dc138-6b19-4ad1-a9ff-45e42bfb6255",
          "body": "{\n  \"ResourceInfo\": {\n    \"ResourceArn\": \"\",\n    \"RoleArn\": \"\",\n    \"LastModified\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "29033f45-2213-486e-9015-bd5e41f0bd0b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c004fca8-58e3-4501-bc88-6303d5832b0e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "96b042f8-9084-42a0-948f-7d27608c9526",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "860ed178-76e4-46b3-b914-857a4992ce89",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8db857b0-d99c-41f6-adb7-30affa274cae",
      "documentation": "Retrieves the list of the data lake administrators of a Lake Formation-managed data lake. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSLakeFormation.GetDataLakeSettings",
      "responses": [
        {
          "uuid": "b17e0e19-d27e-46bd-ae9e-517c5b3af8c1",
          "body": "{\n  \"DataLakeSettings\": {\n    \"DataLakeAdmins\": [\n      {\n        \"DataLakePrincipalIdentifier\": \"\"\n      }\n    ],\n    \"CreateDatabaseDefaultPermissions\": [\n      {\n        \"Principal\": {\n          \"DataLakePrincipalIdentifier\": \"\"\n        },\n        \"Permissions\": [\n          \"{{oneOf (array 'ALL' 'SELECT' 'ALTER' 'DROP' 'DELETE' 'INSERT' 'DESCRIBE' 'CREATE_DATABASE' 'CREATE_TABLE' 'DATA_LOCATION_ACCESS' 'CREATE_TAG' 'ALTER_TAG' 'DELETE_TAG' 'DESCRIBE_TAG' 'ASSOCIATE_TAG')}}\"\n        ]\n      }\n    ],\n    \"CreateTableDefaultPermissions\": [\n      {\n        \"Principal\": {\n          \"DataLakePrincipalIdentifier\": \"\"\n        },\n        \"Permissions\": [\n          \"{{oneOf (array 'ALL' 'SELECT' 'ALTER' 'DROP' 'DELETE' 'INSERT' 'DESCRIBE' 'CREATE_DATABASE' 'CREATE_TABLE' 'DATA_LOCATION_ACCESS' 'CREATE_TAG' 'ALTER_TAG' 'DELETE_TAG' 'DESCRIBE_TAG' 'ASSOCIATE_TAG')}}\"\n        ]\n      }\n    ],\n    \"TrustedResourceOwners\": [\n      \"\"\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bfa254b3-8592-4696-b01d-c9511426f1d1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2cec27f3-3c33-456b-9409-f4857288c747",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "170d9b9d-4890-4e57-8123-7471ea535481",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "214912c8-3239-4edb-a4b9-8adc5595576b",
      "documentation": "Returns the Lake Formation permissions for a specified table or database resource located at a path in Amazon S3. <code>GetEffectivePermissionsForPath</code> will not return databases and tables if the catalog is encrypted.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSLakeFormation.GetEffectivePermissionsForPath",
      "responses": [
        {
          "uuid": "e3568e5b-b28d-4d11-b767-366ae8700db5",
          "body": "{\n  \"Permissions\": [\n    {\n      \"Principal\": {\n        \"DataLakePrincipalIdentifier\": \"\"\n      },\n      \"Resource\": {\n        \"Catalog\": {},\n        \"Database\": {\n          \"CatalogId\": \"\",\n          \"Name\": \"\"\n        },\n        \"Table\": {\n          \"CatalogId\": \"\",\n          \"DatabaseName\": \"\",\n          \"Name\": \"\",\n          \"TableWildcard\": {}\n        },\n        \"TableWithColumns\": {\n          \"CatalogId\": \"\",\n          \"DatabaseName\": \"\",\n          \"Name\": \"\",\n          \"ColumnNames\": [\n            \"\"\n          ],\n          \"ColumnWildcard\": {\n            \"ExcludedColumnNames\": [\n              \"\"\n            ]\n          }\n        },\n        \"DataLocation\": {\n          \"CatalogId\": \"\",\n          \"ResourceArn\": \"\"\n        },\n        \"LFTag\": {\n          \"CatalogId\": \"\",\n          \"TagKey\": \"\",\n          \"TagValues\": [\n            \"\"\n          ]\n        },\n        \"LFTagPolicy\": {\n          \"CatalogId\": \"\",\n          \"ResourceType\": \"\",\n          \"Expression\": [\n            {\n              \"TagKey\": \"\",\n              \"TagValues\": [\n                \"\"\n              ]\n            }\n          ]\n        }\n      },\n      \"Permissions\": [\n        \"{{oneOf (array 'ALL' 'SELECT' 'ALTER' 'DROP' 'DELETE' 'INSERT' 'DESCRIBE' 'CREATE_DATABASE' 'CREATE_TABLE' 'DATA_LOCATION_ACCESS' 'CREATE_TAG' 'ALTER_TAG' 'DELETE_TAG' 'DESCRIBE_TAG' 'ASSOCIATE_TAG')}}\"\n      ],\n      \"PermissionsWithGrantOption\": [\n        \"{{oneOf (array 'ALL' 'SELECT' 'ALTER' 'DROP' 'DELETE' 'INSERT' 'DESCRIBE' 'CREATE_DATABASE' 'CREATE_TABLE' 'DATA_LOCATION_ACCESS' 'CREATE_TAG' 'ALTER_TAG' 'DELETE_TAG' 'DESCRIBE_TAG' 'ASSOCIATE_TAG')}}\"\n      ],\n      \"AdditionalDetails\": {\n        \"ResourceShare\": [\n          \"\"\n        ]\n      }\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "27fbaaa7-5061-44d2-93c7-48f608a8e0ac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a1be5ba8-c24e-4006-b8f6-3702ba675d6b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "03612dca-3891-4d28-a523-8c993d68f02a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ed3d50ad-20c8-4cae-a979-c53fc64bccf1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3de7bbf5-f458-466b-92cd-8297f110ed3d",
      "documentation": "Returns a tag definition.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSLakeFormation.GetLFTag",
      "responses": [
        {
          "uuid": "c4428b20-f5d5-4ab1-b5bf-e2e39d400ff8",
          "body": "{\n  \"CatalogId\": \"\",\n  \"TagKey\": \"\",\n  \"TagValues\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0238535f-8bf5-423f-bc5f-9a71d2fd4d31",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b2274b2d-27f8-443f-896c-9e4ba4538690",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0c4c6578-1ac6-4c47-a15d-f3542aecd806",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "365f08c6-f7b8-4415-aa83-61ab08ede790",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2aaa34c0-049a-4007-a939-921565a9de97",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ace1f603-606e-4156-ad18-ae616cc11756",
      "documentation": "Returns the tags applied to a resource.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSLakeFormation.GetResourceLFTags",
      "responses": [
        {
          "uuid": "4433dc74-2b5d-4635-b1bf-2ba4f1e9ac49",
          "body": "{\n  \"LFTagOnDatabase\": [\n    {\n      \"CatalogId\": \"\",\n      \"TagKey\": \"\",\n      \"TagValues\": [\n        \"\"\n      ]\n    }\n  ],\n  \"LFTagsOnTable\": [\n    {\n      \"CatalogId\": \"\",\n      \"TagKey\": \"\",\n      \"TagValues\": [\n        \"\"\n      ]\n    }\n  ],\n  \"LFTagsOnColumns\": [\n    {\n      \"Name\": \"\",\n      \"LFTags\": [\n        {\n          \"CatalogId\": \"\",\n          \"TagKey\": \"\",\n          \"TagValues\": [\n            \"\"\n          ]\n        }\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7e5ee98c-c0a8-45ec-abff-f592420d861e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d8fdae36-d8bf-431a-a697-c110b71d5792",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5deeeb37-ee1c-425f-bb2a-22a968fad419",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1f932d63-bca7-46d2-a14d-d5ab4ff22efa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "47ec7890-1d2f-42f9-8e3a-7d887105fcdf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f52c2688-1fb7-424d-9f29-0d2a8c0409dd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5339a5c7-f07b-44e7-90f9-c073b405ab7d",
      "documentation": "<p>Grants permissions to the principal to access metadata in the Data Catalog and data organized in underlying data storage such as Amazon S3.</p> <p>For information about permissions, see <a href=\"https://docs-aws.amazon.com/lake-formation/latest/dg/security-data-access.html\">Security and Access Control to Metadata and Data</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSLakeFormation.GrantPermissions",
      "responses": [
        {
          "uuid": "195b9706-a64b-4408-87d3-6ffd2473d2eb",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7ebbaf52-e2af-4e15-a34a-38bcece04f12",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3650ba44-875d-4f27-8e66-1175ff7c1c74",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b64a29f9-40fd-4a46-89d6-ff759ef543ea",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ed166aae-c9d6-44d5-b049-183ad4ef618a",
      "documentation": "Lists tags that the requester has permission to view. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSLakeFormation.ListLFTags",
      "responses": [
        {
          "uuid": "5afe2f6e-859e-46d3-94b6-8d6b85a12d7c",
          "body": "{\n  \"LFTags\": [\n    {\n      \"CatalogId\": \"\",\n      \"TagKey\": \"\",\n      \"TagValues\": [\n        \"\"\n      ]\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fff9965d-fa0b-4ee7-8b02-1c7677c70e21",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8ef82929-068f-4c02-9299-7ea0ebec73b4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "243607f6-9454-4427-a702-e22708ab9a2c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "19d74365-4f65-4874-afc9-47893a2087f4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "385db50f-4805-4a31-9b3e-8515ceecd7bc",
      "documentation": "<p>Returns a list of the principal permissions on the resource, filtered by the permissions of the caller. For example, if you are granted an ALTER permission, you are able to see only the principal permissions for ALTER.</p> <p>This operation returns only those permissions that have been explicitly granted.</p> <p>For information about permissions, see <a href=\"https://docs-aws.amazon.com/lake-formation/latest/dg/security-data-access.html\">Security and Access Control to Metadata and Data</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSLakeFormation.ListPermissions",
      "responses": [
        {
          "uuid": "e296beec-b736-46c6-b631-ada2d194cfd8",
          "body": "{\n  \"PrincipalResourcePermissions\": [\n    {\n      \"Principal\": {\n        \"DataLakePrincipalIdentifier\": \"\"\n      },\n      \"Resource\": {\n        \"Catalog\": {},\n        \"Database\": {\n          \"CatalogId\": \"\",\n          \"Name\": \"\"\n        },\n        \"Table\": {\n          \"CatalogId\": \"\",\n          \"DatabaseName\": \"\",\n          \"Name\": \"\",\n          \"TableWildcard\": {}\n        },\n        \"TableWithColumns\": {\n          \"CatalogId\": \"\",\n          \"DatabaseName\": \"\",\n          \"Name\": \"\",\n          \"ColumnNames\": [\n            \"\"\n          ],\n          \"ColumnWildcard\": {\n            \"ExcludedColumnNames\": [\n              \"\"\n            ]\n          }\n        },\n        \"DataLocation\": {\n          \"CatalogId\": \"\",\n          \"ResourceArn\": \"\"\n        },\n        \"LFTag\": {\n          \"CatalogId\": \"\",\n          \"TagKey\": \"\",\n          \"TagValues\": [\n            \"\"\n          ]\n        },\n        \"LFTagPolicy\": {\n          \"CatalogId\": \"\",\n          \"ResourceType\": \"\",\n          \"Expression\": [\n            {\n              \"TagKey\": \"\",\n              \"TagValues\": [\n                \"\"\n              ]\n            }\n          ]\n        }\n      },\n      \"Permissions\": [\n        \"{{oneOf (array 'ALL' 'SELECT' 'ALTER' 'DROP' 'DELETE' 'INSERT' 'DESCRIBE' 'CREATE_DATABASE' 'CREATE_TABLE' 'DATA_LOCATION_ACCESS' 'CREATE_TAG' 'ALTER_TAG' 'DELETE_TAG' 'DESCRIBE_TAG' 'ASSOCIATE_TAG')}}\"\n      ],\n      \"PermissionsWithGrantOption\": [\n        \"{{oneOf (array 'ALL' 'SELECT' 'ALTER' 'DROP' 'DELETE' 'INSERT' 'DESCRIBE' 'CREATE_DATABASE' 'CREATE_TABLE' 'DATA_LOCATION_ACCESS' 'CREATE_TAG' 'ALTER_TAG' 'DELETE_TAG' 'DESCRIBE_TAG' 'ASSOCIATE_TAG')}}\"\n      ],\n      \"AdditionalDetails\": {\n        \"ResourceShare\": [\n          \"\"\n        ]\n      }\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1fb74801-f5fe-432f-bc3d-51261cd39243",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "49818441-f27e-4706-aca0-e9441fca55e9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "74972857-811f-4e50-b055-6c9fc7009e26",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7eb864bc-4a6a-4195-8484-eb510771eab7",
      "documentation": "Lists the resources registered to be managed by the Data Catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSLakeFormation.ListResources",
      "responses": [
        {
          "uuid": "f72db814-1880-4d3d-85b6-21192a4fdde2",
          "body": "{\n  \"ResourceInfoList\": [\n    {\n      \"ResourceArn\": \"\",\n      \"RoleArn\": \"\",\n      \"LastModified\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1b019431-3876-4905-bdd2-c8ff33056f16",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4917de62-224f-4712-97c4-763174a35197",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "176d2397-0acb-446a-aa48-68ba474eeac0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e33ec644-ce77-4671-a03b-f2edeb773218",
      "documentation": "<p>Sets the list of data lake administrators who have admin privileges on all resources managed by Lake Formation. For more information on admin privileges, see <a href=\"https://docs.aws.amazon.com/lake-formation/latest/dg/lake-formation-permissions.html\">Granting Lake Formation Permissions</a>.</p> <p>This API replaces the current list of data lake admins with the new list being passed. To add an admin, fetch the current list and add the new admin to that list and pass that list in this API.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSLakeFormation.PutDataLakeSettings",
      "responses": [
        {
          "uuid": "7cd33d06-c01c-4b1e-9a66-f58203a71788",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "24fee9e3-302a-4dc3-a169-1d66b2e3205a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4b7d2661-64f9-4b73-8fcf-71b963a2c548",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7b8a9eb9-828d-4102-a226-489ffc6ff392",
      "documentation": "<p>Registers the resource as managed by the Data Catalog.</p> <p>To add or update data, Lake Formation needs read/write access to the chosen Amazon S3 path. Choose a role that you know has permission to do this, or choose the AWSServiceRoleForLakeFormationDataAccess service-linked role. When you register the first Amazon S3 path, the service-linked role and a new inline policy are created on your behalf. Lake Formation adds the first path to the inline policy and attaches it to the service-linked role. When you register subsequent paths, Lake Formation adds the path to the existing policy.</p> <p>The following request registers a new location and gives AWS Lake Formation permission to use the service-linked role to access that location.</p> <p> <code>ResourceArn = arn:aws:s3:::my-bucket UseServiceLinkedRole = true</code> </p> <p>If <code>UseServiceLinkedRole</code> is not set to true, you must provide or set the <code>RoleArn</code>:</p> <p> <code>arn:aws:iam::12345:role/my-data-access-role</code> </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSLakeFormation.RegisterResource",
      "responses": [
        {
          "uuid": "221d73d0-1440-4b18-8990-7000b87c74bd",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "173e3d8b-0dc1-4820-b567-d48529c7bd9c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aae4284b-57fb-4dac-925b-f3daa79f08c9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4e889a5f-91a9-409a-b7f0-e3a2f47476dd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "46b1cfd3-4a87-4c88-a6ee-87a7834ec000",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "AlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6c8ab22d-d507-4694-a570-1537ce218a84",
      "documentation": "Removes a tag from the resource. Only database, table, or tableWithColumns resource are allowed. To tag columns, use the column inclusion list in <code>tableWithColumns</code> to specify column input.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSLakeFormation.RemoveLFTagsFromResource",
      "responses": [
        {
          "uuid": "e5d67854-bc9b-4bb2-a268-5a602fb846ce",
          "body": "{\n  \"Failures\": [\n    {\n      \"LFTag\": {\n        \"CatalogId\": \"\",\n        \"TagKey\": \"\",\n        \"TagValues\": [\n          \"\"\n        ]\n      },\n      \"Error\": {\n        \"ErrorCode\": \"\",\n        \"ErrorMessage\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a5cb7776-d2a8-4561-9cdf-3bdad4ab50d9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c1b46bbf-5846-4cb4-b64e-a05f0045aefb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1962f502-be46-4f09-a9e1-76fd6a661690",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "542d307b-ee13-4a0e-9d87-d0c0f22afa32",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "feca3725-f3b9-4344-a97c-568d243854e0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "131da0f1-6a80-48b0-9e1a-2838858b330e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5794dafe-935d-40aa-8753-0ea7c47cfd59",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "71859e1f-4ffc-4c3a-983c-b2c4e0fd447f",
      "documentation": "Revokes permissions to the principal to access metadata in the Data Catalog and data organized in underlying data storage such as Amazon S3.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSLakeFormation.RevokePermissions",
      "responses": [
        {
          "uuid": "9462b7e6-4292-47f7-aa9d-ec632a5e2300",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f7a2ec02-6f38-45e9-87a0-c02844850900",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e3b9b16f-2f37-4534-b303-84de8bd13493",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "13067704-231d-4b63-a9f2-421070ffe6f8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "973860d8-8c57-43ee-bd78-bd5825afbd0a",
      "documentation": "This operation allows a search on <code>DATABASE</code> resources by <code>TagCondition</code>. This operation is used by admins who want to grant user permissions on certain <code>TagConditions</code>. Before making a grant, the admin can use <code>SearchDatabasesByTags</code> to find all resources where the given <code>TagConditions</code> are valid to verify whether the returned resources can be shared.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSLakeFormation.SearchDatabasesByLFTags",
      "responses": [
        {
          "uuid": "28f7f4f8-c0bd-4810-8475-8719642bb59b",
          "body": "{\n  \"NextToken\": \"\",\n  \"DatabaseList\": [\n    {\n      \"Database\": {\n        \"CatalogId\": \"\",\n        \"Name\": \"\"\n      },\n      \"LFTags\": [\n        {\n          \"CatalogId\": \"\",\n          \"TagKey\": \"\",\n          \"TagValues\": [\n            \"\"\n          ]\n        }\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a76fdd51-bdf4-4437-86f3-2602c0b29f3f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a8519434-3fb0-445b-b9eb-d9c214ff3078",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d2aced80-371c-4c09-9285-60fc94d2c295",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fcda2b6c-884d-486d-a6f2-4236e5cc8438",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e2052ff8-d062-44c7-9e05-1e43bd1d7b7c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e6c4b329-f1d2-4f70-b31d-cf47818c2dc9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3c16ab21-5c8f-433e-a608-29a276c0bafc",
      "documentation": "This operation allows a search on <code>TABLE</code> resources by <code>LFTag</code>s. This will be used by admins who want to grant user permissions on certain LFTags. Before making a grant, the admin can use <code>SearchTablesByLFTags</code> to find all resources where the given <code>LFTag</code>s are valid to verify whether the returned resources can be shared.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSLakeFormation.SearchTablesByLFTags",
      "responses": [
        {
          "uuid": "36fad1ba-29f2-49dd-91a0-44cefb94c842",
          "body": "{\n  \"NextToken\": \"\",\n  \"TableList\": [\n    {\n      \"Table\": {\n        \"CatalogId\": \"\",\n        \"DatabaseName\": \"\",\n        \"Name\": \"\",\n        \"TableWildcard\": {}\n      },\n      \"LFTagOnDatabase\": [\n        {\n          \"CatalogId\": \"\",\n          \"TagKey\": \"\",\n          \"TagValues\": [\n            \"\"\n          ]\n        }\n      ],\n      \"LFTagsOnTable\": [\n        {\n          \"CatalogId\": \"\",\n          \"TagKey\": \"\",\n          \"TagValues\": [\n            \"\"\n          ]\n        }\n      ],\n      \"LFTagsOnColumns\": [\n        {\n          \"Name\": \"\",\n          \"LFTags\": [\n            {\n              \"CatalogId\": \"\",\n              \"TagKey\": \"\",\n              \"TagValues\": [\n                \"\"\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7a9e2cc9-c1a9-41e3-8da1-5a12d3fb37d2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "24635075-3bae-44b2-8444-a6e6f7f54511",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6d5a4af5-6463-4d08-bfb3-ae70cd705aa7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e3b8f606-48b6-4bfa-b506-ae9db9158adb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ef0a8a46-c804-4b63-82b7-6ceba74c3139",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5e5616b8-4783-42a3-bb17-c0107e4f74fa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0e4d2a24-0ed9-4058-9535-365449c82d6a",
      "documentation": "Updates the list of possible values for the specified tag key. If the tag does not exist, the operation throws an EntityNotFoundException. The values in the delete key values will be deleted from list of possible values. If any value in the delete key values is attached to a resource, then API errors out with a 400 Exception - \"Update not allowed\". Untag the attribute before deleting the tag key's value. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSLakeFormation.UpdateLFTag",
      "responses": [
        {
          "uuid": "1c462fcc-f58d-45c6-a1e1-e18cf3076e78",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "34a7fa6b-cba6-477b-be7a-631ec6716c19",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "01bb943a-7448-4eac-a58f-b0ed9e6fe1c3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "36ad30bc-7124-40db-8606-167f9b339594",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "778dea10-472a-4ab0-a255-d865429e82f6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a46a6835-6d07-4085-8206-f62a8eedb24f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4978e9a2-a205-491e-bd79-2ba5e29d6107",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "846ba492-a966-4ad4-a324-4cf5a9d37daf",
      "documentation": "Updates the data access role used for vending access to the given (registered) resource in AWS Lake Formation. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSLakeFormation.UpdateResource",
      "responses": [
        {
          "uuid": "42c5a225-6752-4fbb-b9de-848bdb6e8716",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "44afe18e-4c77-4585-a2c5-a60e8298ceb1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "628ef655-789c-4298-8b5b-ec56fdbf711b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2ad053f6-227b-41ce-8d4f-9f69a232c748",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "12c06ec4-276d-4bdd-bfda-ab59c3656147",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}