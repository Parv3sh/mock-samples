{
  "uuid": "47178490-00ef-478e-9e1b-797c1ae361a4",
  "lastMigration": 19,
  "name": "AWS Lake Formation",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "eefaee85-54d1-498f-ab07-4fe35b2e8a2c",
      "documentation": "Attaches one or more tags to an existing resource.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSLakeFormation.AddLFTagsToResource",
      "responses": [
        {
          "uuid": "2b3140d3-2827-437c-a9b9-5cb91c542cb2",
          "body": "{\n  \"Failures\": [\n    {\n      \"LFTag\": {\n        \"CatalogId\": \"\",\n        \"TagKey\": \"\",\n        \"TagValues\": [\n          \"\"\n        ]\n      },\n      \"Error\": {\n        \"ErrorCode\": \"\",\n        \"ErrorMessage\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2f348a74-629d-4a34-ab8f-e7f93cedabff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fa7775e2-c9ce-4ad8-a0e4-f74ef74b27f0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "90d63b6a-5b37-4ed5-831a-306cffc9d612",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "df673cc0-bfb3-4f20-a733-7be944fd9191",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "791050d0-c6fd-4ae8-a8d1-01e4b73717b1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "31ab3904-ba08-4930-8d5f-34df6419f50a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "92fec03a-be40-49b4-872d-9eea48252a0a",
      "documentation": "Batch operation to grant permissions to the principal.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSLakeFormation.BatchGrantPermissions",
      "responses": [
        {
          "uuid": "96305d6f-5d8b-4373-9789-a3edf53dddb2",
          "body": "{\n  \"Failures\": [\n    {\n      \"RequestEntry\": {\n        \"Id\": \"\",\n        \"Principal\": {\n          \"DataLakePrincipalIdentifier\": \"\"\n        },\n        \"Resource\": {\n          \"Catalog\": {},\n          \"Database\": {\n            \"CatalogId\": \"\",\n            \"Name\": \"\"\n          },\n          \"Table\": {\n            \"CatalogId\": \"\",\n            \"DatabaseName\": \"\",\n            \"Name\": \"\",\n            \"TableWildcard\": {}\n          },\n          \"TableWithColumns\": {\n            \"CatalogId\": \"\",\n            \"DatabaseName\": \"\",\n            \"Name\": \"\",\n            \"ColumnNames\": [\n              \"\"\n            ],\n            \"ColumnWildcard\": {\n              \"ExcludedColumnNames\": [\n                \"\"\n              ]\n            }\n          },\n          \"DataLocation\": {\n            \"CatalogId\": \"\",\n            \"ResourceArn\": \"\"\n          },\n          \"LFTag\": {\n            \"CatalogId\": \"\",\n            \"TagKey\": \"\",\n            \"TagValues\": [\n              \"\"\n            ]\n          },\n          \"LFTagPolicy\": {\n            \"CatalogId\": \"\",\n            \"ResourceType\": \"\",\n            \"Expression\": [\n              {\n                \"TagKey\": \"\",\n                \"TagValues\": [\n                  \"\"\n                ]\n              }\n            ]\n          }\n        },\n        \"Permissions\": [\n          \"{{oneOf (array 'ALL' 'SELECT' 'ALTER' 'DROP' 'DELETE' 'INSERT' 'DESCRIBE' 'CREATE_DATABASE' 'CREATE_TABLE' 'DATA_LOCATION_ACCESS' 'CREATE_TAG' 'ALTER_TAG' 'DELETE_TAG' 'DESCRIBE_TAG' 'ASSOCIATE_TAG')}}\"\n        ],\n        \"PermissionsWithGrantOption\": [\n          \"{{oneOf (array 'ALL' 'SELECT' 'ALTER' 'DROP' 'DELETE' 'INSERT' 'DESCRIBE' 'CREATE_DATABASE' 'CREATE_TABLE' 'DATA_LOCATION_ACCESS' 'CREATE_TAG' 'ALTER_TAG' 'DELETE_TAG' 'DESCRIBE_TAG' 'ASSOCIATE_TAG')}}\"\n        ]\n      },\n      \"Error\": {\n        \"ErrorCode\": \"\",\n        \"ErrorMessage\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "34366754-1062-468d-bb8d-84b3f0e7ef96",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "035163d0-c7fa-46d8-9521-30414fae4edc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "490d9aff-c6da-4925-9fd8-dc8401660748",
      "documentation": "Batch operation to revoke permissions from the principal.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSLakeFormation.BatchRevokePermissions",
      "responses": [
        {
          "uuid": "edd90778-ef0f-4e8c-a1c2-62a73bebafab",
          "body": "{\n  \"Failures\": [\n    {\n      \"RequestEntry\": {\n        \"Id\": \"\",\n        \"Principal\": {\n          \"DataLakePrincipalIdentifier\": \"\"\n        },\n        \"Resource\": {\n          \"Catalog\": {},\n          \"Database\": {\n            \"CatalogId\": \"\",\n            \"Name\": \"\"\n          },\n          \"Table\": {\n            \"CatalogId\": \"\",\n            \"DatabaseName\": \"\",\n            \"Name\": \"\",\n            \"TableWildcard\": {}\n          },\n          \"TableWithColumns\": {\n            \"CatalogId\": \"\",\n            \"DatabaseName\": \"\",\n            \"Name\": \"\",\n            \"ColumnNames\": [\n              \"\"\n            ],\n            \"ColumnWildcard\": {\n              \"ExcludedColumnNames\": [\n                \"\"\n              ]\n            }\n          },\n          \"DataLocation\": {\n            \"CatalogId\": \"\",\n            \"ResourceArn\": \"\"\n          },\n          \"LFTag\": {\n            \"CatalogId\": \"\",\n            \"TagKey\": \"\",\n            \"TagValues\": [\n              \"\"\n            ]\n          },\n          \"LFTagPolicy\": {\n            \"CatalogId\": \"\",\n            \"ResourceType\": \"\",\n            \"Expression\": [\n              {\n                \"TagKey\": \"\",\n                \"TagValues\": [\n                  \"\"\n                ]\n              }\n            ]\n          }\n        },\n        \"Permissions\": [\n          \"{{oneOf (array 'ALL' 'SELECT' 'ALTER' 'DROP' 'DELETE' 'INSERT' 'DESCRIBE' 'CREATE_DATABASE' 'CREATE_TABLE' 'DATA_LOCATION_ACCESS' 'CREATE_TAG' 'ALTER_TAG' 'DELETE_TAG' 'DESCRIBE_TAG' 'ASSOCIATE_TAG')}}\"\n        ],\n        \"PermissionsWithGrantOption\": [\n          \"{{oneOf (array 'ALL' 'SELECT' 'ALTER' 'DROP' 'DELETE' 'INSERT' 'DESCRIBE' 'CREATE_DATABASE' 'CREATE_TABLE' 'DATA_LOCATION_ACCESS' 'CREATE_TAG' 'ALTER_TAG' 'DELETE_TAG' 'DESCRIBE_TAG' 'ASSOCIATE_TAG')}}\"\n        ]\n      },\n      \"Error\": {\n        \"ErrorCode\": \"\",\n        \"ErrorMessage\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fd5da28d-f4ed-4110-82f1-acc7bcc47dfc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "364671f6-ae6f-4cb1-846e-989f1fb87eb4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f9324695-fbe2-4342-8a2f-b8e930d0befc",
      "documentation": "Creates a tag with the specified name and values.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSLakeFormation.CreateLFTag",
      "responses": [
        {
          "uuid": "627dab1f-86a8-48c5-9ee7-251020775635",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cf2851a9-e040-41c5-aa42-337fb7425550",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "83fa3cc6-0558-4133-a173-55292f3e3abe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8d7615a7-99c0-4671-9675-1700cc795ec8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9ddaeb92-993b-415d-9cf9-faece5046358",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "030974c9-b54b-4cc1-9181-e02f8744f25f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e64fb1cb-d3c0-4121-983b-f6bbf13b8005",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4826017f-8fd7-40e8-8fe4-ccc83a718827",
      "documentation": "Deletes the specified tag key name. If the attribute key does not exist or the tag does not exist, then the operation will not do anything. If the attribute key exists, then the operation checks if any resources are tagged with this attribute key, if yes, the API throws a 400 Exception with the message \"Delete not allowed\" as the tag key is still attached with resources. You can consider untagging resources with this tag key.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSLakeFormation.DeleteLFTag",
      "responses": [
        {
          "uuid": "52110e35-ff6b-4649-abf5-0f58936b86c2",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "162534cb-c6cf-4674-9f66-f0184ca6f180",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c378fd0d-c90d-4bcd-b21b-0308bff61cc5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d8721715-b774-41c4-a168-b94baae4e572",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "14eef375-58da-436f-9b1e-a7797762f583",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d05d1746-164d-4ca2-8a22-a27b9174e66c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "43dac015-bc24-4678-9984-3084616c6924",
      "documentation": "<p>Deregisters the resource as managed by the Data Catalog.</p> <p>When you deregister a path, Lake Formation removes the path from the inline policy attached to your service-linked role.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSLakeFormation.DeregisterResource",
      "responses": [
        {
          "uuid": "98f01818-fbfd-4b4c-b48f-4a6e044a12b3",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bbb6e9a5-a435-4b6a-abbb-8453711c2bc5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "804c6a6c-c2dc-4a96-aff4-a183fecd21e2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ae2ebf5d-d465-486a-83a2-88ff447b4e38",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5c31c374-4d03-4809-9f44-905a2c6c2145",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "15e85446-a7d4-4225-b20a-b15cc8fa26ab",
      "documentation": "Retrieves the current data access role for the given resource registered in AWS Lake Formation.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSLakeFormation.DescribeResource",
      "responses": [
        {
          "uuid": "3d5d1b4d-d13a-4fb8-be07-fa8deba1cd9b",
          "body": "{\n  \"ResourceInfo\": {\n    \"ResourceArn\": \"\",\n    \"RoleArn\": \"\",\n    \"LastModified\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5db97cb2-2613-43ea-95d2-71b78b483b1b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d41e2eb7-0e38-4943-9aca-5375b1118f33",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6a48f836-c5e4-4748-92c4-6291edd53ead",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "59ff82a2-7ea6-41de-a66a-693c5dfabc61",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "118fd860-67c4-4c89-8ec9-f1408a29bf39",
      "documentation": "Retrieves the list of the data lake administrators of a Lake Formation-managed data lake. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSLakeFormation.GetDataLakeSettings",
      "responses": [
        {
          "uuid": "98e71e38-83ae-4e8b-b553-092d5b6b87da",
          "body": "{\n  \"DataLakeSettings\": {\n    \"DataLakeAdmins\": [\n      {\n        \"DataLakePrincipalIdentifier\": \"\"\n      }\n    ],\n    \"CreateDatabaseDefaultPermissions\": [\n      {\n        \"Principal\": {\n          \"DataLakePrincipalIdentifier\": \"\"\n        },\n        \"Permissions\": [\n          \"{{oneOf (array 'ALL' 'SELECT' 'ALTER' 'DROP' 'DELETE' 'INSERT' 'DESCRIBE' 'CREATE_DATABASE' 'CREATE_TABLE' 'DATA_LOCATION_ACCESS' 'CREATE_TAG' 'ALTER_TAG' 'DELETE_TAG' 'DESCRIBE_TAG' 'ASSOCIATE_TAG')}}\"\n        ]\n      }\n    ],\n    \"CreateTableDefaultPermissions\": [\n      {\n        \"Principal\": {\n          \"DataLakePrincipalIdentifier\": \"\"\n        },\n        \"Permissions\": [\n          \"{{oneOf (array 'ALL' 'SELECT' 'ALTER' 'DROP' 'DELETE' 'INSERT' 'DESCRIBE' 'CREATE_DATABASE' 'CREATE_TABLE' 'DATA_LOCATION_ACCESS' 'CREATE_TAG' 'ALTER_TAG' 'DELETE_TAG' 'DESCRIBE_TAG' 'ASSOCIATE_TAG')}}\"\n        ]\n      }\n    ],\n    \"TrustedResourceOwners\": [\n      \"\"\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3165de0d-4a6e-431b-a325-5c9800f22405",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b7d2c273-703b-4ff8-b540-30c4b81d3e4c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d99eb0e1-633a-40e7-acd2-c1a42811b035",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6cdc010b-6e35-4c0b-8751-a56e21f43c11",
      "documentation": "Returns the Lake Formation permissions for a specified table or database resource located at a path in Amazon S3. <code>GetEffectivePermissionsForPath</code> will not return databases and tables if the catalog is encrypted.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSLakeFormation.GetEffectivePermissionsForPath",
      "responses": [
        {
          "uuid": "bad9f781-fd10-4855-9338-5363bdb64fca",
          "body": "{\n  \"Permissions\": [\n    {\n      \"Principal\": {\n        \"DataLakePrincipalIdentifier\": \"\"\n      },\n      \"Resource\": {\n        \"Catalog\": {},\n        \"Database\": {\n          \"CatalogId\": \"\",\n          \"Name\": \"\"\n        },\n        \"Table\": {\n          \"CatalogId\": \"\",\n          \"DatabaseName\": \"\",\n          \"Name\": \"\",\n          \"TableWildcard\": {}\n        },\n        \"TableWithColumns\": {\n          \"CatalogId\": \"\",\n          \"DatabaseName\": \"\",\n          \"Name\": \"\",\n          \"ColumnNames\": [\n            \"\"\n          ],\n          \"ColumnWildcard\": {\n            \"ExcludedColumnNames\": [\n              \"\"\n            ]\n          }\n        },\n        \"DataLocation\": {\n          \"CatalogId\": \"\",\n          \"ResourceArn\": \"\"\n        },\n        \"LFTag\": {\n          \"CatalogId\": \"\",\n          \"TagKey\": \"\",\n          \"TagValues\": [\n            \"\"\n          ]\n        },\n        \"LFTagPolicy\": {\n          \"CatalogId\": \"\",\n          \"ResourceType\": \"\",\n          \"Expression\": [\n            {\n              \"TagKey\": \"\",\n              \"TagValues\": [\n                \"\"\n              ]\n            }\n          ]\n        }\n      },\n      \"Permissions\": [\n        \"{{oneOf (array 'ALL' 'SELECT' 'ALTER' 'DROP' 'DELETE' 'INSERT' 'DESCRIBE' 'CREATE_DATABASE' 'CREATE_TABLE' 'DATA_LOCATION_ACCESS' 'CREATE_TAG' 'ALTER_TAG' 'DELETE_TAG' 'DESCRIBE_TAG' 'ASSOCIATE_TAG')}}\"\n      ],\n      \"PermissionsWithGrantOption\": [\n        \"{{oneOf (array 'ALL' 'SELECT' 'ALTER' 'DROP' 'DELETE' 'INSERT' 'DESCRIBE' 'CREATE_DATABASE' 'CREATE_TABLE' 'DATA_LOCATION_ACCESS' 'CREATE_TAG' 'ALTER_TAG' 'DELETE_TAG' 'DESCRIBE_TAG' 'ASSOCIATE_TAG')}}\"\n      ],\n      \"AdditionalDetails\": {\n        \"ResourceShare\": [\n          \"\"\n        ]\n      }\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7b18423b-f416-433f-bb7a-d838025dbf58",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e24f7837-f7ef-44a3-a56a-672e92d5d3dc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "259dad59-96dc-4112-8d4c-6dfd0b95835a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "db3b4f54-e3d1-4f71-abcf-7507a867f71d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "64419d51-4d8b-4f76-8869-f2390b5887e2",
      "documentation": "Returns a tag definition.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSLakeFormation.GetLFTag",
      "responses": [
        {
          "uuid": "bea7a07f-4e00-4465-8b97-fc8be9654ef5",
          "body": "{\n  \"CatalogId\": \"\",\n  \"TagKey\": \"\",\n  \"TagValues\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a167bb35-5d20-4c57-abd4-5f5ed488547b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e6380202-ed81-4c61-b16f-63536ef23598",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2485548b-878d-47cf-abb5-0a1946a27a42",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0d3bc7ec-0aa8-4c01-8a56-1794577b235c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "689f9bda-1809-4488-a782-b3f3fd7c964d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3320c029-5308-4aa6-b7a3-194833b9273c",
      "documentation": "Returns the tags applied to a resource.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSLakeFormation.GetResourceLFTags",
      "responses": [
        {
          "uuid": "464a4495-0c1b-4ff6-a878-9f9ccfca9d8d",
          "body": "{\n  \"LFTagOnDatabase\": [\n    {\n      \"CatalogId\": \"\",\n      \"TagKey\": \"\",\n      \"TagValues\": [\n        \"\"\n      ]\n    }\n  ],\n  \"LFTagsOnTable\": [\n    {\n      \"CatalogId\": \"\",\n      \"TagKey\": \"\",\n      \"TagValues\": [\n        \"\"\n      ]\n    }\n  ],\n  \"LFTagsOnColumns\": [\n    {\n      \"Name\": \"\",\n      \"LFTags\": [\n        {\n          \"CatalogId\": \"\",\n          \"TagKey\": \"\",\n          \"TagValues\": [\n            \"\"\n          ]\n        }\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e9c217ba-5480-4a6e-870a-b28f5ad291f9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d8f47fb3-a269-43c1-aa3f-d1142b8b9a24",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "241e2466-30bc-4d0c-9e3c-e9bdbd6a828c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "79a54fc9-6fb2-4548-bcf2-40b7fd15c7fe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b46aa64c-4b2d-4c5d-bf84-e743649f2cf7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "684543af-73f0-4f8f-bd31-aa6580e2e6ca",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9985dc40-c4c5-435c-b480-d32449269e14",
      "documentation": "<p>Grants permissions to the principal to access metadata in the Data Catalog and data organized in underlying data storage such as Amazon S3.</p> <p>For information about permissions, see <a href=\"https://docs-aws.amazon.com/lake-formation/latest/dg/security-data-access.html\">Security and Access Control to Metadata and Data</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSLakeFormation.GrantPermissions",
      "responses": [
        {
          "uuid": "f8a3d85d-1c86-40d4-9c29-4a8f3308f350",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "84f96681-96f0-40e3-8803-f2bf2a335b6c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ad02e6d5-f810-425d-802e-59344ea5d406",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "71414cb5-ee7c-4588-8bf1-9a37f6072a80",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "12eb9719-a03e-4840-ba29-afccccebdbf6",
      "documentation": "Lists tags that the requester has permission to view. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSLakeFormation.ListLFTags",
      "responses": [
        {
          "uuid": "04afcb36-648f-4597-955e-9593029d329d",
          "body": "{\n  \"LFTags\": [\n    {\n      \"CatalogId\": \"\",\n      \"TagKey\": \"\",\n      \"TagValues\": [\n        \"\"\n      ]\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "979a538b-3876-4d15-a7ba-e9e068f8b353",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "054cc1b9-734b-4952-b794-77ea7ce79db3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "052bed44-4faf-4495-816c-9fdb1f83cdf4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9b74952b-acb5-43de-af63-065974490cd2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c45456d1-56bf-4361-8c80-c67d2768ea6f",
      "documentation": "<p>Returns a list of the principal permissions on the resource, filtered by the permissions of the caller. For example, if you are granted an ALTER permission, you are able to see only the principal permissions for ALTER.</p> <p>This operation returns only those permissions that have been explicitly granted.</p> <p>For information about permissions, see <a href=\"https://docs-aws.amazon.com/lake-formation/latest/dg/security-data-access.html\">Security and Access Control to Metadata and Data</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSLakeFormation.ListPermissions",
      "responses": [
        {
          "uuid": "439da203-b73f-481a-bb31-2590b2b99907",
          "body": "{\n  \"PrincipalResourcePermissions\": [\n    {\n      \"Principal\": {\n        \"DataLakePrincipalIdentifier\": \"\"\n      },\n      \"Resource\": {\n        \"Catalog\": {},\n        \"Database\": {\n          \"CatalogId\": \"\",\n          \"Name\": \"\"\n        },\n        \"Table\": {\n          \"CatalogId\": \"\",\n          \"DatabaseName\": \"\",\n          \"Name\": \"\",\n          \"TableWildcard\": {}\n        },\n        \"TableWithColumns\": {\n          \"CatalogId\": \"\",\n          \"DatabaseName\": \"\",\n          \"Name\": \"\",\n          \"ColumnNames\": [\n            \"\"\n          ],\n          \"ColumnWildcard\": {\n            \"ExcludedColumnNames\": [\n              \"\"\n            ]\n          }\n        },\n        \"DataLocation\": {\n          \"CatalogId\": \"\",\n          \"ResourceArn\": \"\"\n        },\n        \"LFTag\": {\n          \"CatalogId\": \"\",\n          \"TagKey\": \"\",\n          \"TagValues\": [\n            \"\"\n          ]\n        },\n        \"LFTagPolicy\": {\n          \"CatalogId\": \"\",\n          \"ResourceType\": \"\",\n          \"Expression\": [\n            {\n              \"TagKey\": \"\",\n              \"TagValues\": [\n                \"\"\n              ]\n            }\n          ]\n        }\n      },\n      \"Permissions\": [\n        \"{{oneOf (array 'ALL' 'SELECT' 'ALTER' 'DROP' 'DELETE' 'INSERT' 'DESCRIBE' 'CREATE_DATABASE' 'CREATE_TABLE' 'DATA_LOCATION_ACCESS' 'CREATE_TAG' 'ALTER_TAG' 'DELETE_TAG' 'DESCRIBE_TAG' 'ASSOCIATE_TAG')}}\"\n      ],\n      \"PermissionsWithGrantOption\": [\n        \"{{oneOf (array 'ALL' 'SELECT' 'ALTER' 'DROP' 'DELETE' 'INSERT' 'DESCRIBE' 'CREATE_DATABASE' 'CREATE_TABLE' 'DATA_LOCATION_ACCESS' 'CREATE_TAG' 'ALTER_TAG' 'DELETE_TAG' 'DESCRIBE_TAG' 'ASSOCIATE_TAG')}}\"\n      ],\n      \"AdditionalDetails\": {\n        \"ResourceShare\": [\n          \"\"\n        ]\n      }\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "95f8ba0e-0e12-46ba-8aa5-60d256510ab3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4280e0a8-463b-4e75-b1c1-52878e6068eb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0c44a9cc-aa1f-4a91-8204-fbbf8482e07b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "19b8ecf4-0973-41e0-93af-6af9e504a208",
      "documentation": "Lists the resources registered to be managed by the Data Catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSLakeFormation.ListResources",
      "responses": [
        {
          "uuid": "0f7f5a82-d2ad-46b5-8a47-66c2667ab508",
          "body": "{\n  \"ResourceInfoList\": [\n    {\n      \"ResourceArn\": \"\",\n      \"RoleArn\": \"\",\n      \"LastModified\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3f0480b6-37e9-494c-b0e7-2a83cd7d55b8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "05023df3-4056-451a-9b4e-29ca880abc65",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a0899a82-69a4-4216-8b60-e428bf7fabfe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3998efe3-bc70-4ffa-9114-feaba643c539",
      "documentation": "<p>Sets the list of data lake administrators who have admin privileges on all resources managed by Lake Formation. For more information on admin privileges, see <a href=\"https://docs.aws.amazon.com/lake-formation/latest/dg/lake-formation-permissions.html\">Granting Lake Formation Permissions</a>.</p> <p>This API replaces the current list of data lake admins with the new list being passed. To add an admin, fetch the current list and add the new admin to that list and pass that list in this API.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSLakeFormation.PutDataLakeSettings",
      "responses": [
        {
          "uuid": "d2f0dd27-3b32-4441-86fa-64d5a4292216",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "64c7e2f0-f452-45fe-af6b-03c3ede92bd0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e8513117-b00d-4c7a-9c89-775d78b71592",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3d603cf3-7095-44eb-a9fb-59c863251035",
      "documentation": "<p>Registers the resource as managed by the Data Catalog.</p> <p>To add or update data, Lake Formation needs read/write access to the chosen Amazon S3 path. Choose a role that you know has permission to do this, or choose the AWSServiceRoleForLakeFormationDataAccess service-linked role. When you register the first Amazon S3 path, the service-linked role and a new inline policy are created on your behalf. Lake Formation adds the first path to the inline policy and attaches it to the service-linked role. When you register subsequent paths, Lake Formation adds the path to the existing policy.</p> <p>The following request registers a new location and gives AWS Lake Formation permission to use the service-linked role to access that location.</p> <p> <code>ResourceArn = arn:aws:s3:::my-bucket UseServiceLinkedRole = true</code> </p> <p>If <code>UseServiceLinkedRole</code> is not set to true, you must provide or set the <code>RoleArn</code>:</p> <p> <code>arn:aws:iam::12345:role/my-data-access-role</code> </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSLakeFormation.RegisterResource",
      "responses": [
        {
          "uuid": "4eb4ff4a-aa6a-455a-833a-2d58dd48c155",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "23e7734b-e9e4-4225-92e5-dcea253f135e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ad992617-d802-4a71-bdd8-e5e0f2498c04",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a81a3f03-16fa-4a76-aa53-2f08671d2e84",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "334205d0-67ab-4be3-bd0e-00cdf576300b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "AlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "16a1dfc4-47ee-4d13-9e4f-b47c0c7863a9",
      "documentation": "Removes a tag from the resource. Only database, table, or tableWithColumns resource are allowed. To tag columns, use the column inclusion list in <code>tableWithColumns</code> to specify column input.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSLakeFormation.RemoveLFTagsFromResource",
      "responses": [
        {
          "uuid": "c53a7039-82c9-44a0-8950-40dc1c55be62",
          "body": "{\n  \"Failures\": [\n    {\n      \"LFTag\": {\n        \"CatalogId\": \"\",\n        \"TagKey\": \"\",\n        \"TagValues\": [\n          \"\"\n        ]\n      },\n      \"Error\": {\n        \"ErrorCode\": \"\",\n        \"ErrorMessage\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "939e57e2-8e11-490d-9f4c-7c077eab5752",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "816ac815-f3e0-4473-b120-8b3d3ad5886a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b627deb3-f98b-4236-bcf6-c013153f445a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f54d4848-a0a8-4be9-9089-bf80cffc5e4f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a82243b1-17cd-490d-a40f-f73f6192daf9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ae435aa4-f9ec-4e04-8ccd-8c1021c1ea50",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cf268be8-91ce-488f-b821-3c82f8f25cad",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ca094d2a-d4a6-4b3c-b65a-3b30952c95ec",
      "documentation": "Revokes permissions to the principal to access metadata in the Data Catalog and data organized in underlying data storage such as Amazon S3.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSLakeFormation.RevokePermissions",
      "responses": [
        {
          "uuid": "5eac76d9-c593-4c7a-b214-0362974dd6d7",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "815b559b-8e4e-45fe-976e-53085bcee14b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eb9447dd-ac0d-47ab-b607-447d303120be",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "feeacb3b-6990-42af-abe5-e969a5141f7e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "944077cb-7aaf-466b-b9b7-dca3862470b6",
      "documentation": "This operation allows a search on <code>DATABASE</code> resources by <code>TagCondition</code>. This operation is used by admins who want to grant user permissions on certain <code>TagConditions</code>. Before making a grant, the admin can use <code>SearchDatabasesByTags</code> to find all resources where the given <code>TagConditions</code> are valid to verify whether the returned resources can be shared.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSLakeFormation.SearchDatabasesByLFTags",
      "responses": [
        {
          "uuid": "e1f08e2d-f353-4735-8e6b-58dd4cf4acde",
          "body": "{\n  \"NextToken\": \"\",\n  \"DatabaseList\": [\n    {\n      \"Database\": {\n        \"CatalogId\": \"\",\n        \"Name\": \"\"\n      },\n      \"LFTags\": [\n        {\n          \"CatalogId\": \"\",\n          \"TagKey\": \"\",\n          \"TagValues\": [\n            \"\"\n          ]\n        }\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "83de8cd2-a928-49b3-b22b-d623140d3ea8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cfa89e5c-bb30-46fb-bc42-cf37e93a8c3a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4d926250-82e1-4d4c-8c6c-2f74f7966cd8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3bef8429-6faa-42c1-9eb0-848ee10f86d6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dc0d6649-0677-4d3c-8b46-8eb039711557",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eaaf0e15-86ed-43d1-a2d8-510443d6ffc8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4a57a15b-af0e-464d-a80d-c808335f2006",
      "documentation": "This operation allows a search on <code>TABLE</code> resources by <code>LFTag</code>s. This will be used by admins who want to grant user permissions on certain LFTags. Before making a grant, the admin can use <code>SearchTablesByLFTags</code> to find all resources where the given <code>LFTag</code>s are valid to verify whether the returned resources can be shared.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSLakeFormation.SearchTablesByLFTags",
      "responses": [
        {
          "uuid": "f896fb44-1300-4029-8516-5d43795d5262",
          "body": "{\n  \"NextToken\": \"\",\n  \"TableList\": [\n    {\n      \"Table\": {\n        \"CatalogId\": \"\",\n        \"DatabaseName\": \"\",\n        \"Name\": \"\",\n        \"TableWildcard\": {}\n      },\n      \"LFTagOnDatabase\": [\n        {\n          \"CatalogId\": \"\",\n          \"TagKey\": \"\",\n          \"TagValues\": [\n            \"\"\n          ]\n        }\n      ],\n      \"LFTagsOnTable\": [\n        {\n          \"CatalogId\": \"\",\n          \"TagKey\": \"\",\n          \"TagValues\": [\n            \"\"\n          ]\n        }\n      ],\n      \"LFTagsOnColumns\": [\n        {\n          \"Name\": \"\",\n          \"LFTags\": [\n            {\n              \"CatalogId\": \"\",\n              \"TagKey\": \"\",\n              \"TagValues\": [\n                \"\"\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "53a8d68e-d1c4-4121-8f14-2faf481f8feb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "91a8cd72-08dd-4f17-be95-4b49957a0225",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1e71efc5-80e7-4a39-9225-1c003e9ce8d6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0fbbc66b-bcc3-499f-9b7f-3e847e8b1009",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ae021908-44f9-4082-8442-ee63bc011250",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0c8e50f3-8fd3-430d-bb18-b4e87b7c884a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bdcfc2c5-8830-4866-996d-313f77e65f4d",
      "documentation": "Updates the list of possible values for the specified tag key. If the tag does not exist, the operation throws an EntityNotFoundException. The values in the delete key values will be deleted from list of possible values. If any value in the delete key values is attached to a resource, then API errors out with a 400 Exception - \"Update not allowed\". Untag the attribute before deleting the tag key's value. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSLakeFormation.UpdateLFTag",
      "responses": [
        {
          "uuid": "df866d30-97ab-4a91-8c5d-e13e32fcd871",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "315c77eb-ee62-4b79-90f1-501b40d75a53",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f0cf7439-9aa7-45ca-9086-449415d71309",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7fd7352c-e006-4a62-a2c1-048453082d42",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bd20a9ad-d6bd-4257-9188-5f371a2568de",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4c3322c7-fea1-431d-8f8b-f092360eb4b1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "06a1bf84-6222-4e71-804b-38cd39823d70",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2260124a-1d04-416f-b9c9-adbb81b994c3",
      "documentation": "Updates the data access role used for vending access to the given (registered) resource in AWS Lake Formation. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSLakeFormation.UpdateResource",
      "responses": [
        {
          "uuid": "c47dd40b-9522-415d-990c-20ca9764d08d",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c2a8edb3-0ca0-4abc-80a0-610db82ed1f6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "499e3d68-1b65-4bf3-8c4b-a15f830d6e54",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a3972d25-ca5f-4fb7-91cc-827e5b5f8cb5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "35af60d5-4da6-4c43-8c21-ba7e704f27dd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}