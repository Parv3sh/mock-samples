{
  "uuid": "5ac15da4-75e6-43db-ba77-828bf0928a3f",
  "lastMigration": 19,
  "name": "Remote Build Execution API",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "b7a4229a-b484-48fa-a4e2-26b529e5df59",
      "documentation": "Deletes the specified worker pool. Returns a long running operation, which contains a `google.protobuf.Empty` response on completion. While the long running operation is in progress, any call to `GetWorkerPool` returns a worker pool in state `DELETING`.",
      "method": "delete",
      "endpoint": "v1alpha/:name",
      "responses": [
        {
          "uuid": "ae848872-706c-4bb7-8ebc-b9f3308d9b67",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cb12fd26-d1b0-4285-a108-5c70a27e3bd8",
      "documentation": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "method": "get",
      "endpoint": "v1alpha/:name",
      "responses": [
        {
          "uuid": "e1235aba-d515-43c6-af40-c2f62b04cf71",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2dde3cc7-f73a-4432-b198-890f6bf7b5a7",
      "documentation": "Updates an existing worker pool with a specified size and/or configuration. Returns a long running operation, which contains a worker pool on completion. While the long running operation is in progress, any call to `GetWorkerPool` returns a worker pool in state `UPDATING`.",
      "method": "patch",
      "endpoint": "v1alpha/:name",
      "responses": [
        {
          "uuid": "4adf0d1a-900e-4c71-8e8e-18a6276a4986",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "76922b40-cbc3-444c-bd52-73be61865efb",
      "documentation": "Lists instances in a project.",
      "method": "get",
      "endpoint": "v1alpha/:parent/instances",
      "responses": [
        {
          "uuid": "ae4c9e4b-3127-4b15-9e21-633d6a709606",
          "body": "{\n  \"instances\": [\n    {\n      \"featurePolicy\": {\n        \"containerImageSources\": {\n          \"allowedValues\": [\n            \"\"\n          ],\n          \"policy\": \"{{oneOf (array 'POLICY_UNSPECIFIED' 'ALLOWED' 'FORBIDDEN' 'RESTRICTED')}}\"\n        },\n        \"dockerAddCapabilities\": {\n          \"allowedValues\": [\n            \"\"\n          ],\n          \"policy\": \"{{oneOf (array 'POLICY_UNSPECIFIED' 'ALLOWED' 'FORBIDDEN' 'RESTRICTED')}}\"\n        },\n        \"dockerChrootPath\": {\n          \"allowedValues\": [\n            \"\"\n          ],\n          \"policy\": \"{{oneOf (array 'POLICY_UNSPECIFIED' 'ALLOWED' 'FORBIDDEN' 'RESTRICTED')}}\"\n        },\n        \"dockerNetwork\": {\n          \"allowedValues\": [\n            \"\"\n          ],\n          \"policy\": \"{{oneOf (array 'POLICY_UNSPECIFIED' 'ALLOWED' 'FORBIDDEN' 'RESTRICTED')}}\"\n        },\n        \"dockerPrivileged\": {\n          \"allowedValues\": [\n            \"\"\n          ],\n          \"policy\": \"{{oneOf (array 'POLICY_UNSPECIFIED' 'ALLOWED' 'FORBIDDEN' 'RESTRICTED')}}\"\n        },\n        \"dockerRunAsRoot\": {\n          \"allowedValues\": [\n            \"\"\n          ],\n          \"policy\": \"{{oneOf (array 'POLICY_UNSPECIFIED' 'ALLOWED' 'FORBIDDEN' 'RESTRICTED')}}\"\n        },\n        \"dockerRuntime\": {\n          \"allowedValues\": [\n            \"\"\n          ],\n          \"policy\": \"{{oneOf (array 'POLICY_UNSPECIFIED' 'ALLOWED' 'FORBIDDEN' 'RESTRICTED')}}\"\n        },\n        \"dockerSiblingContainers\": {\n          \"allowedValues\": [\n            \"\"\n          ],\n          \"policy\": \"{{oneOf (array 'POLICY_UNSPECIFIED' 'ALLOWED' 'FORBIDDEN' 'RESTRICTED')}}\"\n        },\n        \"linuxIsolation\": \"{{oneOf (array 'LINUX_ISOLATION_UNSPECIFIED' 'GVISOR' 'OFF')}}\"\n      },\n      \"location\": \"\",\n      \"loggingEnabled\": {{faker 'random.boolean'}},\n      \"name\": \"\",\n      \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'CREATING' 'RUNNING' 'INACTIVE')}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c0b46360-690a-443c-9762-d2674b764223",
      "documentation": "Creates a new instance in the specified region. Returns a long running operation which contains an instance on completion. While the long running operation is in progress, any call to `GetInstance` returns an instance in state `CREATING`.",
      "method": "post",
      "endpoint": "v1alpha/:parent/instances",
      "responses": [
        {
          "uuid": "5d077e38-b5e0-45e5-a841-da32b03e95f5",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "deb19a26-1577-48de-adc5-941e05271fff",
      "documentation": "Lists worker pools in an instance.",
      "method": "get",
      "endpoint": "v1alpha/:parent/workerpools",
      "responses": [
        {
          "uuid": "a6c7244b-85e7-460b-8331-0e1485821e5b",
          "body": "{\n  \"workerPools\": [\n    {\n      \"autoscale\": {\n        \"maxSize\": \"\",\n        \"minSize\": \"\"\n      },\n      \"channel\": \"\",\n      \"name\": \"\",\n      \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'CREATING' 'RUNNING' 'UPDATING' 'DELETING' 'INACTIVE')}}\",\n      \"workerConfig\": {\n        \"accelerator\": {\n          \"acceleratorCount\": \"\",\n          \"acceleratorType\": \"\"\n        },\n        \"diskSizeGb\": \"\",\n        \"diskType\": \"\",\n        \"labels\": {},\n        \"machineType\": \"\",\n        \"maxConcurrentActions\": \"\",\n        \"minCpuPlatform\": \"\",\n        \"networkAccess\": \"\",\n        \"reserved\": {{faker 'random.boolean'}},\n        \"soleTenantNodeType\": \"\",\n        \"vmImage\": \"\"\n      },\n      \"workerCount\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "83bbfdc4-a79d-4247-8ac0-2feb2ee7c2e4",
      "documentation": "Creates a new worker pool with a specified size and configuration. Returns a long running operation which contains a worker pool on completion. While the long running operation is in progress, any call to `GetWorkerPool` returns a worker pool in state `CREATING`.",
      "method": "post",
      "endpoint": "v1alpha/:parent/workerpools",
      "responses": [
        {
          "uuid": "2b873fae-bee9-49ac-ab58-42671940fc51",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}