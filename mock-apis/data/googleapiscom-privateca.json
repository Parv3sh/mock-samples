{
  "uuid": "b5755508-539c-43d7-9edf-86e06b30532f",
  "lastMigration": 19,
  "name": "Certificate Authority API",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "c439f114-f76c-4e1d-a43d-0902f133961e",
      "documentation": "FetchCaCerts returns the current trust anchor for the CaPool. This will include CA certificate chains for all ACTIVE CertificateAuthority resources in the CaPool.",
      "method": "post",
      "endpoint": "v1/:caPool:fetchCaCerts",
      "responses": [
        {
          "uuid": "8eb9269b-978d-426d-b417-e49f613a848a",
          "body": "{\n  \"caCerts\": [\n    {\n      \"certificates\": [\n        \"\"\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "43aaa0fd-63f5-465d-b1d6-905ea7780dce",
      "documentation": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
      "method": "delete",
      "endpoint": "v1/:name",
      "responses": [
        {
          "uuid": "94c7b39e-9ae5-40c1-aa9f-ad76ce5f2dd6",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6f2c7f7b-ae98-4e3f-b05d-e0b88e12c9e1",
      "documentation": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "method": "get",
      "endpoint": "v1/:name",
      "responses": [
        {
          "uuid": "09452ae6-d09a-4483-bb5f-c4074cffdc4c",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c3d89c62-21a1-4782-a04c-ffc2e031822c",
      "documentation": "Update a CertificateTemplate.",
      "method": "patch",
      "endpoint": "v1/:name",
      "responses": [
        {
          "uuid": "f2f4168c-c1a2-45d1-8ee8-bfe9a712a93c",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "256f99be-f7d8-4e11-80f9-977d42ca60c9",
      "documentation": "Lists information about the supported locations for this service.",
      "method": "get",
      "endpoint": "v1/:name/locations",
      "responses": [
        {
          "uuid": "c6fd41c3-5d6b-4f7f-84ab-686be6da4f20",
          "body": "{\n  \"locations\": [\n    {\n      \"displayName\": \"\",\n      \"labels\": {},\n      \"locationId\": \"\",\n      \"metadata\": {},\n      \"name\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4a0a485d-6000-4ff3-a3c7-9739300eb4ac",
      "documentation": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
      "method": "get",
      "endpoint": "v1/:name/operations",
      "responses": [
        {
          "uuid": "155921e2-fe72-43cf-a376-f4f0ef21e153",
          "body": "{\n  \"nextPageToken\": \"\",\n  \"operations\": [\n    {\n      \"done\": {{faker 'random.boolean'}},\n      \"error\": {\n        \"code\": {{faker 'random.number'}},\n        \"details\": [\n          {}\n        ],\n        \"message\": \"\"\n      },\n      \"metadata\": {},\n      \"name\": \"\",\n      \"response\": {}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ed34b90a-4755-43ac-873d-275a5a64118a",
      "documentation": "Activate a CertificateAuthority that is in state AWAITING_USER_ACTIVATION and is of type SUBORDINATE. After the parent Certificate Authority signs a certificate signing request from FetchCertificateAuthorityCsr, this method can complete the activation process.",
      "method": "post",
      "endpoint": "v1/:name:activate",
      "responses": [
        {
          "uuid": "2039223d-8a91-415d-bfdb-cc769ee0ff8a",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "db26b01d-f3b5-4156-8c50-0e84376e4bc2",
      "documentation": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
      "method": "post",
      "endpoint": "v1/:name:cancel",
      "responses": [
        {
          "uuid": "5bece9cd-e5ef-4c6b-b7f8-7b224833c28d",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "983b32ca-a4ae-42f5-b9b2-dbf50af772ac",
      "documentation": "Disable a CertificateAuthority.",
      "method": "post",
      "endpoint": "v1/:name:disable",
      "responses": [
        {
          "uuid": "d7999c25-34b1-4b6f-8a62-ad09f7f762ce",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "63ea43a4-ef8f-400d-917c-95623e5fa2f9",
      "documentation": "Enable a CertificateAuthority.",
      "method": "post",
      "endpoint": "v1/:name:enable",
      "responses": [
        {
          "uuid": "a6b3d0cd-2fe3-4255-b0bb-812bd02f30a1",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "261e2900-6915-480c-9c1f-931457bfa5f8",
      "documentation": "Fetch a certificate signing request (CSR) from a CertificateAuthority that is in state AWAITING_USER_ACTIVATION and is of type SUBORDINATE. The CSR must then be signed by the desired parent Certificate Authority, which could be another CertificateAuthority resource, or could be an on-prem certificate authority. See also ActivateCertificateAuthority.",
      "method": "get",
      "endpoint": "v1/:name:fetch",
      "responses": [
        {
          "uuid": "beb556bf-a5f4-4135-ba7a-685b16bbc742",
          "body": "{\n  \"pemCsr\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8db45aeb-c05f-433b-b929-da465294aa99",
      "documentation": "Revoke a Certificate.",
      "method": "post",
      "endpoint": "v1/:name:revoke",
      "responses": [
        {
          "uuid": "3a168ec2-6e72-4610-8950-8fa07e96e61c",
          "body": "{\n  \"certificateDescription\": {\n    \"aiaIssuingCertificateUrls\": [\n      \"\"\n    ],\n    \"authorityKeyId\": {\n      \"keyId\": \"\"\n    },\n    \"certFingerprint\": {\n      \"sha256Hash\": \"\"\n    },\n    \"crlDistributionPoints\": [\n      \"\"\n    ],\n    \"publicKey\": {\n      \"format\": \"{{oneOf (array 'KEY_FORMAT_UNSPECIFIED' 'PEM')}}\",\n      \"key\": \"\"\n    },\n    \"subjectDescription\": {\n      \"hexSerialNumber\": \"\",\n      \"lifetime\": \"\",\n      \"notAfterTime\": \"\",\n      \"notBeforeTime\": \"\",\n      \"subject\": {\n        \"commonName\": \"\",\n        \"countryCode\": \"\",\n        \"locality\": \"\",\n        \"organization\": \"\",\n        \"organizationalUnit\": \"\",\n        \"postalCode\": \"\",\n        \"province\": \"\",\n        \"streetAddress\": \"\"\n      },\n      \"subjectAltName\": {\n        \"customSans\": [\n          {\n            \"critical\": {{faker 'random.boolean'}},\n            \"objectId\": {\n              \"objectIdPath\": [\n                {{faker 'random.number'}}\n              ]\n            },\n            \"value\": \"\"\n          }\n        ],\n        \"dnsNames\": [\n          \"\"\n        ],\n        \"emailAddresses\": [\n          \"\"\n        ],\n        \"ipAddresses\": [\n          \"\"\n        ],\n        \"uris\": [\n          \"\"\n        ]\n      }\n    },\n    \"subjectKeyId\": {\n      \"keyId\": \"\"\n    },\n    \"x509Description\": {\n      \"additionalExtensions\": [\n        {\n          \"critical\": {{faker 'random.boolean'}},\n          \"objectId\": {\n            \"objectIdPath\": [\n              {{faker 'random.number'}}\n            ]\n          },\n          \"value\": \"\"\n        }\n      ],\n      \"aiaOcspServers\": [\n        \"\"\n      ],\n      \"caOptions\": {\n        \"isCa\": {{faker 'random.boolean'}},\n        \"maxIssuerPathLength\": {{faker 'random.number'}}\n      },\n      \"keyUsage\": {\n        \"baseKeyUsage\": {\n          \"certSign\": {{faker 'random.boolean'}},\n          \"contentCommitment\": {{faker 'random.boolean'}},\n          \"crlSign\": {{faker 'random.boolean'}},\n          \"dataEncipherment\": {{faker 'random.boolean'}},\n          \"decipherOnly\": {{faker 'random.boolean'}},\n          \"digitalSignature\": {{faker 'random.boolean'}},\n          \"encipherOnly\": {{faker 'random.boolean'}},\n          \"keyAgreement\": {{faker 'random.boolean'}},\n          \"keyEncipherment\": {{faker 'random.boolean'}}\n        },\n        \"extendedKeyUsage\": {\n          \"clientAuth\": {{faker 'random.boolean'}},\n          \"codeSigning\": {{faker 'random.boolean'}},\n          \"emailProtection\": {{faker 'random.boolean'}},\n          \"ocspSigning\": {{faker 'random.boolean'}},\n          \"serverAuth\": {{faker 'random.boolean'}},\n          \"timeStamping\": {{faker 'random.boolean'}}\n        },\n        \"unknownExtendedKeyUsages\": [\n          {\n            \"objectIdPath\": [\n              {{faker 'random.number'}}\n            ]\n          }\n        ]\n      },\n      \"policyIds\": [\n        {\n          \"objectIdPath\": [\n            {{faker 'random.number'}}\n          ]\n        }\n      ]\n    }\n  },\n  \"certificateTemplate\": \"\",\n  \"config\": {\n    \"publicKey\": {\n      \"format\": \"{{oneOf (array 'KEY_FORMAT_UNSPECIFIED' 'PEM')}}\",\n      \"key\": \"\"\n    },\n    \"subjectConfig\": {\n      \"subject\": {\n        \"commonName\": \"\",\n        \"countryCode\": \"\",\n        \"locality\": \"\",\n        \"organization\": \"\",\n        \"organizationalUnit\": \"\",\n        \"postalCode\": \"\",\n        \"province\": \"\",\n        \"streetAddress\": \"\"\n      },\n      \"subjectAltName\": {\n        \"customSans\": [\n          {\n            \"critical\": {{faker 'random.boolean'}},\n            \"objectId\": {\n              \"objectIdPath\": [\n                {{faker 'random.number'}}\n              ]\n            },\n            \"value\": \"\"\n          }\n        ],\n        \"dnsNames\": [\n          \"\"\n        ],\n        \"emailAddresses\": [\n          \"\"\n        ],\n        \"ipAddresses\": [\n          \"\"\n        ],\n        \"uris\": [\n          \"\"\n        ]\n      }\n    },\n    \"x509Config\": {\n      \"additionalExtensions\": [\n        {\n          \"critical\": {{faker 'random.boolean'}},\n          \"objectId\": {\n            \"objectIdPath\": [\n              {{faker 'random.number'}}\n            ]\n          },\n          \"value\": \"\"\n        }\n      ],\n      \"aiaOcspServers\": [\n        \"\"\n      ],\n      \"caOptions\": {\n        \"isCa\": {{faker 'random.boolean'}},\n        \"maxIssuerPathLength\": {{faker 'random.number'}}\n      },\n      \"keyUsage\": {\n        \"baseKeyUsage\": {\n          \"certSign\": {{faker 'random.boolean'}},\n          \"contentCommitment\": {{faker 'random.boolean'}},\n          \"crlSign\": {{faker 'random.boolean'}},\n          \"dataEncipherment\": {{faker 'random.boolean'}},\n          \"decipherOnly\": {{faker 'random.boolean'}},\n          \"digitalSignature\": {{faker 'random.boolean'}},\n          \"encipherOnly\": {{faker 'random.boolean'}},\n          \"keyAgreement\": {{faker 'random.boolean'}},\n          \"keyEncipherment\": {{faker 'random.boolean'}}\n        },\n        \"extendedKeyUsage\": {\n          \"clientAuth\": {{faker 'random.boolean'}},\n          \"codeSigning\": {{faker 'random.boolean'}},\n          \"emailProtection\": {{faker 'random.boolean'}},\n          \"ocspSigning\": {{faker 'random.boolean'}},\n          \"serverAuth\": {{faker 'random.boolean'}},\n          \"timeStamping\": {{faker 'random.boolean'}}\n        },\n        \"unknownExtendedKeyUsages\": [\n          {\n            \"objectIdPath\": [\n              {{faker 'random.number'}}\n            ]\n          }\n        ]\n      },\n      \"policyIds\": [\n        {\n          \"objectIdPath\": [\n            {{faker 'random.number'}}\n          ]\n        }\n      ]\n    }\n  },\n  \"createTime\": \"\",\n  \"issuerCertificateAuthority\": \"\",\n  \"labels\": {},\n  \"lifetime\": \"\",\n  \"name\": \"\",\n  \"pemCertificate\": \"\",\n  \"pemCertificateChain\": [\n    \"\"\n  ],\n  \"pemCsr\": \"\",\n  \"revocationDetails\": {\n    \"revocationState\": \"{{oneOf (array 'REVOCATION_REASON_UNSPECIFIED' 'KEY_COMPROMISE' 'CERTIFICATE_AUTHORITY_COMPROMISE' 'AFFILIATION_CHANGED' 'SUPERSEDED' 'CESSATION_OF_OPERATION' 'CERTIFICATE_HOLD' 'PRIVILEGE_WITHDRAWN' 'ATTRIBUTE_AUTHORITY_COMPROMISE')}}\",\n    \"revocationTime\": \"\"\n  },\n  \"subjectMode\": \"{{oneOf (array 'SUBJECT_REQUEST_MODE_UNSPECIFIED' 'DEFAULT' 'REFLECTED_SPIFFE')}}\",\n  \"updateTime\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "638ce3b0-d210-48e8-be9b-b721ae897dd6",
      "documentation": "Undelete a CertificateAuthority that has been deleted.",
      "method": "post",
      "endpoint": "v1/:name:undelete",
      "responses": [
        {
          "uuid": "a9a7e018-221b-4e85-8c62-8ac008fdc6dd",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6381069c-841f-41cd-8f14-9adeb37ae833",
      "documentation": "Lists CaPools.",
      "method": "get",
      "endpoint": "v1/:parent/caPools",
      "responses": [
        {
          "uuid": "086dea23-dc99-4353-bbf5-08fa4f561589",
          "body": "{\n  \"caPools\": [\n    {\n      \"issuancePolicy\": {\n        \"allowedIssuanceModes\": {\n          \"allowConfigBasedIssuance\": {{faker 'random.boolean'}},\n          \"allowCsrBasedIssuance\": {{faker 'random.boolean'}}\n        },\n        \"allowedKeyTypes\": [\n          {\n            \"ellipticCurve\": {\n              \"signatureAlgorithm\": \"{{oneOf (array 'EC_SIGNATURE_ALGORITHM_UNSPECIFIED' 'ECDSA_P256' 'ECDSA_P384' 'EDDSA_25519')}}\"\n            },\n            \"rsa\": {\n              \"maxModulusSize\": \"\",\n              \"minModulusSize\": \"\"\n            }\n          }\n        ],\n        \"baselineValues\": {\n          \"additionalExtensions\": [\n            {\n              \"critical\": {{faker 'random.boolean'}},\n              \"objectId\": {\n                \"objectIdPath\": [\n                  {{faker 'random.number'}}\n                ]\n              },\n              \"value\": \"\"\n            }\n          ],\n          \"aiaOcspServers\": [\n            \"\"\n          ],\n          \"caOptions\": {\n            \"isCa\": {{faker 'random.boolean'}},\n            \"maxIssuerPathLength\": {{faker 'random.number'}}\n          },\n          \"keyUsage\": {\n            \"baseKeyUsage\": {\n              \"certSign\": {{faker 'random.boolean'}},\n              \"contentCommitment\": {{faker 'random.boolean'}},\n              \"crlSign\": {{faker 'random.boolean'}},\n              \"dataEncipherment\": {{faker 'random.boolean'}},\n              \"decipherOnly\": {{faker 'random.boolean'}},\n              \"digitalSignature\": {{faker 'random.boolean'}},\n              \"encipherOnly\": {{faker 'random.boolean'}},\n              \"keyAgreement\": {{faker 'random.boolean'}},\n              \"keyEncipherment\": {{faker 'random.boolean'}}\n            },\n            \"extendedKeyUsage\": {\n              \"clientAuth\": {{faker 'random.boolean'}},\n              \"codeSigning\": {{faker 'random.boolean'}},\n              \"emailProtection\": {{faker 'random.boolean'}},\n              \"ocspSigning\": {{faker 'random.boolean'}},\n              \"serverAuth\": {{faker 'random.boolean'}},\n              \"timeStamping\": {{faker 'random.boolean'}}\n            },\n            \"unknownExtendedKeyUsages\": [\n              {\n                \"objectIdPath\": [\n                  {{faker 'random.number'}}\n                ]\n              }\n            ]\n          },\n          \"policyIds\": [\n            {\n              \"objectIdPath\": [\n                {{faker 'random.number'}}\n              ]\n            }\n          ]\n        },\n        \"identityConstraints\": {\n          \"allowSubjectAltNamesPassthrough\": {{faker 'random.boolean'}},\n          \"allowSubjectPassthrough\": {{faker 'random.boolean'}},\n          \"celExpression\": {\n            \"description\": \"\",\n            \"expression\": \"\",\n            \"location\": \"\",\n            \"title\": \"\"\n          }\n        },\n        \"maximumLifetime\": \"\",\n        \"passthroughExtensions\": {\n          \"additionalExtensions\": [\n            {\n              \"objectIdPath\": [\n                {{faker 'random.number'}}\n              ]\n            }\n          ],\n          \"knownExtensions\": [\n            \"{{oneOf (array 'KNOWN_CERTIFICATE_EXTENSION_UNSPECIFIED' 'BASE_KEY_USAGE' 'EXTENDED_KEY_USAGE' 'CA_OPTIONS' 'POLICY_IDS' 'AIA_OCSP_SERVERS')}}\"\n          ]\n        }\n      },\n      \"labels\": {},\n      \"name\": \"\",\n      \"publishingOptions\": {\n        \"publishCaCert\": {{faker 'random.boolean'}},\n        \"publishCrl\": {{faker 'random.boolean'}}\n      },\n      \"tier\": \"{{oneOf (array 'TIER_UNSPECIFIED' 'ENTERPRISE' 'DEVOPS')}}\"\n    }\n  ],\n  \"nextPageToken\": \"\",\n  \"unreachable\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "741b4789-7c63-49ec-990f-f121bfef5158",
      "documentation": "Create a CaPool.",
      "method": "post",
      "endpoint": "v1/:parent/caPools",
      "responses": [
        {
          "uuid": "c1698a40-a2ac-45aa-8183-e091e94062d9",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1388d944-d094-4573-aad7-13d65856c100",
      "documentation": "Lists CertificateAuthorities.",
      "method": "get",
      "endpoint": "v1/:parent/certificateAuthorities",
      "responses": [
        {
          "uuid": "ea58c7d3-412f-4dd5-bd15-4abb258e563c",
          "body": "{\n  \"certificateAuthorities\": [\n    {\n      \"accessUrls\": {\n        \"caCertificateAccessUrl\": \"\",\n        \"crlAccessUrls\": [\n          \"\"\n        ]\n      },\n      \"caCertificateDescriptions\": [\n        {\n          \"aiaIssuingCertificateUrls\": [\n            \"\"\n          ],\n          \"authorityKeyId\": {\n            \"keyId\": \"\"\n          },\n          \"certFingerprint\": {\n            \"sha256Hash\": \"\"\n          },\n          \"crlDistributionPoints\": [\n            \"\"\n          ],\n          \"publicKey\": {\n            \"format\": \"{{oneOf (array 'KEY_FORMAT_UNSPECIFIED' 'PEM')}}\",\n            \"key\": \"\"\n          },\n          \"subjectDescription\": {\n            \"hexSerialNumber\": \"\",\n            \"lifetime\": \"\",\n            \"notAfterTime\": \"\",\n            \"notBeforeTime\": \"\",\n            \"subject\": {\n              \"commonName\": \"\",\n              \"countryCode\": \"\",\n              \"locality\": \"\",\n              \"organization\": \"\",\n              \"organizationalUnit\": \"\",\n              \"postalCode\": \"\",\n              \"province\": \"\",\n              \"streetAddress\": \"\"\n            },\n            \"subjectAltName\": {\n              \"customSans\": [\n                {\n                  \"critical\": {{faker 'random.boolean'}},\n                  \"objectId\": {\n                    \"objectIdPath\": [\n                      {{faker 'random.number'}}\n                    ]\n                  },\n                  \"value\": \"\"\n                }\n              ],\n              \"dnsNames\": [\n                \"\"\n              ],\n              \"emailAddresses\": [\n                \"\"\n              ],\n              \"ipAddresses\": [\n                \"\"\n              ],\n              \"uris\": [\n                \"\"\n              ]\n            }\n          },\n          \"subjectKeyId\": {\n            \"keyId\": \"\"\n          },\n          \"x509Description\": {\n            \"additionalExtensions\": [\n              {\n                \"critical\": {{faker 'random.boolean'}},\n                \"objectId\": {\n                  \"objectIdPath\": [\n                    {{faker 'random.number'}}\n                  ]\n                },\n                \"value\": \"\"\n              }\n            ],\n            \"aiaOcspServers\": [\n              \"\"\n            ],\n            \"caOptions\": {\n              \"isCa\": {{faker 'random.boolean'}},\n              \"maxIssuerPathLength\": {{faker 'random.number'}}\n            },\n            \"keyUsage\": {\n              \"baseKeyUsage\": {\n                \"certSign\": {{faker 'random.boolean'}},\n                \"contentCommitment\": {{faker 'random.boolean'}},\n                \"crlSign\": {{faker 'random.boolean'}},\n                \"dataEncipherment\": {{faker 'random.boolean'}},\n                \"decipherOnly\": {{faker 'random.boolean'}},\n                \"digitalSignature\": {{faker 'random.boolean'}},\n                \"encipherOnly\": {{faker 'random.boolean'}},\n                \"keyAgreement\": {{faker 'random.boolean'}},\n                \"keyEncipherment\": {{faker 'random.boolean'}}\n              },\n              \"extendedKeyUsage\": {\n                \"clientAuth\": {{faker 'random.boolean'}},\n                \"codeSigning\": {{faker 'random.boolean'}},\n                \"emailProtection\": {{faker 'random.boolean'}},\n                \"ocspSigning\": {{faker 'random.boolean'}},\n                \"serverAuth\": {{faker 'random.boolean'}},\n                \"timeStamping\": {{faker 'random.boolean'}}\n              },\n              \"unknownExtendedKeyUsages\": [\n                {\n                  \"objectIdPath\": [\n                    {{faker 'random.number'}}\n                  ]\n                }\n              ]\n            },\n            \"policyIds\": [\n              {\n                \"objectIdPath\": [\n                  {{faker 'random.number'}}\n                ]\n              }\n            ]\n          }\n        }\n      ],\n      \"config\": {\n        \"publicKey\": {\n          \"format\": \"{{oneOf (array 'KEY_FORMAT_UNSPECIFIED' 'PEM')}}\",\n          \"key\": \"\"\n        },\n        \"subjectConfig\": {\n          \"subject\": {\n            \"commonName\": \"\",\n            \"countryCode\": \"\",\n            \"locality\": \"\",\n            \"organization\": \"\",\n            \"organizationalUnit\": \"\",\n            \"postalCode\": \"\",\n            \"province\": \"\",\n            \"streetAddress\": \"\"\n          },\n          \"subjectAltName\": {\n            \"customSans\": [\n              {\n                \"critical\": {{faker 'random.boolean'}},\n                \"objectId\": {\n                  \"objectIdPath\": [\n                    {{faker 'random.number'}}\n                  ]\n                },\n                \"value\": \"\"\n              }\n            ],\n            \"dnsNames\": [\n              \"\"\n            ],\n            \"emailAddresses\": [\n              \"\"\n            ],\n            \"ipAddresses\": [\n              \"\"\n            ],\n            \"uris\": [\n              \"\"\n            ]\n          }\n        },\n        \"x509Config\": {\n          \"additionalExtensions\": [\n            {\n              \"critical\": {{faker 'random.boolean'}},\n              \"objectId\": {\n                \"objectIdPath\": [\n                  {{faker 'random.number'}}\n                ]\n              },\n              \"value\": \"\"\n            }\n          ],\n          \"aiaOcspServers\": [\n            \"\"\n          ],\n          \"caOptions\": {\n            \"isCa\": {{faker 'random.boolean'}},\n            \"maxIssuerPathLength\": {{faker 'random.number'}}\n          },\n          \"keyUsage\": {\n            \"baseKeyUsage\": {\n              \"certSign\": {{faker 'random.boolean'}},\n              \"contentCommitment\": {{faker 'random.boolean'}},\n              \"crlSign\": {{faker 'random.boolean'}},\n              \"dataEncipherment\": {{faker 'random.boolean'}},\n              \"decipherOnly\": {{faker 'random.boolean'}},\n              \"digitalSignature\": {{faker 'random.boolean'}},\n              \"encipherOnly\": {{faker 'random.boolean'}},\n              \"keyAgreement\": {{faker 'random.boolean'}},\n              \"keyEncipherment\": {{faker 'random.boolean'}}\n            },\n            \"extendedKeyUsage\": {\n              \"clientAuth\": {{faker 'random.boolean'}},\n              \"codeSigning\": {{faker 'random.boolean'}},\n              \"emailProtection\": {{faker 'random.boolean'}},\n              \"ocspSigning\": {{faker 'random.boolean'}},\n              \"serverAuth\": {{faker 'random.boolean'}},\n              \"timeStamping\": {{faker 'random.boolean'}}\n            },\n            \"unknownExtendedKeyUsages\": [\n              {\n                \"objectIdPath\": [\n                  {{faker 'random.number'}}\n                ]\n              }\n            ]\n          },\n          \"policyIds\": [\n            {\n              \"objectIdPath\": [\n                {{faker 'random.number'}}\n              ]\n            }\n          ]\n        }\n      },\n      \"createTime\": \"\",\n      \"deleteTime\": \"\",\n      \"expireTime\": \"\",\n      \"gcsBucket\": \"\",\n      \"keySpec\": {\n        \"algorithm\": \"{{oneOf (array 'SIGN_HASH_ALGORITHM_UNSPECIFIED' 'RSA_PSS_2048_SHA256' 'RSA_PSS_3072_SHA256' 'RSA_PSS_4096_SHA256' 'RSA_PKCS1_2048_SHA256' 'RSA_PKCS1_3072_SHA256' 'RSA_PKCS1_4096_SHA256' 'EC_P256_SHA256' 'EC_P384_SHA384')}}\",\n        \"cloudKmsKeyVersion\": \"\"\n      },\n      \"labels\": {},\n      \"lifetime\": \"\",\n      \"name\": \"\",\n      \"pemCaCertificates\": [\n        \"\"\n      ],\n      \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'ENABLED' 'DISABLED' 'STAGED' 'AWAITING_USER_ACTIVATION' 'DELETED')}}\",\n      \"subordinateConfig\": {\n        \"certificateAuthority\": \"\",\n        \"pemIssuerChain\": {\n          \"pemCertificates\": [\n            \"\"\n          ]\n        }\n      },\n      \"tier\": \"{{oneOf (array 'TIER_UNSPECIFIED' 'ENTERPRISE' 'DEVOPS')}}\",\n      \"type\": \"{{oneOf (array 'TYPE_UNSPECIFIED' 'SELF_SIGNED' 'SUBORDINATE')}}\",\n      \"updateTime\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\",\n  \"unreachable\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "56b0ede9-d842-4c54-83f7-c3da4248b88d",
      "documentation": "Create a new CertificateAuthority in a given Project and Location.",
      "method": "post",
      "endpoint": "v1/:parent/certificateAuthorities",
      "responses": [
        {
          "uuid": "caa46279-4b18-4aef-8bd2-188e9ac75793",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7ba45501-3154-47bd-af19-1f448b6adaed",
      "documentation": "Lists CertificateRevocationLists.",
      "method": "get",
      "endpoint": "v1/:parent/certificateRevocationLists",
      "responses": [
        {
          "uuid": "0f4c238d-698d-4ad3-bcad-e2e834bec7b1",
          "body": "{\n  \"certificateRevocationLists\": [\n    {\n      \"accessUrl\": \"\",\n      \"createTime\": \"\",\n      \"labels\": {},\n      \"name\": \"\",\n      \"pemCrl\": \"\",\n      \"revisionId\": \"\",\n      \"revokedCertificates\": [\n        {\n          \"certificate\": \"\",\n          \"hexSerialNumber\": \"\",\n          \"revocationReason\": \"{{oneOf (array 'REVOCATION_REASON_UNSPECIFIED' 'KEY_COMPROMISE' 'CERTIFICATE_AUTHORITY_COMPROMISE' 'AFFILIATION_CHANGED' 'SUPERSEDED' 'CESSATION_OF_OPERATION' 'CERTIFICATE_HOLD' 'PRIVILEGE_WITHDRAWN' 'ATTRIBUTE_AUTHORITY_COMPROMISE')}}\"\n        }\n      ],\n      \"sequenceNumber\": \"\",\n      \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'ACTIVE' 'SUPERSEDED')}}\",\n      \"updateTime\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\",\n  \"unreachable\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "01914a4e-eb7a-4377-871a-88577f84fb26",
      "documentation": "Lists CertificateTemplates.",
      "method": "get",
      "endpoint": "v1/:parent/certificateTemplates",
      "responses": [
        {
          "uuid": "52617dd4-e30f-4f41-a68f-1713ffe85759",
          "body": "{\n  \"certificateTemplates\": [\n    {\n      \"createTime\": \"\",\n      \"description\": \"\",\n      \"identityConstraints\": {\n        \"allowSubjectAltNamesPassthrough\": {{faker 'random.boolean'}},\n        \"allowSubjectPassthrough\": {{faker 'random.boolean'}},\n        \"celExpression\": {\n          \"description\": \"\",\n          \"expression\": \"\",\n          \"location\": \"\",\n          \"title\": \"\"\n        }\n      },\n      \"labels\": {},\n      \"name\": \"\",\n      \"passthroughExtensions\": {\n        \"additionalExtensions\": [\n          {\n            \"objectIdPath\": [\n              {{faker 'random.number'}}\n            ]\n          }\n        ],\n        \"knownExtensions\": [\n          \"{{oneOf (array 'KNOWN_CERTIFICATE_EXTENSION_UNSPECIFIED' 'BASE_KEY_USAGE' 'EXTENDED_KEY_USAGE' 'CA_OPTIONS' 'POLICY_IDS' 'AIA_OCSP_SERVERS')}}\"\n        ]\n      },\n      \"predefinedValues\": {\n        \"additionalExtensions\": [\n          {\n            \"critical\": {{faker 'random.boolean'}},\n            \"objectId\": {\n              \"objectIdPath\": [\n                {{faker 'random.number'}}\n              ]\n            },\n            \"value\": \"\"\n          }\n        ],\n        \"aiaOcspServers\": [\n          \"\"\n        ],\n        \"caOptions\": {\n          \"isCa\": {{faker 'random.boolean'}},\n          \"maxIssuerPathLength\": {{faker 'random.number'}}\n        },\n        \"keyUsage\": {\n          \"baseKeyUsage\": {\n            \"certSign\": {{faker 'random.boolean'}},\n            \"contentCommitment\": {{faker 'random.boolean'}},\n            \"crlSign\": {{faker 'random.boolean'}},\n            \"dataEncipherment\": {{faker 'random.boolean'}},\n            \"decipherOnly\": {{faker 'random.boolean'}},\n            \"digitalSignature\": {{faker 'random.boolean'}},\n            \"encipherOnly\": {{faker 'random.boolean'}},\n            \"keyAgreement\": {{faker 'random.boolean'}},\n            \"keyEncipherment\": {{faker 'random.boolean'}}\n          },\n          \"extendedKeyUsage\": {\n            \"clientAuth\": {{faker 'random.boolean'}},\n            \"codeSigning\": {{faker 'random.boolean'}},\n            \"emailProtection\": {{faker 'random.boolean'}},\n            \"ocspSigning\": {{faker 'random.boolean'}},\n            \"serverAuth\": {{faker 'random.boolean'}},\n            \"timeStamping\": {{faker 'random.boolean'}}\n          },\n          \"unknownExtendedKeyUsages\": [\n            {\n              \"objectIdPath\": [\n                {{faker 'random.number'}}\n              ]\n            }\n          ]\n        },\n        \"policyIds\": [\n          {\n            \"objectIdPath\": [\n              {{faker 'random.number'}}\n            ]\n          }\n        ]\n      },\n      \"updateTime\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\",\n  \"unreachable\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "abd210c1-11b3-46a1-ba94-49be551759c4",
      "documentation": "Create a new CertificateTemplate in a given Project and Location.",
      "method": "post",
      "endpoint": "v1/:parent/certificateTemplates",
      "responses": [
        {
          "uuid": "c4532aa0-6176-40e9-9b6f-8eb2e75786f6",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7245705a-d5cc-437c-bf86-3740868083e4",
      "documentation": "Lists Certificates.",
      "method": "get",
      "endpoint": "v1/:parent/certificates",
      "responses": [
        {
          "uuid": "95d2a4e5-104a-4e5e-a800-af99c7f9cb8d",
          "body": "{\n  \"certificates\": [\n    {\n      \"certificateDescription\": {\n        \"aiaIssuingCertificateUrls\": [\n          \"\"\n        ],\n        \"authorityKeyId\": {\n          \"keyId\": \"\"\n        },\n        \"certFingerprint\": {\n          \"sha256Hash\": \"\"\n        },\n        \"crlDistributionPoints\": [\n          \"\"\n        ],\n        \"publicKey\": {\n          \"format\": \"{{oneOf (array 'KEY_FORMAT_UNSPECIFIED' 'PEM')}}\",\n          \"key\": \"\"\n        },\n        \"subjectDescription\": {\n          \"hexSerialNumber\": \"\",\n          \"lifetime\": \"\",\n          \"notAfterTime\": \"\",\n          \"notBeforeTime\": \"\",\n          \"subject\": {\n            \"commonName\": \"\",\n            \"countryCode\": \"\",\n            \"locality\": \"\",\n            \"organization\": \"\",\n            \"organizationalUnit\": \"\",\n            \"postalCode\": \"\",\n            \"province\": \"\",\n            \"streetAddress\": \"\"\n          },\n          \"subjectAltName\": {\n            \"customSans\": [\n              {\n                \"critical\": {{faker 'random.boolean'}},\n                \"objectId\": {\n                  \"objectIdPath\": [\n                    {{faker 'random.number'}}\n                  ]\n                },\n                \"value\": \"\"\n              }\n            ],\n            \"dnsNames\": [\n              \"\"\n            ],\n            \"emailAddresses\": [\n              \"\"\n            ],\n            \"ipAddresses\": [\n              \"\"\n            ],\n            \"uris\": [\n              \"\"\n            ]\n          }\n        },\n        \"subjectKeyId\": {\n          \"keyId\": \"\"\n        },\n        \"x509Description\": {\n          \"additionalExtensions\": [\n            {\n              \"critical\": {{faker 'random.boolean'}},\n              \"objectId\": {\n                \"objectIdPath\": [\n                  {{faker 'random.number'}}\n                ]\n              },\n              \"value\": \"\"\n            }\n          ],\n          \"aiaOcspServers\": [\n            \"\"\n          ],\n          \"caOptions\": {\n            \"isCa\": {{faker 'random.boolean'}},\n            \"maxIssuerPathLength\": {{faker 'random.number'}}\n          },\n          \"keyUsage\": {\n            \"baseKeyUsage\": {\n              \"certSign\": {{faker 'random.boolean'}},\n              \"contentCommitment\": {{faker 'random.boolean'}},\n              \"crlSign\": {{faker 'random.boolean'}},\n              \"dataEncipherment\": {{faker 'random.boolean'}},\n              \"decipherOnly\": {{faker 'random.boolean'}},\n              \"digitalSignature\": {{faker 'random.boolean'}},\n              \"encipherOnly\": {{faker 'random.boolean'}},\n              \"keyAgreement\": {{faker 'random.boolean'}},\n              \"keyEncipherment\": {{faker 'random.boolean'}}\n            },\n            \"extendedKeyUsage\": {\n              \"clientAuth\": {{faker 'random.boolean'}},\n              \"codeSigning\": {{faker 'random.boolean'}},\n              \"emailProtection\": {{faker 'random.boolean'}},\n              \"ocspSigning\": {{faker 'random.boolean'}},\n              \"serverAuth\": {{faker 'random.boolean'}},\n              \"timeStamping\": {{faker 'random.boolean'}}\n            },\n            \"unknownExtendedKeyUsages\": [\n              {\n                \"objectIdPath\": [\n                  {{faker 'random.number'}}\n                ]\n              }\n            ]\n          },\n          \"policyIds\": [\n            {\n              \"objectIdPath\": [\n                {{faker 'random.number'}}\n              ]\n            }\n          ]\n        }\n      },\n      \"certificateTemplate\": \"\",\n      \"config\": {\n        \"publicKey\": {\n          \"format\": \"{{oneOf (array 'KEY_FORMAT_UNSPECIFIED' 'PEM')}}\",\n          \"key\": \"\"\n        },\n        \"subjectConfig\": {\n          \"subject\": {\n            \"commonName\": \"\",\n            \"countryCode\": \"\",\n            \"locality\": \"\",\n            \"organization\": \"\",\n            \"organizationalUnit\": \"\",\n            \"postalCode\": \"\",\n            \"province\": \"\",\n            \"streetAddress\": \"\"\n          },\n          \"subjectAltName\": {\n            \"customSans\": [\n              {\n                \"critical\": {{faker 'random.boolean'}},\n                \"objectId\": {\n                  \"objectIdPath\": [\n                    {{faker 'random.number'}}\n                  ]\n                },\n                \"value\": \"\"\n              }\n            ],\n            \"dnsNames\": [\n              \"\"\n            ],\n            \"emailAddresses\": [\n              \"\"\n            ],\n            \"ipAddresses\": [\n              \"\"\n            ],\n            \"uris\": [\n              \"\"\n            ]\n          }\n        },\n        \"x509Config\": {\n          \"additionalExtensions\": [\n            {\n              \"critical\": {{faker 'random.boolean'}},\n              \"objectId\": {\n                \"objectIdPath\": [\n                  {{faker 'random.number'}}\n                ]\n              },\n              \"value\": \"\"\n            }\n          ],\n          \"aiaOcspServers\": [\n            \"\"\n          ],\n          \"caOptions\": {\n            \"isCa\": {{faker 'random.boolean'}},\n            \"maxIssuerPathLength\": {{faker 'random.number'}}\n          },\n          \"keyUsage\": {\n            \"baseKeyUsage\": {\n              \"certSign\": {{faker 'random.boolean'}},\n              \"contentCommitment\": {{faker 'random.boolean'}},\n              \"crlSign\": {{faker 'random.boolean'}},\n              \"dataEncipherment\": {{faker 'random.boolean'}},\n              \"decipherOnly\": {{faker 'random.boolean'}},\n              \"digitalSignature\": {{faker 'random.boolean'}},\n              \"encipherOnly\": {{faker 'random.boolean'}},\n              \"keyAgreement\": {{faker 'random.boolean'}},\n              \"keyEncipherment\": {{faker 'random.boolean'}}\n            },\n            \"extendedKeyUsage\": {\n              \"clientAuth\": {{faker 'random.boolean'}},\n              \"codeSigning\": {{faker 'random.boolean'}},\n              \"emailProtection\": {{faker 'random.boolean'}},\n              \"ocspSigning\": {{faker 'random.boolean'}},\n              \"serverAuth\": {{faker 'random.boolean'}},\n              \"timeStamping\": {{faker 'random.boolean'}}\n            },\n            \"unknownExtendedKeyUsages\": [\n              {\n                \"objectIdPath\": [\n                  {{faker 'random.number'}}\n                ]\n              }\n            ]\n          },\n          \"policyIds\": [\n            {\n              \"objectIdPath\": [\n                {{faker 'random.number'}}\n              ]\n            }\n          ]\n        }\n      },\n      \"createTime\": \"\",\n      \"issuerCertificateAuthority\": \"\",\n      \"labels\": {},\n      \"lifetime\": \"\",\n      \"name\": \"\",\n      \"pemCertificate\": \"\",\n      \"pemCertificateChain\": [\n        \"\"\n      ],\n      \"pemCsr\": \"\",\n      \"revocationDetails\": {\n        \"revocationState\": \"{{oneOf (array 'REVOCATION_REASON_UNSPECIFIED' 'KEY_COMPROMISE' 'CERTIFICATE_AUTHORITY_COMPROMISE' 'AFFILIATION_CHANGED' 'SUPERSEDED' 'CESSATION_OF_OPERATION' 'CERTIFICATE_HOLD' 'PRIVILEGE_WITHDRAWN' 'ATTRIBUTE_AUTHORITY_COMPROMISE')}}\",\n        \"revocationTime\": \"\"\n      },\n      \"subjectMode\": \"{{oneOf (array 'SUBJECT_REQUEST_MODE_UNSPECIFIED' 'DEFAULT' 'REFLECTED_SPIFFE')}}\",\n      \"updateTime\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\",\n  \"unreachable\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8709d59a-420a-4c13-973a-02c2e54db579",
      "documentation": "Create a new Certificate in a given Project, Location from a particular CaPool.",
      "method": "post",
      "endpoint": "v1/:parent/certificates",
      "responses": [
        {
          "uuid": "4d880df0-af3e-451d-9791-bd44b3f88d41",
          "body": "{\n  \"certificateDescription\": {\n    \"aiaIssuingCertificateUrls\": [\n      \"\"\n    ],\n    \"authorityKeyId\": {\n      \"keyId\": \"\"\n    },\n    \"certFingerprint\": {\n      \"sha256Hash\": \"\"\n    },\n    \"crlDistributionPoints\": [\n      \"\"\n    ],\n    \"publicKey\": {\n      \"format\": \"{{oneOf (array 'KEY_FORMAT_UNSPECIFIED' 'PEM')}}\",\n      \"key\": \"\"\n    },\n    \"subjectDescription\": {\n      \"hexSerialNumber\": \"\",\n      \"lifetime\": \"\",\n      \"notAfterTime\": \"\",\n      \"notBeforeTime\": \"\",\n      \"subject\": {\n        \"commonName\": \"\",\n        \"countryCode\": \"\",\n        \"locality\": \"\",\n        \"organization\": \"\",\n        \"organizationalUnit\": \"\",\n        \"postalCode\": \"\",\n        \"province\": \"\",\n        \"streetAddress\": \"\"\n      },\n      \"subjectAltName\": {\n        \"customSans\": [\n          {\n            \"critical\": {{faker 'random.boolean'}},\n            \"objectId\": {\n              \"objectIdPath\": [\n                {{faker 'random.number'}}\n              ]\n            },\n            \"value\": \"\"\n          }\n        ],\n        \"dnsNames\": [\n          \"\"\n        ],\n        \"emailAddresses\": [\n          \"\"\n        ],\n        \"ipAddresses\": [\n          \"\"\n        ],\n        \"uris\": [\n          \"\"\n        ]\n      }\n    },\n    \"subjectKeyId\": {\n      \"keyId\": \"\"\n    },\n    \"x509Description\": {\n      \"additionalExtensions\": [\n        {\n          \"critical\": {{faker 'random.boolean'}},\n          \"objectId\": {\n            \"objectIdPath\": [\n              {{faker 'random.number'}}\n            ]\n          },\n          \"value\": \"\"\n        }\n      ],\n      \"aiaOcspServers\": [\n        \"\"\n      ],\n      \"caOptions\": {\n        \"isCa\": {{faker 'random.boolean'}},\n        \"maxIssuerPathLength\": {{faker 'random.number'}}\n      },\n      \"keyUsage\": {\n        \"baseKeyUsage\": {\n          \"certSign\": {{faker 'random.boolean'}},\n          \"contentCommitment\": {{faker 'random.boolean'}},\n          \"crlSign\": {{faker 'random.boolean'}},\n          \"dataEncipherment\": {{faker 'random.boolean'}},\n          \"decipherOnly\": {{faker 'random.boolean'}},\n          \"digitalSignature\": {{faker 'random.boolean'}},\n          \"encipherOnly\": {{faker 'random.boolean'}},\n          \"keyAgreement\": {{faker 'random.boolean'}},\n          \"keyEncipherment\": {{faker 'random.boolean'}}\n        },\n        \"extendedKeyUsage\": {\n          \"clientAuth\": {{faker 'random.boolean'}},\n          \"codeSigning\": {{faker 'random.boolean'}},\n          \"emailProtection\": {{faker 'random.boolean'}},\n          \"ocspSigning\": {{faker 'random.boolean'}},\n          \"serverAuth\": {{faker 'random.boolean'}},\n          \"timeStamping\": {{faker 'random.boolean'}}\n        },\n        \"unknownExtendedKeyUsages\": [\n          {\n            \"objectIdPath\": [\n              {{faker 'random.number'}}\n            ]\n          }\n        ]\n      },\n      \"policyIds\": [\n        {\n          \"objectIdPath\": [\n            {{faker 'random.number'}}\n          ]\n        }\n      ]\n    }\n  },\n  \"certificateTemplate\": \"\",\n  \"config\": {\n    \"publicKey\": {\n      \"format\": \"{{oneOf (array 'KEY_FORMAT_UNSPECIFIED' 'PEM')}}\",\n      \"key\": \"\"\n    },\n    \"subjectConfig\": {\n      \"subject\": {\n        \"commonName\": \"\",\n        \"countryCode\": \"\",\n        \"locality\": \"\",\n        \"organization\": \"\",\n        \"organizationalUnit\": \"\",\n        \"postalCode\": \"\",\n        \"province\": \"\",\n        \"streetAddress\": \"\"\n      },\n      \"subjectAltName\": {\n        \"customSans\": [\n          {\n            \"critical\": {{faker 'random.boolean'}},\n            \"objectId\": {\n              \"objectIdPath\": [\n                {{faker 'random.number'}}\n              ]\n            },\n            \"value\": \"\"\n          }\n        ],\n        \"dnsNames\": [\n          \"\"\n        ],\n        \"emailAddresses\": [\n          \"\"\n        ],\n        \"ipAddresses\": [\n          \"\"\n        ],\n        \"uris\": [\n          \"\"\n        ]\n      }\n    },\n    \"x509Config\": {\n      \"additionalExtensions\": [\n        {\n          \"critical\": {{faker 'random.boolean'}},\n          \"objectId\": {\n            \"objectIdPath\": [\n              {{faker 'random.number'}}\n            ]\n          },\n          \"value\": \"\"\n        }\n      ],\n      \"aiaOcspServers\": [\n        \"\"\n      ],\n      \"caOptions\": {\n        \"isCa\": {{faker 'random.boolean'}},\n        \"maxIssuerPathLength\": {{faker 'random.number'}}\n      },\n      \"keyUsage\": {\n        \"baseKeyUsage\": {\n          \"certSign\": {{faker 'random.boolean'}},\n          \"contentCommitment\": {{faker 'random.boolean'}},\n          \"crlSign\": {{faker 'random.boolean'}},\n          \"dataEncipherment\": {{faker 'random.boolean'}},\n          \"decipherOnly\": {{faker 'random.boolean'}},\n          \"digitalSignature\": {{faker 'random.boolean'}},\n          \"encipherOnly\": {{faker 'random.boolean'}},\n          \"keyAgreement\": {{faker 'random.boolean'}},\n          \"keyEncipherment\": {{faker 'random.boolean'}}\n        },\n        \"extendedKeyUsage\": {\n          \"clientAuth\": {{faker 'random.boolean'}},\n          \"codeSigning\": {{faker 'random.boolean'}},\n          \"emailProtection\": {{faker 'random.boolean'}},\n          \"ocspSigning\": {{faker 'random.boolean'}},\n          \"serverAuth\": {{faker 'random.boolean'}},\n          \"timeStamping\": {{faker 'random.boolean'}}\n        },\n        \"unknownExtendedKeyUsages\": [\n          {\n            \"objectIdPath\": [\n              {{faker 'random.number'}}\n            ]\n          }\n        ]\n      },\n      \"policyIds\": [\n        {\n          \"objectIdPath\": [\n            {{faker 'random.number'}}\n          ]\n        }\n      ]\n    }\n  },\n  \"createTime\": \"\",\n  \"issuerCertificateAuthority\": \"\",\n  \"labels\": {},\n  \"lifetime\": \"\",\n  \"name\": \"\",\n  \"pemCertificate\": \"\",\n  \"pemCertificateChain\": [\n    \"\"\n  ],\n  \"pemCsr\": \"\",\n  \"revocationDetails\": {\n    \"revocationState\": \"{{oneOf (array 'REVOCATION_REASON_UNSPECIFIED' 'KEY_COMPROMISE' 'CERTIFICATE_AUTHORITY_COMPROMISE' 'AFFILIATION_CHANGED' 'SUPERSEDED' 'CESSATION_OF_OPERATION' 'CERTIFICATE_HOLD' 'PRIVILEGE_WITHDRAWN' 'ATTRIBUTE_AUTHORITY_COMPROMISE')}}\",\n    \"revocationTime\": \"\"\n  },\n  \"subjectMode\": \"{{oneOf (array 'SUBJECT_REQUEST_MODE_UNSPECIFIED' 'DEFAULT' 'REFLECTED_SPIFFE')}}\",\n  \"updateTime\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6b7e2bb1-3d71-4b4a-a233-224111f6b06f",
      "documentation": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
      "method": "get",
      "endpoint": "v1/:resource:getIamPolicy",
      "responses": [
        {
          "uuid": "1dc7f6c8-912f-4add-a3e9-d81a089a2589",
          "body": "{\n  \"auditConfigs\": [\n    {\n      \"auditLogConfigs\": [\n        {\n          \"exemptedMembers\": [\n            \"\"\n          ],\n          \"logType\": \"{{oneOf (array 'LOG_TYPE_UNSPECIFIED' 'ADMIN_READ' 'DATA_WRITE' 'DATA_READ')}}\"\n        }\n      ],\n      \"service\": \"\"\n    }\n  ],\n  \"bindings\": [\n    {\n      \"condition\": {\n        \"description\": \"\",\n        \"expression\": \"\",\n        \"location\": \"\",\n        \"title\": \"\"\n      },\n      \"members\": [\n        \"\"\n      ],\n      \"role\": \"\"\n    }\n  ],\n  \"etag\": \"\",\n  \"version\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2d0d7106-23bc-4ed0-9440-7ddc3f42c1ce",
      "documentation": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
      "method": "post",
      "endpoint": "v1/:resource:setIamPolicy",
      "responses": [
        {
          "uuid": "5794b465-07f7-4063-9f84-d29653020429",
          "body": "{\n  \"auditConfigs\": [\n    {\n      \"auditLogConfigs\": [\n        {\n          \"exemptedMembers\": [\n            \"\"\n          ],\n          \"logType\": \"{{oneOf (array 'LOG_TYPE_UNSPECIFIED' 'ADMIN_READ' 'DATA_WRITE' 'DATA_READ')}}\"\n        }\n      ],\n      \"service\": \"\"\n    }\n  ],\n  \"bindings\": [\n    {\n      \"condition\": {\n        \"description\": \"\",\n        \"expression\": \"\",\n        \"location\": \"\",\n        \"title\": \"\"\n      },\n      \"members\": [\n        \"\"\n      ],\n      \"role\": \"\"\n    }\n  ],\n  \"etag\": \"\",\n  \"version\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9b0f5d50-4abf-413a-846b-0659ac91ffa0",
      "documentation": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
      "method": "post",
      "endpoint": "v1/:resource:testIamPermissions",
      "responses": [
        {
          "uuid": "6cf56513-b664-4218-9eaf-34207e1004a9",
          "body": "{\n  \"permissions\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}