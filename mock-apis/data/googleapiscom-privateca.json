{
  "uuid": "d2432598-921b-418d-accd-e93255d6e810",
  "lastMigration": 19,
  "name": "Certificate Authority API",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "c9234f9f-5c07-4b91-9032-ca27af30d73e",
      "documentation": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
      "method": "delete",
      "endpoint": "v1beta1/:name",
      "responses": [
        {
          "uuid": "d9a73dee-67ad-4736-bc7a-8fdba6eea50b",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "01d52f68-c428-4f26-abd9-9d92f111c100",
      "documentation": "Returns a ReusableConfig.",
      "method": "get",
      "endpoint": "v1beta1/:name",
      "responses": [
        {
          "uuid": "d92d4187-9613-46b9-a0cd-e3e1fc28ddca",
          "body": "{\n  \"createTime\": \"\",\n  \"description\": \"\",\n  \"labels\": {},\n  \"name\": \"\",\n  \"updateTime\": \"\",\n  \"values\": {\n    \"additionalExtensions\": [\n      {\n        \"critical\": {{faker 'random.boolean'}},\n        \"objectId\": {\n          \"objectIdPath\": [\n            {{faker 'random.number'}}\n          ]\n        },\n        \"value\": \"\"\n      }\n    ],\n    \"aiaOcspServers\": [\n      \"\"\n    ],\n    \"caOptions\": {\n      \"isCa\": {{faker 'random.boolean'}},\n      \"maxIssuerPathLength\": {{faker 'random.number'}}\n    },\n    \"keyUsage\": {\n      \"baseKeyUsage\": {\n        \"certSign\": {{faker 'random.boolean'}},\n        \"contentCommitment\": {{faker 'random.boolean'}},\n        \"crlSign\": {{faker 'random.boolean'}},\n        \"dataEncipherment\": {{faker 'random.boolean'}},\n        \"decipherOnly\": {{faker 'random.boolean'}},\n        \"digitalSignature\": {{faker 'random.boolean'}},\n        \"encipherOnly\": {{faker 'random.boolean'}},\n        \"keyAgreement\": {{faker 'random.boolean'}},\n        \"keyEncipherment\": {{faker 'random.boolean'}}\n      },\n      \"extendedKeyUsage\": {\n        \"clientAuth\": {{faker 'random.boolean'}},\n        \"codeSigning\": {{faker 'random.boolean'}},\n        \"emailProtection\": {{faker 'random.boolean'}},\n        \"ocspSigning\": {{faker 'random.boolean'}},\n        \"serverAuth\": {{faker 'random.boolean'}},\n        \"timeStamping\": {{faker 'random.boolean'}}\n      },\n      \"unknownExtendedKeyUsages\": [\n        {\n          \"objectIdPath\": [\n            {{faker 'random.number'}}\n          ]\n        }\n      ]\n    },\n    \"policyIds\": [\n      {\n        \"objectIdPath\": [\n          {{faker 'random.number'}}\n        ]\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8442312f-d060-425f-9f38-decc7c8267f1",
      "documentation": "Update a Certificate. Currently, the only field you can update is the labels field.",
      "method": "patch",
      "endpoint": "v1beta1/:name",
      "responses": [
        {
          "uuid": "ed687b3d-bf7e-4ecf-bc8a-7c84034665fe",
          "body": "{\n  \"certificateDescription\": {\n    \"aiaIssuingCertificateUrls\": [\n      \"\"\n    ],\n    \"authorityKeyId\": {\n      \"keyId\": \"\"\n    },\n    \"certFingerprint\": {\n      \"sha256Hash\": \"\"\n    },\n    \"configValues\": {\n      \"additionalExtensions\": [\n        {\n          \"critical\": {{faker 'random.boolean'}},\n          \"objectId\": {\n            \"objectIdPath\": [\n              {{faker 'random.number'}}\n            ]\n          },\n          \"value\": \"\"\n        }\n      ],\n      \"aiaOcspServers\": [\n        \"\"\n      ],\n      \"caOptions\": {\n        \"isCa\": {{faker 'random.boolean'}},\n        \"maxIssuerPathLength\": {{faker 'random.number'}}\n      },\n      \"keyUsage\": {\n        \"baseKeyUsage\": {\n          \"certSign\": {{faker 'random.boolean'}},\n          \"contentCommitment\": {{faker 'random.boolean'}},\n          \"crlSign\": {{faker 'random.boolean'}},\n          \"dataEncipherment\": {{faker 'random.boolean'}},\n          \"decipherOnly\": {{faker 'random.boolean'}},\n          \"digitalSignature\": {{faker 'random.boolean'}},\n          \"encipherOnly\": {{faker 'random.boolean'}},\n          \"keyAgreement\": {{faker 'random.boolean'}},\n          \"keyEncipherment\": {{faker 'random.boolean'}}\n        },\n        \"extendedKeyUsage\": {\n          \"clientAuth\": {{faker 'random.boolean'}},\n          \"codeSigning\": {{faker 'random.boolean'}},\n          \"emailProtection\": {{faker 'random.boolean'}},\n          \"ocspSigning\": {{faker 'random.boolean'}},\n          \"serverAuth\": {{faker 'random.boolean'}},\n          \"timeStamping\": {{faker 'random.boolean'}}\n        },\n        \"unknownExtendedKeyUsages\": [\n          {\n            \"objectIdPath\": [\n              {{faker 'random.number'}}\n            ]\n          }\n        ]\n      },\n      \"policyIds\": [\n        {\n          \"objectIdPath\": [\n            {{faker 'random.number'}}\n          ]\n        }\n      ]\n    },\n    \"crlDistributionPoints\": [\n      \"\"\n    ],\n    \"publicKey\": {\n      \"key\": \"\",\n      \"type\": \"{{oneOf (array 'KEY_TYPE_UNSPECIFIED' 'PEM_RSA_KEY' 'PEM_EC_KEY')}}\"\n    },\n    \"subjectDescription\": {\n      \"commonName\": \"\",\n      \"hexSerialNumber\": \"\",\n      \"lifetime\": \"\",\n      \"notAfterTime\": \"\",\n      \"notBeforeTime\": \"\",\n      \"subject\": {\n        \"countryCode\": \"\",\n        \"locality\": \"\",\n        \"organization\": \"\",\n        \"organizationalUnit\": \"\",\n        \"postalCode\": \"\",\n        \"province\": \"\",\n        \"streetAddress\": \"\"\n      },\n      \"subjectAltName\": {\n        \"customSans\": [\n          {\n            \"critical\": {{faker 'random.boolean'}},\n            \"objectId\": {\n              \"objectIdPath\": [\n                {{faker 'random.number'}}\n              ]\n            },\n            \"value\": \"\"\n          }\n        ],\n        \"dnsNames\": [\n          \"\"\n        ],\n        \"emailAddresses\": [\n          \"\"\n        ],\n        \"ipAddresses\": [\n          \"\"\n        ],\n        \"uris\": [\n          \"\"\n        ]\n      }\n    },\n    \"subjectKeyId\": {\n      \"keyId\": \"\"\n    }\n  },\n  \"config\": {\n    \"publicKey\": {\n      \"key\": \"\",\n      \"type\": \"{{oneOf (array 'KEY_TYPE_UNSPECIFIED' 'PEM_RSA_KEY' 'PEM_EC_KEY')}}\"\n    },\n    \"reusableConfig\": {\n      \"reusableConfig\": \"\",\n      \"reusableConfigValues\": {\n        \"additionalExtensions\": [\n          {\n            \"critical\": {{faker 'random.boolean'}},\n            \"objectId\": {\n              \"objectIdPath\": [\n                {{faker 'random.number'}}\n              ]\n            },\n            \"value\": \"\"\n          }\n        ],\n        \"aiaOcspServers\": [\n          \"\"\n        ],\n        \"caOptions\": {\n          \"isCa\": {{faker 'random.boolean'}},\n          \"maxIssuerPathLength\": {{faker 'random.number'}}\n        },\n        \"keyUsage\": {\n          \"baseKeyUsage\": {\n            \"certSign\": {{faker 'random.boolean'}},\n            \"contentCommitment\": {{faker 'random.boolean'}},\n            \"crlSign\": {{faker 'random.boolean'}},\n            \"dataEncipherment\": {{faker 'random.boolean'}},\n            \"decipherOnly\": {{faker 'random.boolean'}},\n            \"digitalSignature\": {{faker 'random.boolean'}},\n            \"encipherOnly\": {{faker 'random.boolean'}},\n            \"keyAgreement\": {{faker 'random.boolean'}},\n            \"keyEncipherment\": {{faker 'random.boolean'}}\n          },\n          \"extendedKeyUsage\": {\n            \"clientAuth\": {{faker 'random.boolean'}},\n            \"codeSigning\": {{faker 'random.boolean'}},\n            \"emailProtection\": {{faker 'random.boolean'}},\n            \"ocspSigning\": {{faker 'random.boolean'}},\n            \"serverAuth\": {{faker 'random.boolean'}},\n            \"timeStamping\": {{faker 'random.boolean'}}\n          },\n          \"unknownExtendedKeyUsages\": [\n            {\n              \"objectIdPath\": [\n                {{faker 'random.number'}}\n              ]\n            }\n          ]\n        },\n        \"policyIds\": [\n          {\n            \"objectIdPath\": [\n              {{faker 'random.number'}}\n            ]\n          }\n        ]\n      }\n    },\n    \"subjectConfig\": {\n      \"commonName\": \"\",\n      \"subject\": {\n        \"countryCode\": \"\",\n        \"locality\": \"\",\n        \"organization\": \"\",\n        \"organizationalUnit\": \"\",\n        \"postalCode\": \"\",\n        \"province\": \"\",\n        \"streetAddress\": \"\"\n      },\n      \"subjectAltName\": {\n        \"customSans\": [\n          {\n            \"critical\": {{faker 'random.boolean'}},\n            \"objectId\": {\n              \"objectIdPath\": [\n                {{faker 'random.number'}}\n              ]\n            },\n            \"value\": \"\"\n          }\n        ],\n        \"dnsNames\": [\n          \"\"\n        ],\n        \"emailAddresses\": [\n          \"\"\n        ],\n        \"ipAddresses\": [\n          \"\"\n        ],\n        \"uris\": [\n          \"\"\n        ]\n      }\n    }\n  },\n  \"createTime\": \"\",\n  \"labels\": {},\n  \"lifetime\": \"\",\n  \"name\": \"\",\n  \"pemCertificate\": \"\",\n  \"pemCertificateChain\": [\n    \"\"\n  ],\n  \"pemCsr\": \"\",\n  \"revocationDetails\": {\n    \"revocationState\": \"{{oneOf (array 'REVOCATION_REASON_UNSPECIFIED' 'KEY_COMPROMISE' 'CERTIFICATE_AUTHORITY_COMPROMISE' 'AFFILIATION_CHANGED' 'SUPERSEDED' 'CESSATION_OF_OPERATION' 'CERTIFICATE_HOLD' 'PRIVILEGE_WITHDRAWN' 'ATTRIBUTE_AUTHORITY_COMPROMISE')}}\",\n    \"revocationTime\": \"\"\n  },\n  \"updateTime\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "68b604fb-f39f-4496-a0ec-83a819ab1c98",
      "documentation": "Lists information about the supported locations for this service.",
      "method": "get",
      "endpoint": "v1beta1/:name/locations",
      "responses": [
        {
          "uuid": "e4b41342-ac26-4a8c-b301-05052b5237af",
          "body": "{\n  \"locations\": [\n    {\n      \"displayName\": \"\",\n      \"labels\": {},\n      \"locationId\": \"\",\n      \"metadata\": {},\n      \"name\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d36730bb-e606-4cae-b8dd-27567af043aa",
      "documentation": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
      "method": "get",
      "endpoint": "v1beta1/:name/operations",
      "responses": [
        {
          "uuid": "51ee86e8-1d27-4941-a782-d00a251c74fd",
          "body": "{\n  \"nextPageToken\": \"\",\n  \"operations\": [\n    {\n      \"done\": {{faker 'random.boolean'}},\n      \"error\": {\n        \"code\": {{faker 'random.number'}},\n        \"details\": [\n          {}\n        ],\n        \"message\": \"\"\n      },\n      \"metadata\": {},\n      \"name\": \"\",\n      \"response\": {}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "00eb72bc-5a64-4b5d-a0d5-6776418a1142",
      "documentation": "Activate a CertificateAuthority that is in state PENDING_ACTIVATION and is of type SUBORDINATE. After the parent Certificate Authority signs a certificate signing request from FetchCertificateAuthorityCsr, this method can complete the activation process.",
      "method": "post",
      "endpoint": "v1beta1/:name:activate",
      "responses": [
        {
          "uuid": "3e8b9f2f-c696-49a1-ad95-4cad8cfb0526",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fcad9c9d-96e4-4606-940b-74c36f789fe1",
      "documentation": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
      "method": "post",
      "endpoint": "v1beta1/:name:cancel",
      "responses": [
        {
          "uuid": "164f3e0c-cef5-4b78-86d7-52888f871b45",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "82d7d5f7-a740-499a-ba1d-f6e709cd3e21",
      "documentation": "Disable a CertificateAuthority.",
      "method": "post",
      "endpoint": "v1beta1/:name:disable",
      "responses": [
        {
          "uuid": "bd69eb99-9817-4b06-a639-e0205620510b",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e4f6e755-2f8d-4929-a682-6eed365a9c98",
      "documentation": "Enable a CertificateAuthority.",
      "method": "post",
      "endpoint": "v1beta1/:name:enable",
      "responses": [
        {
          "uuid": "aba616ad-5866-4ade-8b1b-b17412bc5391",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c91ef711-8cb9-43ef-b604-dcd360c8c6fa",
      "documentation": "Fetch a certificate signing request (CSR) from a CertificateAuthority that is in state PENDING_ACTIVATION and is of type SUBORDINATE. The CSR must then be signed by the desired parent Certificate Authority, which could be another CertificateAuthority resource, or could be an on-prem certificate authority. See also ActivateCertificateAuthority.",
      "method": "get",
      "endpoint": "v1beta1/:name:fetch",
      "responses": [
        {
          "uuid": "cee9031d-5943-46b1-b790-7974ed99104c",
          "body": "{\n  \"pemCsr\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c46e1aad-d329-41db-8bff-c8d5326df2bc",
      "documentation": "Restore a CertificateAuthority that is scheduled for deletion.",
      "method": "post",
      "endpoint": "v1beta1/:name:restore",
      "responses": [
        {
          "uuid": "0f738685-f6c8-4cd8-9434-f1e30b7e52be",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bd163c0a-5841-403e-8a04-eb39ce57c70b",
      "documentation": "Revoke a Certificate.",
      "method": "post",
      "endpoint": "v1beta1/:name:revoke",
      "responses": [
        {
          "uuid": "2a09b354-1a69-43b2-ae04-b9fd3137afa4",
          "body": "{\n  \"certificateDescription\": {\n    \"aiaIssuingCertificateUrls\": [\n      \"\"\n    ],\n    \"authorityKeyId\": {\n      \"keyId\": \"\"\n    },\n    \"certFingerprint\": {\n      \"sha256Hash\": \"\"\n    },\n    \"configValues\": {\n      \"additionalExtensions\": [\n        {\n          \"critical\": {{faker 'random.boolean'}},\n          \"objectId\": {\n            \"objectIdPath\": [\n              {{faker 'random.number'}}\n            ]\n          },\n          \"value\": \"\"\n        }\n      ],\n      \"aiaOcspServers\": [\n        \"\"\n      ],\n      \"caOptions\": {\n        \"isCa\": {{faker 'random.boolean'}},\n        \"maxIssuerPathLength\": {{faker 'random.number'}}\n      },\n      \"keyUsage\": {\n        \"baseKeyUsage\": {\n          \"certSign\": {{faker 'random.boolean'}},\n          \"contentCommitment\": {{faker 'random.boolean'}},\n          \"crlSign\": {{faker 'random.boolean'}},\n          \"dataEncipherment\": {{faker 'random.boolean'}},\n          \"decipherOnly\": {{faker 'random.boolean'}},\n          \"digitalSignature\": {{faker 'random.boolean'}},\n          \"encipherOnly\": {{faker 'random.boolean'}},\n          \"keyAgreement\": {{faker 'random.boolean'}},\n          \"keyEncipherment\": {{faker 'random.boolean'}}\n        },\n        \"extendedKeyUsage\": {\n          \"clientAuth\": {{faker 'random.boolean'}},\n          \"codeSigning\": {{faker 'random.boolean'}},\n          \"emailProtection\": {{faker 'random.boolean'}},\n          \"ocspSigning\": {{faker 'random.boolean'}},\n          \"serverAuth\": {{faker 'random.boolean'}},\n          \"timeStamping\": {{faker 'random.boolean'}}\n        },\n        \"unknownExtendedKeyUsages\": [\n          {\n            \"objectIdPath\": [\n              {{faker 'random.number'}}\n            ]\n          }\n        ]\n      },\n      \"policyIds\": [\n        {\n          \"objectIdPath\": [\n            {{faker 'random.number'}}\n          ]\n        }\n      ]\n    },\n    \"crlDistributionPoints\": [\n      \"\"\n    ],\n    \"publicKey\": {\n      \"key\": \"\",\n      \"type\": \"{{oneOf (array 'KEY_TYPE_UNSPECIFIED' 'PEM_RSA_KEY' 'PEM_EC_KEY')}}\"\n    },\n    \"subjectDescription\": {\n      \"commonName\": \"\",\n      \"hexSerialNumber\": \"\",\n      \"lifetime\": \"\",\n      \"notAfterTime\": \"\",\n      \"notBeforeTime\": \"\",\n      \"subject\": {\n        \"countryCode\": \"\",\n        \"locality\": \"\",\n        \"organization\": \"\",\n        \"organizationalUnit\": \"\",\n        \"postalCode\": \"\",\n        \"province\": \"\",\n        \"streetAddress\": \"\"\n      },\n      \"subjectAltName\": {\n        \"customSans\": [\n          {\n            \"critical\": {{faker 'random.boolean'}},\n            \"objectId\": {\n              \"objectIdPath\": [\n                {{faker 'random.number'}}\n              ]\n            },\n            \"value\": \"\"\n          }\n        ],\n        \"dnsNames\": [\n          \"\"\n        ],\n        \"emailAddresses\": [\n          \"\"\n        ],\n        \"ipAddresses\": [\n          \"\"\n        ],\n        \"uris\": [\n          \"\"\n        ]\n      }\n    },\n    \"subjectKeyId\": {\n      \"keyId\": \"\"\n    }\n  },\n  \"config\": {\n    \"publicKey\": {\n      \"key\": \"\",\n      \"type\": \"{{oneOf (array 'KEY_TYPE_UNSPECIFIED' 'PEM_RSA_KEY' 'PEM_EC_KEY')}}\"\n    },\n    \"reusableConfig\": {\n      \"reusableConfig\": \"\",\n      \"reusableConfigValues\": {\n        \"additionalExtensions\": [\n          {\n            \"critical\": {{faker 'random.boolean'}},\n            \"objectId\": {\n              \"objectIdPath\": [\n                {{faker 'random.number'}}\n              ]\n            },\n            \"value\": \"\"\n          }\n        ],\n        \"aiaOcspServers\": [\n          \"\"\n        ],\n        \"caOptions\": {\n          \"isCa\": {{faker 'random.boolean'}},\n          \"maxIssuerPathLength\": {{faker 'random.number'}}\n        },\n        \"keyUsage\": {\n          \"baseKeyUsage\": {\n            \"certSign\": {{faker 'random.boolean'}},\n            \"contentCommitment\": {{faker 'random.boolean'}},\n            \"crlSign\": {{faker 'random.boolean'}},\n            \"dataEncipherment\": {{faker 'random.boolean'}},\n            \"decipherOnly\": {{faker 'random.boolean'}},\n            \"digitalSignature\": {{faker 'random.boolean'}},\n            \"encipherOnly\": {{faker 'random.boolean'}},\n            \"keyAgreement\": {{faker 'random.boolean'}},\n            \"keyEncipherment\": {{faker 'random.boolean'}}\n          },\n          \"extendedKeyUsage\": {\n            \"clientAuth\": {{faker 'random.boolean'}},\n            \"codeSigning\": {{faker 'random.boolean'}},\n            \"emailProtection\": {{faker 'random.boolean'}},\n            \"ocspSigning\": {{faker 'random.boolean'}},\n            \"serverAuth\": {{faker 'random.boolean'}},\n            \"timeStamping\": {{faker 'random.boolean'}}\n          },\n          \"unknownExtendedKeyUsages\": [\n            {\n              \"objectIdPath\": [\n                {{faker 'random.number'}}\n              ]\n            }\n          ]\n        },\n        \"policyIds\": [\n          {\n            \"objectIdPath\": [\n              {{faker 'random.number'}}\n            ]\n          }\n        ]\n      }\n    },\n    \"subjectConfig\": {\n      \"commonName\": \"\",\n      \"subject\": {\n        \"countryCode\": \"\",\n        \"locality\": \"\",\n        \"organization\": \"\",\n        \"organizationalUnit\": \"\",\n        \"postalCode\": \"\",\n        \"province\": \"\",\n        \"streetAddress\": \"\"\n      },\n      \"subjectAltName\": {\n        \"customSans\": [\n          {\n            \"critical\": {{faker 'random.boolean'}},\n            \"objectId\": {\n              \"objectIdPath\": [\n                {{faker 'random.number'}}\n              ]\n            },\n            \"value\": \"\"\n          }\n        ],\n        \"dnsNames\": [\n          \"\"\n        ],\n        \"emailAddresses\": [\n          \"\"\n        ],\n        \"ipAddresses\": [\n          \"\"\n        ],\n        \"uris\": [\n          \"\"\n        ]\n      }\n    }\n  },\n  \"createTime\": \"\",\n  \"labels\": {},\n  \"lifetime\": \"\",\n  \"name\": \"\",\n  \"pemCertificate\": \"\",\n  \"pemCertificateChain\": [\n    \"\"\n  ],\n  \"pemCsr\": \"\",\n  \"revocationDetails\": {\n    \"revocationState\": \"{{oneOf (array 'REVOCATION_REASON_UNSPECIFIED' 'KEY_COMPROMISE' 'CERTIFICATE_AUTHORITY_COMPROMISE' 'AFFILIATION_CHANGED' 'SUPERSEDED' 'CESSATION_OF_OPERATION' 'CERTIFICATE_HOLD' 'PRIVILEGE_WITHDRAWN' 'ATTRIBUTE_AUTHORITY_COMPROMISE')}}\",\n    \"revocationTime\": \"\"\n  },\n  \"updateTime\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "455bc230-d7f4-42b2-85b3-2639b58eeb3b",
      "documentation": "Schedule a CertificateAuthority for deletion.",
      "method": "post",
      "endpoint": "v1beta1/:name:scheduleDelete",
      "responses": [
        {
          "uuid": "5c8c0720-225f-4af3-b330-f6aa8410853a",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9ba569ea-0955-4bc7-b76e-ba956f1dd4d9",
      "documentation": "Lists CertificateAuthorities.",
      "method": "get",
      "endpoint": "v1beta1/:parent/certificateAuthorities",
      "responses": [
        {
          "uuid": "3f03651f-e7d9-4657-86da-b83be0cc4483",
          "body": "{\n  \"certificateAuthorities\": [\n    {\n      \"accessUrls\": {\n        \"caCertificateAccessUrl\": \"\",\n        \"crlAccessUrl\": \"\"\n      },\n      \"caCertificateDescriptions\": [\n        {\n          \"aiaIssuingCertificateUrls\": [\n            \"\"\n          ],\n          \"authorityKeyId\": {\n            \"keyId\": \"\"\n          },\n          \"certFingerprint\": {\n            \"sha256Hash\": \"\"\n          },\n          \"configValues\": {\n            \"additionalExtensions\": [\n              {\n                \"critical\": {{faker 'random.boolean'}},\n                \"objectId\": {\n                  \"objectIdPath\": [\n                    {{faker 'random.number'}}\n                  ]\n                },\n                \"value\": \"\"\n              }\n            ],\n            \"aiaOcspServers\": [\n              \"\"\n            ],\n            \"caOptions\": {\n              \"isCa\": {{faker 'random.boolean'}},\n              \"maxIssuerPathLength\": {{faker 'random.number'}}\n            },\n            \"keyUsage\": {\n              \"baseKeyUsage\": {\n                \"certSign\": {{faker 'random.boolean'}},\n                \"contentCommitment\": {{faker 'random.boolean'}},\n                \"crlSign\": {{faker 'random.boolean'}},\n                \"dataEncipherment\": {{faker 'random.boolean'}},\n                \"decipherOnly\": {{faker 'random.boolean'}},\n                \"digitalSignature\": {{faker 'random.boolean'}},\n                \"encipherOnly\": {{faker 'random.boolean'}},\n                \"keyAgreement\": {{faker 'random.boolean'}},\n                \"keyEncipherment\": {{faker 'random.boolean'}}\n              },\n              \"extendedKeyUsage\": {\n                \"clientAuth\": {{faker 'random.boolean'}},\n                \"codeSigning\": {{faker 'random.boolean'}},\n                \"emailProtection\": {{faker 'random.boolean'}},\n                \"ocspSigning\": {{faker 'random.boolean'}},\n                \"serverAuth\": {{faker 'random.boolean'}},\n                \"timeStamping\": {{faker 'random.boolean'}}\n              },\n              \"unknownExtendedKeyUsages\": [\n                {\n                  \"objectIdPath\": [\n                    {{faker 'random.number'}}\n                  ]\n                }\n              ]\n            },\n            \"policyIds\": [\n              {\n                \"objectIdPath\": [\n                  {{faker 'random.number'}}\n                ]\n              }\n            ]\n          },\n          \"crlDistributionPoints\": [\n            \"\"\n          ],\n          \"publicKey\": {\n            \"key\": \"\",\n            \"type\": \"{{oneOf (array 'KEY_TYPE_UNSPECIFIED' 'PEM_RSA_KEY' 'PEM_EC_KEY')}}\"\n          },\n          \"subjectDescription\": {\n            \"commonName\": \"\",\n            \"hexSerialNumber\": \"\",\n            \"lifetime\": \"\",\n            \"notAfterTime\": \"\",\n            \"notBeforeTime\": \"\",\n            \"subject\": {\n              \"countryCode\": \"\",\n              \"locality\": \"\",\n              \"organization\": \"\",\n              \"organizationalUnit\": \"\",\n              \"postalCode\": \"\",\n              \"province\": \"\",\n              \"streetAddress\": \"\"\n            },\n            \"subjectAltName\": {\n              \"customSans\": [\n                {\n                  \"critical\": {{faker 'random.boolean'}},\n                  \"objectId\": {\n                    \"objectIdPath\": [\n                      {{faker 'random.number'}}\n                    ]\n                  },\n                  \"value\": \"\"\n                }\n              ],\n              \"dnsNames\": [\n                \"\"\n              ],\n              \"emailAddresses\": [\n                \"\"\n              ],\n              \"ipAddresses\": [\n                \"\"\n              ],\n              \"uris\": [\n                \"\"\n              ]\n            }\n          },\n          \"subjectKeyId\": {\n            \"keyId\": \"\"\n          }\n        }\n      ],\n      \"certificatePolicy\": {\n        \"allowedCommonNames\": [\n          \"\"\n        ],\n        \"allowedConfigList\": {\n          \"allowedConfigValues\": [\n            {\n              \"reusableConfig\": \"\",\n              \"reusableConfigValues\": {\n                \"additionalExtensions\": [\n                  {\n                    \"critical\": {{faker 'random.boolean'}},\n                    \"objectId\": {\n                      \"objectIdPath\": [\n                        {{faker 'random.number'}}\n                      ]\n                    },\n                    \"value\": \"\"\n                  }\n                ],\n                \"aiaOcspServers\": [\n                  \"\"\n                ],\n                \"caOptions\": {\n                  \"isCa\": {{faker 'random.boolean'}},\n                  \"maxIssuerPathLength\": {{faker 'random.number'}}\n                },\n                \"keyUsage\": {\n                  \"baseKeyUsage\": {\n                    \"certSign\": {{faker 'random.boolean'}},\n                    \"contentCommitment\": {{faker 'random.boolean'}},\n                    \"crlSign\": {{faker 'random.boolean'}},\n                    \"dataEncipherment\": {{faker 'random.boolean'}},\n                    \"decipherOnly\": {{faker 'random.boolean'}},\n                    \"digitalSignature\": {{faker 'random.boolean'}},\n                    \"encipherOnly\": {{faker 'random.boolean'}},\n                    \"keyAgreement\": {{faker 'random.boolean'}},\n                    \"keyEncipherment\": {{faker 'random.boolean'}}\n                  },\n                  \"extendedKeyUsage\": {\n                    \"clientAuth\": {{faker 'random.boolean'}},\n                    \"codeSigning\": {{faker 'random.boolean'}},\n                    \"emailProtection\": {{faker 'random.boolean'}},\n                    \"ocspSigning\": {{faker 'random.boolean'}},\n                    \"serverAuth\": {{faker 'random.boolean'}},\n                    \"timeStamping\": {{faker 'random.boolean'}}\n                  },\n                  \"unknownExtendedKeyUsages\": [\n                    {\n                      \"objectIdPath\": [\n                        {{faker 'random.number'}}\n                      ]\n                    }\n                  ]\n                },\n                \"policyIds\": [\n                  {\n                    \"objectIdPath\": [\n                      {{faker 'random.number'}}\n                    ]\n                  }\n                ]\n              }\n            }\n          ]\n        },\n        \"allowedIssuanceModes\": {\n          \"allowConfigBasedIssuance\": {{faker 'random.boolean'}},\n          \"allowCsrBasedIssuance\": {{faker 'random.boolean'}}\n        },\n        \"allowedLocationsAndOrganizations\": [\n          {\n            \"countryCode\": \"\",\n            \"locality\": \"\",\n            \"organization\": \"\",\n            \"organizationalUnit\": \"\",\n            \"postalCode\": \"\",\n            \"province\": \"\",\n            \"streetAddress\": \"\"\n          }\n        ],\n        \"allowedSans\": {\n          \"allowCustomSans\": {{faker 'random.boolean'}},\n          \"allowGlobbingDnsWildcards\": {{faker 'random.boolean'}},\n          \"allowedDnsNames\": [\n            \"\"\n          ],\n          \"allowedEmailAddresses\": [\n            \"\"\n          ],\n          \"allowedIps\": [\n            \"\"\n          ],\n          \"allowedUris\": [\n            \"\"\n          ]\n        },\n        \"maximumLifetime\": \"\",\n        \"overwriteConfigValues\": {\n          \"reusableConfig\": \"\",\n          \"reusableConfigValues\": {\n            \"additionalExtensions\": [\n              {\n                \"critical\": {{faker 'random.boolean'}},\n                \"objectId\": {\n                  \"objectIdPath\": [\n                    {{faker 'random.number'}}\n                  ]\n                },\n                \"value\": \"\"\n              }\n            ],\n            \"aiaOcspServers\": [\n              \"\"\n            ],\n            \"caOptions\": {\n              \"isCa\": {{faker 'random.boolean'}},\n              \"maxIssuerPathLength\": {{faker 'random.number'}}\n            },\n            \"keyUsage\": {\n              \"baseKeyUsage\": {\n                \"certSign\": {{faker 'random.boolean'}},\n                \"contentCommitment\": {{faker 'random.boolean'}},\n                \"crlSign\": {{faker 'random.boolean'}},\n                \"dataEncipherment\": {{faker 'random.boolean'}},\n                \"decipherOnly\": {{faker 'random.boolean'}},\n                \"digitalSignature\": {{faker 'random.boolean'}},\n                \"encipherOnly\": {{faker 'random.boolean'}},\n                \"keyAgreement\": {{faker 'random.boolean'}},\n                \"keyEncipherment\": {{faker 'random.boolean'}}\n              },\n              \"extendedKeyUsage\": {\n                \"clientAuth\": {{faker 'random.boolean'}},\n                \"codeSigning\": {{faker 'random.boolean'}},\n                \"emailProtection\": {{faker 'random.boolean'}},\n                \"ocspSigning\": {{faker 'random.boolean'}},\n                \"serverAuth\": {{faker 'random.boolean'}},\n                \"timeStamping\": {{faker 'random.boolean'}}\n              },\n              \"unknownExtendedKeyUsages\": [\n                {\n                  \"objectIdPath\": [\n                    {{faker 'random.number'}}\n                  ]\n                }\n              ]\n            },\n            \"policyIds\": [\n              {\n                \"objectIdPath\": [\n                  {{faker 'random.number'}}\n                ]\n              }\n            ]\n          }\n        }\n      },\n      \"config\": {\n        \"publicKey\": {\n          \"key\": \"\",\n          \"type\": \"{{oneOf (array 'KEY_TYPE_UNSPECIFIED' 'PEM_RSA_KEY' 'PEM_EC_KEY')}}\"\n        },\n        \"reusableConfig\": {\n          \"reusableConfig\": \"\",\n          \"reusableConfigValues\": {\n            \"additionalExtensions\": [\n              {\n                \"critical\": {{faker 'random.boolean'}},\n                \"objectId\": {\n                  \"objectIdPath\": [\n                    {{faker 'random.number'}}\n                  ]\n                },\n                \"value\": \"\"\n              }\n            ],\n            \"aiaOcspServers\": [\n              \"\"\n            ],\n            \"caOptions\": {\n              \"isCa\": {{faker 'random.boolean'}},\n              \"maxIssuerPathLength\": {{faker 'random.number'}}\n            },\n            \"keyUsage\": {\n              \"baseKeyUsage\": {\n                \"certSign\": {{faker 'random.boolean'}},\n                \"contentCommitment\": {{faker 'random.boolean'}},\n                \"crlSign\": {{faker 'random.boolean'}},\n                \"dataEncipherment\": {{faker 'random.boolean'}},\n                \"decipherOnly\": {{faker 'random.boolean'}},\n                \"digitalSignature\": {{faker 'random.boolean'}},\n                \"encipherOnly\": {{faker 'random.boolean'}},\n                \"keyAgreement\": {{faker 'random.boolean'}},\n                \"keyEncipherment\": {{faker 'random.boolean'}}\n              },\n              \"extendedKeyUsage\": {\n                \"clientAuth\": {{faker 'random.boolean'}},\n                \"codeSigning\": {{faker 'random.boolean'}},\n                \"emailProtection\": {{faker 'random.boolean'}},\n                \"ocspSigning\": {{faker 'random.boolean'}},\n                \"serverAuth\": {{faker 'random.boolean'}},\n                \"timeStamping\": {{faker 'random.boolean'}}\n              },\n              \"unknownExtendedKeyUsages\": [\n                {\n                  \"objectIdPath\": [\n                    {{faker 'random.number'}}\n                  ]\n                }\n              ]\n            },\n            \"policyIds\": [\n              {\n                \"objectIdPath\": [\n                  {{faker 'random.number'}}\n                ]\n              }\n            ]\n          }\n        },\n        \"subjectConfig\": {\n          \"commonName\": \"\",\n          \"subject\": {\n            \"countryCode\": \"\",\n            \"locality\": \"\",\n            \"organization\": \"\",\n            \"organizationalUnit\": \"\",\n            \"postalCode\": \"\",\n            \"province\": \"\",\n            \"streetAddress\": \"\"\n          },\n          \"subjectAltName\": {\n            \"customSans\": [\n              {\n                \"critical\": {{faker 'random.boolean'}},\n                \"objectId\": {\n                  \"objectIdPath\": [\n                    {{faker 'random.number'}}\n                  ]\n                },\n                \"value\": \"\"\n              }\n            ],\n            \"dnsNames\": [\n              \"\"\n            ],\n            \"emailAddresses\": [\n              \"\"\n            ],\n            \"ipAddresses\": [\n              \"\"\n            ],\n            \"uris\": [\n              \"\"\n            ]\n          }\n        }\n      },\n      \"createTime\": \"\",\n      \"deleteTime\": \"\",\n      \"gcsBucket\": \"\",\n      \"issuingOptions\": {\n        \"includeCaCertUrl\": {{faker 'random.boolean'}},\n        \"includeCrlAccessUrl\": {{faker 'random.boolean'}}\n      },\n      \"keySpec\": {\n        \"algorithm\": \"{{oneOf (array 'SIGN_HASH_ALGORITHM_UNSPECIFIED' 'RSA_PSS_2048_SHA256' 'RSA_PSS_3072_SHA256' 'RSA_PSS_4096_SHA256' 'RSA_PKCS1_2048_SHA256' 'RSA_PKCS1_3072_SHA256' 'RSA_PKCS1_4096_SHA256' 'EC_P256_SHA256' 'EC_P384_SHA384')}}\",\n        \"cloudKmsKeyVersion\": \"\"\n      },\n      \"labels\": {},\n      \"lifetime\": \"\",\n      \"name\": \"\",\n      \"pemCaCertificates\": [\n        \"\"\n      ],\n      \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'ENABLED' 'DISABLED' 'PENDING_ACTIVATION' 'PENDING_DELETION')}}\",\n      \"subordinateConfig\": {\n        \"certificateAuthority\": \"\",\n        \"pemIssuerChain\": {\n          \"pemCertificates\": [\n            \"\"\n          ]\n        }\n      },\n      \"tier\": \"{{oneOf (array 'TIER_UNSPECIFIED' 'ENTERPRISE' 'DEVOPS')}}\",\n      \"type\": \"{{oneOf (array 'TYPE_UNSPECIFIED' 'SELF_SIGNED' 'SUBORDINATE')}}\",\n      \"updateTime\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\",\n  \"unreachable\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bc61f377-3e9d-407e-ab95-10bdd4b89d03",
      "documentation": "Create a new CertificateAuthority in a given Project and Location.",
      "method": "post",
      "endpoint": "v1beta1/:parent/certificateAuthorities",
      "responses": [
        {
          "uuid": "1a92c72d-a7ff-40b2-97f9-523dfdae3c59",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c016904c-233d-4501-9703-17e39353f4bd",
      "documentation": "Lists CertificateRevocationLists.",
      "method": "get",
      "endpoint": "v1beta1/:parent/certificateRevocationLists",
      "responses": [
        {
          "uuid": "d9669e8b-e65b-409b-931e-d45e188f9921",
          "body": "{\n  \"certificateRevocationLists\": [\n    {\n      \"accessUrl\": \"\",\n      \"createTime\": \"\",\n      \"labels\": {},\n      \"name\": \"\",\n      \"pemCrl\": \"\",\n      \"revokedCertificates\": [\n        {\n          \"certificate\": \"\",\n          \"hexSerialNumber\": \"\",\n          \"revocationReason\": \"{{oneOf (array 'REVOCATION_REASON_UNSPECIFIED' 'KEY_COMPROMISE' 'CERTIFICATE_AUTHORITY_COMPROMISE' 'AFFILIATION_CHANGED' 'SUPERSEDED' 'CESSATION_OF_OPERATION' 'CERTIFICATE_HOLD' 'PRIVILEGE_WITHDRAWN' 'ATTRIBUTE_AUTHORITY_COMPROMISE')}}\"\n        }\n      ],\n      \"sequenceNumber\": \"\",\n      \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'ACTIVE' 'SUPERSEDED')}}\",\n      \"updateTime\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\",\n  \"unreachable\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7fdc7991-98fd-4fce-8eb5-8dd659575ee3",
      "documentation": "Lists Certificates.",
      "method": "get",
      "endpoint": "v1beta1/:parent/certificates",
      "responses": [
        {
          "uuid": "a5a03a0c-a954-4995-a5ef-81aba72d7451",
          "body": "{\n  \"certificates\": [\n    {\n      \"certificateDescription\": {\n        \"aiaIssuingCertificateUrls\": [\n          \"\"\n        ],\n        \"authorityKeyId\": {\n          \"keyId\": \"\"\n        },\n        \"certFingerprint\": {\n          \"sha256Hash\": \"\"\n        },\n        \"configValues\": {\n          \"additionalExtensions\": [\n            {\n              \"critical\": {{faker 'random.boolean'}},\n              \"objectId\": {\n                \"objectIdPath\": [\n                  {{faker 'random.number'}}\n                ]\n              },\n              \"value\": \"\"\n            }\n          ],\n          \"aiaOcspServers\": [\n            \"\"\n          ],\n          \"caOptions\": {\n            \"isCa\": {{faker 'random.boolean'}},\n            \"maxIssuerPathLength\": {{faker 'random.number'}}\n          },\n          \"keyUsage\": {\n            \"baseKeyUsage\": {\n              \"certSign\": {{faker 'random.boolean'}},\n              \"contentCommitment\": {{faker 'random.boolean'}},\n              \"crlSign\": {{faker 'random.boolean'}},\n              \"dataEncipherment\": {{faker 'random.boolean'}},\n              \"decipherOnly\": {{faker 'random.boolean'}},\n              \"digitalSignature\": {{faker 'random.boolean'}},\n              \"encipherOnly\": {{faker 'random.boolean'}},\n              \"keyAgreement\": {{faker 'random.boolean'}},\n              \"keyEncipherment\": {{faker 'random.boolean'}}\n            },\n            \"extendedKeyUsage\": {\n              \"clientAuth\": {{faker 'random.boolean'}},\n              \"codeSigning\": {{faker 'random.boolean'}},\n              \"emailProtection\": {{faker 'random.boolean'}},\n              \"ocspSigning\": {{faker 'random.boolean'}},\n              \"serverAuth\": {{faker 'random.boolean'}},\n              \"timeStamping\": {{faker 'random.boolean'}}\n            },\n            \"unknownExtendedKeyUsages\": [\n              {\n                \"objectIdPath\": [\n                  {{faker 'random.number'}}\n                ]\n              }\n            ]\n          },\n          \"policyIds\": [\n            {\n              \"objectIdPath\": [\n                {{faker 'random.number'}}\n              ]\n            }\n          ]\n        },\n        \"crlDistributionPoints\": [\n          \"\"\n        ],\n        \"publicKey\": {\n          \"key\": \"\",\n          \"type\": \"{{oneOf (array 'KEY_TYPE_UNSPECIFIED' 'PEM_RSA_KEY' 'PEM_EC_KEY')}}\"\n        },\n        \"subjectDescription\": {\n          \"commonName\": \"\",\n          \"hexSerialNumber\": \"\",\n          \"lifetime\": \"\",\n          \"notAfterTime\": \"\",\n          \"notBeforeTime\": \"\",\n          \"subject\": {\n            \"countryCode\": \"\",\n            \"locality\": \"\",\n            \"organization\": \"\",\n            \"organizationalUnit\": \"\",\n            \"postalCode\": \"\",\n            \"province\": \"\",\n            \"streetAddress\": \"\"\n          },\n          \"subjectAltName\": {\n            \"customSans\": [\n              {\n                \"critical\": {{faker 'random.boolean'}},\n                \"objectId\": {\n                  \"objectIdPath\": [\n                    {{faker 'random.number'}}\n                  ]\n                },\n                \"value\": \"\"\n              }\n            ],\n            \"dnsNames\": [\n              \"\"\n            ],\n            \"emailAddresses\": [\n              \"\"\n            ],\n            \"ipAddresses\": [\n              \"\"\n            ],\n            \"uris\": [\n              \"\"\n            ]\n          }\n        },\n        \"subjectKeyId\": {\n          \"keyId\": \"\"\n        }\n      },\n      \"config\": {\n        \"publicKey\": {\n          \"key\": \"\",\n          \"type\": \"{{oneOf (array 'KEY_TYPE_UNSPECIFIED' 'PEM_RSA_KEY' 'PEM_EC_KEY')}}\"\n        },\n        \"reusableConfig\": {\n          \"reusableConfig\": \"\",\n          \"reusableConfigValues\": {\n            \"additionalExtensions\": [\n              {\n                \"critical\": {{faker 'random.boolean'}},\n                \"objectId\": {\n                  \"objectIdPath\": [\n                    {{faker 'random.number'}}\n                  ]\n                },\n                \"value\": \"\"\n              }\n            ],\n            \"aiaOcspServers\": [\n              \"\"\n            ],\n            \"caOptions\": {\n              \"isCa\": {{faker 'random.boolean'}},\n              \"maxIssuerPathLength\": {{faker 'random.number'}}\n            },\n            \"keyUsage\": {\n              \"baseKeyUsage\": {\n                \"certSign\": {{faker 'random.boolean'}},\n                \"contentCommitment\": {{faker 'random.boolean'}},\n                \"crlSign\": {{faker 'random.boolean'}},\n                \"dataEncipherment\": {{faker 'random.boolean'}},\n                \"decipherOnly\": {{faker 'random.boolean'}},\n                \"digitalSignature\": {{faker 'random.boolean'}},\n                \"encipherOnly\": {{faker 'random.boolean'}},\n                \"keyAgreement\": {{faker 'random.boolean'}},\n                \"keyEncipherment\": {{faker 'random.boolean'}}\n              },\n              \"extendedKeyUsage\": {\n                \"clientAuth\": {{faker 'random.boolean'}},\n                \"codeSigning\": {{faker 'random.boolean'}},\n                \"emailProtection\": {{faker 'random.boolean'}},\n                \"ocspSigning\": {{faker 'random.boolean'}},\n                \"serverAuth\": {{faker 'random.boolean'}},\n                \"timeStamping\": {{faker 'random.boolean'}}\n              },\n              \"unknownExtendedKeyUsages\": [\n                {\n                  \"objectIdPath\": [\n                    {{faker 'random.number'}}\n                  ]\n                }\n              ]\n            },\n            \"policyIds\": [\n              {\n                \"objectIdPath\": [\n                  {{faker 'random.number'}}\n                ]\n              }\n            ]\n          }\n        },\n        \"subjectConfig\": {\n          \"commonName\": \"\",\n          \"subject\": {\n            \"countryCode\": \"\",\n            \"locality\": \"\",\n            \"organization\": \"\",\n            \"organizationalUnit\": \"\",\n            \"postalCode\": \"\",\n            \"province\": \"\",\n            \"streetAddress\": \"\"\n          },\n          \"subjectAltName\": {\n            \"customSans\": [\n              {\n                \"critical\": {{faker 'random.boolean'}},\n                \"objectId\": {\n                  \"objectIdPath\": [\n                    {{faker 'random.number'}}\n                  ]\n                },\n                \"value\": \"\"\n              }\n            ],\n            \"dnsNames\": [\n              \"\"\n            ],\n            \"emailAddresses\": [\n              \"\"\n            ],\n            \"ipAddresses\": [\n              \"\"\n            ],\n            \"uris\": [\n              \"\"\n            ]\n          }\n        }\n      },\n      \"createTime\": \"\",\n      \"labels\": {},\n      \"lifetime\": \"\",\n      \"name\": \"\",\n      \"pemCertificate\": \"\",\n      \"pemCertificateChain\": [\n        \"\"\n      ],\n      \"pemCsr\": \"\",\n      \"revocationDetails\": {\n        \"revocationState\": \"{{oneOf (array 'REVOCATION_REASON_UNSPECIFIED' 'KEY_COMPROMISE' 'CERTIFICATE_AUTHORITY_COMPROMISE' 'AFFILIATION_CHANGED' 'SUPERSEDED' 'CESSATION_OF_OPERATION' 'CERTIFICATE_HOLD' 'PRIVILEGE_WITHDRAWN' 'ATTRIBUTE_AUTHORITY_COMPROMISE')}}\",\n        \"revocationTime\": \"\"\n      },\n      \"updateTime\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\",\n  \"unreachable\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d0c02979-7ab7-4fe8-88d3-d5a58b9dff66",
      "documentation": "Create a new Certificate in a given Project, Location from a particular CertificateAuthority.",
      "method": "post",
      "endpoint": "v1beta1/:parent/certificates",
      "responses": [
        {
          "uuid": "859d862e-f70e-4ccb-aaf0-b5d9dc60bc95",
          "body": "{\n  \"certificateDescription\": {\n    \"aiaIssuingCertificateUrls\": [\n      \"\"\n    ],\n    \"authorityKeyId\": {\n      \"keyId\": \"\"\n    },\n    \"certFingerprint\": {\n      \"sha256Hash\": \"\"\n    },\n    \"configValues\": {\n      \"additionalExtensions\": [\n        {\n          \"critical\": {{faker 'random.boolean'}},\n          \"objectId\": {\n            \"objectIdPath\": [\n              {{faker 'random.number'}}\n            ]\n          },\n          \"value\": \"\"\n        }\n      ],\n      \"aiaOcspServers\": [\n        \"\"\n      ],\n      \"caOptions\": {\n        \"isCa\": {{faker 'random.boolean'}},\n        \"maxIssuerPathLength\": {{faker 'random.number'}}\n      },\n      \"keyUsage\": {\n        \"baseKeyUsage\": {\n          \"certSign\": {{faker 'random.boolean'}},\n          \"contentCommitment\": {{faker 'random.boolean'}},\n          \"crlSign\": {{faker 'random.boolean'}},\n          \"dataEncipherment\": {{faker 'random.boolean'}},\n          \"decipherOnly\": {{faker 'random.boolean'}},\n          \"digitalSignature\": {{faker 'random.boolean'}},\n          \"encipherOnly\": {{faker 'random.boolean'}},\n          \"keyAgreement\": {{faker 'random.boolean'}},\n          \"keyEncipherment\": {{faker 'random.boolean'}}\n        },\n        \"extendedKeyUsage\": {\n          \"clientAuth\": {{faker 'random.boolean'}},\n          \"codeSigning\": {{faker 'random.boolean'}},\n          \"emailProtection\": {{faker 'random.boolean'}},\n          \"ocspSigning\": {{faker 'random.boolean'}},\n          \"serverAuth\": {{faker 'random.boolean'}},\n          \"timeStamping\": {{faker 'random.boolean'}}\n        },\n        \"unknownExtendedKeyUsages\": [\n          {\n            \"objectIdPath\": [\n              {{faker 'random.number'}}\n            ]\n          }\n        ]\n      },\n      \"policyIds\": [\n        {\n          \"objectIdPath\": [\n            {{faker 'random.number'}}\n          ]\n        }\n      ]\n    },\n    \"crlDistributionPoints\": [\n      \"\"\n    ],\n    \"publicKey\": {\n      \"key\": \"\",\n      \"type\": \"{{oneOf (array 'KEY_TYPE_UNSPECIFIED' 'PEM_RSA_KEY' 'PEM_EC_KEY')}}\"\n    },\n    \"subjectDescription\": {\n      \"commonName\": \"\",\n      \"hexSerialNumber\": \"\",\n      \"lifetime\": \"\",\n      \"notAfterTime\": \"\",\n      \"notBeforeTime\": \"\",\n      \"subject\": {\n        \"countryCode\": \"\",\n        \"locality\": \"\",\n        \"organization\": \"\",\n        \"organizationalUnit\": \"\",\n        \"postalCode\": \"\",\n        \"province\": \"\",\n        \"streetAddress\": \"\"\n      },\n      \"subjectAltName\": {\n        \"customSans\": [\n          {\n            \"critical\": {{faker 'random.boolean'}},\n            \"objectId\": {\n              \"objectIdPath\": [\n                {{faker 'random.number'}}\n              ]\n            },\n            \"value\": \"\"\n          }\n        ],\n        \"dnsNames\": [\n          \"\"\n        ],\n        \"emailAddresses\": [\n          \"\"\n        ],\n        \"ipAddresses\": [\n          \"\"\n        ],\n        \"uris\": [\n          \"\"\n        ]\n      }\n    },\n    \"subjectKeyId\": {\n      \"keyId\": \"\"\n    }\n  },\n  \"config\": {\n    \"publicKey\": {\n      \"key\": \"\",\n      \"type\": \"{{oneOf (array 'KEY_TYPE_UNSPECIFIED' 'PEM_RSA_KEY' 'PEM_EC_KEY')}}\"\n    },\n    \"reusableConfig\": {\n      \"reusableConfig\": \"\",\n      \"reusableConfigValues\": {\n        \"additionalExtensions\": [\n          {\n            \"critical\": {{faker 'random.boolean'}},\n            \"objectId\": {\n              \"objectIdPath\": [\n                {{faker 'random.number'}}\n              ]\n            },\n            \"value\": \"\"\n          }\n        ],\n        \"aiaOcspServers\": [\n          \"\"\n        ],\n        \"caOptions\": {\n          \"isCa\": {{faker 'random.boolean'}},\n          \"maxIssuerPathLength\": {{faker 'random.number'}}\n        },\n        \"keyUsage\": {\n          \"baseKeyUsage\": {\n            \"certSign\": {{faker 'random.boolean'}},\n            \"contentCommitment\": {{faker 'random.boolean'}},\n            \"crlSign\": {{faker 'random.boolean'}},\n            \"dataEncipherment\": {{faker 'random.boolean'}},\n            \"decipherOnly\": {{faker 'random.boolean'}},\n            \"digitalSignature\": {{faker 'random.boolean'}},\n            \"encipherOnly\": {{faker 'random.boolean'}},\n            \"keyAgreement\": {{faker 'random.boolean'}},\n            \"keyEncipherment\": {{faker 'random.boolean'}}\n          },\n          \"extendedKeyUsage\": {\n            \"clientAuth\": {{faker 'random.boolean'}},\n            \"codeSigning\": {{faker 'random.boolean'}},\n            \"emailProtection\": {{faker 'random.boolean'}},\n            \"ocspSigning\": {{faker 'random.boolean'}},\n            \"serverAuth\": {{faker 'random.boolean'}},\n            \"timeStamping\": {{faker 'random.boolean'}}\n          },\n          \"unknownExtendedKeyUsages\": [\n            {\n              \"objectIdPath\": [\n                {{faker 'random.number'}}\n              ]\n            }\n          ]\n        },\n        \"policyIds\": [\n          {\n            \"objectIdPath\": [\n              {{faker 'random.number'}}\n            ]\n          }\n        ]\n      }\n    },\n    \"subjectConfig\": {\n      \"commonName\": \"\",\n      \"subject\": {\n        \"countryCode\": \"\",\n        \"locality\": \"\",\n        \"organization\": \"\",\n        \"organizationalUnit\": \"\",\n        \"postalCode\": \"\",\n        \"province\": \"\",\n        \"streetAddress\": \"\"\n      },\n      \"subjectAltName\": {\n        \"customSans\": [\n          {\n            \"critical\": {{faker 'random.boolean'}},\n            \"objectId\": {\n              \"objectIdPath\": [\n                {{faker 'random.number'}}\n              ]\n            },\n            \"value\": \"\"\n          }\n        ],\n        \"dnsNames\": [\n          \"\"\n        ],\n        \"emailAddresses\": [\n          \"\"\n        ],\n        \"ipAddresses\": [\n          \"\"\n        ],\n        \"uris\": [\n          \"\"\n        ]\n      }\n    }\n  },\n  \"createTime\": \"\",\n  \"labels\": {},\n  \"lifetime\": \"\",\n  \"name\": \"\",\n  \"pemCertificate\": \"\",\n  \"pemCertificateChain\": [\n    \"\"\n  ],\n  \"pemCsr\": \"\",\n  \"revocationDetails\": {\n    \"revocationState\": \"{{oneOf (array 'REVOCATION_REASON_UNSPECIFIED' 'KEY_COMPROMISE' 'CERTIFICATE_AUTHORITY_COMPROMISE' 'AFFILIATION_CHANGED' 'SUPERSEDED' 'CESSATION_OF_OPERATION' 'CERTIFICATE_HOLD' 'PRIVILEGE_WITHDRAWN' 'ATTRIBUTE_AUTHORITY_COMPROMISE')}}\",\n    \"revocationTime\": \"\"\n  },\n  \"updateTime\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "210e8014-337c-45c2-a4d8-cd8cd3799eed",
      "documentation": "Lists ReusableConfigs.",
      "method": "get",
      "endpoint": "v1beta1/:parent/reusableConfigs",
      "responses": [
        {
          "uuid": "a2ec452e-8748-43e4-931a-73482d5c886a",
          "body": "{\n  \"nextPageToken\": \"\",\n  \"reusableConfigs\": [\n    {\n      \"createTime\": \"\",\n      \"description\": \"\",\n      \"labels\": {},\n      \"name\": \"\",\n      \"updateTime\": \"\",\n      \"values\": {\n        \"additionalExtensions\": [\n          {\n            \"critical\": {{faker 'random.boolean'}},\n            \"objectId\": {\n              \"objectIdPath\": [\n                {{faker 'random.number'}}\n              ]\n            },\n            \"value\": \"\"\n          }\n        ],\n        \"aiaOcspServers\": [\n          \"\"\n        ],\n        \"caOptions\": {\n          \"isCa\": {{faker 'random.boolean'}},\n          \"maxIssuerPathLength\": {{faker 'random.number'}}\n        },\n        \"keyUsage\": {\n          \"baseKeyUsage\": {\n            \"certSign\": {{faker 'random.boolean'}},\n            \"contentCommitment\": {{faker 'random.boolean'}},\n            \"crlSign\": {{faker 'random.boolean'}},\n            \"dataEncipherment\": {{faker 'random.boolean'}},\n            \"decipherOnly\": {{faker 'random.boolean'}},\n            \"digitalSignature\": {{faker 'random.boolean'}},\n            \"encipherOnly\": {{faker 'random.boolean'}},\n            \"keyAgreement\": {{faker 'random.boolean'}},\n            \"keyEncipherment\": {{faker 'random.boolean'}}\n          },\n          \"extendedKeyUsage\": {\n            \"clientAuth\": {{faker 'random.boolean'}},\n            \"codeSigning\": {{faker 'random.boolean'}},\n            \"emailProtection\": {{faker 'random.boolean'}},\n            \"ocspSigning\": {{faker 'random.boolean'}},\n            \"serverAuth\": {{faker 'random.boolean'}},\n            \"timeStamping\": {{faker 'random.boolean'}}\n          },\n          \"unknownExtendedKeyUsages\": [\n            {\n              \"objectIdPath\": [\n                {{faker 'random.number'}}\n              ]\n            }\n          ]\n        },\n        \"policyIds\": [\n          {\n            \"objectIdPath\": [\n              {{faker 'random.number'}}\n            ]\n          }\n        ]\n      }\n    }\n  ],\n  \"unreachable\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "23d16b2d-5fa7-414e-8eba-09379634798b",
      "documentation": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
      "method": "get",
      "endpoint": "v1beta1/:resource:getIamPolicy",
      "responses": [
        {
          "uuid": "3a8ea363-56bb-42cc-ac1f-37025e2e6a86",
          "body": "{\n  \"auditConfigs\": [\n    {\n      \"auditLogConfigs\": [\n        {\n          \"exemptedMembers\": [\n            \"\"\n          ],\n          \"logType\": \"{{oneOf (array 'LOG_TYPE_UNSPECIFIED' 'ADMIN_READ' 'DATA_WRITE' 'DATA_READ')}}\"\n        }\n      ],\n      \"service\": \"\"\n    }\n  ],\n  \"bindings\": [\n    {\n      \"condition\": {\n        \"description\": \"\",\n        \"expression\": \"\",\n        \"location\": \"\",\n        \"title\": \"\"\n      },\n      \"members\": [\n        \"\"\n      ],\n      \"role\": \"\"\n    }\n  ],\n  \"etag\": \"\",\n  \"version\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fb73ced1-27e8-4614-a6e5-cad8aaadd8f9",
      "documentation": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
      "method": "post",
      "endpoint": "v1beta1/:resource:setIamPolicy",
      "responses": [
        {
          "uuid": "5f54b105-b30a-4830-9a6e-a553e4e354e5",
          "body": "{\n  \"auditConfigs\": [\n    {\n      \"auditLogConfigs\": [\n        {\n          \"exemptedMembers\": [\n            \"\"\n          ],\n          \"logType\": \"{{oneOf (array 'LOG_TYPE_UNSPECIFIED' 'ADMIN_READ' 'DATA_WRITE' 'DATA_READ')}}\"\n        }\n      ],\n      \"service\": \"\"\n    }\n  ],\n  \"bindings\": [\n    {\n      \"condition\": {\n        \"description\": \"\",\n        \"expression\": \"\",\n        \"location\": \"\",\n        \"title\": \"\"\n      },\n      \"members\": [\n        \"\"\n      ],\n      \"role\": \"\"\n    }\n  ],\n  \"etag\": \"\",\n  \"version\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5cba5aef-2bb7-49f8-aea8-30b583332b09",
      "documentation": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
      "method": "post",
      "endpoint": "v1beta1/:resource:testIamPermissions",
      "responses": [
        {
          "uuid": "fb65824f-242a-452e-9bbf-511e830cbe9e",
          "body": "{\n  \"permissions\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}