{
  "uuid": "5c646e36-2b5f-4ec2-bf6a-8b1647a15f94",
  "lastMigration": 19,
  "name": "Advicent.FactFinderService",
  "endpointPrefix": "factfinder",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "0a4a0ae1-12f7-4bbb-b9eb-8125d20d6a97",
      "documentation": "Description: This operation retrieves all Account Types for the specified country.<br />\r\n              Purpose: Provides access to the Account Types including id and type description.",
      "method": "get",
      "endpoint": "api/AccountTypes",
      "responses": [
        {
          "uuid": "255b668c-9c29-4b3a-bae7-76308448c428",
          "body": "{\n  \"accountTypes\": [\n    {\n      \"allowedSavingsTypes\": [\n        {\n          \"typeName\": \"{{oneOf (array 'PostTaxSavings' 'PreTaxSavings' 'EmployerSavings' 'MandatorySavings')}}\",\n          \"validAmountTypes\": [\n            \"{{oneOf (array 'Dollar' 'Percent' 'Max')}}\"\n          ]\n        }\n      ],\n      \"id\": {{faker 'random.number'}},\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"name\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3c691998-305c-4648-9be2-a73a9a1f9caf",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6df72bcf-6d1c-4d17-85a3-41d1881d62ed",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Account Type not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ff6f59b2-40cf-4c1d-83d3-93f20721d70d",
      "documentation": "Description: This operation retrieves all Account Types for the specified id.<br />\r\n              Purpose: Provides access to the Account Types including id and type description.",
      "method": "get",
      "endpoint": "api/AccountTypes/:id",
      "responses": [
        {
          "uuid": "fabff2ee-0efd-4b13-a311-5d2abbffe686",
          "body": "{\n  \"allowedSavingsTypes\": [\n    {\n      \"typeName\": \"{{oneOf (array 'PostTaxSavings' 'PreTaxSavings' 'EmployerSavings' 'MandatorySavings')}}\",\n      \"validAmountTypes\": [\n        \"{{oneOf (array 'Dollar' 'Percent' 'Max')}}\"\n      ]\n    }\n  ],\n  \"id\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bc56a2e4-fb3b-4d55-9677-ccae58656e4c",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "261cc6ca-10eb-4997-aeb3-67ac03059f08",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Account Type not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e21486a2-5f78-4a30-92ba-b1abbb2a34c7",
      "documentation": "Description: This operation retrieves all Accounts for the specified Fact Finder ID and/or external source ID.<br />\r\n              Purpose: Provides access to the Account information including description and market value.",
      "method": "get",
      "endpoint": "api/Accounts",
      "responses": [
        {
          "uuid": "a2eae068-a5e5-464c-a3d7-9a3356488b97",
          "body": "{\n  \"accounts\": [\n    {\n      \"accountId\": {{faker 'random.number'}},\n      \"accountType\": {{faker 'random.number'}},\n      \"description\": \"\",\n      \"externalDestinationId\": \"\",\n      \"externalSourceId\": \"\",\n      \"externalSourceName\": \"\",\n      \"factFinderId\": {{faker 'random.number'}},\n      \"lastUpdated\": \"{{faker 'date.recent' 365}}\",\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"marketValue\": {{faker 'random.float'}},\n      \"owner\": \"{{oneOf (array 'Client' 'CoClient' 'Joint' 'Dependent' 'Other')}}\",\n      \"ownerDependentId\": {{faker 'random.number'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3828b2e9-540d-4c99-9b4b-d2666b7139fc",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b10396ee-db52-4b5a-bb86-da35d14a93f4",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Account data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b3fa1b2f-838a-4090-b538-9b99d936b76c",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1e24af0a-e520-43bc-89ce-00fe82296b8e",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Account not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bb4a6847-106d-4caa-a7d4-38835b918305",
      "documentation": "Description: The operation creates an Account.<br />\r\n              Purpose: Allows for creation of Accounts on a Fact Finder.",
      "method": "post",
      "endpoint": "api/Accounts",
      "responses": [
        {
          "uuid": "d0acb9b4-afad-4244-990e-069c2e3a2486",
          "body": "{\n  \"accountId\": {{faker 'random.number'}},\n  \"accountType\": {{faker 'random.number'}},\n  \"description\": \"\",\n  \"externalDestinationId\": \"\",\n  \"externalSourceId\": \"\",\n  \"externalSourceName\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"lastUpdated\": \"{{faker 'date.recent' 365}}\",\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"marketValue\": {{faker 'random.float'}},\n  \"owner\": \"{{oneOf (array 'Client' 'CoClient' 'Joint' 'Dependent' 'Other')}}\",\n  \"ownerDependentId\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "22f85bc2-f584-4b5a-905c-265fbe29e8da",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8d842c02-888f-4aa3-991f-f9b73100d413",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Account data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0aa396da-248c-4500-8750-2039d7eb6518",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c5387fd6-60e9-4f84-bd2e-0c36aa0390ad",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Account not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5ddd8594-04c9-4ccf-b570-cc8a4693e269",
      "documentation": "Retrieves all holdings in the specified Account.",
      "method": "get",
      "endpoint": "api/Accounts/:accountId/Holdings",
      "responses": [
        {
          "uuid": "d2626fca-6347-4ec1-8d8c-46b0e8f7349d",
          "body": "{\n  \"holdings\": [\n    {\n      \"accountHoldingId\": {{faker 'random.number'}},\n      \"accountId\": {{faker 'random.number'}},\n      \"costBasis\": {{faker 'random.float'}},\n      \"cusip\": \"\",\n      \"description\": \"\",\n      \"externalDestinationId\": \"\",\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"marketValue\": {{faker 'random.float'}},\n      \"symbol\": \"\",\n      \"valuationDate\": \"{{faker 'date.recent' 365}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "15b28c87-77eb-4788-831a-2225b068081b",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fbdad708-c253-455c-bcd7-ff1c06c8810c",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Account data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7ac9c7d5-9efc-4cb2-86be-e77e72e40a46",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f34e5652-499c-4241-91b2-4919f76eea2d",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Account not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f038a365-5850-4e3a-a65a-e14a43edb10e",
      "documentation": "Creates a holding and adds it to an existing Account.",
      "method": "post",
      "endpoint": "api/Accounts/:accountId/Holdings",
      "responses": [
        {
          "uuid": "e4aa28dd-6277-43fa-a215-fe5ed63e2ef2",
          "body": "{\n  \"accountHoldingId\": {{faker 'random.number'}},\n  \"accountId\": {{faker 'random.number'}},\n  \"costBasis\": {{faker 'random.float'}},\n  \"cusip\": \"\",\n  \"description\": \"\",\n  \"externalDestinationId\": \"\",\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"marketValue\": {{faker 'random.float'}},\n  \"symbol\": \"\",\n  \"valuationDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b4d46b4c-8276-4ae2-a5ff-49d0073e80d9",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9e09aa52-0d80-4ec5-8a31-a15120641e67",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Account data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7eb46173-48d4-4a03-bdca-b9c89f0ec674",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3607a245-29cb-43ec-8a0f-fbecc44858c1",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Account not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4c285f8f-af31-443c-a3da-5ab28afae157",
      "documentation": "Updates all holdings associated with an account",
      "method": "put",
      "endpoint": "api/Accounts/:accountId/Holdings",
      "responses": [
        {
          "uuid": "57f59bbd-9733-4558-a879-c9d733c1cacb",
          "body": "{\n  \"holdings\": [\n    {\n      \"accountHoldingId\": {{faker 'random.number'}},\n      \"accountId\": {{faker 'random.number'}},\n      \"costBasis\": {{faker 'random.float'}},\n      \"cusip\": \"\",\n      \"description\": \"\",\n      \"externalDestinationId\": \"\",\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"marketValue\": {{faker 'random.float'}},\n      \"symbol\": \"\",\n      \"valuationDate\": \"{{faker 'date.recent' 365}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c6caf34c-1f52-461b-8d32-134aba3a5456",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e44943a7-8bd7-445f-833b-58fddbdb4b03",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Account data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ea50f694-5d16-4a82-97ef-03eb586aee77",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "efc23674-9489-4533-9801-908f02d0a256",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Account not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a41b4886-3d67-4ad1-8d19-edee06e79cab",
      "documentation": "Description: This operation deletes a single Account Holding for the specified Account Holding ID and Account ID.<br />\r\n              Purpose: Provides the ability to remove individual holdings from a specified Account.",
      "method": "delete",
      "endpoint": "api/Accounts/:accountId/Holdings/:id",
      "responses": [
        {
          "uuid": "d7002d23-237f-422c-808c-6782fd3062db",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "425d0d82-ccb4-42e3-a12f-824c2a0b08e8",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "02abf7a1-c510-4c0e-b3ac-11425ca6a414",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Account data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ca5fd476-ddc8-45bc-9570-16009ca2eeef",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c80d05f3-3b30-489e-9887-2f6c6bb176ef",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Account not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3ec394dc-e5c9-40e0-bdc4-0875f9949f1d",
      "documentation": "Description: This operation retrieves a single Account Holding for the specified Account Holding ID and Account ID.<br />\r\n              Purpose: Provides access to the Account Holding information including description and market value.",
      "method": "get",
      "endpoint": "api/Accounts/:accountId/Holdings/:id",
      "responses": [
        {
          "uuid": "143f5ad0-4b76-499a-abe1-4d855d3a01b5",
          "body": "{\n  \"accountHoldingId\": {{faker 'random.number'}},\n  \"accountId\": {{faker 'random.number'}},\n  \"costBasis\": {{faker 'random.float'}},\n  \"cusip\": \"\",\n  \"description\": \"\",\n  \"externalDestinationId\": \"\",\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"marketValue\": {{faker 'random.float'}},\n  \"symbol\": \"\",\n  \"valuationDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "57dd3eef-2227-4827-a29b-540c4c5f2f32",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d6d0edf5-c553-4ea5-a300-664736ebc175",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Account data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a0f8f729-546a-4150-b34e-629824b87bfb",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "80246518-ef57-4dd1-bb31-8862b3cb6e30",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Account not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f8f0b7e0-3090-40d6-9447-1c6388cfb56f",
      "documentation": "Updates a holding associated with an account",
      "method": "put",
      "endpoint": "api/Accounts/:accountId/Holdings/:id",
      "responses": [
        {
          "uuid": "2d2a3a91-d81e-4073-80d7-b50a8fba6c0f",
          "body": "{\n  \"costBasis\": {{faker 'random.float'}},\n  \"cusip\": \"\",\n  \"description\": \"\",\n  \"externalDestinationId\": \"\",\n  \"marketValue\": {{faker 'random.float'}},\n  \"symbol\": \"\",\n  \"valuationDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "adcfd112-8252-4e48-8cae-197361fcf0f4",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ecbe7cf1-fe5f-4ebf-a9cf-d42557549852",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Account data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d689e81b-2b7f-4969-9732-1da8b70477a9",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4cf25d39-ecd8-4177-949b-7338511d1ab0",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Account not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a28e3155-7028-459a-b6b7-a8d5f1e48fd2",
      "documentation": "Deletes all savings strategies tied to an account",
      "method": "delete",
      "endpoint": "api/Accounts/:accountId/SavingsStrategies",
      "responses": [
        {
          "uuid": "cedaf0b2-09d1-4ece-ad4e-5761a31d4d79",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e763e9a3-2ac8-4520-b4b9-0fd96bbe3f0b",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0bd35a66-ed92-4273-96bb-73ace0cf3f8a",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Account data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "94d360f6-22dd-4504-a273-858e90806ffd",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f1800b1e-2e0a-474a-81c5-8d26008ca2a1",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Account not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "db2d53e7-f47d-485a-9b80-8949e7032797",
      "documentation": "Get all of the savings strategies for a specific account",
      "method": "get",
      "endpoint": "api/Accounts/:accountId/SavingsStrategies",
      "responses": [
        {
          "uuid": "16e197d7-7b7d-4943-8584-2043fcd888b6",
          "body": "{\n  \"savingsStrategies\": [\n    {\n      \"accountId\": {{faker 'random.number'}},\n      \"employerSavingsAmount\": {{faker 'random.float'}},\n      \"employerSavingsAmountType\": \"{{oneOf (array 'Dollar' 'Percent' 'Max')}}\",\n      \"endDate\": \"{{faker 'date.recent' 365}}\",\n      \"externalDestinationId\": \"\",\n      \"frequencyId\": {{faker 'random.number'}},\n      \"mandatoryAmount\": {{faker 'random.float'}},\n      \"mandatoryAmountType\": \"{{oneOf (array 'Dollar' 'Percent' 'Max')}}\",\n      \"postTaxSavingsAmount\": {{faker 'random.float'}},\n      \"postTaxSavingsAmountType\": \"{{oneOf (array 'Dollar' 'Percent' 'Max')}}\",\n      \"preTaxSavingsAmount\": {{faker 'random.float'}},\n      \"preTaxSavingsAmountType\": \"{{oneOf (array 'Dollar' 'Percent' 'Max')}}\",\n      \"savingsStrategyId\": {{faker 'random.number'}},\n      \"startDate\": \"{{faker 'date.recent' 365}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "28236b20-9e5b-4cb1-b0fd-30dd726475b5",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4c2488aa-39b8-4dd2-b3ba-8724299cc5cc",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Account data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b6fdc504-37a7-43af-81a2-09a452c864a9",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5e41071a-d785-4d71-878a-9c73b0351f5d",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Account not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6ea62e43-068c-4e7b-a4c5-f6b921167365",
      "documentation": "Creates a savings strategy on a specific account",
      "method": "post",
      "endpoint": "api/Accounts/:accountId/SavingsStrategies",
      "responses": [
        {
          "uuid": "361eea8d-196a-4128-99e0-f8449e571614",
          "body": "{\n  \"accountId\": {{faker 'random.number'}},\n  \"employerSavingsAmount\": {{faker 'random.float'}},\n  \"employerSavingsAmountType\": \"{{oneOf (array 'Dollar' 'Percent' 'Max')}}\",\n  \"endDate\": \"{{faker 'date.recent' 365}}\",\n  \"externalDestinationId\": \"\",\n  \"frequencyId\": {{faker 'random.number'}},\n  \"mandatoryAmount\": {{faker 'random.float'}},\n  \"mandatoryAmountType\": \"{{oneOf (array 'Dollar' 'Percent' 'Max')}}\",\n  \"postTaxSavingsAmount\": {{faker 'random.float'}},\n  \"postTaxSavingsAmountType\": \"{{oneOf (array 'Dollar' 'Percent' 'Max')}}\",\n  \"preTaxSavingsAmount\": {{faker 'random.float'}},\n  \"preTaxSavingsAmountType\": \"{{oneOf (array 'Dollar' 'Percent' 'Max')}}\",\n  \"savingsStrategyId\": {{faker 'random.number'}},\n  \"startDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c623b95b-0ac8-4bbb-bc9e-9b8ae627c26a",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "868dc8fb-1d1d-46fb-807d-7635af9c4945",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Account data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1d213b00-36a7-4672-a89a-dc4d1e8ed3e9",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "398b93b2-39bf-4e5e-a4e6-4843d14d6bcb",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Account not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bd561c77-1656-4fbc-af0b-d3eb7648490b",
      "documentation": "Deletes a specific savings strategy",
      "method": "delete",
      "endpoint": "api/Accounts/:accountId/SavingsStrategies/:id",
      "responses": [
        {
          "uuid": "f1bacc75-ec76-42cc-8122-7c9ef7bfbc72",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a3ecdcf8-99c6-4473-8372-e52d69f2bdee",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2b89b625-45f1-46aa-8a06-de61d413c8e3",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Account data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "486c2dba-a493-4dd2-8550-d5a8e9f19dee",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "333a0c16-ff65-4e48-860c-3a7462e98745",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Account not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9af29118-e8b9-40cd-99f5-b52f28f15ca9",
      "documentation": "Get a specific savings strategy for an account",
      "method": "get",
      "endpoint": "api/Accounts/:accountId/SavingsStrategies/:id",
      "responses": [
        {
          "uuid": "77298808-3d05-4d3e-81d3-e00cc05ff469",
          "body": "{\n  \"accountId\": {{faker 'random.number'}},\n  \"employerSavingsAmount\": {{faker 'random.float'}},\n  \"employerSavingsAmountType\": \"{{oneOf (array 'Dollar' 'Percent' 'Max')}}\",\n  \"endDate\": \"{{faker 'date.recent' 365}}\",\n  \"externalDestinationId\": \"\",\n  \"frequencyId\": {{faker 'random.number'}},\n  \"mandatoryAmount\": {{faker 'random.float'}},\n  \"mandatoryAmountType\": \"{{oneOf (array 'Dollar' 'Percent' 'Max')}}\",\n  \"postTaxSavingsAmount\": {{faker 'random.float'}},\n  \"postTaxSavingsAmountType\": \"{{oneOf (array 'Dollar' 'Percent' 'Max')}}\",\n  \"preTaxSavingsAmount\": {{faker 'random.float'}},\n  \"preTaxSavingsAmountType\": \"{{oneOf (array 'Dollar' 'Percent' 'Max')}}\",\n  \"savingsStrategyId\": {{faker 'random.number'}},\n  \"startDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a3b11cfa-b17b-4503-ac9c-54a34b127a8e",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "07ac464c-34cf-446e-b076-4ef0073313b0",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Account data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2db2b5f2-c398-4bf6-85eb-ddb7fff6f106",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7b1cc77d-e7e7-412e-a9c2-9fe654e1e618",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Account not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "41202aa5-e529-4f2f-ad16-ec46466fa67a",
      "documentation": "Updates a specific savings strategy",
      "method": "put",
      "endpoint": "api/Accounts/:accountId/SavingsStrategies/:id",
      "responses": [
        {
          "uuid": "698224bc-ecee-4bbe-ad38-d0d29c4fb8b0",
          "body": "{\n  \"accountId\": {{faker 'random.number'}},\n  \"employerSavingsAmount\": {{faker 'random.float'}},\n  \"employerSavingsAmountType\": \"{{oneOf (array 'Dollar' 'Percent' 'Max')}}\",\n  \"endDate\": \"{{faker 'date.recent' 365}}\",\n  \"externalDestinationId\": \"\",\n  \"frequencyId\": {{faker 'random.number'}},\n  \"mandatoryAmount\": {{faker 'random.float'}},\n  \"mandatoryAmountType\": \"{{oneOf (array 'Dollar' 'Percent' 'Max')}}\",\n  \"postTaxSavingsAmount\": {{faker 'random.float'}},\n  \"postTaxSavingsAmountType\": \"{{oneOf (array 'Dollar' 'Percent' 'Max')}}\",\n  \"preTaxSavingsAmount\": {{faker 'random.float'}},\n  \"preTaxSavingsAmountType\": \"{{oneOf (array 'Dollar' 'Percent' 'Max')}}\",\n  \"savingsStrategyId\": {{faker 'random.number'}},\n  \"startDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b1c38fea-8762-4803-a561-43e07fd9be0a",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "55f4581b-a487-4d3f-96d3-2c0f6840ace2",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Account data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e5b967aa-62d6-41d1-80dc-b52eeefa8b38",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d2bbb738-22b9-4da4-a3a3-0d2568ba2d21",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Account not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c83e44bb-85c8-410a-b849-d4ae6dc850a3",
      "documentation": "Description: The operation removes an Account tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal of an Account from a Fact Finder.",
      "method": "delete",
      "endpoint": "api/Accounts/:id",
      "responses": [
        {
          "uuid": "6af3d916-845c-44ac-9084-681ed6181b8a",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "48d5296e-83cc-4872-80f3-1b48541941ee",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "48230620-88d5-4f31-9236-626552a922c7",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Account data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2e05c767-bd06-4833-890d-591518966e48",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "76d9cc8e-379c-4465-885a-388ea37c9761",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Account not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "245ba1da-e115-44fb-99c1-d8b8fa524800",
      "documentation": "Description: This operation retrieves a single Account for the specified Account ID.<br />\r\n              Purpose: Provides access to the Account information including description and market value.",
      "method": "get",
      "endpoint": "api/Accounts/:id",
      "responses": [
        {
          "uuid": "adefa2d7-642a-49c6-9286-043e08b7bec8",
          "body": "{\n  \"accountId\": {{faker 'random.number'}},\n  \"accountType\": {{faker 'random.number'}},\n  \"description\": \"\",\n  \"externalDestinationId\": \"\",\n  \"externalSourceId\": \"\",\n  \"externalSourceName\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"lastUpdated\": \"{{faker 'date.recent' 365}}\",\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"marketValue\": {{faker 'random.float'}},\n  \"owner\": \"{{oneOf (array 'Client' 'CoClient' 'Joint' 'Dependent' 'Other')}}\",\n  \"ownerDependentId\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "53d8ccb0-8135-45c3-adf3-31897d4ae50c",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0b75c03a-4f26-4363-9503-611213e65bdf",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Account data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6f0a8467-2d0c-4e17-960f-b6d177828571",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b6556874-e161-4b34-84b9-e69454f38fc4",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Account not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4e12d218-1bfc-40a2-982c-6f71a4de2cee",
      "documentation": "Description: The operation updates an Account, deletes associated saving strategies if the account type changes.<br />\r\n              Purpose: Allows for complete replacement of an Account on a Fact Finder.",
      "method": "put",
      "endpoint": "api/Accounts/:id",
      "responses": [
        {
          "uuid": "f03c6d0a-acfe-4359-8981-d4a767f3253c",
          "body": "{\n  \"accountId\": {{faker 'random.number'}},\n  \"accountType\": {{faker 'random.number'}},\n  \"description\": \"\",\n  \"externalDestinationId\": \"\",\n  \"externalSourceId\": \"\",\n  \"externalSourceName\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"lastUpdated\": \"{{faker 'date.recent' 365}}\",\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"marketValue\": {{faker 'random.float'}},\n  \"owner\": \"{{oneOf (array 'Client' 'CoClient' 'Joint' 'Dependent' 'Other')}}\",\n  \"ownerDependentId\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "64994ff8-e138-469c-a70a-6d0fac53afd6",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0a742e64-6d63-43ea-a2a9-1db04088e446",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Account data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "de0ab1e8-eea3-4213-9bed-839f0e03a0a5",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5efc831d-63b0-4ad6-b087-ef23e34e2cc7",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Account not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "99c1d757-a2f0-47c9-8a67-0a7c71758e76",
      "documentation": "Description: This operation submits the Fact Finder data to an external system.<br />\r\n              Purpose: Allows Fact Finder data to be persisted in another system for that system's consumption and use.",
      "method": "post",
      "endpoint": "api/Clients",
      "responses": [
        {
          "uuid": "9bb85f30-5f2f-4759-b5dc-2801c2fe8796",
          "body": "{\n  \"clientId\": {{faker 'random.number'}},\n  \"message\": \"\",\n  \"ownerUser\": \"\",\n  \"planId\": {{faker 'random.number'}},\n  \"success\": {{faker 'random.boolean'}}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ee912d9f-7188-472a-bec5-e73fc949b014",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2093f45a-daa3-4241-a5b8-d2832f43a13a",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Client data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ddee19f6-be59-4555-aafe-029f28442708",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Client.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0dd8ddd5-c73f-4cd2-a2f5-403162e542c4",
      "documentation": "Description: This operation retrieves all Critical Illness Insurance Policies for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Critical Illness Insurance Policies including description and policy type.",
      "method": "get",
      "endpoint": "api/CriticalIllnessInsurancePolicies",
      "responses": [
        {
          "uuid": "8e94231a-6314-484a-a14a-40433f65a4a2",
          "body": "{\n  \"criticalIllnessInsurancePolicies\": [\n    {\n      \"benefit\": {{faker 'random.float'}},\n      \"description\": \"\",\n      \"externalDestinationId\": \"\",\n      \"factFinderId\": {{faker 'random.number'}},\n      \"frequency\": {{faker 'random.number'}},\n      \"insurancePolicyId\": {{faker 'random.number'}},\n      \"insured\": \"{{oneOf (array 'Client' 'CoClient')}}\",\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"policyType\": {{faker 'random.number'}},\n      \"premium\": {{faker 'random.float'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a1f71f30-1264-425e-b89e-c624e94b7c72",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "58ca895c-be55-437c-809c-38c6efdf982a",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Critical Illness Insurance Policy data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "453d4657-74d9-4d8b-9be4-0c886b35c590",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Critical Illness Insurance Policy.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "95a8a921-b014-47b3-a24f-cc9690651ce0",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Critical Illness Insurance Policy not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1c903f35-3618-4a62-8562-0ebbb863132d",
      "documentation": "Description: The operation creates a Critical Illness Insurance Policy.<br />\r\n              Purpose: Allows for creation of Critical Illness Insurance Policies on a Fact Finder.",
      "method": "post",
      "endpoint": "api/CriticalIllnessInsurancePolicies",
      "responses": [
        {
          "uuid": "cd9d734e-6716-4062-b7a6-63640e0f295a",
          "body": "{\n  \"benefit\": {{faker 'random.float'}},\n  \"description\": \"\",\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"frequency\": {{faker 'random.number'}},\n  \"insurancePolicyId\": {{faker 'random.number'}},\n  \"insured\": \"{{oneOf (array 'Client' 'CoClient')}}\",\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"policyType\": {{faker 'random.number'}},\n  \"premium\": {{faker 'random.float'}}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f67e4b18-7cc5-4c84-9138-80eb73931db9",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0336463b-69ad-44a3-9d93-7420e6fc33cc",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Critical Illness Insurance Policy data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2e6629c3-f224-461b-99e7-6bda2d6e6d00",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Critical Illness Insurance Policy.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a7750141-f40c-49d8-b1d9-ede950fa903c",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Critical Illness Insurance Policy not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a8a72503-fa5a-460f-a3b9-b839122d162d",
      "documentation": "Description: The operation removes a Critical Illness Insurance Policy tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal of a Critical Illness Insurance Policy from a Fact Finder.",
      "method": "delete",
      "endpoint": "api/CriticalIllnessInsurancePolicies/:id",
      "responses": [
        {
          "uuid": "89d17c19-7ef3-46ea-957d-bba27958f8c3",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f1e312cb-1286-4e2b-8970-022f41ad959b",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "16731130-6d2e-44c5-b5cd-f5776ffaa7a5",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Critical Illness Insurance Policy data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "08759835-f34b-4968-bf03-6ce627c54101",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Critical Illness Insurance Policy.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6d0a4714-25bd-4856-926c-12db5bb40a24",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Critical Illness Insurance Policy not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6f0bc648-78c4-4aa8-a526-c683d1b6ea7a",
      "documentation": "Description: This operation retrieves a single Critical Illness Insurance Policy for the specified Critical Illness Insurance Policy ID.<br />\r\n              Purpose: Provides access to the Critical Illness Insurance Policy including description and policy type.",
      "method": "get",
      "endpoint": "api/CriticalIllnessInsurancePolicies/:id",
      "responses": [
        {
          "uuid": "21adc2d9-ffcc-40e2-8df3-d0e8f1a38b10",
          "body": "{\n  \"benefit\": {{faker 'random.float'}},\n  \"description\": \"\",\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"frequency\": {{faker 'random.number'}},\n  \"insurancePolicyId\": {{faker 'random.number'}},\n  \"insured\": \"{{oneOf (array 'Client' 'CoClient')}}\",\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"policyType\": {{faker 'random.number'}},\n  \"premium\": {{faker 'random.float'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b81d3882-2307-4d94-a300-63f33057f8b7",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d1d655a5-0e0c-4cee-8bf4-1d20ac40bb93",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Critical Illness Insurance Policy data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fd47b8a6-cf38-4a71-96b7-ac3626e3cf31",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Critical Illness Insurance Policy.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e38757b7-64ce-44f2-8f13-966ecf005dd9",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Critical Illness Insurance Policy not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "75db177d-b010-4523-9603-c770950299ef",
      "documentation": "Description: The operation updates a Critical Illness Insurance Policy.<br />\r\n              Purpose: Allows for complete replacement of a Critical Illness Insurance Policy on a Fact Finder.",
      "method": "put",
      "endpoint": "api/CriticalIllnessInsurancePolicies/:id",
      "responses": [
        {
          "uuid": "aaa40e65-a37d-4610-82f1-9eda276ddf85",
          "body": "{\n  \"benefit\": {{faker 'random.float'}},\n  \"description\": \"\",\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"frequency\": {{faker 'random.number'}},\n  \"insurancePolicyId\": {{faker 'random.number'}},\n  \"insured\": \"{{oneOf (array 'Client' 'CoClient')}}\",\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"policyType\": {{faker 'random.number'}},\n  \"premium\": {{faker 'random.float'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c82ab452-01cd-4742-935c-d39fe7f303d3",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d0510d25-8923-4e1c-a5a5-78dc2cae37fd",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Critical Illness Insurance Policy data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d20bf321-6933-4171-8a82-199d597405ce",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Critical Illness Insurance Policy.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a10d0717-c080-4a5c-9e38-f5e74e801b97",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Critical Illness Insurance Policy not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "721bcf25-d81e-441d-99bd-f31a611737a7",
      "documentation": "Description: This operation retrieves all Critical Illness Insurance Policy Types for the specified country.<br />\r\n              Purpose: Provides access to the Critical Illness Insurance Policy Types including id and type description.",
      "method": "get",
      "endpoint": "api/CriticalIllnessInsurancePolicyTypes",
      "responses": [
        {
          "uuid": "55397721-89ea-492c-9bc3-bd572224d3ce",
          "body": "{\n  \"insurancePolicyTypes\": [\n    {\n      \"id\": {{faker 'random.number'}},\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"name\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7d3e121a-331c-4a47-9c97-5f79e6863754",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "43f2ad67-e060-4778-9997-d5aa3bd7f136",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Critical Illness Insurance Policy Type not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bc289ad6-8078-4bce-9339-e1791ca77a66",
      "documentation": "Description: This operation retrieves the Critical Illness Insurance Policy Type for the specified id.<br />\r\n              Purpose: Provides access to the Critical Illness Insurance Policy Types including id and type description.",
      "method": "get",
      "endpoint": "api/CriticalIllnessInsurancePolicyTypes/:id",
      "responses": [
        {
          "uuid": "d98ca91f-72c5-449b-ac4d-ce128fd6b200",
          "body": "{\n  \"id\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b855b6de-f0df-446a-bc01-086bb5a4ece6",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5f3dc28f-a15b-420f-ba15-c25e4a69006f",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Critical Illness Insurance Policy Type not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "202d69d3-7cab-4e02-b3f2-bc527369aa4a",
      "documentation": "Description: This operation retrieves all Defined Benefit Pensions for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Defined Benefit Pensions including description and start date.",
      "method": "get",
      "endpoint": "api/DefinedBenefitPensions",
      "responses": [
        {
          "uuid": "607b51c3-623a-47c0-a658-0e693377d15c",
          "body": "{\n  \"definedBenefitPensions\": [\n    {\n      \"definedBenefitPensionId\": {{faker 'random.number'}},\n      \"description\": \"\",\n      \"estimatedAmount\": {{faker 'random.float'}},\n      \"externalDestinationId\": \"\",\n      \"factFinderId\": {{faker 'random.number'}},\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"member\": \"{{oneOf (array 'Client' 'CoClient')}}\",\n      \"startDate\": \"{{faker 'date.recent' 365}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8c29868d-509a-49f2-a114-e522cf1528a2",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "742ca84d-ba7e-49c6-8cb5-c4f661f071e9",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Defined Benefit Pension data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b998c5f6-0d31-410c-8c4a-92ba450954e8",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Defined Benefit Pension.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9cf22bc0-6a4e-4dac-b69b-70047a2a6040",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Defined Benefit Pension not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e76045ae-c9e2-449a-b0cf-065b4f079f25",
      "documentation": "Description: The operation creates a Defined Benefit Pension.<br />\r\n              Purpose: Allows for creation of Defined Benefit Pensions on a Fact Finder.",
      "method": "post",
      "endpoint": "api/DefinedBenefitPensions",
      "responses": [
        {
          "uuid": "ba2d74d1-1eeb-4187-a07c-bed04a733585",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d739dc28-2e53-4261-a316-7e3fabd004d9",
          "body": "{\n  \"definedBenefitPensionId\": {{faker 'random.number'}},\n  \"description\": \"\",\n  \"estimatedAmount\": {{faker 'random.float'}},\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"member\": \"{{oneOf (array 'Client' 'CoClient')}}\",\n  \"startDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f2ed93fe-e555-4b30-8e73-50ad1754345c",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "19a07cc3-2740-4cf3-afad-a2f15f2d8b4b",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Defined Benefit Pension data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ac6413b5-0dbc-492d-9a4d-4aba9ec07c06",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Defined Benefit Pension.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "19c518fc-202c-429b-a41c-3052454ec15b",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Defined Benefit Pension not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f93bff96-eaa6-483d-b7d2-ba97d84eed3c",
      "documentation": "Description: The operation removes a Defined Benefit Pension tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal of a Defined Benefit Pension from a Fact Finder.",
      "method": "delete",
      "endpoint": "api/DefinedBenefitPensions/:id",
      "responses": [
        {
          "uuid": "764e093f-1553-436d-8ccd-120cea73697d",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c8c51583-3ee3-4804-ae0d-46327899cb78",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3cfc81da-eadd-462a-ae84-e2921fe45757",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2eb5707f-7994-4cd9-9a6c-73e90a409f6c",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Defined Benefit Pension data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b3400b04-29be-4be7-bd15-8afe74fd1cde",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Defined Benefit Pension.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ba753f2f-eed0-4ba7-ba41-a097f628a78b",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Defined Benefit Pension not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c808547d-b38c-47b4-9ca0-84f18e2c2a65",
      "documentation": "Description: This operation retrieves a single Defined Benefit Pension for the specified Defined Benefit Pension ID.<br />\r\n              Purpose: Provides access to the Defined Benefit Pension including description and start date.",
      "method": "get",
      "endpoint": "api/DefinedBenefitPensions/:id",
      "responses": [
        {
          "uuid": "f6fdb20d-1e06-40c5-a128-7459de25a67f",
          "body": "{\n  \"definedBenefitPensionId\": {{faker 'random.number'}},\n  \"description\": \"\",\n  \"estimatedAmount\": {{faker 'random.float'}},\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"member\": \"{{oneOf (array 'Client' 'CoClient')}}\",\n  \"startDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6be4a18a-05b2-4669-a0a2-cea56df4cb16",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "60e5158d-cb75-47cd-b652-5d0dae922f12",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Defined Benefit Pension data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "95204976-3a4a-459d-93db-8acf687e54f5",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Defined Benefit Pension.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bbb167c5-4d30-4fdb-8d33-25647014d891",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Defined Benefit Pension not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "753d4905-3cd5-47d3-85c5-5f5204225344",
      "documentation": "Description: The operation updates a Defined Benefit Pension.<br />\r\n              Purpose: Allows for complete replacement of a Defined Benefit Pension on a Fact Finder.",
      "method": "put",
      "endpoint": "api/DefinedBenefitPensions/:id",
      "responses": [
        {
          "uuid": "9cf0d27d-8ee2-49e4-a270-880bad594e4a",
          "body": "{\n  \"description\": \"\",\n  \"estimatedAmount\": {{faker 'random.float'}},\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"member\": \"{{oneOf (array 'Client' 'CoClient')}}\",\n  \"startDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e70b6b7b-acfc-465c-800e-57e8f86697ba",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a78452e5-9acc-489c-b4b8-4e8199cb09ef",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Defined Benefit Pension data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c55455f7-a18f-4875-a3cb-f5a18c707670",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Defined Benefit Pension.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a2709df4-56a0-43d9-817b-f8a8215dfa06",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Defined Benefit Pension not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9a3a09f0-29ab-416e-af44-a8c5beb08511",
      "documentation": "Description: This operation retrieves all Demographic information for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Demographic information including city and state.",
      "method": "get",
      "endpoint": "api/Demographics",
      "responses": [
        {
          "uuid": "0329158f-f467-46ec-9aed-ca8222d5fa2a",
          "body": "{\n  \"city\": \"\",\n  \"created\": \"{{faker 'date.recent' 365}}\",\n  \"demographicsId\": {{faker 'random.number'}},\n  \"externalDestinationId\": \"\",\n  \"externalSourceId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"head1\": {\n    \"alreadyRetired\": {{faker 'random.boolean'}},\n    \"birthDate\": \"{{faker 'date.recent' 365}}\",\n    \"externalDestinationId\": \"\",\n    \"firstName\": \"\",\n    \"gender\": \"{{oneOf (array 'Male' 'Female' 'None')}}\",\n    \"lastName\": \"\",\n    \"taxFilingStatus\": {{faker 'random.number'}}\n  },\n  \"head2\": {\n    \"alreadyRetired\": {{faker 'random.boolean'}},\n    \"birthDate\": \"{{faker 'date.recent' 365}}\",\n    \"externalDestinationId\": \"\",\n    \"firstName\": \"\",\n    \"gender\": \"{{oneOf (array 'Male' 'Female' 'None')}}\",\n    \"lastName\": \"\",\n    \"taxFilingStatus\": {{faker 'random.number'}}\n  },\n  \"jointAnalysis\": {{faker 'random.boolean'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"lockRetirement\": {{faker 'random.boolean'}},\n  \"state\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "043a9dd1-bc01-46d7-811d-75dac484bb2b",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1615fef5-5587-4bd7-89da-11ffa34a67dd",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Demographic information data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "35458951-c7d5-4ea5-90cd-ae570b2eec22",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Demographic information.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c386044b-bfd1-447f-9d78-2f60e6f9d57e",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Demographic information not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bef33b2e-189a-4ea3-86c1-0054a7864dda",
      "documentation": "Description: The operation creates Demographic information.<br />\r\n              Purpose: Allows for creation of Demographic information on a Fact Finder.",
      "method": "post",
      "endpoint": "api/Demographics",
      "responses": [
        {
          "uuid": "177db1f2-de84-40e8-b92c-942273f96400",
          "body": "{\n  \"city\": \"\",\n  \"created\": \"{{faker 'date.recent' 365}}\",\n  \"demographicsId\": {{faker 'random.number'}},\n  \"externalDestinationId\": \"\",\n  \"externalSourceId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"head1\": {\n    \"alreadyRetired\": {{faker 'random.boolean'}},\n    \"birthDate\": \"{{faker 'date.recent' 365}}\",\n    \"externalDestinationId\": \"\",\n    \"firstName\": \"\",\n    \"gender\": \"{{oneOf (array 'Male' 'Female' 'None')}}\",\n    \"lastName\": \"\",\n    \"taxFilingStatus\": {{faker 'random.number'}}\n  },\n  \"head2\": {\n    \"alreadyRetired\": {{faker 'random.boolean'}},\n    \"birthDate\": \"{{faker 'date.recent' 365}}\",\n    \"externalDestinationId\": \"\",\n    \"firstName\": \"\",\n    \"gender\": \"{{oneOf (array 'Male' 'Female' 'None')}}\",\n    \"lastName\": \"\",\n    \"taxFilingStatus\": {{faker 'random.number'}}\n  },\n  \"jointAnalysis\": {{faker 'random.boolean'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"lockRetirement\": {{faker 'random.boolean'}},\n  \"state\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7691c009-bfe5-4eba-b335-2492e98cbf21",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f4279291-593a-415e-892a-6206b75993a8",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Demographic information data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c6595434-f686-42c0-aeb2-25db10075217",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Demographic information.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6ee1d899-cd3e-44eb-b0db-13ec4f488f48",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Demographic information not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4278fd8e-5714-4be9-92d6-3054aeaed66c",
      "documentation": "Description: This operation retrieves all Dependents for the specified Demographic information ID.<br />\r\n              Purpose: Provides access to the Dependents including first and last name.",
      "method": "get",
      "endpoint": "api/Demographics/:demographicId/Dependents",
      "responses": [
        {
          "uuid": "f5add9fc-9069-4945-aa94-d3c993b98bbd",
          "body": "{\n  \"dependents\": [\n    {\n      \"birthDate\": \"{{faker 'date.recent' 365}}\",\n      \"demographicsId\": {{faker 'random.number'}},\n      \"dependentId\": {{faker 'random.number'}},\n      \"dependentOf\": \"{{oneOf (array 'Client' 'CoClient' 'Joint' 'Other')}}\",\n      \"externalDestinationId\": \"\",\n      \"firstName\": \"\",\n      \"lastName\": \"\",\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"relationship\": \"{{oneOf (array 'Son' 'Daughter' 'FosterSon' 'FosterDaughter' 'Grandson' 'Granddaughter' 'Nephew' 'Niece' 'MaleCousin' 'FemaleCousin' 'Father' 'Mother' 'Grandfather' 'Grandmother' 'Uncle' 'Aunt' 'Brother' 'Sister' 'SonInLaw' 'DaughterInLaw' 'MaleOther' 'FemaleOther')}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e5f2b8a2-d068-418b-9386-edf8c9e9f929",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c9371a36-8904-4882-bbc3-483ed584551f",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Demographic information data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9914df88-92d0-4fcd-ab88-ae2efecb2a70",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Demographic information.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b9717cbd-8422-4f02-982e-790cd0ee5345",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Demographic information not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7a5fbfa0-52d1-4e5b-94c6-fdffe0a522c8",
      "documentation": "Description: The operation creates a Dependent.<br />\r\n              Purpose: Allows for creation of Dependents on a Fact Finder.",
      "method": "post",
      "endpoint": "api/Demographics/:demographicId/Dependents",
      "responses": [
        {
          "uuid": "da1b9ad7-3021-41df-8b45-d9c1e2a46a9d",
          "body": "{\n  \"birthDate\": \"{{faker 'date.recent' 365}}\",\n  \"demographicsId\": {{faker 'random.number'}},\n  \"dependentId\": {{faker 'random.number'}},\n  \"dependentOf\": \"{{oneOf (array 'Client' 'CoClient' 'Joint' 'Other')}}\",\n  \"externalDestinationId\": \"\",\n  \"firstName\": \"\",\n  \"lastName\": \"\",\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"relationship\": \"{{oneOf (array 'Son' 'Daughter' 'FosterSon' 'FosterDaughter' 'Grandson' 'Granddaughter' 'Nephew' 'Niece' 'MaleCousin' 'FemaleCousin' 'Father' 'Mother' 'Grandfather' 'Grandmother' 'Uncle' 'Aunt' 'Brother' 'Sister' 'SonInLaw' 'DaughterInLaw' 'MaleOther' 'FemaleOther')}}\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "72d5da61-95d7-463f-b3c9-6d8345c75ea6",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "14be7357-ac52-4682-9b6f-8bcb0d616f80",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Dependent information data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1f362a29-f75a-4ecf-a5fc-6024c53a733f",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Dependent information.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3da4cb46-70af-4a2d-8c2b-6c748ed55cf0",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Dependent information not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ed0cc8b3-5579-42cf-aaef-5da0704116cb",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "The request cannot be completed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "07e7e802-7767-451d-81ba-54e569ae32b5",
      "documentation": "Description: The operation removes a Dependent tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal of a Dependent from a Fact Finder.",
      "method": "delete",
      "endpoint": "api/Demographics/:demographicId/Dependents/:id",
      "responses": [
        {
          "uuid": "e46a521a-37c5-4b07-a75d-a5c7d56883a2",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4ef2f8cf-c827-4187-8445-2a236ab4cbe8",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "56488a77-ffac-4e23-bf8d-cba242f72696",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Dependent information data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "83957bb4-4103-437b-8768-389e716e0840",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Dependent information.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "21fa16b5-6882-44ed-b319-b8dba98bbf05",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Dependent information not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "95abf97f-8987-4c27-a0ca-a13a4516e90f",
      "documentation": "Description: This operation retrieves a single Dependent for the specified Dependent ID.<br />\r\n              Purpose: Provides access to the Dependent including first and last name.",
      "method": "get",
      "endpoint": "api/Demographics/:demographicId/Dependents/:id",
      "responses": [
        {
          "uuid": "eef3867f-c578-4c0f-a82c-3cba55aed957",
          "body": "{\n  \"birthDate\": \"{{faker 'date.recent' 365}}\",\n  \"demographicsId\": {{faker 'random.number'}},\n  \"dependentId\": {{faker 'random.number'}},\n  \"dependentOf\": \"{{oneOf (array 'Client' 'CoClient' 'Joint' 'Other')}}\",\n  \"externalDestinationId\": \"\",\n  \"firstName\": \"\",\n  \"lastName\": \"\",\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"relationship\": \"{{oneOf (array 'Son' 'Daughter' 'FosterSon' 'FosterDaughter' 'Grandson' 'Granddaughter' 'Nephew' 'Niece' 'MaleCousin' 'FemaleCousin' 'Father' 'Mother' 'Grandfather' 'Grandmother' 'Uncle' 'Aunt' 'Brother' 'Sister' 'SonInLaw' 'DaughterInLaw' 'MaleOther' 'FemaleOther')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "24b414aa-0c7d-4729-bf15-8e1b107e66d1",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5eb819ba-41a6-4f75-9777-577223dad791",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Demographic information data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "23fba5c4-263d-4ae1-8f28-83f0032a020f",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Demographic information.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f0e166f5-a766-4656-9b02-f514b4cd4f34",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Demographic information not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f488dd25-d456-4116-85a9-3074469e55c9",
      "documentation": "Description: The operation updates a Dependent.<br />\r\n              Purpose: Allows for complete replacement of a Dependent on a Fact Finder.",
      "method": "put",
      "endpoint": "api/Demographics/:demographicId/Dependents/:id",
      "responses": [
        {
          "uuid": "e22f1f48-fb18-4085-8af9-0a6c978f2362",
          "body": "{\n  \"birthDate\": \"{{faker 'date.recent' 365}}\",\n  \"demographicsId\": {{faker 'random.number'}},\n  \"dependentId\": {{faker 'random.number'}},\n  \"dependentOf\": \"{{oneOf (array 'Client' 'CoClient' 'Joint' 'Other')}}\",\n  \"externalDestinationId\": \"\",\n  \"firstName\": \"\",\n  \"lastName\": \"\",\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"relationship\": \"{{oneOf (array 'Son' 'Daughter' 'FosterSon' 'FosterDaughter' 'Grandson' 'Granddaughter' 'Nephew' 'Niece' 'MaleCousin' 'FemaleCousin' 'Father' 'Mother' 'Grandfather' 'Grandmother' 'Uncle' 'Aunt' 'Brother' 'Sister' 'SonInLaw' 'DaughterInLaw' 'MaleOther' 'FemaleOther')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "242c4da8-7e75-4248-9a5f-d732ed70dd6a",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aab58600-399c-4b58-a871-e53087a772b1",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Dependent information data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e906df6e-91d2-4257-8647-ea0a2366cce5",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Dependent information.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "05487aad-c129-4017-83eb-abadf19e806e",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Dependent information not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0c088b8e-cc3d-401e-a6f3-185b84eb4925",
      "documentation": "Description: This operation retrieves Demographic information for the specified Demographic information ID.<br />\r\n              Purpose: Provides access to the Demographic information including city and state.",
      "method": "get",
      "endpoint": "api/Demographics/:id",
      "responses": [
        {
          "uuid": "f63f0740-f94a-45b8-ae22-10c9c6c87588",
          "body": "{\n  \"city\": \"\",\n  \"created\": \"{{faker 'date.recent' 365}}\",\n  \"demographicsId\": {{faker 'random.number'}},\n  \"externalDestinationId\": \"\",\n  \"externalSourceId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"head1\": {\n    \"alreadyRetired\": {{faker 'random.boolean'}},\n    \"birthDate\": \"{{faker 'date.recent' 365}}\",\n    \"externalDestinationId\": \"\",\n    \"firstName\": \"\",\n    \"gender\": \"{{oneOf (array 'Male' 'Female' 'None')}}\",\n    \"lastName\": \"\",\n    \"taxFilingStatus\": {{faker 'random.number'}}\n  },\n  \"head2\": {\n    \"alreadyRetired\": {{faker 'random.boolean'}},\n    \"birthDate\": \"{{faker 'date.recent' 365}}\",\n    \"externalDestinationId\": \"\",\n    \"firstName\": \"\",\n    \"gender\": \"{{oneOf (array 'Male' 'Female' 'None')}}\",\n    \"lastName\": \"\",\n    \"taxFilingStatus\": {{faker 'random.number'}}\n  },\n  \"jointAnalysis\": {{faker 'random.boolean'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"lockRetirement\": {{faker 'random.boolean'}},\n  \"state\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "db80341e-223d-4ded-9462-8cf20f1deb30",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0c2ef842-fea6-4836-8a01-08f32cac289b",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Demographic information data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8c2c6d49-dc9d-4336-9f8f-46355bcc79bd",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Demographic information.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "17ddc919-2b4b-4232-918e-f0c8e9e13ebf",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Demographic information not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dc43bce7-149a-4711-a4fd-87057e2a5999",
      "documentation": "Description: The operation updates Demographic information.<br />\r\n              Purpose: Allows for complete replacement of Demographic information on a Fact Finder.",
      "method": "put",
      "endpoint": "api/Demographics/:id",
      "responses": [
        {
          "uuid": "03a0ac14-ea1b-4d0a-8da7-0cf4303a1f32",
          "body": "{\n  \"city\": \"\",\n  \"created\": \"{{faker 'date.recent' 365}}\",\n  \"demographicsId\": {{faker 'random.number'}},\n  \"externalDestinationId\": \"\",\n  \"externalSourceId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"head1\": {\n    \"alreadyRetired\": {{faker 'random.boolean'}},\n    \"birthDate\": \"{{faker 'date.recent' 365}}\",\n    \"externalDestinationId\": \"\",\n    \"firstName\": \"\",\n    \"gender\": \"{{oneOf (array 'Male' 'Female' 'None')}}\",\n    \"lastName\": \"\",\n    \"taxFilingStatus\": {{faker 'random.number'}}\n  },\n  \"head2\": {\n    \"alreadyRetired\": {{faker 'random.boolean'}},\n    \"birthDate\": \"{{faker 'date.recent' 365}}\",\n    \"externalDestinationId\": \"\",\n    \"firstName\": \"\",\n    \"gender\": \"{{oneOf (array 'Male' 'Female' 'None')}}\",\n    \"lastName\": \"\",\n    \"taxFilingStatus\": {{faker 'random.number'}}\n  },\n  \"jointAnalysis\": {{faker 'random.boolean'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"lockRetirement\": {{faker 'random.boolean'}},\n  \"state\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "082e3f35-00cd-4bc4-8946-f911d25d3489",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0c15c5eb-981d-4992-8c62-8b22e3d9d134",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Demographic information data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fbedcc70-d7b3-477a-8400-9623470f2217",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Demographic information.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "79e3608a-9507-46cd-af57-f203c2004195",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Demographic information not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b5e167cb-f3a9-4d0c-ae8d-1f8bc4bd5444",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "The request cannot be completed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1c364609-bc4f-454a-8410-b9ae2701db9e",
      "documentation": "Description: This operation retrieves all Disability Insurance Policies for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Disability Insurance Policies including description and policy type.",
      "method": "get",
      "endpoint": "api/DisabilityInsurancePolicies",
      "responses": [
        {
          "uuid": "84fc266d-b998-47bd-8d78-1b6d977fa944",
          "body": "{\n  \"disabilityInsurancePolicies\": [\n    {\n      \"benefit\": {{faker 'random.float'}},\n      \"benefitFrequency\": {{faker 'random.number'}},\n      \"benefitType\": \"{{oneOf (array 'Dollar' 'Percent')}}\",\n      \"description\": \"\",\n      \"externalDestinationId\": \"\",\n      \"factFinderId\": {{faker 'random.number'}},\n      \"insurancePolicyId\": {{faker 'random.number'}},\n      \"insured\": \"{{oneOf (array 'Client' 'CoClient')}}\",\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"policyType\": {{faker 'random.number'}},\n      \"premium\": {{faker 'random.float'}},\n      \"premiumFrequency\": {{faker 'random.number'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e2b59be8-33fe-4cc5-9aa4-9eec536c7e1e",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e50b8f67-94bd-4202-8956-9ad01e83a225",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Disability Insurance Policy data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6e3919d5-d488-4fca-926a-d8009203cb59",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Disability Insurance Policy.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1fa974fb-7be2-4ec1-98f7-21fa5ab4bc68",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Disability Insurance Policy not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3188935e-27f0-416f-9fe5-9644dd67148b",
      "documentation": "Description: The operation creates a Disability Insurance Policy.<br />\r\n              Purpose: Allows for creation of Disability Insurance Policies on a Fact Finder.",
      "method": "post",
      "endpoint": "api/DisabilityInsurancePolicies",
      "responses": [
        {
          "uuid": "417c5d24-3557-4643-a77a-95a1e4943263",
          "body": "{\n  \"benefit\": {{faker 'random.float'}},\n  \"benefitFrequency\": {{faker 'random.number'}},\n  \"benefitType\": \"{{oneOf (array 'Dollar' 'Percent')}}\",\n  \"description\": \"\",\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"insurancePolicyId\": {{faker 'random.number'}},\n  \"insured\": \"{{oneOf (array 'Client' 'CoClient')}}\",\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"policyType\": {{faker 'random.number'}},\n  \"premium\": {{faker 'random.float'}},\n  \"premiumFrequency\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "626ddb28-76d6-4133-b144-bcc6e9c01674",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5ea62865-ce2d-414a-b3fb-8a42a6522af6",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Disability Insurance Policy data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "74619ff8-6732-4f0b-8d44-30afffa3a00e",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Disability Insurance Policy.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7cf6c6ae-7e10-4660-8f56-77916ec12e61",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Disability Insurance Policy not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "13309603-f575-4351-b74f-e551be4a337d",
      "documentation": "Description: The operation removes a Disability Insurance Policy tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal of a Disability Insurance Policy from a Fact Finder.",
      "method": "delete",
      "endpoint": "api/DisabilityInsurancePolicies/:id",
      "responses": [
        {
          "uuid": "6f753669-9524-487c-82a3-2a758ff5c7a1",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cdb3c6aa-c185-4c59-a6d3-f75848e0523f",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2cb275c3-f99f-4f6e-aca3-686d2de2f157",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Disability Insurance Policy data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d8718b42-849f-43f8-aa6d-a3c9572fcf00",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Disability Insurance Policy.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "64d16e37-7626-4782-9c83-0945f02a7efb",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Disability Insurance Policy not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c7b5fdd4-6f43-4926-93a4-161150563200",
      "documentation": "Description: This operation retrieves a single Disability Insurance Policy for the specified Disability Insurance Policy ID.<br />\r\n              Purpose: Provides access to the Disability Insurance Policy including description and policy type.",
      "method": "get",
      "endpoint": "api/DisabilityInsurancePolicies/:id",
      "responses": [
        {
          "uuid": "a01f7739-7f0e-43cf-88a5-704000419687",
          "body": "{\n  \"benefit\": {{faker 'random.float'}},\n  \"benefitFrequency\": {{faker 'random.number'}},\n  \"benefitType\": \"{{oneOf (array 'Dollar' 'Percent')}}\",\n  \"description\": \"\",\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"insurancePolicyId\": {{faker 'random.number'}},\n  \"insured\": \"{{oneOf (array 'Client' 'CoClient')}}\",\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"policyType\": {{faker 'random.number'}},\n  \"premium\": {{faker 'random.float'}},\n  \"premiumFrequency\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f81896a6-6c06-4463-b5b8-dc30ddfc9904",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a83955e8-ad61-4932-a62f-ea1facbd665b",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Disability Insurance Policy data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ecc7555a-e7c1-45aa-9cc2-acbeb905f1d8",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Disability Insurance Policy.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "36bc75ff-e352-42aa-bde6-fc09390a479c",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Disability Insurance Policy not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1e8ab6ca-d65a-4f4d-86b0-454249857ed2",
      "documentation": "Description: The operation updates a Disability Insurance Policy.<br />\r\n              Purpose: Allows for complete replacement of a Disability Insurance Policy on a Fact Finder.",
      "method": "put",
      "endpoint": "api/DisabilityInsurancePolicies/:id",
      "responses": [
        {
          "uuid": "5820c70f-f2b5-478b-b764-60711514c012",
          "body": "{\n  \"benefit\": {{faker 'random.float'}},\n  \"benefitFrequency\": {{faker 'random.number'}},\n  \"benefitType\": \"{{oneOf (array 'Dollar' 'Percent')}}\",\n  \"description\": \"\",\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"insurancePolicyId\": {{faker 'random.number'}},\n  \"insured\": \"{{oneOf (array 'Client' 'CoClient')}}\",\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"policyType\": {{faker 'random.number'}},\n  \"premium\": {{faker 'random.float'}},\n  \"premiumFrequency\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "15820b45-6f2c-4b12-b314-e4e2f9ffb496",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ada04460-9db7-4499-a5bd-42b2707c9dda",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Disability Insurance Policy data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d0931b36-6377-4ca1-a461-6cbfbafc8ad3",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Disability Insurance Policy.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0f7afaa3-a774-49d7-9bb9-7c17a5bb82be",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Disability Insurance Policy not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "868e5353-32b3-4f43-8ac3-45d7636e1bd1",
      "documentation": "Description: This operation retrieves all Disability Insurance Policy Types for the specified country.<br />\r\n              Purpose: Provides access to the Disability Insurance Policy Types including id and type description.",
      "method": "get",
      "endpoint": "api/DisabilityInsurancePolicyTypes",
      "responses": [
        {
          "uuid": "7dbce603-8da1-49e9-8b43-b44dba27ebcb",
          "body": "{\n  \"insurancePolicyTypes\": [\n    {\n      \"id\": {{faker 'random.number'}},\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"name\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3147b361-7763-442b-9104-76b36ce2e582",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eed284ea-36b4-408a-bc2b-ed262f097a1c",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Disability Insurance Policy Type not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4c7568f0-3b87-4898-a43c-3ed8bfdd0a91",
      "documentation": "Description: This operation retrieves all Disability Insurance Policy Types for the specified id.<br />\r\n              Purpose: Provides access to the Disability Insurance Policy Types including id and type description.",
      "method": "get",
      "endpoint": "api/DisabilityInsurancePolicyTypes/:id",
      "responses": [
        {
          "uuid": "2b042d6d-7397-403c-a52c-3e3919c22519",
          "body": "{\n  \"id\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c565f9be-fc2f-4c9b-beed-cda6ab2837bf",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a75134b6-c9e9-4b2e-b5be-8f2036e3a82c",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Disability Insurance Policy Type not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "17095577-ed2a-47f1-9b4d-ac20d8a5a420",
      "documentation": "Description: This operation retrieves all Education Goals for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Education Goals including description and projected cost.",
      "method": "get",
      "endpoint": "api/EducationGoals",
      "responses": [
        {
          "uuid": "706b79d6-c6f9-48fd-92b2-26af811ca44d",
          "body": "{\n  \"educationGoals\": [\n    {\n      \"description\": \"\",\n      \"educationGoalId\": {{faker 'random.number'}},\n      \"externalDestinationId\": \"\",\n      \"factFinderId\": {{faker 'random.number'}},\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"projectedCost\": {{faker 'random.float'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0890fbd6-9280-4ade-a038-184d2a30b5e9",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3b587f3d-1ce2-41be-a73b-fcba9a4d1639",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Education Goal data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9e3b8d50-d1f4-4d2a-a51a-54c0b133b969",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Education Goal.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6e10c552-7e8f-4942-b983-f247e11906f9",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Education Goal not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "02e5b5cb-27c5-46a5-8548-33a17faa46c4",
      "documentation": "Description: The operation creates an Education Goal.<br />\r\n              Purpose: Allows for creation of Education Goals on a Fact Finder.",
      "method": "post",
      "endpoint": "api/EducationGoals",
      "responses": [
        {
          "uuid": "2357dc73-5148-4ac9-9d94-bc1fce9a81fa",
          "body": "{\n  \"description\": \"\",\n  \"educationGoalId\": {{faker 'random.number'}},\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"projectedCost\": {{faker 'random.float'}}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cf2f6adc-082b-4008-9a84-bcf72de572f8",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c71ed8b5-0977-49cb-8d5b-ad6f30acaaee",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Education Goal data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6ebfc60e-8df1-4f03-a813-698a27edf1c2",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Education Goal.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "030ce5bf-a938-4e15-ac05-be75a9c02448",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Education Goal not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "461d47ea-0266-426d-95a0-6d43fae7059b",
      "documentation": "Description: This operation retrieves all Education Goal Expenses for the specified Education Goal ID.<br />\r\n              Purpose: Provides access to the Education Goal Expenses including description and annual cost.",
      "method": "get",
      "endpoint": "api/EducationGoals/:educationGoalId/Expenses",
      "responses": [
        {
          "uuid": "5c6a47d6-442d-43e4-8758-547b996c896f",
          "body": "{\n  \"educationExpenses\": [\n    {\n      \"annualCost\": {{faker 'random.float'}},\n      \"educationExpenseId\": {{faker 'random.number'}},\n      \"educationGoalId\": {{faker 'random.number'}},\n      \"externalDestinationId\": \"\",\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"member\": \"{{oneOf (array 'Client' 'CoClient' 'Dependent')}}\",\n      \"memberDependentId\": {{faker 'random.number'}},\n      \"startYear\": \"{{faker 'date.recent' 365}}\",\n      \"years\": {{faker 'random.number'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "73c350f8-cf42-4daa-84f8-331d464097c6",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e5946c68-685e-493d-87ff-74d5296d4200",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Education Goal Expense data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bfad6a8f-fca5-45ad-9323-bd2b5b6b95f1",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Education Goal Expense.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "808a4ee7-c3d1-4da2-997c-2fedf7bf24f9",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Education Goal Expense not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8dcd1081-e48a-4bf3-8721-be811d753ea2",
      "documentation": "Description: The operation creates an Education Goal Expense.<br />\r\n              Purpose: Allows for creation of Education Goal Expenses on a Fact Finder.",
      "method": "post",
      "endpoint": "api/EducationGoals/:educationGoalId/Expenses",
      "responses": [
        {
          "uuid": "e829d3f6-9d96-4698-9c1b-ad151796d103",
          "body": "{\n  \"annualCost\": {{faker 'random.float'}},\n  \"educationExpenseId\": {{faker 'random.number'}},\n  \"educationGoalId\": {{faker 'random.number'}},\n  \"externalDestinationId\": \"\",\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"member\": \"{{oneOf (array 'Client' 'CoClient' 'Dependent')}}\",\n  \"memberDependentId\": {{faker 'random.number'}},\n  \"startYear\": \"{{faker 'date.recent' 365}}\",\n  \"years\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "46f066d4-93f1-4cbe-a235-939877db5d22",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a8d021e0-a9df-4c93-94f9-982cb7553ba0",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Education Goal Expense data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eb45c817-c5f4-4104-a308-8f98fc762526",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Education Goal Expense.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "75189972-71e8-4770-82a3-b6d370226a4a",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Education Goal Expense not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8e866d82-9473-43d4-b71d-d5e7f4236441",
      "documentation": "Description: The operation removes an Education Goal Expense tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal of an Education Goal Expense from a Fact Finder.",
      "method": "delete",
      "endpoint": "api/EducationGoals/:educationGoalId/Expenses/:id",
      "responses": [
        {
          "uuid": "56bc0763-05be-4e0d-928c-fc9dc1bc992b",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "20a6c608-861a-408d-81a7-c7d5d3cd9ac3",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c9e8b142-a058-4fa8-9ea7-e9070483a1c4",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Education Goal Expense data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e8962a3e-25a4-4773-b468-434470925609",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Education Goal Expense.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0d425a34-c4a2-4c7e-a6ba-ed3071a862fc",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Education Goal Expense not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e42ede40-7f78-4866-b094-e6fa0b78869f",
      "documentation": "Description: This operation retrieves a single Education Goal Expense for the specified Education Goal Expense ID.<br />\r\n              Purpose: Provides access to the Education Goal Expense including description and annual cost.",
      "method": "get",
      "endpoint": "api/EducationGoals/:educationGoalId/Expenses/:id",
      "responses": [
        {
          "uuid": "6a712b87-36b5-4fa7-a301-b2e602f8c02e",
          "body": "{\n  \"annualCost\": {{faker 'random.float'}},\n  \"educationExpenseId\": {{faker 'random.number'}},\n  \"educationGoalId\": {{faker 'random.number'}},\n  \"externalDestinationId\": \"\",\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"member\": \"{{oneOf (array 'Client' 'CoClient' 'Dependent')}}\",\n  \"memberDependentId\": {{faker 'random.number'}},\n  \"startYear\": \"{{faker 'date.recent' 365}}\",\n  \"years\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ebaf26fe-a8e0-4859-94d3-4c369bd7d7ea",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "93455d7c-ae8a-4ae3-95a8-c2572ed42f35",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Education Goal Expense data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6f8386f0-50aa-4d37-b6d7-35906f04b08f",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Education Goal Expense.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ac555f4a-d754-4225-b5dd-8d6668836242",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Education Goal Expense not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1ceb248c-8d64-4311-9711-95c651f01d5f",
      "documentation": "Description: The operation updates an Education Goal Expense.<br />\r\n              Purpose: Allows for complete replacement of an Education Goal Expense on a Fact Finder.",
      "method": "put",
      "endpoint": "api/EducationGoals/:educationGoalId/Expenses/:id",
      "responses": [
        {
          "uuid": "b18c54d6-aeb7-4ed8-b0eb-af48f8523ab3",
          "body": "{\n  \"annualCost\": {{faker 'random.float'}},\n  \"educationExpenseId\": {{faker 'random.number'}},\n  \"educationGoalId\": {{faker 'random.number'}},\n  \"externalDestinationId\": \"\",\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"member\": \"{{oneOf (array 'Client' 'CoClient' 'Dependent')}}\",\n  \"memberDependentId\": {{faker 'random.number'}},\n  \"startYear\": \"{{faker 'date.recent' 365}}\",\n  \"years\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "75e9f480-47c5-4eb0-8326-c70f44a7771c",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c628275b-0080-4fb1-a8b3-9c9a956cdbaf",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Education Goal Expense data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5f59733b-6b2c-4023-abf4-bc623bceae7a",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Education Goal Expense.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a353edea-6d7e-4c56-9e7c-0c026d7a3df0",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Education Goal Expense not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a8a5193d-b817-4f86-9dd1-608d61c3668f",
      "documentation": "Description: The operation removes an Education Goal tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal of an Education Goal from a Fact Finder.",
      "method": "delete",
      "endpoint": "api/EducationGoals/:id",
      "responses": [
        {
          "uuid": "b2f51773-9b8f-4e9b-bc99-3b9b0a7bbc4d",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "92f1acdc-c880-4c15-bd5c-39aaa765751b",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "abfdd6e7-4800-4d5b-a1fb-bafa823e0fd2",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Education Goal data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b63f2676-60e7-4cb2-8769-b34cba30d93a",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Education Goal.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5bafc149-2ede-4dce-8e3d-f0bf0695a218",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Education Goal not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "599a212d-c66b-4093-8816-8507cb208969",
      "documentation": "Description: This operation retrieves a single Education Goal for the specified Education Goal ID.<br />\r\n              Purpose: Provides access to the Education Goal including description and projected cost.",
      "method": "get",
      "endpoint": "api/EducationGoals/:id",
      "responses": [
        {
          "uuid": "5869ecd7-487e-4cb0-9cc7-06571957cdc3",
          "body": "{\n  \"description\": \"\",\n  \"educationGoalId\": {{faker 'random.number'}},\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"projectedCost\": {{faker 'random.float'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7f9723f8-029b-4990-9d47-455f68479149",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "df3ffecb-a671-4176-91e1-3aa244dfd7dc",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Education Goal data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7eadad72-f4cf-4a86-9ca0-349e71ce5b6f",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Education Goal.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6f412bc9-3c09-47ca-a777-077ec1314095",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Education Goal not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "40db1c9b-d0c1-448a-8f74-f268e25bd839",
      "documentation": "Description: The operation creates an Education Goal Expense.<br />\r\n              Purpose: Allows for creation of Education Goal Expenses on a Fact Finder.",
      "method": "put",
      "endpoint": "api/EducationGoals/:id",
      "responses": [
        {
          "uuid": "e6027316-99e1-4842-9fad-847ee372c7f4",
          "body": "{\n  \"description\": \"\",\n  \"educationGoalId\": {{faker 'random.number'}},\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"projectedCost\": {{faker 'random.float'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9e8a8b61-698c-4d95-9842-0793ee599084",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "38b48a3e-6831-4702-be66-19b1286cd10a",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Education Goal Expense data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8e96bbf4-c44e-424d-a750-613c088eba29",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Education Goal Expense.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0af06216-5c87-4ae9-b44a-f28ca5adad26",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Education Goal Expense not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "57344750-13f2-44bc-842b-00093e46ad37",
      "documentation": "Description: This operation retrieves all Expense Types for the specified country.<br />\r\n              Purpose: Provides access to the Expense Types including id and type description.",
      "method": "get",
      "endpoint": "api/ExpenseTypes",
      "responses": [
        {
          "uuid": "072021a2-9d52-47ff-9e2e-c0c631c32f71",
          "body": "{\n  \"expenseTypes\": [\n    {\n      \"id\": {{faker 'random.number'}},\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"name\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "06b537ce-3b0a-4af9-b037-ee77892eb109",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a1d43408-e9f2-4823-9ec5-dc51d03e7ca2",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Expense Type not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b5d00115-b77e-4129-86ea-64edf1c6c6e5",
      "documentation": "Description: This operation retrieves all Expense Types for the specified country.<br />\r\n              Purpose: Provides access to the Expense Types including id and type description.",
      "method": "get",
      "endpoint": "api/ExpenseTypes/:id",
      "responses": [
        {
          "uuid": "36a976bd-0e5f-4b09-961f-c6fa621b085e",
          "body": "{\n  \"id\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b75b8dfe-6012-4774-9983-5c9c103207db",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a9c44407-1ef1-421e-b8ea-77a9bda03aaa",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Expense Type not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "82d26a12-64e9-43c3-93a4-e1b114a557ca",
      "documentation": "Description: This operation retrieves all Expenses for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Expenses including description and Expense type.",
      "method": "get",
      "endpoint": "api/Expenses",
      "responses": [
        {
          "uuid": "062147d0-9235-4475-898c-36b52f023351",
          "body": "{\n  \"expenses\": [\n    {\n      \"annualPeriod\": {{faker 'random.number'}},\n      \"description\": \"\",\n      \"endDate\": \"{{faker 'date.recent' 365}}\",\n      \"expenseAmount\": {{faker 'random.float'}},\n      \"expenseId\": {{faker 'random.number'}},\n      \"expenseTypeId\": {{faker 'random.number'}},\n      \"externalDestinationId\": \"\",\n      \"factFinderId\": {{faker 'random.number'}},\n      \"frequency\": {{faker 'random.number'}},\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"member\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n      \"startDate\": \"{{faker 'date.recent' 365}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9eb45d31-da85-4376-9c4c-b81ba6be2d9e",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8d624826-5c57-488f-aa60-569413556283",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Expense data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "65e54f3d-749f-4199-bebb-d465b259a891",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Expense.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e47d6fc0-1440-4c83-a1e5-0c7cab82d73e",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Expense not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "653424ec-8f92-48bd-bac5-876b87c38422",
      "documentation": "Description: The operation creates an Expense.<br />\r\n              Purpose: Allows for creation of Expenses on a Fact Finder.",
      "method": "post",
      "endpoint": "api/Expenses",
      "responses": [
        {
          "uuid": "543bab8c-ea7b-47e9-8f3e-391122eb1f4d",
          "body": "{\n  \"annualPeriod\": {{faker 'random.number'}},\n  \"description\": \"\",\n  \"endDate\": \"{{faker 'date.recent' 365}}\",\n  \"expenseAmount\": {{faker 'random.float'}},\n  \"expenseId\": {{faker 'random.number'}},\n  \"expenseTypeId\": {{faker 'random.number'}},\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"frequency\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"member\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n  \"startDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2236b0f3-5fd7-4fd6-983a-40397b3fe873",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2452c9fa-4cc3-4582-a922-aecc682fb9d1",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Expense data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7ed4fd4f-6c60-4705-b2e8-dc20504cfc98",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Expense.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8dbae05b-0753-4874-8745-e5a1bf234bb1",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Expense not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6a90f758-f781-4c77-b4cd-0fb46e331be9",
      "documentation": "Description: The operation removes an Expense tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal of an Expense from a Fact Finder.",
      "method": "delete",
      "endpoint": "api/Expenses/:id",
      "responses": [
        {
          "uuid": "9c61720f-2924-4c0b-8e01-597e6c2a6c6d",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "afd46d0b-2880-499e-8c50-e812d7d0f5d0",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fee843f6-7e37-4105-8b3c-4c9e8d0e497e",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Expense data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "35a13509-7968-4b3e-bb60-87b99697861e",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Expense.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ecd7dac5-c3da-4519-8abe-9a744b61ec51",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Expense not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3a8cefb2-abee-4469-96f7-b75092c7108c",
      "documentation": "Description: This operation retrieves a single Expense for the specified Expense ID.<br />\r\n              Purpose: Provides access to the Expense including description and Expense type.",
      "method": "get",
      "endpoint": "api/Expenses/:id",
      "responses": [
        {
          "uuid": "94dcef39-a205-4ac6-940d-5b3c890aa816",
          "body": "{\n  \"annualPeriod\": {{faker 'random.number'}},\n  \"description\": \"\",\n  \"endDate\": \"{{faker 'date.recent' 365}}\",\n  \"expenseAmount\": {{faker 'random.float'}},\n  \"expenseId\": {{faker 'random.number'}},\n  \"expenseTypeId\": {{faker 'random.number'}},\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"frequency\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"member\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n  \"startDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "abfdb371-02d8-4ce1-8958-8faedf09969c",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1689bb94-3526-4d35-8f56-9e3f270bc95f",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Expense data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "40f465a4-3cad-437b-9511-3e201e7569fe",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Expense.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "93371c69-06c0-4d22-af7f-7222b58dbf60",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Expense not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4935df72-7eb4-4bde-b876-7cfc396170a5",
      "documentation": "Description: The operation updates an Expense.<br />\r\n              Purpose: Allows for complete replacement of an Expense on a Fact Finder. <br /><br />\r\n              Note: Expense type cannot be changed for expenses prepopulated from NaviPlan.",
      "method": "put",
      "endpoint": "api/Expenses/:id",
      "responses": [
        {
          "uuid": "4595db88-54ee-41fb-b442-197a8c96a709",
          "body": "{\n  \"annualPeriod\": {{faker 'random.number'}},\n  \"description\": \"\",\n  \"endDate\": \"{{faker 'date.recent' 365}}\",\n  \"expenseAmount\": {{faker 'random.float'}},\n  \"expenseId\": {{faker 'random.number'}},\n  \"expenseTypeId\": {{faker 'random.number'}},\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"frequency\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"member\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n  \"startDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "92f01e94-96e7-42d8-9765-4711ef2caed7",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5ec0261e-e2de-4a28-b487-d7e51cdae922",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Expense data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f6e35737-fb17-489d-b6a8-01bf6e0697e8",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Expense.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "72fcca13-afff-42c3-9bd2-0e55e22a1fa9",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Expense not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8da0fd1f-a50e-4c3b-b075-86c52c4c2362",
      "documentation": "Description: This operation retrieves all Fact Finders for the specified householdId, \r\n              or if null, all households associated with the user.<br />\r\n              Purpose: Provides access to the Fact Finder including status.",
      "method": "get",
      "endpoint": "api/FactFinders",
      "responses": [
        {
          "uuid": "776f2d9d-94ad-468b-a2f3-0dba7d024855",
          "body": "[\n  {\n    \"countryCode\": \"{{oneOf (array 'UnitedStates' 'Canada')}}\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"factFinderId\": {{faker 'random.number'}},\n    \"householdId\": {{faker 'random.number'}},\n    \"lastStatusUpdate\": \"{{faker 'date.recent' 365}}\",\n    \"links\": [\n      {\n        \"href\": \"\",\n        \"rel\": \"\"\n      }\n    ],\n    \"modules\": {\n      \"factFinderModules\": [\n        {\n          \"available\": {{faker 'random.boolean'}},\n          \"factFinderId\": {{faker 'random.number'}},\n          \"links\": [\n            {\n              \"href\": \"\",\n              \"rel\": \"\"\n            }\n          ],\n          \"moduleId\": {{faker 'random.number'}},\n          \"moduleName\": \"{{oneOf (array 'Demographics' 'Assets' 'Liabilities' 'Incomes' 'Expenses' 'Insurance' 'Retirement' 'Education' 'MajorPurchase')}}\",\n          \"visited\": {{faker 'random.boolean'}}\n        }\n      ]\n    },\n    \"planId\": {{faker 'random.number'}},\n    \"planLevel\": \"{{oneOf (array 'Level2' 'Level1')}}\",\n    \"status\": \"{{oneOf (array 'New' 'InProgress' 'ClientSubmitted' 'AdvisorAccepted' 'Canceled' 'Draft' 'Deleted')}}\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "644f86a8-9a75-4d3b-b533-2341ced2b6bd",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d5499985-d417-4d72-b98f-14396550ece4",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Fact Finder data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3d0e0a59-72e7-4c3d-b392-3f0b4860f69c",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Fact Finder.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "130fa5da-48dc-4ebf-8984-590e7465eedd",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Fact Finder not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2a2b74c1-f64a-44e7-8646-2c8c8483844f",
      "documentation": "Description: The operation creates a completely empty draft Fact Finder.<br />\r\n              Requirements: A householdId and list of modules must be provided.<br />\r\n              Purpose: Stages a Fact Finder for population.",
      "method": "post",
      "endpoint": "api/FactFinders",
      "responses": [
        {
          "uuid": "ac983d6a-006e-4683-be6a-81819370f47c",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "81187b17-63bb-4da0-934d-72280c68c6d7",
          "body": "{\n  \"countryCode\": \"{{oneOf (array 'UnitedStates' 'Canada')}}\",\n  \"created\": \"{{faker 'date.recent' 365}}\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"householdId\": {{faker 'random.number'}},\n  \"lastStatusUpdate\": \"{{faker 'date.recent' 365}}\",\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"modules\": {\n    \"factFinderModules\": [\n      {\n        \"available\": {{faker 'random.boolean'}},\n        \"factFinderId\": {{faker 'random.number'}},\n        \"links\": [\n          {\n            \"href\": \"\",\n            \"rel\": \"\"\n          }\n        ],\n        \"moduleId\": {{faker 'random.number'}},\n        \"moduleName\": \"{{oneOf (array 'Demographics' 'Assets' 'Liabilities' 'Incomes' 'Expenses' 'Insurance' 'Retirement' 'Education' 'MajorPurchase')}}\",\n        \"visited\": {{faker 'random.boolean'}}\n      }\n    ]\n  },\n  \"planId\": {{faker 'random.number'}},\n  \"planLevel\": \"{{oneOf (array 'Level2' 'Level1')}}\",\n  \"status\": \"{{oneOf (array 'New' 'InProgress' 'ClientSubmitted' 'AdvisorAccepted' 'Canceled' 'Draft' 'Deleted')}}\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d2829aa7-fc6a-4d9d-80b8-7a55cc233194",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ccb7a0f7-d4a9-4161-ac36-b9110ef9fe78",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Fact Finder data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3d7802a9-9180-4a43-974e-bdf29b2943ab",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Fact Finder.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "36eead87-ac42-4c8e-b7b3-dc2bed8ab383",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Fact Finder not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4c1af8a0-855e-410b-9414-430e3987e723",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "The request cannot be completed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d69b8f6b-fbc0-48e3-93f4-8c2f1fa6b936",
      "documentation": "Description: The operation creates a new Populated Fact Finder.<br />\r\n              Requirements: A householdId and list of modules must be provided.<br />\r\n              Purpose: Creation of a Fact Finder.",
      "method": "post",
      "endpoint": "api/FactFinders/Populate",
      "responses": [
        {
          "uuid": "0d84595d-75ad-41fd-b996-933c230ac956",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b01e9a5b-2e79-4d0b-a138-a590186aa016",
          "body": "{\n  \"countryCode\": \"{{oneOf (array 'UnitedStates' 'Canada')}}\",\n  \"created\": \"{{faker 'date.recent' 365}}\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"householdId\": {{faker 'random.number'}},\n  \"lastStatusUpdate\": \"{{faker 'date.recent' 365}}\",\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"modules\": {\n    \"factFinderModules\": [\n      {\n        \"available\": {{faker 'random.boolean'}},\n        \"factFinderId\": {{faker 'random.number'}},\n        \"links\": [\n          {\n            \"href\": \"\",\n            \"rel\": \"\"\n          }\n        ],\n        \"moduleId\": {{faker 'random.number'}},\n        \"moduleName\": \"{{oneOf (array 'Demographics' 'Assets' 'Liabilities' 'Incomes' 'Expenses' 'Insurance' 'Retirement' 'Education' 'MajorPurchase')}}\",\n        \"visited\": {{faker 'random.boolean'}}\n      }\n    ]\n  },\n  \"planId\": {{faker 'random.number'}},\n  \"planLevel\": \"{{oneOf (array 'Level2' 'Level1')}}\",\n  \"status\": \"{{oneOf (array 'New' 'InProgress' 'ClientSubmitted' 'AdvisorAccepted' 'Canceled' 'Draft' 'Deleted')}}\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7d09b1f0-7f83-460e-994e-3a119b439ffe",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1cf19f76-146f-4d7c-89ca-a8bb950128d3",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Fact Finder data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4d0e28d1-dbbe-432a-b0f6-11bf71d5fa0c",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Fact Finder.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7b827198-529a-4836-b384-a974a5a62e60",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Fact Finder not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6e5dc071-6590-454f-9003-976c250280e1",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "The request cannot be completed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b801d6ec-c2bc-43da-b6ea-d864d4448bec",
      "documentation": "Description: This operation retrieves all Fact Finder Modules for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Fact Finder Modules including description and policy type.",
      "method": "get",
      "endpoint": "api/FactFinders/:factFinderId/Modules",
      "responses": [
        {
          "uuid": "36ffd7ee-8652-456d-868c-3d4b4b0e078a",
          "body": "{\n  \"factFinderModules\": [\n    {\n      \"available\": {{faker 'random.boolean'}},\n      \"factFinderId\": {{faker 'random.number'}},\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"moduleId\": {{faker 'random.number'}},\n      \"moduleName\": \"{{oneOf (array 'Demographics' 'Assets' 'Liabilities' 'Incomes' 'Expenses' 'Insurance' 'Retirement' 'Education' 'MajorPurchase')}}\",\n      \"visited\": {{faker 'random.boolean'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "06e6fb5b-1fb1-4b3b-8bbf-63fed335482a",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ab0addea-8e41-4316-a0f6-aad00de3539e",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Fact Finder Module data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4d53a7ef-d7f0-4bec-bdc6-d1ac6ee11e16",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Fact Finder Module not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "999789f7-5e45-452f-8c8b-0ac980282253",
      "documentation": "Description: This operation retrieves a single Fact Finder Module for the specified Fact Finder Module ID.<br />\r\n              Purpose: Provides access to the Fact Finder Module including description and policy type.",
      "method": "get",
      "endpoint": "api/FactFinders/:factFinderId/Modules/:id",
      "responses": [
        {
          "uuid": "8f5cabed-94c6-476f-9c20-dcb09b1b52d8",
          "body": "{\n  \"available\": {{faker 'random.boolean'}},\n  \"factFinderId\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"moduleId\": {{faker 'random.number'}},\n  \"moduleName\": \"{{oneOf (array 'Demographics' 'Assets' 'Liabilities' 'Incomes' 'Expenses' 'Insurance' 'Retirement' 'Education' 'MajorPurchase')}}\",\n  \"visited\": {{faker 'random.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d0d94d48-156b-4321-9fb3-ff36315dc60f",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1a25de36-a159-454d-95ec-4fd289968cd4",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Fact Finder Module data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9a63cbba-baa2-4bcd-adb3-795af17c6bdc",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Fact Finder Module not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "506fa09e-4c51-4e98-892a-518fa01aab6e",
      "documentation": "Description: The operation updates a Fact Finder Module.<br />\r\n              Purpose: Allows for complete replacement of a Fact Finder Module on a Fact Finder.",
      "method": "put",
      "endpoint": "api/FactFinders/:factFinderId/Modules/:id",
      "responses": [
        {
          "uuid": "5bb4c2b6-ea57-4d02-8e50-555ed7e5fbfe",
          "body": "{\n  \"available\": {{faker 'random.boolean'}},\n  \"factFinderId\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"moduleId\": {{faker 'random.number'}},\n  \"moduleName\": \"{{oneOf (array 'Demographics' 'Assets' 'Liabilities' 'Incomes' 'Expenses' 'Insurance' 'Retirement' 'Education' 'MajorPurchase')}}\",\n  \"visited\": {{faker 'random.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "56c6c48b-f4b1-4f0a-8f8b-bf0ddeaa0667",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b45865bd-ea20-4a66-aec5-0ea7c82b75d0",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Fact Finder Module data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "305abd25-a2a1-42d7-a6ea-864e2c56ca9b",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Fact Finder Module not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fc3532ec-690f-4f7e-9db6-5e5cd08eb9d6",
      "documentation": "Description: The operation retrieves Snapshots of a Fact Finder.<br />\r\n              Purpose: Allows for advisors to view all Snapshots taken of a Fact Finder.",
      "method": "get",
      "endpoint": "api/FactFinders/:factFinderId/Snapshots",
      "responses": [
        {
          "uuid": "5f0907c7-b14a-459b-80b4-031da8aeee62",
          "body": "{\n  \"snapshots\": [\n    {\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"factFinderData\": {\n        \"accounts\": [\n          {\n            \"accountHoldings\": [\n              {\n                \"accountHoldingId\": {{faker 'random.number'}},\n                \"accountId\": {{faker 'random.number'}},\n                \"costBasis\": {{faker 'random.float'}},\n                \"cusip\": \"\",\n                \"description\": \"\",\n                \"externalDestinationId\": \"\",\n                \"heldAway\": {{faker 'random.boolean'}},\n                \"marketValue\": {{faker 'random.float'}},\n                \"symbol\": \"\",\n                \"valuationDate\": \"{{faker 'date.recent' 365}}\"\n              }\n            ],\n            \"accountId\": {{faker 'random.number'}},\n            \"accountType\": {{faker 'random.number'}},\n            \"description\": \"\",\n            \"externalDestinationId\": \"\",\n            \"externalSourceId\": \"\",\n            \"externalSourceName\": \"\",\n            \"factFinderId\": {{faker 'random.number'}},\n            \"lastUpdated\": \"{{faker 'date.recent' 365}}\",\n            \"marketValue\": {{faker 'random.float'}},\n            \"owner\": \"{{oneOf (array 'Client' 'CoClient' 'Joint' 'Dependent' 'Other')}}\",\n            \"ownerDependentId\": {{faker 'random.number'}},\n            \"savingsStrategies\": [\n              {\n                \"accountId\": {{faker 'random.number'}},\n                \"employerSavingsAmount\": {{faker 'random.float'}},\n                \"employerSavingsAmountType\": \"{{oneOf (array 'Dollar' 'Percent' 'Max')}}\",\n                \"endDate\": \"{{faker 'date.recent' 365}}\",\n                \"externalDestinationId\": \"\",\n                \"frequencyId\": {{faker 'random.number'}},\n                \"mandatoryAmount\": {{faker 'random.float'}},\n                \"mandatoryAmountType\": \"{{oneOf (array 'Dollar' 'Percent' 'Max')}}\",\n                \"postTaxSavingsAmount\": {{faker 'random.float'}},\n                \"postTaxSavingsAmountType\": \"{{oneOf (array 'Dollar' 'Percent' 'Max')}}\",\n                \"preTaxSavingsAmount\": {{faker 'random.float'}},\n                \"preTaxSavingsAmountType\": \"{{oneOf (array 'Dollar' 'Percent' 'Max')}}\",\n                \"savingsStrategyId\": {{faker 'random.number'}},\n                \"startDate\": \"{{faker 'date.recent' 365}}\"\n              }\n            ]\n          }\n        ],\n        \"criticalIllnessInsurancePolicies\": [\n          {\n            \"benefit\": {{faker 'random.float'}},\n            \"criticalIllnessInsurancePolicyId\": {{faker 'random.number'}},\n            \"description\": \"\",\n            \"externalDestinationId\": \"\",\n            \"factFinderId\": {{faker 'random.number'}},\n            \"frequency\": {{faker 'random.number'}},\n            \"insured\": \"{{oneOf (array 'Client' 'CoClient')}}\",\n            \"policyType\": {{faker 'random.number'}},\n            \"premium\": {{faker 'random.float'}}\n          }\n        ],\n        \"definedBenefitPensions\": [\n          {\n            \"definedBenefitPensionId\": {{faker 'random.number'}},\n            \"description\": \"\",\n            \"estimatedAmount\": {{faker 'random.float'}},\n            \"externalDestinationId\": \"\",\n            \"factFinderId\": {{faker 'random.number'}},\n            \"member\": \"{{oneOf (array 'Client' 'CoClient')}}\",\n            \"startDate\": \"{{faker 'date.recent' 365}}\"\n          }\n        ],\n        \"demographics\": {\n          \"city\": \"\",\n          \"created\": \"{{faker 'date.recent' 365}}\",\n          \"demographicsId\": {{faker 'random.number'}},\n          \"dependents\": [\n            {\n              \"birthDate\": \"{{faker 'date.recent' 365}}\",\n              \"demographicsId\": {{faker 'random.number'}},\n              \"dependentId\": {{faker 'random.number'}},\n              \"dependentOf\": \"{{oneOf (array 'Client' 'CoClient' 'Joint' 'Other')}}\",\n              \"externalDestinationId\": \"\",\n              \"firstName\": \"\",\n              \"lastName\": \"\",\n              \"relationship\": \"{{oneOf (array 'Son' 'Daughter' 'FosterSon' 'FosterDaughter' 'Grandson' 'Granddaughter' 'Nephew' 'Niece' 'MaleCousin' 'FemaleCousin' 'Father' 'Mother' 'Grandfather' 'Grandmother' 'Uncle' 'Aunt' 'Brother' 'Sister' 'SonInLaw' 'DaughterInLaw' 'MaleOther' 'FemaleOther')}}\"\n            }\n          ],\n          \"externalDestinationId\": \"\",\n          \"externalSourceId\": \"\",\n          \"factFinderId\": {{faker 'random.number'}},\n          \"head1\": {\n            \"alreadyRetired\": {{faker 'random.boolean'}},\n            \"birthDate\": \"{{faker 'date.recent' 365}}\",\n            \"externalDestinationId\": \"\",\n            \"firstName\": \"\",\n            \"gender\": \"{{oneOf (array 'Male' 'Female' 'None')}}\",\n            \"lastName\": \"\",\n            \"taxFilingStatus\": {{faker 'random.number'}}\n          },\n          \"head2\": {\n            \"alreadyRetired\": {{faker 'random.boolean'}},\n            \"birthDate\": \"{{faker 'date.recent' 365}}\",\n            \"externalDestinationId\": \"\",\n            \"firstName\": \"\",\n            \"gender\": \"{{oneOf (array 'Male' 'Female' 'None')}}\",\n            \"lastName\": \"\",\n            \"taxFilingStatus\": {{faker 'random.number'}}\n          },\n          \"jointAnalysis\": {{faker 'random.boolean'}},\n          \"lockRetirement\": {{faker 'random.boolean'}},\n          \"state\": {{faker 'random.number'}}\n        },\n        \"disabilityInsurancePolicies\": [\n          {\n            \"benefit\": {{faker 'random.float'}},\n            \"benefitFrequency\": {{faker 'random.number'}},\n            \"benefitType\": \"{{oneOf (array 'Dollar' 'Percent')}}\",\n            \"description\": \"\",\n            \"disabilityInsurancePolicyId\": {{faker 'random.number'}},\n            \"externalDestinationId\": \"\",\n            \"factFinderId\": {{faker 'random.number'}},\n            \"insured\": \"{{oneOf (array 'Client' 'CoClient')}}\",\n            \"policyType\": {{faker 'random.number'}},\n            \"premium\": {{faker 'random.float'}},\n            \"premiumFrequency\": {{faker 'random.number'}}\n          }\n        ],\n        \"educationGoals\": [\n          {\n            \"description\": \"\",\n            \"educationExpenses\": [\n              {\n                \"annualCost\": {{faker 'random.float'}},\n                \"educationExpenseId\": {{faker 'random.number'}},\n                \"educationGoalId\": {{faker 'random.number'}},\n                \"externalDestinationId\": \"\",\n                \"member\": \"{{oneOf (array 'Client' 'CoClient' 'Dependent')}}\",\n                \"memberDependentId\": {{faker 'random.number'}},\n                \"startYear\": \"{{faker 'date.recent' 365}}\",\n                \"years\": {{faker 'random.number'}}\n              }\n            ],\n            \"educationGoalId\": {{faker 'random.number'}},\n            \"externalDestinationId\": \"\",\n            \"factFinderId\": {{faker 'random.number'}},\n            \"projectedCost\": {{faker 'random.float'}}\n          }\n        ],\n        \"expenses\": [\n          {\n            \"annualPeriod\": {{faker 'random.number'}},\n            \"description\": \"\",\n            \"endDate\": \"{{faker 'date.recent' 365}}\",\n            \"expenseAmount\": {{faker 'random.float'}},\n            \"expenseId\": {{faker 'random.number'}},\n            \"expenseTypeId\": {{faker 'random.number'}},\n            \"externalDestinationId\": \"\",\n            \"factFinderId\": {{faker 'random.number'}},\n            \"frequency\": {{faker 'random.number'}},\n            \"member\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n            \"startDate\": \"{{faker 'date.recent' 365}}\"\n          }\n        ],\n        \"incomes\": [\n          {\n            \"annualAmount\": {{faker 'random.float'}},\n            \"description\": \"\",\n            \"endDate\": \"{{faker 'date.recent' 365}}\",\n            \"externalDestinationId\": \"\",\n            \"factFinderId\": {{faker 'random.number'}},\n            \"incomeId\": {{faker 'random.number'}},\n            \"incomeTypeId\": {{faker 'random.number'}},\n            \"owner\": \"{{oneOf (array 'Client' 'CoClient')}}\",\n            \"startDate\": \"{{faker 'date.recent' 365}}\"\n          }\n        ],\n        \"liabilities\": [\n          {\n            \"balance\": {{faker 'random.float'}},\n            \"balanceAsOfDate\": \"{{faker 'date.recent' 365}}\",\n            \"description\": \"\",\n            \"externalDestinationId\": \"\",\n            \"externalSourceId\": \"\",\n            \"factFinderId\": {{faker 'random.number'}},\n            \"frequency\": {{faker 'random.number'}},\n            \"importSource\": \"\",\n            \"interestRate\": {{faker 'random.float'}},\n            \"lastUpdated\": \"{{faker 'date.recent' 365}}\",\n            \"liabilityId\": {{faker 'random.number'}},\n            \"liabilityType\": {{faker 'random.number'}},\n            \"loanDate\": \"{{faker 'date.recent' 365}}\",\n            \"originalPrincipal\": {{faker 'random.float'}},\n            \"owner\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n            \"payment\": {{faker 'random.float'}},\n            \"paymentType\": \"{{oneOf (array 'InterestOnly' 'PrincipalAndInterest' 'SetPrincipal' 'LastPeriod')}}\"\n          }\n        ],\n        \"lifeInsurancePolicies\": [\n          {\n            \"beneficiary\": \"{{oneOf (array 'Client' 'CoClient' 'Dependent' 'Other')}}\",\n            \"beneficiaryDependentId\": {{faker 'random.number'}},\n            \"benefit\": {{faker 'random.float'}},\n            \"description\": \"\",\n            \"externalDestinationId\": \"\",\n            \"factFinderId\": {{faker 'random.number'}},\n            \"frequency\": {{faker 'random.number'}},\n            \"generalAccountMarketValue\": {{faker 'random.float'}},\n            \"insured\": \"{{oneOf (array 'Client' 'CoClient' 'FirstToDie' 'SecondToDie' 'Other')}}\",\n            \"lifeInsurancePolicyId\": {{faker 'random.number'}},\n            \"payer\": \"{{oneOf (array 'Client' 'CoClient' 'Joint' 'Other')}}\",\n            \"policyType\": {{faker 'random.number'}},\n            \"premium\": {{faker 'random.float'}},\n            \"subaccounts\": [\n              {\n                \"description\": \"\",\n                \"externalDestinationId\": \"\",\n                \"lifeInsurancePolicyId\": {{faker 'random.number'}},\n                \"lifeInsurancePolicySubaccountId\": {{faker 'random.number'}},\n                \"marketValue\": {{faker 'random.float'}},\n                \"symbol\": \"\"\n              }\n            ]\n          }\n        ],\n        \"lifestyleAssets\": [\n          {\n            \"description\": \"\",\n            \"externalDestinationId\": \"\",\n            \"factFinderId\": {{faker 'random.number'}},\n            \"lifestyleAssetId\": {{faker 'random.number'}},\n            \"marketValue\": {{faker 'random.float'}},\n            \"owner\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n            \"purchaseAmount\": {{faker 'random.float'}},\n            \"purchaseDate\": \"{{faker 'date.recent' 365}}\",\n            \"type\": {{faker 'random.number'}}\n          }\n        ],\n        \"longTermCareInsurancePolicies\": [\n          {\n            \"benefit\": {{faker 'random.float'}},\n            \"benefitFrequency\": {{faker 'random.number'}},\n            \"description\": \"\",\n            \"externalDestinationId\": \"\",\n            \"factFinderId\": {{faker 'random.number'}},\n            \"insured\": \"{{oneOf (array 'Client' 'CoClient')}}\",\n            \"longTermCareInsurancePolicyId\": {{faker 'random.number'}},\n            \"premium\": {{faker 'random.float'}},\n            \"premiumFrequency\": {{faker 'random.number'}}\n          }\n        ],\n        \"majorPurchaseGoals\": [\n          {\n            \"amount\": {{faker 'random.float'}},\n            \"description\": \"\",\n            \"externalDestinationId\": \"\",\n            \"factFinderId\": {{faker 'random.number'}},\n            \"majorPurchaseGoalId\": {{faker 'random.number'}},\n            \"majorPurchaseGoalTypeId\": {{faker 'random.number'}},\n            \"member\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n            \"targetDate\": \"{{faker 'date.recent' 365}}\"\n          }\n        ],\n        \"planYear\": {{faker 'random.number'}},\n        \"realEstateAssets\": [\n          {\n            \"description\": \"\",\n            \"externalDestinationId\": \"\",\n            \"factFinderId\": {{faker 'random.number'}},\n            \"frequency\": {{faker 'random.number'}},\n            \"marketValue\": {{faker 'random.float'}},\n            \"owner\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n            \"purchaseAmount\": {{faker 'random.float'}},\n            \"purchaseDate\": \"{{faker 'date.recent' 365}}\",\n            \"realEstateAssetId\": {{faker 'random.number'}},\n            \"rentalIncome\": {{faker 'random.float'}}\n          }\n        ],\n        \"retirementGoal\": {\n          \"externalDestinationId\": \"\",\n          \"factFinderId\": {{faker 'random.number'}},\n          \"head1RetirementDate\": \"{{faker 'date.recent' 365}}\",\n          \"head2RetirementDate\": \"{{faker 'date.recent' 365}}\",\n          \"retirementExpenses\": [\n            {\n              \"amount\": {{faker 'random.float'}},\n              \"annualPeriod\": {{faker 'random.number'}},\n              \"description\": \"\",\n              \"endDate\": \"{{faker 'date.recent' 365}}\",\n              \"externalDestinationId\": \"\",\n              \"frequency\": {{faker 'random.number'}},\n              \"member\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n              \"retirementExpenseId\": {{faker 'random.number'}},\n              \"retirementGoalId\": {{faker 'random.number'}},\n              \"startDate\": \"{{faker 'date.recent' 365}}\"\n            }\n          ],\n          \"retirementGoalId\": {{faker 'random.number'}}\n        }\n      },\n      \"factFinderId\": {{faker 'random.number'}},\n      \"factFinderStatus\": \"{{oneOf (array 'New' 'InProgress' 'ClientSubmitted' 'AdvisorAccepted' 'Canceled' 'Draft' 'Deleted')}}\",\n      \"snapshotId\": {{faker 'random.number'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5a8cd5b0-4563-41bb-8310-a4c919c54f30",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c75c187c-297a-4e2f-83da-cfab0eb4fd9e",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Fact Finder data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "752d334f-2d24-43a5-bd68-54abb24e260e",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Fact Finder.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "67f69d24-52a7-44b2-81d5-29693bd59681",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Fact Finder not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5ee99496-4ae4-4a20-887e-5fae8d3002cb",
      "documentation": "Description: The operation creates a Snapshot of a Fact Finder.<br />\r\n              Purpose: Allows for advisors to compare the current fact finder to a snapshot prior to acceptance.",
      "method": "post",
      "endpoint": "api/FactFinders/:factFinderId/Snapshots",
      "responses": [
        {
          "uuid": "5f3e1630-a4c0-4270-bc41-94bd5babbe88",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c4903708-401e-4d3b-834f-b427ac988480",
          "body": "{\n  \"created\": \"{{faker 'date.recent' 365}}\",\n  \"factFinderData\": {\n    \"accounts\": [\n      {\n        \"accountHoldings\": [\n          {\n            \"accountHoldingId\": {{faker 'random.number'}},\n            \"accountId\": {{faker 'random.number'}},\n            \"costBasis\": {{faker 'random.float'}},\n            \"cusip\": \"\",\n            \"description\": \"\",\n            \"externalDestinationId\": \"\",\n            \"heldAway\": {{faker 'random.boolean'}},\n            \"marketValue\": {{faker 'random.float'}},\n            \"symbol\": \"\",\n            \"valuationDate\": \"{{faker 'date.recent' 365}}\"\n          }\n        ],\n        \"accountId\": {{faker 'random.number'}},\n        \"accountType\": {{faker 'random.number'}},\n        \"description\": \"\",\n        \"externalDestinationId\": \"\",\n        \"externalSourceId\": \"\",\n        \"externalSourceName\": \"\",\n        \"factFinderId\": {{faker 'random.number'}},\n        \"lastUpdated\": \"{{faker 'date.recent' 365}}\",\n        \"marketValue\": {{faker 'random.float'}},\n        \"owner\": \"{{oneOf (array 'Client' 'CoClient' 'Joint' 'Dependent' 'Other')}}\",\n        \"ownerDependentId\": {{faker 'random.number'}},\n        \"savingsStrategies\": [\n          {\n            \"accountId\": {{faker 'random.number'}},\n            \"employerSavingsAmount\": {{faker 'random.float'}},\n            \"employerSavingsAmountType\": \"{{oneOf (array 'Dollar' 'Percent' 'Max')}}\",\n            \"endDate\": \"{{faker 'date.recent' 365}}\",\n            \"externalDestinationId\": \"\",\n            \"frequencyId\": {{faker 'random.number'}},\n            \"mandatoryAmount\": {{faker 'random.float'}},\n            \"mandatoryAmountType\": \"{{oneOf (array 'Dollar' 'Percent' 'Max')}}\",\n            \"postTaxSavingsAmount\": {{faker 'random.float'}},\n            \"postTaxSavingsAmountType\": \"{{oneOf (array 'Dollar' 'Percent' 'Max')}}\",\n            \"preTaxSavingsAmount\": {{faker 'random.float'}},\n            \"preTaxSavingsAmountType\": \"{{oneOf (array 'Dollar' 'Percent' 'Max')}}\",\n            \"savingsStrategyId\": {{faker 'random.number'}},\n            \"startDate\": \"{{faker 'date.recent' 365}}\"\n          }\n        ]\n      }\n    ],\n    \"criticalIllnessInsurancePolicies\": [\n      {\n        \"benefit\": {{faker 'random.float'}},\n        \"criticalIllnessInsurancePolicyId\": {{faker 'random.number'}},\n        \"description\": \"\",\n        \"externalDestinationId\": \"\",\n        \"factFinderId\": {{faker 'random.number'}},\n        \"frequency\": {{faker 'random.number'}},\n        \"insured\": \"{{oneOf (array 'Client' 'CoClient')}}\",\n        \"policyType\": {{faker 'random.number'}},\n        \"premium\": {{faker 'random.float'}}\n      }\n    ],\n    \"definedBenefitPensions\": [\n      {\n        \"definedBenefitPensionId\": {{faker 'random.number'}},\n        \"description\": \"\",\n        \"estimatedAmount\": {{faker 'random.float'}},\n        \"externalDestinationId\": \"\",\n        \"factFinderId\": {{faker 'random.number'}},\n        \"member\": \"{{oneOf (array 'Client' 'CoClient')}}\",\n        \"startDate\": \"{{faker 'date.recent' 365}}\"\n      }\n    ],\n    \"demographics\": {\n      \"city\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"demographicsId\": {{faker 'random.number'}},\n      \"dependents\": [\n        {\n          \"birthDate\": \"{{faker 'date.recent' 365}}\",\n          \"demographicsId\": {{faker 'random.number'}},\n          \"dependentId\": {{faker 'random.number'}},\n          \"dependentOf\": \"{{oneOf (array 'Client' 'CoClient' 'Joint' 'Other')}}\",\n          \"externalDestinationId\": \"\",\n          \"firstName\": \"\",\n          \"lastName\": \"\",\n          \"relationship\": \"{{oneOf (array 'Son' 'Daughter' 'FosterSon' 'FosterDaughter' 'Grandson' 'Granddaughter' 'Nephew' 'Niece' 'MaleCousin' 'FemaleCousin' 'Father' 'Mother' 'Grandfather' 'Grandmother' 'Uncle' 'Aunt' 'Brother' 'Sister' 'SonInLaw' 'DaughterInLaw' 'MaleOther' 'FemaleOther')}}\"\n        }\n      ],\n      \"externalDestinationId\": \"\",\n      \"externalSourceId\": \"\",\n      \"factFinderId\": {{faker 'random.number'}},\n      \"head1\": {\n        \"alreadyRetired\": {{faker 'random.boolean'}},\n        \"birthDate\": \"{{faker 'date.recent' 365}}\",\n        \"externalDestinationId\": \"\",\n        \"firstName\": \"\",\n        \"gender\": \"{{oneOf (array 'Male' 'Female' 'None')}}\",\n        \"lastName\": \"\",\n        \"taxFilingStatus\": {{faker 'random.number'}}\n      },\n      \"head2\": {\n        \"alreadyRetired\": {{faker 'random.boolean'}},\n        \"birthDate\": \"{{faker 'date.recent' 365}}\",\n        \"externalDestinationId\": \"\",\n        \"firstName\": \"\",\n        \"gender\": \"{{oneOf (array 'Male' 'Female' 'None')}}\",\n        \"lastName\": \"\",\n        \"taxFilingStatus\": {{faker 'random.number'}}\n      },\n      \"jointAnalysis\": {{faker 'random.boolean'}},\n      \"lockRetirement\": {{faker 'random.boolean'}},\n      \"state\": {{faker 'random.number'}}\n    },\n    \"disabilityInsurancePolicies\": [\n      {\n        \"benefit\": {{faker 'random.float'}},\n        \"benefitFrequency\": {{faker 'random.number'}},\n        \"benefitType\": \"{{oneOf (array 'Dollar' 'Percent')}}\",\n        \"description\": \"\",\n        \"disabilityInsurancePolicyId\": {{faker 'random.number'}},\n        \"externalDestinationId\": \"\",\n        \"factFinderId\": {{faker 'random.number'}},\n        \"insured\": \"{{oneOf (array 'Client' 'CoClient')}}\",\n        \"policyType\": {{faker 'random.number'}},\n        \"premium\": {{faker 'random.float'}},\n        \"premiumFrequency\": {{faker 'random.number'}}\n      }\n    ],\n    \"educationGoals\": [\n      {\n        \"description\": \"\",\n        \"educationExpenses\": [\n          {\n            \"annualCost\": {{faker 'random.float'}},\n            \"educationExpenseId\": {{faker 'random.number'}},\n            \"educationGoalId\": {{faker 'random.number'}},\n            \"externalDestinationId\": \"\",\n            \"member\": \"{{oneOf (array 'Client' 'CoClient' 'Dependent')}}\",\n            \"memberDependentId\": {{faker 'random.number'}},\n            \"startYear\": \"{{faker 'date.recent' 365}}\",\n            \"years\": {{faker 'random.number'}}\n          }\n        ],\n        \"educationGoalId\": {{faker 'random.number'}},\n        \"externalDestinationId\": \"\",\n        \"factFinderId\": {{faker 'random.number'}},\n        \"projectedCost\": {{faker 'random.float'}}\n      }\n    ],\n    \"expenses\": [\n      {\n        \"annualPeriod\": {{faker 'random.number'}},\n        \"description\": \"\",\n        \"endDate\": \"{{faker 'date.recent' 365}}\",\n        \"expenseAmount\": {{faker 'random.float'}},\n        \"expenseId\": {{faker 'random.number'}},\n        \"expenseTypeId\": {{faker 'random.number'}},\n        \"externalDestinationId\": \"\",\n        \"factFinderId\": {{faker 'random.number'}},\n        \"frequency\": {{faker 'random.number'}},\n        \"member\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n        \"startDate\": \"{{faker 'date.recent' 365}}\"\n      }\n    ],\n    \"incomes\": [\n      {\n        \"annualAmount\": {{faker 'random.float'}},\n        \"description\": \"\",\n        \"endDate\": \"{{faker 'date.recent' 365}}\",\n        \"externalDestinationId\": \"\",\n        \"factFinderId\": {{faker 'random.number'}},\n        \"incomeId\": {{faker 'random.number'}},\n        \"incomeTypeId\": {{faker 'random.number'}},\n        \"owner\": \"{{oneOf (array 'Client' 'CoClient')}}\",\n        \"startDate\": \"{{faker 'date.recent' 365}}\"\n      }\n    ],\n    \"liabilities\": [\n      {\n        \"balance\": {{faker 'random.float'}},\n        \"balanceAsOfDate\": \"{{faker 'date.recent' 365}}\",\n        \"description\": \"\",\n        \"externalDestinationId\": \"\",\n        \"externalSourceId\": \"\",\n        \"factFinderId\": {{faker 'random.number'}},\n        \"frequency\": {{faker 'random.number'}},\n        \"importSource\": \"\",\n        \"interestRate\": {{faker 'random.float'}},\n        \"lastUpdated\": \"{{faker 'date.recent' 365}}\",\n        \"liabilityId\": {{faker 'random.number'}},\n        \"liabilityType\": {{faker 'random.number'}},\n        \"loanDate\": \"{{faker 'date.recent' 365}}\",\n        \"originalPrincipal\": {{faker 'random.float'}},\n        \"owner\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n        \"payment\": {{faker 'random.float'}},\n        \"paymentType\": \"{{oneOf (array 'InterestOnly' 'PrincipalAndInterest' 'SetPrincipal' 'LastPeriod')}}\"\n      }\n    ],\n    \"lifeInsurancePolicies\": [\n      {\n        \"beneficiary\": \"{{oneOf (array 'Client' 'CoClient' 'Dependent' 'Other')}}\",\n        \"beneficiaryDependentId\": {{faker 'random.number'}},\n        \"benefit\": {{faker 'random.float'}},\n        \"description\": \"\",\n        \"externalDestinationId\": \"\",\n        \"factFinderId\": {{faker 'random.number'}},\n        \"frequency\": {{faker 'random.number'}},\n        \"generalAccountMarketValue\": {{faker 'random.float'}},\n        \"insured\": \"{{oneOf (array 'Client' 'CoClient' 'FirstToDie' 'SecondToDie' 'Other')}}\",\n        \"lifeInsurancePolicyId\": {{faker 'random.number'}},\n        \"payer\": \"{{oneOf (array 'Client' 'CoClient' 'Joint' 'Other')}}\",\n        \"policyType\": {{faker 'random.number'}},\n        \"premium\": {{faker 'random.float'}},\n        \"subaccounts\": [\n          {\n            \"description\": \"\",\n            \"externalDestinationId\": \"\",\n            \"lifeInsurancePolicyId\": {{faker 'random.number'}},\n            \"lifeInsurancePolicySubaccountId\": {{faker 'random.number'}},\n            \"marketValue\": {{faker 'random.float'}},\n            \"symbol\": \"\"\n          }\n        ]\n      }\n    ],\n    \"lifestyleAssets\": [\n      {\n        \"description\": \"\",\n        \"externalDestinationId\": \"\",\n        \"factFinderId\": {{faker 'random.number'}},\n        \"lifestyleAssetId\": {{faker 'random.number'}},\n        \"marketValue\": {{faker 'random.float'}},\n        \"owner\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n        \"purchaseAmount\": {{faker 'random.float'}},\n        \"purchaseDate\": \"{{faker 'date.recent' 365}}\",\n        \"type\": {{faker 'random.number'}}\n      }\n    ],\n    \"longTermCareInsurancePolicies\": [\n      {\n        \"benefit\": {{faker 'random.float'}},\n        \"benefitFrequency\": {{faker 'random.number'}},\n        \"description\": \"\",\n        \"externalDestinationId\": \"\",\n        \"factFinderId\": {{faker 'random.number'}},\n        \"insured\": \"{{oneOf (array 'Client' 'CoClient')}}\",\n        \"longTermCareInsurancePolicyId\": {{faker 'random.number'}},\n        \"premium\": {{faker 'random.float'}},\n        \"premiumFrequency\": {{faker 'random.number'}}\n      }\n    ],\n    \"majorPurchaseGoals\": [\n      {\n        \"amount\": {{faker 'random.float'}},\n        \"description\": \"\",\n        \"externalDestinationId\": \"\",\n        \"factFinderId\": {{faker 'random.number'}},\n        \"majorPurchaseGoalId\": {{faker 'random.number'}},\n        \"majorPurchaseGoalTypeId\": {{faker 'random.number'}},\n        \"member\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n        \"targetDate\": \"{{faker 'date.recent' 365}}\"\n      }\n    ],\n    \"planYear\": {{faker 'random.number'}},\n    \"realEstateAssets\": [\n      {\n        \"description\": \"\",\n        \"externalDestinationId\": \"\",\n        \"factFinderId\": {{faker 'random.number'}},\n        \"frequency\": {{faker 'random.number'}},\n        \"marketValue\": {{faker 'random.float'}},\n        \"owner\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n        \"purchaseAmount\": {{faker 'random.float'}},\n        \"purchaseDate\": \"{{faker 'date.recent' 365}}\",\n        \"realEstateAssetId\": {{faker 'random.number'}},\n        \"rentalIncome\": {{faker 'random.float'}}\n      }\n    ],\n    \"retirementGoal\": {\n      \"externalDestinationId\": \"\",\n      \"factFinderId\": {{faker 'random.number'}},\n      \"head1RetirementDate\": \"{{faker 'date.recent' 365}}\",\n      \"head2RetirementDate\": \"{{faker 'date.recent' 365}}\",\n      \"retirementExpenses\": [\n        {\n          \"amount\": {{faker 'random.float'}},\n          \"annualPeriod\": {{faker 'random.number'}},\n          \"description\": \"\",\n          \"endDate\": \"{{faker 'date.recent' 365}}\",\n          \"externalDestinationId\": \"\",\n          \"frequency\": {{faker 'random.number'}},\n          \"member\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n          \"retirementExpenseId\": {{faker 'random.number'}},\n          \"retirementGoalId\": {{faker 'random.number'}},\n          \"startDate\": \"{{faker 'date.recent' 365}}\"\n        }\n      ],\n      \"retirementGoalId\": {{faker 'random.number'}}\n    }\n  },\n  \"factFinderId\": {{faker 'random.number'}},\n  \"factFinderStatus\": \"{{oneOf (array 'New' 'InProgress' 'ClientSubmitted' 'AdvisorAccepted' 'Canceled' 'Draft' 'Deleted')}}\",\n  \"snapshotId\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5b678b6c-a9d1-472b-a1dd-5e31104f3738",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3293cf30-b96c-4e93-b58f-3df0f6254880",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Fact Finder data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0519a7d4-4e9c-4425-828e-220310673617",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Fact Finder.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "75bea3b5-8bd4-41e2-98d2-4e7611775f1f",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Fact Finder not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a6a75ffa-cfa9-4454-8b21-8ba5870ecf1d",
      "documentation": "Description: This operation deletes a single Fact Finder for the specified Fact Finder ID.<br />\r\n              Purpose: Deletes the fact finder.",
      "method": "delete",
      "endpoint": "api/FactFinders/:id",
      "responses": [
        {
          "uuid": "6ec3567b-2b2b-4153-ab64-8eb1d24190e1",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fc43160e-9220-4a73-925f-f29932463dcf",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "00b21970-4005-4a1e-b0a7-448a5a18bf00",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d9312f68-19a1-4da9-87ff-f0730a64bb35",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Fact Finder data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c7c987ae-7531-4f72-8299-39cde9455248",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Fact Finder.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2510d8d0-7a62-4a22-b6dc-76f51dc979e3",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Fact Finder not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dec40eba-46c2-4d9f-a873-7521d22c78d4",
      "documentation": "Description: This operation retrieves a single Fact Finder for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Fact Finder including status.",
      "method": "get",
      "endpoint": "api/FactFinders/:id",
      "responses": [
        {
          "uuid": "3b74eb2d-fd24-4336-a632-b74c420d8183",
          "body": "{\n  \"countryCode\": \"{{oneOf (array 'UnitedStates' 'Canada')}}\",\n  \"created\": \"{{faker 'date.recent' 365}}\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"householdId\": {{faker 'random.number'}},\n  \"lastStatusUpdate\": \"{{faker 'date.recent' 365}}\",\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"modules\": {\n    \"factFinderModules\": [\n      {\n        \"available\": {{faker 'random.boolean'}},\n        \"factFinderId\": {{faker 'random.number'}},\n        \"links\": [\n          {\n            \"href\": \"\",\n            \"rel\": \"\"\n          }\n        ],\n        \"moduleId\": {{faker 'random.number'}},\n        \"moduleName\": \"{{oneOf (array 'Demographics' 'Assets' 'Liabilities' 'Incomes' 'Expenses' 'Insurance' 'Retirement' 'Education' 'MajorPurchase')}}\",\n        \"visited\": {{faker 'random.boolean'}}\n      }\n    ]\n  },\n  \"planId\": {{faker 'random.number'}},\n  \"planLevel\": \"{{oneOf (array 'Level2' 'Level1')}}\",\n  \"status\": \"{{oneOf (array 'New' 'InProgress' 'ClientSubmitted' 'AdvisorAccepted' 'Canceled' 'Draft' 'Deleted')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "194c69b8-d23d-43b3-be7b-4bfbb5e835ac",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "93b3ffad-9c48-4ebc-ac41-4067e8ab041b",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Fact Finder data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "53fbf5ea-1837-4e90-ba78-47c412de9519",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Fact Finder.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d1e47c0c-a10c-446f-8633-c4083bd7257b",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Fact Finder not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6fa52438-8101-43b4-9289-edc0bf33ecf2",
      "documentation": "Description: The operation updates a Fact Finder.<br />\r\n              Purpose: Allows for the updating of a Fact Finder.",
      "method": "put",
      "endpoint": "api/FactFinders/:id",
      "responses": [
        {
          "uuid": "9497d878-b98c-4ea3-a3dd-0785b31d9bb9",
          "body": "{\n  \"countryCode\": \"{{oneOf (array 'UnitedStates' 'Canada')}}\",\n  \"created\": \"{{faker 'date.recent' 365}}\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"householdId\": {{faker 'random.number'}},\n  \"lastStatusUpdate\": \"{{faker 'date.recent' 365}}\",\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"modules\": {\n    \"factFinderModules\": [\n      {\n        \"available\": {{faker 'random.boolean'}},\n        \"factFinderId\": {{faker 'random.number'}},\n        \"links\": [\n          {\n            \"href\": \"\",\n            \"rel\": \"\"\n          }\n        ],\n        \"moduleId\": {{faker 'random.number'}},\n        \"moduleName\": \"{{oneOf (array 'Demographics' 'Assets' 'Liabilities' 'Incomes' 'Expenses' 'Insurance' 'Retirement' 'Education' 'MajorPurchase')}}\",\n        \"visited\": {{faker 'random.boolean'}}\n      }\n    ]\n  },\n  \"planId\": {{faker 'random.number'}},\n  \"planLevel\": \"{{oneOf (array 'Level2' 'Level1')}}\",\n  \"status\": \"{{oneOf (array 'New' 'InProgress' 'ClientSubmitted' 'AdvisorAccepted' 'Canceled' 'Draft' 'Deleted')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a7eb1b5f-6de8-4ebc-baa3-81adb81dea95",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bb69c283-b18c-4b4c-b3c0-0b49fd63ff4d",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Fact Finder data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "93581ea3-160c-4678-be1d-af16d921578b",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Fact Finder.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4cf9344b-d200-44e0-939f-8e89e810d134",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Fact Finder not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1f0bb921-76e7-45de-b73f-8eb952ec089f",
      "documentation": "Description: The operation populates a fact finder.<br />\r\n              Purpose: Allows for the population of a Fact Finder based on a NaviPlan plan or client. This\r\n                       operation cannot be performed on a Fact Finder more than once.",
      "method": "put",
      "endpoint": "api/FactFinders/:id/Populate",
      "responses": [
        {
          "uuid": "39f02751-852d-4e6a-90aa-a461fdfe18c0",
          "body": "{\n  \"countryCode\": \"{{oneOf (array 'UnitedStates' 'Canada')}}\",\n  \"created\": \"{{faker 'date.recent' 365}}\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"householdId\": {{faker 'random.number'}},\n  \"lastStatusUpdate\": \"{{faker 'date.recent' 365}}\",\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"modules\": {\n    \"factFinderModules\": [\n      {\n        \"available\": {{faker 'random.boolean'}},\n        \"factFinderId\": {{faker 'random.number'}},\n        \"links\": [\n          {\n            \"href\": \"\",\n            \"rel\": \"\"\n          }\n        ],\n        \"moduleId\": {{faker 'random.number'}},\n        \"moduleName\": \"{{oneOf (array 'Demographics' 'Assets' 'Liabilities' 'Incomes' 'Expenses' 'Insurance' 'Retirement' 'Education' 'MajorPurchase')}}\",\n        \"visited\": {{faker 'random.boolean'}}\n      }\n    ]\n  },\n  \"planId\": {{faker 'random.number'}},\n  \"planLevel\": \"{{oneOf (array 'Level2' 'Level1')}}\",\n  \"status\": \"{{oneOf (array 'New' 'InProgress' 'ClientSubmitted' 'AdvisorAccepted' 'Canceled' 'Draft' 'Deleted')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Fact Finder was successfully populated.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "40336119-b1ad-499b-9652-65b7e6b229d1",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "311ef3bc-534f-4997-b82e-529fa738d095",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Fact Finder data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8a3a90d9-33b2-47c3-a075-0658ef50a3b7",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Fact Finder.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8e167a7b-5c9a-4502-ab5a-6118673008cf",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Fact Finder not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "45007f7c-41db-43dd-b593-5215307fa0de",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "Fact Finder already populated.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1f6e716f-0480-479f-ab35-b1cda8de421c",
      "documentation": "Description: This operation retrieves all Filing Status Types for the specified country.<br />\r\n              Purpose: Provides access to the Filing Status Types including id and type description.",
      "method": "get",
      "endpoint": "api/FilingStatusTypes",
      "responses": [
        {
          "uuid": "303f2a7c-0ef0-48e9-9f66-6f39694db3a6",
          "body": "{\n  \"filingStatusTypes\": [\n    {\n      \"filingStatusTypeId\": {{faker 'random.number'}},\n      \"filingStatusTypeName\": \"\",\n      \"hasJointDependent\": {{faker 'random.boolean'}},\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"partnerStatuses\": [\n        {{faker 'random.number'}}\n      ],\n      \"validForSingleAnalysis\": {{faker 'random.boolean'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bd3924ae-b1de-4564-8f51-8d728a08b1f7",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "17dfbd7c-e476-4390-9bde-f048f11df700",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Filing Status Type not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ea792123-5f10-4dfd-a774-779b8f5ead6f",
      "documentation": "Description: This operation retrieves all Filing Status Type for the specified id.<br />\r\n              Purpose: Provides access to the Filing Status Types including id and type description.",
      "method": "get",
      "endpoint": "api/FilingStatusTypes/:id",
      "responses": [
        {
          "uuid": "936c637a-e92f-4b68-ac6d-c08c24bcaf64",
          "body": "{\n  \"filingStatusTypeId\": {{faker 'random.number'}},\n  \"filingStatusTypeName\": \"\",\n  \"hasJointDependent\": {{faker 'random.boolean'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"partnerStatuses\": [\n    {{faker 'random.number'}}\n  ],\n  \"validForSingleAnalysis\": {{faker 'random.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "305d0c7c-f0c5-47cd-8491-edc03b5396cd",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "16a3db76-4c47-427e-9984-3d635fc83907",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Filing Status Type not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fad22f45-6d1b-4520-b65d-b2583e4796eb",
      "documentation": "Description: This operation retrieves all Frequency Types for the specified country and entity.<br />\r\n              Purpose: Provides access to the Frequency Types including id and type description.",
      "method": "get",
      "endpoint": "api/FrequencyTypes",
      "responses": [
        {
          "uuid": "6650a8bd-ec47-4bd0-babc-aa24234c5ec0",
          "body": "{\n  \"frequencyTypes\": [\n    {\n      \"id\": {{faker 'random.number'}},\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"name\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c485afcb-bc73-4e71-8af3-7444e1591a77",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9a637c61-fe1b-4179-b50a-b862d28bf87e",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Frequency Type not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5f215908-8675-4ae5-9de7-f91ccce28cdf",
      "documentation": "Description: This operation retrieves the Frequency Type for the specified id.<br />\r\n              Purpose: Provides access to the Frequency Types including id and type description.",
      "method": "get",
      "endpoint": "api/FrequencyTypes/:id",
      "responses": [
        {
          "uuid": "50ffeb52-061f-47ea-aac2-5270e2a27169",
          "body": "{\n  \"id\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "954bc99b-be70-44d5-ba5f-e3034acd2749",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "88375658-e6cb-4ee9-b418-661e1ce103ac",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Frequency Type not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d202d89f-5c1d-41a2-8f0a-22c108ffa4e4",
      "documentation": "Description: This operation retrieves all Income Types for the specified country.<br />\r\n              Purpose: Provides access to the Income Types including id and type description.",
      "method": "get",
      "endpoint": "api/IncomeTypes",
      "responses": [
        {
          "uuid": "454bcb6b-9462-40f1-a854-4751465b4f79",
          "body": "{\n  \"incomeTypes\": [\n    {\n      \"id\": {{faker 'random.number'}},\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"name\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f6ca9395-cb50-480b-ae52-7129775060bd",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "120b5ea3-b590-435a-9f35-61ffa44a59f0",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Income Type not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "13409bf8-12fb-41ad-8184-55d306547b06",
      "documentation": "Description: This operation retrieves the Income Type for the specified id.<br />\r\n              Purpose: Provides access to the Income Types including id and type description.",
      "method": "get",
      "endpoint": "api/IncomeTypes/:id",
      "responses": [
        {
          "uuid": "5c5c1dc7-81c8-4876-97cd-7ca832d5fe01",
          "body": "{\n  \"id\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c9e3d0c9-07ab-4aa0-8c18-56f3b884e95a",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2d82446e-5f0b-4347-8508-39d0ae60811b",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Income Type not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7805c306-367b-48b4-ab24-27387933ed6c",
      "documentation": "Description: This operation retrieves all Incomes for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Incomes including annual amount and start date.",
      "method": "get",
      "endpoint": "api/Incomes",
      "responses": [
        {
          "uuid": "9e15ea20-5179-47e8-a3be-19d9ecfca8be",
          "body": "{\n  \"incomes\": [\n    {\n      \"annualAmount\": {{faker 'random.float'}},\n      \"description\": \"\",\n      \"endDate\": \"{{faker 'date.recent' 365}}\",\n      \"externalDestinationId\": \"\",\n      \"factFinderId\": {{faker 'random.number'}},\n      \"incomeId\": {{faker 'random.number'}},\n      \"incomeTypeId\": {{faker 'random.number'}},\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"owner\": \"{{oneOf (array 'Client' 'CoClient')}}\",\n      \"startDate\": \"{{faker 'date.recent' 365}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dd355e3b-d8df-49aa-ab3b-0a609ba55eb8",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "82cfce9b-5336-46da-ba21-6ca7b32c7488",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Income data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ea29c5ae-0a78-42c7-8680-2d9e665ef2ff",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Income.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2376f732-6df9-4373-934b-703f4bb3dba1",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Income not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4904cc27-2717-424e-add1-704b33eed3e3",
      "documentation": "Description: The operation creates an Income.<br />\r\n              Purpose: Allows for creation of Incomes on a Fact Finder.",
      "method": "post",
      "endpoint": "api/Incomes",
      "responses": [
        {
          "uuid": "f3a2184f-d12b-4840-933b-93fd2bd3a66d",
          "body": "{\n  \"annualAmount\": {{faker 'random.float'}},\n  \"description\": \"\",\n  \"endDate\": \"{{faker 'date.recent' 365}}\",\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"incomeId\": {{faker 'random.number'}},\n  \"incomeTypeId\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"owner\": \"{{oneOf (array 'Client' 'CoClient')}}\",\n  \"startDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8ae323ff-1f2a-4dc2-9f50-a13b4e973ef7",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "56ad7b39-a126-49e1-b31a-134b45453b7f",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Income data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1c47607e-bb09-4c76-9b20-a1c2668fb9f4",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Income.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b46be6b9-abee-4f48-a45d-54d944db00bf",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Income not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3bcb1479-e5d3-4466-9543-bd157947a77b",
      "documentation": "Description: The operation removes an Income tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal of an Income from a Fact Finder.",
      "method": "delete",
      "endpoint": "api/Incomes/:id",
      "responses": [
        {
          "uuid": "fc354b8b-ea8b-47f0-806f-3a592bae18a1",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1add038d-6461-4b69-8a31-620a705483bf",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "32b274d9-a7f1-4ebd-9c29-b2592e0310c5",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Income data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5679c5c6-f7ce-4ada-a4f1-5b086568a676",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Income.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f8483e6b-2a83-4e06-90ea-af0a2a3e59d9",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Income not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ceacd686-fbef-4144-8ded-c0115cee9ad3",
      "documentation": "Description: This operation retrieves a single Income for the specified Income ID.<br />\r\n              Purpose: Provides access to the Income including annual amount and start date.",
      "method": "get",
      "endpoint": "api/Incomes/:id",
      "responses": [
        {
          "uuid": "5dfd358d-54b1-451f-bf3a-bda3ad2575b4",
          "body": "{\n  \"annualAmount\": {{faker 'random.float'}},\n  \"description\": \"\",\n  \"endDate\": \"{{faker 'date.recent' 365}}\",\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"incomeId\": {{faker 'random.number'}},\n  \"incomeTypeId\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"owner\": \"{{oneOf (array 'Client' 'CoClient')}}\",\n  \"startDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6d70818b-1680-4fa6-b130-8e7851d4355a",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "403be452-41dc-4127-974a-24262ec8c933",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Income data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4aa96f64-f921-44cd-9b05-734a098993a6",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Income.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fe14d5d1-9502-46e8-8625-9fef36a27fae",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Income not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9b63234d-830a-40e1-a712-50db63d44971",
      "documentation": "Description: The operation updates an Income.<br />\r\n              Purpose: Allows for complete replacement of an Income on a Fact Finder.",
      "method": "put",
      "endpoint": "api/Incomes/:id",
      "responses": [
        {
          "uuid": "c228a907-455c-4137-9aa2-3c8dcc7c2830",
          "body": "{\n  \"annualAmount\": {{faker 'random.float'}},\n  \"description\": \"\",\n  \"endDate\": \"{{faker 'date.recent' 365}}\",\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"incomeId\": {{faker 'random.number'}},\n  \"incomeTypeId\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"owner\": \"{{oneOf (array 'Client' 'CoClient')}}\",\n  \"startDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7145368e-c68e-42be-b40c-909355e98413",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fabc7d4d-3e1b-44a6-adcc-c96b1e068623",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Income data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cd52ed72-189b-44fe-a820-86e05ecc9451",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Income.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bd059561-4a75-4717-9d6e-4822483bca40",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Income not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "780909c0-28b9-4a8a-8e04-b04c44548372",
      "documentation": "Description: This operation retrieves all Liabilities for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Liabilities including owner and type.",
      "method": "get",
      "endpoint": "api/Liabilities",
      "responses": [
        {
          "uuid": "f911ce8b-bc61-48d9-816d-9dda03e58d02",
          "body": "{\n  \"liabilities\": [\n    {\n      \"balance\": {{faker 'random.float'}},\n      \"balanceAsOfDate\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"externalDestinationId\": \"\",\n      \"externalSourceId\": \"\",\n      \"externalSourceName\": \"\",\n      \"factFinderId\": {{faker 'random.number'}},\n      \"frequency\": {{faker 'random.number'}},\n      \"interestRate\": {{faker 'random.float'}},\n      \"lastUpdated\": \"{{faker 'date.recent' 365}}\",\n      \"liabilityId\": {{faker 'random.number'}},\n      \"liabilityType\": {{faker 'random.number'}},\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"loanDate\": \"{{faker 'date.recent' 365}}\",\n      \"originalPrincipal\": {{faker 'random.float'}},\n      \"owner\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n      \"payment\": {{faker 'random.float'}},\n      \"paymentType\": \"{{oneOf (array 'InterestOnly' 'PrincipalAndInterest' 'SetPrincipal' 'LastPeriod')}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "60d21512-08ea-405c-8590-fc0ff9f96855",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8279ede4-e90b-41c9-80df-f9f64ec765f1",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Liability data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7a8da0a9-dbd3-4002-a2c5-905a24b506a5",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Liability.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "894396a5-4ca8-4ec6-9e47-579ee9410fdd",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Liability not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "13e01593-2f2f-4b9a-ac97-b8edaa205cc5",
      "documentation": "Description: The operation creates a Liability.<br />\r\n              Purpose: Allows for creation of Liabilities on a Fact Finder.",
      "method": "post",
      "endpoint": "api/Liabilities",
      "responses": [
        {
          "uuid": "6dcd04e8-daee-4674-ad17-0905f03f164a",
          "body": "{\n  \"balance\": {{faker 'random.float'}},\n  \"balanceAsOfDate\": \"{{faker 'date.recent' 365}}\",\n  \"description\": \"\",\n  \"externalDestinationId\": \"\",\n  \"externalSourceId\": \"\",\n  \"externalSourceName\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"frequency\": {{faker 'random.number'}},\n  \"interestRate\": {{faker 'random.float'}},\n  \"lastUpdated\": \"{{faker 'date.recent' 365}}\",\n  \"liabilityId\": {{faker 'random.number'}},\n  \"liabilityType\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"loanDate\": \"{{faker 'date.recent' 365}}\",\n  \"originalPrincipal\": {{faker 'random.float'}},\n  \"owner\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n  \"payment\": {{faker 'random.float'}},\n  \"paymentType\": \"{{oneOf (array 'InterestOnly' 'PrincipalAndInterest' 'SetPrincipal' 'LastPeriod')}}\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "29a27565-a090-42f3-aac5-906c2287ed27",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fb6424f9-bf16-425c-a305-16b31fbd8ea5",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Liability data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "202ec6ca-c324-439c-bf17-150a2e17fc0f",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Liability.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "34094199-2800-4e88-ad1e-2c0d9bee8b54",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Liability not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5c66deac-75c3-46d7-943b-1abf7e7aa407",
      "documentation": "Description: The operation removes a Liability tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal of a Liability from a Fact Finder.",
      "method": "delete",
      "endpoint": "api/Liabilities/:id",
      "responses": [
        {
          "uuid": "26f323b3-a133-4a9a-a033-958ae72c57eb",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "db6a184c-4386-4865-8d79-901aa89b9020",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d81e2057-490f-4b99-9324-d7ad923ff36f",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Liability data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8a128089-b6f1-47bc-b372-4faa5049301d",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Liability.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fe41910a-46eb-4568-8dc2-0fc388fbc495",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Liability not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "741d3f4a-9da6-4a98-974e-46cdfaa9c5f5",
      "documentation": "Description: This operation retrieves a single Liability for the specified Liability ID.<br />\r\n              Purpose: Provides access to the Liability including owner and type.",
      "method": "get",
      "endpoint": "api/Liabilities/:id",
      "responses": [
        {
          "uuid": "9b4ebf0f-60ba-4f75-8e3f-d3755fd31e47",
          "body": "{\n  \"balance\": {{faker 'random.float'}},\n  \"balanceAsOfDate\": \"{{faker 'date.recent' 365}}\",\n  \"description\": \"\",\n  \"externalDestinationId\": \"\",\n  \"externalSourceId\": \"\",\n  \"externalSourceName\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"frequency\": {{faker 'random.number'}},\n  \"interestRate\": {{faker 'random.float'}},\n  \"lastUpdated\": \"{{faker 'date.recent' 365}}\",\n  \"liabilityId\": {{faker 'random.number'}},\n  \"liabilityType\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"loanDate\": \"{{faker 'date.recent' 365}}\",\n  \"originalPrincipal\": {{faker 'random.float'}},\n  \"owner\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n  \"payment\": {{faker 'random.float'}},\n  \"paymentType\": \"{{oneOf (array 'InterestOnly' 'PrincipalAndInterest' 'SetPrincipal' 'LastPeriod')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8de590f1-8dde-49b8-9bf7-731ffeba4863",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a48cb386-d0da-4c3e-a310-034be35acf02",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Liability data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "27f85dba-989f-4c74-8182-882413de75c4",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Liability.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "464e4e65-c97f-4691-a61f-27705e18f274",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Liability not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6530dcdd-b838-46de-8e50-dbdcc68ddaaf",
      "documentation": "Description: The operation updates a Liability.<br />\r\n              Purpose: Allows for complete replacement of a Liability on a Fact Finder.",
      "method": "put",
      "endpoint": "api/Liabilities/:id",
      "responses": [
        {
          "uuid": "84dce04c-24a4-401b-be07-7f78fe9679e7",
          "body": "{\n  \"balance\": {{faker 'random.float'}},\n  \"balanceAsOfDate\": \"{{faker 'date.recent' 365}}\",\n  \"description\": \"\",\n  \"externalDestinationId\": \"\",\n  \"externalSourceId\": \"\",\n  \"externalSourceName\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"frequency\": {{faker 'random.number'}},\n  \"interestRate\": {{faker 'random.float'}},\n  \"lastUpdated\": \"{{faker 'date.recent' 365}}\",\n  \"liabilityId\": {{faker 'random.number'}},\n  \"liabilityType\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"loanDate\": \"{{faker 'date.recent' 365}}\",\n  \"originalPrincipal\": {{faker 'random.float'}},\n  \"owner\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n  \"payment\": {{faker 'random.float'}},\n  \"paymentType\": \"{{oneOf (array 'InterestOnly' 'PrincipalAndInterest' 'SetPrincipal' 'LastPeriod')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7f239efd-8c07-4724-8f59-9b9969d191f1",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d435906e-daa7-4d87-bad1-fc86c31c9b5c",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Liability data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c9c17607-8409-44fc-a7a9-ac166b52fb66",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Liability.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fbe436d0-e53b-4cbf-91b2-3e23c2e35ae1",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Liability not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fb434ba3-d4a1-499c-8713-89dcd74492b6",
      "documentation": "Description: This operation retrieves all Liability Types for the specified country.<br />\r\n              Purpose: Provides access to the Liability Types including id and type description.",
      "method": "get",
      "endpoint": "api/LiabilityTypes",
      "responses": [
        {
          "uuid": "ccc5fe21-8747-4755-80e8-ff2bed976296",
          "body": "{\n  \"liabilityTypes\": [\n    {\n      \"id\": {{faker 'random.number'}},\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"name\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "990a43d2-a080-4837-a1d9-e261b5639381",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d4a2dad7-6e65-4efb-97fe-b07d7fcb7c16",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Liability Type not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "026484ae-3aa9-44ea-952c-25ba76816cf1",
      "documentation": "Description: This operation retrieves the Liability Type for the specified id.<br />\r\n              Purpose: Provides access to the Liability Types including id and type description.",
      "method": "get",
      "endpoint": "api/LiabilityTypes/:id",
      "responses": [
        {
          "uuid": "07b315eb-89a2-4914-ba26-760e821d3e14",
          "body": "{\n  \"id\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e7b0d252-fdc7-4548-b3a0-31af8987681e",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e43025d1-ef49-4f8e-854c-f87518f4efd6",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Liability Type not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4e8d53e9-d5db-46b7-9c18-f78a7b5aaae0",
      "documentation": "Description: This operation retrieves all Life Insurance Policies for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Life Insurance Policies including description and policy type.",
      "method": "get",
      "endpoint": "api/LifeInsurancePolicies",
      "responses": [
        {
          "uuid": "6a3046fe-d52c-4cd4-a94c-c52485b4bfbd",
          "body": "{\n  \"lifeInsurancePolicies\": [\n    {\n      \"beneficiary\": \"{{oneOf (array 'Client' 'CoClient' 'Dependent' 'Other')}}\",\n      \"beneficiaryDependentId\": {{faker 'random.number'}},\n      \"benefit\": {{faker 'random.float'}},\n      \"description\": \"\",\n      \"externalDestinationId\": \"\",\n      \"factFinderId\": {{faker 'random.number'}},\n      \"frequency\": {{faker 'random.number'}},\n      \"generalAccountMarketValue\": {{faker 'random.float'}},\n      \"insurancePolicyId\": {{faker 'random.number'}},\n      \"insured\": \"{{oneOf (array 'Client' 'CoClient' 'FirstToDie' 'SecondToDie' 'Other')}}\",\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"payer\": \"{{oneOf (array 'Client' 'CoClient' 'Joint' 'Other')}}\",\n      \"policyType\": {{faker 'random.number'}},\n      \"premium\": {{faker 'random.float'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "33da251f-0940-4df0-80e1-e53b2b3a319f",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "37d66178-2925-4217-8305-87f09f03c7df",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Life Insurance Policy data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f6222270-bfa0-4bc6-a551-9b834be614b2",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Life Insurance Policy.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9ccbb174-c412-4902-9927-6c8bb4ba04d4",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Life Insurance Policy not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9159c4d9-251c-4942-9181-6037e2813a66",
      "documentation": "Description: The operation creates a Life Insurance Policy.<br />\r\n              Purpose: Allows for creation of Life Insurance Policies on a Fact Finder.",
      "method": "post",
      "endpoint": "api/LifeInsurancePolicies",
      "responses": [
        {
          "uuid": "69c6c6e8-05b6-4b8e-a1a7-7af83f1fc585",
          "body": "{\n  \"beneficiary\": \"{{oneOf (array 'Client' 'CoClient' 'Dependent' 'Other')}}\",\n  \"beneficiaryDependentId\": {{faker 'random.number'}},\n  \"benefit\": {{faker 'random.float'}},\n  \"description\": \"\",\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"frequency\": {{faker 'random.number'}},\n  \"generalAccountMarketValue\": {{faker 'random.float'}},\n  \"insurancePolicyId\": {{faker 'random.number'}},\n  \"insured\": \"{{oneOf (array 'Client' 'CoClient' 'FirstToDie' 'SecondToDie' 'Other')}}\",\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"payer\": \"{{oneOf (array 'Client' 'CoClient' 'Joint' 'Other')}}\",\n  \"policyType\": {{faker 'random.number'}},\n  \"premium\": {{faker 'random.float'}}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "da4aabb2-5e9a-42bc-b958-befc64b38864",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9c4221d6-3abb-458f-b436-deb3fd729b1f",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Life Insurance Policy data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6bf22003-66d6-429c-bd81-77c8d08ff2e3",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Life Insurance Policy.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "90acce8a-3b71-45ee-a22d-32a8c0caf816",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Life Insurance Policy not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ea0dd491-4de2-4010-869c-04f842f0fd41",
      "documentation": "Description: The operation removes a Life Insurance Policy tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal of a Life Insurance Policy and associated subaccounts from a Fact Finder.",
      "method": "delete",
      "endpoint": "api/LifeInsurancePolicies/:id",
      "responses": [
        {
          "uuid": "6d178324-77a2-405e-933e-bf0f49c02103",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bcdec8c1-7f80-4801-b9a3-364111a8264a",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "69c388c1-a476-49fe-88e9-23afed30bae7",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Life Insurance Policy data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ce2649fd-2b81-49cf-b51d-d76d40e8a33f",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Life Insurance Policy.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d923686a-18ab-469d-b9d1-a4a0f19a4e55",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Life Insurance Policy not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b13476a6-cf75-4df8-a35d-d19c6023fdee",
      "documentation": "Description: This operation retrieves a single Life Insurance Policy for the specified Life Insurance Policy ID.<br />\r\n              Purpose: Provides access to the Life Insurance Policy including description and policy type.",
      "method": "get",
      "endpoint": "api/LifeInsurancePolicies/:id",
      "responses": [
        {
          "uuid": "42a43c0d-ca5b-41e0-856b-048fae00e761",
          "body": "{\n  \"beneficiary\": \"{{oneOf (array 'Client' 'CoClient' 'Dependent' 'Other')}}\",\n  \"beneficiaryDependentId\": {{faker 'random.number'}},\n  \"benefit\": {{faker 'random.float'}},\n  \"description\": \"\",\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"frequency\": {{faker 'random.number'}},\n  \"generalAccountMarketValue\": {{faker 'random.float'}},\n  \"insurancePolicyId\": {{faker 'random.number'}},\n  \"insured\": \"{{oneOf (array 'Client' 'CoClient' 'FirstToDie' 'SecondToDie' 'Other')}}\",\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"payer\": \"{{oneOf (array 'Client' 'CoClient' 'Joint' 'Other')}}\",\n  \"policyType\": {{faker 'random.number'}},\n  \"premium\": {{faker 'random.float'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f53cb1fd-9f79-42b9-9275-1b6c33cb325f",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "32947d79-3a94-4fea-a8d6-e088bef15b16",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Life Insurance Policy data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0bc629c3-a8e1-4775-b507-3ac5444e2999",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Life Insurance Policy.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "42a87880-fd6c-43b8-b395-10c90f99c369",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Life Insurance Policy not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "081d286f-0b02-49f1-a752-580856da039c",
      "documentation": "Description: The operation updates a Life Insurance Policy, deletes associated sub-accounts if the policy type changes.<br />\r\n              Purpose: Allows for complete replacement of a Life Insurance Policy on a Fact Finder.",
      "method": "put",
      "endpoint": "api/LifeInsurancePolicies/:id",
      "responses": [
        {
          "uuid": "47d3fe78-1754-43e7-954b-aa157aa9b51b",
          "body": "{\n  \"beneficiary\": \"{{oneOf (array 'Client' 'CoClient' 'Dependent' 'Other')}}\",\n  \"beneficiaryDependentId\": {{faker 'random.number'}},\n  \"benefit\": {{faker 'random.float'}},\n  \"description\": \"\",\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"frequency\": {{faker 'random.number'}},\n  \"generalAccountMarketValue\": {{faker 'random.float'}},\n  \"insurancePolicyId\": {{faker 'random.number'}},\n  \"insured\": \"{{oneOf (array 'Client' 'CoClient' 'FirstToDie' 'SecondToDie' 'Other')}}\",\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"payer\": \"{{oneOf (array 'Client' 'CoClient' 'Joint' 'Other')}}\",\n  \"policyType\": {{faker 'random.number'}},\n  \"premium\": {{faker 'random.float'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8039377c-6808-419f-abd9-e603fc2ec407",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0ce98be3-8ac0-4ee1-b1ad-aeac8567fbe8",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Life Insurance Policy data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "542efa56-e9bf-4281-8d90-f7f3a4d4b5a6",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Life Insurance Policy.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "33bb4f6c-c571-41d8-953c-133b14c318e7",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Life Insurance Policy not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5607e00c-c9c7-45dd-a7fe-0122fc2c3ead",
      "documentation": "Description: Get all the subaccounts for an existing Life Insurance Policy.<br />\r\n              Purpose: Provides access to all the Life Insurance Policy subaccounts.",
      "method": "get",
      "endpoint": "api/LifeInsurancePolicies/:lifeInsurancePolicyId/Subaccounts",
      "responses": [
        {
          "uuid": "baba16e9-2c25-481f-9c66-176c0fef9003",
          "body": "{\n  \"lifeInsurancePolicySubaccounts\": [\n    {\n      \"description\": \"\",\n      \"externalDestinationId\": \"\",\n      \"lifeInsurancePolicyId\": {{faker 'random.number'}},\n      \"lifeInsurancePolicySubaccountId\": {{faker 'random.number'}},\n      \"marketValue\": {{faker 'random.float'}},\n      \"symbol\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8ae62b90-1f66-47a3-a373-ecfbfb12bec9",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b162be77-00ab-440f-8bbe-dd3677737e5d",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Life Insurance Policy data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ba8ed2d0-af66-4b47-9e87-464284718849",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Life Insurance Policy.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "143620a3-3e90-4f81-8608-06a71604b03f",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Life Insurance Policy not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7e1de986-c842-422f-a28e-8edfc687f730",
      "documentation": "Description: Creates a subaccount and adds it to an existing Life Insurance Policy.<br />\r\n              Purpose: Allows for creation of subaccount on a Life Insurance Policy.",
      "method": "post",
      "endpoint": "api/LifeInsurancePolicies/:lifeInsurancePolicyId/Subaccounts",
      "responses": [
        {
          "uuid": "f47dda05-8889-453e-a384-6eb4f0167220",
          "body": "{\n  \"description\": \"\",\n  \"externalDestinationId\": \"\",\n  \"lifeInsurancePolicyId\": {{faker 'random.number'}},\n  \"lifeInsurancePolicySubaccountId\": {{faker 'random.number'}},\n  \"marketValue\": {{faker 'random.float'}},\n  \"symbol\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "33545759-7054-483c-8537-88db3aad4c7e",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a0300d83-8cb7-4d2f-8bff-c80145ba37c9",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Life Insurance Policy data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "76df3ea1-b9a0-4903-a23d-e2f0491b36ae",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Life Insurance Policy.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1d66ca3e-7660-4f2a-9caa-4c908ffce7b2",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Life Insurance Policy not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8f56d58d-d0fb-447d-aa53-42fd15b60cf7",
      "documentation": "Description: Deletes an existing Life Insurance Policy Subaccount for an existing Life Insurance Policy.<br />\r\n              Purpose: Allows for removal of a subaccount from a Life Insurance Policy.",
      "method": "delete",
      "endpoint": "api/LifeInsurancePolicies/:lifeInsurancePolicyId/Subaccounts/:id",
      "responses": [
        {
          "uuid": "c230f17a-8814-4c7d-9211-633c4475bc9d",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "28914235-c4bb-410c-bc90-154ce33e3984",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5ba8f652-2159-47de-a643-bc50783608a8",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Life Insurance Policy data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b6dbbee2-82a5-48cf-af33-c2b9abee84aa",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Life Insurance Policy.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3f4dd7a6-efec-451d-80e2-22e05a3306fc",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Life Insurance Policy Subaccount not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2e69fcb8-d29a-41c3-ab41-8521c8c3a883",
      "documentation": "Description: Get a specific subaccount for an existing Life Insurance Policy.<br />\r\n              Purpose: Provides access to the Life Insurance Policy subaccount.",
      "method": "get",
      "endpoint": "api/LifeInsurancePolicies/:lifeInsurancePolicyId/Subaccounts/:id",
      "responses": [
        {
          "uuid": "bc886110-90e7-43e0-a2e7-5d4554597101",
          "body": "{\n  \"description\": \"\",\n  \"externalDestinationId\": \"\",\n  \"lifeInsurancePolicyId\": {{faker 'random.number'}},\n  \"lifeInsurancePolicySubaccountId\": {{faker 'random.number'}},\n  \"marketValue\": {{faker 'random.float'}},\n  \"symbol\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a3e0d5dd-5459-424d-aaeb-aafd4f7e3e2e",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "930f56d3-84f6-4a60-95bd-fb9c6e854332",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Life Insurance Policy data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6a9e5a19-ca69-413b-8303-04f9d0aaf460",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Life Insurance Policy.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ade8f28d-f8e9-4a69-bedb-452df0ca2d84",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Life Insurance Policy Subaccount not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7edc2364-1547-4e18-86fe-c61ac6cdf7d3",
      "documentation": "Description: Updates an existing Life Insurance Policy Subaccount for an existing Life Insurance Policy.<br />\r\n              Purpose: Allows for complete replacement of a subaccount on a Life Insurance Policy.",
      "method": "put",
      "endpoint": "api/LifeInsurancePolicies/:lifeInsurancePolicyId/Subaccounts/:id",
      "responses": [
        {
          "uuid": "457c217a-fc96-4045-9de1-cf778680320c",
          "body": "{\n  \"description\": \"\",\n  \"externalDestinationId\": \"\",\n  \"marketValue\": {{faker 'random.float'}},\n  \"symbol\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9fb387a4-0385-471a-aa6b-776390470b14",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cb0606fb-8dc0-484d-b70c-82619bcd4d9f",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Life Insurance Policy data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c136e268-2155-4b6a-b399-180049fcedf4",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Life Insurance Policy.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9bfb7825-545d-4fb7-87dc-aafc7266d8d8",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Life Insurance Policy Subaccount not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f3bebc94-89b8-457a-b0e6-1261f374541a",
      "documentation": "Description: This operation retrieves all Life Insurance Policy Types for the specified country.<br />\r\n              Purpose: Provides access to the Life Insurance Policy Types including id and type description.",
      "method": "get",
      "endpoint": "api/LifeInsurancePolicyTypes",
      "responses": [
        {
          "uuid": "512f92a3-c8a5-4de5-9612-14556382fca8",
          "body": "{\n  \"insurancePolicyTypes\": [\n    {\n      \"id\": {{faker 'random.number'}},\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"name\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3a911125-b375-4e60-8f07-cc93104a2d99",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f997793f-5623-4aec-b737-87db8eefe923",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Life Insurance Policy Type not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a107a628-4c35-4060-bd75-0afb27d366b9",
      "documentation": "Description: This operation retrieves the Life Insurance Policy Type for the specified id.<br />\r\n              Purpose: Provides access to the Life Insurance Policy Types including id and type description.",
      "method": "get",
      "endpoint": "api/LifeInsurancePolicyTypes/:id",
      "responses": [
        {
          "uuid": "5d4b32ae-ee9f-4dea-844b-2766b4e9fdd8",
          "body": "{\n  \"id\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "18ce2d2a-48bc-4938-a781-e8b0feeebd69",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ba44f220-1d95-4f6c-9f3b-8e943d118a6e",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Life Insurance Policy Type not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7e8125e5-f819-419e-9fb6-6b5e5cfa53b1",
      "documentation": "Description: This operation retrieves all Lifestyle Asset Types for the specified country.<br />\r\n              Purpose: Provides access to the Lifestyle Asset Types including id and type description.",
      "method": "get",
      "endpoint": "api/LifestyleAssetTypes",
      "responses": [
        {
          "uuid": "cd0ba4f1-810e-4b98-beaa-d3a82c2f1de1",
          "body": "{\n  \"lifestyleAssetTypes\": [\n    {\n      \"id\": {{faker 'random.number'}},\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"name\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "72c88896-4962-4d30-b6e8-edc6a0798f3c",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3c744b19-b3e7-414c-aa6a-092c47d3adbe",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Lifestyle Asset Type not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0840cf9b-fe4c-434a-9f19-ac0810a9765c",
      "documentation": "Description: This operation retrieves the Lifestyle Asset Type for the specified id.<br />\r\n              Purpose: Provides access to the Lifestyle Asset Types including id and type description.",
      "method": "get",
      "endpoint": "api/LifestyleAssetTypes/:id",
      "responses": [
        {
          "uuid": "59b1cb17-a1c9-4b19-a639-9c29dd087f80",
          "body": "{\n  \"id\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d8d49871-aaf4-457a-be1e-735fcaf36206",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8c5b1e3a-6582-4f7d-84df-251c7fa0b434",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Lifestyle Asset Type not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f99750d5-a801-4d1b-bc75-e029ac45e374",
      "documentation": "Description: This operation retrieves all Lifestyle Assets for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Lifestyle Assets including description and market value.",
      "method": "get",
      "endpoint": "api/LifestyleAssets",
      "responses": [
        {
          "uuid": "93d2fac7-5ab7-4b48-90a8-5cff45bd8e08",
          "body": "{\n  \"lifestyleAssets\": [\n    {\n      \"description\": \"\",\n      \"externalDestinationId\": \"\",\n      \"factFinderId\": {{faker 'random.number'}},\n      \"lifestyleAssetId\": {{faker 'random.number'}},\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"marketValue\": {{faker 'random.float'}},\n      \"owner\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n      \"purchaseAmount\": {{faker 'random.float'}},\n      \"purchaseDate\": \"{{faker 'date.recent' 365}}\",\n      \"type\": {{faker 'random.number'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c43ac921-b11f-4f69-8e51-461e04ee07ca",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "062a28a8-0469-4d96-9e47-e63042daff9b",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Lifestyle Asset data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9d6b2b66-de0a-40d9-a70a-e8e29654252c",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Lifestyle Asset.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2cbd2604-6337-44df-9655-bb63b033f5fa",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Lifestyle Asset not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dfc8da9b-8799-43ab-b7ac-8cde26ddcc4a",
      "documentation": "Description: The operation creates a Lifestyle Asset.<br />\r\n              Purpose: Allows for creation of Lifestyle Assets on a Fact Finder.",
      "method": "post",
      "endpoint": "api/LifestyleAssets",
      "responses": [
        {
          "uuid": "8fa3b882-ac31-4947-ac37-2c5f57255b3e",
          "body": "{\n  \"description\": \"\",\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"lifestyleAssetId\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"marketValue\": {{faker 'random.float'}},\n  \"owner\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n  \"purchaseAmount\": {{faker 'random.float'}},\n  \"purchaseDate\": \"{{faker 'date.recent' 365}}\",\n  \"type\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bab6c39b-f5d0-47d1-8663-ed64e257c1eb",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "44d34317-96b2-4ae3-add2-334bf5ff8573",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Lifestyle Asset data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5f06e095-0919-4139-9537-855c352fd035",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Lifestyle Asset.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ff7ad080-9b57-41dc-9dd9-1d1a8ba58e95",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Lifestyle Asset not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "386e0af1-db69-481b-9e21-2906aa897f4c",
      "documentation": "Description: The operation removes a Lifestyle Asset tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal of a Lifestyle Asset from a Fact Finder.",
      "method": "delete",
      "endpoint": "api/LifestyleAssets/:id",
      "responses": [
        {
          "uuid": "70eff1f2-f919-4afb-871e-a8b164edcf10",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e080de93-36d8-40b9-847f-8be07bfc6a66",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c6313cac-9eea-4ae9-a593-ff585e51cdec",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Lifestyle Asset data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3cc90123-ac5d-4c53-aa34-f59768b617f5",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Lifestyle Asset.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0189731e-971c-4372-8654-d2759665b8ac",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Lifestyle Asset not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "51ab3dd3-b258-42ef-9e26-e1ed080f443d",
      "documentation": "Description: This operation retrieves a single Lifestyle Asset for the specified Lifestyle Asset ID.<br />\r\n              Purpose: Provides access to the Lifestyle Asset including description and market value.",
      "method": "get",
      "endpoint": "api/LifestyleAssets/:id",
      "responses": [
        {
          "uuid": "725176ca-56b7-46eb-b2a8-5e852a9d74d6",
          "body": "{\n  \"description\": \"\",\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"lifestyleAssetId\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"marketValue\": {{faker 'random.float'}},\n  \"owner\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n  \"purchaseAmount\": {{faker 'random.float'}},\n  \"purchaseDate\": \"{{faker 'date.recent' 365}}\",\n  \"type\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5d4f43a4-ea98-446b-b7c8-20588e8593cc",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9f18d40c-8989-406c-a1e4-c5774c266569",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Lifestyle Asset data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b3a71c26-7405-4365-b623-9a9699e76e7f",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Lifestyle Asset.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2d171b44-fef7-4484-9b2e-6264e3dba277",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Lifestyle Asset not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "50809a5d-838e-466f-ac21-478924faac69",
      "documentation": "Description: The operation updates a Lifestyle Asset.<br />\r\n              Purpose: Allows for complete replacement of a Lifestyle Asset on a Fact Finder.",
      "method": "put",
      "endpoint": "api/LifestyleAssets/:id",
      "responses": [
        {
          "uuid": "eae2a028-4f9e-4efb-a61a-da6670edb020",
          "body": "{\n  \"description\": \"\",\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"lifestyleAssetId\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"marketValue\": {{faker 'random.float'}},\n  \"owner\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n  \"purchaseAmount\": {{faker 'random.float'}},\n  \"purchaseDate\": \"{{faker 'date.recent' 365}}\",\n  \"type\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8e847c9d-7787-474e-bac3-c6d2463f97a4",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f3d25e45-85a4-40fe-b251-f956df199181",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Lifestyle Asset data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2d9b59e4-c403-45f7-8f56-c50cb18037ae",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Lifestyle Asset.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "49c00857-8ec3-4cf1-a6c3-09c140b4845e",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Lifestyle Asset not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "be03efeb-6883-46bc-bfd3-27c2e2fb386f",
      "documentation": "Description: This operation retrieves all Long Term Care Insurance Policies for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Long Term Care Insurance Policies including description and premium.",
      "method": "get",
      "endpoint": "api/LongTermCareInsurancePolicies",
      "responses": [
        {
          "uuid": "7ee3fad9-e38e-40e3-b49f-724f383afe30",
          "body": "{\n  \"longTermCareInsurancePolicies\": [\n    {\n      \"benefit\": {{faker 'random.float'}},\n      \"benefitFrequency\": {{faker 'random.number'}},\n      \"description\": \"\",\n      \"externalDestinationId\": \"\",\n      \"factFinderId\": {{faker 'random.number'}},\n      \"insurancePolicyId\": {{faker 'random.number'}},\n      \"insured\": \"{{oneOf (array 'Client' 'CoClient')}}\",\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"premium\": {{faker 'random.float'}},\n      \"premiumFrequency\": {{faker 'random.number'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "20398942-a6bb-4e82-99b0-5e1233319d4e",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d0a165a6-dad3-407c-b76a-ff04918e7dc5",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Long Term Care Insurance Policy data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dc193c63-48f3-4ad2-ad84-c7ebd4cd86c9",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Long Term Care Insurance Policy.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "466cb875-a4d8-406e-88b7-70173a8c9668",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Long Term Care Insurance Policy not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1d0e1568-1eb9-489f-ad16-1620e65e36e3",
      "documentation": "Description: The operation creates a Long Term Care Insurance Policy.<br />\r\n              Purpose: Allows for creation of Long Term Care Insurance Policies on a Fact Finder.",
      "method": "post",
      "endpoint": "api/LongTermCareInsurancePolicies",
      "responses": [
        {
          "uuid": "03985640-5688-42bc-b594-7b3e8e6c8a73",
          "body": "{\n  \"benefit\": {{faker 'random.float'}},\n  \"benefitFrequency\": {{faker 'random.number'}},\n  \"description\": \"\",\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"insurancePolicyId\": {{faker 'random.number'}},\n  \"insured\": \"{{oneOf (array 'Client' 'CoClient')}}\",\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"premium\": {{faker 'random.float'}},\n  \"premiumFrequency\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "73d42531-1f02-48a1-a660-cfa38bd7e8be",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a8663ede-a8c7-4a56-b309-d5cec0ebe65c",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Long Term Care Insurance Policy data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f93027ac-9417-4b39-9620-2680f18e266e",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Long Term Care Insurance Policy.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0ca3af35-b61b-45ce-b47b-66ab2883133f",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Long Term Care Insurance Policy not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0e6852c0-92d7-4b54-ab04-a6fd0d5b7d47",
      "documentation": "Description: The operation removes a Long Term Care Insurance Policy tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal of a Long Term Care Insurance Policy from a Fact Finder.",
      "method": "delete",
      "endpoint": "api/LongTermCareInsurancePolicies/:id",
      "responses": [
        {
          "uuid": "04bb2bf4-7303-4174-882f-df1930f56a84",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4a24928e-7bc4-4527-a721-62696bf65349",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e3278dfd-69c3-4828-8515-c19063454601",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Long Term Care Insurance Policy data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "30268ce3-d140-4943-8478-98ace8c71b3a",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Long Term Care Insurance Policy.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "212c9bae-d8b2-48b2-ac83-4757c45158fe",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Long Term Care Insurance Policy not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8a9680e6-9f04-46bd-9878-453ecc14e035",
      "documentation": "Description: This operation retrieves a single Long Term Care Insurance Policy for the specified Long Term Care Insurance Policy ID.<br />\r\n              Purpose: Provides access to the Long Term Care Insurance Policy including description and premium.",
      "method": "get",
      "endpoint": "api/LongTermCareInsurancePolicies/:id",
      "responses": [
        {
          "uuid": "97da2a9d-83b3-41e6-bb9c-fa4a73df5d64",
          "body": "{\n  \"benefit\": {{faker 'random.float'}},\n  \"benefitFrequency\": {{faker 'random.number'}},\n  \"description\": \"\",\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"insurancePolicyId\": {{faker 'random.number'}},\n  \"insured\": \"{{oneOf (array 'Client' 'CoClient')}}\",\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"premium\": {{faker 'random.float'}},\n  \"premiumFrequency\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "76f1d5d1-78b9-473e-997c-82c772e0083c",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "57aec680-1e60-44a7-84b9-7aed88fc3188",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Long Term Care Insurance Policy data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cf6d2f37-e81c-400d-982f-8aa8f82085f2",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Long Term Care Insurance Policy.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "930b6c31-f8a8-4f4d-a052-4fa37e26b6c0",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Long Term Care Insurance Policy not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3ce72c36-6dc9-463b-b51b-52083bd26d53",
      "documentation": "Description: The operation updates a Long Term Care Insurance Policy.<br />\r\n              Purpose: Allows for complete replacement of a Long Term Care Insurance Policy on a Fact Finder.",
      "method": "put",
      "endpoint": "api/LongTermCareInsurancePolicies/:id",
      "responses": [
        {
          "uuid": "b449f0da-8f91-407c-8d88-d8a5012912ca",
          "body": "{\n  \"benefit\": {{faker 'random.float'}},\n  \"benefitFrequency\": {{faker 'random.number'}},\n  \"description\": \"\",\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"insurancePolicyId\": {{faker 'random.number'}},\n  \"insured\": \"{{oneOf (array 'Client' 'CoClient')}}\",\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"premium\": {{faker 'random.float'}},\n  \"premiumFrequency\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "02312ffe-6295-4e5c-9978-cb4dbb478f01",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "78a93163-ee5b-48ad-9245-eaa3dac6d1fe",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Long Term Care Insurance Policy data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "153407ec-0788-48ae-92c9-3113ab81b03b",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Long Term Care Insurance Policy.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "94032681-5a57-402d-9d64-8f32e810253c",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Long Term Care Insurance Policy not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cb658107-075d-4923-ad13-316af68ac5c6",
      "documentation": "Description: This operation retrieves all Major Purchase Goal Types for the specified country.<br />\r\n              Purpose: Provides access to the Major Purchase Goal Types including id and type description.",
      "method": "get",
      "endpoint": "api/MajorPurchaseGoalTypes",
      "responses": [
        {
          "uuid": "a1654bc9-7353-453c-9000-02ab844f055a",
          "body": "{\n  \"majorPurchaseGoalTypes\": [\n    {\n      \"description\": \"\",\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"majorPurchaseGoalTypeId\": {{faker 'random.number'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f26fffc9-1fb8-41f8-8d5a-b27d7571292d",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7aa5d183-fea4-4119-b145-0e4ec5c6007d",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Major Purchase Goal Type not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7f085d11-bf41-45d5-921c-2849e77d54af",
      "documentation": "Description: This operation retrieves the Major Purchase Goal Type for the specified id.<br />\r\n              Purpose: Provides access to the Major Purchase Goal Types including id and type description.",
      "method": "get",
      "endpoint": "api/MajorPurchaseGoalTypes/:id",
      "responses": [
        {
          "uuid": "6cc37d02-92fb-48f6-a666-cd5661f6b591",
          "body": "{\n  \"description\": \"\",\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"majorPurchaseGoalTypeId\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "94f64a0b-4860-4dbb-8a12-20c20d890465",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2479c477-635e-49a4-910b-3e05bf7c36d3",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Major Purchase Goal Type not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d016b3a6-58e1-4090-a38c-438f2ebf12bd",
      "documentation": "Description: This operation retrieves all Major Purchases for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Major Purchases including description and amount.",
      "method": "get",
      "endpoint": "api/MajorPurchaseGoals",
      "responses": [
        {
          "uuid": "d7187148-2a27-4f15-b5fb-9de3cd29db22",
          "body": "{\n  \"majorPurchaseGoals\": [\n    {\n      \"amount\": {{faker 'random.float'}},\n      \"description\": \"\",\n      \"externalDestinationId\": \"\",\n      \"factFinderId\": {{faker 'random.number'}},\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"majorPurchaseGoalId\": {{faker 'random.number'}},\n      \"majorPurchaseGoalTypeId\": {{faker 'random.number'}},\n      \"member\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n      \"targetDate\": \"{{faker 'date.recent' 365}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1a5f782f-a71a-4340-a59b-c75593ec7f58",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "10236261-ed46-4e2d-9adf-cb0d90643e73",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Major Purchase data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e3d83ce5-cbca-4dea-9329-23aa768866d9",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Major Purchase.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d8ba8a32-3a1a-47d7-8679-6a3c3c39f655",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Major Purchase not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "209200d0-07f3-4ec1-9919-2fc65ae52aa9",
      "documentation": "Description: The operation creates a Major Purchase.<br />\r\n              Purpose: Allows for creation of Major Purchases on a Fact Finder.",
      "method": "post",
      "endpoint": "api/MajorPurchaseGoals",
      "responses": [
        {
          "uuid": "ca7692b7-d48c-40bb-8243-edb194867263",
          "body": "{\n  \"amount\": {{faker 'random.float'}},\n  \"description\": \"\",\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"majorPurchaseGoalId\": {{faker 'random.number'}},\n  \"majorPurchaseGoalTypeId\": {{faker 'random.number'}},\n  \"member\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n  \"targetDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2c2d607a-4fa6-43c1-8cdd-e169a8274cfa",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e0930a67-1eca-4036-9847-c584fcdfa710",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Major Purchase data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ffd8f28a-665c-4571-a35b-be573a43bba4",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Major Purchase.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0ce1c14e-d3a4-4356-a509-564bc386d882",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Major Purchase not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a601d5b5-4eb9-4c78-9a1f-4bd38b364289",
      "documentation": "Description: The operation removes a Major Purchase tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal of a Major Purchase from a Fact Finder.",
      "method": "delete",
      "endpoint": "api/MajorPurchaseGoals/:id",
      "responses": [
        {
          "uuid": "d8b113c7-9efe-4f40-8526-a244db3362c7",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "66492201-d45a-4153-9790-89813a7c09e1",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "973158e9-0beb-41e4-94e5-2069c8b7b146",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Major Purchase data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2efde1cc-a9dc-483f-a82e-5ae9f135f5fb",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Major Purchase.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e414274c-31eb-4c93-b7e7-a46694157e50",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Major Purchase not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "284409d8-04c9-4d03-82d6-cf3a78627005",
      "documentation": "Description: This operation retrieves a single Major Purchase for the specified Major Purchase ID.<br />\r\n              Purpose: Provides access to the Major Purchase including description and amount.",
      "method": "get",
      "endpoint": "api/MajorPurchaseGoals/:id",
      "responses": [
        {
          "uuid": "990dc32d-18de-4f1c-9e0d-9358a14555be",
          "body": "{\n  \"amount\": {{faker 'random.float'}},\n  \"description\": \"\",\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"majorPurchaseGoalId\": {{faker 'random.number'}},\n  \"majorPurchaseGoalTypeId\": {{faker 'random.number'}},\n  \"member\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n  \"targetDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a85446bc-9a9c-4e47-a02e-b717de326384",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c907dfa3-6065-4a1a-8fb3-ce9ab6b55b19",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Major Purchase data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "045c11b9-6447-45b9-80d0-a9ae612ad0e3",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Major Purchase.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "575b46b8-bf67-4f7c-9cc6-027824e49fa8",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Major Purchase not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "30d49c11-d158-4a7c-8eb2-1d9eee83a471",
      "documentation": "Description: The operation updates a Major Purchase.<br />\r\n              Purpose: Allows for complete replacement of a Major Purchase on a Fact Finder.",
      "method": "put",
      "endpoint": "api/MajorPurchaseGoals/:id",
      "responses": [
        {
          "uuid": "549dc5be-a909-45ef-8b28-d15934bc357d",
          "body": "{\n  \"amount\": {{faker 'random.float'}},\n  \"description\": \"\",\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"majorPurchaseGoalId\": {{faker 'random.number'}},\n  \"majorPurchaseGoalTypeId\": {{faker 'random.number'}},\n  \"member\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n  \"targetDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6c21e7a1-f5d7-4223-8446-02fb0f6cd025",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d4eef50b-894a-4c4a-97d9-178cb8fa0203",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Major Purchase data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f1a00e51-53b8-4495-9dd4-003a378f996c",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Major Purchase.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aa0b5958-2d77-4c73-8daa-02a410836d27",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Major Purchase not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8ec86f6e-8f68-4a5c-a411-4bc79b6ae8f2",
      "documentation": "Description: This operation retrieves all current Accounts for the specified Fact Finder ID, as well as\r\n                           all of the holdings and savings strategies belonging to those accounts.<br />\r\n              Purpose: Provides access to the Accounts in a Fact Finder as well as any sub-entities belonging to them.",
      "method": "get",
      "endpoint": "api/Presentation/Accounts",
      "responses": [
        {
          "uuid": "ffcc13b7-9ed1-4725-899b-80860840ece4",
          "body": "{\n  \"accounts\": [\n    {\n      \"accountId\": {{faker 'random.number'}},\n      \"accountType\": {{faker 'random.number'}},\n      \"description\": \"\",\n      \"externalDestinationId\": \"\",\n      \"externalSourceId\": \"\",\n      \"externalSourceName\": \"\",\n      \"factFinderId\": {{faker 'random.number'}},\n      \"holdings\": [\n        {\n          \"accountHoldingId\": {{faker 'random.number'}},\n          \"accountId\": {{faker 'random.number'}},\n          \"costBasis\": {{faker 'random.float'}},\n          \"cusip\": \"\",\n          \"description\": \"\",\n          \"externalDestinationId\": \"\",\n          \"links\": [\n            {\n              \"href\": \"\",\n              \"rel\": \"\"\n            }\n          ],\n          \"marketValue\": {{faker 'random.float'}},\n          \"symbol\": \"\",\n          \"valuationDate\": \"{{faker 'date.recent' 365}}\"\n        }\n      ],\n      \"lastUpdated\": \"{{faker 'date.recent' 365}}\",\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"marketValue\": {{faker 'random.float'}},\n      \"owner\": \"{{oneOf (array 'Client' 'CoClient' 'Joint' 'Dependent' 'Other')}}\",\n      \"ownerDependentId\": {{faker 'random.number'}},\n      \"savingsStrategies\": [\n        {\n          \"accountId\": {{faker 'random.number'}},\n          \"employerSavingsAmount\": {{faker 'random.float'}},\n          \"employerSavingsAmountType\": \"{{oneOf (array 'Dollar' 'Percent' 'Max')}}\",\n          \"endDate\": \"{{faker 'date.recent' 365}}\",\n          \"externalDestinationId\": \"\",\n          \"frequencyId\": {{faker 'random.number'}},\n          \"mandatoryAmount\": {{faker 'random.float'}},\n          \"mandatoryAmountType\": \"{{oneOf (array 'Dollar' 'Percent' 'Max')}}\",\n          \"postTaxSavingsAmount\": {{faker 'random.float'}},\n          \"postTaxSavingsAmountType\": \"{{oneOf (array 'Dollar' 'Percent' 'Max')}}\",\n          \"preTaxSavingsAmount\": {{faker 'random.float'}},\n          \"preTaxSavingsAmountType\": \"{{oneOf (array 'Dollar' 'Percent' 'Max')}}\",\n          \"savingsStrategyId\": {{faker 'random.number'}},\n          \"startDate\": \"{{faker 'date.recent' 365}}\"\n        }\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9acfe8f5-ba9c-4955-8dc7-ea29082c343b",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d8590dc4-2008-48e1-95ad-36b00337d08d",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Account data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "699183d1-5821-4d55-8d3d-5d9728f00913",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "94b68e03-3b61-40b6-a0e8-16d907724b9f",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Account not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8083e108-27d9-4fcc-b6a9-787a5cbf349b",
      "documentation": "Description: This operation retrieves owner values for the fact finder based on demographics data\r\n              Purpose: Provides the list of valid options for owner, student, beneficiary, etc.",
      "method": "get",
      "endpoint": "api/Presentation/Demographics/Owners",
      "responses": [
        {
          "uuid": "898c94cd-9b8f-4be0-b0e4-59aad7447fb4",
          "body": "{\n  \"owners\": [\n    {\n      \"displayName\": \"\",\n      \"owner\": \"\",\n      \"ownerDependentId\": {{faker 'random.number'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "394f76f4-43b9-4925-a464-3c2843a5ede6",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bbc5ccbf-660d-4700-9821-e1fc0d61a008",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Demographic information data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "31ae8b2e-1ca6-4535-acc0-69ec50244f1f",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Demographic information.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b4894f1a-0566-44b4-85fb-d568654588b4",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Fact Finder not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "93c430b7-bcad-4b71-9727-ad816941c426",
      "documentation": "Description: This operation retrieves all relationship types relevant to demographics.<br />\r\n              Purpose: Provides a list of relationship types organized by whether or not they can be defined as children.",
      "method": "get",
      "endpoint": "api/Presentation/Demographics/Relationships",
      "responses": [
        {
          "uuid": "3ac79b3c-fd77-4ac0-90e2-a2b2c173711b",
          "body": "{\n  \"relationshipTypes\": [\n    {\n      \"id\": {{faker 'random.number'}},\n      \"isChildType\": {{faker 'random.boolean'}},\n      \"relationshipType\": \"{{oneOf (array 'Son' 'Daughter' 'FosterSon' 'FosterDaughter' 'Grandson' 'Granddaughter' 'Nephew' 'Niece' 'MaleCousin' 'FemaleCousin' 'Father' 'Mother' 'Grandfather' 'Grandmother' 'Uncle' 'Aunt' 'Brother' 'Sister' 'SonInLaw' 'DaughterInLaw' 'MaleOther' 'FemaleOther')}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "de524ad6-7cbb-4393-93d8-e0f1e153f87a",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2165c99e-b805-4b5c-a813-b0af57946e0a",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Object not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c2e7f5d3-06a4-4338-b0e3-dd8f7353641c",
      "documentation": "Description: This operation retrieves all current Incomes for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Incomes in a Fact Finder, filtered by Incomes that are current.",
      "method": "get",
      "endpoint": "api/Presentation/Incomes",
      "responses": [
        {
          "uuid": "17ceeda5-cb66-4547-9eb2-11edeee2f53b",
          "body": "{\n  \"incomes\": [\n    {\n      \"annualAmount\": {{faker 'random.float'}},\n      \"description\": \"\",\n      \"endDate\": \"{{faker 'date.recent' 365}}\",\n      \"externalDestinationId\": \"\",\n      \"factFinderId\": {{faker 'random.number'}},\n      \"incomeId\": {{faker 'random.number'}},\n      \"incomeTypeId\": {{faker 'random.number'}},\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"owner\": \"{{oneOf (array 'Client' 'CoClient')}}\",\n      \"startDate\": \"{{faker 'date.recent' 365}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b757ea11-96fb-4af9-bc82-a7a320ef9a2e",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9a6cfd8e-16df-4e42-b4dd-f7360a0c6ed6",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Income data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4b7216ee-ab5b-4b5c-af75-8d7d9af174a9",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Income.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d30635ee-c66e-4600-97f6-ae9cced3ac5a",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Income not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b8e5d371-e685-4564-a336-b97670532e0f",
      "documentation": "Description: This operation retrieves all current Liabilities for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Liabilities in a Fact Finder, filtered by Liabilities that are current.",
      "method": "get",
      "endpoint": "api/Presentation/Liabilities",
      "responses": [
        {
          "uuid": "5f9ebd8d-4a66-4f61-bad6-c90921437303",
          "body": "{\n  \"liabilities\": [\n    {\n      \"balance\": {{faker 'random.float'}},\n      \"balanceAsOfDate\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"externalDestinationId\": \"\",\n      \"externalSourceId\": \"\",\n      \"externalSourceName\": \"\",\n      \"factFinderId\": {{faker 'random.number'}},\n      \"frequency\": {{faker 'random.number'}},\n      \"interestRate\": {{faker 'random.float'}},\n      \"lastUpdated\": \"{{faker 'date.recent' 365}}\",\n      \"liabilityId\": {{faker 'random.number'}},\n      \"liabilityType\": {{faker 'random.number'}},\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"loanDate\": \"{{faker 'date.recent' 365}}\",\n      \"originalPrincipal\": {{faker 'random.float'}},\n      \"owner\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n      \"payment\": {{faker 'random.float'}},\n      \"paymentType\": \"{{oneOf (array 'InterestOnly' 'PrincipalAndInterest' 'SetPrincipal' 'LastPeriod')}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "05959a07-5694-43c3-a052-726257d5add0",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dd3f6ad7-22d6-4d4f-9943-855db6d10f3c",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Liability data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "087cc71e-0a24-47ab-b78c-e913ba58c5a9",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Liability.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aa33e39d-4b9c-458e-a081-203c45be782b",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Liability not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "98e7afab-fd10-48c7-bf8e-4a61c05f6d78",
      "documentation": "Description: This operation retrieves all life insurance policies, including subaccounts if available, for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Life Insurance Policies in a Fact Finder.",
      "method": "get",
      "endpoint": "api/Presentation/LifeInsurancePolicies",
      "responses": [
        {
          "uuid": "0ea166fc-caa4-4420-9418-8ebe1da6b091",
          "body": "{\n  \"lifeInsurancePolicies\": [\n    {\n      \"beneficiary\": \"{{oneOf (array 'Client' 'CoClient' 'Dependent' 'Other')}}\",\n      \"beneficiaryDependentId\": {{faker 'random.number'}},\n      \"benefit\": {{faker 'random.float'}},\n      \"description\": \"\",\n      \"externalDestinationId\": \"\",\n      \"factFinderId\": {{faker 'random.number'}},\n      \"frequency\": {{faker 'random.number'}},\n      \"generalAccountMarketValue\": {{faker 'random.float'}},\n      \"insurancePolicyId\": {{faker 'random.number'}},\n      \"insured\": \"{{oneOf (array 'Client' 'CoClient' 'FirstToDie' 'SecondToDie' 'Other')}}\",\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"payer\": \"{{oneOf (array 'Client' 'CoClient' 'Joint' 'Other')}}\",\n      \"policyType\": {{faker 'random.number'}},\n      \"premium\": {{faker 'random.float'}},\n      \"subaccounts\": [\n        {\n          \"description\": \"\",\n          \"externalDestinationId\": \"\",\n          \"lifeInsurancePolicyId\": {{faker 'random.number'}},\n          \"lifeInsurancePolicySubaccountId\": {{faker 'random.number'}},\n          \"marketValue\": {{faker 'random.float'}},\n          \"symbol\": \"\"\n        }\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cbb55d1b-164b-46e8-8bc2-571fef6628e3",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c8044e21-158e-42c0-a1d5-02dd7e29cb88",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Life Insurance Policy data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "446a7d62-35f5-4a9c-a721-94eca33367c6",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Life Insurance Policy.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "098e9e49-7257-4554-9b19-42b60fd2ec6f",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Life Insurance Policy not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c26189b1-8aa7-446b-a027-8d78427a73e4",
      "documentation": "Description: This operation retrieves all future Defined Benefit Pensions for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Pensions in a Fact Finder, filtered by Pensions that are in the future.",
      "method": "get",
      "endpoint": "api/Presentation/Pensions",
      "responses": [
        {
          "uuid": "fb652e24-35ee-4b21-bc17-d86d3c204780",
          "body": "{\n  \"definedBenefitPensions\": [\n    {\n      \"definedBenefitPensionId\": {{faker 'random.number'}},\n      \"description\": \"\",\n      \"estimatedAmount\": {{faker 'random.float'}},\n      \"externalDestinationId\": \"\",\n      \"factFinderId\": {{faker 'random.number'}},\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"member\": \"{{oneOf (array 'Client' 'CoClient')}}\",\n      \"startDate\": \"{{faker 'date.recent' 365}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "38d7b123-4175-46c8-a465-c4abfeda454c",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "94bd73d8-fdc7-41ed-a3e3-89027971493a",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Defined Benefit Pension data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2094bd76-a294-4110-8cd7-d8243efe9069",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Defined Benefit Pension.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1e9f3621-aa9a-49eb-94b5-77b0cc8ded50",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Defined Benefit Pension not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fd737ec1-2688-4d95-9dd3-f7364aea5905",
      "documentation": "Description: This operation retrieves all Real Estate Assets for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Real Estate Assets including description and market value.",
      "method": "get",
      "endpoint": "api/RealEstateAssets",
      "responses": [
        {
          "uuid": "3cf10ae9-ba00-442d-83fc-8e5e84d30047",
          "body": "{\n  \"realEstateAssets\": [\n    {\n      \"description\": \"\",\n      \"externalDestinationId\": \"\",\n      \"factFinderId\": {{faker 'random.number'}},\n      \"frequency\": {{faker 'random.number'}},\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"marketValue\": {{faker 'random.float'}},\n      \"owner\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n      \"purchaseAmount\": {{faker 'random.float'}},\n      \"purchaseDate\": \"{{faker 'date.recent' 365}}\",\n      \"realEstateAssetId\": {{faker 'random.number'}},\n      \"rentalIncome\": {{faker 'random.float'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3dc9ff2f-fbc2-4550-ab7d-804cf753e5d9",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7403d938-6c3e-4463-9191-db42476517e2",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Real Estate Asset data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7cb78ebb-9ec9-4f16-bf0b-cd829505bbec",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Real Estate Asset.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cd5036de-42fb-48d4-81d5-e9ae4b530aa7",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Real Estate Asset not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "66c65080-a5cf-4b0c-a580-5870b4659a9f",
      "documentation": "Description: The operation creates a Real Estate Asset.<br />\r\n              Purpose: Allows for creation of Real Estate Assets on a Fact Finder.",
      "method": "post",
      "endpoint": "api/RealEstateAssets",
      "responses": [
        {
          "uuid": "79e5b116-25c5-4cf1-a203-868b29ba273a",
          "body": "{\n  \"description\": \"\",\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"frequency\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"marketValue\": {{faker 'random.float'}},\n  \"owner\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n  \"purchaseAmount\": {{faker 'random.float'}},\n  \"purchaseDate\": \"{{faker 'date.recent' 365}}\",\n  \"realEstateAssetId\": {{faker 'random.number'}},\n  \"rentalIncome\": {{faker 'random.float'}}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3a9b26a0-dd7d-4b39-8979-d6d672233eb9",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "44521083-aab5-4b39-8da9-e8b789a7054c",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Real Estate Asset data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dc52a7eb-6888-444b-9969-ba671f340f06",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Real Estate Asset.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3ad612a6-bca2-4511-b5f2-2d1e793bf0a1",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Real Estate Asset not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "98abe814-3197-452b-a520-eb9750f85979",
      "documentation": "Description: The operation removes a Real Estate Asset tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal of a Real Estate Asset from a Fact Finder.",
      "method": "delete",
      "endpoint": "api/RealEstateAssets/:id",
      "responses": [
        {
          "uuid": "7ed56c0f-1d52-4127-96e8-cd630828dc2a",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "12a70fbb-290d-45b2-903e-08e9f9ed7d43",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "54595491-ebe3-4494-8eb9-f3c42a6fce3f",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Real Estate Asset data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "753eb881-e9f2-47bf-a6e3-b3703df71ca0",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Real Estate Asset.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2b7b9648-2665-422c-a666-30d7c2bc1b86",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Real Estate Asset not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e0e163ee-a13f-4f76-aecc-754b709330a8",
      "documentation": "Description: This operation retrieves a single Real Estate Asset for the specified Real Estate Asset ID.<br />\r\n              Purpose: Provides access to the Real Estate Asset including description and market value.",
      "method": "get",
      "endpoint": "api/RealEstateAssets/:id",
      "responses": [
        {
          "uuid": "0a4a7bb8-f4b6-47b6-ae38-0e2db2367822",
          "body": "{\n  \"description\": \"\",\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"frequency\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"marketValue\": {{faker 'random.float'}},\n  \"owner\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n  \"purchaseAmount\": {{faker 'random.float'}},\n  \"purchaseDate\": \"{{faker 'date.recent' 365}}\",\n  \"realEstateAssetId\": {{faker 'random.number'}},\n  \"rentalIncome\": {{faker 'random.float'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a2f0f99f-9728-447d-8485-b00338363185",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "25c122a5-2597-4f78-800c-9556321c9cc5",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Real Estate Asset data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3074fc20-496a-4111-a0b8-39f05bd2fad0",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Real Estate Asset.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d837ab3b-34df-4e55-9bc6-55c7ee4a07cc",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Real Estate Asset not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bba7d21c-40cc-4baa-bd39-1e50f40aaed5",
      "documentation": "Description: The operation updates a Real Estate Asset.<br />\r\n              Purpose: Allows for complete replacement of a Real Estate Asset on a Fact Finder.",
      "method": "put",
      "endpoint": "api/RealEstateAssets/:id",
      "responses": [
        {
          "uuid": "4a361f70-8a1f-49d6-bd93-247ede5a361b",
          "body": "{\n  \"description\": \"\",\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"frequency\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"marketValue\": {{faker 'random.float'}},\n  \"owner\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n  \"purchaseAmount\": {{faker 'random.float'}},\n  \"purchaseDate\": \"{{faker 'date.recent' 365}}\",\n  \"realEstateAssetId\": {{faker 'random.number'}},\n  \"rentalIncome\": {{faker 'random.float'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b36d239e-6b57-4a40-8fde-5689b9127327",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f24371b9-a209-481e-aa7d-65670d2ad197",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Real Estate Asset data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f580d99c-54eb-4aae-aedf-1ac417809a8e",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Real Estate Asset.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "84d44039-0e71-4b83-8d14-40881b5d8255",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Real Estate Asset not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a7f36bd7-a626-449a-b328-84ccbb7fd5f2",
      "documentation": "Description: This operation retrieves all Retirement Goals for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Retirement Goals including retirement date.",
      "method": "get",
      "endpoint": "api/RetirementGoals",
      "responses": [
        {
          "uuid": "2016e4bf-82ae-4121-8ccf-52d7a001ac0b",
          "body": "{\n  \"retirementGoals\": [\n    {\n      \"externalDestinationId\": \"\",\n      \"factFinderId\": {{faker 'random.number'}},\n      \"head1RetirementDate\": \"{{faker 'date.recent' 365}}\",\n      \"head2RetirementDate\": \"{{faker 'date.recent' 365}}\",\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"retirementGoalId\": {{faker 'random.number'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dba33150-fca6-43ca-a3dc-4cdd6f5ba5f1",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c43f0c3f-6827-478d-81e7-7868d8bb7304",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Retirement Goal data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "67efff4e-bb72-43bf-9e52-d6141ddbdca1",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Retirement Goal.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "40d1e9da-81fc-42f1-9ecf-c8b1aa2d2c71",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Retirement Goal not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4a331dbf-06b6-491f-80d4-a1b6728b76c1",
      "documentation": "Description: The operation creates a Retirement Goal.<br />\r\n              Purpose: Allows for creation of Retirement Goals on a Fact Finder.",
      "method": "post",
      "endpoint": "api/RetirementGoals",
      "responses": [
        {
          "uuid": "de9c4b63-83b0-461d-93e6-20e9baa8b32f",
          "body": "{\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"head1RetirementDate\": \"{{faker 'date.recent' 365}}\",\n  \"head2RetirementDate\": \"{{faker 'date.recent' 365}}\",\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"retirementGoalId\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7eca7df8-b29b-4135-959a-767eb0628365",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7ce57ce8-f5be-4001-a236-82672eb079f8",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Retirement Goal data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e2eec0b1-9dd5-4aac-a45d-6f6d5059a462",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Retirement Goal.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e7ddaebd-1eec-48c9-aecd-c0cb0b6ae10d",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Retirement Goal not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "33492a79-fe9f-4ed2-86c6-183882ae661f",
      "documentation": "Description: The operation removes a Retirement Goal tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal of a Retirement Goal from a Fact Finder.",
      "method": "delete",
      "endpoint": "api/RetirementGoals/:id",
      "responses": [
        {
          "uuid": "4b2d3892-3877-4393-8159-b44a6c46c860",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "76f993a1-9faf-497d-8e2a-40e56ad13406",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "42c5be54-d571-4380-8b04-582b11d6409a",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Retirement Goal data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "09864c15-56e2-43dc-b964-a53243383494",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Retirement Goal.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "90edcd40-32e6-415b-9d29-ea36318acd1d",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Retirement Goal not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4d45d9cd-ec2f-4150-a9b8-0c139e9cb751",
      "documentation": "Description: This operation retrieves a single Retirement Goal for the specified Retirement Goal ID.<br />\r\n              Purpose: Provides access to the Retirement Goal including retirement date.",
      "method": "get",
      "endpoint": "api/RetirementGoals/:id",
      "responses": [
        {
          "uuid": "7a894264-2fc9-45cc-b648-b049c0d11007",
          "body": "{\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"head1RetirementDate\": \"{{faker 'date.recent' 365}}\",\n  \"head2RetirementDate\": \"{{faker 'date.recent' 365}}\",\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"retirementGoalId\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0441dc60-540f-4945-8938-6b9fb518b5d1",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5d819447-f91f-463b-9919-47caaa1769fd",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Retirement Goal data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "97ecc374-0db3-445d-bec1-b481cd960741",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Retirement Goal.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a22de90d-afe2-475a-8656-b167863d6ce6",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Retirement Goal not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d54e6e7c-6d4b-43d3-a62a-84ef289d63bd",
      "documentation": "Description: The operation updates a Retirement Goal.<br />\r\n              Purpose: Allows for complete replacement of a Retirement Goal on a Fact Finder.",
      "method": "put",
      "endpoint": "api/RetirementGoals/:id",
      "responses": [
        {
          "uuid": "d9c62607-7d4c-47ff-93d4-3866692619ae",
          "body": "{\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"head1RetirementDate\": \"{{faker 'date.recent' 365}}\",\n  \"head2RetirementDate\": \"{{faker 'date.recent' 365}}\",\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"retirementGoalId\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5973d543-efe4-4792-8b59-659ae5445353",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6cba06e6-843d-4aa5-b305-c5fa6b1c6d1e",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Retirement Goal data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8bf193f9-54cf-4e9a-b212-a59f8cf93247",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Retirement Goal.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "54099d97-da3e-463c-b913-2a8cabfdaeb9",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Retirement Goal not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8edf3876-d5a1-45f8-a787-fb474310822c",
      "documentation": "Description: This operation retrieves all Retirement Goal Expenses for the specified Retirement Goal ID.<br />\r\n              Purpose: Provides access to the Retirement Goal Expenses including description and amount.",
      "method": "get",
      "endpoint": "api/RetirementGoals/:retirementGoalId/Expenses",
      "responses": [
        {
          "uuid": "26d609d1-5c33-4d91-bb40-ace69aba2f7e",
          "body": "{\n  \"retirementExpenses\": [\n    {\n      \"amount\": {{faker 'random.float'}},\n      \"annualPeriod\": {{faker 'random.number'}},\n      \"description\": \"\",\n      \"endDate\": \"{{faker 'date.recent' 365}}\",\n      \"externalDestinationId\": \"\",\n      \"frequency\": {{faker 'random.number'}},\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"member\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n      \"retirementExpenseId\": {{faker 'random.number'}},\n      \"retirementGoalId\": {{faker 'random.number'}},\n      \"startDate\": \"{{faker 'date.recent' 365}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "52470a44-b2c3-406d-ba0d-6a40c01684fa",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "003cf386-670a-4f25-afec-c6576b81ac9c",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Retirement Goal Expense data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5179ff16-90e0-41b2-b711-0b0c4bb0e0ef",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Retirement Goal Expense.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5c9f6d52-e239-4a2e-b5cc-f091dcd4e3dc",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Retirement Goal Expense not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "57652b4e-f59a-4dac-a972-f83f71e8717b",
      "documentation": "Description: The operation creates a Retirement Goal Expense.<br />\r\n              Purpose: Allows for creation of Retirement Goal Expenses on a Fact Finder.",
      "method": "post",
      "endpoint": "api/RetirementGoals/:retirementGoalId/Expenses",
      "responses": [
        {
          "uuid": "eeababd0-87c9-4f40-b703-0a30d95f61fd",
          "body": "{\n  \"amount\": {{faker 'random.float'}},\n  \"annualPeriod\": {{faker 'random.number'}},\n  \"description\": \"\",\n  \"endDate\": \"{{faker 'date.recent' 365}}\",\n  \"externalDestinationId\": \"\",\n  \"frequency\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"member\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n  \"retirementExpenseId\": {{faker 'random.number'}},\n  \"retirementGoalId\": {{faker 'random.number'}},\n  \"startDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d223f90a-5fd2-43fd-be11-39b1d41fdbc8",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "636f73f8-b4cb-4880-8279-dafea6013e0a",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Retirement Goal Expense data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "60aef98e-f99f-4b64-ac6c-ec6646e902f8",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Retirement Goal Expense.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f3aab59c-6891-4fe9-96c7-36603f735a15",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Retirement Goal Expense not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "440b2bed-ea6f-4eb9-bdcc-882de4c12e6d",
      "documentation": "Description: The operation removes a Retirement Goal Expense tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal of a Retirement Goal Expense from a Fact Finder.",
      "method": "delete",
      "endpoint": "api/RetirementGoals/:retirementGoalId/Expenses/:id",
      "responses": [
        {
          "uuid": "e4902238-8590-47ff-a948-f5f475f30e2c",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "80972017-dc80-4aa1-a9e9-39cb563d55a9",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e5bae899-34bb-4b25-9ce4-3a4983d5e82c",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Retirement Goal Expense data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "92954101-2203-4405-abf5-8170f65b62ee",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Retirement Goal Expense.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "43bbb0c0-cef0-43c4-b606-a9086b0d975a",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Retirement Goal Expense not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7d128986-1edc-4f1c-987b-a8d0257ed2c2",
      "documentation": "Description: This operation retrieves a single Retirement Goal Expense for the specified Retirement Goal Expense ID.<br />\r\n              Purpose: Provides access to the Retirement Goal Expense including description and amount.",
      "method": "get",
      "endpoint": "api/RetirementGoals/:retirementGoalId/Expenses/:id",
      "responses": [
        {
          "uuid": "66bbde8e-8975-476a-8bf3-2bce22cdf974",
          "body": "{\n  \"amount\": {{faker 'random.float'}},\n  \"annualPeriod\": {{faker 'random.number'}},\n  \"description\": \"\",\n  \"endDate\": \"{{faker 'date.recent' 365}}\",\n  \"externalDestinationId\": \"\",\n  \"frequency\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"member\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n  \"retirementExpenseId\": {{faker 'random.number'}},\n  \"retirementGoalId\": {{faker 'random.number'}},\n  \"startDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f78789f5-8491-4821-81e6-bb92551cbb9a",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b7172054-31a0-4384-8f9d-b0912217ccd1",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Retirement Goal Expense data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a4980c6e-fbcb-4a62-8029-8a71cbaba53a",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Retirement Goal Expense.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "537e24ab-6f40-4436-b345-9b27583be612",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Retirement Goal Expense not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2614574e-5bc5-47f6-bac8-2bbf23e4a9aa",
      "documentation": "Description: The operation updates a Retirement Goal Expense.<br />\r\n              Purpose: Allows for complete replacement of a Retirement Goal Expense on a Fact Finder.",
      "method": "put",
      "endpoint": "api/RetirementGoals/:retirementGoalId/Expenses/:id",
      "responses": [
        {
          "uuid": "99caf44d-5533-4854-aa3c-b41991a91ca4",
          "body": "{\n  \"amount\": {{faker 'random.float'}},\n  \"annualPeriod\": {{faker 'random.number'}},\n  \"description\": \"\",\n  \"endDate\": \"{{faker 'date.recent' 365}}\",\n  \"externalDestinationId\": \"\",\n  \"frequency\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"member\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n  \"retirementExpenseId\": {{faker 'random.number'}},\n  \"retirementGoalId\": {{faker 'random.number'}},\n  \"startDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f31310c3-94d3-4a7b-b90c-aa6dea22c7fe",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "97bd57eb-4159-4ecd-bb76-5be7b7fce7d8",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Retirement Goal Expense data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "23309bb4-b40d-4076-8da8-ab4e3da45906",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Retirement Goal Expense.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6391ff33-2f78-4b8c-a3f5-0ef01d477e95",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Retirement Goal Expense not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "77f6cf47-3716-4aab-a421-981cd077829d",
      "documentation": "Description: This operation retrieves information statistics for the current service.<br />\r\n              Purpose: Provides access to Service Information.",
      "method": "get",
      "endpoint": "api/ServiceInformation",
      "responses": [
        {
          "uuid": "6b329365-cec0-4da4-9698-0c41afb9ec75",
          "body": "{\n  \"name\": \"\",\n  \"schemaVersion\": {{faker 'random.number'}},\n  \"serviceVersion\": \"\",\n  \"status\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d9cf1380-48a5-4121-a3e0-394df788744c",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Object not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5f630cd8-a932-4190-8466-74117acb65a2",
      "documentation": "Description: This operation retrieves all States and Provinces for the specified country.<br />\r\n              Purpose: Provides access to the States and Provinces.",
      "method": "get",
      "endpoint": "api/StatesProvinces",
      "responses": [
        {
          "uuid": "e50b9cf5-304a-4f28-8537-9702db85128e",
          "body": "{\n  \"statesProvinces\": [\n    {\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"stateProvinceId\": {{faker 'random.number'}},\n      \"stateProvinceName\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ce0cecd4-2eb2-428a-af19-e9458c80a401",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "665c6b7f-39ed-47ed-b07f-a9ab37761d2d",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "State or Province not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f8a2092c-42b2-47ad-ad2c-d362c338facf",
      "documentation": "Description: This operation retrieves the States and Provinces for the specified id.<br />\r\n              Purpose: Provides access to the States and Provinces.",
      "method": "get",
      "endpoint": "api/StatesProvinces/:id",
      "responses": [
        {
          "uuid": "ee702767-6c2c-4166-b6e9-76e9209cb470",
          "body": "{\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"stateProvinceId\": {{faker 'random.number'}},\n  \"stateProvinceName\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0140388c-46d9-4197-bad7-932ef4bfa595",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7a45362f-f1de-499b-b238-3a45365535b7",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "State or Province not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}