{
  "uuid": "20115af6-14ba-4be8-ba52-8e2e8448148b",
  "lastMigration": 19,
  "name": "Advicent.FactFinderService",
  "endpointPrefix": "factfinder",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "d9f32ad4-b30c-4f2a-ad07-0e3f063b3de0",
      "documentation": "Description: This operation retrieves all Account Types for the specified country.<br />\r\n              Purpose: Provides access to the Account Types including id and type description.",
      "method": "get",
      "endpoint": "api/AccountTypes",
      "responses": [
        {
          "uuid": "bc0b2713-a122-468f-bccd-a7b92fa68776",
          "body": "{\n  \"accountTypes\": [\n    {\n      \"allowedSavingsTypes\": [\n        {\n          \"typeName\": \"{{oneOf (array 'PostTaxSavings' 'PreTaxSavings' 'EmployerSavings' 'MandatorySavings')}}\",\n          \"validAmountTypes\": [\n            \"{{oneOf (array 'Dollar' 'Percent' 'Max')}}\"\n          ]\n        }\n      ],\n      \"id\": {{faker 'random.number'}},\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"name\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4c6f25bb-659e-46b5-9f87-aa7b36c616fe",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "104e447a-6a4f-4854-92a6-e75e6c8093ab",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Account Type not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "de132d11-0dd8-4a3a-8c6d-e44ecf0f201e",
      "documentation": "Description: This operation retrieves all Account Types for the specified id.<br />\r\n              Purpose: Provides access to the Account Types including id and type description.",
      "method": "get",
      "endpoint": "api/AccountTypes/:id",
      "responses": [
        {
          "uuid": "d2d108b2-a65d-446f-b3de-85e13201442a",
          "body": "{\n  \"allowedSavingsTypes\": [\n    {\n      \"typeName\": \"{{oneOf (array 'PostTaxSavings' 'PreTaxSavings' 'EmployerSavings' 'MandatorySavings')}}\",\n      \"validAmountTypes\": [\n        \"{{oneOf (array 'Dollar' 'Percent' 'Max')}}\"\n      ]\n    }\n  ],\n  \"id\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "65dac2dd-513a-494a-8a09-e563992d8b5d",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d6b5fa78-9c80-40fb-87dd-3a2179597025",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Account Type not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cb2d5018-9821-485d-85a8-e2e3297da98d",
      "documentation": "Description: This operation retrieves all Accounts for the specified Fact Finder ID and/or external source ID.<br />\r\n              Purpose: Provides access to the Account information including description and market value.",
      "method": "get",
      "endpoint": "api/Accounts",
      "responses": [
        {
          "uuid": "d6e45824-1445-499c-a894-5f4ffde0fbe4",
          "body": "{\n  \"accounts\": [\n    {\n      \"accountId\": {{faker 'random.number'}},\n      \"accountType\": {{faker 'random.number'}},\n      \"description\": \"\",\n      \"externalDestinationId\": \"\",\n      \"externalSourceId\": \"\",\n      \"externalSourceName\": \"\",\n      \"factFinderId\": {{faker 'random.number'}},\n      \"lastUpdated\": \"{{faker 'date.recent' 365}}\",\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"marketValue\": {{faker 'random.float'}},\n      \"owner\": \"{{oneOf (array 'Client' 'CoClient' 'Joint' 'Dependent' 'Other')}}\",\n      \"ownerDependentId\": {{faker 'random.number'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4eef7cfc-b7b0-4889-940c-b709ed81efee",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "038bceab-e12c-4ea2-b4a1-978b7e7193d9",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Account data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c754b4aa-3bfb-438c-97c5-34712b790720",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e507c732-6681-489b-bf71-304c7127d004",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Account not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "060abada-9a8d-43ee-bc30-0e28e3e171b4",
      "documentation": "Description: The operation creates an Account.<br />\r\n              Purpose: Allows for creation of Accounts on a Fact Finder.",
      "method": "post",
      "endpoint": "api/Accounts",
      "responses": [
        {
          "uuid": "1439b86f-ab2c-4261-b13f-8e36ea282517",
          "body": "{\n  \"accountId\": {{faker 'random.number'}},\n  \"accountType\": {{faker 'random.number'}},\n  \"description\": \"\",\n  \"externalDestinationId\": \"\",\n  \"externalSourceId\": \"\",\n  \"externalSourceName\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"lastUpdated\": \"{{faker 'date.recent' 365}}\",\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"marketValue\": {{faker 'random.float'}},\n  \"owner\": \"{{oneOf (array 'Client' 'CoClient' 'Joint' 'Dependent' 'Other')}}\",\n  \"ownerDependentId\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c95424d7-9ebb-4b47-bd38-b822289ffa0a",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eb8201f0-f687-4081-934f-268f79827f80",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Account data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "da83e3bb-ad34-4e00-aa55-03f56e761b4f",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e1c5613b-527b-4c6c-9a0c-ef0596939dc5",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Account not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f9581a4c-1f5f-4b38-af9f-dbe5b7f9b2a6",
      "documentation": "Retrieves all holdings in the specified Account.",
      "method": "get",
      "endpoint": "api/Accounts/:accountId/Holdings",
      "responses": [
        {
          "uuid": "dfb91dd2-45a1-433c-926c-5b974029e4a9",
          "body": "{\n  \"holdings\": [\n    {\n      \"accountHoldingId\": {{faker 'random.number'}},\n      \"accountId\": {{faker 'random.number'}},\n      \"costBasis\": {{faker 'random.float'}},\n      \"cusip\": \"\",\n      \"description\": \"\",\n      \"externalDestinationId\": \"\",\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"marketValue\": {{faker 'random.float'}},\n      \"symbol\": \"\",\n      \"valuationDate\": \"{{faker 'date.recent' 365}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "35452399-c74a-4c1a-ad88-5859ed7377bb",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6bffd85b-4b2e-42c5-88b1-11fd7606c90c",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Account data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9a48d824-723e-4afe-b71c-0c1f105f730d",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1edb591f-8263-45d0-b581-5c5cc8f8284b",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Account not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "436f3df2-19fe-4287-bbdf-41a523efd8c9",
      "documentation": "Creates a holding and adds it to an existing Account.",
      "method": "post",
      "endpoint": "api/Accounts/:accountId/Holdings",
      "responses": [
        {
          "uuid": "a2d60970-10af-4a32-b944-da6efc18dbce",
          "body": "{\n  \"accountHoldingId\": {{faker 'random.number'}},\n  \"accountId\": {{faker 'random.number'}},\n  \"costBasis\": {{faker 'random.float'}},\n  \"cusip\": \"\",\n  \"description\": \"\",\n  \"externalDestinationId\": \"\",\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"marketValue\": {{faker 'random.float'}},\n  \"symbol\": \"\",\n  \"valuationDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "48ee49cf-db05-4916-8443-01a655c91a42",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "49bc76ad-6a24-4a93-a3e4-caa5fc18d3f8",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Account data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e7740bf0-e61a-4e73-8349-3f22406395c0",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c9f3c35d-018d-4d73-9c2b-c856d105e146",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Account not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9c733c1a-7f8a-4efe-979c-79bce14b7655",
      "documentation": "Updates all holdings associated with an account",
      "method": "put",
      "endpoint": "api/Accounts/:accountId/Holdings",
      "responses": [
        {
          "uuid": "e0d16287-3a4a-4a91-bcb3-b0b837a89384",
          "body": "{\n  \"holdings\": [\n    {\n      \"accountHoldingId\": {{faker 'random.number'}},\n      \"accountId\": {{faker 'random.number'}},\n      \"costBasis\": {{faker 'random.float'}},\n      \"cusip\": \"\",\n      \"description\": \"\",\n      \"externalDestinationId\": \"\",\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"marketValue\": {{faker 'random.float'}},\n      \"symbol\": \"\",\n      \"valuationDate\": \"{{faker 'date.recent' 365}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7085a8ba-5bc6-45bb-8010-da9d8b6a1cb2",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bc4f75bd-62fb-4d6e-8255-b91528dbd8a8",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Account data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b46b724e-a6d5-4cc4-9084-48a98cb9e3da",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "07c237e6-e67d-44ba-9f03-49eb8ff26a22",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Account not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6d161bd6-08e2-4b88-bb8a-ab3d021f6341",
      "documentation": "Description: This operation deletes a single Account Holding for the specified Account Holding ID and Account ID.<br />\r\n              Purpose: Provides the ability to remove individual holdings from a specified Account.",
      "method": "delete",
      "endpoint": "api/Accounts/:accountId/Holdings/:id",
      "responses": [
        {
          "uuid": "30896bf0-228b-4aba-b7de-a50153925fd5",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3d536d14-395a-4c21-bfc5-8497a6efddb8",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bbb7a1ea-2f78-4ffa-9b63-1531ecf02172",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Account data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b8689acd-b517-41f0-8d40-e5effc0a4761",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3ebb7a5f-42e6-4cbc-ba6f-2924775e9070",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Account not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "160378cf-63e4-468a-ae90-aade2d63991e",
      "documentation": "Description: This operation retrieves a single Account Holding for the specified Account Holding ID and Account ID.<br />\r\n              Purpose: Provides access to the Account Holding information including description and market value.",
      "method": "get",
      "endpoint": "api/Accounts/:accountId/Holdings/:id",
      "responses": [
        {
          "uuid": "adcf004a-7cb8-4858-aef3-f54565618762",
          "body": "{\n  \"accountHoldingId\": {{faker 'random.number'}},\n  \"accountId\": {{faker 'random.number'}},\n  \"costBasis\": {{faker 'random.float'}},\n  \"cusip\": \"\",\n  \"description\": \"\",\n  \"externalDestinationId\": \"\",\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"marketValue\": {{faker 'random.float'}},\n  \"symbol\": \"\",\n  \"valuationDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "18a68a33-48ce-40e5-a097-329f6fc28d68",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cb32df99-2454-4605-a1d1-c1e3e7017ca1",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Account data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "88275ffc-ce0b-4172-9d68-4c5e701f6824",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "91dbf2ef-1695-48e2-bc52-bd16a8a95b3f",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Account not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "02df7190-828f-4770-a3c4-2ab0e4dc2ed9",
      "documentation": "Updates a holding associated with an account",
      "method": "put",
      "endpoint": "api/Accounts/:accountId/Holdings/:id",
      "responses": [
        {
          "uuid": "087f11ad-9852-4db4-b275-dfc7cd68da7d",
          "body": "{\n  \"costBasis\": {{faker 'random.float'}},\n  \"cusip\": \"\",\n  \"description\": \"\",\n  \"externalDestinationId\": \"\",\n  \"marketValue\": {{faker 'random.float'}},\n  \"symbol\": \"\",\n  \"valuationDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "078b1706-0c5b-476b-a814-accdd845ae05",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d72c9f12-edf4-4768-bfc0-a47fef9947f9",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Account data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "988c249f-2a30-4601-80c0-6d86c2425366",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "354cadec-48e5-40ca-92d3-626fdcd00f29",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Account not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1c9a9627-79f8-44f2-9cfa-e30400ea7999",
      "documentation": "Deletes all savings strategies tied to an account",
      "method": "delete",
      "endpoint": "api/Accounts/:accountId/SavingsStrategies",
      "responses": [
        {
          "uuid": "522cc06d-a34e-4a34-95b5-2c312a11eebb",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "33ad4913-13c4-416f-b0a9-059d40e776b5",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "90280270-c306-403e-a657-c71d3d353359",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Account data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c8076543-9979-45f9-bc90-5bc779a0358e",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5948f20f-c5a0-432d-92b1-dc08b136edb9",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Account not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "793cf867-91a7-471c-a199-b3859440dbfc",
      "documentation": "Get all of the savings strategies for a specific account",
      "method": "get",
      "endpoint": "api/Accounts/:accountId/SavingsStrategies",
      "responses": [
        {
          "uuid": "e5e6b416-e3e9-4a0a-8e5c-464ef0a642b3",
          "body": "{\n  \"savingsStrategies\": [\n    {\n      \"accountId\": {{faker 'random.number'}},\n      \"employerSavingsAmount\": {{faker 'random.float'}},\n      \"employerSavingsAmountType\": \"{{oneOf (array 'Dollar' 'Percent' 'Max')}}\",\n      \"endDate\": \"{{faker 'date.recent' 365}}\",\n      \"externalDestinationId\": \"\",\n      \"frequencyId\": {{faker 'random.number'}},\n      \"mandatoryAmount\": {{faker 'random.float'}},\n      \"mandatoryAmountType\": \"{{oneOf (array 'Dollar' 'Percent' 'Max')}}\",\n      \"postTaxSavingsAmount\": {{faker 'random.float'}},\n      \"postTaxSavingsAmountType\": \"{{oneOf (array 'Dollar' 'Percent' 'Max')}}\",\n      \"preTaxSavingsAmount\": {{faker 'random.float'}},\n      \"preTaxSavingsAmountType\": \"{{oneOf (array 'Dollar' 'Percent' 'Max')}}\",\n      \"savingsStrategyId\": {{faker 'random.number'}},\n      \"startDate\": \"{{faker 'date.recent' 365}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7f3798d1-42f8-4c42-bb28-97ec027ff07f",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fcf53616-74e9-42b2-b21d-39ba21abad07",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Account data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "efca1f69-e561-449a-945a-62a19ffda647",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "350f2686-6974-4258-a887-cdd4f44d59f8",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Account not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "67e942d6-4844-46f3-9385-b40870cc630d",
      "documentation": "Creates a savings strategy on a specific account",
      "method": "post",
      "endpoint": "api/Accounts/:accountId/SavingsStrategies",
      "responses": [
        {
          "uuid": "3d232c15-51f8-45f7-8ae1-deb38c3707cc",
          "body": "{\n  \"accountId\": {{faker 'random.number'}},\n  \"employerSavingsAmount\": {{faker 'random.float'}},\n  \"employerSavingsAmountType\": \"{{oneOf (array 'Dollar' 'Percent' 'Max')}}\",\n  \"endDate\": \"{{faker 'date.recent' 365}}\",\n  \"externalDestinationId\": \"\",\n  \"frequencyId\": {{faker 'random.number'}},\n  \"mandatoryAmount\": {{faker 'random.float'}},\n  \"mandatoryAmountType\": \"{{oneOf (array 'Dollar' 'Percent' 'Max')}}\",\n  \"postTaxSavingsAmount\": {{faker 'random.float'}},\n  \"postTaxSavingsAmountType\": \"{{oneOf (array 'Dollar' 'Percent' 'Max')}}\",\n  \"preTaxSavingsAmount\": {{faker 'random.float'}},\n  \"preTaxSavingsAmountType\": \"{{oneOf (array 'Dollar' 'Percent' 'Max')}}\",\n  \"savingsStrategyId\": {{faker 'random.number'}},\n  \"startDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8ad314f8-fb2c-4d90-b158-bf9dc49bb763",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9797d837-93b3-4b6d-a366-548151593cd2",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Account data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d72467ad-4a43-48ac-91e6-ba96f8938eba",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7e4bf788-6e0c-4d55-a7a7-a6c761dcd1ae",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Account not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3cac23b6-13bc-4221-9396-3cd61f541dec",
      "documentation": "Deletes a specific savings strategy",
      "method": "delete",
      "endpoint": "api/Accounts/:accountId/SavingsStrategies/:id",
      "responses": [
        {
          "uuid": "aad574a0-fa5e-4e6d-8350-fc963bd563af",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d2063750-7678-4c49-9c90-2468901ee0a2",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "143ae313-aac0-4159-9b6b-d5a99a4d2702",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Account data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8838fb3a-e8dd-4103-86aa-a470fb50c132",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "98274485-4022-4f6c-9aa4-3a7ca586e1d3",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Account not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "90837e19-cebb-4861-b334-1fed44b62fb0",
      "documentation": "Get a specific savings strategy for an account",
      "method": "get",
      "endpoint": "api/Accounts/:accountId/SavingsStrategies/:id",
      "responses": [
        {
          "uuid": "2965cca0-cb89-4f40-97c7-e53566e70f3b",
          "body": "{\n  \"accountId\": {{faker 'random.number'}},\n  \"employerSavingsAmount\": {{faker 'random.float'}},\n  \"employerSavingsAmountType\": \"{{oneOf (array 'Dollar' 'Percent' 'Max')}}\",\n  \"endDate\": \"{{faker 'date.recent' 365}}\",\n  \"externalDestinationId\": \"\",\n  \"frequencyId\": {{faker 'random.number'}},\n  \"mandatoryAmount\": {{faker 'random.float'}},\n  \"mandatoryAmountType\": \"{{oneOf (array 'Dollar' 'Percent' 'Max')}}\",\n  \"postTaxSavingsAmount\": {{faker 'random.float'}},\n  \"postTaxSavingsAmountType\": \"{{oneOf (array 'Dollar' 'Percent' 'Max')}}\",\n  \"preTaxSavingsAmount\": {{faker 'random.float'}},\n  \"preTaxSavingsAmountType\": \"{{oneOf (array 'Dollar' 'Percent' 'Max')}}\",\n  \"savingsStrategyId\": {{faker 'random.number'}},\n  \"startDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "37b406fb-a9d5-40b2-98d5-96919513ef3e",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "26df819b-c38a-4695-afbc-6e7c3c9a6fe5",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Account data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8ba9de08-7bf0-4776-9478-cdeb76cf1b33",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "05969bb5-bc8f-4d4c-82eb-faebdbc62450",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Account not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9d49f06d-d595-4a83-8d7e-e6b5dc9b9f19",
      "documentation": "Updates a specific savings strategy",
      "method": "put",
      "endpoint": "api/Accounts/:accountId/SavingsStrategies/:id",
      "responses": [
        {
          "uuid": "0aed10fd-fff8-4508-b314-3b4e104a6e59",
          "body": "{\n  \"accountId\": {{faker 'random.number'}},\n  \"employerSavingsAmount\": {{faker 'random.float'}},\n  \"employerSavingsAmountType\": \"{{oneOf (array 'Dollar' 'Percent' 'Max')}}\",\n  \"endDate\": \"{{faker 'date.recent' 365}}\",\n  \"externalDestinationId\": \"\",\n  \"frequencyId\": {{faker 'random.number'}},\n  \"mandatoryAmount\": {{faker 'random.float'}},\n  \"mandatoryAmountType\": \"{{oneOf (array 'Dollar' 'Percent' 'Max')}}\",\n  \"postTaxSavingsAmount\": {{faker 'random.float'}},\n  \"postTaxSavingsAmountType\": \"{{oneOf (array 'Dollar' 'Percent' 'Max')}}\",\n  \"preTaxSavingsAmount\": {{faker 'random.float'}},\n  \"preTaxSavingsAmountType\": \"{{oneOf (array 'Dollar' 'Percent' 'Max')}}\",\n  \"savingsStrategyId\": {{faker 'random.number'}},\n  \"startDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a913c5dc-14d8-4a0c-b0fe-33ef05601913",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "77f35527-e892-4fce-919a-e7c648734335",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Account data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9881f9ef-f7d5-4930-8b24-9d08366b8a29",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4d2d52eb-7867-4aa0-a9d4-e2ced5fa7adf",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Account not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8e45b8ec-f9df-49d1-a2ec-9b3c51c94023",
      "documentation": "Description: The operation removes an Account tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal of an Account from a Fact Finder.",
      "method": "delete",
      "endpoint": "api/Accounts/:id",
      "responses": [
        {
          "uuid": "249d9bb5-07c7-4bcc-bb2d-060e972bd160",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3caa78d0-0de1-4c89-8f98-292a109cad20",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e4dcac72-9130-46b0-bc64-84f21d0ace11",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Account data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "57c9822b-73e2-4fee-9622-960f623e79d3",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "20bee92f-2439-42c8-a748-e00c79af1165",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Account not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1bb012e3-46de-4cc2-bae2-2967a5ce0c6b",
      "documentation": "Description: This operation retrieves a single Account for the specified Account ID.<br />\r\n              Purpose: Provides access to the Account information including description and market value.",
      "method": "get",
      "endpoint": "api/Accounts/:id",
      "responses": [
        {
          "uuid": "2acdb2aa-1d70-4694-96fd-9031bc449ade",
          "body": "{\n  \"accountId\": {{faker 'random.number'}},\n  \"accountType\": {{faker 'random.number'}},\n  \"description\": \"\",\n  \"externalDestinationId\": \"\",\n  \"externalSourceId\": \"\",\n  \"externalSourceName\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"lastUpdated\": \"{{faker 'date.recent' 365}}\",\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"marketValue\": {{faker 'random.float'}},\n  \"owner\": \"{{oneOf (array 'Client' 'CoClient' 'Joint' 'Dependent' 'Other')}}\",\n  \"ownerDependentId\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f67e3c4a-7419-4e68-8438-035ca2418112",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "32f5396b-3fa6-4d12-a12f-62eed4d179c2",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Account data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7291db71-6efa-4cef-abfb-019a18ee670f",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "38568c1b-6006-4832-9eda-8e6564c016b4",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Account not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6b863a40-0a3c-498b-a3d8-ab7193834b67",
      "documentation": "Description: The operation updates an Account, deletes associated saving strategies if the account type changes.<br />\r\n              Purpose: Allows for complete replacement of an Account on a Fact Finder.",
      "method": "put",
      "endpoint": "api/Accounts/:id",
      "responses": [
        {
          "uuid": "5ee322b3-5ccb-4de0-a7d2-e45267c3e6d9",
          "body": "{\n  \"accountId\": {{faker 'random.number'}},\n  \"accountType\": {{faker 'random.number'}},\n  \"description\": \"\",\n  \"externalDestinationId\": \"\",\n  \"externalSourceId\": \"\",\n  \"externalSourceName\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"lastUpdated\": \"{{faker 'date.recent' 365}}\",\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"marketValue\": {{faker 'random.float'}},\n  \"owner\": \"{{oneOf (array 'Client' 'CoClient' 'Joint' 'Dependent' 'Other')}}\",\n  \"ownerDependentId\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1c3b9dbd-26e0-4828-9038-4bbaeb3c459a",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f255ed0f-1bcb-49f9-be19-570a257ec625",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Account data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "256127f7-88f8-4370-ba1b-344147634a46",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "57d11da1-f5c3-483f-8418-d1041a37dcc4",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Account not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6ccc4cd0-0b5f-4935-a70e-8c4a193b5f4a",
      "documentation": "Description: This operation submits the Fact Finder data to an external system.<br />\r\n              Purpose: Allows Fact Finder data to be persisted in another system for that system's consumption and use.",
      "method": "post",
      "endpoint": "api/Clients",
      "responses": [
        {
          "uuid": "add32543-f77e-4dca-bc80-562a0eae653e",
          "body": "{\n  \"clientId\": {{faker 'random.number'}},\n  \"message\": \"\",\n  \"ownerUser\": \"\",\n  \"planId\": {{faker 'random.number'}},\n  \"success\": {{faker 'random.boolean'}}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fe028f25-555b-4e8a-a0a3-91179c4ffc36",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1d00dd8e-d613-45b3-bddf-b950ab71288e",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Client data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1c88a0d3-5a37-4fe7-a346-d86b9aa5596b",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Client.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9989162e-8918-4307-9239-c3a8548eed8f",
      "documentation": "Description: This operation retrieves all Critical Illness Insurance Policies for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Critical Illness Insurance Policies including description and policy type.",
      "method": "get",
      "endpoint": "api/CriticalIllnessInsurancePolicies",
      "responses": [
        {
          "uuid": "04a6c02a-570a-4ff8-a62e-fb2239066432",
          "body": "{\n  \"criticalIllnessInsurancePolicies\": [\n    {\n      \"benefit\": {{faker 'random.float'}},\n      \"description\": \"\",\n      \"externalDestinationId\": \"\",\n      \"factFinderId\": {{faker 'random.number'}},\n      \"frequency\": {{faker 'random.number'}},\n      \"insurancePolicyId\": {{faker 'random.number'}},\n      \"insured\": \"{{oneOf (array 'Client' 'CoClient')}}\",\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"policyType\": {{faker 'random.number'}},\n      \"premium\": {{faker 'random.float'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5443d039-8584-491a-907b-d7511e58ce20",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3a410ce9-7e97-4f16-a2d3-7c10c93aa04f",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Critical Illness Insurance Policy data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dcd877c5-8d8d-490a-8f58-1e144c15cf70",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Critical Illness Insurance Policy.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9d1c0b17-480f-4276-a3b5-07f4f6075ed1",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Critical Illness Insurance Policy not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0d16022b-ec0d-4056-b62a-ab00012d78c1",
      "documentation": "Description: The operation creates a Critical Illness Insurance Policy.<br />\r\n              Purpose: Allows for creation of Critical Illness Insurance Policies on a Fact Finder.",
      "method": "post",
      "endpoint": "api/CriticalIllnessInsurancePolicies",
      "responses": [
        {
          "uuid": "44f368e1-42d0-443f-9ecd-406e6c397ce8",
          "body": "{\n  \"benefit\": {{faker 'random.float'}},\n  \"description\": \"\",\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"frequency\": {{faker 'random.number'}},\n  \"insurancePolicyId\": {{faker 'random.number'}},\n  \"insured\": \"{{oneOf (array 'Client' 'CoClient')}}\",\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"policyType\": {{faker 'random.number'}},\n  \"premium\": {{faker 'random.float'}}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b48b5fb4-5d13-4a39-8063-489c137c1f94",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e526b9b7-40e0-4bba-8746-5ff8e13cffb9",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Critical Illness Insurance Policy data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "45e42309-1fc3-4bb4-8703-d276685b1169",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Critical Illness Insurance Policy.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8057258a-b0b0-4ae4-ae8a-43e850d2d11d",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Critical Illness Insurance Policy not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5af72a05-d2ec-4cdf-bce9-26c6b6f88c19",
      "documentation": "Description: The operation removes a Critical Illness Insurance Policy tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal of a Critical Illness Insurance Policy from a Fact Finder.",
      "method": "delete",
      "endpoint": "api/CriticalIllnessInsurancePolicies/:id",
      "responses": [
        {
          "uuid": "f2377c56-79e1-4e84-aefa-9408e8177df6",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e580ce3a-c611-4637-a1eb-adc2920d12af",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b101bef7-62aa-42d9-aab7-4fdd98a12995",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Critical Illness Insurance Policy data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6c701ac9-026f-43ab-b5ae-621744f35690",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Critical Illness Insurance Policy.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "41f5fccb-cf6f-4e92-90fa-921aa06ff7af",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Critical Illness Insurance Policy not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "597345d2-f16a-4df9-be2d-969878aebbfc",
      "documentation": "Description: This operation retrieves a single Critical Illness Insurance Policy for the specified Critical Illness Insurance Policy ID.<br />\r\n              Purpose: Provides access to the Critical Illness Insurance Policy including description and policy type.",
      "method": "get",
      "endpoint": "api/CriticalIllnessInsurancePolicies/:id",
      "responses": [
        {
          "uuid": "3689684c-7586-4609-9d37-047b5652cede",
          "body": "{\n  \"benefit\": {{faker 'random.float'}},\n  \"description\": \"\",\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"frequency\": {{faker 'random.number'}},\n  \"insurancePolicyId\": {{faker 'random.number'}},\n  \"insured\": \"{{oneOf (array 'Client' 'CoClient')}}\",\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"policyType\": {{faker 'random.number'}},\n  \"premium\": {{faker 'random.float'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a7449e14-cb43-41b9-86da-6aca7d6f39d8",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "455dda8e-786e-4254-9bdd-f6e14de6b3f7",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Critical Illness Insurance Policy data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ca666d72-d380-4f1a-8e5d-a4e12ac2b0ca",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Critical Illness Insurance Policy.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5b97c601-def4-4de0-b13a-187b6961c277",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Critical Illness Insurance Policy not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "37d886a2-472c-42c9-9c05-2fc8cc5df545",
      "documentation": "Description: The operation updates a Critical Illness Insurance Policy.<br />\r\n              Purpose: Allows for complete replacement of a Critical Illness Insurance Policy on a Fact Finder.",
      "method": "put",
      "endpoint": "api/CriticalIllnessInsurancePolicies/:id",
      "responses": [
        {
          "uuid": "2ce2ceb2-120f-4983-abb6-93306e46b502",
          "body": "{\n  \"benefit\": {{faker 'random.float'}},\n  \"description\": \"\",\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"frequency\": {{faker 'random.number'}},\n  \"insurancePolicyId\": {{faker 'random.number'}},\n  \"insured\": \"{{oneOf (array 'Client' 'CoClient')}}\",\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"policyType\": {{faker 'random.number'}},\n  \"premium\": {{faker 'random.float'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4bde93b9-e822-4902-9019-b990dbefe07c",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3f515259-844f-4112-9a1e-4cd765e7d403",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Critical Illness Insurance Policy data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "839f506b-02c4-41b7-a626-c4127bf94162",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Critical Illness Insurance Policy.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fbe263d5-469b-4e91-85fd-d83e016ff5b8",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Critical Illness Insurance Policy not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "76f0c30e-4a48-4d74-9308-586ef3e9a96d",
      "documentation": "Description: This operation retrieves all Critical Illness Insurance Policy Types for the specified country.<br />\r\n              Purpose: Provides access to the Critical Illness Insurance Policy Types including id and type description.",
      "method": "get",
      "endpoint": "api/CriticalIllnessInsurancePolicyTypes",
      "responses": [
        {
          "uuid": "ab8f8f34-36dc-43ac-b14c-32fa2cbd57fa",
          "body": "{\n  \"insurancePolicyTypes\": [\n    {\n      \"id\": {{faker 'random.number'}},\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"name\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c7e41bb2-a15b-452f-8c12-1ec7a69c9320",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f3c4715e-c6c4-45c6-85f5-da46e16bd616",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Critical Illness Insurance Policy Type not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b29374ad-ed4a-4422-817d-b80b2dd58375",
      "documentation": "Description: This operation retrieves the Critical Illness Insurance Policy Type for the specified id.<br />\r\n              Purpose: Provides access to the Critical Illness Insurance Policy Types including id and type description.",
      "method": "get",
      "endpoint": "api/CriticalIllnessInsurancePolicyTypes/:id",
      "responses": [
        {
          "uuid": "be790423-d45d-4fd8-bad1-4b01473dff59",
          "body": "{\n  \"id\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "999efa7c-2f9c-403a-8eaa-4225c8861679",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f71e4d2a-3dab-41a2-b102-a8b2d61b1fc7",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Critical Illness Insurance Policy Type not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c4d5d8ee-411c-4075-8dfb-872091e28ec3",
      "documentation": "Description: This operation retrieves all Defined Benefit Pensions for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Defined Benefit Pensions including description and start date.",
      "method": "get",
      "endpoint": "api/DefinedBenefitPensions",
      "responses": [
        {
          "uuid": "2eff3988-0c66-4bbd-abf3-df379c89a5ef",
          "body": "{\n  \"definedBenefitPensions\": [\n    {\n      \"definedBenefitPensionId\": {{faker 'random.number'}},\n      \"description\": \"\",\n      \"estimatedAmount\": {{faker 'random.float'}},\n      \"externalDestinationId\": \"\",\n      \"factFinderId\": {{faker 'random.number'}},\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"member\": \"{{oneOf (array 'Client' 'CoClient')}}\",\n      \"startDate\": \"{{faker 'date.recent' 365}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b4951fa6-eaff-4cd7-b34d-29aef6fcaefb",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f5ef9f95-8f1d-47a8-9e99-692c08dcaee2",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Defined Benefit Pension data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "08121a30-d002-4b60-94f7-1e2efd0a2547",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Defined Benefit Pension.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eea09ef9-b027-42c9-868a-e6f8a32ec43e",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Defined Benefit Pension not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f0f809b7-56f1-427e-960c-d9df83bf6ad3",
      "documentation": "Description: The operation creates a Defined Benefit Pension.<br />\r\n              Purpose: Allows for creation of Defined Benefit Pensions on a Fact Finder.",
      "method": "post",
      "endpoint": "api/DefinedBenefitPensions",
      "responses": [
        {
          "uuid": "03490c0f-0c27-4f60-afe5-777415545cfa",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "18d42ec1-8e0d-406f-b5ad-3b605a080154",
          "body": "{\n  \"definedBenefitPensionId\": {{faker 'random.number'}},\n  \"description\": \"\",\n  \"estimatedAmount\": {{faker 'random.float'}},\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"member\": \"{{oneOf (array 'Client' 'CoClient')}}\",\n  \"startDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "52910de6-cd5a-4c46-8b76-4550eff9302d",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "115fe314-4ddb-4fb1-a33b-1337f633fc0c",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Defined Benefit Pension data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "83e9a1da-414e-47da-aa68-4e55dc5e892e",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Defined Benefit Pension.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a2c6ba4d-fc3c-4ab9-b476-47acb8e07301",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Defined Benefit Pension not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "66e14b5f-3f34-4403-9d39-f1b023e38055",
      "documentation": "Description: The operation removes a Defined Benefit Pension tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal of a Defined Benefit Pension from a Fact Finder.",
      "method": "delete",
      "endpoint": "api/DefinedBenefitPensions/:id",
      "responses": [
        {
          "uuid": "2ef63366-b279-4686-a26e-396df766f9ab",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d27a19fd-fa3d-4b5e-b857-9d2d20cb5bcb",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8091e7ee-99e9-448b-8cb9-752f26651205",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "47e725a6-b453-43b2-a31a-d919f8a9e98d",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Defined Benefit Pension data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8ed70cf6-fe8d-4426-bb2f-6faf6c57300d",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Defined Benefit Pension.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8979313b-7435-44d0-a19e-ea4be941799e",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Defined Benefit Pension not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "64cf510e-d1f7-4126-9140-0cb4f7841085",
      "documentation": "Description: This operation retrieves a single Defined Benefit Pension for the specified Defined Benefit Pension ID.<br />\r\n              Purpose: Provides access to the Defined Benefit Pension including description and start date.",
      "method": "get",
      "endpoint": "api/DefinedBenefitPensions/:id",
      "responses": [
        {
          "uuid": "82a4beb2-d285-48e8-873f-249e76cd6232",
          "body": "{\n  \"definedBenefitPensionId\": {{faker 'random.number'}},\n  \"description\": \"\",\n  \"estimatedAmount\": {{faker 'random.float'}},\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"member\": \"{{oneOf (array 'Client' 'CoClient')}}\",\n  \"startDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b295150e-f7f0-46e2-a33a-5b0dbb221d93",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f27a398d-a4b3-4db0-9b6a-7ea60a2495d7",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Defined Benefit Pension data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "420a5378-9dcb-4ed8-8e6a-951567bb49e9",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Defined Benefit Pension.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "437d22fb-cab1-4cd4-825b-276146c639ca",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Defined Benefit Pension not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "42722ce0-4ed1-43c1-8fc8-b351873050d4",
      "documentation": "Description: The operation updates a Defined Benefit Pension.<br />\r\n              Purpose: Allows for complete replacement of a Defined Benefit Pension on a Fact Finder.",
      "method": "put",
      "endpoint": "api/DefinedBenefitPensions/:id",
      "responses": [
        {
          "uuid": "63e5aba8-ecdf-4bfd-b0e6-b0a142b0f8a6",
          "body": "{\n  \"description\": \"\",\n  \"estimatedAmount\": {{faker 'random.float'}},\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"member\": \"{{oneOf (array 'Client' 'CoClient')}}\",\n  \"startDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9d097cd0-46c0-4bbb-a36f-eca44c0fcbca",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8d4cd490-d3e7-4364-9828-0a69291d0792",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Defined Benefit Pension data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a970c022-7acd-4d56-8396-f2fa2673fc8b",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Defined Benefit Pension.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "39708d57-9f0f-427f-b8d8-41a0d032325e",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Defined Benefit Pension not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "eb7cb3df-570e-4c92-8800-20e6d2a6f5c2",
      "documentation": "Description: This operation retrieves all Demographic information for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Demographic information including city and state.",
      "method": "get",
      "endpoint": "api/Demographics",
      "responses": [
        {
          "uuid": "b2fa9198-3493-4ba8-bcbc-deb0948b655a",
          "body": "{\n  \"city\": \"\",\n  \"created\": \"{{faker 'date.recent' 365}}\",\n  \"demographicsId\": {{faker 'random.number'}},\n  \"externalDestinationId\": \"\",\n  \"externalSourceId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"head1\": {\n    \"alreadyRetired\": {{faker 'random.boolean'}},\n    \"birthDate\": \"{{faker 'date.recent' 365}}\",\n    \"externalDestinationId\": \"\",\n    \"firstName\": \"\",\n    \"gender\": \"{{oneOf (array 'Male' 'Female' 'None')}}\",\n    \"lastName\": \"\",\n    \"taxFilingStatus\": {{faker 'random.number'}}\n  },\n  \"head2\": {\n    \"alreadyRetired\": {{faker 'random.boolean'}},\n    \"birthDate\": \"{{faker 'date.recent' 365}}\",\n    \"externalDestinationId\": \"\",\n    \"firstName\": \"\",\n    \"gender\": \"{{oneOf (array 'Male' 'Female' 'None')}}\",\n    \"lastName\": \"\",\n    \"taxFilingStatus\": {{faker 'random.number'}}\n  },\n  \"jointAnalysis\": {{faker 'random.boolean'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"lockRetirement\": {{faker 'random.boolean'}},\n  \"state\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c1c7beef-a516-4f28-9ee8-f5b937295aec",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "36867588-768e-46c3-8c8c-ed83fdfd94d4",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Demographic information data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9f157d1a-7b98-4639-ba63-264c6b44f59c",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Demographic information.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3a1792b1-0b53-432d-8675-9fdb23f8fe10",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Demographic information not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b21ea5d3-19d8-479f-ac77-d37bb9c6ec6b",
      "documentation": "Description: The operation creates Demographic information.<br />\r\n              Purpose: Allows for creation of Demographic information on a Fact Finder.",
      "method": "post",
      "endpoint": "api/Demographics",
      "responses": [
        {
          "uuid": "b0e504db-8251-4b89-97f3-f91a8192708c",
          "body": "{\n  \"city\": \"\",\n  \"created\": \"{{faker 'date.recent' 365}}\",\n  \"demographicsId\": {{faker 'random.number'}},\n  \"externalDestinationId\": \"\",\n  \"externalSourceId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"head1\": {\n    \"alreadyRetired\": {{faker 'random.boolean'}},\n    \"birthDate\": \"{{faker 'date.recent' 365}}\",\n    \"externalDestinationId\": \"\",\n    \"firstName\": \"\",\n    \"gender\": \"{{oneOf (array 'Male' 'Female' 'None')}}\",\n    \"lastName\": \"\",\n    \"taxFilingStatus\": {{faker 'random.number'}}\n  },\n  \"head2\": {\n    \"alreadyRetired\": {{faker 'random.boolean'}},\n    \"birthDate\": \"{{faker 'date.recent' 365}}\",\n    \"externalDestinationId\": \"\",\n    \"firstName\": \"\",\n    \"gender\": \"{{oneOf (array 'Male' 'Female' 'None')}}\",\n    \"lastName\": \"\",\n    \"taxFilingStatus\": {{faker 'random.number'}}\n  },\n  \"jointAnalysis\": {{faker 'random.boolean'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"lockRetirement\": {{faker 'random.boolean'}},\n  \"state\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "abdd53c7-8d07-4ed2-9bd2-10098829cf7b",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a4bd5b8a-a415-4110-938f-5e25e4979417",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Demographic information data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d6b266b0-7c97-4574-b5f3-b25c9ec84663",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Demographic information.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "57775a03-1a97-4c18-bb0b-d2fcfcc0d6ab",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Demographic information not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6246a77d-578a-4c16-b9a6-0149b053816a",
      "documentation": "Description: This operation retrieves all Dependents for the specified Demographic information ID.<br />\r\n              Purpose: Provides access to the Dependents including first and last name.",
      "method": "get",
      "endpoint": "api/Demographics/:demographicId/Dependents",
      "responses": [
        {
          "uuid": "22a13ffb-cac4-4eed-8c3d-1239c08696b6",
          "body": "{\n  \"dependents\": [\n    {\n      \"birthDate\": \"{{faker 'date.recent' 365}}\",\n      \"demographicsId\": {{faker 'random.number'}},\n      \"dependentId\": {{faker 'random.number'}},\n      \"dependentOf\": \"{{oneOf (array 'Client' 'CoClient' 'Joint' 'Other')}}\",\n      \"externalDestinationId\": \"\",\n      \"firstName\": \"\",\n      \"lastName\": \"\",\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"relationship\": \"{{oneOf (array 'Son' 'Daughter' 'FosterSon' 'FosterDaughter' 'Grandson' 'Granddaughter' 'Nephew' 'Niece' 'MaleCousin' 'FemaleCousin' 'Father' 'Mother' 'Grandfather' 'Grandmother' 'Uncle' 'Aunt' 'Brother' 'Sister' 'SonInLaw' 'DaughterInLaw' 'MaleOther' 'FemaleOther')}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "590e80b2-ae7a-4d46-951e-2538305fc9e9",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a6b91d87-489f-40f3-a3a0-2591cb1aebdc",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Demographic information data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d4ca89e8-535b-4dcc-ba1d-8a598cbe40aa",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Demographic information.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f29665b2-b95b-4804-a08c-d9d3ae0ffbbf",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Demographic information not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f5991b59-3386-4bdc-8574-d656ab28115a",
      "documentation": "Description: The operation creates a Dependent.<br />\r\n              Purpose: Allows for creation of Dependents on a Fact Finder.",
      "method": "post",
      "endpoint": "api/Demographics/:demographicId/Dependents",
      "responses": [
        {
          "uuid": "6ca46337-a3eb-4eec-8b2a-1551da76e2bf",
          "body": "{\n  \"birthDate\": \"{{faker 'date.recent' 365}}\",\n  \"demographicsId\": {{faker 'random.number'}},\n  \"dependentId\": {{faker 'random.number'}},\n  \"dependentOf\": \"{{oneOf (array 'Client' 'CoClient' 'Joint' 'Other')}}\",\n  \"externalDestinationId\": \"\",\n  \"firstName\": \"\",\n  \"lastName\": \"\",\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"relationship\": \"{{oneOf (array 'Son' 'Daughter' 'FosterSon' 'FosterDaughter' 'Grandson' 'Granddaughter' 'Nephew' 'Niece' 'MaleCousin' 'FemaleCousin' 'Father' 'Mother' 'Grandfather' 'Grandmother' 'Uncle' 'Aunt' 'Brother' 'Sister' 'SonInLaw' 'DaughterInLaw' 'MaleOther' 'FemaleOther')}}\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7395076a-2a45-4ec2-874e-41fdad3708bc",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c50d5b04-0577-4307-ae1f-b7c05344d6c6",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Dependent information data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "81d97336-129e-424d-8c76-844918647377",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Dependent information.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e513ef25-c409-4742-90df-c47e5755b796",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Dependent information not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ce9bd3b5-cc07-4feb-b624-6ee63bbf821f",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "The request cannot be completed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "947163a0-d842-4ad6-9183-8ecef7c2b2ab",
      "documentation": "Description: The operation removes a Dependent tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal of a Dependent from a Fact Finder.",
      "method": "delete",
      "endpoint": "api/Demographics/:demographicId/Dependents/:id",
      "responses": [
        {
          "uuid": "bc3c9979-fb11-49b0-b2f5-c0e449f9f605",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "56a2a934-f513-4942-a5bb-2bc1b9321cfc",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "13d614c0-cedc-4e40-8976-ba5f5ea63d7c",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Dependent information data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4c494eb8-8a70-4ca8-a481-cb206cac2e7b",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Dependent information.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2deb77b2-9f94-4abe-8d34-05eec053380a",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Dependent information not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e61b5c79-4b28-439b-8f83-ebb97a59552a",
      "documentation": "Description: This operation retrieves a single Dependent for the specified Dependent ID.<br />\r\n              Purpose: Provides access to the Dependent including first and last name.",
      "method": "get",
      "endpoint": "api/Demographics/:demographicId/Dependents/:id",
      "responses": [
        {
          "uuid": "eb970375-639c-4d41-8dca-17939e00692b",
          "body": "{\n  \"birthDate\": \"{{faker 'date.recent' 365}}\",\n  \"demographicsId\": {{faker 'random.number'}},\n  \"dependentId\": {{faker 'random.number'}},\n  \"dependentOf\": \"{{oneOf (array 'Client' 'CoClient' 'Joint' 'Other')}}\",\n  \"externalDestinationId\": \"\",\n  \"firstName\": \"\",\n  \"lastName\": \"\",\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"relationship\": \"{{oneOf (array 'Son' 'Daughter' 'FosterSon' 'FosterDaughter' 'Grandson' 'Granddaughter' 'Nephew' 'Niece' 'MaleCousin' 'FemaleCousin' 'Father' 'Mother' 'Grandfather' 'Grandmother' 'Uncle' 'Aunt' 'Brother' 'Sister' 'SonInLaw' 'DaughterInLaw' 'MaleOther' 'FemaleOther')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5521deb4-29c3-4c51-aca4-74814dcd1f27",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "62523c65-fa89-467b-bb38-c97097a8b134",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Demographic information data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "78399b82-d0be-4bcb-8e65-1e753c755e19",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Demographic information.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "57c7512d-c850-4e68-9e9e-929d4bdad639",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Demographic information not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2abce4ea-a4e1-412b-aa99-f5f2005caf63",
      "documentation": "Description: The operation updates a Dependent.<br />\r\n              Purpose: Allows for complete replacement of a Dependent on a Fact Finder.",
      "method": "put",
      "endpoint": "api/Demographics/:demographicId/Dependents/:id",
      "responses": [
        {
          "uuid": "478e084d-1ecc-4748-9393-72217c200014",
          "body": "{\n  \"birthDate\": \"{{faker 'date.recent' 365}}\",\n  \"demographicsId\": {{faker 'random.number'}},\n  \"dependentId\": {{faker 'random.number'}},\n  \"dependentOf\": \"{{oneOf (array 'Client' 'CoClient' 'Joint' 'Other')}}\",\n  \"externalDestinationId\": \"\",\n  \"firstName\": \"\",\n  \"lastName\": \"\",\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"relationship\": \"{{oneOf (array 'Son' 'Daughter' 'FosterSon' 'FosterDaughter' 'Grandson' 'Granddaughter' 'Nephew' 'Niece' 'MaleCousin' 'FemaleCousin' 'Father' 'Mother' 'Grandfather' 'Grandmother' 'Uncle' 'Aunt' 'Brother' 'Sister' 'SonInLaw' 'DaughterInLaw' 'MaleOther' 'FemaleOther')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cbc30449-87a1-4197-a561-5df8ebdf0249",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "888d8c44-7571-4dbb-84b5-ac9347a7f924",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Dependent information data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "415e31f6-41ce-40c4-8b68-ff5f1abb4242",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Dependent information.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1840906b-d8f5-4819-b907-b41e7d9a3b16",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Dependent information not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6493ea08-7e1c-4bd1-973a-b3abd32bf0d0",
      "documentation": "Description: This operation retrieves Demographic information for the specified Demographic information ID.<br />\r\n              Purpose: Provides access to the Demographic information including city and state.",
      "method": "get",
      "endpoint": "api/Demographics/:id",
      "responses": [
        {
          "uuid": "987eb85e-c477-49c5-9007-7664e26ae0af",
          "body": "{\n  \"city\": \"\",\n  \"created\": \"{{faker 'date.recent' 365}}\",\n  \"demographicsId\": {{faker 'random.number'}},\n  \"externalDestinationId\": \"\",\n  \"externalSourceId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"head1\": {\n    \"alreadyRetired\": {{faker 'random.boolean'}},\n    \"birthDate\": \"{{faker 'date.recent' 365}}\",\n    \"externalDestinationId\": \"\",\n    \"firstName\": \"\",\n    \"gender\": \"{{oneOf (array 'Male' 'Female' 'None')}}\",\n    \"lastName\": \"\",\n    \"taxFilingStatus\": {{faker 'random.number'}}\n  },\n  \"head2\": {\n    \"alreadyRetired\": {{faker 'random.boolean'}},\n    \"birthDate\": \"{{faker 'date.recent' 365}}\",\n    \"externalDestinationId\": \"\",\n    \"firstName\": \"\",\n    \"gender\": \"{{oneOf (array 'Male' 'Female' 'None')}}\",\n    \"lastName\": \"\",\n    \"taxFilingStatus\": {{faker 'random.number'}}\n  },\n  \"jointAnalysis\": {{faker 'random.boolean'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"lockRetirement\": {{faker 'random.boolean'}},\n  \"state\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aa8f1c72-9d9b-4376-8cea-161aa4ddb48d",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4a8c2fe6-4921-4cff-bc28-6a639430fddb",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Demographic information data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aea61dc8-85b2-4824-8924-a2abfaafa98f",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Demographic information.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "05b5abd1-870a-46a1-92fb-721887295dba",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Demographic information not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "365d4faf-b0a7-448d-bb77-584902e2b2ed",
      "documentation": "Description: The operation updates Demographic information.<br />\r\n              Purpose: Allows for complete replacement of Demographic information on a Fact Finder.",
      "method": "put",
      "endpoint": "api/Demographics/:id",
      "responses": [
        {
          "uuid": "e947e3d0-62ff-4c79-8e55-1c46ee9132fa",
          "body": "{\n  \"city\": \"\",\n  \"created\": \"{{faker 'date.recent' 365}}\",\n  \"demographicsId\": {{faker 'random.number'}},\n  \"externalDestinationId\": \"\",\n  \"externalSourceId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"head1\": {\n    \"alreadyRetired\": {{faker 'random.boolean'}},\n    \"birthDate\": \"{{faker 'date.recent' 365}}\",\n    \"externalDestinationId\": \"\",\n    \"firstName\": \"\",\n    \"gender\": \"{{oneOf (array 'Male' 'Female' 'None')}}\",\n    \"lastName\": \"\",\n    \"taxFilingStatus\": {{faker 'random.number'}}\n  },\n  \"head2\": {\n    \"alreadyRetired\": {{faker 'random.boolean'}},\n    \"birthDate\": \"{{faker 'date.recent' 365}}\",\n    \"externalDestinationId\": \"\",\n    \"firstName\": \"\",\n    \"gender\": \"{{oneOf (array 'Male' 'Female' 'None')}}\",\n    \"lastName\": \"\",\n    \"taxFilingStatus\": {{faker 'random.number'}}\n  },\n  \"jointAnalysis\": {{faker 'random.boolean'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"lockRetirement\": {{faker 'random.boolean'}},\n  \"state\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fba31941-a625-470f-aa0c-7b89e031d668",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "96e47023-4b34-431f-8f2f-f5344aae4b91",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Demographic information data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fb81f201-b253-435c-a95b-e8d3b08fe71d",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Demographic information.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e54e4466-ff0a-4d71-aa62-bab45c30a202",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Demographic information not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eee5c4e8-27bd-4a7c-8f26-6a0582aaa8a0",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "The request cannot be completed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6f9d911f-d262-454b-81cf-6dd4ecf7ae70",
      "documentation": "Description: This operation retrieves all Disability Insurance Policies for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Disability Insurance Policies including description and policy type.",
      "method": "get",
      "endpoint": "api/DisabilityInsurancePolicies",
      "responses": [
        {
          "uuid": "88396170-d6df-4253-9e6d-af9cb798afa4",
          "body": "{\n  \"disabilityInsurancePolicies\": [\n    {\n      \"benefit\": {{faker 'random.float'}},\n      \"benefitFrequency\": {{faker 'random.number'}},\n      \"benefitType\": \"{{oneOf (array 'Dollar' 'Percent')}}\",\n      \"description\": \"\",\n      \"externalDestinationId\": \"\",\n      \"factFinderId\": {{faker 'random.number'}},\n      \"insurancePolicyId\": {{faker 'random.number'}},\n      \"insured\": \"{{oneOf (array 'Client' 'CoClient')}}\",\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"policyType\": {{faker 'random.number'}},\n      \"premium\": {{faker 'random.float'}},\n      \"premiumFrequency\": {{faker 'random.number'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b7e82d37-ff3d-4b2f-a2b7-3b1fad812034",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3cd855c6-4ee5-4113-be7f-ea50e5ae213e",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Disability Insurance Policy data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "19ddf140-d493-485c-8c40-bc2a93691d67",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Disability Insurance Policy.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0f9d3cc6-ef01-4160-bd18-a0209d31eb14",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Disability Insurance Policy not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b97f974d-6143-48a3-9293-a3f72c656c4e",
      "documentation": "Description: The operation creates a Disability Insurance Policy.<br />\r\n              Purpose: Allows for creation of Disability Insurance Policies on a Fact Finder.",
      "method": "post",
      "endpoint": "api/DisabilityInsurancePolicies",
      "responses": [
        {
          "uuid": "25b168d7-2c1e-4d64-b6cd-ca5b8f3c9396",
          "body": "{\n  \"benefit\": {{faker 'random.float'}},\n  \"benefitFrequency\": {{faker 'random.number'}},\n  \"benefitType\": \"{{oneOf (array 'Dollar' 'Percent')}}\",\n  \"description\": \"\",\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"insurancePolicyId\": {{faker 'random.number'}},\n  \"insured\": \"{{oneOf (array 'Client' 'CoClient')}}\",\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"policyType\": {{faker 'random.number'}},\n  \"premium\": {{faker 'random.float'}},\n  \"premiumFrequency\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f1442fe8-9289-4c8a-9034-8b36a6da4517",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "56528734-cadc-48f8-9ef3-5bdd3bfd6750",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Disability Insurance Policy data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4b1ce6d8-af72-4778-af9c-0583ddccc2fd",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Disability Insurance Policy.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "57c6ec2b-7613-45c0-b7ca-e86d82decdcc",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Disability Insurance Policy not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "41bee666-5c07-470d-bb33-1e08002af511",
      "documentation": "Description: The operation removes a Disability Insurance Policy tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal of a Disability Insurance Policy from a Fact Finder.",
      "method": "delete",
      "endpoint": "api/DisabilityInsurancePolicies/:id",
      "responses": [
        {
          "uuid": "6059f225-ebc5-402b-b7ea-9469175bd910",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ee7e94a3-de5d-42a8-8bfd-0f7fde71b77c",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8e27ac42-d0b1-4bcd-9b42-c930e80e6c39",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Disability Insurance Policy data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4fe79a7c-65a2-4a81-a0b9-680b5fd6ec89",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Disability Insurance Policy.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "becff983-84ff-4551-a660-2e66f0f0d43a",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Disability Insurance Policy not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d1d3ac57-6e6d-4df4-940c-c844a49f25cb",
      "documentation": "Description: This operation retrieves a single Disability Insurance Policy for the specified Disability Insurance Policy ID.<br />\r\n              Purpose: Provides access to the Disability Insurance Policy including description and policy type.",
      "method": "get",
      "endpoint": "api/DisabilityInsurancePolicies/:id",
      "responses": [
        {
          "uuid": "61d552fe-aa44-4d6c-8155-ccfdd5f853d7",
          "body": "{\n  \"benefit\": {{faker 'random.float'}},\n  \"benefitFrequency\": {{faker 'random.number'}},\n  \"benefitType\": \"{{oneOf (array 'Dollar' 'Percent')}}\",\n  \"description\": \"\",\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"insurancePolicyId\": {{faker 'random.number'}},\n  \"insured\": \"{{oneOf (array 'Client' 'CoClient')}}\",\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"policyType\": {{faker 'random.number'}},\n  \"premium\": {{faker 'random.float'}},\n  \"premiumFrequency\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8b41032e-76b7-4933-a7aa-9bc73f79b9e5",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "510e9903-fdd8-4ece-b2bf-8082f362bc92",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Disability Insurance Policy data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d01d3a26-edbc-490e-bfcb-671f59456484",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Disability Insurance Policy.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ff7be7a9-0761-4a03-bf37-677cc888a9ab",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Disability Insurance Policy not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c929a32c-4571-43e7-9654-3f8751c3e5a4",
      "documentation": "Description: The operation updates a Disability Insurance Policy.<br />\r\n              Purpose: Allows for complete replacement of a Disability Insurance Policy on a Fact Finder.",
      "method": "put",
      "endpoint": "api/DisabilityInsurancePolicies/:id",
      "responses": [
        {
          "uuid": "cb1d1ae0-e14f-414a-a71f-22f7a3109a5a",
          "body": "{\n  \"benefit\": {{faker 'random.float'}},\n  \"benefitFrequency\": {{faker 'random.number'}},\n  \"benefitType\": \"{{oneOf (array 'Dollar' 'Percent')}}\",\n  \"description\": \"\",\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"insurancePolicyId\": {{faker 'random.number'}},\n  \"insured\": \"{{oneOf (array 'Client' 'CoClient')}}\",\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"policyType\": {{faker 'random.number'}},\n  \"premium\": {{faker 'random.float'}},\n  \"premiumFrequency\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "18f1f334-93fa-4a8c-88c3-38581a2564dd",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "709cf851-be20-4ebb-8852-3ba916d6424a",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Disability Insurance Policy data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "069609b2-d333-4773-b21e-32d1cf5fde3e",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Disability Insurance Policy.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "75464d12-a067-42ba-9e39-d3a50cba3851",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Disability Insurance Policy not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1ddffb67-e565-45e9-bbbe-5415ca4119b1",
      "documentation": "Description: This operation retrieves all Disability Insurance Policy Types for the specified country.<br />\r\n              Purpose: Provides access to the Disability Insurance Policy Types including id and type description.",
      "method": "get",
      "endpoint": "api/DisabilityInsurancePolicyTypes",
      "responses": [
        {
          "uuid": "22b31f85-cb1c-45b9-a07e-e56f1ef23f33",
          "body": "{\n  \"insurancePolicyTypes\": [\n    {\n      \"id\": {{faker 'random.number'}},\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"name\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "815c4ca8-94ed-4a57-846d-e980d0ca064a",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a3b6c204-1e6f-469e-ad76-7de70dafbc98",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Disability Insurance Policy Type not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "08a27c5b-cdc7-4492-9915-b0ce2e82796e",
      "documentation": "Description: This operation retrieves all Disability Insurance Policy Types for the specified id.<br />\r\n              Purpose: Provides access to the Disability Insurance Policy Types including id and type description.",
      "method": "get",
      "endpoint": "api/DisabilityInsurancePolicyTypes/:id",
      "responses": [
        {
          "uuid": "7f5905ce-614c-4083-93ff-9a2a556f0443",
          "body": "{\n  \"id\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f89d5976-e1e2-4202-87ee-02182d8f3f00",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "649d0bb9-14d8-4b79-b5fb-e767b31e0272",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Disability Insurance Policy Type not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "83ba87e7-92f5-4014-8acb-79e4f7a4839b",
      "documentation": "Description: This operation retrieves all Education Goals for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Education Goals including description and projected cost.",
      "method": "get",
      "endpoint": "api/EducationGoals",
      "responses": [
        {
          "uuid": "ee822017-f603-48a5-880f-722700d96342",
          "body": "{\n  \"educationGoals\": [\n    {\n      \"description\": \"\",\n      \"educationGoalId\": {{faker 'random.number'}},\n      \"externalDestinationId\": \"\",\n      \"factFinderId\": {{faker 'random.number'}},\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"projectedCost\": {{faker 'random.float'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cdc44f0a-0516-4307-9c99-d472749be5b5",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4de9d644-2e3f-4c7f-b573-5c8b5f69fa92",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Education Goal data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4c576814-3e07-4963-8b8b-f96cbe333251",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Education Goal.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4ffe4b3c-826d-48af-bf58-9aca0afed597",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Education Goal not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "33963e38-597b-46c4-bcf3-ce6345dc9118",
      "documentation": "Description: The operation creates an Education Goal.<br />\r\n              Purpose: Allows for creation of Education Goals on a Fact Finder.",
      "method": "post",
      "endpoint": "api/EducationGoals",
      "responses": [
        {
          "uuid": "392cd8a6-729e-47dd-8848-eb4522d73edd",
          "body": "{\n  \"description\": \"\",\n  \"educationGoalId\": {{faker 'random.number'}},\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"projectedCost\": {{faker 'random.float'}}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8f390579-2c44-4789-9d44-82367c70b0bb",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0417143d-f92f-4645-a642-8e6bedbf4610",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Education Goal data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4ce42c45-76a6-4b5c-b2a6-90ca36c55899",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Education Goal.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1598efc4-3943-436d-9580-f7c5d5fb87f1",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Education Goal not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f03345af-0454-471a-b269-0ac609664ce3",
      "documentation": "Description: This operation retrieves all Education Goal Expenses for the specified Education Goal ID.<br />\r\n              Purpose: Provides access to the Education Goal Expenses including description and annual cost.",
      "method": "get",
      "endpoint": "api/EducationGoals/:educationGoalId/Expenses",
      "responses": [
        {
          "uuid": "266bb16d-20ca-448e-bc6f-fff447d88f1b",
          "body": "{\n  \"educationExpenses\": [\n    {\n      \"annualCost\": {{faker 'random.float'}},\n      \"educationExpenseId\": {{faker 'random.number'}},\n      \"educationGoalId\": {{faker 'random.number'}},\n      \"externalDestinationId\": \"\",\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"member\": \"{{oneOf (array 'Client' 'CoClient' 'Dependent')}}\",\n      \"memberDependentId\": {{faker 'random.number'}},\n      \"startYear\": \"{{faker 'date.recent' 365}}\",\n      \"years\": {{faker 'random.number'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9cd6638c-22f4-47a9-ac78-df7b8c046d09",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fecc78b0-dbe4-444f-8bfb-2b4d45601e95",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Education Goal Expense data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "86802d7d-bc49-41d0-baa8-1bffcab23cdb",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Education Goal Expense.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8108bf78-d506-475b-aebd-3d654fa2325a",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Education Goal Expense not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "92a90599-5039-4060-9459-47abf29a9035",
      "documentation": "Description: The operation creates an Education Goal Expense.<br />\r\n              Purpose: Allows for creation of Education Goal Expenses on a Fact Finder.",
      "method": "post",
      "endpoint": "api/EducationGoals/:educationGoalId/Expenses",
      "responses": [
        {
          "uuid": "35ecaf3e-7c6f-413a-a222-1fe09e5fe866",
          "body": "{\n  \"annualCost\": {{faker 'random.float'}},\n  \"educationExpenseId\": {{faker 'random.number'}},\n  \"educationGoalId\": {{faker 'random.number'}},\n  \"externalDestinationId\": \"\",\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"member\": \"{{oneOf (array 'Client' 'CoClient' 'Dependent')}}\",\n  \"memberDependentId\": {{faker 'random.number'}},\n  \"startYear\": \"{{faker 'date.recent' 365}}\",\n  \"years\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fae79a4b-f985-4304-a1ab-119849db7555",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f938362b-3c29-4700-9062-b467c0ad3516",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Education Goal Expense data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7d785f40-05cd-409e-a7fc-ee7a36793e0d",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Education Goal Expense.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "77c4aa4e-9046-43a1-a4f7-e9b1340c37e5",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Education Goal Expense not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6d432402-7af7-4439-bec9-1efcd30f37dd",
      "documentation": "Description: The operation removes an Education Goal Expense tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal of an Education Goal Expense from a Fact Finder.",
      "method": "delete",
      "endpoint": "api/EducationGoals/:educationGoalId/Expenses/:id",
      "responses": [
        {
          "uuid": "12e9c0d9-889e-4445-943b-90fb1dbf171f",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e8518fb3-ea24-4317-ae1f-3e2f9f07ece7",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bea2e7fe-c99b-4833-8369-5b0b8290f705",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Education Goal Expense data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "725885b9-ab3d-4956-a180-bdf81462ea0d",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Education Goal Expense.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "12a980e6-6937-4947-bf86-7c2f017f6bd2",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Education Goal Expense not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "28d58a82-ddb1-4e20-acc0-a908dcb8fda7",
      "documentation": "Description: This operation retrieves a single Education Goal Expense for the specified Education Goal Expense ID.<br />\r\n              Purpose: Provides access to the Education Goal Expense including description and annual cost.",
      "method": "get",
      "endpoint": "api/EducationGoals/:educationGoalId/Expenses/:id",
      "responses": [
        {
          "uuid": "8cf96d29-e79d-4a4c-8f8d-42488fabde1f",
          "body": "{\n  \"annualCost\": {{faker 'random.float'}},\n  \"educationExpenseId\": {{faker 'random.number'}},\n  \"educationGoalId\": {{faker 'random.number'}},\n  \"externalDestinationId\": \"\",\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"member\": \"{{oneOf (array 'Client' 'CoClient' 'Dependent')}}\",\n  \"memberDependentId\": {{faker 'random.number'}},\n  \"startYear\": \"{{faker 'date.recent' 365}}\",\n  \"years\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fff88611-87c1-476d-8873-4b9c361c57d2",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cba94833-42b8-420d-a252-75ab8863ae46",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Education Goal Expense data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e0541bba-4088-4018-8bc0-eaa018e7b8f6",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Education Goal Expense.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "63551c68-278d-47ad-a991-429847c77210",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Education Goal Expense not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9fddbff7-089b-441a-b79d-2f5a88a57bc5",
      "documentation": "Description: The operation updates an Education Goal Expense.<br />\r\n              Purpose: Allows for complete replacement of an Education Goal Expense on a Fact Finder.",
      "method": "put",
      "endpoint": "api/EducationGoals/:educationGoalId/Expenses/:id",
      "responses": [
        {
          "uuid": "783bcc1f-657c-409d-9529-944479445e50",
          "body": "{\n  \"annualCost\": {{faker 'random.float'}},\n  \"educationExpenseId\": {{faker 'random.number'}},\n  \"educationGoalId\": {{faker 'random.number'}},\n  \"externalDestinationId\": \"\",\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"member\": \"{{oneOf (array 'Client' 'CoClient' 'Dependent')}}\",\n  \"memberDependentId\": {{faker 'random.number'}},\n  \"startYear\": \"{{faker 'date.recent' 365}}\",\n  \"years\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "94a490be-a221-4d89-be0f-6b98f10bc4b9",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4dad134d-d240-4b5c-a876-35ec37c1a264",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Education Goal Expense data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0a9d484a-196f-4b4e-823b-1c872069d7eb",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Education Goal Expense.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8a6cfe66-a180-453d-84bc-ceb7d5616253",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Education Goal Expense not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5d3c168f-f86c-44b5-a98b-749990a23fa2",
      "documentation": "Description: The operation removes an Education Goal tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal of an Education Goal from a Fact Finder.",
      "method": "delete",
      "endpoint": "api/EducationGoals/:id",
      "responses": [
        {
          "uuid": "f9e979df-595e-48ab-ab82-720704559cff",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2c254361-e91e-44cc-9a37-51e7b46c9cf3",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c7cb5f9c-6815-4f36-89cf-ae89ee91c243",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Education Goal data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2c54c66a-ccb0-4663-949b-3ed0632f7bf0",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Education Goal.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a5203527-5fc5-432a-badf-b1e43f2cee47",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Education Goal not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2fa80907-1fb1-4b8b-b058-551efd25e2bd",
      "documentation": "Description: This operation retrieves a single Education Goal for the specified Education Goal ID.<br />\r\n              Purpose: Provides access to the Education Goal including description and projected cost.",
      "method": "get",
      "endpoint": "api/EducationGoals/:id",
      "responses": [
        {
          "uuid": "870228b7-00b9-4514-827e-d71f3dbe4244",
          "body": "{\n  \"description\": \"\",\n  \"educationGoalId\": {{faker 'random.number'}},\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"projectedCost\": {{faker 'random.float'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e0242fc0-c866-48b6-88c1-cb50f3efcf18",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1e6c4af4-fa4e-49b6-9b60-b37a21e33462",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Education Goal data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "81431e0f-8598-46a1-9259-74b060b74e13",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Education Goal.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cf04fa42-7861-4875-9f38-25bc40fc9e65",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Education Goal not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "55edbb5d-e4c1-4ec4-98ce-6bbc53474f57",
      "documentation": "Description: The operation creates an Education Goal Expense.<br />\r\n              Purpose: Allows for creation of Education Goal Expenses on a Fact Finder.",
      "method": "put",
      "endpoint": "api/EducationGoals/:id",
      "responses": [
        {
          "uuid": "16e5d144-9e35-4d16-adc7-ba80689eb8dc",
          "body": "{\n  \"description\": \"\",\n  \"educationGoalId\": {{faker 'random.number'}},\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"projectedCost\": {{faker 'random.float'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fd726c23-de30-44ef-8588-2e03ae4f13fe",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "494a11c8-e3db-4d81-b6e4-31b8fe50a47d",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Education Goal Expense data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3c26d087-42ed-4f74-89e5-1240deac0a73",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Education Goal Expense.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e75fbdef-ce9f-4ced-bbd8-92b4a379d5bf",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Education Goal Expense not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "00f34bdf-0c36-4708-847e-a0491deca077",
      "documentation": "Description: This operation retrieves all Expense Types for the specified country.<br />\r\n              Purpose: Provides access to the Expense Types including id and type description.",
      "method": "get",
      "endpoint": "api/ExpenseTypes",
      "responses": [
        {
          "uuid": "91982e01-4062-4933-82ee-70766c3364ea",
          "body": "{\n  \"expenseTypes\": [\n    {\n      \"id\": {{faker 'random.number'}},\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"name\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3f6ef13a-3f64-48fa-be3c-5b565ff69442",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d0c28a10-9e4d-4406-b1f5-16a3d92661cc",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Expense Type not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "baee5883-0081-4b88-9050-a6a60cec08c9",
      "documentation": "Description: This operation retrieves all Expense Types for the specified country.<br />\r\n              Purpose: Provides access to the Expense Types including id and type description.",
      "method": "get",
      "endpoint": "api/ExpenseTypes/:id",
      "responses": [
        {
          "uuid": "929ac2ad-a85e-4406-b60e-fa7b640670d4",
          "body": "{\n  \"id\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cc4dac90-8de5-47e6-bb12-ec1d42ecf22a",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b2766c0d-6a10-433b-87be-fe9b0bf27807",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Expense Type not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d11bcb26-24d2-468c-a885-91a6aabeb2d3",
      "documentation": "Description: This operation retrieves all Expenses for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Expenses including description and Expense type.",
      "method": "get",
      "endpoint": "api/Expenses",
      "responses": [
        {
          "uuid": "75914244-2ae6-4187-8e02-329ae090a7d5",
          "body": "{\n  \"expenses\": [\n    {\n      \"annualPeriod\": {{faker 'random.number'}},\n      \"description\": \"\",\n      \"endDate\": \"{{faker 'date.recent' 365}}\",\n      \"expenseAmount\": {{faker 'random.float'}},\n      \"expenseId\": {{faker 'random.number'}},\n      \"expenseTypeId\": {{faker 'random.number'}},\n      \"externalDestinationId\": \"\",\n      \"factFinderId\": {{faker 'random.number'}},\n      \"frequency\": {{faker 'random.number'}},\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"member\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n      \"startDate\": \"{{faker 'date.recent' 365}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "45de1352-308d-4872-8598-abc6c528b76d",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "28fd5386-3445-43fe-b90c-9a3bb3e9bdea",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Expense data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5dcd4262-c56d-4b60-837d-0205e425159b",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Expense.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9da3d15d-9abd-414f-aaa2-7a1690623ef9",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Expense not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a3e19edb-9f16-4a11-99e3-4ac276a3caa1",
      "documentation": "Description: The operation creates an Expense.<br />\r\n              Purpose: Allows for creation of Expenses on a Fact Finder.",
      "method": "post",
      "endpoint": "api/Expenses",
      "responses": [
        {
          "uuid": "976f0aed-e640-4338-b0ad-7bd80144639c",
          "body": "{\n  \"annualPeriod\": {{faker 'random.number'}},\n  \"description\": \"\",\n  \"endDate\": \"{{faker 'date.recent' 365}}\",\n  \"expenseAmount\": {{faker 'random.float'}},\n  \"expenseId\": {{faker 'random.number'}},\n  \"expenseTypeId\": {{faker 'random.number'}},\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"frequency\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"member\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n  \"startDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "293439b3-9358-403d-858c-929b7943d7bf",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "09fb6f3c-14d6-406d-a447-8607f4b40e3e",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Expense data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a3e7dbeb-5370-4fc6-b149-28da8ef174f4",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Expense.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d22fde3d-1c00-4ec3-ae44-b0e4abc711eb",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Expense not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b877e8bc-8376-4263-8519-10defd24453c",
      "documentation": "Description: The operation removes an Expense tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal of an Expense from a Fact Finder.",
      "method": "delete",
      "endpoint": "api/Expenses/:id",
      "responses": [
        {
          "uuid": "3ebcbd0b-1997-4396-82a1-b2b42201e062",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6f3ae524-4711-476f-8868-b4705d469fc8",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "360f8925-07fa-4d50-89d4-49483c15ada7",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Expense data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d554f042-e5c6-44e9-b3ad-22779684679c",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Expense.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "703abf57-bffc-4e7c-b6e9-8cd6277940bf",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Expense not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e5979c51-77a7-4bc3-90a7-16e273c40399",
      "documentation": "Description: This operation retrieves a single Expense for the specified Expense ID.<br />\r\n              Purpose: Provides access to the Expense including description and Expense type.",
      "method": "get",
      "endpoint": "api/Expenses/:id",
      "responses": [
        {
          "uuid": "13677b70-0250-41ae-805c-b53518cae2c7",
          "body": "{\n  \"annualPeriod\": {{faker 'random.number'}},\n  \"description\": \"\",\n  \"endDate\": \"{{faker 'date.recent' 365}}\",\n  \"expenseAmount\": {{faker 'random.float'}},\n  \"expenseId\": {{faker 'random.number'}},\n  \"expenseTypeId\": {{faker 'random.number'}},\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"frequency\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"member\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n  \"startDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c4990d9a-6fe9-4ce0-9491-fc6428f5f283",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8d6e809b-58cc-4df6-9570-c07dd8abb889",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Expense data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "907a6d9b-4090-4839-b008-5c272ccb4954",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Expense.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0c50278b-17a4-4d4a-bad9-0be537fa6397",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Expense not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "413994ca-3635-4877-90e7-dcbbe3e0fb29",
      "documentation": "Description: The operation updates an Expense.<br />\r\n              Purpose: Allows for complete replacement of an Expense on a Fact Finder. <br /><br />\r\n              Note: Expense type cannot be changed for expenses prepopulated from NaviPlan.",
      "method": "put",
      "endpoint": "api/Expenses/:id",
      "responses": [
        {
          "uuid": "4047f067-0f2d-4de5-9191-7dbdbc2c4b72",
          "body": "{\n  \"annualPeriod\": {{faker 'random.number'}},\n  \"description\": \"\",\n  \"endDate\": \"{{faker 'date.recent' 365}}\",\n  \"expenseAmount\": {{faker 'random.float'}},\n  \"expenseId\": {{faker 'random.number'}},\n  \"expenseTypeId\": {{faker 'random.number'}},\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"frequency\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"member\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n  \"startDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fc86c1e3-be35-4033-8331-e491e7954077",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a052d77b-9fe6-424f-8045-4417994fc078",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Expense data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0068b2e8-15da-4a0e-88be-4e11904cc308",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Expense.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5e45f5d8-379b-4b50-8dff-27ddf62e5548",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Expense not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "77a92f49-2b43-432f-b59e-9323452e030c",
      "documentation": "Description: This operation retrieves all Fact Finders for the specified householdId, \r\n              or if null, all households associated with the user.<br />\r\n              Purpose: Provides access to the Fact Finder including status.",
      "method": "get",
      "endpoint": "api/FactFinders",
      "responses": [
        {
          "uuid": "b5723a70-b0ed-4794-910e-ec8896695956",
          "body": "[\n  {\n    \"countryCode\": \"{{oneOf (array 'UnitedStates' 'Canada')}}\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"factFinderId\": {{faker 'random.number'}},\n    \"householdId\": {{faker 'random.number'}},\n    \"lastStatusUpdate\": \"{{faker 'date.recent' 365}}\",\n    \"links\": [\n      {\n        \"href\": \"\",\n        \"rel\": \"\"\n      }\n    ],\n    \"modules\": {\n      \"factFinderModules\": [\n        {\n          \"available\": {{faker 'random.boolean'}},\n          \"factFinderId\": {{faker 'random.number'}},\n          \"links\": [\n            {\n              \"href\": \"\",\n              \"rel\": \"\"\n            }\n          ],\n          \"moduleId\": {{faker 'random.number'}},\n          \"moduleName\": \"{{oneOf (array 'Demographics' 'Assets' 'Liabilities' 'Incomes' 'Expenses' 'Insurance' 'Retirement' 'Education' 'MajorPurchase')}}\",\n          \"visited\": {{faker 'random.boolean'}}\n        }\n      ]\n    },\n    \"planId\": {{faker 'random.number'}},\n    \"planLevel\": \"{{oneOf (array 'Level2' 'Level1')}}\",\n    \"status\": \"{{oneOf (array 'New' 'InProgress' 'ClientSubmitted' 'AdvisorAccepted' 'Canceled' 'Draft' 'Deleted')}}\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eb7d9f29-1e93-4823-8e1c-af0f2c40de8d",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "023f651f-b46a-48f9-b0d8-1cf5f090d8ea",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Fact Finder data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1b79d935-f4c5-4d37-8ad6-9826e911a8e7",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Fact Finder.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9e0acad4-c171-4428-8e0c-dd1fb3b1e1fe",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Fact Finder not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ca44eb9a-dd86-400c-aee1-524c67158b94",
      "documentation": "Description: The operation creates a completely empty draft Fact Finder.<br />\r\n              Requirements: A householdId and list of modules must be provided.<br />\r\n              Purpose: Stages a Fact Finder for population.",
      "method": "post",
      "endpoint": "api/FactFinders",
      "responses": [
        {
          "uuid": "f446a626-d6a8-4ced-862c-999e19b59b64",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8dd1f233-e701-48a2-b884-11ab1f367e30",
          "body": "{\n  \"countryCode\": \"{{oneOf (array 'UnitedStates' 'Canada')}}\",\n  \"created\": \"{{faker 'date.recent' 365}}\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"householdId\": {{faker 'random.number'}},\n  \"lastStatusUpdate\": \"{{faker 'date.recent' 365}}\",\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"modules\": {\n    \"factFinderModules\": [\n      {\n        \"available\": {{faker 'random.boolean'}},\n        \"factFinderId\": {{faker 'random.number'}},\n        \"links\": [\n          {\n            \"href\": \"\",\n            \"rel\": \"\"\n          }\n        ],\n        \"moduleId\": {{faker 'random.number'}},\n        \"moduleName\": \"{{oneOf (array 'Demographics' 'Assets' 'Liabilities' 'Incomes' 'Expenses' 'Insurance' 'Retirement' 'Education' 'MajorPurchase')}}\",\n        \"visited\": {{faker 'random.boolean'}}\n      }\n    ]\n  },\n  \"planId\": {{faker 'random.number'}},\n  \"planLevel\": \"{{oneOf (array 'Level2' 'Level1')}}\",\n  \"status\": \"{{oneOf (array 'New' 'InProgress' 'ClientSubmitted' 'AdvisorAccepted' 'Canceled' 'Draft' 'Deleted')}}\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8d0c3017-853a-4b17-88c8-bb990a37084b",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2445fdb2-018a-40e8-ae15-2564f24fccdc",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Fact Finder data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "15a52f38-7027-4015-922a-e03a76fcc5c2",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Fact Finder.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8f707566-4e0d-4826-8914-a9d877754034",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Fact Finder not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3b5da9ef-9e16-448e-aec1-074b04a6e0d2",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "The request cannot be completed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3e7ba023-ff35-455d-a2c4-dfab237485c5",
      "documentation": "Description: The operation creates a new Populated Fact Finder.<br />\r\n              Requirements: A householdId and list of modules must be provided.<br />\r\n              Purpose: Creation of a Fact Finder.",
      "method": "post",
      "endpoint": "api/FactFinders/Populate",
      "responses": [
        {
          "uuid": "05b012a1-e034-4415-923e-091ffb305fe6",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cb8c03a6-74f0-4c95-aa4b-4f9e9e543966",
          "body": "{\n  \"countryCode\": \"{{oneOf (array 'UnitedStates' 'Canada')}}\",\n  \"created\": \"{{faker 'date.recent' 365}}\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"householdId\": {{faker 'random.number'}},\n  \"lastStatusUpdate\": \"{{faker 'date.recent' 365}}\",\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"modules\": {\n    \"factFinderModules\": [\n      {\n        \"available\": {{faker 'random.boolean'}},\n        \"factFinderId\": {{faker 'random.number'}},\n        \"links\": [\n          {\n            \"href\": \"\",\n            \"rel\": \"\"\n          }\n        ],\n        \"moduleId\": {{faker 'random.number'}},\n        \"moduleName\": \"{{oneOf (array 'Demographics' 'Assets' 'Liabilities' 'Incomes' 'Expenses' 'Insurance' 'Retirement' 'Education' 'MajorPurchase')}}\",\n        \"visited\": {{faker 'random.boolean'}}\n      }\n    ]\n  },\n  \"planId\": {{faker 'random.number'}},\n  \"planLevel\": \"{{oneOf (array 'Level2' 'Level1')}}\",\n  \"status\": \"{{oneOf (array 'New' 'InProgress' 'ClientSubmitted' 'AdvisorAccepted' 'Canceled' 'Draft' 'Deleted')}}\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1ce061f0-7537-43df-beb6-4e612094732d",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4608bd3f-da6d-40d3-a836-25d985b2c1d6",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Fact Finder data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7711885d-67e3-49f4-9a67-cf2367745e16",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Fact Finder.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a1e04cff-60a5-499b-b833-c2bbedd3d799",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Fact Finder not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ef291a1f-20ce-4917-b626-22587229b236",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "The request cannot be completed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2edfea54-318a-4b4b-b3a4-2a2df5ed01cf",
      "documentation": "Description: This operation retrieves all Fact Finder Modules for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Fact Finder Modules including description and policy type.",
      "method": "get",
      "endpoint": "api/FactFinders/:factFinderId/Modules",
      "responses": [
        {
          "uuid": "661af7c3-1745-4c31-b554-e7c85fcda9ae",
          "body": "{\n  \"factFinderModules\": [\n    {\n      \"available\": {{faker 'random.boolean'}},\n      \"factFinderId\": {{faker 'random.number'}},\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"moduleId\": {{faker 'random.number'}},\n      \"moduleName\": \"{{oneOf (array 'Demographics' 'Assets' 'Liabilities' 'Incomes' 'Expenses' 'Insurance' 'Retirement' 'Education' 'MajorPurchase')}}\",\n      \"visited\": {{faker 'random.boolean'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "13d7e8a8-3ecf-475a-93d3-f93f2f1e8083",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "290c89c9-d552-474a-84df-c651edb0f2aa",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Fact Finder Module data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f625faa3-f4f0-4df8-b1db-16d98312ab94",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Fact Finder Module not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "604cab95-f6b2-4fdb-9416-f9d5bdf835b8",
      "documentation": "Description: This operation retrieves a single Fact Finder Module for the specified Fact Finder Module ID.<br />\r\n              Purpose: Provides access to the Fact Finder Module including description and policy type.",
      "method": "get",
      "endpoint": "api/FactFinders/:factFinderId/Modules/:id",
      "responses": [
        {
          "uuid": "f2fc6192-e174-4edb-9647-b0d685171d3c",
          "body": "{\n  \"available\": {{faker 'random.boolean'}},\n  \"factFinderId\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"moduleId\": {{faker 'random.number'}},\n  \"moduleName\": \"{{oneOf (array 'Demographics' 'Assets' 'Liabilities' 'Incomes' 'Expenses' 'Insurance' 'Retirement' 'Education' 'MajorPurchase')}}\",\n  \"visited\": {{faker 'random.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "37ab7031-13e1-4de9-98e9-415f002aed98",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cfdaa1f6-f4d9-46c3-b060-4cefcb0c7976",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Fact Finder Module data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a98c0904-9ddb-4b84-8613-3d0fa13fe0ce",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Fact Finder Module not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "31a0ad6c-1127-40af-900b-f1ce64e2c324",
      "documentation": "Description: The operation updates a Fact Finder Module.<br />\r\n              Purpose: Allows for complete replacement of a Fact Finder Module on a Fact Finder.",
      "method": "put",
      "endpoint": "api/FactFinders/:factFinderId/Modules/:id",
      "responses": [
        {
          "uuid": "00f7b1a5-b943-46e2-99cc-ba506d86d2eb",
          "body": "{\n  \"available\": {{faker 'random.boolean'}},\n  \"factFinderId\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"moduleId\": {{faker 'random.number'}},\n  \"moduleName\": \"{{oneOf (array 'Demographics' 'Assets' 'Liabilities' 'Incomes' 'Expenses' 'Insurance' 'Retirement' 'Education' 'MajorPurchase')}}\",\n  \"visited\": {{faker 'random.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3dc653b9-5993-4772-ba9b-10f7b4ab7f7d",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d4e4b6bd-a350-4f03-99a3-0bab93b76501",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Fact Finder Module data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "25cb51ff-dbb1-4357-8058-b03d101df49b",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Fact Finder Module not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "53117303-743b-4a40-883c-efa6c822ccd8",
      "documentation": "Description: The operation retrieves Snapshots of a Fact Finder.<br />\r\n              Purpose: Allows for advisors to view all Snapshots taken of a Fact Finder.",
      "method": "get",
      "endpoint": "api/FactFinders/:factFinderId/Snapshots",
      "responses": [
        {
          "uuid": "0f00db9f-546e-45c4-be15-bf868b7f4198",
          "body": "{\n  \"snapshots\": [\n    {\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"factFinderData\": {\n        \"accounts\": [\n          {\n            \"accountHoldings\": [\n              {\n                \"accountHoldingId\": {{faker 'random.number'}},\n                \"accountId\": {{faker 'random.number'}},\n                \"costBasis\": {{faker 'random.float'}},\n                \"cusip\": \"\",\n                \"description\": \"\",\n                \"externalDestinationId\": \"\",\n                \"heldAway\": {{faker 'random.boolean'}},\n                \"marketValue\": {{faker 'random.float'}},\n                \"symbol\": \"\",\n                \"valuationDate\": \"{{faker 'date.recent' 365}}\"\n              }\n            ],\n            \"accountId\": {{faker 'random.number'}},\n            \"accountType\": {{faker 'random.number'}},\n            \"description\": \"\",\n            \"externalDestinationId\": \"\",\n            \"externalSourceId\": \"\",\n            \"externalSourceName\": \"\",\n            \"factFinderId\": {{faker 'random.number'}},\n            \"lastUpdated\": \"{{faker 'date.recent' 365}}\",\n            \"marketValue\": {{faker 'random.float'}},\n            \"owner\": \"{{oneOf (array 'Client' 'CoClient' 'Joint' 'Dependent' 'Other')}}\",\n            \"ownerDependentId\": {{faker 'random.number'}},\n            \"savingsStrategies\": [\n              {\n                \"accountId\": {{faker 'random.number'}},\n                \"employerSavingsAmount\": {{faker 'random.float'}},\n                \"employerSavingsAmountType\": \"{{oneOf (array 'Dollar' 'Percent' 'Max')}}\",\n                \"endDate\": \"{{faker 'date.recent' 365}}\",\n                \"externalDestinationId\": \"\",\n                \"frequencyId\": {{faker 'random.number'}},\n                \"mandatoryAmount\": {{faker 'random.float'}},\n                \"mandatoryAmountType\": \"{{oneOf (array 'Dollar' 'Percent' 'Max')}}\",\n                \"postTaxSavingsAmount\": {{faker 'random.float'}},\n                \"postTaxSavingsAmountType\": \"{{oneOf (array 'Dollar' 'Percent' 'Max')}}\",\n                \"preTaxSavingsAmount\": {{faker 'random.float'}},\n                \"preTaxSavingsAmountType\": \"{{oneOf (array 'Dollar' 'Percent' 'Max')}}\",\n                \"savingsStrategyId\": {{faker 'random.number'}},\n                \"startDate\": \"{{faker 'date.recent' 365}}\"\n              }\n            ]\n          }\n        ],\n        \"criticalIllnessInsurancePolicies\": [\n          {\n            \"benefit\": {{faker 'random.float'}},\n            \"criticalIllnessInsurancePolicyId\": {{faker 'random.number'}},\n            \"description\": \"\",\n            \"externalDestinationId\": \"\",\n            \"factFinderId\": {{faker 'random.number'}},\n            \"frequency\": {{faker 'random.number'}},\n            \"insured\": \"{{oneOf (array 'Client' 'CoClient')}}\",\n            \"policyType\": {{faker 'random.number'}},\n            \"premium\": {{faker 'random.float'}}\n          }\n        ],\n        \"definedBenefitPensions\": [\n          {\n            \"definedBenefitPensionId\": {{faker 'random.number'}},\n            \"description\": \"\",\n            \"estimatedAmount\": {{faker 'random.float'}},\n            \"externalDestinationId\": \"\",\n            \"factFinderId\": {{faker 'random.number'}},\n            \"member\": \"{{oneOf (array 'Client' 'CoClient')}}\",\n            \"startDate\": \"{{faker 'date.recent' 365}}\"\n          }\n        ],\n        \"demographics\": {\n          \"city\": \"\",\n          \"created\": \"{{faker 'date.recent' 365}}\",\n          \"demographicsId\": {{faker 'random.number'}},\n          \"dependents\": [\n            {\n              \"birthDate\": \"{{faker 'date.recent' 365}}\",\n              \"demographicsId\": {{faker 'random.number'}},\n              \"dependentId\": {{faker 'random.number'}},\n              \"dependentOf\": \"{{oneOf (array 'Client' 'CoClient' 'Joint' 'Other')}}\",\n              \"externalDestinationId\": \"\",\n              \"firstName\": \"\",\n              \"lastName\": \"\",\n              \"relationship\": \"{{oneOf (array 'Son' 'Daughter' 'FosterSon' 'FosterDaughter' 'Grandson' 'Granddaughter' 'Nephew' 'Niece' 'MaleCousin' 'FemaleCousin' 'Father' 'Mother' 'Grandfather' 'Grandmother' 'Uncle' 'Aunt' 'Brother' 'Sister' 'SonInLaw' 'DaughterInLaw' 'MaleOther' 'FemaleOther')}}\"\n            }\n          ],\n          \"externalDestinationId\": \"\",\n          \"externalSourceId\": \"\",\n          \"factFinderId\": {{faker 'random.number'}},\n          \"head1\": {\n            \"alreadyRetired\": {{faker 'random.boolean'}},\n            \"birthDate\": \"{{faker 'date.recent' 365}}\",\n            \"externalDestinationId\": \"\",\n            \"firstName\": \"\",\n            \"gender\": \"{{oneOf (array 'Male' 'Female' 'None')}}\",\n            \"lastName\": \"\",\n            \"taxFilingStatus\": {{faker 'random.number'}}\n          },\n          \"head2\": {\n            \"alreadyRetired\": {{faker 'random.boolean'}},\n            \"birthDate\": \"{{faker 'date.recent' 365}}\",\n            \"externalDestinationId\": \"\",\n            \"firstName\": \"\",\n            \"gender\": \"{{oneOf (array 'Male' 'Female' 'None')}}\",\n            \"lastName\": \"\",\n            \"taxFilingStatus\": {{faker 'random.number'}}\n          },\n          \"jointAnalysis\": {{faker 'random.boolean'}},\n          \"lockRetirement\": {{faker 'random.boolean'}},\n          \"state\": {{faker 'random.number'}}\n        },\n        \"disabilityInsurancePolicies\": [\n          {\n            \"benefit\": {{faker 'random.float'}},\n            \"benefitFrequency\": {{faker 'random.number'}},\n            \"benefitType\": \"{{oneOf (array 'Dollar' 'Percent')}}\",\n            \"description\": \"\",\n            \"disabilityInsurancePolicyId\": {{faker 'random.number'}},\n            \"externalDestinationId\": \"\",\n            \"factFinderId\": {{faker 'random.number'}},\n            \"insured\": \"{{oneOf (array 'Client' 'CoClient')}}\",\n            \"policyType\": {{faker 'random.number'}},\n            \"premium\": {{faker 'random.float'}},\n            \"premiumFrequency\": {{faker 'random.number'}}\n          }\n        ],\n        \"educationGoals\": [\n          {\n            \"description\": \"\",\n            \"educationExpenses\": [\n              {\n                \"annualCost\": {{faker 'random.float'}},\n                \"educationExpenseId\": {{faker 'random.number'}},\n                \"educationGoalId\": {{faker 'random.number'}},\n                \"externalDestinationId\": \"\",\n                \"member\": \"{{oneOf (array 'Client' 'CoClient' 'Dependent')}}\",\n                \"memberDependentId\": {{faker 'random.number'}},\n                \"startYear\": \"{{faker 'date.recent' 365}}\",\n                \"years\": {{faker 'random.number'}}\n              }\n            ],\n            \"educationGoalId\": {{faker 'random.number'}},\n            \"externalDestinationId\": \"\",\n            \"factFinderId\": {{faker 'random.number'}},\n            \"projectedCost\": {{faker 'random.float'}}\n          }\n        ],\n        \"expenses\": [\n          {\n            \"annualPeriod\": {{faker 'random.number'}},\n            \"description\": \"\",\n            \"endDate\": \"{{faker 'date.recent' 365}}\",\n            \"expenseAmount\": {{faker 'random.float'}},\n            \"expenseId\": {{faker 'random.number'}},\n            \"expenseTypeId\": {{faker 'random.number'}},\n            \"externalDestinationId\": \"\",\n            \"factFinderId\": {{faker 'random.number'}},\n            \"frequency\": {{faker 'random.number'}},\n            \"member\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n            \"startDate\": \"{{faker 'date.recent' 365}}\"\n          }\n        ],\n        \"incomes\": [\n          {\n            \"annualAmount\": {{faker 'random.float'}},\n            \"description\": \"\",\n            \"endDate\": \"{{faker 'date.recent' 365}}\",\n            \"externalDestinationId\": \"\",\n            \"factFinderId\": {{faker 'random.number'}},\n            \"incomeId\": {{faker 'random.number'}},\n            \"incomeTypeId\": {{faker 'random.number'}},\n            \"owner\": \"{{oneOf (array 'Client' 'CoClient')}}\",\n            \"startDate\": \"{{faker 'date.recent' 365}}\"\n          }\n        ],\n        \"liabilities\": [\n          {\n            \"balance\": {{faker 'random.float'}},\n            \"balanceAsOfDate\": \"{{faker 'date.recent' 365}}\",\n            \"description\": \"\",\n            \"externalDestinationId\": \"\",\n            \"externalSourceId\": \"\",\n            \"factFinderId\": {{faker 'random.number'}},\n            \"frequency\": {{faker 'random.number'}},\n            \"importSource\": \"\",\n            \"interestRate\": {{faker 'random.float'}},\n            \"lastUpdated\": \"{{faker 'date.recent' 365}}\",\n            \"liabilityId\": {{faker 'random.number'}},\n            \"liabilityType\": {{faker 'random.number'}},\n            \"loanDate\": \"{{faker 'date.recent' 365}}\",\n            \"originalPrincipal\": {{faker 'random.float'}},\n            \"owner\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n            \"payment\": {{faker 'random.float'}},\n            \"paymentType\": \"{{oneOf (array 'InterestOnly' 'PrincipalAndInterest' 'SetPrincipal' 'LastPeriod')}}\"\n          }\n        ],\n        \"lifeInsurancePolicies\": [\n          {\n            \"beneficiary\": \"{{oneOf (array 'Client' 'CoClient' 'Dependent' 'Other')}}\",\n            \"beneficiaryDependentId\": {{faker 'random.number'}},\n            \"benefit\": {{faker 'random.float'}},\n            \"description\": \"\",\n            \"externalDestinationId\": \"\",\n            \"factFinderId\": {{faker 'random.number'}},\n            \"frequency\": {{faker 'random.number'}},\n            \"generalAccountMarketValue\": {{faker 'random.float'}},\n            \"insured\": \"{{oneOf (array 'Client' 'CoClient' 'FirstToDie' 'SecondToDie' 'Other')}}\",\n            \"lifeInsurancePolicyId\": {{faker 'random.number'}},\n            \"payer\": \"{{oneOf (array 'Client' 'CoClient' 'Joint' 'Other')}}\",\n            \"policyType\": {{faker 'random.number'}},\n            \"premium\": {{faker 'random.float'}},\n            \"subaccounts\": [\n              {\n                \"description\": \"\",\n                \"externalDestinationId\": \"\",\n                \"lifeInsurancePolicyId\": {{faker 'random.number'}},\n                \"lifeInsurancePolicySubaccountId\": {{faker 'random.number'}},\n                \"marketValue\": {{faker 'random.float'}},\n                \"symbol\": \"\"\n              }\n            ]\n          }\n        ],\n        \"lifestyleAssets\": [\n          {\n            \"description\": \"\",\n            \"externalDestinationId\": \"\",\n            \"factFinderId\": {{faker 'random.number'}},\n            \"lifestyleAssetId\": {{faker 'random.number'}},\n            \"marketValue\": {{faker 'random.float'}},\n            \"owner\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n            \"purchaseAmount\": {{faker 'random.float'}},\n            \"purchaseDate\": \"{{faker 'date.recent' 365}}\",\n            \"type\": {{faker 'random.number'}}\n          }\n        ],\n        \"longTermCareInsurancePolicies\": [\n          {\n            \"benefit\": {{faker 'random.float'}},\n            \"benefitFrequency\": {{faker 'random.number'}},\n            \"description\": \"\",\n            \"externalDestinationId\": \"\",\n            \"factFinderId\": {{faker 'random.number'}},\n            \"insured\": \"{{oneOf (array 'Client' 'CoClient')}}\",\n            \"longTermCareInsurancePolicyId\": {{faker 'random.number'}},\n            \"premium\": {{faker 'random.float'}},\n            \"premiumFrequency\": {{faker 'random.number'}}\n          }\n        ],\n        \"majorPurchaseGoals\": [\n          {\n            \"amount\": {{faker 'random.float'}},\n            \"description\": \"\",\n            \"externalDestinationId\": \"\",\n            \"factFinderId\": {{faker 'random.number'}},\n            \"majorPurchaseGoalId\": {{faker 'random.number'}},\n            \"majorPurchaseGoalTypeId\": {{faker 'random.number'}},\n            \"member\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n            \"targetDate\": \"{{faker 'date.recent' 365}}\"\n          }\n        ],\n        \"planYear\": {{faker 'random.number'}},\n        \"realEstateAssets\": [\n          {\n            \"description\": \"\",\n            \"externalDestinationId\": \"\",\n            \"factFinderId\": {{faker 'random.number'}},\n            \"frequency\": {{faker 'random.number'}},\n            \"marketValue\": {{faker 'random.float'}},\n            \"owner\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n            \"purchaseAmount\": {{faker 'random.float'}},\n            \"purchaseDate\": \"{{faker 'date.recent' 365}}\",\n            \"realEstateAssetId\": {{faker 'random.number'}},\n            \"rentalIncome\": {{faker 'random.float'}}\n          }\n        ],\n        \"retirementGoal\": {\n          \"externalDestinationId\": \"\",\n          \"factFinderId\": {{faker 'random.number'}},\n          \"head1RetirementDate\": \"{{faker 'date.recent' 365}}\",\n          \"head2RetirementDate\": \"{{faker 'date.recent' 365}}\",\n          \"retirementExpenses\": [\n            {\n              \"amount\": {{faker 'random.float'}},\n              \"annualPeriod\": {{faker 'random.number'}},\n              \"description\": \"\",\n              \"endDate\": \"{{faker 'date.recent' 365}}\",\n              \"externalDestinationId\": \"\",\n              \"frequency\": {{faker 'random.number'}},\n              \"member\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n              \"retirementExpenseId\": {{faker 'random.number'}},\n              \"retirementGoalId\": {{faker 'random.number'}},\n              \"startDate\": \"{{faker 'date.recent' 365}}\"\n            }\n          ],\n          \"retirementGoalId\": {{faker 'random.number'}}\n        }\n      },\n      \"factFinderId\": {{faker 'random.number'}},\n      \"factFinderStatus\": \"{{oneOf (array 'New' 'InProgress' 'ClientSubmitted' 'AdvisorAccepted' 'Canceled' 'Draft' 'Deleted')}}\",\n      \"snapshotId\": {{faker 'random.number'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e6229fbc-346f-435c-af35-623fc8e51101",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "810a4684-a588-4ca5-ba4e-f52dee479281",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Fact Finder data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "23e72a23-eb0e-46fc-885e-559614ce2e64",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Fact Finder.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c7cd9f1a-3f1f-4b23-8206-814e6f31991f",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Fact Finder not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "374d2810-2fd3-47e4-a31a-4cfb906c0649",
      "documentation": "Description: The operation creates a Snapshot of a Fact Finder.<br />\r\n              Purpose: Allows for advisors to compare the current fact finder to a snapshot prior to acceptance.",
      "method": "post",
      "endpoint": "api/FactFinders/:factFinderId/Snapshots",
      "responses": [
        {
          "uuid": "6bfed717-e565-458d-9518-1c0ec28d876e",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5348beee-dbc5-406d-ab63-99a7cf00df53",
          "body": "{\n  \"created\": \"{{faker 'date.recent' 365}}\",\n  \"factFinderData\": {\n    \"accounts\": [\n      {\n        \"accountHoldings\": [\n          {\n            \"accountHoldingId\": {{faker 'random.number'}},\n            \"accountId\": {{faker 'random.number'}},\n            \"costBasis\": {{faker 'random.float'}},\n            \"cusip\": \"\",\n            \"description\": \"\",\n            \"externalDestinationId\": \"\",\n            \"heldAway\": {{faker 'random.boolean'}},\n            \"marketValue\": {{faker 'random.float'}},\n            \"symbol\": \"\",\n            \"valuationDate\": \"{{faker 'date.recent' 365}}\"\n          }\n        ],\n        \"accountId\": {{faker 'random.number'}},\n        \"accountType\": {{faker 'random.number'}},\n        \"description\": \"\",\n        \"externalDestinationId\": \"\",\n        \"externalSourceId\": \"\",\n        \"externalSourceName\": \"\",\n        \"factFinderId\": {{faker 'random.number'}},\n        \"lastUpdated\": \"{{faker 'date.recent' 365}}\",\n        \"marketValue\": {{faker 'random.float'}},\n        \"owner\": \"{{oneOf (array 'Client' 'CoClient' 'Joint' 'Dependent' 'Other')}}\",\n        \"ownerDependentId\": {{faker 'random.number'}},\n        \"savingsStrategies\": [\n          {\n            \"accountId\": {{faker 'random.number'}},\n            \"employerSavingsAmount\": {{faker 'random.float'}},\n            \"employerSavingsAmountType\": \"{{oneOf (array 'Dollar' 'Percent' 'Max')}}\",\n            \"endDate\": \"{{faker 'date.recent' 365}}\",\n            \"externalDestinationId\": \"\",\n            \"frequencyId\": {{faker 'random.number'}},\n            \"mandatoryAmount\": {{faker 'random.float'}},\n            \"mandatoryAmountType\": \"{{oneOf (array 'Dollar' 'Percent' 'Max')}}\",\n            \"postTaxSavingsAmount\": {{faker 'random.float'}},\n            \"postTaxSavingsAmountType\": \"{{oneOf (array 'Dollar' 'Percent' 'Max')}}\",\n            \"preTaxSavingsAmount\": {{faker 'random.float'}},\n            \"preTaxSavingsAmountType\": \"{{oneOf (array 'Dollar' 'Percent' 'Max')}}\",\n            \"savingsStrategyId\": {{faker 'random.number'}},\n            \"startDate\": \"{{faker 'date.recent' 365}}\"\n          }\n        ]\n      }\n    ],\n    \"criticalIllnessInsurancePolicies\": [\n      {\n        \"benefit\": {{faker 'random.float'}},\n        \"criticalIllnessInsurancePolicyId\": {{faker 'random.number'}},\n        \"description\": \"\",\n        \"externalDestinationId\": \"\",\n        \"factFinderId\": {{faker 'random.number'}},\n        \"frequency\": {{faker 'random.number'}},\n        \"insured\": \"{{oneOf (array 'Client' 'CoClient')}}\",\n        \"policyType\": {{faker 'random.number'}},\n        \"premium\": {{faker 'random.float'}}\n      }\n    ],\n    \"definedBenefitPensions\": [\n      {\n        \"definedBenefitPensionId\": {{faker 'random.number'}},\n        \"description\": \"\",\n        \"estimatedAmount\": {{faker 'random.float'}},\n        \"externalDestinationId\": \"\",\n        \"factFinderId\": {{faker 'random.number'}},\n        \"member\": \"{{oneOf (array 'Client' 'CoClient')}}\",\n        \"startDate\": \"{{faker 'date.recent' 365}}\"\n      }\n    ],\n    \"demographics\": {\n      \"city\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"demographicsId\": {{faker 'random.number'}},\n      \"dependents\": [\n        {\n          \"birthDate\": \"{{faker 'date.recent' 365}}\",\n          \"demographicsId\": {{faker 'random.number'}},\n          \"dependentId\": {{faker 'random.number'}},\n          \"dependentOf\": \"{{oneOf (array 'Client' 'CoClient' 'Joint' 'Other')}}\",\n          \"externalDestinationId\": \"\",\n          \"firstName\": \"\",\n          \"lastName\": \"\",\n          \"relationship\": \"{{oneOf (array 'Son' 'Daughter' 'FosterSon' 'FosterDaughter' 'Grandson' 'Granddaughter' 'Nephew' 'Niece' 'MaleCousin' 'FemaleCousin' 'Father' 'Mother' 'Grandfather' 'Grandmother' 'Uncle' 'Aunt' 'Brother' 'Sister' 'SonInLaw' 'DaughterInLaw' 'MaleOther' 'FemaleOther')}}\"\n        }\n      ],\n      \"externalDestinationId\": \"\",\n      \"externalSourceId\": \"\",\n      \"factFinderId\": {{faker 'random.number'}},\n      \"head1\": {\n        \"alreadyRetired\": {{faker 'random.boolean'}},\n        \"birthDate\": \"{{faker 'date.recent' 365}}\",\n        \"externalDestinationId\": \"\",\n        \"firstName\": \"\",\n        \"gender\": \"{{oneOf (array 'Male' 'Female' 'None')}}\",\n        \"lastName\": \"\",\n        \"taxFilingStatus\": {{faker 'random.number'}}\n      },\n      \"head2\": {\n        \"alreadyRetired\": {{faker 'random.boolean'}},\n        \"birthDate\": \"{{faker 'date.recent' 365}}\",\n        \"externalDestinationId\": \"\",\n        \"firstName\": \"\",\n        \"gender\": \"{{oneOf (array 'Male' 'Female' 'None')}}\",\n        \"lastName\": \"\",\n        \"taxFilingStatus\": {{faker 'random.number'}}\n      },\n      \"jointAnalysis\": {{faker 'random.boolean'}},\n      \"lockRetirement\": {{faker 'random.boolean'}},\n      \"state\": {{faker 'random.number'}}\n    },\n    \"disabilityInsurancePolicies\": [\n      {\n        \"benefit\": {{faker 'random.float'}},\n        \"benefitFrequency\": {{faker 'random.number'}},\n        \"benefitType\": \"{{oneOf (array 'Dollar' 'Percent')}}\",\n        \"description\": \"\",\n        \"disabilityInsurancePolicyId\": {{faker 'random.number'}},\n        \"externalDestinationId\": \"\",\n        \"factFinderId\": {{faker 'random.number'}},\n        \"insured\": \"{{oneOf (array 'Client' 'CoClient')}}\",\n        \"policyType\": {{faker 'random.number'}},\n        \"premium\": {{faker 'random.float'}},\n        \"premiumFrequency\": {{faker 'random.number'}}\n      }\n    ],\n    \"educationGoals\": [\n      {\n        \"description\": \"\",\n        \"educationExpenses\": [\n          {\n            \"annualCost\": {{faker 'random.float'}},\n            \"educationExpenseId\": {{faker 'random.number'}},\n            \"educationGoalId\": {{faker 'random.number'}},\n            \"externalDestinationId\": \"\",\n            \"member\": \"{{oneOf (array 'Client' 'CoClient' 'Dependent')}}\",\n            \"memberDependentId\": {{faker 'random.number'}},\n            \"startYear\": \"{{faker 'date.recent' 365}}\",\n            \"years\": {{faker 'random.number'}}\n          }\n        ],\n        \"educationGoalId\": {{faker 'random.number'}},\n        \"externalDestinationId\": \"\",\n        \"factFinderId\": {{faker 'random.number'}},\n        \"projectedCost\": {{faker 'random.float'}}\n      }\n    ],\n    \"expenses\": [\n      {\n        \"annualPeriod\": {{faker 'random.number'}},\n        \"description\": \"\",\n        \"endDate\": \"{{faker 'date.recent' 365}}\",\n        \"expenseAmount\": {{faker 'random.float'}},\n        \"expenseId\": {{faker 'random.number'}},\n        \"expenseTypeId\": {{faker 'random.number'}},\n        \"externalDestinationId\": \"\",\n        \"factFinderId\": {{faker 'random.number'}},\n        \"frequency\": {{faker 'random.number'}},\n        \"member\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n        \"startDate\": \"{{faker 'date.recent' 365}}\"\n      }\n    ],\n    \"incomes\": [\n      {\n        \"annualAmount\": {{faker 'random.float'}},\n        \"description\": \"\",\n        \"endDate\": \"{{faker 'date.recent' 365}}\",\n        \"externalDestinationId\": \"\",\n        \"factFinderId\": {{faker 'random.number'}},\n        \"incomeId\": {{faker 'random.number'}},\n        \"incomeTypeId\": {{faker 'random.number'}},\n        \"owner\": \"{{oneOf (array 'Client' 'CoClient')}}\",\n        \"startDate\": \"{{faker 'date.recent' 365}}\"\n      }\n    ],\n    \"liabilities\": [\n      {\n        \"balance\": {{faker 'random.float'}},\n        \"balanceAsOfDate\": \"{{faker 'date.recent' 365}}\",\n        \"description\": \"\",\n        \"externalDestinationId\": \"\",\n        \"externalSourceId\": \"\",\n        \"factFinderId\": {{faker 'random.number'}},\n        \"frequency\": {{faker 'random.number'}},\n        \"importSource\": \"\",\n        \"interestRate\": {{faker 'random.float'}},\n        \"lastUpdated\": \"{{faker 'date.recent' 365}}\",\n        \"liabilityId\": {{faker 'random.number'}},\n        \"liabilityType\": {{faker 'random.number'}},\n        \"loanDate\": \"{{faker 'date.recent' 365}}\",\n        \"originalPrincipal\": {{faker 'random.float'}},\n        \"owner\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n        \"payment\": {{faker 'random.float'}},\n        \"paymentType\": \"{{oneOf (array 'InterestOnly' 'PrincipalAndInterest' 'SetPrincipal' 'LastPeriod')}}\"\n      }\n    ],\n    \"lifeInsurancePolicies\": [\n      {\n        \"beneficiary\": \"{{oneOf (array 'Client' 'CoClient' 'Dependent' 'Other')}}\",\n        \"beneficiaryDependentId\": {{faker 'random.number'}},\n        \"benefit\": {{faker 'random.float'}},\n        \"description\": \"\",\n        \"externalDestinationId\": \"\",\n        \"factFinderId\": {{faker 'random.number'}},\n        \"frequency\": {{faker 'random.number'}},\n        \"generalAccountMarketValue\": {{faker 'random.float'}},\n        \"insured\": \"{{oneOf (array 'Client' 'CoClient' 'FirstToDie' 'SecondToDie' 'Other')}}\",\n        \"lifeInsurancePolicyId\": {{faker 'random.number'}},\n        \"payer\": \"{{oneOf (array 'Client' 'CoClient' 'Joint' 'Other')}}\",\n        \"policyType\": {{faker 'random.number'}},\n        \"premium\": {{faker 'random.float'}},\n        \"subaccounts\": [\n          {\n            \"description\": \"\",\n            \"externalDestinationId\": \"\",\n            \"lifeInsurancePolicyId\": {{faker 'random.number'}},\n            \"lifeInsurancePolicySubaccountId\": {{faker 'random.number'}},\n            \"marketValue\": {{faker 'random.float'}},\n            \"symbol\": \"\"\n          }\n        ]\n      }\n    ],\n    \"lifestyleAssets\": [\n      {\n        \"description\": \"\",\n        \"externalDestinationId\": \"\",\n        \"factFinderId\": {{faker 'random.number'}},\n        \"lifestyleAssetId\": {{faker 'random.number'}},\n        \"marketValue\": {{faker 'random.float'}},\n        \"owner\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n        \"purchaseAmount\": {{faker 'random.float'}},\n        \"purchaseDate\": \"{{faker 'date.recent' 365}}\",\n        \"type\": {{faker 'random.number'}}\n      }\n    ],\n    \"longTermCareInsurancePolicies\": [\n      {\n        \"benefit\": {{faker 'random.float'}},\n        \"benefitFrequency\": {{faker 'random.number'}},\n        \"description\": \"\",\n        \"externalDestinationId\": \"\",\n        \"factFinderId\": {{faker 'random.number'}},\n        \"insured\": \"{{oneOf (array 'Client' 'CoClient')}}\",\n        \"longTermCareInsurancePolicyId\": {{faker 'random.number'}},\n        \"premium\": {{faker 'random.float'}},\n        \"premiumFrequency\": {{faker 'random.number'}}\n      }\n    ],\n    \"majorPurchaseGoals\": [\n      {\n        \"amount\": {{faker 'random.float'}},\n        \"description\": \"\",\n        \"externalDestinationId\": \"\",\n        \"factFinderId\": {{faker 'random.number'}},\n        \"majorPurchaseGoalId\": {{faker 'random.number'}},\n        \"majorPurchaseGoalTypeId\": {{faker 'random.number'}},\n        \"member\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n        \"targetDate\": \"{{faker 'date.recent' 365}}\"\n      }\n    ],\n    \"planYear\": {{faker 'random.number'}},\n    \"realEstateAssets\": [\n      {\n        \"description\": \"\",\n        \"externalDestinationId\": \"\",\n        \"factFinderId\": {{faker 'random.number'}},\n        \"frequency\": {{faker 'random.number'}},\n        \"marketValue\": {{faker 'random.float'}},\n        \"owner\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n        \"purchaseAmount\": {{faker 'random.float'}},\n        \"purchaseDate\": \"{{faker 'date.recent' 365}}\",\n        \"realEstateAssetId\": {{faker 'random.number'}},\n        \"rentalIncome\": {{faker 'random.float'}}\n      }\n    ],\n    \"retirementGoal\": {\n      \"externalDestinationId\": \"\",\n      \"factFinderId\": {{faker 'random.number'}},\n      \"head1RetirementDate\": \"{{faker 'date.recent' 365}}\",\n      \"head2RetirementDate\": \"{{faker 'date.recent' 365}}\",\n      \"retirementExpenses\": [\n        {\n          \"amount\": {{faker 'random.float'}},\n          \"annualPeriod\": {{faker 'random.number'}},\n          \"description\": \"\",\n          \"endDate\": \"{{faker 'date.recent' 365}}\",\n          \"externalDestinationId\": \"\",\n          \"frequency\": {{faker 'random.number'}},\n          \"member\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n          \"retirementExpenseId\": {{faker 'random.number'}},\n          \"retirementGoalId\": {{faker 'random.number'}},\n          \"startDate\": \"{{faker 'date.recent' 365}}\"\n        }\n      ],\n      \"retirementGoalId\": {{faker 'random.number'}}\n    }\n  },\n  \"factFinderId\": {{faker 'random.number'}},\n  \"factFinderStatus\": \"{{oneOf (array 'New' 'InProgress' 'ClientSubmitted' 'AdvisorAccepted' 'Canceled' 'Draft' 'Deleted')}}\",\n  \"snapshotId\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5b8e00de-e385-4a28-81a4-133714b5920f",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "49efeaba-a046-4022-b08c-99521f487bc9",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Fact Finder data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8f872f2e-d955-4f16-b697-ed840e6c4590",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Fact Finder.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fbdbba12-191f-4e21-a833-a66322584a8f",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Fact Finder not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "856173fb-535d-4e5a-9e0b-e4cfb963a204",
      "documentation": "Description: This operation deletes a single Fact Finder for the specified Fact Finder ID.<br />\r\n              Purpose: Deletes the fact finder.",
      "method": "delete",
      "endpoint": "api/FactFinders/:id",
      "responses": [
        {
          "uuid": "fde7a1a9-4f1e-4fec-958b-d0d1975ed74e",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1acc0731-293b-455d-b8f6-687f4f1b6b57",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "148930b7-8334-4b52-abfb-1e723981e365",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0eb86c79-5967-4dde-a236-f2fd8bc94684",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Fact Finder data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "be091a47-9e3f-4029-b7ec-1546094ac072",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Fact Finder.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "823db289-b8aa-4c74-a270-f1d958e316b4",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Fact Finder not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "502b74d5-9559-4177-a73c-f169bb54ff3a",
      "documentation": "Description: This operation retrieves a single Fact Finder for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Fact Finder including status.",
      "method": "get",
      "endpoint": "api/FactFinders/:id",
      "responses": [
        {
          "uuid": "35279082-94e7-45d6-9aaa-e4748fdd75c3",
          "body": "{\n  \"countryCode\": \"{{oneOf (array 'UnitedStates' 'Canada')}}\",\n  \"created\": \"{{faker 'date.recent' 365}}\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"householdId\": {{faker 'random.number'}},\n  \"lastStatusUpdate\": \"{{faker 'date.recent' 365}}\",\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"modules\": {\n    \"factFinderModules\": [\n      {\n        \"available\": {{faker 'random.boolean'}},\n        \"factFinderId\": {{faker 'random.number'}},\n        \"links\": [\n          {\n            \"href\": \"\",\n            \"rel\": \"\"\n          }\n        ],\n        \"moduleId\": {{faker 'random.number'}},\n        \"moduleName\": \"{{oneOf (array 'Demographics' 'Assets' 'Liabilities' 'Incomes' 'Expenses' 'Insurance' 'Retirement' 'Education' 'MajorPurchase')}}\",\n        \"visited\": {{faker 'random.boolean'}}\n      }\n    ]\n  },\n  \"planId\": {{faker 'random.number'}},\n  \"planLevel\": \"{{oneOf (array 'Level2' 'Level1')}}\",\n  \"status\": \"{{oneOf (array 'New' 'InProgress' 'ClientSubmitted' 'AdvisorAccepted' 'Canceled' 'Draft' 'Deleted')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b05a5844-ca37-4238-8657-25b51e8f0017",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7a730d42-c577-43be-8885-7fcf878e6404",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Fact Finder data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fd02524a-abbf-4b34-88ba-3f144a9e427c",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Fact Finder.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fc4cedfa-aac3-40ef-a017-5b1518ab07c3",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Fact Finder not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "66616695-b452-434b-880d-8c458e68bb4f",
      "documentation": "Description: The operation updates a Fact Finder.<br />\r\n              Purpose: Allows for the updating of a Fact Finder.",
      "method": "put",
      "endpoint": "api/FactFinders/:id",
      "responses": [
        {
          "uuid": "bc3ca086-c80d-4f72-a7c3-026aa060a139",
          "body": "{\n  \"countryCode\": \"{{oneOf (array 'UnitedStates' 'Canada')}}\",\n  \"created\": \"{{faker 'date.recent' 365}}\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"householdId\": {{faker 'random.number'}},\n  \"lastStatusUpdate\": \"{{faker 'date.recent' 365}}\",\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"modules\": {\n    \"factFinderModules\": [\n      {\n        \"available\": {{faker 'random.boolean'}},\n        \"factFinderId\": {{faker 'random.number'}},\n        \"links\": [\n          {\n            \"href\": \"\",\n            \"rel\": \"\"\n          }\n        ],\n        \"moduleId\": {{faker 'random.number'}},\n        \"moduleName\": \"{{oneOf (array 'Demographics' 'Assets' 'Liabilities' 'Incomes' 'Expenses' 'Insurance' 'Retirement' 'Education' 'MajorPurchase')}}\",\n        \"visited\": {{faker 'random.boolean'}}\n      }\n    ]\n  },\n  \"planId\": {{faker 'random.number'}},\n  \"planLevel\": \"{{oneOf (array 'Level2' 'Level1')}}\",\n  \"status\": \"{{oneOf (array 'New' 'InProgress' 'ClientSubmitted' 'AdvisorAccepted' 'Canceled' 'Draft' 'Deleted')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "57c42d51-cadc-4d4a-8b24-0cb897cf7ed5",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bb2f5b39-472f-4424-a7eb-5e214477352a",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Fact Finder data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1f3ea0ee-fdca-45a0-b38c-dc0cd5154344",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Fact Finder.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "57292e1b-1819-4e21-8d46-77daf2e7dcc1",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Fact Finder not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9cc20bd3-8cd0-4650-89e9-bfeea501b2fd",
      "documentation": "Description: The operation populates a fact finder.<br />\r\n              Purpose: Allows for the population of a Fact Finder based on a NaviPlan plan or client. This\r\n                       operation cannot be performed on a Fact Finder more than once.",
      "method": "put",
      "endpoint": "api/FactFinders/:id/Populate",
      "responses": [
        {
          "uuid": "62443b4d-024b-475e-b03d-413e3355adc4",
          "body": "{\n  \"countryCode\": \"{{oneOf (array 'UnitedStates' 'Canada')}}\",\n  \"created\": \"{{faker 'date.recent' 365}}\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"householdId\": {{faker 'random.number'}},\n  \"lastStatusUpdate\": \"{{faker 'date.recent' 365}}\",\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"modules\": {\n    \"factFinderModules\": [\n      {\n        \"available\": {{faker 'random.boolean'}},\n        \"factFinderId\": {{faker 'random.number'}},\n        \"links\": [\n          {\n            \"href\": \"\",\n            \"rel\": \"\"\n          }\n        ],\n        \"moduleId\": {{faker 'random.number'}},\n        \"moduleName\": \"{{oneOf (array 'Demographics' 'Assets' 'Liabilities' 'Incomes' 'Expenses' 'Insurance' 'Retirement' 'Education' 'MajorPurchase')}}\",\n        \"visited\": {{faker 'random.boolean'}}\n      }\n    ]\n  },\n  \"planId\": {{faker 'random.number'}},\n  \"planLevel\": \"{{oneOf (array 'Level2' 'Level1')}}\",\n  \"status\": \"{{oneOf (array 'New' 'InProgress' 'ClientSubmitted' 'AdvisorAccepted' 'Canceled' 'Draft' 'Deleted')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Fact Finder was successfully populated.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2340f07c-2002-4788-9a63-087d2be6d176",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0501ce44-a4c6-4a4b-80ac-b5b63032101f",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Fact Finder data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "202dc085-7126-4f1c-9b87-fd28e6c4627f",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Fact Finder.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c7097cd5-94d7-4bc8-a54d-5d8217ffb616",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Fact Finder not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "83449320-22fc-409b-8d71-21f92eef922c",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "Fact Finder already populated.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fb1b699e-15dc-4310-a37c-c7ee950d40a5",
      "documentation": "Description: This operation retrieves all Filing Status Types for the specified country.<br />\r\n              Purpose: Provides access to the Filing Status Types including id and type description.",
      "method": "get",
      "endpoint": "api/FilingStatusTypes",
      "responses": [
        {
          "uuid": "14464e32-c44e-448a-88c5-4da69d5a4c83",
          "body": "{\n  \"filingStatusTypes\": [\n    {\n      \"filingStatusTypeId\": {{faker 'random.number'}},\n      \"filingStatusTypeName\": \"\",\n      \"hasJointDependent\": {{faker 'random.boolean'}},\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"partnerStatuses\": [\n        {{faker 'random.number'}}\n      ],\n      \"validForSingleAnalysis\": {{faker 'random.boolean'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "741416b4-7974-4fda-b895-2d00fc020500",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3ea116a0-6982-4d9d-9013-4c57c0fa77ad",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Filing Status Type not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5738ae60-be5a-41bf-84bc-31cb6a7b6faa",
      "documentation": "Description: This operation retrieves all Filing Status Type for the specified id.<br />\r\n              Purpose: Provides access to the Filing Status Types including id and type description.",
      "method": "get",
      "endpoint": "api/FilingStatusTypes/:id",
      "responses": [
        {
          "uuid": "2585c486-c451-4169-8f77-8826a45b2de4",
          "body": "{\n  \"filingStatusTypeId\": {{faker 'random.number'}},\n  \"filingStatusTypeName\": \"\",\n  \"hasJointDependent\": {{faker 'random.boolean'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"partnerStatuses\": [\n    {{faker 'random.number'}}\n  ],\n  \"validForSingleAnalysis\": {{faker 'random.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ed0ad5f9-6ab4-4112-8544-daeb8033b504",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f7921a94-8aac-4567-a8a4-a148f5c0e2c7",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Filing Status Type not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fc3d5f4b-9b74-4e5f-8e2b-4e1e20f7536d",
      "documentation": "Description: This operation retrieves all Frequency Types for the specified country and entity.<br />\r\n              Purpose: Provides access to the Frequency Types including id and type description.",
      "method": "get",
      "endpoint": "api/FrequencyTypes",
      "responses": [
        {
          "uuid": "f4a9e32a-8988-47ab-bc6f-102d7bff65f1",
          "body": "{\n  \"frequencyTypes\": [\n    {\n      \"id\": {{faker 'random.number'}},\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"name\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4e8990a8-5adf-416e-86e8-aeebbbfbe818",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1dbb75c2-c57a-46a1-865f-d9472a7f122b",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Frequency Type not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "60b55003-dc28-4910-9289-51ad90b145ae",
      "documentation": "Description: This operation retrieves the Frequency Type for the specified id.<br />\r\n              Purpose: Provides access to the Frequency Types including id and type description.",
      "method": "get",
      "endpoint": "api/FrequencyTypes/:id",
      "responses": [
        {
          "uuid": "845eb700-93f6-4df8-9ed4-397eab8b19b1",
          "body": "{\n  \"id\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ee316ee6-2846-49ee-a3e4-65b22119c109",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0723417b-a7a6-4e3e-a62e-e9b8fea9ab7b",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Frequency Type not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "43d6f751-3808-416c-aeaf-2dc25e198bb1",
      "documentation": "Description: This operation retrieves all Income Types for the specified country.<br />\r\n              Purpose: Provides access to the Income Types including id and type description.",
      "method": "get",
      "endpoint": "api/IncomeTypes",
      "responses": [
        {
          "uuid": "8938599a-42d3-417d-8446-c09bc3494d7f",
          "body": "{\n  \"incomeTypes\": [\n    {\n      \"id\": {{faker 'random.number'}},\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"name\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d5745c28-df62-4067-b0cc-b1b2339e10ff",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "43699c29-e365-4f4e-8977-a6c2afa6abe5",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Income Type not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0b52b139-1cc1-4cfc-80dd-66df3f62c24c",
      "documentation": "Description: This operation retrieves the Income Type for the specified id.<br />\r\n              Purpose: Provides access to the Income Types including id and type description.",
      "method": "get",
      "endpoint": "api/IncomeTypes/:id",
      "responses": [
        {
          "uuid": "4ef0ab9f-e507-4dac-a050-0730aec70a3f",
          "body": "{\n  \"id\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "02bcf700-3cd8-45c0-9cff-0364f110beab",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b209a15e-5061-4e79-be3b-4f0ebe0bd2b6",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Income Type not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "416272cb-ffc1-479e-b373-f7ca14e0d187",
      "documentation": "Description: This operation retrieves all Incomes for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Incomes including annual amount and start date.",
      "method": "get",
      "endpoint": "api/Incomes",
      "responses": [
        {
          "uuid": "035a3e59-499d-4c6d-885d-91a74d3ab6fe",
          "body": "{\n  \"incomes\": [\n    {\n      \"annualAmount\": {{faker 'random.float'}},\n      \"description\": \"\",\n      \"endDate\": \"{{faker 'date.recent' 365}}\",\n      \"externalDestinationId\": \"\",\n      \"factFinderId\": {{faker 'random.number'}},\n      \"incomeId\": {{faker 'random.number'}},\n      \"incomeTypeId\": {{faker 'random.number'}},\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"owner\": \"{{oneOf (array 'Client' 'CoClient')}}\",\n      \"startDate\": \"{{faker 'date.recent' 365}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ecbb0788-4612-46ee-bad1-a06676118c9a",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "56ea7c57-1b06-49dc-a043-17cfd4ad5321",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Income data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4936e32e-e448-4fd6-9b66-03f649d56059",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Income.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7375c09a-b97e-452d-916e-5065da73b735",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Income not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "36364c65-5f57-4450-ad69-b77f64b02fef",
      "documentation": "Description: The operation creates an Income.<br />\r\n              Purpose: Allows for creation of Incomes on a Fact Finder.",
      "method": "post",
      "endpoint": "api/Incomes",
      "responses": [
        {
          "uuid": "b2e3a1a7-3899-476a-82f3-525ea0d27aab",
          "body": "{\n  \"annualAmount\": {{faker 'random.float'}},\n  \"description\": \"\",\n  \"endDate\": \"{{faker 'date.recent' 365}}\",\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"incomeId\": {{faker 'random.number'}},\n  \"incomeTypeId\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"owner\": \"{{oneOf (array 'Client' 'CoClient')}}\",\n  \"startDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1f80e86a-4c5e-4218-b435-2800c4d7a8d2",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d079e1c3-fa32-4904-8bb4-bd098f1a247c",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Income data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "edcdd23a-e906-4263-9754-6e726a6aebf7",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Income.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "70acf071-1542-473a-9c8d-f386cd24b073",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Income not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "271a2199-7b3a-4df5-a757-6d903c139282",
      "documentation": "Description: The operation removes an Income tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal of an Income from a Fact Finder.",
      "method": "delete",
      "endpoint": "api/Incomes/:id",
      "responses": [
        {
          "uuid": "7bd63d59-57f6-48cb-aac6-3d994e9b46fd",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4f912c8d-4b19-4126-b9b4-a8b3f52f2ab9",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e7bce423-d0c5-4ff1-8a65-55d7b17873da",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Income data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6f0ca93b-318d-467d-a77b-a9d3216fcf96",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Income.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "63284f27-507d-4136-988c-e7385a488dfb",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Income not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4a170c35-c90e-4dac-9d83-a211ad5992fe",
      "documentation": "Description: This operation retrieves a single Income for the specified Income ID.<br />\r\n              Purpose: Provides access to the Income including annual amount and start date.",
      "method": "get",
      "endpoint": "api/Incomes/:id",
      "responses": [
        {
          "uuid": "0cf5869f-1a95-48a4-84fe-e9cd66954d1e",
          "body": "{\n  \"annualAmount\": {{faker 'random.float'}},\n  \"description\": \"\",\n  \"endDate\": \"{{faker 'date.recent' 365}}\",\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"incomeId\": {{faker 'random.number'}},\n  \"incomeTypeId\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"owner\": \"{{oneOf (array 'Client' 'CoClient')}}\",\n  \"startDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3d25c29f-a1fa-49d7-942a-4c51aed3fc5c",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8f6971fc-2c6a-477c-bef1-ca203f568b29",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Income data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f9e15fad-f4cf-4482-988d-84b34082c8eb",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Income.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "85e0c34a-99b4-4f2e-84d4-617c8a868d80",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Income not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3ae5372c-9188-4490-b1c1-a4f47276370c",
      "documentation": "Description: The operation updates an Income.<br />\r\n              Purpose: Allows for complete replacement of an Income on a Fact Finder.",
      "method": "put",
      "endpoint": "api/Incomes/:id",
      "responses": [
        {
          "uuid": "9209264d-0429-435f-bbac-c7330d6d70ed",
          "body": "{\n  \"annualAmount\": {{faker 'random.float'}},\n  \"description\": \"\",\n  \"endDate\": \"{{faker 'date.recent' 365}}\",\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"incomeId\": {{faker 'random.number'}},\n  \"incomeTypeId\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"owner\": \"{{oneOf (array 'Client' 'CoClient')}}\",\n  \"startDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b31bc2c1-9a1d-4e53-ace6-a4848d49000f",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "299e8259-4354-4ed5-8e19-5cf4fefe3a70",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Income data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fb500bea-3df5-47f8-8929-b2b170bcc8eb",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Income.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a48c61c6-b662-4065-bd5c-71cd0c28391e",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Income not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1a26ad42-c903-4fd7-b8c7-937c561620c8",
      "documentation": "Description: This operation retrieves all Liabilities for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Liabilities including owner and type.",
      "method": "get",
      "endpoint": "api/Liabilities",
      "responses": [
        {
          "uuid": "badcfeb9-b5f8-4bb7-94c9-460690487d31",
          "body": "{\n  \"liabilities\": [\n    {\n      \"balance\": {{faker 'random.float'}},\n      \"balanceAsOfDate\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"externalDestinationId\": \"\",\n      \"externalSourceId\": \"\",\n      \"externalSourceName\": \"\",\n      \"factFinderId\": {{faker 'random.number'}},\n      \"frequency\": {{faker 'random.number'}},\n      \"interestRate\": {{faker 'random.float'}},\n      \"lastUpdated\": \"{{faker 'date.recent' 365}}\",\n      \"liabilityId\": {{faker 'random.number'}},\n      \"liabilityType\": {{faker 'random.number'}},\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"loanDate\": \"{{faker 'date.recent' 365}}\",\n      \"originalPrincipal\": {{faker 'random.float'}},\n      \"owner\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n      \"payment\": {{faker 'random.float'}},\n      \"paymentType\": \"{{oneOf (array 'InterestOnly' 'PrincipalAndInterest' 'SetPrincipal' 'LastPeriod')}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b35edeb9-7f79-47da-abf6-c06f64f5c778",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5898727f-8e94-4925-aebb-a3b64e6466ce",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Liability data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a4d327d1-7801-423a-ad12-b12e284f6f26",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Liability.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "654f08cb-a5af-4a66-94c4-57c637eb6fb4",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Liability not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6e386689-8eb1-4865-9891-e0520ee0e6fc",
      "documentation": "Description: The operation creates a Liability.<br />\r\n              Purpose: Allows for creation of Liabilities on a Fact Finder.",
      "method": "post",
      "endpoint": "api/Liabilities",
      "responses": [
        {
          "uuid": "1d044095-ab9c-4456-aac0-1a9b6545b673",
          "body": "{\n  \"balance\": {{faker 'random.float'}},\n  \"balanceAsOfDate\": \"{{faker 'date.recent' 365}}\",\n  \"description\": \"\",\n  \"externalDestinationId\": \"\",\n  \"externalSourceId\": \"\",\n  \"externalSourceName\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"frequency\": {{faker 'random.number'}},\n  \"interestRate\": {{faker 'random.float'}},\n  \"lastUpdated\": \"{{faker 'date.recent' 365}}\",\n  \"liabilityId\": {{faker 'random.number'}},\n  \"liabilityType\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"loanDate\": \"{{faker 'date.recent' 365}}\",\n  \"originalPrincipal\": {{faker 'random.float'}},\n  \"owner\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n  \"payment\": {{faker 'random.float'}},\n  \"paymentType\": \"{{oneOf (array 'InterestOnly' 'PrincipalAndInterest' 'SetPrincipal' 'LastPeriod')}}\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "64d597df-3cce-4c61-8375-b52a640993c1",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "656559c0-bcb1-440b-af45-6ef321f91e63",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Liability data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e772f833-a460-463e-9eec-788a33307094",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Liability.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "885c974e-8059-4457-9e81-46439279777c",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Liability not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9c8fbe40-e81f-4251-bc7f-8edcbb6a4dbe",
      "documentation": "Description: The operation removes a Liability tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal of a Liability from a Fact Finder.",
      "method": "delete",
      "endpoint": "api/Liabilities/:id",
      "responses": [
        {
          "uuid": "fcb79a1d-4147-45bb-b87d-4da9647fbad4",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ed6658a6-5605-4ce8-b3a1-80cd3341564c",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "11250d30-242e-4aa9-be11-15441adc4b45",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Liability data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3077a666-8e9a-4b1f-bd8b-639b5a4b7822",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Liability.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8b9ee677-bbc9-42c8-85ef-3b57a3e73e83",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Liability not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "13673539-ce9d-4c01-9db1-979c84cb4259",
      "documentation": "Description: This operation retrieves a single Liability for the specified Liability ID.<br />\r\n              Purpose: Provides access to the Liability including owner and type.",
      "method": "get",
      "endpoint": "api/Liabilities/:id",
      "responses": [
        {
          "uuid": "39b75aa4-3fc7-4a07-9431-23f390b2e1a1",
          "body": "{\n  \"balance\": {{faker 'random.float'}},\n  \"balanceAsOfDate\": \"{{faker 'date.recent' 365}}\",\n  \"description\": \"\",\n  \"externalDestinationId\": \"\",\n  \"externalSourceId\": \"\",\n  \"externalSourceName\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"frequency\": {{faker 'random.number'}},\n  \"interestRate\": {{faker 'random.float'}},\n  \"lastUpdated\": \"{{faker 'date.recent' 365}}\",\n  \"liabilityId\": {{faker 'random.number'}},\n  \"liabilityType\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"loanDate\": \"{{faker 'date.recent' 365}}\",\n  \"originalPrincipal\": {{faker 'random.float'}},\n  \"owner\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n  \"payment\": {{faker 'random.float'}},\n  \"paymentType\": \"{{oneOf (array 'InterestOnly' 'PrincipalAndInterest' 'SetPrincipal' 'LastPeriod')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bb8a69db-8c5b-48f7-8360-902e9fd937d1",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1055c0ed-0505-40dd-b535-01d94389b771",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Liability data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "94884028-53c0-4393-bf59-d5655b135952",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Liability.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d8cc195d-5dc5-49f7-8d44-16efbf5e37b7",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Liability not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7f0704f8-5e78-477c-bb36-241a602460c9",
      "documentation": "Description: The operation updates a Liability.<br />\r\n              Purpose: Allows for complete replacement of a Liability on a Fact Finder.",
      "method": "put",
      "endpoint": "api/Liabilities/:id",
      "responses": [
        {
          "uuid": "4e4cd62a-fb7b-4f92-8f92-54eea85562a5",
          "body": "{\n  \"balance\": {{faker 'random.float'}},\n  \"balanceAsOfDate\": \"{{faker 'date.recent' 365}}\",\n  \"description\": \"\",\n  \"externalDestinationId\": \"\",\n  \"externalSourceId\": \"\",\n  \"externalSourceName\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"frequency\": {{faker 'random.number'}},\n  \"interestRate\": {{faker 'random.float'}},\n  \"lastUpdated\": \"{{faker 'date.recent' 365}}\",\n  \"liabilityId\": {{faker 'random.number'}},\n  \"liabilityType\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"loanDate\": \"{{faker 'date.recent' 365}}\",\n  \"originalPrincipal\": {{faker 'random.float'}},\n  \"owner\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n  \"payment\": {{faker 'random.float'}},\n  \"paymentType\": \"{{oneOf (array 'InterestOnly' 'PrincipalAndInterest' 'SetPrincipal' 'LastPeriod')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "09b65611-60f5-4164-beb4-ead812a063d6",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "55463895-dcc6-4902-a6dd-c4a743a53f3e",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Liability data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8007eaa1-5cb4-48bc-a6ca-47376925513d",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Liability.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f79aee74-3ead-4f2c-8e79-ed9f94c278b7",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Liability not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f20cf707-1af0-45e7-8a80-f66769b89023",
      "documentation": "Description: This operation retrieves all Liability Types for the specified country.<br />\r\n              Purpose: Provides access to the Liability Types including id and type description.",
      "method": "get",
      "endpoint": "api/LiabilityTypes",
      "responses": [
        {
          "uuid": "147a68a3-dd2b-4d7f-8e40-3174c529b806",
          "body": "{\n  \"liabilityTypes\": [\n    {\n      \"id\": {{faker 'random.number'}},\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"name\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c31b6e28-72c7-4364-956a-0c13d7b7a251",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "73da95df-9d78-42fb-91dd-af5d1516fb86",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Liability Type not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8527c435-d21c-4489-a6a1-fd9e8e81c655",
      "documentation": "Description: This operation retrieves the Liability Type for the specified id.<br />\r\n              Purpose: Provides access to the Liability Types including id and type description.",
      "method": "get",
      "endpoint": "api/LiabilityTypes/:id",
      "responses": [
        {
          "uuid": "3fd2c4b0-3d29-4b3e-bd88-d760ec49c9f8",
          "body": "{\n  \"id\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1154fcbf-0333-4af0-9b72-9847e0bd54da",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c4618ad8-eeb8-4c2f-b3c6-56ef787217db",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Liability Type not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "84ebda5b-789f-4da8-9f95-6e75265e5b3c",
      "documentation": "Description: This operation retrieves all Life Insurance Policies for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Life Insurance Policies including description and policy type.",
      "method": "get",
      "endpoint": "api/LifeInsurancePolicies",
      "responses": [
        {
          "uuid": "4784cec3-cb35-40ce-8c4a-85c3f3c073fd",
          "body": "{\n  \"lifeInsurancePolicies\": [\n    {\n      \"beneficiary\": \"{{oneOf (array 'Client' 'CoClient' 'Dependent' 'Other')}}\",\n      \"beneficiaryDependentId\": {{faker 'random.number'}},\n      \"benefit\": {{faker 'random.float'}},\n      \"description\": \"\",\n      \"externalDestinationId\": \"\",\n      \"factFinderId\": {{faker 'random.number'}},\n      \"frequency\": {{faker 'random.number'}},\n      \"generalAccountMarketValue\": {{faker 'random.float'}},\n      \"insurancePolicyId\": {{faker 'random.number'}},\n      \"insured\": \"{{oneOf (array 'Client' 'CoClient' 'FirstToDie' 'SecondToDie' 'Other')}}\",\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"payer\": \"{{oneOf (array 'Client' 'CoClient' 'Joint' 'Other')}}\",\n      \"policyType\": {{faker 'random.number'}},\n      \"premium\": {{faker 'random.float'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a49e76ab-c2d3-458f-b058-94c70909c21c",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b423466f-c847-4126-9f4f-f1906c531006",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Life Insurance Policy data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8f4ffa58-6f4a-4613-8cd9-d638b0bfdac1",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Life Insurance Policy.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "24b99bb9-ac8d-43fe-a982-9fe3dc46647b",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Life Insurance Policy not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "40cc2113-977b-4afe-bf90-eaeec673742b",
      "documentation": "Description: The operation creates a Life Insurance Policy.<br />\r\n              Purpose: Allows for creation of Life Insurance Policies on a Fact Finder.",
      "method": "post",
      "endpoint": "api/LifeInsurancePolicies",
      "responses": [
        {
          "uuid": "6bc4e790-4cd3-4b08-b7d6-f28809303562",
          "body": "{\n  \"beneficiary\": \"{{oneOf (array 'Client' 'CoClient' 'Dependent' 'Other')}}\",\n  \"beneficiaryDependentId\": {{faker 'random.number'}},\n  \"benefit\": {{faker 'random.float'}},\n  \"description\": \"\",\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"frequency\": {{faker 'random.number'}},\n  \"generalAccountMarketValue\": {{faker 'random.float'}},\n  \"insurancePolicyId\": {{faker 'random.number'}},\n  \"insured\": \"{{oneOf (array 'Client' 'CoClient' 'FirstToDie' 'SecondToDie' 'Other')}}\",\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"payer\": \"{{oneOf (array 'Client' 'CoClient' 'Joint' 'Other')}}\",\n  \"policyType\": {{faker 'random.number'}},\n  \"premium\": {{faker 'random.float'}}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c0aff48f-16f6-42d2-b24a-c50c7fc7e537",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "10433324-9c68-4537-bee8-7a3d9f51bac5",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Life Insurance Policy data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c289f074-f60f-43cd-b875-8c93d0ba712c",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Life Insurance Policy.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bf13bb9c-3fbb-45f3-946b-fe27d82004a3",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Life Insurance Policy not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "683624f5-2d06-46d2-8224-fc2e29c618d9",
      "documentation": "Description: The operation removes a Life Insurance Policy tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal of a Life Insurance Policy and associated subaccounts from a Fact Finder.",
      "method": "delete",
      "endpoint": "api/LifeInsurancePolicies/:id",
      "responses": [
        {
          "uuid": "262f029e-7dab-46d5-843b-9784f9b40c72",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e285990f-dd5d-4797-84b3-bb96dced49da",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6f334cf4-c9a4-46e3-a728-79649407de0d",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Life Insurance Policy data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "104412a5-2ae8-484d-a1bf-4d9724ce4e17",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Life Insurance Policy.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4403af32-0f82-400c-ad84-9b148e77bd83",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Life Insurance Policy not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3133fe7d-7417-4362-877b-15360bfb4463",
      "documentation": "Description: This operation retrieves a single Life Insurance Policy for the specified Life Insurance Policy ID.<br />\r\n              Purpose: Provides access to the Life Insurance Policy including description and policy type.",
      "method": "get",
      "endpoint": "api/LifeInsurancePolicies/:id",
      "responses": [
        {
          "uuid": "802ab186-45c9-4750-803b-abd4e2673b5f",
          "body": "{\n  \"beneficiary\": \"{{oneOf (array 'Client' 'CoClient' 'Dependent' 'Other')}}\",\n  \"beneficiaryDependentId\": {{faker 'random.number'}},\n  \"benefit\": {{faker 'random.float'}},\n  \"description\": \"\",\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"frequency\": {{faker 'random.number'}},\n  \"generalAccountMarketValue\": {{faker 'random.float'}},\n  \"insurancePolicyId\": {{faker 'random.number'}},\n  \"insured\": \"{{oneOf (array 'Client' 'CoClient' 'FirstToDie' 'SecondToDie' 'Other')}}\",\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"payer\": \"{{oneOf (array 'Client' 'CoClient' 'Joint' 'Other')}}\",\n  \"policyType\": {{faker 'random.number'}},\n  \"premium\": {{faker 'random.float'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "04b5c624-86fc-439f-b259-f477c230d9f8",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "afc7a4a0-78b0-4409-9d71-1d2e2cf782b0",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Life Insurance Policy data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f319af5f-2a56-4ab9-bbc4-abe96e77c1fe",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Life Insurance Policy.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c4fc99b2-d4c9-46b6-a67a-773ad477bdba",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Life Insurance Policy not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "82f38d64-9d62-4e98-98f8-5be8ac9a5610",
      "documentation": "Description: The operation updates a Life Insurance Policy, deletes associated sub-accounts if the policy type changes.<br />\r\n              Purpose: Allows for complete replacement of a Life Insurance Policy on a Fact Finder.",
      "method": "put",
      "endpoint": "api/LifeInsurancePolicies/:id",
      "responses": [
        {
          "uuid": "fdb039b6-d181-43dd-ab30-6ea9f8feed57",
          "body": "{\n  \"beneficiary\": \"{{oneOf (array 'Client' 'CoClient' 'Dependent' 'Other')}}\",\n  \"beneficiaryDependentId\": {{faker 'random.number'}},\n  \"benefit\": {{faker 'random.float'}},\n  \"description\": \"\",\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"frequency\": {{faker 'random.number'}},\n  \"generalAccountMarketValue\": {{faker 'random.float'}},\n  \"insurancePolicyId\": {{faker 'random.number'}},\n  \"insured\": \"{{oneOf (array 'Client' 'CoClient' 'FirstToDie' 'SecondToDie' 'Other')}}\",\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"payer\": \"{{oneOf (array 'Client' 'CoClient' 'Joint' 'Other')}}\",\n  \"policyType\": {{faker 'random.number'}},\n  \"premium\": {{faker 'random.float'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d0d5aaab-04ce-4f70-9172-4ec5ab73f623",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cd193ade-b234-4865-92c1-3ce6e521e56f",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Life Insurance Policy data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7fc973fc-fbe1-4c73-ae50-d46681318e4a",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Life Insurance Policy.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3dc3d42c-254b-468a-a735-1128a85265bd",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Life Insurance Policy not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5fee20f0-cb8b-424f-bbb8-61602df13f6f",
      "documentation": "Description: Get all the subaccounts for an existing Life Insurance Policy.<br />\r\n              Purpose: Provides access to all the Life Insurance Policy subaccounts.",
      "method": "get",
      "endpoint": "api/LifeInsurancePolicies/:lifeInsurancePolicyId/Subaccounts",
      "responses": [
        {
          "uuid": "e14c20ce-37a8-4893-b963-a5ea37f283ec",
          "body": "{\n  \"lifeInsurancePolicySubaccounts\": [\n    {\n      \"description\": \"\",\n      \"externalDestinationId\": \"\",\n      \"lifeInsurancePolicyId\": {{faker 'random.number'}},\n      \"lifeInsurancePolicySubaccountId\": {{faker 'random.number'}},\n      \"marketValue\": {{faker 'random.float'}},\n      \"symbol\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e218e2f6-327d-460f-8dce-2f39a837fc97",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "874e859e-08ad-41da-8061-b3cef04ebea0",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Life Insurance Policy data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "62d4a06a-e679-49c8-b251-8769fd129856",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Life Insurance Policy.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "98b83fb8-8858-4b26-bb5a-4f851e49d2ec",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Life Insurance Policy not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "57a6c216-9195-4b63-aafd-0eb2fd1af01c",
      "documentation": "Description: Creates a subaccount and adds it to an existing Life Insurance Policy.<br />\r\n              Purpose: Allows for creation of subaccount on a Life Insurance Policy.",
      "method": "post",
      "endpoint": "api/LifeInsurancePolicies/:lifeInsurancePolicyId/Subaccounts",
      "responses": [
        {
          "uuid": "e0c9d1b5-3588-4f2a-9bf5-010da218de8c",
          "body": "{\n  \"description\": \"\",\n  \"externalDestinationId\": \"\",\n  \"lifeInsurancePolicyId\": {{faker 'random.number'}},\n  \"lifeInsurancePolicySubaccountId\": {{faker 'random.number'}},\n  \"marketValue\": {{faker 'random.float'}},\n  \"symbol\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f2a04457-7308-44d9-8e98-41430733ab87",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "210eb8c1-306b-4b9b-98d0-0cf4b40e4d57",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Life Insurance Policy data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "33c0ad95-6a05-48c7-8f83-59a2e1178996",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Life Insurance Policy.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a371eff3-925f-47ac-9fd9-dde2c06c825b",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Life Insurance Policy not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1dacdd2b-209a-42b8-b7e3-ad104cb9df31",
      "documentation": "Description: Deletes an existing Life Insurance Policy Subaccount for an existing Life Insurance Policy.<br />\r\n              Purpose: Allows for removal of a subaccount from a Life Insurance Policy.",
      "method": "delete",
      "endpoint": "api/LifeInsurancePolicies/:lifeInsurancePolicyId/Subaccounts/:id",
      "responses": [
        {
          "uuid": "8e53f522-1398-47fb-bbe3-bd22b52d1d8c",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "505ac947-6602-46ed-b22b-42ef38e0a91e",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c5a922bd-3b9d-4f76-a188-3ab2f1749ba4",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Life Insurance Policy data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4680e1ac-e36b-4af8-9118-6df93cef2bd5",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Life Insurance Policy.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "34cfc557-0fa6-4e98-a25b-c69ae49fae45",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Life Insurance Policy Subaccount not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a9704fe4-7e59-48a7-bca1-4d87318ede6b",
      "documentation": "Description: Get a specific subaccount for an existing Life Insurance Policy.<br />\r\n              Purpose: Provides access to the Life Insurance Policy subaccount.",
      "method": "get",
      "endpoint": "api/LifeInsurancePolicies/:lifeInsurancePolicyId/Subaccounts/:id",
      "responses": [
        {
          "uuid": "a972bceb-b0f0-4b31-b089-8f14f5f4da0c",
          "body": "{\n  \"description\": \"\",\n  \"externalDestinationId\": \"\",\n  \"lifeInsurancePolicyId\": {{faker 'random.number'}},\n  \"lifeInsurancePolicySubaccountId\": {{faker 'random.number'}},\n  \"marketValue\": {{faker 'random.float'}},\n  \"symbol\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5f234380-261a-46ce-9d06-43c72651b88b",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0800b1f3-7034-422f-a829-1acbe2376001",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Life Insurance Policy data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fad8069d-400e-4ea8-840c-2e178a28242e",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Life Insurance Policy.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7ca2db24-4cd0-4f1b-ad28-3d4a05fbf880",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Life Insurance Policy Subaccount not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9eee5263-5450-41c4-b3c3-644b2079357f",
      "documentation": "Description: Updates an existing Life Insurance Policy Subaccount for an existing Life Insurance Policy.<br />\r\n              Purpose: Allows for complete replacement of a subaccount on a Life Insurance Policy.",
      "method": "put",
      "endpoint": "api/LifeInsurancePolicies/:lifeInsurancePolicyId/Subaccounts/:id",
      "responses": [
        {
          "uuid": "0fe15d90-df68-4fc4-9eb5-b45155b3728f",
          "body": "{\n  \"description\": \"\",\n  \"externalDestinationId\": \"\",\n  \"marketValue\": {{faker 'random.float'}},\n  \"symbol\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a33cbf13-ecba-48bd-ac4e-27ae41d903c5",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "641efbc8-4ae2-46ab-b599-546d26afea08",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Life Insurance Policy data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fce18c2b-d942-4ce2-ae8c-96bbbe17f050",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Life Insurance Policy.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "76ba819d-843a-4d25-9133-be403abf1234",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Life Insurance Policy Subaccount not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f054dead-c567-4e7d-a744-77bfeef9d77c",
      "documentation": "Description: This operation retrieves all Life Insurance Policy Types for the specified country.<br />\r\n              Purpose: Provides access to the Life Insurance Policy Types including id and type description.",
      "method": "get",
      "endpoint": "api/LifeInsurancePolicyTypes",
      "responses": [
        {
          "uuid": "b1400028-b9b9-4894-8ffe-5e1b7fc6476a",
          "body": "{\n  \"insurancePolicyTypes\": [\n    {\n      \"id\": {{faker 'random.number'}},\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"name\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c0854afc-faf6-40ad-84c9-394f0c7f39e6",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d6b9c2d3-c91d-43cf-a7ee-82b9d286fe8b",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Life Insurance Policy Type not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0e45ead2-3a60-4dee-92cf-a307ea4de91e",
      "documentation": "Description: This operation retrieves the Life Insurance Policy Type for the specified id.<br />\r\n              Purpose: Provides access to the Life Insurance Policy Types including id and type description.",
      "method": "get",
      "endpoint": "api/LifeInsurancePolicyTypes/:id",
      "responses": [
        {
          "uuid": "0153960e-e867-4575-b07f-70c39c1e71a2",
          "body": "{\n  \"id\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4fb997cd-c0a9-4a85-9e61-a2b92fdab550",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8ce078eb-e75b-41dc-a801-3cf4a0ba75c8",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Life Insurance Policy Type not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b6f9d056-e09d-40b7-88c0-1286e1fd0b61",
      "documentation": "Description: This operation retrieves all Lifestyle Asset Types for the specified country.<br />\r\n              Purpose: Provides access to the Lifestyle Asset Types including id and type description.",
      "method": "get",
      "endpoint": "api/LifestyleAssetTypes",
      "responses": [
        {
          "uuid": "c7ec149e-c4ea-4ce4-9005-fff5511f260a",
          "body": "{\n  \"lifestyleAssetTypes\": [\n    {\n      \"id\": {{faker 'random.number'}},\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"name\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3650be97-ecd2-4fde-86f3-95f6cee7cbac",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a3f7f208-ba7e-42ba-be2d-a38f292fb1d9",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Lifestyle Asset Type not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0ab8ea03-012c-4ef5-a0f2-1fda8915d643",
      "documentation": "Description: This operation retrieves the Lifestyle Asset Type for the specified id.<br />\r\n              Purpose: Provides access to the Lifestyle Asset Types including id and type description.",
      "method": "get",
      "endpoint": "api/LifestyleAssetTypes/:id",
      "responses": [
        {
          "uuid": "0e3e7bd9-f0f7-438b-b8f5-9fce88b3abdd",
          "body": "{\n  \"id\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "35dc1522-e1a9-494c-9642-ba5ed1c7491a",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "821d1ded-f5f9-4586-8eab-56ba31d60383",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Lifestyle Asset Type not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "10877741-491a-4274-8885-992d1c953f8c",
      "documentation": "Description: This operation retrieves all Lifestyle Assets for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Lifestyle Assets including description and market value.",
      "method": "get",
      "endpoint": "api/LifestyleAssets",
      "responses": [
        {
          "uuid": "e07e9c37-e728-44ca-aa75-c8dc13927826",
          "body": "{\n  \"lifestyleAssets\": [\n    {\n      \"description\": \"\",\n      \"externalDestinationId\": \"\",\n      \"factFinderId\": {{faker 'random.number'}},\n      \"lifestyleAssetId\": {{faker 'random.number'}},\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"marketValue\": {{faker 'random.float'}},\n      \"owner\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n      \"purchaseAmount\": {{faker 'random.float'}},\n      \"purchaseDate\": \"{{faker 'date.recent' 365}}\",\n      \"type\": {{faker 'random.number'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a531cc70-5615-448e-99bc-c9bb5763b870",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a3aedb1c-34db-497b-8989-b4f163dc339b",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Lifestyle Asset data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f456057a-bc9d-4a94-bb13-f7a7a42063e4",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Lifestyle Asset.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bc2d0cc6-3f4e-437b-8d60-06b711c941db",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Lifestyle Asset not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "249fb808-579f-4e81-90ea-61e726ff308e",
      "documentation": "Description: The operation creates a Lifestyle Asset.<br />\r\n              Purpose: Allows for creation of Lifestyle Assets on a Fact Finder.",
      "method": "post",
      "endpoint": "api/LifestyleAssets",
      "responses": [
        {
          "uuid": "1e346c8e-cc07-4772-827c-5282340e032c",
          "body": "{\n  \"description\": \"\",\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"lifestyleAssetId\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"marketValue\": {{faker 'random.float'}},\n  \"owner\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n  \"purchaseAmount\": {{faker 'random.float'}},\n  \"purchaseDate\": \"{{faker 'date.recent' 365}}\",\n  \"type\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7aa80acd-c835-4701-9156-135182fe368f",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "03b643a5-9d70-413a-8f65-0b8f8648901a",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Lifestyle Asset data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f9009e46-795d-46e9-98cf-d657027335ec",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Lifestyle Asset.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "034b20c0-7ab7-45a4-acca-048abd49851b",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Lifestyle Asset not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c6d1f988-1614-434a-a151-bff3cd491bfb",
      "documentation": "Description: The operation removes a Lifestyle Asset tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal of a Lifestyle Asset from a Fact Finder.",
      "method": "delete",
      "endpoint": "api/LifestyleAssets/:id",
      "responses": [
        {
          "uuid": "eed3d56b-b8ae-4ff6-9dc3-9c7b99f7a825",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c9365450-288a-4b0d-a305-26ea7d625bea",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e64877ab-6767-4c26-90bb-5296b3fec7fb",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Lifestyle Asset data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3e6c7da6-e115-487f-81c1-37d05e04b17b",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Lifestyle Asset.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2e57785e-4c1e-4b3e-91c7-5bdff3c134dc",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Lifestyle Asset not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "743031d1-987f-4e40-b60c-f940d3405c0d",
      "documentation": "Description: This operation retrieves a single Lifestyle Asset for the specified Lifestyle Asset ID.<br />\r\n              Purpose: Provides access to the Lifestyle Asset including description and market value.",
      "method": "get",
      "endpoint": "api/LifestyleAssets/:id",
      "responses": [
        {
          "uuid": "492048a2-f7bb-46fc-93cb-f25fbfacb001",
          "body": "{\n  \"description\": \"\",\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"lifestyleAssetId\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"marketValue\": {{faker 'random.float'}},\n  \"owner\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n  \"purchaseAmount\": {{faker 'random.float'}},\n  \"purchaseDate\": \"{{faker 'date.recent' 365}}\",\n  \"type\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9b36c7aa-0c83-41be-b5ee-59e2b43377ae",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7671c2d7-0a07-42b5-a985-0e6d4c0feec0",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Lifestyle Asset data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a6be1147-45e8-40aa-a38f-c274536ce700",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Lifestyle Asset.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0b03226d-0bf9-4296-8a8b-0b4239303525",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Lifestyle Asset not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8fb8d727-9bf8-473e-8e4e-a9c01c24d6d2",
      "documentation": "Description: The operation updates a Lifestyle Asset.<br />\r\n              Purpose: Allows for complete replacement of a Lifestyle Asset on a Fact Finder.",
      "method": "put",
      "endpoint": "api/LifestyleAssets/:id",
      "responses": [
        {
          "uuid": "cac82872-d2bc-4ec9-a1a3-6ffcb854a0db",
          "body": "{\n  \"description\": \"\",\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"lifestyleAssetId\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"marketValue\": {{faker 'random.float'}},\n  \"owner\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n  \"purchaseAmount\": {{faker 'random.float'}},\n  \"purchaseDate\": \"{{faker 'date.recent' 365}}\",\n  \"type\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8b297572-64c5-4e50-97cd-9ae6b43fbefe",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3a3c1384-1efe-47d4-84c4-bbde25810acb",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Lifestyle Asset data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d3116da4-c73b-4098-8428-3ea7fc3ac244",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Lifestyle Asset.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8e0f9f51-b0fb-456d-96e1-ae0ed562f5be",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Lifestyle Asset not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4b7665c7-dc3b-4d5f-a970-22b619f04055",
      "documentation": "Description: This operation retrieves all Long Term Care Insurance Policies for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Long Term Care Insurance Policies including description and premium.",
      "method": "get",
      "endpoint": "api/LongTermCareInsurancePolicies",
      "responses": [
        {
          "uuid": "1f9bd8f7-0f24-446a-a7f4-76d7b4faea13",
          "body": "{\n  \"longTermCareInsurancePolicies\": [\n    {\n      \"benefit\": {{faker 'random.float'}},\n      \"benefitFrequency\": {{faker 'random.number'}},\n      \"description\": \"\",\n      \"externalDestinationId\": \"\",\n      \"factFinderId\": {{faker 'random.number'}},\n      \"insurancePolicyId\": {{faker 'random.number'}},\n      \"insured\": \"{{oneOf (array 'Client' 'CoClient')}}\",\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"premium\": {{faker 'random.float'}},\n      \"premiumFrequency\": {{faker 'random.number'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0a4e5b0e-bffc-42cc-bed3-8e3b3c91b0e2",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3693719f-28b0-486c-9a1e-0c0733de2910",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Long Term Care Insurance Policy data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f646770d-d8bb-4712-992b-adf98132d751",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Long Term Care Insurance Policy.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "89a15fca-773f-4c35-ac70-e33307629db5",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Long Term Care Insurance Policy not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "15c7fc02-1d05-4879-a21e-26bdb522848c",
      "documentation": "Description: The operation creates a Long Term Care Insurance Policy.<br />\r\n              Purpose: Allows for creation of Long Term Care Insurance Policies on a Fact Finder.",
      "method": "post",
      "endpoint": "api/LongTermCareInsurancePolicies",
      "responses": [
        {
          "uuid": "55097598-2fd4-4dad-b75b-be15d66f2f31",
          "body": "{\n  \"benefit\": {{faker 'random.float'}},\n  \"benefitFrequency\": {{faker 'random.number'}},\n  \"description\": \"\",\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"insurancePolicyId\": {{faker 'random.number'}},\n  \"insured\": \"{{oneOf (array 'Client' 'CoClient')}}\",\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"premium\": {{faker 'random.float'}},\n  \"premiumFrequency\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "00a0f0f5-24cc-4b03-b633-e0803c243944",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3cb7e282-77c5-4426-b95c-091fb3f061b5",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Long Term Care Insurance Policy data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "978f6f10-b238-4d05-b47c-e3bde087f39c",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Long Term Care Insurance Policy.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6332b939-6522-4338-9194-58b87d72f8cd",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Long Term Care Insurance Policy not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a4da5051-62dd-49ce-8481-688863273cc0",
      "documentation": "Description: The operation removes a Long Term Care Insurance Policy tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal of a Long Term Care Insurance Policy from a Fact Finder.",
      "method": "delete",
      "endpoint": "api/LongTermCareInsurancePolicies/:id",
      "responses": [
        {
          "uuid": "be616dc3-6c33-4422-bcbc-a816416c1a95",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8fca2cfa-836a-4817-9624-d6526dc78523",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3cfffad7-716e-46a2-a954-862d51ddc170",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Long Term Care Insurance Policy data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "df8a3d2d-e141-4676-9e96-167676d79210",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Long Term Care Insurance Policy.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3a1e17a4-1ecb-47ec-91fa-4243e23128b8",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Long Term Care Insurance Policy not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cf0e88fa-407b-4ab3-8e19-6fda17ce15d9",
      "documentation": "Description: This operation retrieves a single Long Term Care Insurance Policy for the specified Long Term Care Insurance Policy ID.<br />\r\n              Purpose: Provides access to the Long Term Care Insurance Policy including description and premium.",
      "method": "get",
      "endpoint": "api/LongTermCareInsurancePolicies/:id",
      "responses": [
        {
          "uuid": "e88ae242-ec31-4b07-9abe-c0fefd29e72d",
          "body": "{\n  \"benefit\": {{faker 'random.float'}},\n  \"benefitFrequency\": {{faker 'random.number'}},\n  \"description\": \"\",\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"insurancePolicyId\": {{faker 'random.number'}},\n  \"insured\": \"{{oneOf (array 'Client' 'CoClient')}}\",\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"premium\": {{faker 'random.float'}},\n  \"premiumFrequency\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "abb077d6-88e1-40f8-a18d-11cc28bb5d31",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "79b3595d-551b-4adc-bef7-439d9e612266",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Long Term Care Insurance Policy data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b766f73b-11da-4a94-9bf4-33dc1edc04f3",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Long Term Care Insurance Policy.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "add71add-ece0-4a22-8bcf-acf00b6d3bf9",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Long Term Care Insurance Policy not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "13580d12-f8c8-4284-a8c3-fcc2e529bc71",
      "documentation": "Description: The operation updates a Long Term Care Insurance Policy.<br />\r\n              Purpose: Allows for complete replacement of a Long Term Care Insurance Policy on a Fact Finder.",
      "method": "put",
      "endpoint": "api/LongTermCareInsurancePolicies/:id",
      "responses": [
        {
          "uuid": "882031ad-7183-42f4-8591-cf4d98606db3",
          "body": "{\n  \"benefit\": {{faker 'random.float'}},\n  \"benefitFrequency\": {{faker 'random.number'}},\n  \"description\": \"\",\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"insurancePolicyId\": {{faker 'random.number'}},\n  \"insured\": \"{{oneOf (array 'Client' 'CoClient')}}\",\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"premium\": {{faker 'random.float'}},\n  \"premiumFrequency\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "52d1c928-26ec-48fa-b1f1-73a5b3d9fd0c",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "11b065d3-e9bb-4850-9ebd-eb084593a82c",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Long Term Care Insurance Policy data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d9beec20-8b65-4fb3-af68-1d08beb1faf1",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Long Term Care Insurance Policy.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c48b55bb-05a3-4b59-983d-10080114db5c",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Long Term Care Insurance Policy not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f21b9aae-9c6d-49f9-bee1-3132948993d1",
      "documentation": "Description: This operation retrieves all Major Purchase Goal Types for the specified country.<br />\r\n              Purpose: Provides access to the Major Purchase Goal Types including id and type description.",
      "method": "get",
      "endpoint": "api/MajorPurchaseGoalTypes",
      "responses": [
        {
          "uuid": "f98ed286-5265-4f94-90d7-2e5de9010bbd",
          "body": "{\n  \"majorPurchaseGoalTypes\": [\n    {\n      \"description\": \"\",\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"majorPurchaseGoalTypeId\": {{faker 'random.number'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fe57f790-1fb3-4091-8070-5b480dc84b84",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "196df30a-ae13-4c5f-97d3-f29ec1d59c0d",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Major Purchase Goal Type not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f2e898c6-2204-4d32-a0d3-bd6477dd5add",
      "documentation": "Description: This operation retrieves the Major Purchase Goal Type for the specified id.<br />\r\n              Purpose: Provides access to the Major Purchase Goal Types including id and type description.",
      "method": "get",
      "endpoint": "api/MajorPurchaseGoalTypes/:id",
      "responses": [
        {
          "uuid": "ae094484-b6a2-473c-ac9f-8423702de198",
          "body": "{\n  \"description\": \"\",\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"majorPurchaseGoalTypeId\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5a00f440-0f8b-4fc2-bfae-50059a15b04e",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9843b279-d6b8-45b2-86d0-45604601e6c2",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Major Purchase Goal Type not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a5eef82c-ddf8-405b-9e94-91c8785ef71d",
      "documentation": "Description: This operation retrieves all Major Purchases for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Major Purchases including description and amount.",
      "method": "get",
      "endpoint": "api/MajorPurchaseGoals",
      "responses": [
        {
          "uuid": "5308be62-d48b-4ce0-8193-e4bb6b50125f",
          "body": "{\n  \"majorPurchaseGoals\": [\n    {\n      \"amount\": {{faker 'random.float'}},\n      \"description\": \"\",\n      \"externalDestinationId\": \"\",\n      \"factFinderId\": {{faker 'random.number'}},\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"majorPurchaseGoalId\": {{faker 'random.number'}},\n      \"majorPurchaseGoalTypeId\": {{faker 'random.number'}},\n      \"member\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n      \"targetDate\": \"{{faker 'date.recent' 365}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d86faa85-9252-4b1b-a71b-5533914a14d4",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f3c5d10e-3bb7-43a9-b131-8db81acbfc92",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Major Purchase data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "43c39f4b-9bed-43f3-bbeb-f2027d2ec555",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Major Purchase.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "28c7c942-e8f9-46c5-8b3f-d353e23720ac",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Major Purchase not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c6395f8f-8d5b-46a7-962d-652350bada0f",
      "documentation": "Description: The operation creates a Major Purchase.<br />\r\n              Purpose: Allows for creation of Major Purchases on a Fact Finder.",
      "method": "post",
      "endpoint": "api/MajorPurchaseGoals",
      "responses": [
        {
          "uuid": "1f7d4349-b02e-4165-a3e8-cfe63e6f6512",
          "body": "{\n  \"amount\": {{faker 'random.float'}},\n  \"description\": \"\",\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"majorPurchaseGoalId\": {{faker 'random.number'}},\n  \"majorPurchaseGoalTypeId\": {{faker 'random.number'}},\n  \"member\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n  \"targetDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6023cdfc-d65f-45df-b491-b903997ce1b6",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "588b7e1a-f3a3-4eca-8a2a-bbee024590ea",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Major Purchase data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0c557b31-83fd-4b10-acf1-df4fa4ebf033",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Major Purchase.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bed2b6a2-85f3-4276-a87c-85ca72473bc0",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Major Purchase not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3a10a7c4-233a-405f-9f38-e444af6478a6",
      "documentation": "Description: The operation removes a Major Purchase tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal of a Major Purchase from a Fact Finder.",
      "method": "delete",
      "endpoint": "api/MajorPurchaseGoals/:id",
      "responses": [
        {
          "uuid": "ff03eb96-a56d-4feb-86a7-f12cc261074a",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9c09c8a7-10e9-4925-b1da-3106bb0127eb",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d85cf8ce-509e-4d31-be1c-00946c6d83d3",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Major Purchase data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2a69c7f2-f9b8-466f-b871-e5f27b8f965a",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Major Purchase.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e4c67cfd-3675-40c1-9518-bad2357c43ca",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Major Purchase not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d0ea8991-78d8-4962-91f9-19f4634aaee9",
      "documentation": "Description: This operation retrieves a single Major Purchase for the specified Major Purchase ID.<br />\r\n              Purpose: Provides access to the Major Purchase including description and amount.",
      "method": "get",
      "endpoint": "api/MajorPurchaseGoals/:id",
      "responses": [
        {
          "uuid": "97550c0b-daba-4914-8843-94e524e2a461",
          "body": "{\n  \"amount\": {{faker 'random.float'}},\n  \"description\": \"\",\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"majorPurchaseGoalId\": {{faker 'random.number'}},\n  \"majorPurchaseGoalTypeId\": {{faker 'random.number'}},\n  \"member\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n  \"targetDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4757b062-f732-466d-ae93-c3cb8e46f816",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cf6c44d7-3736-4a02-bc60-f81313070d24",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Major Purchase data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "852bc60f-c3cd-4fa4-b1c6-96cebcb91e05",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Major Purchase.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "55655250-865a-4bb9-a3db-32a0092ebe56",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Major Purchase not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b655fa3d-bc0c-44ee-89df-76dbd06b21c3",
      "documentation": "Description: The operation updates a Major Purchase.<br />\r\n              Purpose: Allows for complete replacement of a Major Purchase on a Fact Finder.",
      "method": "put",
      "endpoint": "api/MajorPurchaseGoals/:id",
      "responses": [
        {
          "uuid": "3305efd3-31ed-40e5-bc8e-5473b774d1c3",
          "body": "{\n  \"amount\": {{faker 'random.float'}},\n  \"description\": \"\",\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"majorPurchaseGoalId\": {{faker 'random.number'}},\n  \"majorPurchaseGoalTypeId\": {{faker 'random.number'}},\n  \"member\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n  \"targetDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ac9a41ae-506a-435b-862e-816263e75804",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "92039283-55dd-41d6-96a6-3a5862744a4b",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Major Purchase data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "36068aea-f900-4c4a-a870-916dbe0f7f8c",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Major Purchase.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "36ec74d8-bd82-4e21-a31d-ede6ec214fa6",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Major Purchase not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "960245e7-49da-4875-912f-c3c35e504ce7",
      "documentation": "Description: This operation retrieves all current Accounts for the specified Fact Finder ID, as well as\r\n                           all of the holdings and savings strategies belonging to those accounts.<br />\r\n              Purpose: Provides access to the Accounts in a Fact Finder as well as any sub-entities belonging to them.",
      "method": "get",
      "endpoint": "api/Presentation/Accounts",
      "responses": [
        {
          "uuid": "213cf67b-d0e5-45eb-8e34-d6d7c4f917e7",
          "body": "{\n  \"accounts\": [\n    {\n      \"accountId\": {{faker 'random.number'}},\n      \"accountType\": {{faker 'random.number'}},\n      \"description\": \"\",\n      \"externalDestinationId\": \"\",\n      \"externalSourceId\": \"\",\n      \"externalSourceName\": \"\",\n      \"factFinderId\": {{faker 'random.number'}},\n      \"holdings\": [\n        {\n          \"accountHoldingId\": {{faker 'random.number'}},\n          \"accountId\": {{faker 'random.number'}},\n          \"costBasis\": {{faker 'random.float'}},\n          \"cusip\": \"\",\n          \"description\": \"\",\n          \"externalDestinationId\": \"\",\n          \"links\": [\n            {\n              \"href\": \"\",\n              \"rel\": \"\"\n            }\n          ],\n          \"marketValue\": {{faker 'random.float'}},\n          \"symbol\": \"\",\n          \"valuationDate\": \"{{faker 'date.recent' 365}}\"\n        }\n      ],\n      \"lastUpdated\": \"{{faker 'date.recent' 365}}\",\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"marketValue\": {{faker 'random.float'}},\n      \"owner\": \"{{oneOf (array 'Client' 'CoClient' 'Joint' 'Dependent' 'Other')}}\",\n      \"ownerDependentId\": {{faker 'random.number'}},\n      \"savingsStrategies\": [\n        {\n          \"accountId\": {{faker 'random.number'}},\n          \"employerSavingsAmount\": {{faker 'random.float'}},\n          \"employerSavingsAmountType\": \"{{oneOf (array 'Dollar' 'Percent' 'Max')}}\",\n          \"endDate\": \"{{faker 'date.recent' 365}}\",\n          \"externalDestinationId\": \"\",\n          \"frequencyId\": {{faker 'random.number'}},\n          \"mandatoryAmount\": {{faker 'random.float'}},\n          \"mandatoryAmountType\": \"{{oneOf (array 'Dollar' 'Percent' 'Max')}}\",\n          \"postTaxSavingsAmount\": {{faker 'random.float'}},\n          \"postTaxSavingsAmountType\": \"{{oneOf (array 'Dollar' 'Percent' 'Max')}}\",\n          \"preTaxSavingsAmount\": {{faker 'random.float'}},\n          \"preTaxSavingsAmountType\": \"{{oneOf (array 'Dollar' 'Percent' 'Max')}}\",\n          \"savingsStrategyId\": {{faker 'random.number'}},\n          \"startDate\": \"{{faker 'date.recent' 365}}\"\n        }\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "04dc3f55-4c18-4649-8c55-3820b7c2ad25",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aaa9b468-25a7-4211-8c40-bedafa71196f",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Account data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "02033e8b-97c9-4406-98fb-75c47975b438",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d84a442f-94eb-4e4a-b6cb-e0404df32c8b",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Account not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0338c9e9-d78e-40ba-bcbe-614c2e36ad24",
      "documentation": "Description: This operation retrieves owner values for the fact finder based on demographics data\r\n              Purpose: Provides the list of valid options for owner, student, beneficiary, etc.",
      "method": "get",
      "endpoint": "api/Presentation/Demographics/Owners",
      "responses": [
        {
          "uuid": "bfbe74f6-133d-4ca7-a56a-2dc326ae49bd",
          "body": "{\n  \"owners\": [\n    {\n      \"displayName\": \"\",\n      \"owner\": \"\",\n      \"ownerDependentId\": {{faker 'random.number'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0de99f07-c19c-4963-b461-d65adb1c5e47",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d08fd704-62ac-41f0-9b70-2013f57c5265",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Demographic information data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0eed4197-dd21-4d24-87c0-3446ba647e83",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Demographic information.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9c79dbc0-112e-49e0-abe8-bf6b4d555426",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Fact Finder not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8523b41c-3dfd-43de-a769-cc5409fd7750",
      "documentation": "Description: This operation retrieves all relationship types relevant to demographics.<br />\r\n              Purpose: Provides a list of relationship types organized by whether or not they can be defined as children.",
      "method": "get",
      "endpoint": "api/Presentation/Demographics/Relationships",
      "responses": [
        {
          "uuid": "8bcc85b9-8f63-45bc-bf11-09628773ea09",
          "body": "{\n  \"relationshipTypes\": [\n    {\n      \"id\": {{faker 'random.number'}},\n      \"isChildType\": {{faker 'random.boolean'}},\n      \"relationshipType\": \"{{oneOf (array 'Son' 'Daughter' 'FosterSon' 'FosterDaughter' 'Grandson' 'Granddaughter' 'Nephew' 'Niece' 'MaleCousin' 'FemaleCousin' 'Father' 'Mother' 'Grandfather' 'Grandmother' 'Uncle' 'Aunt' 'Brother' 'Sister' 'SonInLaw' 'DaughterInLaw' 'MaleOther' 'FemaleOther')}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aec05356-86f7-428d-ae9d-7258d58095ac",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "91c46899-f432-4df8-84a9-ab99d07d7de3",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Object not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "785244c2-a5b8-4e90-8deb-047a11e73468",
      "documentation": "Description: This operation retrieves all current Incomes for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Incomes in a Fact Finder, filtered by Incomes that are current.",
      "method": "get",
      "endpoint": "api/Presentation/Incomes",
      "responses": [
        {
          "uuid": "6ecd5ba9-2294-41f5-b3d2-68d98ccb5a49",
          "body": "{\n  \"incomes\": [\n    {\n      \"annualAmount\": {{faker 'random.float'}},\n      \"description\": \"\",\n      \"endDate\": \"{{faker 'date.recent' 365}}\",\n      \"externalDestinationId\": \"\",\n      \"factFinderId\": {{faker 'random.number'}},\n      \"incomeId\": {{faker 'random.number'}},\n      \"incomeTypeId\": {{faker 'random.number'}},\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"owner\": \"{{oneOf (array 'Client' 'CoClient')}}\",\n      \"startDate\": \"{{faker 'date.recent' 365}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1456f691-b854-48de-bc47-7d9dcbe36dff",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f8d04ab4-3f6a-4823-ad94-4b6aceec336d",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Income data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "29d68403-5574-432d-9b83-7aaf7d4af4ac",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Income.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "943351b0-8a16-4c93-addc-257a622822a7",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Income not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "33d674c7-1ab3-499c-8634-35ef4d9aebf0",
      "documentation": "Description: This operation retrieves all current Liabilities for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Liabilities in a Fact Finder, filtered by Liabilities that are current.",
      "method": "get",
      "endpoint": "api/Presentation/Liabilities",
      "responses": [
        {
          "uuid": "3566c1ae-07c3-44b6-919d-19595ef6f5b8",
          "body": "{\n  \"liabilities\": [\n    {\n      \"balance\": {{faker 'random.float'}},\n      \"balanceAsOfDate\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"externalDestinationId\": \"\",\n      \"externalSourceId\": \"\",\n      \"externalSourceName\": \"\",\n      \"factFinderId\": {{faker 'random.number'}},\n      \"frequency\": {{faker 'random.number'}},\n      \"interestRate\": {{faker 'random.float'}},\n      \"lastUpdated\": \"{{faker 'date.recent' 365}}\",\n      \"liabilityId\": {{faker 'random.number'}},\n      \"liabilityType\": {{faker 'random.number'}},\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"loanDate\": \"{{faker 'date.recent' 365}}\",\n      \"originalPrincipal\": {{faker 'random.float'}},\n      \"owner\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n      \"payment\": {{faker 'random.float'}},\n      \"paymentType\": \"{{oneOf (array 'InterestOnly' 'PrincipalAndInterest' 'SetPrincipal' 'LastPeriod')}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "494f7145-6b0b-4909-9be8-0dff509e7d1c",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d78e15f9-a1b3-4da3-a73f-3faa14b91e73",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Liability data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d6fc8fb6-00d4-4864-bc87-1d1fa2d5af7f",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Liability.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1197facb-43f8-4c2f-9fe2-9fe67937d892",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Liability not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1b7439c4-6499-4f47-9ffb-f843da536b76",
      "documentation": "Description: This operation retrieves all life insurance policies, including subaccounts if available, for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Life Insurance Policies in a Fact Finder.",
      "method": "get",
      "endpoint": "api/Presentation/LifeInsurancePolicies",
      "responses": [
        {
          "uuid": "13f6505b-afae-427e-b193-0e8d79fa023e",
          "body": "{\n  \"lifeInsurancePolicies\": [\n    {\n      \"beneficiary\": \"{{oneOf (array 'Client' 'CoClient' 'Dependent' 'Other')}}\",\n      \"beneficiaryDependentId\": {{faker 'random.number'}},\n      \"benefit\": {{faker 'random.float'}},\n      \"description\": \"\",\n      \"externalDestinationId\": \"\",\n      \"factFinderId\": {{faker 'random.number'}},\n      \"frequency\": {{faker 'random.number'}},\n      \"generalAccountMarketValue\": {{faker 'random.float'}},\n      \"insurancePolicyId\": {{faker 'random.number'}},\n      \"insured\": \"{{oneOf (array 'Client' 'CoClient' 'FirstToDie' 'SecondToDie' 'Other')}}\",\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"payer\": \"{{oneOf (array 'Client' 'CoClient' 'Joint' 'Other')}}\",\n      \"policyType\": {{faker 'random.number'}},\n      \"premium\": {{faker 'random.float'}},\n      \"subaccounts\": [\n        {\n          \"description\": \"\",\n          \"externalDestinationId\": \"\",\n          \"lifeInsurancePolicyId\": {{faker 'random.number'}},\n          \"lifeInsurancePolicySubaccountId\": {{faker 'random.number'}},\n          \"marketValue\": {{faker 'random.float'}},\n          \"symbol\": \"\"\n        }\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "097dc059-1cf2-4a43-87f4-87a2ff7d34cd",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f760cf21-bfec-42f3-ac52-691c725c9588",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Life Insurance Policy data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "45575dd7-8f0b-47d7-a441-9ad94926e25e",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Life Insurance Policy.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "88bd1824-5b3c-435b-afe8-3e6c77e7ced7",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Life Insurance Policy not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0525e761-d723-4cae-b7cc-e88c054b306f",
      "documentation": "Description: This operation retrieves all future Defined Benefit Pensions for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Pensions in a Fact Finder, filtered by Pensions that are in the future.",
      "method": "get",
      "endpoint": "api/Presentation/Pensions",
      "responses": [
        {
          "uuid": "8e9cf309-5682-450d-8cad-2cd491be6da1",
          "body": "{\n  \"definedBenefitPensions\": [\n    {\n      \"definedBenefitPensionId\": {{faker 'random.number'}},\n      \"description\": \"\",\n      \"estimatedAmount\": {{faker 'random.float'}},\n      \"externalDestinationId\": \"\",\n      \"factFinderId\": {{faker 'random.number'}},\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"member\": \"{{oneOf (array 'Client' 'CoClient')}}\",\n      \"startDate\": \"{{faker 'date.recent' 365}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "edeeef4d-6255-4aec-9154-acbbeed208d6",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ce58564a-f744-485c-9215-e666450d6bac",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Defined Benefit Pension data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a435f0be-7a75-40a0-a268-3be8c1807ac7",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Defined Benefit Pension.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7363fadd-0ce5-43e8-b0e1-ad97e11530e3",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Defined Benefit Pension not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "67f47cd4-5ce4-4020-ad99-e2e427f46cda",
      "documentation": "Description: This operation retrieves all Real Estate Assets for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Real Estate Assets including description and market value.",
      "method": "get",
      "endpoint": "api/RealEstateAssets",
      "responses": [
        {
          "uuid": "2d63710a-5303-4f8a-9abc-f2b4c8ddb506",
          "body": "{\n  \"realEstateAssets\": [\n    {\n      \"description\": \"\",\n      \"externalDestinationId\": \"\",\n      \"factFinderId\": {{faker 'random.number'}},\n      \"frequency\": {{faker 'random.number'}},\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"marketValue\": {{faker 'random.float'}},\n      \"owner\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n      \"purchaseAmount\": {{faker 'random.float'}},\n      \"purchaseDate\": \"{{faker 'date.recent' 365}}\",\n      \"realEstateAssetId\": {{faker 'random.number'}},\n      \"rentalIncome\": {{faker 'random.float'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5985ed33-cf35-425c-97e7-8be33fb4d306",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e7310f4b-0f6c-46ac-8f69-65013b8765ee",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Real Estate Asset data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "be24b2fe-69ac-491b-951a-52ee089dfde0",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Real Estate Asset.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "267264c7-f46d-41ea-8a9b-e23a83afb9db",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Real Estate Asset not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7c6109ba-1534-4137-b4a8-1ea1bc0e8141",
      "documentation": "Description: The operation creates a Real Estate Asset.<br />\r\n              Purpose: Allows for creation of Real Estate Assets on a Fact Finder.",
      "method": "post",
      "endpoint": "api/RealEstateAssets",
      "responses": [
        {
          "uuid": "40f70bb6-3016-41b6-86b2-24af063e1a59",
          "body": "{\n  \"description\": \"\",\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"frequency\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"marketValue\": {{faker 'random.float'}},\n  \"owner\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n  \"purchaseAmount\": {{faker 'random.float'}},\n  \"purchaseDate\": \"{{faker 'date.recent' 365}}\",\n  \"realEstateAssetId\": {{faker 'random.number'}},\n  \"rentalIncome\": {{faker 'random.float'}}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8923a7f4-e67c-413e-ae45-61082f95058f",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8a068b9f-cac7-4847-8d3b-3663f375fd42",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Real Estate Asset data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b024d54b-ccd6-426e-9757-c0066f68b947",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Real Estate Asset.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0c4a237a-020d-41be-9c8b-bbbd3dfa7ded",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Real Estate Asset not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b43f3800-80b6-4831-b708-860dbc0bd0bb",
      "documentation": "Description: The operation removes a Real Estate Asset tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal of a Real Estate Asset from a Fact Finder.",
      "method": "delete",
      "endpoint": "api/RealEstateAssets/:id",
      "responses": [
        {
          "uuid": "6ac32e89-ce85-4562-b8c2-9c74d3394fc9",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a466ecbb-eec3-472c-944d-7ac4bbc7c794",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5c9b2df7-a93f-4eae-844b-3b2eeb7f1823",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Real Estate Asset data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ed50a33e-93cc-41f7-a722-f6036320d5f6",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Real Estate Asset.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "53a47954-371d-4531-aea4-14d2ea470654",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Real Estate Asset not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "df603ded-ef8f-4d79-923f-e8bd2b6c8624",
      "documentation": "Description: This operation retrieves a single Real Estate Asset for the specified Real Estate Asset ID.<br />\r\n              Purpose: Provides access to the Real Estate Asset including description and market value.",
      "method": "get",
      "endpoint": "api/RealEstateAssets/:id",
      "responses": [
        {
          "uuid": "11054141-bc55-4450-8a51-790f88f1006e",
          "body": "{\n  \"description\": \"\",\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"frequency\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"marketValue\": {{faker 'random.float'}},\n  \"owner\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n  \"purchaseAmount\": {{faker 'random.float'}},\n  \"purchaseDate\": \"{{faker 'date.recent' 365}}\",\n  \"realEstateAssetId\": {{faker 'random.number'}},\n  \"rentalIncome\": {{faker 'random.float'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "80b3372b-fc46-488f-a382-d44d5382a273",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "73ac9552-9a5c-4007-92f4-a37e7c114376",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Real Estate Asset data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cd0e6cc6-3fc0-4430-99c3-fd0a52181631",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Real Estate Asset.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e7f588f8-5a0e-44a9-a816-3fab489df493",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Real Estate Asset not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1013f220-eb6f-49d5-b4f1-9162550a171c",
      "documentation": "Description: The operation updates a Real Estate Asset.<br />\r\n              Purpose: Allows for complete replacement of a Real Estate Asset on a Fact Finder.",
      "method": "put",
      "endpoint": "api/RealEstateAssets/:id",
      "responses": [
        {
          "uuid": "58172ec5-1f66-4c93-b8d6-42bb6be75a6d",
          "body": "{\n  \"description\": \"\",\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"frequency\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"marketValue\": {{faker 'random.float'}},\n  \"owner\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n  \"purchaseAmount\": {{faker 'random.float'}},\n  \"purchaseDate\": \"{{faker 'date.recent' 365}}\",\n  \"realEstateAssetId\": {{faker 'random.number'}},\n  \"rentalIncome\": {{faker 'random.float'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0640f77c-1d4e-46f6-bc8d-488754f7426c",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c7a03a34-9dbd-4ac3-8065-319ea35ea599",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Real Estate Asset data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cd79448d-a750-4a75-b096-9de41686cdc1",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Real Estate Asset.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a23c8946-32f9-44d3-b7ca-244936a6fe44",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Real Estate Asset not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "601709bd-0d39-4cfc-959a-fea004e99ca6",
      "documentation": "Description: This operation retrieves all Retirement Goals for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Retirement Goals including retirement date.",
      "method": "get",
      "endpoint": "api/RetirementGoals",
      "responses": [
        {
          "uuid": "62601c0a-f7fc-450b-ba1b-47a0b37eaaa3",
          "body": "{\n  \"retirementGoals\": [\n    {\n      \"externalDestinationId\": \"\",\n      \"factFinderId\": {{faker 'random.number'}},\n      \"head1RetirementDate\": \"{{faker 'date.recent' 365}}\",\n      \"head2RetirementDate\": \"{{faker 'date.recent' 365}}\",\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"retirementGoalId\": {{faker 'random.number'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "582dbc61-8a0e-4a9a-9534-54a615fa00ca",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "57d332b9-1079-40dc-a9d9-71c77c275db5",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Retirement Goal data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b5a964ff-f2c9-4752-9321-889e85f7a37f",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Retirement Goal.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5ba7d074-5f02-4786-a62a-b725329e86da",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Retirement Goal not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a2592573-788f-42e3-b5b4-876b69887060",
      "documentation": "Description: The operation creates a Retirement Goal.<br />\r\n              Purpose: Allows for creation of Retirement Goals on a Fact Finder.",
      "method": "post",
      "endpoint": "api/RetirementGoals",
      "responses": [
        {
          "uuid": "808d567f-b92f-43c1-bdc6-86dfa89a85bb",
          "body": "{\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"head1RetirementDate\": \"{{faker 'date.recent' 365}}\",\n  \"head2RetirementDate\": \"{{faker 'date.recent' 365}}\",\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"retirementGoalId\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ddb88c44-41d0-498c-b2b5-46741fc16ee6",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b5beec87-8feb-417c-9da3-767298add3a4",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Retirement Goal data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "117d8134-b59f-4b5d-a443-303a4e21a7ef",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Retirement Goal.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c0f5d743-83a9-48e1-8198-0dfbe80c1aac",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Retirement Goal not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1cf048ac-1e81-44a1-8c4b-32cbd11bb239",
      "documentation": "Description: The operation removes a Retirement Goal tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal of a Retirement Goal from a Fact Finder.",
      "method": "delete",
      "endpoint": "api/RetirementGoals/:id",
      "responses": [
        {
          "uuid": "45bf2ecb-1a84-4d6e-b471-de0494db0cf8",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "96f73a37-083b-4d17-b353-cda6dcb711ae",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1f50703a-894f-4744-8194-3ee6e2e42335",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Retirement Goal data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c2b1e0c6-1910-4d4e-a0a8-17b29088b99b",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Retirement Goal.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "091d72a5-db87-45be-87d5-c13d4430c5b1",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Retirement Goal not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "288c0e7e-e62f-4881-9e9b-085322d5b8ad",
      "documentation": "Description: This operation retrieves a single Retirement Goal for the specified Retirement Goal ID.<br />\r\n              Purpose: Provides access to the Retirement Goal including retirement date.",
      "method": "get",
      "endpoint": "api/RetirementGoals/:id",
      "responses": [
        {
          "uuid": "6c2d5317-840e-4cda-a6f9-2c51abe25b19",
          "body": "{\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"head1RetirementDate\": \"{{faker 'date.recent' 365}}\",\n  \"head2RetirementDate\": \"{{faker 'date.recent' 365}}\",\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"retirementGoalId\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "de55640a-23e4-41e9-a856-14532d7d94bc",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2e26ae2a-7e4c-42bc-876c-76d92b035f58",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Retirement Goal data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3912423b-d825-4bf3-984b-23c4bef6eba9",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Retirement Goal.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d16e2dc6-f346-4fa3-a076-9c513005c5ad",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Retirement Goal not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8858eaac-ed15-454f-82c0-6646d3bd8226",
      "documentation": "Description: The operation updates a Retirement Goal.<br />\r\n              Purpose: Allows for complete replacement of a Retirement Goal on a Fact Finder.",
      "method": "put",
      "endpoint": "api/RetirementGoals/:id",
      "responses": [
        {
          "uuid": "26222cf8-c86b-4968-ae89-1363b1e3b740",
          "body": "{\n  \"externalDestinationId\": \"\",\n  \"factFinderId\": {{faker 'random.number'}},\n  \"head1RetirementDate\": \"{{faker 'date.recent' 365}}\",\n  \"head2RetirementDate\": \"{{faker 'date.recent' 365}}\",\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"retirementGoalId\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1af4a31f-2564-44bb-8efd-3c76489067db",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "20933da2-522c-4e87-8e2b-aed3b7cf3a6e",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Retirement Goal data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "43574957-fd8c-48a5-bff4-aba41d59dcf2",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Retirement Goal.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c766ee6e-923b-4bbf-bd71-112b04361aaf",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Retirement Goal not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5d5d4698-07d2-46ba-9deb-28ae0731ed8b",
      "documentation": "Description: This operation retrieves all Retirement Goal Expenses for the specified Retirement Goal ID.<br />\r\n              Purpose: Provides access to the Retirement Goal Expenses including description and amount.",
      "method": "get",
      "endpoint": "api/RetirementGoals/:retirementGoalId/Expenses",
      "responses": [
        {
          "uuid": "fb66f6b5-2b8e-4dbf-99a7-487c9954ebd9",
          "body": "{\n  \"retirementExpenses\": [\n    {\n      \"amount\": {{faker 'random.float'}},\n      \"annualPeriod\": {{faker 'random.number'}},\n      \"description\": \"\",\n      \"endDate\": \"{{faker 'date.recent' 365}}\",\n      \"externalDestinationId\": \"\",\n      \"frequency\": {{faker 'random.number'}},\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"member\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n      \"retirementExpenseId\": {{faker 'random.number'}},\n      \"retirementGoalId\": {{faker 'random.number'}},\n      \"startDate\": \"{{faker 'date.recent' 365}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7d82a995-9ca0-4243-aaf1-ed509ea3aef4",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0478e7fd-db2d-4c91-8c03-57c512646bc3",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Retirement Goal Expense data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c8c37f86-5422-499f-80e7-533db907472f",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Retirement Goal Expense.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f1683a57-0ebe-46b4-a4b9-0244bf7a2fe3",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Retirement Goal Expense not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9e635dd9-7602-4927-b906-76600c841e21",
      "documentation": "Description: The operation creates a Retirement Goal Expense.<br />\r\n              Purpose: Allows for creation of Retirement Goal Expenses on a Fact Finder.",
      "method": "post",
      "endpoint": "api/RetirementGoals/:retirementGoalId/Expenses",
      "responses": [
        {
          "uuid": "6ec0e5cf-69a2-4794-af89-fe1926702fdf",
          "body": "{\n  \"amount\": {{faker 'random.float'}},\n  \"annualPeriod\": {{faker 'random.number'}},\n  \"description\": \"\",\n  \"endDate\": \"{{faker 'date.recent' 365}}\",\n  \"externalDestinationId\": \"\",\n  \"frequency\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"member\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n  \"retirementExpenseId\": {{faker 'random.number'}},\n  \"retirementGoalId\": {{faker 'random.number'}},\n  \"startDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2ee066ee-0035-49fc-83ee-4bdeda9557e8",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7c5adf83-ef20-432a-b9d5-76e2ff91e586",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Retirement Goal Expense data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "12046213-dcf0-42f8-a26b-c84bafe955a3",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Retirement Goal Expense.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "82dbd03f-db4a-425c-b6c5-cafca05492a6",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Retirement Goal Expense not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "95fc76a0-c81c-43e0-901b-361e62836ef2",
      "documentation": "Description: The operation removes a Retirement Goal Expense tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal of a Retirement Goal Expense from a Fact Finder.",
      "method": "delete",
      "endpoint": "api/RetirementGoals/:retirementGoalId/Expenses/:id",
      "responses": [
        {
          "uuid": "148e9f7e-5365-4f12-9feb-3a961dd62368",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a27354fe-7552-4b1f-8a41-3d6a5ee7f130",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b5bbddf1-7a2e-4f5d-afd1-be52f5e87d91",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Retirement Goal Expense data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f0630ebe-f9a3-40e9-8b04-2dce9030a470",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Retirement Goal Expense.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0b17377c-2718-4a6d-9937-21c1539470cc",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Retirement Goal Expense not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0d7d3326-4e54-4d0f-978f-269d19014148",
      "documentation": "Description: This operation retrieves a single Retirement Goal Expense for the specified Retirement Goal Expense ID.<br />\r\n              Purpose: Provides access to the Retirement Goal Expense including description and amount.",
      "method": "get",
      "endpoint": "api/RetirementGoals/:retirementGoalId/Expenses/:id",
      "responses": [
        {
          "uuid": "2a19205c-4cb8-44e4-b01c-53c499ff7b8c",
          "body": "{\n  \"amount\": {{faker 'random.float'}},\n  \"annualPeriod\": {{faker 'random.number'}},\n  \"description\": \"\",\n  \"endDate\": \"{{faker 'date.recent' 365}}\",\n  \"externalDestinationId\": \"\",\n  \"frequency\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"member\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n  \"retirementExpenseId\": {{faker 'random.number'}},\n  \"retirementGoalId\": {{faker 'random.number'}},\n  \"startDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "73048235-ff70-4650-a103-cf7186ae1b93",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8ca3321d-d44e-4607-ab2e-0c55ddd5adb8",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Retirement Goal Expense data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "efd8d78f-5218-4041-aab0-f9a45d8f7b49",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Retirement Goal Expense.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "27f3fcd6-64ba-48f4-8f22-5b4b81b4b39e",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Retirement Goal Expense not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fc2bd161-df68-4a24-b96d-8f9df395edf5",
      "documentation": "Description: The operation updates a Retirement Goal Expense.<br />\r\n              Purpose: Allows for complete replacement of a Retirement Goal Expense on a Fact Finder.",
      "method": "put",
      "endpoint": "api/RetirementGoals/:retirementGoalId/Expenses/:id",
      "responses": [
        {
          "uuid": "6bd187a0-0901-460c-b5a6-46fff8a6a302",
          "body": "{\n  \"amount\": {{faker 'random.float'}},\n  \"annualPeriod\": {{faker 'random.number'}},\n  \"description\": \"\",\n  \"endDate\": \"{{faker 'date.recent' 365}}\",\n  \"externalDestinationId\": \"\",\n  \"frequency\": {{faker 'random.number'}},\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"member\": \"{{oneOf (array 'Client' 'CoClient' 'Joint')}}\",\n  \"retirementExpenseId\": {{faker 'random.number'}},\n  \"retirementGoalId\": {{faker 'random.number'}},\n  \"startDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "50351077-e1b5-47fd-b20f-14e859174d22",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e08dd7c3-76ee-47b8-b241-98c2a8046bbe",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized for Retirement Goal Expense data access.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d6ce1046-b7b7-4197-86df-04c453609f16",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is restricted for access to Retirement Goal Expense.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "13adf440-135e-4254-9248-d06a68f612da",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Retirement Goal Expense not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "39d26097-c698-4ca1-a22b-87d70e306b72",
      "documentation": "Description: This operation retrieves information statistics for the current service.<br />\r\n              Purpose: Provides access to Service Information.",
      "method": "get",
      "endpoint": "api/ServiceInformation",
      "responses": [
        {
          "uuid": "2299d7c6-d2dd-46de-8504-d6a5ad89c781",
          "body": "{\n  \"name\": \"\",\n  \"schemaVersion\": {{faker 'random.number'}},\n  \"serviceVersion\": \"\",\n  \"status\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2a469151-431a-44e7-8c4e-29d104cbe7d4",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Object not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f7ba171b-ea18-4f05-9f83-c63a5f685ac9",
      "documentation": "Description: This operation retrieves all States and Provinces for the specified country.<br />\r\n              Purpose: Provides access to the States and Provinces.",
      "method": "get",
      "endpoint": "api/StatesProvinces",
      "responses": [
        {
          "uuid": "8dba9971-c72d-4487-bac9-8210c129ca2c",
          "body": "{\n  \"statesProvinces\": [\n    {\n      \"links\": [\n        {\n          \"href\": \"\",\n          \"rel\": \"\"\n        }\n      ],\n      \"stateProvinceId\": {{faker 'random.number'}},\n      \"stateProvinceName\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cc581645-bc32-49ec-b9f4-a830e5287ae9",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6ae9b790-814d-4f13-87a4-bccd8f2ff19d",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "State or Province not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b7a8a31c-ef8a-438c-9870-049d94ef590e",
      "documentation": "Description: This operation retrieves the States and Provinces for the specified id.<br />\r\n              Purpose: Provides access to the States and Provinces.",
      "method": "get",
      "endpoint": "api/StatesProvinces/:id",
      "responses": [
        {
          "uuid": "f724722f-1a83-4a5a-aa5b-0417dbfe28fb",
          "body": "{\n  \"links\": [\n    {\n      \"href\": \"\",\n      \"rel\": \"\"\n    }\n  ],\n  \"stateProvinceId\": {{faker 'random.number'}},\n  \"stateProvinceName\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4d61ba1a-2b7d-45bc-befb-1416ba31deaf",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The request is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bd8002ae-ad59-4efb-b352-75cc3aec1e7a",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "State or Province not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}