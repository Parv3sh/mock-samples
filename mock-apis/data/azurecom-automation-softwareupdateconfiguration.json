{
  "uuid": "971127a8-ac53-462c-a1e9-11ebb3136452",
  "lastMigration": 19,
  "name": "Update Management",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "70c97517-bd97-4c35-8444-7d0b20e1cac8",
      "documentation": "Get all software update configurations for the account.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Automation/automationAccounts/:automationAccountName/softwareUpdateConfigurations",
      "responses": [
        {
          "uuid": "1b7b7f05-445d-4f44-89c5-e15384d69c7e",
          "body": "{\n  \"value\": [\n    {\n      \"id\": \"\",\n      \"name\": \"\",\n      \"properties\": {\n        \"creationTime\": \"{{faker 'date.recent' 365}}\",\n        \"frequency\": \"{{oneOf (array 'OneTime' 'Day' 'Hour' 'Week' 'Month' 'Minute')}}\",\n        \"lastModifiedTime\": \"{{faker 'date.recent' 365}}\",\n        \"nextRun\": \"{{faker 'date.recent' 365}}\",\n        \"provisioningState\": \"\",\n        \"startTime\": \"{{faker 'date.recent' 365}}\",\n        \"updateConfiguration\": {\n          \"azureVirtualMachines\": [\n            \"\"\n          ],\n          \"duration\": \"\"\n        }\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Return list of software update configurations.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3ae08d1d-d898-45c7-8311-741287cc4e66",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Automation error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "db162ff4-0bdf-490c-a479-74fba917b2ce",
      "documentation": "delete a specific software update configuration.",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Automation/automationAccounts/:automationAccountName/softwareUpdateConfigurations/:softwareUpdateConfigurationName",
      "responses": [
        {
          "uuid": "f82f9beb-6204-40ef-97f9-cf320784113d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The software update configuration has been deleted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "21a5c265-a392-49c7-9833-493a365c4cb1",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "The software update configuration does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "830fff22-86cc-4da3-bd79-c3d4477c2d18",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Automation error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "91f05e4b-fcf5-4031-8c16-ed3dc1da6aad",
      "documentation": "Get a single software update configuration by name.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Automation/automationAccounts/:automationAccountName/softwareUpdateConfigurations/:softwareUpdateConfigurationName",
      "responses": [
        {
          "uuid": "78136ace-99b4-4d9d-a227-8c4815a8b3cc",
          "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"properties\": {\n    \"createdBy\": \"\",\n    \"creationTime\": \"{{faker 'date.recent' 365}}\",\n    \"error\": {\n      \"code\": \"\",\n      \"message\": \"\"\n    },\n    \"lastModifiedBy\": \"\",\n    \"lastModifiedTime\": \"{{faker 'date.recent' 365}}\",\n    \"provisioningState\": \"\",\n    \"scheduleInfo\": {\n      \"advancedSchedule\": {\n        \"monthDays\": [\n          {{faker 'random.number'}}\n        ],\n        \"monthlyOccurrences\": [\n          {\n            \"day\": \"{{oneOf (array 'Monday' 'Tuesday' 'Wednesday' 'Thursday' 'Friday' 'Saturday' 'Sunday')}}\",\n            \"occurrence\": {{faker 'random.number'}}\n          }\n        ],\n        \"weekDays\": [\n          \"\"\n        ]\n      },\n      \"creationTime\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"expiryTime\": \"{{faker 'date.recent' 365}}\",\n      \"expiryTimeOffsetMinutes\": {{faker 'random.float'}},\n      \"frequency\": \"{{oneOf (array 'OneTime' 'Day' 'Hour' 'Week' 'Month' 'Minute')}}\",\n      \"interval\": {{faker 'random.number'}},\n      \"isEnabled\": {{faker 'random.boolean'}},\n      \"lastModifiedTime\": \"{{faker 'date.recent' 365}}\",\n      \"nextRun\": \"{{faker 'date.recent' 365}}\",\n      \"nextRunOffsetMinutes\": {{faker 'random.float'}},\n      \"startTime\": \"{{faker 'date.recent' 365}}\",\n      \"startTimeOffsetMinutes\": {{faker 'random.float'}},\n      \"timeZone\": \"\"\n    },\n    \"tasks\": {\n      \"postTask\": {\n        \"parameters\": {},\n        \"source\": \"\"\n      },\n      \"preTask\": {\n        \"parameters\": {},\n        \"source\": \"\"\n      }\n    },\n    \"updateConfiguration\": {\n      \"azureVirtualMachines\": [\n        \"\"\n      ],\n      \"duration\": \"\",\n      \"linux\": {\n        \"excludedPackageNameMasks\": [\n          \"\"\n        ],\n        \"includedPackageClassifications\": \"{{oneOf (array 'Unclassified' 'Critical' 'Security' 'Other')}}\",\n        \"includedPackageNameMasks\": [\n          \"\"\n        ],\n        \"rebootSetting\": \"\"\n      },\n      \"nonAzureComputerNames\": [\n        \"\"\n      ],\n      \"operatingSystem\": \"{{oneOf (array 'Windows' 'Linux')}}\",\n      \"targets\": {\n        \"azureQueries\": [\n          {\n            \"locations\": [\n              \"\"\n            ],\n            \"scope\": [\n              \"\"\n            ],\n            \"tagSettings\": {\n              \"filterOperator\": \"{{oneOf (array 'All' 'Any')}}\",\n              \"tags\": {}\n            }\n          }\n        ],\n        \"nonAzureQueries\": [\n          {\n            \"functionAlias\": \"\",\n            \"workspaceId\": \"\"\n          }\n        ]\n      },\n      \"windows\": {\n        \"excludedKbNumbers\": [\n          \"\"\n        ],\n        \"includedKbNumbers\": [\n          \"\"\n        ],\n        \"includedUpdateClassifications\": \"{{oneOf (array 'Unclassified' 'Critical' 'Security' 'UpdateRollup' 'FeaturePack' 'ServicePack' 'Definition' 'Tools' 'Updates')}}\",\n        \"rebootSetting\": \"\"\n      }\n    }\n  },\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A single software update configuration.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "46ad69e7-189a-4ff4-b605-8cd71c347df0",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Automation error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dbd20252-ce00-48f6-8636-8686312a7d03",
      "documentation": "Create a new software update configuration with the name given in the URI.",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Automation/automationAccounts/:automationAccountName/softwareUpdateConfigurations/:softwareUpdateConfigurationName",
      "responses": [
        {
          "uuid": "89288b65-a95f-4c39-a81c-42de85d823d8",
          "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"properties\": {\n    \"createdBy\": \"\",\n    \"creationTime\": \"{{faker 'date.recent' 365}}\",\n    \"error\": {\n      \"code\": \"\",\n      \"message\": \"\"\n    },\n    \"lastModifiedBy\": \"\",\n    \"lastModifiedTime\": \"{{faker 'date.recent' 365}}\",\n    \"provisioningState\": \"\",\n    \"scheduleInfo\": {\n      \"advancedSchedule\": {\n        \"monthDays\": [\n          {{faker 'random.number'}}\n        ],\n        \"monthlyOccurrences\": [\n          {\n            \"day\": \"{{oneOf (array 'Monday' 'Tuesday' 'Wednesday' 'Thursday' 'Friday' 'Saturday' 'Sunday')}}\",\n            \"occurrence\": {{faker 'random.number'}}\n          }\n        ],\n        \"weekDays\": [\n          \"\"\n        ]\n      },\n      \"creationTime\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"expiryTime\": \"{{faker 'date.recent' 365}}\",\n      \"expiryTimeOffsetMinutes\": {{faker 'random.float'}},\n      \"frequency\": \"{{oneOf (array 'OneTime' 'Day' 'Hour' 'Week' 'Month' 'Minute')}}\",\n      \"interval\": {{faker 'random.number'}},\n      \"isEnabled\": {{faker 'random.boolean'}},\n      \"lastModifiedTime\": \"{{faker 'date.recent' 365}}\",\n      \"nextRun\": \"{{faker 'date.recent' 365}}\",\n      \"nextRunOffsetMinutes\": {{faker 'random.float'}},\n      \"startTime\": \"{{faker 'date.recent' 365}}\",\n      \"startTimeOffsetMinutes\": {{faker 'random.float'}},\n      \"timeZone\": \"\"\n    },\n    \"tasks\": {\n      \"postTask\": {\n        \"parameters\": {},\n        \"source\": \"\"\n      },\n      \"preTask\": {\n        \"parameters\": {},\n        \"source\": \"\"\n      }\n    },\n    \"updateConfiguration\": {\n      \"azureVirtualMachines\": [\n        \"\"\n      ],\n      \"duration\": \"\",\n      \"linux\": {\n        \"excludedPackageNameMasks\": [\n          \"\"\n        ],\n        \"includedPackageClassifications\": \"{{oneOf (array 'Unclassified' 'Critical' 'Security' 'Other')}}\",\n        \"includedPackageNameMasks\": [\n          \"\"\n        ],\n        \"rebootSetting\": \"\"\n      },\n      \"nonAzureComputerNames\": [\n        \"\"\n      ],\n      \"operatingSystem\": \"{{oneOf (array 'Windows' 'Linux')}}\",\n      \"targets\": {\n        \"azureQueries\": [\n          {\n            \"locations\": [\n              \"\"\n            ],\n            \"scope\": [\n              \"\"\n            ],\n            \"tagSettings\": {\n              \"filterOperator\": \"{{oneOf (array 'All' 'Any')}}\",\n              \"tags\": {}\n            }\n          }\n        ],\n        \"nonAzureQueries\": [\n          {\n            \"functionAlias\": \"\",\n            \"workspaceId\": \"\"\n          }\n        ]\n      },\n      \"windows\": {\n        \"excludedKbNumbers\": [\n          \"\"\n        ],\n        \"includedKbNumbers\": [\n          \"\"\n        ],\n        \"includedUpdateClassifications\": \"{{oneOf (array 'Unclassified' 'Critical' 'Security' 'UpdateRollup' 'FeaturePack' 'ServicePack' 'Definition' 'Tools' 'Updates')}}\",\n        \"rebootSetting\": \"\"\n      }\n    }\n  },\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Software update configuration with the same name and properties already exists.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3c16f3a4-1040-46fc-8d77-9da084093b59",
          "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"properties\": {\n    \"createdBy\": \"\",\n    \"creationTime\": \"{{faker 'date.recent' 365}}\",\n    \"error\": {\n      \"code\": \"\",\n      \"message\": \"\"\n    },\n    \"lastModifiedBy\": \"\",\n    \"lastModifiedTime\": \"{{faker 'date.recent' 365}}\",\n    \"provisioningState\": \"\",\n    \"scheduleInfo\": {\n      \"advancedSchedule\": {\n        \"monthDays\": [\n          {{faker 'random.number'}}\n        ],\n        \"monthlyOccurrences\": [\n          {\n            \"day\": \"{{oneOf (array 'Monday' 'Tuesday' 'Wednesday' 'Thursday' 'Friday' 'Saturday' 'Sunday')}}\",\n            \"occurrence\": {{faker 'random.number'}}\n          }\n        ],\n        \"weekDays\": [\n          \"\"\n        ]\n      },\n      \"creationTime\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"expiryTime\": \"{{faker 'date.recent' 365}}\",\n      \"expiryTimeOffsetMinutes\": {{faker 'random.float'}},\n      \"frequency\": \"{{oneOf (array 'OneTime' 'Day' 'Hour' 'Week' 'Month' 'Minute')}}\",\n      \"interval\": {{faker 'random.number'}},\n      \"isEnabled\": {{faker 'random.boolean'}},\n      \"lastModifiedTime\": \"{{faker 'date.recent' 365}}\",\n      \"nextRun\": \"{{faker 'date.recent' 365}}\",\n      \"nextRunOffsetMinutes\": {{faker 'random.float'}},\n      \"startTime\": \"{{faker 'date.recent' 365}}\",\n      \"startTimeOffsetMinutes\": {{faker 'random.float'}},\n      \"timeZone\": \"\"\n    },\n    \"tasks\": {\n      \"postTask\": {\n        \"parameters\": {},\n        \"source\": \"\"\n      },\n      \"preTask\": {\n        \"parameters\": {},\n        \"source\": \"\"\n      }\n    },\n    \"updateConfiguration\": {\n      \"azureVirtualMachines\": [\n        \"\"\n      ],\n      \"duration\": \"\",\n      \"linux\": {\n        \"excludedPackageNameMasks\": [\n          \"\"\n        ],\n        \"includedPackageClassifications\": \"{{oneOf (array 'Unclassified' 'Critical' 'Security' 'Other')}}\",\n        \"includedPackageNameMasks\": [\n          \"\"\n        ],\n        \"rebootSetting\": \"\"\n      },\n      \"nonAzureComputerNames\": [\n        \"\"\n      ],\n      \"operatingSystem\": \"{{oneOf (array 'Windows' 'Linux')}}\",\n      \"targets\": {\n        \"azureQueries\": [\n          {\n            \"locations\": [\n              \"\"\n            ],\n            \"scope\": [\n              \"\"\n            ],\n            \"tagSettings\": {\n              \"filterOperator\": \"{{oneOf (array 'All' 'Any')}}\",\n              \"tags\": {}\n            }\n          }\n        ],\n        \"nonAzureQueries\": [\n          {\n            \"functionAlias\": \"\",\n            \"workspaceId\": \"\"\n          }\n        ]\n      },\n      \"windows\": {\n        \"excludedKbNumbers\": [\n          \"\"\n        ],\n        \"includedKbNumbers\": [\n          \"\"\n        ],\n        \"includedUpdateClassifications\": \"{{oneOf (array 'Unclassified' 'Critical' 'Security' 'UpdateRollup' 'FeaturePack' 'ServicePack' 'Definition' 'Tools' 'Updates')}}\",\n        \"rebootSetting\": \"\"\n      }\n    }\n  },\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Software update configuration is created.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1b77af02-e656-4ea5-a2f1-144a033c72fd",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Automation error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}