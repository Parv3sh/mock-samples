{
  "uuid": "585cf903-40ad-42b4-935e-7dad59c804ed",
  "lastMigration": 19,
  "name": "Certificate Manager API",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "9b2101c7-b882-4b44-ba3f-e9b5849371dd",
      "documentation": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
      "method": "delete",
      "endpoint": "v1/:name",
      "responses": [
        {
          "uuid": "d8d9c8f8-0dda-41d0-a722-e6e9d49fbc50",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cf11333f-db2a-44cf-becc-18d9906f0110",
      "documentation": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "method": "get",
      "endpoint": "v1/:name",
      "responses": [
        {
          "uuid": "8a7d9a90-ba38-4395-ad05-2143cb8a3c9f",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "16f2cd03-01c4-4843-b50b-f28f930e5745",
      "documentation": "Updates a DnsAuthorization.",
      "method": "patch",
      "endpoint": "v1/:name",
      "responses": [
        {
          "uuid": "45e778c7-723f-47ae-8fe2-be32397faf74",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "36cf0ae2-237f-4419-af5d-21c8886627f1",
      "documentation": "Lists information about the supported locations for this service.",
      "method": "get",
      "endpoint": "v1/:name/locations",
      "responses": [
        {
          "uuid": "ead831aa-dc90-4613-9ae9-29dbbba2764b",
          "body": "{\n  \"locations\": [\n    {\n      \"displayName\": \"\",\n      \"labels\": {},\n      \"locationId\": \"\",\n      \"metadata\": {},\n      \"name\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "691c381d-6b35-43d5-b6be-8f6b0a06dfff",
      "documentation": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
      "method": "get",
      "endpoint": "v1/:name/operations",
      "responses": [
        {
          "uuid": "35ed5433-63a2-4d57-bc02-733075deeb91",
          "body": "{\n  \"nextPageToken\": \"\",\n  \"operations\": [\n    {\n      \"done\": {{faker 'random.boolean'}},\n      \"error\": {\n        \"code\": {{faker 'random.number'}},\n        \"details\": [\n          {}\n        ],\n        \"message\": \"\"\n      },\n      \"metadata\": {},\n      \"name\": \"\",\n      \"response\": {}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "126be23b-10f9-4c13-b196-b7bfd49a0c3c",
      "documentation": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
      "method": "post",
      "endpoint": "v1/:name:cancel",
      "responses": [
        {
          "uuid": "c0c5b33c-f90b-4f6b-ba5c-8bc9adf02597",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "83a6e367-6ae3-42f7-a531-25eee4890fa0",
      "documentation": "Lists CertificateMapEntries in a given project and location.",
      "method": "get",
      "endpoint": "v1/:parent/certificateMapEntries",
      "responses": [
        {
          "uuid": "851d1966-0b13-4627-afd2-7051cbfdb470",
          "body": "{\n  \"certificateMapEntries\": [\n    {\n      \"certificates\": [\n        \"\"\n      ],\n      \"createTime\": \"\",\n      \"description\": \"\",\n      \"hostname\": \"\",\n      \"labels\": {},\n      \"matcher\": \"{{oneOf (array 'MATCHER_UNSPECIFIED' 'PRIMARY')}}\",\n      \"name\": \"\",\n      \"state\": \"{{oneOf (array 'SERVING_STATE_UNSPECIFIED' 'ACTIVE' 'PENDING')}}\",\n      \"updateTime\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\",\n  \"unreachable\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "847c1a94-999d-4a2c-90e2-ad4609b2aa3e",
      "documentation": "Creates a new CertificateMapEntry in a given project and location.",
      "method": "post",
      "endpoint": "v1/:parent/certificateMapEntries",
      "responses": [
        {
          "uuid": "b987732e-d2ab-40d4-a8fb-c3733db8074e",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f8c2a6f9-bfaa-49b6-bde0-69c364ed5307",
      "documentation": "Lists CertificateMaps in a given project and location.",
      "method": "get",
      "endpoint": "v1/:parent/certificateMaps",
      "responses": [
        {
          "uuid": "6936fc76-2be4-4c42-8b94-8232a9e0561f",
          "body": "{\n  \"certificateMaps\": [\n    {\n      \"createTime\": \"\",\n      \"description\": \"\",\n      \"gclbTargets\": [\n        {\n          \"ipConfigs\": [\n            {\n              \"ipAddress\": \"\",\n              \"ports\": [\n                {{faker 'random.number'}}\n              ]\n            }\n          ],\n          \"targetHttpsProxy\": \"\",\n          \"targetSslProxy\": \"\"\n        }\n      ],\n      \"labels\": {},\n      \"name\": \"\",\n      \"updateTime\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\",\n  \"unreachable\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4a953fec-2656-42d8-9cab-7823bd64a236",
      "documentation": "Creates a new CertificateMap in a given project and location.",
      "method": "post",
      "endpoint": "v1/:parent/certificateMaps",
      "responses": [
        {
          "uuid": "9f92002a-9408-4d42-b870-cdaeab481682",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3eff5f85-e2cc-4ce4-8858-5edeaecf25f2",
      "documentation": "Lists Certificates in a given project and location.",
      "method": "get",
      "endpoint": "v1/:parent/certificates",
      "responses": [
        {
          "uuid": "9573cd3d-2cc3-44f1-b43b-f7a1aeff5141",
          "body": "{\n  \"certificates\": [\n    {\n      \"createTime\": \"\",\n      \"description\": \"\",\n      \"expireTime\": \"\",\n      \"labels\": {},\n      \"managed\": {\n        \"authorizationAttemptInfo\": [\n          {\n            \"details\": \"\",\n            \"domain\": \"\",\n            \"failureReason\": \"{{oneOf (array 'FAILURE_REASON_UNSPECIFIED' 'CONFIG' 'CAA' 'RATE_LIMITED')}}\",\n            \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'AUTHORIZING' 'AUTHORIZED' 'FAILED')}}\"\n          }\n        ],\n        \"dnsAuthorizations\": [\n          \"\"\n        ],\n        \"domains\": [\n          \"\"\n        ],\n        \"provisioningIssue\": {\n          \"details\": \"\",\n          \"reason\": \"{{oneOf (array 'REASON_UNSPECIFIED' 'AUTHORIZATION_ISSUE' 'RATE_LIMITED')}}\"\n        },\n        \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'PROVISIONING' 'FAILED' 'ACTIVE')}}\"\n      },\n      \"name\": \"\",\n      \"pemCertificate\": \"\",\n      \"sanDnsnames\": [\n        \"\"\n      ],\n      \"scope\": \"{{oneOf (array 'DEFAULT' 'EDGE_CACHE')}}\",\n      \"selfManaged\": {\n        \"pemCertificate\": \"\",\n        \"pemPrivateKey\": \"\"\n      },\n      \"updateTime\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\",\n  \"unreachable\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3f136bc1-244a-44a4-9eb1-acd47fec64cd",
      "documentation": "Creates a new Certificate in a given project and location.",
      "method": "post",
      "endpoint": "v1/:parent/certificates",
      "responses": [
        {
          "uuid": "693793c6-86f2-422a-8c8c-c32b955374eb",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6ed3e6fc-8538-48d5-ab9c-b7b969e44edf",
      "documentation": "Lists DnsAuthorizations in a given project and location.",
      "method": "get",
      "endpoint": "v1/:parent/dnsAuthorizations",
      "responses": [
        {
          "uuid": "f4ac3842-5482-48d6-a7f7-7301adb63e60",
          "body": "{\n  \"dnsAuthorizations\": [\n    {\n      \"createTime\": \"\",\n      \"description\": \"\",\n      \"dnsResourceRecord\": {\n        \"data\": \"\",\n        \"name\": \"\",\n        \"type\": \"\"\n      },\n      \"domain\": \"\",\n      \"labels\": {},\n      \"name\": \"\",\n      \"updateTime\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\",\n  \"unreachable\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "04f84787-cf5a-46d8-998f-c8a2b7fdd565",
      "documentation": "Creates a new DnsAuthorization in a given project and location.",
      "method": "post",
      "endpoint": "v1/:parent/dnsAuthorizations",
      "responses": [
        {
          "uuid": "ffea418a-5c63-4b5c-a15b-6eff2c9308f8",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}