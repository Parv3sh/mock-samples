{
  "uuid": "43cfa831-d2a5-4ca6-8025-59285b18b76f",
  "lastMigration": 19,
  "name": "Access Context Manager API",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "908d5007-f6e2-4758-b2b6-246afb31c200",
      "documentation": "List all AccessPolicies under a container.",
      "method": "get",
      "endpoint": "v1beta/accessPolicies",
      "responses": [
        {
          "uuid": "97635bf8-c8e3-4c6d-bc2e-284ca999a7f9",
          "body": "{\n  \"accessPolicies\": [\n    {\n      \"name\": \"\",\n      \"parent\": \"\",\n      \"title\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ef48ea40-7991-4d80-b122-83345f932f8d",
      "documentation": "Create an `AccessPolicy`. Fails if this organization already has a `AccessPolicy`. The longrunning Operation will have a successful status once the `AccessPolicy` has propagated to long-lasting storage. Syntactic and basic semantic errors will be returned in `metadata` as a BadRequest proto.",
      "method": "post",
      "endpoint": "v1beta/accessPolicies",
      "responses": [
        {
          "uuid": "5bb030bf-dea0-4c96-8945-bc2b71b3d9f3",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3a4156ed-b6c2-4241-af5f-94e37badc2a4",
      "documentation": "Delete a Service Perimeter by resource name. The longrunning operation from this RPC will have a successful status once the Service Perimeter has been removed from long-lasting storage.",
      "method": "delete",
      "endpoint": "v1beta/:name",
      "responses": [
        {
          "uuid": "f5319879-5c0e-49a5-bc2d-6f91e6820c52",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c5e17352-50b9-47b1-8b3e-6faf74246a5e",
      "documentation": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "method": "get",
      "endpoint": "v1beta/:name",
      "responses": [
        {
          "uuid": "733095b6-a489-4b7f-bd51-2d5071c9f814",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0773bc10-bb4e-4cd5-9c4a-07f1078c6b42",
      "documentation": "Update a Service Perimeter. The longrunning operation from this RPC will have a successful status once the changes to the Service Perimeter have propagated to long-lasting storage. Service Perimeter containing errors will result in an error response for the first error encountered.",
      "method": "patch",
      "endpoint": "v1beta/:name",
      "responses": [
        {
          "uuid": "61840670-b37e-4d3b-a177-b05d72b5d8b9",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "db485b0c-e4f9-49d5-883a-3a2b29eba078",
      "documentation": "List all Access Levels for an access policy.",
      "method": "get",
      "endpoint": "v1beta/:parent/accessLevels",
      "responses": [
        {
          "uuid": "5d2487de-0183-478c-a202-08368768c071",
          "body": "{\n  \"accessLevels\": [\n    {\n      \"basic\": {\n        \"combiningFunction\": \"{{oneOf (array 'AND' 'OR')}}\",\n        \"conditions\": [\n          {\n            \"devicePolicy\": {\n              \"allowedDeviceManagementLevels\": [\n                \"{{oneOf (array 'MANAGEMENT_UNSPECIFIED' 'NONE' 'BASIC' 'COMPLETE')}}\"\n              ],\n              \"allowedEncryptionStatuses\": [\n                \"{{oneOf (array 'ENCRYPTION_UNSPECIFIED' 'ENCRYPTION_UNSUPPORTED' 'UNENCRYPTED' 'ENCRYPTED')}}\"\n              ],\n              \"osConstraints\": [\n                {\n                  \"minimumVersion\": \"\",\n                  \"osType\": \"{{oneOf (array 'OS_UNSPECIFIED' 'DESKTOP_MAC' 'DESKTOP_WINDOWS' 'DESKTOP_LINUX' 'DESKTOP_CHROME_OS' 'ANDROID' 'IOS')}}\",\n                  \"requireVerifiedChromeOs\": {{faker 'random.boolean'}}\n                }\n              ],\n              \"requireAdminApproval\": {{faker 'random.boolean'}},\n              \"requireCorpOwned\": {{faker 'random.boolean'}},\n              \"requireScreenlock\": {{faker 'random.boolean'}}\n            },\n            \"ipSubnetworks\": [\n              \"\"\n            ],\n            \"members\": [\n              \"\"\n            ],\n            \"negate\": {{faker 'random.boolean'}},\n            \"regions\": [\n              \"\"\n            ],\n            \"requiredAccessLevels\": [\n              \"\"\n            ]\n          }\n        ]\n      },\n      \"custom\": {\n        \"expr\": {\n          \"description\": \"\",\n          \"expression\": \"\",\n          \"location\": \"\",\n          \"title\": \"\"\n        }\n      },\n      \"description\": \"\",\n      \"name\": \"\",\n      \"title\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9209f5da-102f-4074-809c-1eac5d79095c",
      "documentation": "Create an Access Level. The longrunning operation from this RPC will have a successful status once the Access Level has propagated to long-lasting storage. Access Levels containing errors will result in an error response for the first error encountered.",
      "method": "post",
      "endpoint": "v1beta/:parent/accessLevels",
      "responses": [
        {
          "uuid": "a6844b56-2567-4bb7-b556-9c6043e39bc3",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8bc855c2-2d33-4eb9-b868-5214eb8b5020",
      "documentation": "List all Service Perimeters for an access policy.",
      "method": "get",
      "endpoint": "v1beta/:parent/servicePerimeters",
      "responses": [
        {
          "uuid": "f092b7dc-68bc-4316-b89c-748cfd85b3f2",
          "body": "{\n  \"nextPageToken\": \"\",\n  \"servicePerimeters\": [\n    {\n      \"description\": \"\",\n      \"name\": \"\",\n      \"perimeterType\": \"{{oneOf (array 'PERIMETER_TYPE_REGULAR' 'PERIMETER_TYPE_BRIDGE')}}\",\n      \"status\": {\n        \"accessLevels\": [\n          \"\"\n        ],\n        \"resources\": [\n          \"\"\n        ],\n        \"restrictedServices\": [\n          \"\"\n        ],\n        \"unrestrictedServices\": [\n          \"\"\n        ],\n        \"vpcAccessibleServices\": {\n          \"allowedServices\": [\n            \"\"\n          ],\n          \"enableRestriction\": {{faker 'random.boolean'}}\n        }\n      },\n      \"title\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "91a161bc-7f94-4dfb-9931-63a9873108cc",
      "documentation": "Create a Service Perimeter. The longrunning operation from this RPC will have a successful status once the Service Perimeter has propagated to long-lasting storage. Service Perimeters containing errors will result in an error response for the first error encountered.",
      "method": "post",
      "endpoint": "v1beta/:parent/servicePerimeters",
      "responses": [
        {
          "uuid": "b3794652-00ba-4957-b5a2-1e0aa2c19e0e",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}