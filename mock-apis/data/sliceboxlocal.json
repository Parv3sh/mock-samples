{
  "uuid": "883c2327-6ee6-4681-b11a-420008a8559e",
  "lastMigration": 19,
  "name": "Slicebox API",
  "endpointPrefix": "api",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "b4f68951-334c-4b0c-93f3-a42d551f5da2",
      "documentation": "anonymize the images corresponding to the supplied list of image IDs (each paired with a list of DICOM tag translation). This route corresponds to repeated use of the route /images/{id}/anonymize.",
      "method": "post",
      "endpoint": "anonymization/anonymize",
      "responses": [
        {
          "uuid": "c162c600-2f40-42cb-9f56-407cc0803b07",
          "body": "[\n  {\n    \"id\": {{faker 'random.number'}},\n    \"imageType\": {\n      \"value\": \"\"\n    },\n    \"instanceNumber\": {\n      \"value\": \"\"\n    },\n    \"seriesId\": {{faker 'random.number'}},\n    \"sopInstanceUID\": {\n      \"value\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "the list of newly created anonymous images",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ed74a753-7586-4640-b2ec-3133ba1e9f2a",
      "documentation": "get a list of anonymization keys, each specifying how vital DICOM attributes have been anonymized for a particular image",
      "method": "get",
      "endpoint": "anonymization/keys",
      "responses": [
        {
          "uuid": "eb13dd70-0a5f-474c-9f9e-73e60c20de6f",
          "body": "[\n  {\n    \"anonPatientID\": \"\",\n    \"anonPatientName\": \"\",\n    \"anonSOPInstanceUID\": \"\",\n    \"anonSeriesInstanceUID\": \"\",\n    \"anonStudyInstanceUID\": \"\",\n    \"created\": {{faker 'random.number'}},\n    \"id\": {{faker 'random.number'}},\n    \"imageId\": {{faker 'random.number'}},\n    \"patientID\": \"\",\n    \"patientName\": \"\",\n    \"seriesInstanceUID\": \"\",\n    \"sopInstanceUID\": \"\",\n    \"studyInstanceUID\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "anonymization keys, one per DICOM image",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d6f8bfa4-bcb2-40ab-aae9-f0f8ccb87307",
      "documentation": "export all anonymization keys as a csv file",
      "method": "get",
      "endpoint": "anonymization/keys/export/csv",
      "responses": [
        {
          "uuid": "3c7f9dc5-8458-457c-a218-326327c410b8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "all anonymization keys as a csv file",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a72acbe9-dfe9-4677-8e86-b0e5ffdbcc05",
      "documentation": "submit a query for anonymization keys",
      "method": "post",
      "endpoint": "anonymization/keys/query",
      "responses": [
        {
          "uuid": "7ea221ba-b8f1-4b06-9241-64472989466c",
          "body": "[\n  {\n    \"anonPatientID\": \"\",\n    \"anonPatientName\": \"\",\n    \"anonSOPInstanceUID\": \"\",\n    \"anonSeriesInstanceUID\": \"\",\n    \"anonStudyInstanceUID\": \"\",\n    \"created\": {{faker 'random.number'}},\n    \"id\": {{faker 'random.number'}},\n    \"imageId\": {{faker 'random.number'}},\n    \"patientID\": \"\",\n    \"patientName\": \"\",\n    \"seriesInstanceUID\": \"\",\n    \"sopInstanceUID\": \"\",\n    \"studyInstanceUID\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "anonymization keys",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3279f7a6-07ce-4e2d-88fa-e3177f076c7f",
      "documentation": "delete an anonymization key that is no longer of interest",
      "method": "delete",
      "endpoint": "anonymization/keys/:id",
      "responses": [
        {
          "uuid": "d24c1cd3-a269-44fc-81bd-cea12fa751fb",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "anonymization key deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4d09f77d-60c3-4bcb-ba32-439de6b9d21f",
      "documentation": "get the anonymization key with the supplied ID",
      "method": "get",
      "endpoint": "anonymization/keys/:id",
      "responses": [
        {
          "uuid": "0640fea5-81a4-40e4-9a8b-e502a3418bd0",
          "body": "{\n  \"anonPatientID\": \"\",\n  \"anonPatientName\": \"\",\n  \"anonSOPInstanceUID\": \"\",\n  \"anonSeriesInstanceUID\": \"\",\n  \"anonStudyInstanceUID\": \"\",\n  \"created\": {{faker 'random.number'}},\n  \"id\": {{faker 'random.number'}},\n  \"imageId\": {{faker 'random.number'}},\n  \"patientID\": \"\",\n  \"patientName\": \"\",\n  \"seriesInstanceUID\": \"\",\n  \"sopInstanceUID\": \"\",\n  \"studyInstanceUID\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "anonymization key for the supplied ID",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cd5bc9d1-0616-4d7e-9fb3-ab99c61eebdf",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "if no anonymization key could be found for the supplied ID",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9b5b4c96-fe18-4114-beda-603800952f67",
      "documentation": "get pointers to the images corresponding to the anonymization key with the supplied ID",
      "method": "get",
      "endpoint": "anonymization/keys/:id/keyvalues",
      "responses": [
        {
          "uuid": "afda7e03-282c-483d-8148-b934fc984fd9",
          "body": "[\n  \"\"\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "an array of anonymization key-value pairs corresponding to the anonymization key for the supplied ID",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c7c5477c-2034-4d23-b4d8-70782d47a2dc",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "if no anonymization key could be found for the supplied ID",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1f3aad33-254c-40f6-8295-1d6770e78f21",
      "documentation": "list all supported anonymization options defining an anonymization profile",
      "method": "get",
      "endpoint": "anonymization/options",
      "responses": [
        {
          "uuid": "e344f2cc-795c-446a-830b-c3064f0009a1",
          "body": "[\n  {\n    \"description\": \"\",\n    \"name\": \"\",\n    \"rank\": {{faker 'random.number'}},\n    \"title\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "supported anonymization options",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5502be2f-0d56-476b-8178-c69e26441d10",
      "documentation": "get a list of box connections",
      "method": "get",
      "endpoint": "boxes",
      "responses": [
        {
          "uuid": "2c571160-6c8e-4c36-bd4a-a5cde3aca9af",
          "body": "[\n  {\n    \"baseUrl\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"name\": \"\",\n    \"online\": {{faker 'random.boolean'}},\n    \"profile\": {\n      \"options\": [\n        {\n          \"description\": \"\",\n          \"name\": \"\",\n          \"rank\": {{faker 'random.number'}},\n          \"title\": \"\"\n        }\n      ]\n    },\n    \"sendMethod\": \"\",\n    \"token\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "box connections",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9dd60fab-3fbb-44be-a373-1f183d455d06",
      "documentation": "connect to another box using a received URL. Used to connect to a public box.",
      "method": "post",
      "endpoint": "boxes/connect",
      "responses": [
        {
          "uuid": "06a87aa0-cd84-42bb-9986-8af6c30b2408",
          "body": "{\n  \"baseUrl\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"name\": \"\",\n  \"online\": {{faker 'random.boolean'}},\n  \"profile\": {\n    \"options\": [\n      {\n        \"description\": \"\",\n        \"name\": \"\",\n        \"rank\": {{faker 'random.number'}},\n        \"title\": \"\"\n      }\n    ]\n  },\n  \"sendMethod\": \"\",\n  \"token\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "connected box",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a5804c1e-4d61-4888-87e5-0956b70e26d3",
      "documentation": "create a new box connection where the supplied entity holds the remote box name. Used by publicly available boxes.",
      "method": "post",
      "endpoint": "boxes/createconnection",
      "responses": [
        {
          "uuid": "1688d948-028b-4938-be17-cadfc417d6b9",
          "body": "{\n  \"baseUrl\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"name\": \"\",\n  \"online\": {{faker 'random.boolean'}},\n  \"profile\": {\n    \"options\": [\n      {\n        \"description\": \"\",\n        \"name\": \"\",\n        \"rank\": {{faker 'random.number'}},\n        \"title\": \"\"\n      }\n    ]\n  },\n  \"sendMethod\": \"\",\n  \"token\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "remote box of the connection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5e35dd37-1f83-464a-a8b6-6af75204a199",
      "documentation": "get incoming transactions (finished, currently receiving, waiting or failed)",
      "method": "get",
      "endpoint": "boxes/incoming",
      "responses": [
        {
          "uuid": "0a3e6fbe-c5af-406d-a5c5-b7e127b2c8dc",
          "body": "[\n  {\n    \"boxId\": {{faker 'random.number'}},\n    \"boxName\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"outgoingTransactionId\": {{faker 'random.number'}},\n    \"receivedImageCount\": {{faker 'random.number'}},\n    \"status\": \"\",\n    \"totalImageCount\": {{faker 'random.number'}},\n    \"updated\": {{faker 'random.number'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "incoming transactions, sorted from most to least recently updated",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cc74212e-47ef-4b24-9a20-b3d44061da8c",
      "documentation": "delete an incoming transaction. If a currently active transaction is deleted, a new transaction with the remainder of the images is created when receiving the next incoming image.",
      "method": "delete",
      "endpoint": "boxes/incoming/:id",
      "responses": [
        {
          "uuid": "86259cd9-3731-4ac0-9355-44ebc060da7c",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "incoming transaction deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "acaa8e9f-e77d-4ee6-b27d-e36f24700a72",
      "documentation": "get the received images corresponding to the incoming transaction with the supplied ID",
      "method": "get",
      "endpoint": "boxes/incoming/:id/images",
      "responses": [
        {
          "uuid": "f9ee939f-d6e4-4769-8bb2-8e80ca9af280",
          "body": "[\n  {\n    \"id\": {{faker 'random.number'}},\n    \"imageType\": {\n      \"value\": \"\"\n    },\n    \"instanceNumber\": {\n      \"value\": \"\"\n    },\n    \"seriesId\": {{faker 'random.number'}},\n    \"sopInstanceUID\": {\n      \"value\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "images received corresponding to the specified incoming transaction",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2566b39e-1ba1-4cc1-9d03-91dba6f1b46a",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "incoming transaction not found (invalid ID)",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "170c0ba7-dc72-44a9-83ee-020075ccde4e",
      "documentation": "get outgoing transactions (finished, currently sending, waiting or failed)",
      "method": "get",
      "endpoint": "boxes/outgoing",
      "responses": [
        {
          "uuid": "2a6d2736-9b82-4b51-99be-65aec69bcdc2",
          "body": "[\n  {\n    \"boxId\": {{faker 'random.number'}},\n    \"boxName\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"profile\": {\n      \"options\": [\n        {\n          \"description\": \"\",\n          \"name\": \"\",\n          \"rank\": {{faker 'random.number'}},\n          \"title\": \"\"\n        }\n      ]\n    },\n    \"sentImageCount\": {{faker 'random.number'}},\n    \"status\": \"\",\n    \"totalImageCount\": {{faker 'random.number'}},\n    \"updated\": {{faker 'random.number'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "outgoing transactions, finished, sending, waiting or failed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1b3e7faa-a005-4b48-bcca-93c39364d6d0",
      "documentation": "delete an outgoing transaction. This will stop ongoing transactions.",
      "method": "delete",
      "endpoint": "boxes/outgoing/:id",
      "responses": [
        {
          "uuid": "69e487eb-6831-4aaa-b2b9-0d21e17b189e",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "outgoing transaction deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a522b4a3-a850-470d-a36c-0da552cef9ba",
      "documentation": "get the sent images corresponding to the outgoing transaction with the supplied ID",
      "method": "get",
      "endpoint": "boxes/outgoing/:id/images",
      "responses": [
        {
          "uuid": "e3d0765f-d533-4958-a224-8cbf8a6dcc0c",
          "body": "[\n  {\n    \"id\": {{faker 'random.number'}},\n    \"imageType\": {\n      \"value\": \"\"\n    },\n    \"instanceNumber\": {\n      \"value\": \"\"\n    },\n    \"seriesId\": {{faker 'random.number'}},\n    \"sopInstanceUID\": {\n      \"value\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "images sent corresponding to the specified outgoing transaction",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f2189934-4b67-4968-bbc4-d4b7e4b0213e",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "outgoing transaction not found (invalid ID)",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fe881b1c-d5c4-4159-b4a6-32b7f292b385",
      "documentation": "Delete the remote box with the supplied ID",
      "method": "delete",
      "endpoint": "boxes/:id",
      "responses": [
        {
          "uuid": "9e54b78e-a693-4a23-b655-a31c30ef331f",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "box deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fc5dc3d2-4062-41ac-a712-30b6d4ad1c37",
      "documentation": "send images corresponding to the supplied image ids to the remote box with the supplied ID",
      "method": "post",
      "endpoint": "boxes/:id/send",
      "responses": [
        {
          "uuid": "1488ceff-bc04-48de-9f20-bbf3d63ae201",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "images sent",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6b68eae5-b424-480b-b0da-016ed0296d6b",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "box not found (invalid ID)",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c651723d-9124-436a-ae59-608bc6f0c6f5",
      "documentation": "Returns a list of currently available destinations. Possible destinations are box - sending data to a remote box, and scu - sending data a receiving SCP.",
      "method": "get",
      "endpoint": "destinations",
      "responses": [
        {
          "uuid": "009d47cc-d448-4bfc-b41c-6357905b3179",
          "body": "[\n  {\n    \"destinationId\": {{faker 'random.number'}},\n    \"destinationName\": \"\",\n    \"destinationType\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "currently available destinations",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "924e1a1a-6b91-4aa6-b972-3ccf7fd727cd",
      "documentation": "get a list of watch directories. Each watch directory and its sub-directories are watched for incoming DICOM files, which are read and imported into slicebox.",
      "method": "get",
      "endpoint": "directorywatches",
      "responses": [
        {
          "uuid": "3afdab05-385a-481b-a072-9ea4c9be6d16",
          "body": "[\n  {\n    \"id\": {{faker 'random.number'}},\n    \"path\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "the list of watched directories",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1249d41b-8898-4b56-a0cf-e20ce5f08930",
      "documentation": "add a new directory to watch for incoming DICOM files",
      "method": "post",
      "endpoint": "directorywatches",
      "responses": [
        {
          "uuid": "0f7e1029-ae32-484a-8d11-d9b468c89063",
          "body": "{\n  \"id\": {{faker 'random.number'}},\n  \"path\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "the directory now being watched",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dfecde1b-1cac-4351-b36d-8ddf191ed7d0",
      "documentation": "stop watching and remove the directory corresponding to the supplied ID",
      "method": "delete",
      "endpoint": "directorywatches/:id",
      "responses": [
        {
          "uuid": "fe912ab6-1b6d-4ec7-8ce4-8e21e1903d62",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "directory watch removed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a98c996c-2f43-4562-9268-a52cdfa0f51c",
      "documentation": "Get a list of source to filter associations.",
      "method": "get",
      "endpoint": "filtering/associations",
      "responses": [
        {
          "uuid": "7f102be3-54a5-4ee9-a764-32ab89154c25",
          "body": "[\n  {\n    \"id\": {{faker 'random.number'}},\n    \"sourceId\": {{faker 'random.number'}},\n    \"sourceType\": \"\",\n    \"tagFilterId\": {{faker 'random.number'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "the list of source <-> filter associations",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "26ddb9fb-6dd4-4d8c-b7fb-7a39f18560ae",
      "documentation": "Inserts or updates a source <-> filter associations. If the specified Source already  has an association this is updated, otherwise a new is inserted.",
      "method": "post",
      "endpoint": "filtering/associations",
      "responses": [
        {
          "uuid": "9fb23337-25d7-4ddd-a69c-e911fe4d5308",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "Upserted source <-> filter association",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d9e7e935-b647-446f-b167-cfe7cb42adc0",
      "documentation": "remove the source <-> filter association corresponding to the supplied ID",
      "method": "delete",
      "endpoint": "filtering/associations/:id",
      "responses": [
        {
          "uuid": "e4759ea8-e3b8-4fd4-bab6-36b08f6f61ab",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "source <-> filter association removed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "81eed8ab-dcf5-4882-848d-35e739032a8c",
      "documentation": "List defined filters",
      "method": "get",
      "endpoint": "filtering/filters",
      "responses": [
        {
          "uuid": "dde115d8-7e23-45b2-a3c9-d0f64d3f609d",
          "body": "[\n  \"\"\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "the list of filters",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bbd2cafd-fa2a-4fff-99c6-64de3c807cf8",
      "documentation": "Inserts or updates a filter. If a filter with same name as supplied filter exists this filter is updated, otherwise a new filter is inserted.",
      "method": "post",
      "endpoint": "filtering/filters",
      "responses": [
        {
          "uuid": "a42bc11b-2ea8-425e-b6cb-b43bf97007a5",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "Filter upserted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0065c257-27d0-4f3e-92e8-4e43271014cd",
      "documentation": "remove the filter corresponding to the supplied ID",
      "method": "delete",
      "endpoint": "filtering/filters/:id",
      "responses": [
        {
          "uuid": "0ec8310c-e303-4738-97d0-41e12f6f1f4e",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Filter removed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1f0fe8fd-36c4-4d21-9533-9d8a4ed9b01c",
      "documentation": "List tagpaths for the selected filter",
      "method": "get",
      "endpoint": "filtering/filters/:id/tagpaths",
      "responses": [
        {
          "uuid": "5caeaaed-dd33-43aa-b62f-3cc93cc2355d",
          "body": "[\n  \"\"\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "the list of tagpaths",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4ef21179-3000-4f3a-b8c5-c480a58ce991",
      "documentation": "add a tagpath to a filter",
      "method": "post",
      "endpoint": "filtering/filters/:id/tagpaths",
      "responses": [
        {
          "uuid": "b2df0090-83e7-4eb0-b12d-d99d4e2dd336",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "TagPath added",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ebda0a00-4863-4b4a-9d29-416d4146ec9f",
      "documentation": "remove the tagpath corresponding to the supplied ID",
      "method": "delete",
      "endpoint": "filtering/filters/:id/tagpaths/:tagpathid",
      "responses": [
        {
          "uuid": "e9f2e78c-676b-4f80-892a-1177b5ac2f7a",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "TagPath removed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "428678d1-4268-47c9-97d1-33c3ca79bd35",
      "documentation": "remove the forwarding rule corresponding to the supplied ID",
      "method": "delete",
      "endpoint": "forwarding/rule/:id",
      "responses": [
        {
          "uuid": "23dfbba5-c541-4213-a1be-5f02c86d1c8e",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "forwarding rule removed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e44cac1f-8aa8-44be-b351-cb4ee11c9f5b",
      "documentation": "get a list of all forwarding rules. A forwarding rule specifies the automatic forwarding of images from a source (SCP, BOX, etc.) to a destimation (BOX, SCU, etc.)",
      "method": "get",
      "endpoint": "forwarding/rules",
      "responses": [
        {
          "uuid": "9136c244-723e-41e0-aff8-d978f94a9f6b",
          "body": "[\n  {\n    \"destination\": {\n      \"destinationId\": {{faker 'random.number'}},\n      \"destinationName\": \"\",\n      \"destinationType\": \"\"\n    },\n    \"id\": {{faker 'random.number'}},\n    \"keepImages\": {{faker 'random.boolean'}},\n    \"source\": {\n      \"sourceId\": {{faker 'random.number'}},\n      \"sourceName\": \"\",\n      \"sourceType\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "the list of forwarding rules",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "45d68d93-8790-4582-80ae-c19ec36b25eb",
      "documentation": "add a new forwarding rule",
      "method": "post",
      "endpoint": "forwarding/rules",
      "responses": [
        {
          "uuid": "160d9d10-fa6a-44e6-9dae-d3752688bf73",
          "body": "{\n  \"destination\": {\n    \"destinationId\": {{faker 'random.number'}},\n    \"destinationName\": \"\",\n    \"destinationType\": \"\"\n  },\n  \"id\": {{faker 'random.number'}},\n  \"keepImages\": {{faker 'random.boolean'}},\n  \"source\": {\n    \"sourceId\": {{faker 'random.number'}},\n    \"sourceName\": \"\",\n    \"sourceType\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "the created forwarding rule",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1847ed7e-39e5-4a27-b4b4-ec15595f560d",
      "documentation": "add a DICOM dataset to slicebox",
      "method": "post",
      "endpoint": "images",
      "responses": [
        {
          "uuid": "3f35f581-cf86-4edf-a766-f6ad8b9efd16",
          "body": "{\n  \"id\": {{faker 'random.number'}},\n  \"imageType\": {\n    \"value\": \"\"\n  },\n  \"instanceNumber\": {\n    \"value\": \"\"\n  },\n  \"seriesId\": {{faker 'random.number'}},\n  \"sopInstanceUID\": {\n    \"value\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "meta data for added dataset on the image level of the DICOM hierarchy. Status code 200 signifies that this image was already present in the slicebox database.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "70d45a40-6177-421b-88ea-30c437570706",
          "body": "{\n  \"id\": {{faker 'random.number'}},\n  \"imageType\": {\n    \"value\": \"\"\n  },\n  \"instanceNumber\": {\n    \"value\": \"\"\n  },\n  \"seriesId\": {{faker 'random.number'}},\n  \"sopInstanceUID\": {\n    \"value\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "meta data for added dataset on the image level of the DICOM hierarchy",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d7e5d81f-16d8-4b56-ad69-3229ed1a8b2e",
      "documentation": "bulk delete a sequence of images according to the supplied image IDs. This is the same as a sequence of DELETE requests to /images/{id}",
      "method": "post",
      "endpoint": "images/delete",
      "responses": [
        {
          "uuid": "1a5b56c7-9870-407b-a7e9-84d827b40937",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Images deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "222ab491-99dc-4957-85b6-9fbf677bceb7",
      "documentation": "download the export set with the supplied export set ID as a zip archive",
      "method": "get",
      "endpoint": "images/export",
      "responses": [
        {
          "uuid": "1a701286-a0d4-4043-a786-5e47d0d6a4a6",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "zip archive of images",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/zip"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "52725d63-71c0-4188-a6c3-8eadea26258d",
      "documentation": "create an export set, a group of image IDs of images to export. The export set will contain the selected images. The export set is available for download 12 hours before it is automatically deleted.",
      "method": "post",
      "endpoint": "images/export",
      "responses": [
        {
          "uuid": "d752a228-2bfd-4085-9105-a852f5dcbf83",
          "body": "{\n  \"value\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ID of created export set. To be used with the associated GET method for downloading.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a8b8a665-7528-4871-b14c-82e9e03b7f9f",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "if the supplied list of image ids is empty or no if images could be found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "386c71f9-11a6-44c4-9087-634ddb473a28",
      "documentation": "add a JPEG image to slicebox. The image data will be wrapped in a DICOM file and added as a new series belonging to the study with the supplied ID",
      "method": "post",
      "endpoint": "images/jpeg",
      "responses": [
        {
          "uuid": "12bb3a5f-77d5-427a-949c-08560ef1e4b2",
          "body": "{\n  \"id\": {{faker 'random.number'}},\n  \"imageType\": {\n    \"value\": \"\"\n  },\n  \"instanceNumber\": {\n    \"value\": \"\"\n  },\n  \"seriesId\": {{faker 'random.number'}},\n  \"sopInstanceUID\": {\n    \"value\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "meta data for added dataset on the image level of the DICOM hierarchy",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5e1390a9-2391-4c3a-aae7-9a48c82a1099",
      "documentation": "Delete the image with the supplied ID",
      "method": "delete",
      "endpoint": "images/:id",
      "responses": [
        {
          "uuid": "d059c78f-3409-4839-9659-6bdf6228d90d",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "image deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9d618b8b-01fc-47df-a263-8c17e7d25ce4",
      "documentation": "fetch dataset corresponding to the supplied image ID",
      "method": "get",
      "endpoint": "images/:id",
      "responses": [
        {
          "uuid": "30085c9b-ce91-423e-8e27-67020e1a340b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "binary data of dataset",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/octet-stream"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6c0e07f2-8468-49f3-9655-73527754b275",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "if no image was found for the supplied image ID",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/octet-stream"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2da9a4af-553c-438f-979c-e84ac467ee55",
      "documentation": "delete the selected image and replace it with an anonymized version",
      "method": "put",
      "endpoint": "images/:id/anonymize",
      "responses": [
        {
          "uuid": "c7352a08-5401-4b01-8653-6eda20822210",
          "body": "{\n  \"id\": {{faker 'random.number'}},\n  \"imageType\": {\n    \"value\": \"\"\n  },\n  \"instanceNumber\": {\n    \"value\": \"\"\n  },\n  \"seriesId\": {{faker 'random.number'}},\n  \"sopInstanceUID\": {\n    \"value\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "the newly created anonymous image",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "45e92790-7d4e-4d71-a3ce-bf0abc085052",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "image or corresponding dataset not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "44fd80ca-e50f-416c-b6f6-89786023be50",
      "documentation": "get an anonymized version of the image with the supplied ID",
      "method": "post",
      "endpoint": "images/:id/anonymized",
      "responses": [
        {
          "uuid": "1490a0ce-84f6-47c9-af97-5360f4ce22d6",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "binary data of anonymized dataset",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4368ea4b-33d1-4006-b8cc-4255f83dfd9b",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "if no image was found for the supplied image ID",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4b1b578b-42e6-40d4-8bbd-7e5dcaf620ab",
      "documentation": "list all DICOM attributes of the dataset corresponding to the supplied image ID",
      "method": "get",
      "endpoint": "images/:id/attributes",
      "responses": [
        {
          "uuid": "694a5b2e-7105-486b-aaef-e070b63f12bb",
          "body": "[\n  {\n    \"depth\": {{faker 'random.number'}},\n    \"element\": \"\",\n    \"group\": \"\",\n    \"length\": {{faker 'random.number'}},\n    \"multiplicity\": {{faker 'random.number'}},\n    \"name\": \"\",\n    \"path\": \"\",\n    \"value\": \"\",\n    \"vr\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "list of DICOM attributes",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3a3151f1-2711-4237-a6b1-82da33404f08",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "if no image was found for the supplied image ID",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f090e497-636d-4c6b-ad6e-2c067d202777",
      "documentation": "get basic information about the pixel data of an image",
      "method": "get",
      "endpoint": "images/:id/imageinformation",
      "responses": [
        {
          "uuid": "640a28b1-a2fa-4b8c-9fb3-577b747c19f2",
          "body": "{\n  \"frameIndex\": {{faker 'random.number'}},\n  \"maximumPixelValue\": {{faker 'random.number'}},\n  \"minimumPixelValue\": {{faker 'random.number'}},\n  \"numberOfFrames\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "basic information about the pixeldata of an image",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d664ffd3-94c1-44ca-ac42-ddcb8642c379",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "if no image was found for the supplied image ID",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bf883ab2-b619-474f-a20e-683da7c7d75e",
      "documentation": "modify and/or insert image attributes according to the input tagpath-value mappings",
      "method": "put",
      "endpoint": "images/:id/modify",
      "responses": [
        {
          "uuid": "ff0169fb-0183-440f-ad74-11e5309d9822",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "image attributes successfully modified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fb4f4296-8846-4065-ad97-cd2f9b5aa351",
      "documentation": "get a PNG image representation of the image corresponding to the supplied ID",
      "method": "get",
      "endpoint": "images/:id/png",
      "responses": [
        {
          "uuid": "94f89ed3-b5d3-40b5-b699-241e866f0862",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "image data",
          "headers": [
            {
              "key": "Content-Type",
              "value": "image/png"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d2906e89-6c32-4e75-b060-cc8dfe8d64f0",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "if no image was found for the supplied image ID",
          "headers": [
            {
              "key": "Content-Type",
              "value": "image/png"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8d0ac68b-060d-4104-a804-5b70bd86cc64",
          "body": "",
          "latency": 0,
          "statusCode": 501,
          "label": "if the system is not capable of creating an image representation of the data",
          "headers": [
            {
              "key": "Content-Type",
              "value": "image/png"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5cc7213d-d1ba-4c2b-9da5-f1f0b8b9baa6",
      "documentation": "Returns a list of available import sessions.",
      "method": "get",
      "endpoint": "import/sessions",
      "responses": [
        {
          "uuid": "96d782b4-3837-4768-91eb-824299821f00",
          "body": "[\n  {\n    \"created\": {{faker 'random.number'}},\n    \"filesAdded\": {{faker 'random.number'}},\n    \"filesImported\": {{faker 'random.number'}},\n    \"filesRejected\": {{faker 'random.number'}},\n    \"id\": {{faker 'random.number'}},\n    \"lastUpdated\": {{faker 'random.number'}},\n    \"name\": \"\",\n    \"user\": \"\",\n    \"userId\": {{faker 'random.number'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "available import sessions",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9cd51cda-a063-4119-aa5c-b97a19851c97",
      "documentation": "create a new import sessions",
      "method": "post",
      "endpoint": "import/sessions",
      "responses": [
        {
          "uuid": "563636c6-131f-4de2-90d4-bc927ba17491",
          "body": "{\n  \"created\": {{faker 'random.number'}},\n  \"filesAdded\": {{faker 'random.number'}},\n  \"filesImported\": {{faker 'random.number'}},\n  \"filesRejected\": {{faker 'random.number'}},\n  \"id\": {{faker 'random.number'}},\n  \"lastUpdated\": {{faker 'random.number'}},\n  \"name\": \"\",\n  \"user\": \"\",\n  \"userId\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "the created import session",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2d4b1b3f-b3b3-4eee-a48e-afc1ec6b2947",
      "documentation": "deletes the import session with the supplied ID",
      "method": "delete",
      "endpoint": "import/sessions/:id",
      "responses": [
        {
          "uuid": "9776716d-7236-4298-99be-abdfc5ed574f",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "import session deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7766c31d-1d43-4f0d-b89d-1f254179d183",
      "documentation": "Returns the import sessions with the supplied ID",
      "method": "get",
      "endpoint": "import/sessions/:id",
      "responses": [
        {
          "uuid": "bfb59ce2-f7ad-49ed-b3db-455e85c5d782",
          "body": "{\n  \"created\": {{faker 'random.number'}},\n  \"filesAdded\": {{faker 'random.number'}},\n  \"filesImported\": {{faker 'random.number'}},\n  \"filesRejected\": {{faker 'random.number'}},\n  \"id\": {{faker 'random.number'}},\n  \"lastUpdated\": {{faker 'random.number'}},\n  \"name\": \"\",\n  \"user\": \"\",\n  \"userId\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "the import session with the supplied ID",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7c111554-2055-425a-92a8-b9d3694f6569",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "import session not found (invalid ID)",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0556a215-7793-4718-89b7-51cc1f7b14d0",
      "documentation": "get the imported images corresponding to the import session with the supplied ID",
      "method": "get",
      "endpoint": "import/sessions/:id/images",
      "responses": [
        {
          "uuid": "639bac0a-4e01-442f-91e3-52b0ad4947ce",
          "body": "[\n  {\n    \"id\": {{faker 'random.number'}},\n    \"imageType\": {\n      \"value\": \"\"\n    },\n    \"instanceNumber\": {\n      \"value\": \"\"\n    },\n    \"seriesId\": {{faker 'random.number'}},\n    \"sopInstanceUID\": {\n      \"value\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "images corresponding to the specified import session",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "686bf1d8-3242-4968-bfe4-b20c8108f480",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "import session not found (invalid ID)",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "68508c77-3a59-4fa3-bd6e-bae5268848b3",
      "documentation": "add a DICOM dataset to the import session with the supplied ID",
      "method": "post",
      "endpoint": "import/sessions/:id/images",
      "responses": [
        {
          "uuid": "2be090ee-42ed-4c3a-90ce-aa891d8c2417",
          "body": "{\n  \"id\": {{faker 'random.number'}},\n  \"imageType\": {\n    \"value\": \"\"\n  },\n  \"instanceNumber\": {\n    \"value\": \"\"\n  },\n  \"seriesId\": {{faker 'random.number'}},\n  \"sopInstanceUID\": {\n    \"value\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "meta data for the imported dataset on the image level of the DICOM hierarchy. Status code 200 signifies that this image was already present in the slicebox database.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "67f554a7-a8eb-4297-93fe-d5bd0b80fb91",
          "body": "{\n  \"id\": {{faker 'random.number'}},\n  \"imageType\": {\n    \"value\": \"\"\n  },\n  \"instanceNumber\": {\n    \"value\": \"\"\n  },\n  \"seriesId\": {{faker 'random.number'}},\n  \"sopInstanceUID\": {\n    \"value\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "meta data for the imported dataset on the image level of the DICOM hierarchy",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a7089e0e-ace6-4f91-9541-52f357e630ef",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "import session not found (invalid ID)",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1a434d28-4af2-42e5-a9a6-f9c1a7c955b5",
      "documentation": "delete all log messages",
      "method": "delete",
      "endpoint": "log",
      "responses": [
        {
          "uuid": "c0e0a064-cd17-47b7-b939-5017346deb45",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "log messages successfully",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6941f2d3-b7a1-4c05-aaef-893c1dcf3e65",
      "documentation": "get a list of slicebox log messages",
      "method": "get",
      "endpoint": "log",
      "responses": [
        {
          "uuid": "ef20fa48-e97d-4c7b-91a6-ce01473afa33",
          "body": "[\n  {\n    \"created\": {{faker 'random.number'}},\n    \"entryType\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"message\": \"\",\n    \"subject\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "log messages",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1db7eb44-1c66-4a63-9d92-a7788f91c891",
      "documentation": "Delete the log entry with the supplied ID",
      "method": "delete",
      "endpoint": "log/:id",
      "responses": [
        {
          "uuid": "e64bc0d5-527a-40de-ba92-ffab5eb5afcc",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "log entry deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "769b79ca-5652-4b35-8520-ba9dbdfb09a2",
      "documentation": "Returns a list of flattened metadata on the patient, study and series levels",
      "method": "get",
      "endpoint": "metadata/flatseries",
      "responses": [
        {
          "uuid": "9b147285-4e4b-40d7-9f1a-543465c73078",
          "body": "[\n  {\n    \"id\": {{faker 'random.number'}},\n    \"patient\": {\n      \"id\": {{faker 'random.number'}},\n      \"patientBirthDate\": {\n        \"value\": \"\"\n      },\n      \"patientID\": {\n        \"value\": \"\"\n      },\n      \"patientName\": {\n        \"value\": \"\"\n      },\n      \"patientSex\": {\n        \"value\": \"\"\n      }\n    },\n    \"series\": {\n      \"bodyPartExamined\": {\n        \"value\": \"\"\n      },\n      \"frameOfReferenceUID\": {\n        \"value\": \"\"\n      },\n      \"id\": {{faker 'random.number'}},\n      \"manufacturer\": {\n        \"value\": \"\"\n      },\n      \"modality\": {\n        \"value\": \"\"\n      },\n      \"protocolName\": {\n        \"value\": \"\"\n      },\n      \"seriesDate\": {\n        \"value\": \"\"\n      },\n      \"seriesDescription\": {\n        \"value\": \"\"\n      },\n      \"seriesInstanceUID\": {\n        \"value\": \"\"\n      },\n      \"stationName\": {\n        \"value\": \"\"\n      },\n      \"studyId\": {{faker 'random.number'}}\n    },\n    \"study\": {\n      \"accessionNumber\": {\n        \"value\": \"\"\n      },\n      \"id\": {{faker 'random.number'}},\n      \"patientAge\": {\n        \"value\": \"\"\n      },\n      \"patientId\": {{faker 'random.number'}},\n      \"studyDate\": {\n        \"value\": \"\"\n      },\n      \"studyDescription\": {\n        \"value\": \"\"\n      },\n      \"studyID\": {\n        \"value\": \"\"\n      },\n      \"studyInstanceUID\": {\n        \"value\": \"\"\n      }\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "flat series",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "28af272c-38d3-43e2-ac1d-2aa96cec657c",
      "documentation": "submit a query for flat series",
      "method": "post",
      "endpoint": "metadata/flatseries/query",
      "responses": [
        {
          "uuid": "d81af844-2628-4aa9-aece-c69a5e94dcd3",
          "body": "[\n  {\n    \"id\": {{faker 'random.number'}},\n    \"patient\": {\n      \"id\": {{faker 'random.number'}},\n      \"patientBirthDate\": {\n        \"value\": \"\"\n      },\n      \"patientID\": {\n        \"value\": \"\"\n      },\n      \"patientName\": {\n        \"value\": \"\"\n      },\n      \"patientSex\": {\n        \"value\": \"\"\n      }\n    },\n    \"series\": {\n      \"bodyPartExamined\": {\n        \"value\": \"\"\n      },\n      \"frameOfReferenceUID\": {\n        \"value\": \"\"\n      },\n      \"id\": {{faker 'random.number'}},\n      \"manufacturer\": {\n        \"value\": \"\"\n      },\n      \"modality\": {\n        \"value\": \"\"\n      },\n      \"protocolName\": {\n        \"value\": \"\"\n      },\n      \"seriesDate\": {\n        \"value\": \"\"\n      },\n      \"seriesDescription\": {\n        \"value\": \"\"\n      },\n      \"seriesInstanceUID\": {\n        \"value\": \"\"\n      },\n      \"stationName\": {\n        \"value\": \"\"\n      },\n      \"studyId\": {{faker 'random.number'}}\n    },\n    \"study\": {\n      \"accessionNumber\": {\n        \"value\": \"\"\n      },\n      \"id\": {{faker 'random.number'}},\n      \"patientAge\": {\n        \"value\": \"\"\n      },\n      \"patientId\": {{faker 'random.number'}},\n      \"studyDate\": {\n        \"value\": \"\"\n      },\n      \"studyDescription\": {\n        \"value\": \"\"\n      },\n      \"studyID\": {\n        \"value\": \"\"\n      },\n      \"studyInstanceUID\": {\n        \"value\": \"\"\n      }\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "flat series",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fe2ad2a4-afdc-4d45-8a45-055e0fab3265",
      "documentation": "Return the flat series with the supplied ID",
      "method": "get",
      "endpoint": "metadata/flatseries/:id",
      "responses": [
        {
          "uuid": "1a5bf4e1-9e90-4a0b-8d0d-af9554eb7489",
          "body": "{\n  \"id\": {{faker 'random.number'}},\n  \"patient\": {\n    \"id\": {{faker 'random.number'}},\n    \"patientBirthDate\": {\n      \"value\": \"\"\n    },\n    \"patientID\": {\n      \"value\": \"\"\n    },\n    \"patientName\": {\n      \"value\": \"\"\n    },\n    \"patientSex\": {\n      \"value\": \"\"\n    }\n  },\n  \"series\": {\n    \"bodyPartExamined\": {\n      \"value\": \"\"\n    },\n    \"frameOfReferenceUID\": {\n      \"value\": \"\"\n    },\n    \"id\": {{faker 'random.number'}},\n    \"manufacturer\": {\n      \"value\": \"\"\n    },\n    \"modality\": {\n      \"value\": \"\"\n    },\n    \"protocolName\": {\n      \"value\": \"\"\n    },\n    \"seriesDate\": {\n      \"value\": \"\"\n    },\n    \"seriesDescription\": {\n      \"value\": \"\"\n    },\n    \"seriesInstanceUID\": {\n      \"value\": \"\"\n    },\n    \"stationName\": {\n      \"value\": \"\"\n    },\n    \"studyId\": {{faker 'random.number'}}\n  },\n  \"study\": {\n    \"accessionNumber\": {\n      \"value\": \"\"\n    },\n    \"id\": {{faker 'random.number'}},\n    \"patientAge\": {\n      \"value\": \"\"\n    },\n    \"patientId\": {{faker 'random.number'}},\n    \"studyDate\": {\n      \"value\": \"\"\n    },\n    \"studyDescription\": {\n      \"value\": \"\"\n    },\n    \"studyID\": {\n      \"value\": \"\"\n    },\n    \"studyInstanceUID\": {\n      \"value\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "flat series response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1775d71d-e275-4d93-9b2c-7e233c30496e",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "flat series not found (invalid ID)",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "79db6167-2ef3-4796-9823-abeb56b49576",
      "documentation": "Returns a list of metadata on the image level of the DICOM hierarchy",
      "method": "get",
      "endpoint": "metadata/images",
      "responses": [
        {
          "uuid": "36e1c91d-865d-4325-ad0f-86cf47dffdb2",
          "body": "[\n  {\n    \"id\": {{faker 'random.number'}},\n    \"imageType\": {\n      \"value\": \"\"\n    },\n    \"instanceNumber\": {\n      \"value\": \"\"\n    },\n    \"seriesId\": {{faker 'random.number'}},\n    \"sopInstanceUID\": {\n      \"value\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "images",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "47a8344e-f120-4a3d-8ecb-e46ab0c91b4a",
      "documentation": "submit a query for images",
      "method": "post",
      "endpoint": "metadata/images/query",
      "responses": [
        {
          "uuid": "d59b5138-2fc2-4383-9583-269e5cad9b84",
          "body": "[\n  {\n    \"id\": {{faker 'random.number'}},\n    \"imageType\": {\n      \"value\": \"\"\n    },\n    \"instanceNumber\": {\n      \"value\": \"\"\n    },\n    \"seriesId\": {{faker 'random.number'}},\n    \"sopInstanceUID\": {\n      \"value\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "images",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1d2981e5-70e2-453a-b010-7ef7f9fb8f9e",
      "documentation": "Return the image with the supplied ID",
      "method": "get",
      "endpoint": "metadata/images/:id",
      "responses": [
        {
          "uuid": "97b3f34f-d365-47c3-a819-3bede66fa426",
          "body": "{\n  \"id\": {{faker 'random.number'}},\n  \"imageType\": {\n    \"value\": \"\"\n  },\n  \"instanceNumber\": {\n    \"value\": \"\"\n  },\n  \"seriesId\": {{faker 'random.number'}},\n  \"sopInstanceUID\": {\n    \"value\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "image response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "403677f8-7979-4a7f-b1bb-fb8a18274285",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "image not found (invalid ID)",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "12e33e71-4bef-46fc-988c-4cfdfbf193b3",
      "documentation": "Returns a list of metadata on the patient level of the DICOM hierarchy",
      "method": "get",
      "endpoint": "metadata/patients",
      "responses": [
        {
          "uuid": "8bd214ad-01f1-439c-884a-e04b7d983040",
          "body": "[\n  {\n    \"id\": {{faker 'random.number'}},\n    \"patientBirthDate\": {\n      \"value\": \"\"\n    },\n    \"patientID\": {\n      \"value\": \"\"\n    },\n    \"patientName\": {\n      \"value\": \"\"\n    },\n    \"patientSex\": {\n      \"value\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "patients",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7fc44d2e-cdd4-4e20-b64b-06969a000bdf",
      "documentation": "submit a query for patients",
      "method": "post",
      "endpoint": "metadata/patients/query",
      "responses": [
        {
          "uuid": "ff5ed2c0-044c-4591-8142-bd8ad67e1488",
          "body": "[\n  {\n    \"id\": {{faker 'random.number'}},\n    \"patientBirthDate\": {\n      \"value\": \"\"\n    },\n    \"patientID\": {\n      \"value\": \"\"\n    },\n    \"patientName\": {\n      \"value\": \"\"\n    },\n    \"patientSex\": {\n      \"value\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "patients",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e6e4c314-bf76-4404-9955-ad09b47b757d",
      "documentation": "Return the patient with the supplied ID",
      "method": "get",
      "endpoint": "metadata/patients/:id",
      "responses": [
        {
          "uuid": "4c430f2b-fc53-4de3-aec9-75e6317008b0",
          "body": "{\n  \"id\": {{faker 'random.number'}},\n  \"patientBirthDate\": {\n    \"value\": \"\"\n  },\n  \"patientID\": {\n    \"value\": \"\"\n  },\n  \"patientName\": {\n    \"value\": \"\"\n  },\n  \"patientSex\": {\n    \"value\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "patient response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "45b8ee24-7ad8-4123-8861-74a56d9dfcac",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "patient not found (invalid ID)",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0ad69d13-ebce-4416-8d80-386966ec65d7",
      "documentation": "Returns all images for the patient with the supplied patient ID",
      "method": "get",
      "endpoint": "metadata/patients/:id/images",
      "responses": [
        {
          "uuid": "7f9195de-507b-4dad-852f-aace54fa4ed9",
          "body": "[\n  {\n    \"id\": {{faker 'random.number'}},\n    \"imageType\": {\n      \"value\": \"\"\n    },\n    \"instanceNumber\": {\n      \"value\": \"\"\n    },\n    \"seriesId\": {{faker 'random.number'}},\n    \"sopInstanceUID\": {\n      \"value\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "list of images",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4b39a2da-d4ff-4706-8667-3d5414d3dcec",
      "documentation": "Returns a list of metadata on the series level of the DICOM hierarchy",
      "method": "get",
      "endpoint": "metadata/series",
      "responses": [
        {
          "uuid": "f7245795-4be6-4249-aab3-93a3d9665960",
          "body": "[\n  {\n    \"bodyPartExamined\": {\n      \"value\": \"\"\n    },\n    \"frameOfReferenceUID\": {\n      \"value\": \"\"\n    },\n    \"id\": {{faker 'random.number'}},\n    \"manufacturer\": {\n      \"value\": \"\"\n    },\n    \"modality\": {\n      \"value\": \"\"\n    },\n    \"protocolName\": {\n      \"value\": \"\"\n    },\n    \"seriesDate\": {\n      \"value\": \"\"\n    },\n    \"seriesDescription\": {\n      \"value\": \"\"\n    },\n    \"seriesInstanceUID\": {\n      \"value\": \"\"\n    },\n    \"stationName\": {\n      \"value\": \"\"\n    },\n    \"studyId\": {{faker 'random.number'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "series",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a1baa6b7-5fcd-41fd-b1c2-f69c528c85d3",
      "documentation": "submit a query for series",
      "method": "post",
      "endpoint": "metadata/series/query",
      "responses": [
        {
          "uuid": "577790a4-a6b4-4a9c-a7d7-20778056ba38",
          "body": "[\n  {\n    \"bodyPartExamined\": {\n      \"value\": \"\"\n    },\n    \"frameOfReferenceUID\": {\n      \"value\": \"\"\n    },\n    \"id\": {{faker 'random.number'}},\n    \"manufacturer\": {\n      \"value\": \"\"\n    },\n    \"modality\": {\n      \"value\": \"\"\n    },\n    \"protocolName\": {\n      \"value\": \"\"\n    },\n    \"seriesDate\": {\n      \"value\": \"\"\n    },\n    \"seriesDescription\": {\n      \"value\": \"\"\n    },\n    \"seriesInstanceUID\": {\n      \"value\": \"\"\n    },\n    \"stationName\": {\n      \"value\": \"\"\n    },\n    \"studyId\": {{faker 'random.number'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "series",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8ab312b0-f836-4536-8f30-c1bbe130ad79",
      "documentation": "Return the series with the supplied ID",
      "method": "get",
      "endpoint": "metadata/series/:id",
      "responses": [
        {
          "uuid": "b578aa90-5bb7-43ed-92cc-53cfca7c3188",
          "body": "{\n  \"bodyPartExamined\": {\n    \"value\": \"\"\n  },\n  \"frameOfReferenceUID\": {\n    \"value\": \"\"\n  },\n  \"id\": {{faker 'random.number'}},\n  \"manufacturer\": {\n    \"value\": \"\"\n  },\n  \"modality\": {\n    \"value\": \"\"\n  },\n  \"protocolName\": {\n    \"value\": \"\"\n  },\n  \"seriesDate\": {\n    \"value\": \"\"\n  },\n  \"seriesDescription\": {\n    \"value\": \"\"\n  },\n  \"seriesInstanceUID\": {\n    \"value\": \"\"\n  },\n  \"stationName\": {\n    \"value\": \"\"\n  },\n  \"studyId\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "series response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ae69b047-8b02-4ccf-8b3c-2e282bbdb982",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "series not found (invalid ID)",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "84d67399-1a50-42f7-be08-f2a028fa88e2",
      "documentation": "get the list of series tags for the series with the supplied ID.",
      "method": "get",
      "endpoint": "metadata/series/:id/seriestags",
      "responses": [
        {
          "uuid": "e14edfc8-b544-4d83-9590-05c8af98b199",
          "body": "[\n  {\n    \"id\": {{faker 'random.number'}},\n    \"name\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "the list of series tags",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d751ee37-99f3-4215-9be4-37a39d8f90b7",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "series not found (invalid ID)",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "82570ef5-7795-41ca-bdad-22f26524214f",
      "documentation": "add a series tag to the series with the supplied ID",
      "method": "post",
      "endpoint": "metadata/series/:id/seriestags",
      "responses": [
        {
          "uuid": "ce4cfd20-4460-4ba5-8bc7-ba9e63674647",
          "body": "{\n  \"id\": {{faker 'random.number'}},\n  \"name\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "added series tag",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5f225b31-22f0-40af-8ee2-17feeed1d2e6",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "if no series with the supplied ID exists",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "73f61486-01fd-4543-a72d-072c2c09e8e5",
      "documentation": "Delete all series types for the series with the supplied ID",
      "method": "delete",
      "endpoint": "metadata/series/:id/seriestypes",
      "responses": [
        {
          "uuid": "ee3885f9-ba76-479e-aa2b-e2d902601074",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "series types deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b35a9aed-f30d-4c91-bb43-3c28da8f372b",
      "documentation": "get the list of series types for the series with the supplied ID.",
      "method": "get",
      "endpoint": "metadata/series/:id/seriestypes",
      "responses": [
        {
          "uuid": "ae4aeb7e-1411-4cae-a29b-a56fbeb4efd0",
          "body": "[\n  {\n    \"id\": {{faker 'random.number'}},\n    \"name\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "the list of series types",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "09be7d2d-5757-49c6-bcf0-047394a148e7",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "series not found (invalid ID)",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d9644121-794d-4c1e-bbf6-e8d61a2cea2a",
      "documentation": "Return the source of the series with the supplied ID",
      "method": "get",
      "endpoint": "metadata/series/:id/source",
      "responses": [
        {
          "uuid": "e4ae03f7-e5be-4408-9d11-9d39f013dee1",
          "body": "{\n  \"sourceId\": {{faker 'random.number'}},\n  \"sourceName\": \"\",\n  \"sourceType\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "source for series",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "609274d3-ae64-4ce3-ba83-8d098395f352",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "series not found (invalid ID)",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "de383547-db24-4d81-9eb3-4d9f5fafde15",
      "documentation": "Delete the series tag with the supplied series tag ID from the series with the supplied series ID",
      "method": "delete",
      "endpoint": "metadata/series/:seriesId/seriestags/:seriesTagId",
      "responses": [
        {
          "uuid": "f8758410-613d-413a-b9bd-56cb954887d4",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "series tag removed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7e3da72c-2322-4e6c-8dd0-976112736eda",
      "documentation": "Delete the series type with the supplied series type ID from the series with the supplied series ID",
      "method": "delete",
      "endpoint": "metadata/series/:seriesId/seriestypes/:seriesTypeId",
      "responses": [
        {
          "uuid": "18f6354a-cc44-4018-9b57-4a292471908c",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "series type removed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5b6acacf-9a28-4ae2-a43a-ad2476c078b3",
      "documentation": "Add the series type with the supplied series type ID to the series with the supplied series ID",
      "method": "put",
      "endpoint": "metadata/series/:seriesId/seriestypes/:seriesTypeId",
      "responses": [
        {
          "uuid": "cf0c1826-6571-4580-8c45-9fefa28bfac5",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "series type added",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "319b3d3d-3916-4277-9a12-a1484a1425b2",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "no series or series type found for the supplied ID(s)",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6ec5fa9e-393e-43f5-9a02-1c30afc9295d",
      "documentation": "Returns a list of series tags currently currently in use.",
      "method": "get",
      "endpoint": "metadata/seriestags",
      "responses": [
        {
          "uuid": "e0ffe3dd-3366-41d5-a75a-b222a1f5848b",
          "body": "[\n  {\n    \"id\": {{faker 'random.number'}},\n    \"name\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "a list of unique series tags currently used to tag series",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d57041d8-b985-4d72-9e2e-71067c261e40",
      "documentation": "Returns a list of metadata on the study level of the DICOM hierarchy",
      "method": "get",
      "endpoint": "metadata/studies",
      "responses": [
        {
          "uuid": "b35991fd-30d4-45f7-9fd0-e89537f6edbf",
          "body": "[\n  {\n    \"accessionNumber\": {\n      \"value\": \"\"\n    },\n    \"id\": {{faker 'random.number'}},\n    \"patientAge\": {\n      \"value\": \"\"\n    },\n    \"patientId\": {{faker 'random.number'}},\n    \"studyDate\": {\n      \"value\": \"\"\n    },\n    \"studyDescription\": {\n      \"value\": \"\"\n    },\n    \"studyID\": {\n      \"value\": \"\"\n    },\n    \"studyInstanceUID\": {\n      \"value\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "studies",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8225a3ed-a699-4adb-9ade-509c911a5956",
      "documentation": "submit a query for studies",
      "method": "post",
      "endpoint": "metadata/studies/query",
      "responses": [
        {
          "uuid": "87ddafcc-d890-48b5-bc14-2dd60823dfa3",
          "body": "[\n  {\n    \"accessionNumber\": {\n      \"value\": \"\"\n    },\n    \"id\": {{faker 'random.number'}},\n    \"patientAge\": {\n      \"value\": \"\"\n    },\n    \"patientId\": {{faker 'random.number'}},\n    \"studyDate\": {\n      \"value\": \"\"\n    },\n    \"studyDescription\": {\n      \"value\": \"\"\n    },\n    \"studyID\": {\n      \"value\": \"\"\n    },\n    \"studyInstanceUID\": {\n      \"value\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "studies",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f2015ac8-0788-46ee-aa68-ef6dd0aed77f",
      "documentation": "Return the study with the supplied ID",
      "method": "get",
      "endpoint": "metadata/studies/:id",
      "responses": [
        {
          "uuid": "89b093b8-bdfb-40d9-902a-88fc2a69b2b6",
          "body": "{\n  \"accessionNumber\": {\n    \"value\": \"\"\n  },\n  \"id\": {{faker 'random.number'}},\n  \"patientAge\": {\n    \"value\": \"\"\n  },\n  \"patientId\": {{faker 'random.number'}},\n  \"studyDate\": {\n    \"value\": \"\"\n  },\n  \"studyDescription\": {\n    \"value\": \"\"\n  },\n  \"studyID\": {\n    \"value\": \"\"\n  },\n  \"studyInstanceUID\": {\n    \"value\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "study response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b8107662-f471-4a75-becb-bc2d219707db",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "study not found (invalid ID)",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b54bbe98-f247-45b9-b79c-9c9aab5da5f4",
      "documentation": "Returns all images for the study with the supplied study ID",
      "method": "get",
      "endpoint": "metadata/studies/:id/images",
      "responses": [
        {
          "uuid": "50803bc1-4c55-4719-b73f-211d1da76672",
          "body": "[\n  {\n    \"id\": {{faker 'random.number'}},\n    \"imageType\": {\n      \"value\": \"\"\n    },\n    \"instanceNumber\": {\n      \"value\": \"\"\n    },\n    \"seriesId\": {{faker 'random.number'}},\n    \"sopInstanceUID\": {\n      \"value\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "list of images",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fc7cdbf9-eec8-406b-a865-375c864f371e",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "study not found (invalid ID)",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ec77d5f9-e08f-4fda-894f-c28d25239c89",
      "documentation": "get a list of DICOM SCPs. Each SCP is a server for receiving DICOM images from e.g. a PACS system.",
      "method": "get",
      "endpoint": "scps",
      "responses": [
        {
          "uuid": "af57ac99-66e3-4525-bfa1-2061ac10e9bc",
          "body": "[\n  {\n    \"aeTitle\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"name\": \"\",\n    \"port\": {{faker 'random.number'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "the list of SCPs",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "17ba16f4-fba9-46d0-b4aa-8181d5b9eaa9",
      "documentation": "add a new SCP for receiving DICOM images",
      "method": "post",
      "endpoint": "scps",
      "responses": [
        {
          "uuid": "9c78af6f-6905-472c-ae2a-dd657a22fbf8",
          "body": "{\n  \"aeTitle\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"name\": \"\",\n  \"port\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "the created SCP",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e9b9d1ca-08b0-4e2b-b611-50e59b7cafba",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid port number or AE title",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a14d4272-038b-45d6-8832-a23343b395f7",
      "documentation": "shut down and remove the SCP corresponding to the supplied ID",
      "method": "delete",
      "endpoint": "scps/:id",
      "responses": [
        {
          "uuid": "f759b57c-f30e-48e5-b7c6-43783657122d",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "SCP removed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "522107e7-ce9c-4cf4-8ada-ad66e4592c9e",
      "documentation": "get a list of DICOM SCUs. Each SCU is a client for sending DICOM images to an SCP, e.g. a PACS system.",
      "method": "get",
      "endpoint": "scus",
      "responses": [
        {
          "uuid": "a4e609f0-ae65-4662-9551-538c0adc7e35",
          "body": "[\n  {\n    \"aeTitle\": \"\",\n    \"host\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"name\": \"\",\n    \"port\": {{faker 'random.number'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "the list of SCUs",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ad32cbff-e120-4429-b156-b8f399962d03",
      "documentation": "add a new SCU for sending DICOM images",
      "method": "post",
      "endpoint": "scus",
      "responses": [
        {
          "uuid": "eb4618c1-1a3a-420c-91b7-a5adbf1886c7",
          "body": "{\n  \"aeTitle\": \"\",\n  \"host\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"name\": \"\",\n  \"port\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "the created SCU",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "627b2257-47c4-4fe1-b90a-64fff9429eea",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid port number or AE title",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c3c4dcca-9fd0-49bd-8823-f724ced24238",
      "documentation": "remove the SCU corresponding to the supplied ID",
      "method": "delete",
      "endpoint": "scus/:id",
      "responses": [
        {
          "uuid": "dd9c2a0a-f6d3-4ab1-b353-bca0fcfbc0e8",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "SCU removed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "399a217a-a017-4687-b747-d4b3d7dae5da",
      "documentation": "send the images with the supplied image IDs to a DICOM SCP using the the SCU with the supplied scu ID",
      "method": "post",
      "endpoint": "scus/:id/send",
      "responses": [
        {
          "uuid": "82cff5f0-8ce8-4f39-810b-b97ebb8c9733",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Series sent",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b972a1ed-a978-4ba9-a36f-62498ccebd47",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Series not found or SCU not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7dd05a40-e100-4ee7-a0aa-69e4c6d037ff",
          "body": "",
          "latency": 0,
          "statusCode": 502,
          "label": "Receiving SCP host not available",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "52269f21-4483-48ed-aae8-8a58438f4057",
      "documentation": "get a list of all added series types. By filtering search results for certain series types, it is easier for applications to ensure that they read images of applicable types.",
      "method": "get",
      "endpoint": "seriestypes",
      "responses": [
        {
          "uuid": "876f4bce-5156-4f05-920f-e273f1ba5549",
          "body": "[\n  {\n    \"id\": {{faker 'random.number'}},\n    \"name\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "the list of series types",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bdd7b439-9e0f-482a-8816-063149b6f3cf",
      "documentation": "add a new series type",
      "method": "post",
      "endpoint": "seriestypes",
      "responses": [
        {
          "uuid": "8314bab4-6087-4a00-8263-5bd227688574",
          "body": "{\n  \"id\": {{faker 'random.number'}},\n  \"name\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "the created series type",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "62f00b0a-4234-4ce2-b7db-d7676699bbd9",
      "documentation": "get a list of rules for assigning series types to series. A rule connects to a series of attributes with values and a resulting series type. If a series has the required values of the listed attributes, it is assigned to the series type of the rule.",
      "method": "get",
      "endpoint": "seriestypes/rules",
      "responses": [
        {
          "uuid": "236c17e0-f722-4ce1-a0de-65e680f2b258",
          "body": "[\n  {\n    \"id\": {{faker 'random.number'}},\n    \"seriesTypeId\": {{faker 'random.number'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "the list of series type rules for the series type with the supplied ID",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "75cc8d31-f595-4237-9850-e35593c83ad6",
      "documentation": "add a new series type rule",
      "method": "post",
      "endpoint": "seriestypes/rules",
      "responses": [
        {
          "uuid": "15ccf9ed-b3ac-4d4d-bd5f-32dd73362366",
          "body": "{\n  \"id\": {{faker 'random.number'}},\n  \"seriesTypeId\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "the created series type rule",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1d5b70e1-7cce-4d15-9a97-ba52d971cad8",
      "documentation": "get the status of the internal process of updating series types for series following a change of series types, rules or attributes.",
      "method": "get",
      "endpoint": "seriestypes/rules/updatestatus",
      "responses": [
        {
          "uuid": "966f673e-5bdc-4717-96f7-c987b184aa5a",
          "body": "{\n  \"running\": {{faker 'random.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "a status message, indicating if an update is running",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8fc85742-465b-409f-a3fd-4f27cbc632fa",
      "documentation": "remove the series type rule corresponding to the supplied ID",
      "method": "delete",
      "endpoint": "seriestypes/rules/:id",
      "responses": [
        {
          "uuid": "3650d3d5-c279-4343-bf16-e156158bd981",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "series type rule removed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "99d776d0-51b0-4341-940f-b893cec5a74b",
      "documentation": "get the list of attributes for the series type rule with the supplied ID.",
      "method": "get",
      "endpoint": "seriestypes/rules/:id/attributes",
      "responses": [
        {
          "uuid": "a16a10e3-ca0b-4844-a01a-4522ffcf8816",
          "body": "[\n  {\n    \"element\": {{faker 'random.number'}},\n    \"group\": {{faker 'random.number'}},\n    \"id\": {{faker 'random.number'}},\n    \"path\": \"\",\n    \"seriesTypeRuleId\": {{faker 'random.number'}},\n    \"value\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "the list of series type rule attributes for the series type rule with the supplied ID",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "70062f67-c2cc-4350-892d-f04f7ac8f769",
      "documentation": "add a new series type rule attribute",
      "method": "post",
      "endpoint": "seriestypes/rules/:id/attributes",
      "responses": [
        {
          "uuid": "ed6c932f-59ca-4768-a900-ad19ceca6da8",
          "body": "{\n  \"element\": {{faker 'random.number'}},\n  \"group\": {{faker 'random.number'}},\n  \"id\": {{faker 'random.number'}},\n  \"path\": \"\",\n  \"seriesTypeRuleId\": {{faker 'random.number'}},\n  \"value\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "the created series type rule attribute",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "987ae48b-9a8c-444b-8bce-44a4ce96ad4b",
      "documentation": "remove the series type rule attribute corresponding to the supplied series type and attribute IDs",
      "method": "delete",
      "endpoint": "seriestypes/rules/:ruleId/attributes/:attributeId",
      "responses": [
        {
          "uuid": "12414688-e45b-4dfd-b7ba-80a0ce786682",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "series type rule attribute removed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c7abba48-f9e2-4c93-8c42-05124e9f18d8",
      "documentation": "submit a query for seriestypes for a list of series",
      "method": "post",
      "endpoint": "seriestypes/series/query",
      "responses": [
        {
          "uuid": "6bdc26a5-9b48-4595-b5fa-62713e1799d7",
          "body": "{\n  \"seriesidseriestypes\": [\n    {\n      \"seriesid\": {{faker 'random.number'}},\n      \"seriestype\": {\n        \"id\": {{faker 'random.number'}},\n        \"name\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "series",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9a2cd012-293f-42c2-acc6-d01965b97aa8",
      "documentation": "remove the series type corresponding to the supplied ID",
      "method": "delete",
      "endpoint": "seriestypes/:id",
      "responses": [
        {
          "uuid": "91a81408-b6ca-4f1e-aafa-c20cf23b3a07",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "series type removed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a3f4fca5-b04d-49ef-88ae-65ab325a3159",
      "documentation": "request an asynchronous update of all series, labelling appropriate series with the series type corresponding to the supplied ID.",
      "method": "put",
      "endpoint": "seriestypes/:id",
      "responses": [
        {
          "uuid": "5dccc894-fd4c-466c-9cd0-d56150d312af",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "update successfully added to queue of series type updates",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fb64dbf9-1ef3-4aeb-8b68-7049fec99b13",
      "documentation": "Returns a list of currently available data sources. Possible source types are user - data imported by an API call by a user, box - data received from a remote box, directory - data imported via a watched directory, import - data imported into slicebox using import sessions, or scp - data received from a PACS.",
      "method": "get",
      "endpoint": "sources",
      "responses": [
        {
          "uuid": "05d9d2ac-4da0-4061-96da-2fd81a5ffea8",
          "body": "[\n  {\n    \"sourceId\": {{faker 'random.number'}},\n    \"sourceName\": \"\",\n    \"sourceType\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "currently available sources",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fb0abd73-541c-4126-b362-05f43140dd52",
      "documentation": "No-op route for checking whether the service is alive or not",
      "method": "get",
      "endpoint": "system/health",
      "responses": [
        {
          "uuid": "441b405f-7077-41b4-b117-e5fa14f44f13",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The service is up and running",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f71618ad-2f53-4bf5-a47c-2676792c211c",
      "documentation": "stop and shut down slicebox",
      "method": "post",
      "endpoint": "system/stop",
      "responses": [
        {
          "uuid": "bb0d9a98-43d8-40f3-83f2-f50995ff65e7",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "shutdown message",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "69e11ce8-a97b-464e-8976-94ab1f69c19b",
      "documentation": "add an image (dataset) as part of a transaction. This method is used when sending images using the push method to a public slicebox.",
      "method": "post",
      "endpoint": "transactions/:token/image",
      "responses": [
        {
          "uuid": "11766cd5-cd35-4fcb-b239-a5c6ebd2f56c",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "image data received",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/octet-stream"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a1ef0c8f-3f1e-4d96-b3f0-ef1035fcf2da",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "unauthorized, invalid token",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/octet-stream"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9599ad47-5daf-4dee-b59d-23404254cf0c",
      "documentation": "fetch an image from the connected box as part of a transaction. This method is used when sending images using the poll method from a public slicebox.",
      "method": "get",
      "endpoint": "transactions/:token/outgoing",
      "responses": [
        {
          "uuid": "f2958a89-f277-42f0-acf2-04723264c87c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "binary data of dataset",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/octet-stream"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "afbdea96-996b-49e3-bb92-b618d4914b13",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "unauthorized, invalid token",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/octet-stream"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "96c9e685-1f8d-451b-a641-034ef5183b04",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "no outgoing trensaction and/or image found for the supplied transaction id and transaction image id",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/octet-stream"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "544d9fc8-c0ac-4ec3-9ab2-a8e9b248df6f",
      "documentation": "signal that the supplied outgoing transaction and image was successfully received and can be marked as sent. This method is used when sending images using the poll method from a public slicebox.",
      "method": "post",
      "endpoint": "transactions/:token/outgoing/done",
      "responses": [
        {
          "uuid": "bf1b2663-87d2-4bbc-be43-4f4ee9f4c9e4",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "done message received",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "922c1459-d3cf-4386-9ebf-59cd95aff41e",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "unauthorized, invalid token",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7e6e1d30-0ea6-4db8-b643-b68a3b826bf9",
      "documentation": "signal that the image corresponding to the supplied outgoing transaction and image could not be read or stored properly on the receiving side, and that the transaction should be marked as failed.",
      "method": "post",
      "endpoint": "transactions/:token/outgoing/failed",
      "responses": [
        {
          "uuid": "205d8a6f-3efa-4a94-95bb-cbec91b2dad8",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "failed message received",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2ed62f80-4c8e-4d59-8882-6fb093b11670",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "unauthorized, invalid token",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "beb2fab9-14ae-4d73-9395-e5ffe2c75e81",
      "documentation": "get next outgoing transaction and image (information on the next image that the connected box wishes to send to you), if any. This method is used when sending images using the poll method from a public slicebox.",
      "method": "get",
      "endpoint": "transactions/:token/outgoing/poll",
      "responses": [
        {
          "uuid": "38ffceba-c05b-4a08-b5bd-4bc438a0fe47",
          "body": "[\n  {\n    \"image\": {\n      \"id\": {{faker 'random.number'}},\n      \"imageId\": {{faker 'random.number'}},\n      \"outgoingTransactionId\": {{faker 'random.number'}},\n      \"sent\": {{faker 'random.boolean'}},\n      \"sequenceNumber\": {{faker 'random.number'}}\n    },\n    \"transaction\": {\n      \"boxId\": {{faker 'random.number'}},\n      \"boxName\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"profile\": {\n        \"options\": [\n          {\n            \"description\": \"\",\n            \"name\": \"\",\n            \"rank\": {{faker 'random.number'}},\n            \"title\": \"\"\n          }\n        ]\n      },\n      \"sentImageCount\": {{faker 'random.number'}},\n      \"status\": \"\",\n      \"totalImageCount\": {{faker 'random.number'}},\n      \"updated\": {{faker 'random.number'}}\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "next outgoing transaction and image information block",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8fecf44b-6570-4b57-8543-41b212eef2dc",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "unauthorized, invalid token",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7f3deb14-64b5-43c9-82e6-30a6b766439a",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "there are currently no outgoing transactions to fetch for the box connection with the supplied token",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f3532885-548d-4e63-87e9-722fb049fbe8",
      "documentation": "get the status of the remote incoming transaction with the supplied transaction ID",
      "method": "get",
      "endpoint": "transactions/:token/status",
      "responses": [
        {
          "uuid": "1cb1b7d3-7a7c-481e-b995-762fae097908",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "string representation of the transaction status (FINISHED, FAILED, WAITING or PROCESSING)",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "54a1702a-6ec8-4c7a-80c2-eec3c3c84bc1",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "unauthorized, invalid token",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "131b8c51-1aad-4ba7-af74-4a93f2e7c49f",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "no transaction found for the supplied transaction ID and box token",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3a1d90cd-f180-44e0-a6b7-b0d015ffbf00",
      "documentation": "update the status of the transaction with the supplied ID",
      "method": "put",
      "endpoint": "transactions/:token/status",
      "responses": [
        {
          "uuid": "7338e12b-2638-4f32-82e2-83844e0e1e2f",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "status update successfully applied to transaction",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f6033e98-da26-4671-9362-81c54edfc054",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "no transaction found for the supplied transaction ID and box token",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "69c33b37-8dda-48e3-882e-4ded7060be5d",
      "documentation": "Returns all users of slicebox",
      "method": "get",
      "endpoint": "users",
      "responses": [
        {
          "uuid": "60564afc-0340-403d-a66c-80f9a0fdc2b9",
          "body": "[\n  {\n    \"hashedPassword\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"role\": \"\",\n    \"user\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "user response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a3f9275c-9360-47a0-baeb-3d1872cf419e",
      "documentation": "Creates a new user. Dupicates are accepted but not added.",
      "method": "post",
      "endpoint": "users",
      "responses": [
        {
          "uuid": "3ccb739e-da72-4e07-974d-1d0189d8d032",
          "body": "{\n  \"hashedPassword\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"role\": \"\",\n  \"user\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "user response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ec895847-5a47-4af7-a550-3fd47183f786",
      "documentation": "obtain information on the currently logged in user as specified by the supplied session cookie, IP address and user agent.",
      "method": "get",
      "endpoint": "users/current",
      "responses": [
        {
          "uuid": "bed421d7-821a-47ea-bc7b-e85321f1a838",
          "body": "{\n  \"id\": {{faker 'random.number'}},\n  \"role\": \"\",\n  \"user\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "user information",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cffa1605-4414-46ab-aa8b-ce4aa64740b6",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "no user found for the supplied session cookie, IP address and user agent, or if any of the required headers are missing.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ef50cfa5-8347-401a-abb5-1f20d44e2ebf",
      "documentation": "Obtain a session cookie that can be used to authenticate future API calls from the present IP address and with the present user agent.",
      "method": "post",
      "endpoint": "users/login",
      "responses": [
        {
          "uuid": "f442fa4e-5725-40c3-a13c-7da566f139b1",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "if the supplied credentials are valid. The response headers will contain Set-Cookie.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2071e326-e3e1-4a51-b8d1-eeb16d949084",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "if the supplied credentials are invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dbac5500-f7d0-4887-9318-b9ce2e826128",
      "documentation": "Logout the current user by responding with a delete cookie header removing the session cookie for this user.",
      "method": "post",
      "endpoint": "users/logout",
      "responses": [
        {
          "uuid": "3a8efc99-72c0-4f70-9e0e-c0bfc8b715a4",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "the user was logged out",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "acda4ea2-05c4-4ba8-9d38-80d5df2593c1",
      "documentation": "deletes a single user based on the ID supplied",
      "method": "delete",
      "endpoint": "users/:id",
      "responses": [
        {
          "uuid": "96752273-e870-4864-b07e-7c2618a1e198",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "user deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}