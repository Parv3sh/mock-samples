{
  "uuid": "d74e45bb-1674-4a55-b12d-1072053eca99",
  "lastMigration": 19,
  "name": "Slicebox API",
  "endpointPrefix": "api",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "1433c612-d5db-4ab7-9d32-e7ab0bc18b3b",
      "documentation": "anonymize the images corresponding to the supplied list of image IDs (each paired with a list of DICOM tag translation). This route corresponds to repeated use of the route /images/{id}/anonymize.",
      "method": "post",
      "endpoint": "anonymization/anonymize",
      "responses": [
        {
          "uuid": "cde1484b-f76f-460a-86e0-c15ada17b04c",
          "body": "[\n  {\n    \"id\": {{faker 'random.number'}},\n    \"imageType\": {\n      \"value\": \"\"\n    },\n    \"instanceNumber\": {\n      \"value\": \"\"\n    },\n    \"seriesId\": {{faker 'random.number'}},\n    \"sopInstanceUID\": {\n      \"value\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "the list of newly created anonymous images",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "68cbc7fd-813c-4c03-b8e7-b6e7d265ca9f",
      "documentation": "get a list of anonymization keys, each specifying how vital DICOM attributes have been anonymized for a particular image",
      "method": "get",
      "endpoint": "anonymization/keys",
      "responses": [
        {
          "uuid": "2020bf94-a691-42ac-a97d-c157e9110b53",
          "body": "[\n  {\n    \"anonPatientID\": \"\",\n    \"anonPatientName\": \"\",\n    \"anonSOPInstanceUID\": \"\",\n    \"anonSeriesInstanceUID\": \"\",\n    \"anonStudyInstanceUID\": \"\",\n    \"created\": {{faker 'random.number'}},\n    \"id\": {{faker 'random.number'}},\n    \"imageId\": {{faker 'random.number'}},\n    \"patientID\": \"\",\n    \"patientName\": \"\",\n    \"seriesInstanceUID\": \"\",\n    \"sopInstanceUID\": \"\",\n    \"studyInstanceUID\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "anonymization keys, one per DICOM image",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d9ceb332-27cd-4a60-badb-84d04b8df349",
      "documentation": "export all anonymization keys as a csv file",
      "method": "get",
      "endpoint": "anonymization/keys/export/csv",
      "responses": [
        {
          "uuid": "fb37496f-e382-4d38-9c90-d07f8931dc78",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "all anonymization keys as a csv file",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5a99bf08-1293-4020-9ae2-a47828a969cd",
      "documentation": "submit a query for anonymization keys",
      "method": "post",
      "endpoint": "anonymization/keys/query",
      "responses": [
        {
          "uuid": "8f8a193d-7b50-4500-b6b7-dda9516b6249",
          "body": "[\n  {\n    \"anonPatientID\": \"\",\n    \"anonPatientName\": \"\",\n    \"anonSOPInstanceUID\": \"\",\n    \"anonSeriesInstanceUID\": \"\",\n    \"anonStudyInstanceUID\": \"\",\n    \"created\": {{faker 'random.number'}},\n    \"id\": {{faker 'random.number'}},\n    \"imageId\": {{faker 'random.number'}},\n    \"patientID\": \"\",\n    \"patientName\": \"\",\n    \"seriesInstanceUID\": \"\",\n    \"sopInstanceUID\": \"\",\n    \"studyInstanceUID\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "anonymization keys",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "46b8b2b7-a205-4530-8799-7685c125ba35",
      "documentation": "delete an anonymization key that is no longer of interest",
      "method": "delete",
      "endpoint": "anonymization/keys/:id",
      "responses": [
        {
          "uuid": "a720650b-a101-4ae8-aec3-c52397e86f0e",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "anonymization key deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "68a05d25-a513-4b94-94df-3295df21bfda",
      "documentation": "get the anonymization key with the supplied ID",
      "method": "get",
      "endpoint": "anonymization/keys/:id",
      "responses": [
        {
          "uuid": "5c35b05b-20ae-4447-83e7-f8981296eadf",
          "body": "{\n  \"anonPatientID\": \"\",\n  \"anonPatientName\": \"\",\n  \"anonSOPInstanceUID\": \"\",\n  \"anonSeriesInstanceUID\": \"\",\n  \"anonStudyInstanceUID\": \"\",\n  \"created\": {{faker 'random.number'}},\n  \"id\": {{faker 'random.number'}},\n  \"imageId\": {{faker 'random.number'}},\n  \"patientID\": \"\",\n  \"patientName\": \"\",\n  \"seriesInstanceUID\": \"\",\n  \"sopInstanceUID\": \"\",\n  \"studyInstanceUID\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "anonymization key for the supplied ID",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f2b33048-bb6d-431a-8db3-1d479782361e",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "if no anonymization key could be found for the supplied ID",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2ffd58c0-7c74-444b-8b65-6ab72ce63e8a",
      "documentation": "get pointers to the images corresponding to the anonymization key with the supplied ID",
      "method": "get",
      "endpoint": "anonymization/keys/:id/keyvalues",
      "responses": [
        {
          "uuid": "f40b937a-6117-4113-95f4-d24e3a52a1c5",
          "body": "[\n  \"\"\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "an array of anonymization key-value pairs corresponding to the anonymization key for the supplied ID",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "82087f2c-ee69-4fa2-9cad-5a06e9065f9a",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "if no anonymization key could be found for the supplied ID",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e60139c1-2e9f-4c9b-9ec8-50a8b78e0eb5",
      "documentation": "list all supported anonymization options defining an anonymization profile",
      "method": "get",
      "endpoint": "anonymization/options",
      "responses": [
        {
          "uuid": "3ce3e2ec-dc72-4516-bced-0ec67449c9d6",
          "body": "[\n  {\n    \"description\": \"\",\n    \"name\": \"\",\n    \"rank\": {{faker 'random.number'}},\n    \"title\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "supported anonymization options",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7d8f7f33-427b-42fa-b06a-1f21edfac831",
      "documentation": "get a list of box connections",
      "method": "get",
      "endpoint": "boxes",
      "responses": [
        {
          "uuid": "351b5886-a9c2-499f-9d46-62062a21953a",
          "body": "[\n  {\n    \"baseUrl\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"name\": \"\",\n    \"online\": {{faker 'random.boolean'}},\n    \"profile\": {\n      \"options\": [\n        {\n          \"description\": \"\",\n          \"name\": \"\",\n          \"rank\": {{faker 'random.number'}},\n          \"title\": \"\"\n        }\n      ]\n    },\n    \"sendMethod\": \"\",\n    \"token\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "box connections",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d7db5d4c-c450-49a7-98aa-4f861ee3bbf1",
      "documentation": "connect to another box using a received URL. Used to connect to a public box.",
      "method": "post",
      "endpoint": "boxes/connect",
      "responses": [
        {
          "uuid": "b5ecf6e9-ecb4-4628-8426-425472448bcc",
          "body": "{\n  \"baseUrl\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"name\": \"\",\n  \"online\": {{faker 'random.boolean'}},\n  \"profile\": {\n    \"options\": [\n      {\n        \"description\": \"\",\n        \"name\": \"\",\n        \"rank\": {{faker 'random.number'}},\n        \"title\": \"\"\n      }\n    ]\n  },\n  \"sendMethod\": \"\",\n  \"token\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "connected box",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "212c397c-46db-425f-8f5b-ce65e0f6218f",
      "documentation": "create a new box connection where the supplied entity holds the remote box name. Used by publicly available boxes.",
      "method": "post",
      "endpoint": "boxes/createconnection",
      "responses": [
        {
          "uuid": "d43ddbdd-d995-4405-93e8-71e3ee5a8383",
          "body": "{\n  \"baseUrl\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"name\": \"\",\n  \"online\": {{faker 'random.boolean'}},\n  \"profile\": {\n    \"options\": [\n      {\n        \"description\": \"\",\n        \"name\": \"\",\n        \"rank\": {{faker 'random.number'}},\n        \"title\": \"\"\n      }\n    ]\n  },\n  \"sendMethod\": \"\",\n  \"token\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "remote box of the connection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1e87a396-cb12-4242-8817-c5cada4271d4",
      "documentation": "get incoming transactions (finished, currently receiving, waiting or failed)",
      "method": "get",
      "endpoint": "boxes/incoming",
      "responses": [
        {
          "uuid": "ad9d57a6-f2cb-421e-8c5d-68101409a05e",
          "body": "[\n  {\n    \"boxId\": {{faker 'random.number'}},\n    \"boxName\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"outgoingTransactionId\": {{faker 'random.number'}},\n    \"receivedImageCount\": {{faker 'random.number'}},\n    \"status\": \"\",\n    \"totalImageCount\": {{faker 'random.number'}},\n    \"updated\": {{faker 'random.number'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "incoming transactions, sorted from most to least recently updated",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "caa4f80e-a262-4990-a4a4-f823228ed2c3",
      "documentation": "delete an incoming transaction. If a currently active transaction is deleted, a new transaction with the remainder of the images is created when receiving the next incoming image.",
      "method": "delete",
      "endpoint": "boxes/incoming/:id",
      "responses": [
        {
          "uuid": "5271760b-f209-49cd-be77-ade50dafabbf",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "incoming transaction deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "09a36c91-bda8-4e30-b53e-20849cfba769",
      "documentation": "get the received images corresponding to the incoming transaction with the supplied ID",
      "method": "get",
      "endpoint": "boxes/incoming/:id/images",
      "responses": [
        {
          "uuid": "ffe5317c-328e-4757-bfd1-6a8f4caa6299",
          "body": "[\n  {\n    \"id\": {{faker 'random.number'}},\n    \"imageType\": {\n      \"value\": \"\"\n    },\n    \"instanceNumber\": {\n      \"value\": \"\"\n    },\n    \"seriesId\": {{faker 'random.number'}},\n    \"sopInstanceUID\": {\n      \"value\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "images received corresponding to the specified incoming transaction",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bac0e3c1-0def-4313-a061-96b2d1d25ecb",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "incoming transaction not found (invalid ID)",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "49878c32-5b42-411e-b2cd-caa429773b60",
      "documentation": "get outgoing transactions (finished, currently sending, waiting or failed)",
      "method": "get",
      "endpoint": "boxes/outgoing",
      "responses": [
        {
          "uuid": "6a3d53c8-797d-470c-b0b6-d3fc2bec494f",
          "body": "[\n  {\n    \"boxId\": {{faker 'random.number'}},\n    \"boxName\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"profile\": {\n      \"options\": [\n        {\n          \"description\": \"\",\n          \"name\": \"\",\n          \"rank\": {{faker 'random.number'}},\n          \"title\": \"\"\n        }\n      ]\n    },\n    \"sentImageCount\": {{faker 'random.number'}},\n    \"status\": \"\",\n    \"totalImageCount\": {{faker 'random.number'}},\n    \"updated\": {{faker 'random.number'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "outgoing transactions, finished, sending, waiting or failed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4553b1fd-3d68-4588-bb1f-58cfebdf7f30",
      "documentation": "delete an outgoing transaction. This will stop ongoing transactions.",
      "method": "delete",
      "endpoint": "boxes/outgoing/:id",
      "responses": [
        {
          "uuid": "b516b1d9-8a60-4762-ac04-77ea3d1a8a39",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "outgoing transaction deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3b1f1490-7b96-46f8-8ed5-eb838e02dd14",
      "documentation": "get the sent images corresponding to the outgoing transaction with the supplied ID",
      "method": "get",
      "endpoint": "boxes/outgoing/:id/images",
      "responses": [
        {
          "uuid": "e925cddf-bf57-4770-b7ce-75e0700d3a84",
          "body": "[\n  {\n    \"id\": {{faker 'random.number'}},\n    \"imageType\": {\n      \"value\": \"\"\n    },\n    \"instanceNumber\": {\n      \"value\": \"\"\n    },\n    \"seriesId\": {{faker 'random.number'}},\n    \"sopInstanceUID\": {\n      \"value\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "images sent corresponding to the specified outgoing transaction",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "170c1f51-2f5d-4eff-b958-7245e176c104",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "outgoing transaction not found (invalid ID)",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "340ee15e-eea5-4810-99b3-28e640e45397",
      "documentation": "Delete the remote box with the supplied ID",
      "method": "delete",
      "endpoint": "boxes/:id",
      "responses": [
        {
          "uuid": "0b5f084d-e714-4440-8094-c1d462b867cd",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "box deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0e6600cd-4a6f-43ae-a1c5-ffacfab94847",
      "documentation": "send images corresponding to the supplied image ids to the remote box with the supplied ID",
      "method": "post",
      "endpoint": "boxes/:id/send",
      "responses": [
        {
          "uuid": "2bd439e4-62c2-4bad-8cd4-c70284d5c453",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "images sent",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "05290639-9f47-4eb3-8c68-6043b106fbe1",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "box not found (invalid ID)",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a08ed2bb-c15c-4530-901c-f96659210211",
      "documentation": "Returns a list of currently available destinations. Possible destinations are box - sending data to a remote box, and scu - sending data a receiving SCP.",
      "method": "get",
      "endpoint": "destinations",
      "responses": [
        {
          "uuid": "469fc849-ba05-4c10-a399-c62073c1a122",
          "body": "[\n  {\n    \"destinationId\": {{faker 'random.number'}},\n    \"destinationName\": \"\",\n    \"destinationType\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "currently available destinations",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "815c4b40-1e70-46d8-b714-a96fe3904830",
      "documentation": "get a list of watch directories. Each watch directory and its sub-directories are watched for incoming DICOM files, which are read and imported into slicebox.",
      "method": "get",
      "endpoint": "directorywatches",
      "responses": [
        {
          "uuid": "c0933ae2-f6e4-4c2b-b802-f47986f57d89",
          "body": "[\n  {\n    \"id\": {{faker 'random.number'}},\n    \"path\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "the list of watched directories",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "17cdca68-987d-4a5a-af04-082d839f5f17",
      "documentation": "add a new directory to watch for incoming DICOM files",
      "method": "post",
      "endpoint": "directorywatches",
      "responses": [
        {
          "uuid": "996dc319-0acc-4cc3-b90f-aafb5ca3927a",
          "body": "{\n  \"id\": {{faker 'random.number'}},\n  \"path\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "the directory now being watched",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7247b3d5-0be9-47e1-a55f-9fd378804d84",
      "documentation": "stop watching and remove the directory corresponding to the supplied ID",
      "method": "delete",
      "endpoint": "directorywatches/:id",
      "responses": [
        {
          "uuid": "4a95aa0c-3a04-4d33-a1a4-87e8396ff408",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "directory watch removed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "78901674-fada-4abf-8b08-fd72da32dbef",
      "documentation": "Get a list of source to filter associations.",
      "method": "get",
      "endpoint": "filtering/associations",
      "responses": [
        {
          "uuid": "f661681f-a940-430f-acb3-ef4b4bbf49a9",
          "body": "[\n  {\n    \"id\": {{faker 'random.number'}},\n    \"sourceId\": {{faker 'random.number'}},\n    \"sourceType\": \"\",\n    \"tagFilterId\": {{faker 'random.number'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "the list of source <-> filter associations",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2969ec24-b557-40c2-a152-6ee9431353c2",
      "documentation": "Inserts or updates a source <-> filter associations. If the specified Source already  has an association this is updated, otherwise a new is inserted.",
      "method": "post",
      "endpoint": "filtering/associations",
      "responses": [
        {
          "uuid": "c1c64a4e-f7e8-421a-a2d1-075c7a9a2723",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "Upserted source <-> filter association",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fac3d679-54c1-49fc-b4f2-f35e26cef6d8",
      "documentation": "remove the source <-> filter association corresponding to the supplied ID",
      "method": "delete",
      "endpoint": "filtering/associations/:id",
      "responses": [
        {
          "uuid": "c5488138-03e5-4d50-a35f-102c5731e084",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "source <-> filter association removed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "38c39042-f0e2-4cf3-9647-5731188c751e",
      "documentation": "List defined filters",
      "method": "get",
      "endpoint": "filtering/filters",
      "responses": [
        {
          "uuid": "57dc3466-02ee-4efd-a131-30657795af51",
          "body": "[\n  \"\"\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "the list of filters",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4032bb55-9bc3-47f6-890a-6cacad74cd5a",
      "documentation": "Inserts or updates a filter. If a filter with same name as supplied filter exists this filter is updated, otherwise a new filter is inserted.",
      "method": "post",
      "endpoint": "filtering/filters",
      "responses": [
        {
          "uuid": "fb687537-edc8-4c85-8d3c-891f99f84655",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "Filter upserted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "16a4d77e-3edf-4e15-a6b0-51d8def5aeea",
      "documentation": "remove the filter corresponding to the supplied ID",
      "method": "delete",
      "endpoint": "filtering/filters/:id",
      "responses": [
        {
          "uuid": "f693769d-f604-46c0-8964-fc5aa8cc5334",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Filter removed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a7e1deda-ac4a-4d4a-81e8-5bf8899377a2",
      "documentation": "List tagpaths for the selected filter",
      "method": "get",
      "endpoint": "filtering/filters/:id/tagpaths",
      "responses": [
        {
          "uuid": "fd7bcc35-41d9-4746-a8df-b8c72186c635",
          "body": "[\n  \"\"\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "the list of tagpaths",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cd9019a2-3b84-49d6-8740-4a878d64ece5",
      "documentation": "add a tagpath to a filter",
      "method": "post",
      "endpoint": "filtering/filters/:id/tagpaths",
      "responses": [
        {
          "uuid": "1cdbb153-e7f9-4de7-b6e1-dc30f5a68915",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "TagPath added",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cb8e7f9b-5a17-427d-9914-6b48c11bbccf",
      "documentation": "remove the tagpath corresponding to the supplied ID",
      "method": "delete",
      "endpoint": "filtering/filters/:id/tagpaths/:tagpathid",
      "responses": [
        {
          "uuid": "42696554-9923-4778-ad4d-4cf652f8e2dc",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "TagPath removed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "478cbca1-6556-4d24-a5ae-f4e98f278703",
      "documentation": "remove the forwarding rule corresponding to the supplied ID",
      "method": "delete",
      "endpoint": "forwarding/rule/:id",
      "responses": [
        {
          "uuid": "96ac2b68-4b6d-467f-bb15-d8392d561a75",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "forwarding rule removed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ed0218df-3969-4557-9eae-024b72e6112b",
      "documentation": "get a list of all forwarding rules. A forwarding rule specifies the automatic forwarding of images from a source (SCP, BOX, etc.) to a destimation (BOX, SCU, etc.)",
      "method": "get",
      "endpoint": "forwarding/rules",
      "responses": [
        {
          "uuid": "522fc47d-0539-4efd-a4a1-6eabdfa27515",
          "body": "[\n  {\n    \"destination\": {\n      \"destinationId\": {{faker 'random.number'}},\n      \"destinationName\": \"\",\n      \"destinationType\": \"\"\n    },\n    \"id\": {{faker 'random.number'}},\n    \"keepImages\": {{faker 'random.boolean'}},\n    \"source\": {\n      \"sourceId\": {{faker 'random.number'}},\n      \"sourceName\": \"\",\n      \"sourceType\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "the list of forwarding rules",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "28be443e-d82b-4373-82fa-605e0e852aea",
      "documentation": "add a new forwarding rule",
      "method": "post",
      "endpoint": "forwarding/rules",
      "responses": [
        {
          "uuid": "6af2c3fa-7e66-400f-8d19-7efd92e82acb",
          "body": "{\n  \"destination\": {\n    \"destinationId\": {{faker 'random.number'}},\n    \"destinationName\": \"\",\n    \"destinationType\": \"\"\n  },\n  \"id\": {{faker 'random.number'}},\n  \"keepImages\": {{faker 'random.boolean'}},\n  \"source\": {\n    \"sourceId\": {{faker 'random.number'}},\n    \"sourceName\": \"\",\n    \"sourceType\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "the created forwarding rule",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a8a1cacf-db77-4338-ae07-504a41e6845f",
      "documentation": "add a DICOM dataset to slicebox",
      "method": "post",
      "endpoint": "images",
      "responses": [
        {
          "uuid": "32dab6a0-2f4d-4ef8-b36b-54258caf015d",
          "body": "{\n  \"id\": {{faker 'random.number'}},\n  \"imageType\": {\n    \"value\": \"\"\n  },\n  \"instanceNumber\": {\n    \"value\": \"\"\n  },\n  \"seriesId\": {{faker 'random.number'}},\n  \"sopInstanceUID\": {\n    \"value\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "meta data for added dataset on the image level of the DICOM hierarchy. Status code 200 signifies that this image was already present in the slicebox database.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bc68d369-1395-4837-97c1-59b1c0e64367",
          "body": "{\n  \"id\": {{faker 'random.number'}},\n  \"imageType\": {\n    \"value\": \"\"\n  },\n  \"instanceNumber\": {\n    \"value\": \"\"\n  },\n  \"seriesId\": {{faker 'random.number'}},\n  \"sopInstanceUID\": {\n    \"value\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "meta data for added dataset on the image level of the DICOM hierarchy",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8da2b50c-722b-4405-aa22-00113ac5a58d",
      "documentation": "bulk delete a sequence of images according to the supplied image IDs. This is the same as a sequence of DELETE requests to /images/{id}",
      "method": "post",
      "endpoint": "images/delete",
      "responses": [
        {
          "uuid": "979aff2d-017a-4c8a-a077-4ccb67057f0f",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Images deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b56bd04d-29d8-4c34-acd3-157e7331e103",
      "documentation": "download the export set with the supplied export set ID as a zip archive",
      "method": "get",
      "endpoint": "images/export",
      "responses": [
        {
          "uuid": "45869b82-8164-4b4a-a4c2-0826a3dedf14",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "zip archive of images",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/zip"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f8a2aec8-8910-4f3f-a550-6c5d55daf6ef",
      "documentation": "create an export set, a group of image IDs of images to export. The export set will contain the selected images. The export set is available for download 12 hours before it is automatically deleted.",
      "method": "post",
      "endpoint": "images/export",
      "responses": [
        {
          "uuid": "77e13d94-6b4e-400b-9bb3-7d42211e57a2",
          "body": "{\n  \"value\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ID of created export set. To be used with the associated GET method for downloading.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9ede7ea4-1485-474e-9b46-1ea005e9df4e",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "if the supplied list of image ids is empty or no if images could be found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2bc48b10-1d89-4d9a-b831-e051cb861769",
      "documentation": "add a JPEG image to slicebox. The image data will be wrapped in a DICOM file and added as a new series belonging to the study with the supplied ID",
      "method": "post",
      "endpoint": "images/jpeg",
      "responses": [
        {
          "uuid": "827c9dd1-f012-45ed-88c9-b0ed03a92b2d",
          "body": "{\n  \"id\": {{faker 'random.number'}},\n  \"imageType\": {\n    \"value\": \"\"\n  },\n  \"instanceNumber\": {\n    \"value\": \"\"\n  },\n  \"seriesId\": {{faker 'random.number'}},\n  \"sopInstanceUID\": {\n    \"value\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "meta data for added dataset on the image level of the DICOM hierarchy",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "05d97c61-7080-49c9-8b88-b4339c09b561",
      "documentation": "Delete the image with the supplied ID",
      "method": "delete",
      "endpoint": "images/:id",
      "responses": [
        {
          "uuid": "96ae68a1-6b8b-4916-9960-60855dc691fe",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "image deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "26a71da8-518b-4e30-a1d0-aacf2bd55403",
      "documentation": "fetch dataset corresponding to the supplied image ID",
      "method": "get",
      "endpoint": "images/:id",
      "responses": [
        {
          "uuid": "03e4a43c-fb46-4ab9-a40a-3f859fae6835",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "binary data of dataset",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/octet-stream"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f9d15bc1-b5bb-4386-aa75-7d0ed50a817c",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "if no image was found for the supplied image ID",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/octet-stream"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "036e07d5-0fb4-470c-b5cf-a7646766ef84",
      "documentation": "delete the selected image and replace it with an anonymized version",
      "method": "put",
      "endpoint": "images/:id/anonymize",
      "responses": [
        {
          "uuid": "e91df158-3dcf-4ac0-8b23-b3fd3205ffa5",
          "body": "{\n  \"id\": {{faker 'random.number'}},\n  \"imageType\": {\n    \"value\": \"\"\n  },\n  \"instanceNumber\": {\n    \"value\": \"\"\n  },\n  \"seriesId\": {{faker 'random.number'}},\n  \"sopInstanceUID\": {\n    \"value\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "the newly created anonymous image",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1796e5e9-e353-4c60-810d-0c12ec22ddc9",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "image or corresponding dataset not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fce682a1-54e2-4fbe-8a25-9fe5d3fdd873",
      "documentation": "get an anonymized version of the image with the supplied ID",
      "method": "post",
      "endpoint": "images/:id/anonymized",
      "responses": [
        {
          "uuid": "479475e8-36d5-4248-800a-6378b470bbbb",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "binary data of anonymized dataset",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0068cf33-1d3e-488a-bbd8-8072422b9e65",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "if no image was found for the supplied image ID",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a550a3e9-59d0-4c1d-afcf-899cf89257ff",
      "documentation": "list all DICOM attributes of the dataset corresponding to the supplied image ID",
      "method": "get",
      "endpoint": "images/:id/attributes",
      "responses": [
        {
          "uuid": "8efc0036-bbe6-43fe-9509-f35bf260c056",
          "body": "[\n  {\n    \"depth\": {{faker 'random.number'}},\n    \"element\": \"\",\n    \"group\": \"\",\n    \"length\": {{faker 'random.number'}},\n    \"multiplicity\": {{faker 'random.number'}},\n    \"name\": \"\",\n    \"path\": \"\",\n    \"value\": \"\",\n    \"vr\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "list of DICOM attributes",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "75c1156f-db7a-4772-9d22-3c608736733c",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "if no image was found for the supplied image ID",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "98c18ffa-c6d7-4e25-895b-e2874dbeac46",
      "documentation": "get basic information about the pixel data of an image",
      "method": "get",
      "endpoint": "images/:id/imageinformation",
      "responses": [
        {
          "uuid": "8b37dc20-ad89-4dd1-9726-c0f4a044ad18",
          "body": "{\n  \"frameIndex\": {{faker 'random.number'}},\n  \"maximumPixelValue\": {{faker 'random.number'}},\n  \"minimumPixelValue\": {{faker 'random.number'}},\n  \"numberOfFrames\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "basic information about the pixeldata of an image",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fbc5e5ac-423e-41f5-a58e-4868839d8b26",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "if no image was found for the supplied image ID",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d829e424-0e8d-41de-9683-f9dd202ba8a0",
      "documentation": "modify and/or insert image attributes according to the input tagpath-value mappings",
      "method": "put",
      "endpoint": "images/:id/modify",
      "responses": [
        {
          "uuid": "ce243a7c-4368-4915-a88b-88b181bb4510",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "image attributes successfully modified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1314c396-d4ec-4eed-920a-0a65a87deca8",
      "documentation": "get a PNG image representation of the image corresponding to the supplied ID",
      "method": "get",
      "endpoint": "images/:id/png",
      "responses": [
        {
          "uuid": "2a8fa4be-4698-4fd4-a4a0-029118fff798",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "image data",
          "headers": [
            {
              "key": "Content-Type",
              "value": "image/png"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c942080d-aace-47e4-aec4-ffd0f57c99f2",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "if no image was found for the supplied image ID",
          "headers": [
            {
              "key": "Content-Type",
              "value": "image/png"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "43d186e7-f0c8-4281-9be6-578507a04886",
          "body": "",
          "latency": 0,
          "statusCode": 501,
          "label": "if the system is not capable of creating an image representation of the data",
          "headers": [
            {
              "key": "Content-Type",
              "value": "image/png"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e1573a70-9bc3-4f6d-a69d-124ad003c75b",
      "documentation": "Returns a list of available import sessions.",
      "method": "get",
      "endpoint": "import/sessions",
      "responses": [
        {
          "uuid": "36101ff7-0ee4-4a1a-9039-059b07b09028",
          "body": "[\n  {\n    \"created\": {{faker 'random.number'}},\n    \"filesAdded\": {{faker 'random.number'}},\n    \"filesImported\": {{faker 'random.number'}},\n    \"filesRejected\": {{faker 'random.number'}},\n    \"id\": {{faker 'random.number'}},\n    \"lastUpdated\": {{faker 'random.number'}},\n    \"name\": \"\",\n    \"user\": \"\",\n    \"userId\": {{faker 'random.number'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "available import sessions",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "630df1a9-36b6-4ef1-a092-2e49448c6959",
      "documentation": "create a new import sessions",
      "method": "post",
      "endpoint": "import/sessions",
      "responses": [
        {
          "uuid": "ac2faf12-3e9b-4890-b307-115a83860657",
          "body": "{\n  \"created\": {{faker 'random.number'}},\n  \"filesAdded\": {{faker 'random.number'}},\n  \"filesImported\": {{faker 'random.number'}},\n  \"filesRejected\": {{faker 'random.number'}},\n  \"id\": {{faker 'random.number'}},\n  \"lastUpdated\": {{faker 'random.number'}},\n  \"name\": \"\",\n  \"user\": \"\",\n  \"userId\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "the created import session",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "321fc7de-7734-4aff-b466-499204012894",
      "documentation": "deletes the import session with the supplied ID",
      "method": "delete",
      "endpoint": "import/sessions/:id",
      "responses": [
        {
          "uuid": "6d4ca211-891d-416c-8e51-220fbea2266e",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "import session deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9655c4d4-36a0-47ea-9b3c-6b17161e9566",
      "documentation": "Returns the import sessions with the supplied ID",
      "method": "get",
      "endpoint": "import/sessions/:id",
      "responses": [
        {
          "uuid": "267773b2-4514-4363-a33d-25f9bd2297aa",
          "body": "{\n  \"created\": {{faker 'random.number'}},\n  \"filesAdded\": {{faker 'random.number'}},\n  \"filesImported\": {{faker 'random.number'}},\n  \"filesRejected\": {{faker 'random.number'}},\n  \"id\": {{faker 'random.number'}},\n  \"lastUpdated\": {{faker 'random.number'}},\n  \"name\": \"\",\n  \"user\": \"\",\n  \"userId\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "the import session with the supplied ID",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cf5379fd-3e4e-47b5-824c-042c21961a8a",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "import session not found (invalid ID)",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1d96d3e1-992c-4b97-8b07-d94b17257739",
      "documentation": "get the imported images corresponding to the import session with the supplied ID",
      "method": "get",
      "endpoint": "import/sessions/:id/images",
      "responses": [
        {
          "uuid": "f4026791-edd9-4705-beb8-4795ec3e4d1c",
          "body": "[\n  {\n    \"id\": {{faker 'random.number'}},\n    \"imageType\": {\n      \"value\": \"\"\n    },\n    \"instanceNumber\": {\n      \"value\": \"\"\n    },\n    \"seriesId\": {{faker 'random.number'}},\n    \"sopInstanceUID\": {\n      \"value\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "images corresponding to the specified import session",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fff2343b-2812-42d3-9661-a149001aecb3",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "import session not found (invalid ID)",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8bc36b64-6510-4df7-bd5e-f422859edfde",
      "documentation": "add a DICOM dataset to the import session with the supplied ID",
      "method": "post",
      "endpoint": "import/sessions/:id/images",
      "responses": [
        {
          "uuid": "3d0b539b-ad56-49dc-832a-a0df54cc5eaa",
          "body": "{\n  \"id\": {{faker 'random.number'}},\n  \"imageType\": {\n    \"value\": \"\"\n  },\n  \"instanceNumber\": {\n    \"value\": \"\"\n  },\n  \"seriesId\": {{faker 'random.number'}},\n  \"sopInstanceUID\": {\n    \"value\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "meta data for the imported dataset on the image level of the DICOM hierarchy. Status code 200 signifies that this image was already present in the slicebox database.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9868136d-ba7d-478f-80fb-12f49101c74c",
          "body": "{\n  \"id\": {{faker 'random.number'}},\n  \"imageType\": {\n    \"value\": \"\"\n  },\n  \"instanceNumber\": {\n    \"value\": \"\"\n  },\n  \"seriesId\": {{faker 'random.number'}},\n  \"sopInstanceUID\": {\n    \"value\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "meta data for the imported dataset on the image level of the DICOM hierarchy",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "39609130-2f94-444e-810c-02cd0138ad4e",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "import session not found (invalid ID)",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1c6a66bd-046b-4a00-b50e-d4504d266ead",
      "documentation": "delete all log messages",
      "method": "delete",
      "endpoint": "log",
      "responses": [
        {
          "uuid": "89c0f62a-a41d-47e3-839d-1e57697afd0f",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "log messages successfully",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5fefb696-afd1-40f5-8bfa-921aeb3b3844",
      "documentation": "get a list of slicebox log messages",
      "method": "get",
      "endpoint": "log",
      "responses": [
        {
          "uuid": "1ef97a7c-bf93-4141-9e79-d2635f903e79",
          "body": "[\n  {\n    \"created\": {{faker 'random.number'}},\n    \"entryType\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"message\": \"\",\n    \"subject\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "log messages",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "34aa8283-87e0-4f84-abb8-43730b1994dd",
      "documentation": "Delete the log entry with the supplied ID",
      "method": "delete",
      "endpoint": "log/:id",
      "responses": [
        {
          "uuid": "429c4280-3c65-4b40-a5c5-d17b78246653",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "log entry deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2e0b3373-685a-4cdb-b687-74061066f52f",
      "documentation": "Returns a list of flattened metadata on the patient, study and series levels",
      "method": "get",
      "endpoint": "metadata/flatseries",
      "responses": [
        {
          "uuid": "e160ea6e-8d54-4cf1-9316-2a32e4afe665",
          "body": "[\n  {\n    \"id\": {{faker 'random.number'}},\n    \"patient\": {\n      \"id\": {{faker 'random.number'}},\n      \"patientBirthDate\": {\n        \"value\": \"\"\n      },\n      \"patientID\": {\n        \"value\": \"\"\n      },\n      \"patientName\": {\n        \"value\": \"\"\n      },\n      \"patientSex\": {\n        \"value\": \"\"\n      }\n    },\n    \"series\": {\n      \"bodyPartExamined\": {\n        \"value\": \"\"\n      },\n      \"frameOfReferenceUID\": {\n        \"value\": \"\"\n      },\n      \"id\": {{faker 'random.number'}},\n      \"manufacturer\": {\n        \"value\": \"\"\n      },\n      \"modality\": {\n        \"value\": \"\"\n      },\n      \"protocolName\": {\n        \"value\": \"\"\n      },\n      \"seriesDate\": {\n        \"value\": \"\"\n      },\n      \"seriesDescription\": {\n        \"value\": \"\"\n      },\n      \"seriesInstanceUID\": {\n        \"value\": \"\"\n      },\n      \"stationName\": {\n        \"value\": \"\"\n      },\n      \"studyId\": {{faker 'random.number'}}\n    },\n    \"study\": {\n      \"accessionNumber\": {\n        \"value\": \"\"\n      },\n      \"id\": {{faker 'random.number'}},\n      \"patientAge\": {\n        \"value\": \"\"\n      },\n      \"patientId\": {{faker 'random.number'}},\n      \"studyDate\": {\n        \"value\": \"\"\n      },\n      \"studyDescription\": {\n        \"value\": \"\"\n      },\n      \"studyID\": {\n        \"value\": \"\"\n      },\n      \"studyInstanceUID\": {\n        \"value\": \"\"\n      }\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "flat series",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a510e6c4-a2ab-4d44-a0ad-5bdb5c0cfef3",
      "documentation": "submit a query for flat series",
      "method": "post",
      "endpoint": "metadata/flatseries/query",
      "responses": [
        {
          "uuid": "a9144bc3-c163-4801-b6c8-2c820349ef2c",
          "body": "[\n  {\n    \"id\": {{faker 'random.number'}},\n    \"patient\": {\n      \"id\": {{faker 'random.number'}},\n      \"patientBirthDate\": {\n        \"value\": \"\"\n      },\n      \"patientID\": {\n        \"value\": \"\"\n      },\n      \"patientName\": {\n        \"value\": \"\"\n      },\n      \"patientSex\": {\n        \"value\": \"\"\n      }\n    },\n    \"series\": {\n      \"bodyPartExamined\": {\n        \"value\": \"\"\n      },\n      \"frameOfReferenceUID\": {\n        \"value\": \"\"\n      },\n      \"id\": {{faker 'random.number'}},\n      \"manufacturer\": {\n        \"value\": \"\"\n      },\n      \"modality\": {\n        \"value\": \"\"\n      },\n      \"protocolName\": {\n        \"value\": \"\"\n      },\n      \"seriesDate\": {\n        \"value\": \"\"\n      },\n      \"seriesDescription\": {\n        \"value\": \"\"\n      },\n      \"seriesInstanceUID\": {\n        \"value\": \"\"\n      },\n      \"stationName\": {\n        \"value\": \"\"\n      },\n      \"studyId\": {{faker 'random.number'}}\n    },\n    \"study\": {\n      \"accessionNumber\": {\n        \"value\": \"\"\n      },\n      \"id\": {{faker 'random.number'}},\n      \"patientAge\": {\n        \"value\": \"\"\n      },\n      \"patientId\": {{faker 'random.number'}},\n      \"studyDate\": {\n        \"value\": \"\"\n      },\n      \"studyDescription\": {\n        \"value\": \"\"\n      },\n      \"studyID\": {\n        \"value\": \"\"\n      },\n      \"studyInstanceUID\": {\n        \"value\": \"\"\n      }\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "flat series",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d8a7d540-d206-4970-ac17-18cb2cefc459",
      "documentation": "Return the flat series with the supplied ID",
      "method": "get",
      "endpoint": "metadata/flatseries/:id",
      "responses": [
        {
          "uuid": "d238a17a-f6c0-4295-834b-2ce6f37f0377",
          "body": "{\n  \"id\": {{faker 'random.number'}},\n  \"patient\": {\n    \"id\": {{faker 'random.number'}},\n    \"patientBirthDate\": {\n      \"value\": \"\"\n    },\n    \"patientID\": {\n      \"value\": \"\"\n    },\n    \"patientName\": {\n      \"value\": \"\"\n    },\n    \"patientSex\": {\n      \"value\": \"\"\n    }\n  },\n  \"series\": {\n    \"bodyPartExamined\": {\n      \"value\": \"\"\n    },\n    \"frameOfReferenceUID\": {\n      \"value\": \"\"\n    },\n    \"id\": {{faker 'random.number'}},\n    \"manufacturer\": {\n      \"value\": \"\"\n    },\n    \"modality\": {\n      \"value\": \"\"\n    },\n    \"protocolName\": {\n      \"value\": \"\"\n    },\n    \"seriesDate\": {\n      \"value\": \"\"\n    },\n    \"seriesDescription\": {\n      \"value\": \"\"\n    },\n    \"seriesInstanceUID\": {\n      \"value\": \"\"\n    },\n    \"stationName\": {\n      \"value\": \"\"\n    },\n    \"studyId\": {{faker 'random.number'}}\n  },\n  \"study\": {\n    \"accessionNumber\": {\n      \"value\": \"\"\n    },\n    \"id\": {{faker 'random.number'}},\n    \"patientAge\": {\n      \"value\": \"\"\n    },\n    \"patientId\": {{faker 'random.number'}},\n    \"studyDate\": {\n      \"value\": \"\"\n    },\n    \"studyDescription\": {\n      \"value\": \"\"\n    },\n    \"studyID\": {\n      \"value\": \"\"\n    },\n    \"studyInstanceUID\": {\n      \"value\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "flat series response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5523e796-6378-44bc-a8f5-61e6e874de24",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "flat series not found (invalid ID)",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "080b57ab-3a77-4961-a1f8-4d798665ad69",
      "documentation": "Returns a list of metadata on the image level of the DICOM hierarchy",
      "method": "get",
      "endpoint": "metadata/images",
      "responses": [
        {
          "uuid": "324d8e9c-efa5-4867-8726-06ef0ebb10d2",
          "body": "[\n  {\n    \"id\": {{faker 'random.number'}},\n    \"imageType\": {\n      \"value\": \"\"\n    },\n    \"instanceNumber\": {\n      \"value\": \"\"\n    },\n    \"seriesId\": {{faker 'random.number'}},\n    \"sopInstanceUID\": {\n      \"value\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "images",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8edbb7a4-fac5-4867-8d6c-392a7c77e994",
      "documentation": "submit a query for images",
      "method": "post",
      "endpoint": "metadata/images/query",
      "responses": [
        {
          "uuid": "8d3fc763-ae5b-4e2f-885b-f5314fa6439c",
          "body": "[\n  {\n    \"id\": {{faker 'random.number'}},\n    \"imageType\": {\n      \"value\": \"\"\n    },\n    \"instanceNumber\": {\n      \"value\": \"\"\n    },\n    \"seriesId\": {{faker 'random.number'}},\n    \"sopInstanceUID\": {\n      \"value\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "images",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "05fa362c-05df-42f5-95ff-90a21431cac0",
      "documentation": "Return the image with the supplied ID",
      "method": "get",
      "endpoint": "metadata/images/:id",
      "responses": [
        {
          "uuid": "93133afa-8317-4304-9070-bd28e5e0a451",
          "body": "{\n  \"id\": {{faker 'random.number'}},\n  \"imageType\": {\n    \"value\": \"\"\n  },\n  \"instanceNumber\": {\n    \"value\": \"\"\n  },\n  \"seriesId\": {{faker 'random.number'}},\n  \"sopInstanceUID\": {\n    \"value\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "image response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "474c09b7-6960-4adf-b07c-e7e69c029092",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "image not found (invalid ID)",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d8a33988-eff6-49fb-83e5-b795f2396d7f",
      "documentation": "Returns a list of metadata on the patient level of the DICOM hierarchy",
      "method": "get",
      "endpoint": "metadata/patients",
      "responses": [
        {
          "uuid": "e4384d03-5357-4c14-bfc9-a4184787903d",
          "body": "[\n  {\n    \"id\": {{faker 'random.number'}},\n    \"patientBirthDate\": {\n      \"value\": \"\"\n    },\n    \"patientID\": {\n      \"value\": \"\"\n    },\n    \"patientName\": {\n      \"value\": \"\"\n    },\n    \"patientSex\": {\n      \"value\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "patients",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d640d3e7-fef5-4d62-bc73-1742dd4dba68",
      "documentation": "submit a query for patients",
      "method": "post",
      "endpoint": "metadata/patients/query",
      "responses": [
        {
          "uuid": "f4a20fab-91e6-4e5c-aaec-f45652b27f39",
          "body": "[\n  {\n    \"id\": {{faker 'random.number'}},\n    \"patientBirthDate\": {\n      \"value\": \"\"\n    },\n    \"patientID\": {\n      \"value\": \"\"\n    },\n    \"patientName\": {\n      \"value\": \"\"\n    },\n    \"patientSex\": {\n      \"value\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "patients",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "944375c9-4e61-4f5f-933f-cf58c5a71744",
      "documentation": "Return the patient with the supplied ID",
      "method": "get",
      "endpoint": "metadata/patients/:id",
      "responses": [
        {
          "uuid": "180b81eb-72ac-4079-a17f-ac8f25817a58",
          "body": "{\n  \"id\": {{faker 'random.number'}},\n  \"patientBirthDate\": {\n    \"value\": \"\"\n  },\n  \"patientID\": {\n    \"value\": \"\"\n  },\n  \"patientName\": {\n    \"value\": \"\"\n  },\n  \"patientSex\": {\n    \"value\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "patient response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b47958fb-f6a8-4374-8869-e7ad32804987",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "patient not found (invalid ID)",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c86d12e1-bbe0-4a1d-b997-ada3b976336e",
      "documentation": "Returns all images for the patient with the supplied patient ID",
      "method": "get",
      "endpoint": "metadata/patients/:id/images",
      "responses": [
        {
          "uuid": "b4d1a2df-4dc6-4a63-a8a7-1b5e9394eb73",
          "body": "[\n  {\n    \"id\": {{faker 'random.number'}},\n    \"imageType\": {\n      \"value\": \"\"\n    },\n    \"instanceNumber\": {\n      \"value\": \"\"\n    },\n    \"seriesId\": {{faker 'random.number'}},\n    \"sopInstanceUID\": {\n      \"value\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "list of images",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7ee1f194-b68a-4f11-ac45-522b177db77f",
      "documentation": "Returns a list of metadata on the series level of the DICOM hierarchy",
      "method": "get",
      "endpoint": "metadata/series",
      "responses": [
        {
          "uuid": "7a2700e4-2ebb-4e54-a58e-48e45dab8b00",
          "body": "[\n  {\n    \"bodyPartExamined\": {\n      \"value\": \"\"\n    },\n    \"frameOfReferenceUID\": {\n      \"value\": \"\"\n    },\n    \"id\": {{faker 'random.number'}},\n    \"manufacturer\": {\n      \"value\": \"\"\n    },\n    \"modality\": {\n      \"value\": \"\"\n    },\n    \"protocolName\": {\n      \"value\": \"\"\n    },\n    \"seriesDate\": {\n      \"value\": \"\"\n    },\n    \"seriesDescription\": {\n      \"value\": \"\"\n    },\n    \"seriesInstanceUID\": {\n      \"value\": \"\"\n    },\n    \"stationName\": {\n      \"value\": \"\"\n    },\n    \"studyId\": {{faker 'random.number'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "series",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0c98a5d1-c3ff-4058-b8b8-18e5594cbf24",
      "documentation": "submit a query for series",
      "method": "post",
      "endpoint": "metadata/series/query",
      "responses": [
        {
          "uuid": "19b84c4a-567b-417d-b90f-e8e1d768b01c",
          "body": "[\n  {\n    \"bodyPartExamined\": {\n      \"value\": \"\"\n    },\n    \"frameOfReferenceUID\": {\n      \"value\": \"\"\n    },\n    \"id\": {{faker 'random.number'}},\n    \"manufacturer\": {\n      \"value\": \"\"\n    },\n    \"modality\": {\n      \"value\": \"\"\n    },\n    \"protocolName\": {\n      \"value\": \"\"\n    },\n    \"seriesDate\": {\n      \"value\": \"\"\n    },\n    \"seriesDescription\": {\n      \"value\": \"\"\n    },\n    \"seriesInstanceUID\": {\n      \"value\": \"\"\n    },\n    \"stationName\": {\n      \"value\": \"\"\n    },\n    \"studyId\": {{faker 'random.number'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "series",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "29fc7e85-cdc6-4b3f-8741-c7f85f51cc9b",
      "documentation": "Return the series with the supplied ID",
      "method": "get",
      "endpoint": "metadata/series/:id",
      "responses": [
        {
          "uuid": "5c9d4216-11a0-4576-bc61-a08101bc3cd8",
          "body": "{\n  \"bodyPartExamined\": {\n    \"value\": \"\"\n  },\n  \"frameOfReferenceUID\": {\n    \"value\": \"\"\n  },\n  \"id\": {{faker 'random.number'}},\n  \"manufacturer\": {\n    \"value\": \"\"\n  },\n  \"modality\": {\n    \"value\": \"\"\n  },\n  \"protocolName\": {\n    \"value\": \"\"\n  },\n  \"seriesDate\": {\n    \"value\": \"\"\n  },\n  \"seriesDescription\": {\n    \"value\": \"\"\n  },\n  \"seriesInstanceUID\": {\n    \"value\": \"\"\n  },\n  \"stationName\": {\n    \"value\": \"\"\n  },\n  \"studyId\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "series response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dbf39ac4-3a81-442c-bbf8-869fe73f4f1e",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "series not found (invalid ID)",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "11b5c52d-4e33-4189-a980-e9ef711b4dd0",
      "documentation": "get the list of series tags for the series with the supplied ID.",
      "method": "get",
      "endpoint": "metadata/series/:id/seriestags",
      "responses": [
        {
          "uuid": "d8e64e7e-25f5-490a-af3f-a1e96d3be799",
          "body": "[\n  {\n    \"id\": {{faker 'random.number'}},\n    \"name\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "the list of series tags",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2a2b200b-931f-49b1-85e6-08ede96b1e6c",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "series not found (invalid ID)",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5dbda64f-f653-4870-a99f-fef3906f04e9",
      "documentation": "add a series tag to the series with the supplied ID",
      "method": "post",
      "endpoint": "metadata/series/:id/seriestags",
      "responses": [
        {
          "uuid": "ef5dea4c-4177-4441-864e-cc1d4365f195",
          "body": "{\n  \"id\": {{faker 'random.number'}},\n  \"name\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "added series tag",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "186c5ce6-8d77-4045-8907-64043c836e4a",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "if no series with the supplied ID exists",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "189aeb36-935a-4f0b-b7ad-eceffa6f9357",
      "documentation": "Delete all series types for the series with the supplied ID",
      "method": "delete",
      "endpoint": "metadata/series/:id/seriestypes",
      "responses": [
        {
          "uuid": "d7a9ebd6-1d4b-4215-ab7c-ac6e2627a2db",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "series types deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "30dec1d7-8179-4f4a-b0f9-babb84262c68",
      "documentation": "get the list of series types for the series with the supplied ID.",
      "method": "get",
      "endpoint": "metadata/series/:id/seriestypes",
      "responses": [
        {
          "uuid": "2686fb52-4167-4c06-b020-6ce2ae2d662f",
          "body": "[\n  {\n    \"id\": {{faker 'random.number'}},\n    \"name\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "the list of series types",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dc7d9fe0-4db4-4d35-aeed-c79e38bf183e",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "series not found (invalid ID)",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "363c81e5-2ab9-4e26-b12e-ad825d5b5734",
      "documentation": "Return the source of the series with the supplied ID",
      "method": "get",
      "endpoint": "metadata/series/:id/source",
      "responses": [
        {
          "uuid": "058de04f-4292-4236-a3c2-43815ce0e633",
          "body": "{\n  \"sourceId\": {{faker 'random.number'}},\n  \"sourceName\": \"\",\n  \"sourceType\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "source for series",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "61760d33-a8ed-4c3a-9934-7f2bf1349ae5",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "series not found (invalid ID)",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ab4a7c8f-332f-4904-b98b-48bdbf101d4e",
      "documentation": "Delete the series tag with the supplied series tag ID from the series with the supplied series ID",
      "method": "delete",
      "endpoint": "metadata/series/:seriesId/seriestags/:seriesTagId",
      "responses": [
        {
          "uuid": "d666cebc-a398-4488-931b-399fdb835c59",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "series tag removed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c2136aef-7894-4ba0-911d-1b96e872908c",
      "documentation": "Delete the series type with the supplied series type ID from the series with the supplied series ID",
      "method": "delete",
      "endpoint": "metadata/series/:seriesId/seriestypes/:seriesTypeId",
      "responses": [
        {
          "uuid": "37f8105d-15cb-4e2b-b018-5029ff5fb197",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "series type removed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c72f05c2-6dc6-47e8-81aa-2b0e739251e2",
      "documentation": "Add the series type with the supplied series type ID to the series with the supplied series ID",
      "method": "put",
      "endpoint": "metadata/series/:seriesId/seriestypes/:seriesTypeId",
      "responses": [
        {
          "uuid": "702d097e-8012-4a27-adee-27bf46ef867d",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "series type added",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "807dd03a-de4d-42ad-8691-1045aadb3851",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "no series or series type found for the supplied ID(s)",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "feab4da0-a985-466c-928d-67d8103923dd",
      "documentation": "Returns a list of series tags currently currently in use.",
      "method": "get",
      "endpoint": "metadata/seriestags",
      "responses": [
        {
          "uuid": "33ee1405-502b-4e23-a0b6-45e18c510ef7",
          "body": "[\n  {\n    \"id\": {{faker 'random.number'}},\n    \"name\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "a list of unique series tags currently used to tag series",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "08a7f980-aaf9-40a8-aa0b-dcad191dd9bd",
      "documentation": "Returns a list of metadata on the study level of the DICOM hierarchy",
      "method": "get",
      "endpoint": "metadata/studies",
      "responses": [
        {
          "uuid": "0ff9abae-ab7c-4bbb-9eb0-579e5dbb650c",
          "body": "[\n  {\n    \"accessionNumber\": {\n      \"value\": \"\"\n    },\n    \"id\": {{faker 'random.number'}},\n    \"patientAge\": {\n      \"value\": \"\"\n    },\n    \"patientId\": {{faker 'random.number'}},\n    \"studyDate\": {\n      \"value\": \"\"\n    },\n    \"studyDescription\": {\n      \"value\": \"\"\n    },\n    \"studyID\": {\n      \"value\": \"\"\n    },\n    \"studyInstanceUID\": {\n      \"value\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "studies",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d25b2d0c-6651-4d40-b8ef-48031ef406c1",
      "documentation": "submit a query for studies",
      "method": "post",
      "endpoint": "metadata/studies/query",
      "responses": [
        {
          "uuid": "5a7541d3-61f9-43aa-b47d-f69d25d1bfd0",
          "body": "[\n  {\n    \"accessionNumber\": {\n      \"value\": \"\"\n    },\n    \"id\": {{faker 'random.number'}},\n    \"patientAge\": {\n      \"value\": \"\"\n    },\n    \"patientId\": {{faker 'random.number'}},\n    \"studyDate\": {\n      \"value\": \"\"\n    },\n    \"studyDescription\": {\n      \"value\": \"\"\n    },\n    \"studyID\": {\n      \"value\": \"\"\n    },\n    \"studyInstanceUID\": {\n      \"value\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "studies",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "82c55e3f-733f-44a2-bb94-548dc76edb47",
      "documentation": "Return the study with the supplied ID",
      "method": "get",
      "endpoint": "metadata/studies/:id",
      "responses": [
        {
          "uuid": "12a46669-3d1b-4f85-92d9-c17f53fc1371",
          "body": "{\n  \"accessionNumber\": {\n    \"value\": \"\"\n  },\n  \"id\": {{faker 'random.number'}},\n  \"patientAge\": {\n    \"value\": \"\"\n  },\n  \"patientId\": {{faker 'random.number'}},\n  \"studyDate\": {\n    \"value\": \"\"\n  },\n  \"studyDescription\": {\n    \"value\": \"\"\n  },\n  \"studyID\": {\n    \"value\": \"\"\n  },\n  \"studyInstanceUID\": {\n    \"value\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "study response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7f7253d8-6fee-4f1b-9a20-6ce6ba43f71c",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "study not found (invalid ID)",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f38cc51d-26d1-4d26-9ffa-98f064b61779",
      "documentation": "Returns all images for the study with the supplied study ID",
      "method": "get",
      "endpoint": "metadata/studies/:id/images",
      "responses": [
        {
          "uuid": "b4898441-28da-430a-a17d-05ff2ac69396",
          "body": "[\n  {\n    \"id\": {{faker 'random.number'}},\n    \"imageType\": {\n      \"value\": \"\"\n    },\n    \"instanceNumber\": {\n      \"value\": \"\"\n    },\n    \"seriesId\": {{faker 'random.number'}},\n    \"sopInstanceUID\": {\n      \"value\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "list of images",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f4c434da-cff4-4eb8-bb2c-4033f3a00763",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "study not found (invalid ID)",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6a1a4473-8dfa-4e21-b139-5dd6b821a024",
      "documentation": "get a list of DICOM SCPs. Each SCP is a server for receiving DICOM images from e.g. a PACS system.",
      "method": "get",
      "endpoint": "scps",
      "responses": [
        {
          "uuid": "4f840dc8-26f8-4327-a848-0096efe7385c",
          "body": "[\n  {\n    \"aeTitle\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"name\": \"\",\n    \"port\": {{faker 'random.number'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "the list of SCPs",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dfa4d66a-748a-4b88-bf6a-6e296c0e07fb",
      "documentation": "add a new SCP for receiving DICOM images",
      "method": "post",
      "endpoint": "scps",
      "responses": [
        {
          "uuid": "bb86d8a6-704a-473f-accb-1e4df443ab09",
          "body": "{\n  \"aeTitle\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"name\": \"\",\n  \"port\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "the created SCP",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f32d9a03-d8bd-45e3-badb-3116b3fc08e4",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid port number or AE title",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8959fa9f-1305-4899-ae9d-2d4f821bab40",
      "documentation": "shut down and remove the SCP corresponding to the supplied ID",
      "method": "delete",
      "endpoint": "scps/:id",
      "responses": [
        {
          "uuid": "dce906a8-f6b0-482f-8e6a-2d316eba5cbe",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "SCP removed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "77c303c4-e834-4b0e-a096-bfc8b3228415",
      "documentation": "get a list of DICOM SCUs. Each SCU is a client for sending DICOM images to an SCP, e.g. a PACS system.",
      "method": "get",
      "endpoint": "scus",
      "responses": [
        {
          "uuid": "6f70b414-7092-433b-ab77-9c6ab8c2622f",
          "body": "[\n  {\n    \"aeTitle\": \"\",\n    \"host\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"name\": \"\",\n    \"port\": {{faker 'random.number'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "the list of SCUs",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "38881639-789c-46b8-a616-2e584beca01a",
      "documentation": "add a new SCU for sending DICOM images",
      "method": "post",
      "endpoint": "scus",
      "responses": [
        {
          "uuid": "106d798f-e205-4513-ac64-cf1a53375ec1",
          "body": "{\n  \"aeTitle\": \"\",\n  \"host\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"name\": \"\",\n  \"port\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "the created SCU",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "64f368c1-e365-4bb0-818d-7992dd862988",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid port number or AE title",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "025d6e19-ccc6-4ce8-80d2-2ea33d146368",
      "documentation": "remove the SCU corresponding to the supplied ID",
      "method": "delete",
      "endpoint": "scus/:id",
      "responses": [
        {
          "uuid": "1b7474b2-4736-4ec9-8a99-01426807943a",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "SCU removed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8f7577df-e8a6-4da8-8760-8997bbaa0f6d",
      "documentation": "send the images with the supplied image IDs to a DICOM SCP using the the SCU with the supplied scu ID",
      "method": "post",
      "endpoint": "scus/:id/send",
      "responses": [
        {
          "uuid": "018b5db2-87a8-4cc3-a6a0-c07d58a4f91a",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Series sent",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "12781fac-5a8e-4f21-b878-70dd2429a711",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Series not found or SCU not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "52adadc3-12bf-4be9-ab55-628f0db103c8",
          "body": "",
          "latency": 0,
          "statusCode": 502,
          "label": "Receiving SCP host not available",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "76168da1-bdfc-4c69-bacd-31eac29f23b1",
      "documentation": "get a list of all added series types. By filtering search results for certain series types, it is easier for applications to ensure that they read images of applicable types.",
      "method": "get",
      "endpoint": "seriestypes",
      "responses": [
        {
          "uuid": "02b9039d-9a60-438f-a1d4-fe0f5935526c",
          "body": "[\n  {\n    \"id\": {{faker 'random.number'}},\n    \"name\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "the list of series types",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f09782dc-2f00-4cf7-83fa-8153d2a4ecdd",
      "documentation": "add a new series type",
      "method": "post",
      "endpoint": "seriestypes",
      "responses": [
        {
          "uuid": "049ff2f0-b375-4072-a195-a19d867d8336",
          "body": "{\n  \"id\": {{faker 'random.number'}},\n  \"name\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "the created series type",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "016288c0-42ed-421e-847d-75cd32c11a13",
      "documentation": "get a list of rules for assigning series types to series. A rule connects to a series of attributes with values and a resulting series type. If a series has the required values of the listed attributes, it is assigned to the series type of the rule.",
      "method": "get",
      "endpoint": "seriestypes/rules",
      "responses": [
        {
          "uuid": "88149721-71a8-4458-9554-8b495be1b663",
          "body": "[\n  {\n    \"id\": {{faker 'random.number'}},\n    \"seriesTypeId\": {{faker 'random.number'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "the list of series type rules for the series type with the supplied ID",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b4584087-0151-4065-99a8-2dac7b4c4f4a",
      "documentation": "add a new series type rule",
      "method": "post",
      "endpoint": "seriestypes/rules",
      "responses": [
        {
          "uuid": "a0af3304-69cc-44c5-baaf-f2f6af965f33",
          "body": "{\n  \"id\": {{faker 'random.number'}},\n  \"seriesTypeId\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "the created series type rule",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c54be21b-8573-4232-ad3e-3543e23b971f",
      "documentation": "get the status of the internal process of updating series types for series following a change of series types, rules or attributes.",
      "method": "get",
      "endpoint": "seriestypes/rules/updatestatus",
      "responses": [
        {
          "uuid": "b3d92844-edb6-4492-bba5-50a571ff6660",
          "body": "{\n  \"running\": {{faker 'random.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "a status message, indicating if an update is running",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ce3cf9bf-1d86-4cb8-8ace-e92455582c75",
      "documentation": "remove the series type rule corresponding to the supplied ID",
      "method": "delete",
      "endpoint": "seriestypes/rules/:id",
      "responses": [
        {
          "uuid": "75d104c7-e1d2-4141-b233-b8668f16586e",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "series type rule removed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "affe93b0-97ed-4d33-bca5-004006b807fb",
      "documentation": "get the list of attributes for the series type rule with the supplied ID.",
      "method": "get",
      "endpoint": "seriestypes/rules/:id/attributes",
      "responses": [
        {
          "uuid": "68c083f9-696f-4483-a241-e7f15809c8ac",
          "body": "[\n  {\n    \"element\": {{faker 'random.number'}},\n    \"group\": {{faker 'random.number'}},\n    \"id\": {{faker 'random.number'}},\n    \"path\": \"\",\n    \"seriesTypeRuleId\": {{faker 'random.number'}},\n    \"value\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "the list of series type rule attributes for the series type rule with the supplied ID",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "340dd8ec-928f-46fd-9b16-70f1df6d87f6",
      "documentation": "add a new series type rule attribute",
      "method": "post",
      "endpoint": "seriestypes/rules/:id/attributes",
      "responses": [
        {
          "uuid": "106e80fd-75af-45a9-86a4-a2e6a314ac6e",
          "body": "{\n  \"element\": {{faker 'random.number'}},\n  \"group\": {{faker 'random.number'}},\n  \"id\": {{faker 'random.number'}},\n  \"path\": \"\",\n  \"seriesTypeRuleId\": {{faker 'random.number'}},\n  \"value\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "the created series type rule attribute",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "026b34d1-b95b-484a-9dc4-43031d2ae94c",
      "documentation": "remove the series type rule attribute corresponding to the supplied series type and attribute IDs",
      "method": "delete",
      "endpoint": "seriestypes/rules/:ruleId/attributes/:attributeId",
      "responses": [
        {
          "uuid": "8c15ee8a-af45-41c2-bb8b-7b743717c2eb",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "series type rule attribute removed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6bd826a5-3c2b-4d8d-8949-4acedc06f22d",
      "documentation": "submit a query for seriestypes for a list of series",
      "method": "post",
      "endpoint": "seriestypes/series/query",
      "responses": [
        {
          "uuid": "8835e07a-9a88-4766-945f-f0b9de086840",
          "body": "{\n  \"seriesidseriestypes\": [\n    {\n      \"seriesid\": {{faker 'random.number'}},\n      \"seriestype\": {\n        \"id\": {{faker 'random.number'}},\n        \"name\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "series",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "33285931-8a81-443f-90a8-3e86fa3cec46",
      "documentation": "remove the series type corresponding to the supplied ID",
      "method": "delete",
      "endpoint": "seriestypes/:id",
      "responses": [
        {
          "uuid": "650e3066-c177-4dca-81af-20c68606535a",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "series type removed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9cb9dc48-17b3-4132-95ff-2ec6511ee50d",
      "documentation": "request an asynchronous update of all series, labelling appropriate series with the series type corresponding to the supplied ID.",
      "method": "put",
      "endpoint": "seriestypes/:id",
      "responses": [
        {
          "uuid": "446bd592-02ec-4ef3-b623-5bbf313a707a",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "update successfully added to queue of series type updates",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8d856e6c-9129-4b6e-9b61-c5a82609485d",
      "documentation": "Returns a list of currently available data sources. Possible source types are user - data imported by an API call by a user, box - data received from a remote box, directory - data imported via a watched directory, import - data imported into slicebox using import sessions, or scp - data received from a PACS.",
      "method": "get",
      "endpoint": "sources",
      "responses": [
        {
          "uuid": "19189064-ccb0-4826-979a-b545cfa3c3b1",
          "body": "[\n  {\n    \"sourceId\": {{faker 'random.number'}},\n    \"sourceName\": \"\",\n    \"sourceType\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "currently available sources",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "981ef141-41e7-4d02-8a9c-a15213334c47",
      "documentation": "No-op route for checking whether the service is alive or not",
      "method": "get",
      "endpoint": "system/health",
      "responses": [
        {
          "uuid": "9e5d38dd-e76e-4ef3-91c4-d26e4a911128",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The service is up and running",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "24ae9c66-17a9-45e0-8117-392d16b5c0f3",
      "documentation": "stop and shut down slicebox",
      "method": "post",
      "endpoint": "system/stop",
      "responses": [
        {
          "uuid": "b4d8a53e-12a1-4cda-8586-9d1ae6de330b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "shutdown message",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "eeb91fd6-3165-4c7e-b238-5dd596776b1b",
      "documentation": "add an image (dataset) as part of a transaction. This method is used when sending images using the push method to a public slicebox.",
      "method": "post",
      "endpoint": "transactions/:token/image",
      "responses": [
        {
          "uuid": "e7bff23d-28d4-4103-8927-83be9c218cac",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "image data received",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/octet-stream"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9cdddb5e-8eef-45eb-ad31-09d911034608",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "unauthorized, invalid token",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/octet-stream"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "63cdcda8-bfe0-4bb9-ad3c-1376fdb5e0c8",
      "documentation": "fetch an image from the connected box as part of a transaction. This method is used when sending images using the poll method from a public slicebox.",
      "method": "get",
      "endpoint": "transactions/:token/outgoing",
      "responses": [
        {
          "uuid": "e5913f98-27a3-464c-bbfe-fe6b02b3588d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "binary data of dataset",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/octet-stream"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a1a44d2a-688d-4876-a28d-79e31b4a5eda",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "unauthorized, invalid token",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/octet-stream"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "61bab692-a488-434f-8f81-7a3f78a38130",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "no outgoing trensaction and/or image found for the supplied transaction id and transaction image id",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/octet-stream"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d022123c-98c6-4ead-bf39-1f10daa88039",
      "documentation": "signal that the supplied outgoing transaction and image was successfully received and can be marked as sent. This method is used when sending images using the poll method from a public slicebox.",
      "method": "post",
      "endpoint": "transactions/:token/outgoing/done",
      "responses": [
        {
          "uuid": "312f9d74-5c1f-484c-8d6f-e1c4d13b9976",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "done message received",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "edc21783-a8ae-4fc8-85ea-8913a9bb8925",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "unauthorized, invalid token",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c6af246a-780a-4d34-a32c-8531657caf0f",
      "documentation": "signal that the image corresponding to the supplied outgoing transaction and image could not be read or stored properly on the receiving side, and that the transaction should be marked as failed.",
      "method": "post",
      "endpoint": "transactions/:token/outgoing/failed",
      "responses": [
        {
          "uuid": "024b5cfb-98cb-4032-8a5f-1e3345abee8d",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "failed message received",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "480da697-08a6-4d3d-a8df-db7bb2919652",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "unauthorized, invalid token",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "060322af-e0c3-4785-b562-560a3ea6cf81",
      "documentation": "get next outgoing transaction and image (information on the next image that the connected box wishes to send to you), if any. This method is used when sending images using the poll method from a public slicebox.",
      "method": "get",
      "endpoint": "transactions/:token/outgoing/poll",
      "responses": [
        {
          "uuid": "d6b436fa-bb5c-4ec9-8dc3-e36904e64b3e",
          "body": "[\n  {\n    \"image\": {\n      \"id\": {{faker 'random.number'}},\n      \"imageId\": {{faker 'random.number'}},\n      \"outgoingTransactionId\": {{faker 'random.number'}},\n      \"sent\": {{faker 'random.boolean'}},\n      \"sequenceNumber\": {{faker 'random.number'}}\n    },\n    \"transaction\": {\n      \"boxId\": {{faker 'random.number'}},\n      \"boxName\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"profile\": {\n        \"options\": [\n          {\n            \"description\": \"\",\n            \"name\": \"\",\n            \"rank\": {{faker 'random.number'}},\n            \"title\": \"\"\n          }\n        ]\n      },\n      \"sentImageCount\": {{faker 'random.number'}},\n      \"status\": \"\",\n      \"totalImageCount\": {{faker 'random.number'}},\n      \"updated\": {{faker 'random.number'}}\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "next outgoing transaction and image information block",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7e5f5800-2909-447b-b960-554f756356b9",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "unauthorized, invalid token",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "31bc117a-4967-4dc3-92ff-f9ab5440509f",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "there are currently no outgoing transactions to fetch for the box connection with the supplied token",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b034a8ba-1790-42c4-820f-f5092547b555",
      "documentation": "get the status of the remote incoming transaction with the supplied transaction ID",
      "method": "get",
      "endpoint": "transactions/:token/status",
      "responses": [
        {
          "uuid": "977917a2-40b4-43ed-9c11-98fb0eaaacdb",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "string representation of the transaction status (FINISHED, FAILED, WAITING or PROCESSING)",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "57a874e3-ebd6-4419-a625-22a3f1e9f0d8",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "unauthorized, invalid token",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e27750bb-a6d0-4325-b624-ecf7b765c2f6",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "no transaction found for the supplied transaction ID and box token",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "815eb653-341e-4063-a630-4ed698706a84",
      "documentation": "update the status of the transaction with the supplied ID",
      "method": "put",
      "endpoint": "transactions/:token/status",
      "responses": [
        {
          "uuid": "ae7836ce-655f-4cd2-a1aa-c689c138feb0",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "status update successfully applied to transaction",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0cf0e7c0-451e-4f6d-b5fb-429943de7a2c",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "no transaction found for the supplied transaction ID and box token",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fb73e191-ecc7-4525-b055-874292422073",
      "documentation": "Returns all users of slicebox",
      "method": "get",
      "endpoint": "users",
      "responses": [
        {
          "uuid": "8a663dc4-aa9c-4492-9e3f-77d84f192357",
          "body": "[\n  {\n    \"hashedPassword\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"role\": \"\",\n    \"user\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "user response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b945fbcd-627c-4cd0-9edd-877976f7044c",
      "documentation": "Creates a new user. Dupicates are accepted but not added.",
      "method": "post",
      "endpoint": "users",
      "responses": [
        {
          "uuid": "0f909825-824a-450c-b5ff-0f24c43c42c4",
          "body": "{\n  \"hashedPassword\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"role\": \"\",\n  \"user\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "user response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b28b7687-055a-4f01-a4f7-624d020af3ef",
      "documentation": "obtain information on the currently logged in user as specified by the supplied session cookie, IP address and user agent.",
      "method": "get",
      "endpoint": "users/current",
      "responses": [
        {
          "uuid": "7a69c2ad-3e52-42a4-89d6-7e93581b84a2",
          "body": "{\n  \"id\": {{faker 'random.number'}},\n  \"role\": \"\",\n  \"user\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "user information",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "99a2ab18-1f99-4fd1-a9d7-6bf96a70842f",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "no user found for the supplied session cookie, IP address and user agent, or if any of the required headers are missing.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "32a03080-35f0-4414-9daf-c963f0157b87",
      "documentation": "Obtain a session cookie that can be used to authenticate future API calls from the present IP address and with the present user agent.",
      "method": "post",
      "endpoint": "users/login",
      "responses": [
        {
          "uuid": "95eea472-b1f3-4a7d-b54b-8aa0337abe3e",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "if the supplied credentials are valid. The response headers will contain Set-Cookie.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aefa733d-fa82-41bf-ab50-62b4ca13c972",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "if the supplied credentials are invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "288c3ac5-96a2-4e11-8806-b81ecb576beb",
      "documentation": "Logout the current user by responding with a delete cookie header removing the session cookie for this user.",
      "method": "post",
      "endpoint": "users/logout",
      "responses": [
        {
          "uuid": "d0617a3d-fb26-45b9-9591-7f4742ee086b",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "the user was logged out",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "79311da6-7c4f-43ea-bcf1-ada58ac77217",
      "documentation": "deletes a single user based on the ID supplied",
      "method": "delete",
      "endpoint": "users/:id",
      "responses": [
        {
          "uuid": "e1a45e2e-19f3-480f-806a-b3be583a7a18",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "user deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}