{
  "uuid": "b2a81a2a-170d-45a0-a4e8-2425410aa88c",
  "lastMigration": 19,
  "name": "AWS App Runner",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "1b259762-1f76-4c97-a57a-da7e1766217c",
      "documentation": "<p>Associate your own domain name with the AWS App Runner subdomain URL of your App Runner service.</p> <p>After you call <code>AssociateCustomDomain</code> and receive a successful response, use the information in the <a>CustomDomain</a> record that's returned to add CNAME records to your Domain Name System (DNS). For each mapped domain name, add a mapping to the target App Runner subdomain and one or more certificate validation records. App Runner then performs DNS validation to verify that you own or control the domain name that you associated. App Runner tracks domain validity in a certificate stored in <a href=\"https://docs.aws.amazon.com/acm/latest/userguide\">AWS Certificate Manager (ACM)</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AppRunner.AssociateCustomDomain",
      "responses": [
        {
          "uuid": "59bc9166-c139-4583-b5c1-4ccb7de199c9",
          "body": "{\n  \"DNSTarget\": \"\",\n  \"ServiceArn\": \"\",\n  \"CustomDomain\": {\n    \"DomainName\": \"\",\n    \"EnableWWWSubdomain\": {{faker 'random.boolean'}},\n    \"CertificateValidationRecords\": [\n      {\n        \"Name\": \"\",\n        \"Type\": \"\",\n        \"Value\": \"\",\n        \"Status\": \"\"\n      }\n    ],\n    \"Status\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "86526b80-9591-469c-a7dd-3755f6eadd9b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d55f465f-fcd0-427f-8edc-b26babf3ca9b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "025a71fb-daf1-4861-93a2-e12f2a2da0be",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "15b3ee8a-906f-449c-bd1f-0b82755ae9b1",
      "documentation": "<p>Create an AWS App Runner automatic scaling configuration resource. App Runner requires this resource when you create App Runner services that require non-default auto scaling settings. You can share an auto scaling configuration across multiple services.</p> <p>Create multiple revisions of a configuration by using the same <code>AutoScalingConfigurationName</code> and different <code>AutoScalingConfigurationRevision</code> values. When you create a service, you can set it to use the latest active revision of an auto scaling configuration or a specific revision.</p> <p>Configure a higher <code>MinSize</code> to increase the spread of your App Runner service over more Availability Zones in the AWS Region. The tradeoff is a higher minimal cost.</p> <p>Configure a lower <code>MaxSize</code> to control your cost. The tradeoff is lower responsiveness during peak demand.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AppRunner.CreateAutoScalingConfiguration",
      "responses": [
        {
          "uuid": "25a01e29-cd57-4427-9849-1fe4b29297cd",
          "body": "{\n  \"AutoScalingConfiguration\": {\n    \"AutoScalingConfigurationArn\": \"\",\n    \"AutoScalingConfigurationName\": \"\",\n    \"AutoScalingConfigurationRevision\": {{faker 'random.number'}},\n    \"Latest\": {{faker 'random.boolean'}},\n    \"Status\": \"\",\n    \"MaxConcurrency\": {{faker 'random.number'}},\n    \"MinSize\": {{faker 'random.number'}},\n    \"MaxSize\": {{faker 'random.number'}},\n    \"CreatedAt\": \"{{faker 'date.recent' 365}}\",\n    \"DeletedAt\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "55a73b4f-8ed3-4c33-a97d-4bb10d9d8c7c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "da5aa833-09aa-4b6e-8f5b-c94c6dad121a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5a7a89e6-f8b6-42ae-b94d-2d88b472f7ee",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ServiceQuotaExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "37160ece-344e-4634-931d-c5bca27cab66",
      "documentation": "<p>Create an AWS App Runner connection resource. App Runner requires a connection resource when you create App Runner services that access private repositories from certain third-party providers. You can share a connection across multiple services.</p> <p>A connection resource is needed to access GitHub repositories. GitHub requires a user interface approval process through the App Runner console before you can use the connection.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AppRunner.CreateConnection",
      "responses": [
        {
          "uuid": "4fb1e0fe-ab8c-4a9e-b841-23cf64199c42",
          "body": "{\n  \"Connection\": {\n    \"ConnectionName\": \"\",\n    \"ConnectionArn\": \"\",\n    \"ProviderType\": \"\",\n    \"Status\": \"\",\n    \"CreatedAt\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e00d3fcf-fe47-4eed-b22f-1187600d88ff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b1f2413f-1821-4db7-8fb5-7d6e91bc4418",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b658473f-6f64-442f-8c85-3fb105ddc5ab",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ServiceQuotaExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c7b2d687-4e34-4419-b940-c3b2b19542c9",
      "documentation": "<p>Create an AWS App Runner service. After the service is created, the action also automatically starts a deployment.</p> <p>This is an asynchronous operation. On a successful call, you can use the returned <code>OperationId</code> and the <a href=\"https://docs.aws.amazon.com/apprunner/latest/api/API_ListOperations.html\">ListOperations</a> call to track the operation's progress.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AppRunner.CreateService",
      "responses": [
        {
          "uuid": "54fe2d19-1e44-499e-9087-29ca478c1b68",
          "body": "{\n  \"Service\": {\n    \"ServiceName\": \"\",\n    \"ServiceId\": \"\",\n    \"ServiceArn\": \"\",\n    \"ServiceUrl\": \"\",\n    \"CreatedAt\": \"{{faker 'date.recent' 365}}\",\n    \"UpdatedAt\": \"{{faker 'date.recent' 365}}\",\n    \"DeletedAt\": \"{{faker 'date.recent' 365}}\",\n    \"Status\": \"\",\n    \"SourceConfiguration\": {\n      \"CodeRepository\": {\n        \"RepositoryUrl\": \"\",\n        \"SourceCodeVersion\": {\n          \"Type\": \"\",\n          \"Value\": \"\"\n        },\n        \"CodeConfiguration\": {\n          \"ConfigurationSource\": \"\",\n          \"CodeConfigurationValues\": {\n            \"Runtime\": \"\",\n            \"BuildCommand\": \"\",\n            \"StartCommand\": \"\",\n            \"Port\": \"\",\n            \"RuntimeEnvironmentVariables\": {}\n          }\n        }\n      },\n      \"ImageRepository\": {\n        \"ImageIdentifier\": \"\",\n        \"ImageConfiguration\": {\n          \"RuntimeEnvironmentVariables\": {},\n          \"StartCommand\": \"\",\n          \"Port\": \"\"\n        },\n        \"ImageRepositoryType\": \"\"\n      },\n      \"AutoDeploymentsEnabled\": {{faker 'random.boolean'}},\n      \"AuthenticationConfiguration\": {\n        \"ConnectionArn\": \"\",\n        \"AccessRoleArn\": \"\"\n      }\n    },\n    \"InstanceConfiguration\": {\n      \"Cpu\": \"\",\n      \"Memory\": \"\",\n      \"InstanceRoleArn\": \"\"\n    },\n    \"EncryptionConfiguration\": {\n      \"KmsKey\": \"\"\n    },\n    \"HealthCheckConfiguration\": {\n      \"Protocol\": \"\",\n      \"Path\": \"\",\n      \"Interval\": {{faker 'random.number'}},\n      \"Timeout\": {{faker 'random.number'}},\n      \"HealthyThreshold\": {{faker 'random.number'}},\n      \"UnhealthyThreshold\": {{faker 'random.number'}}\n    },\n    \"AutoScalingConfigurationSummary\": {\n      \"AutoScalingConfigurationArn\": \"\",\n      \"AutoScalingConfigurationName\": \"\",\n      \"AutoScalingConfigurationRevision\": {{faker 'random.number'}}\n    }\n  },\n  \"OperationId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b82e3c31-b512-4ebb-b524-9424df9da494",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8088c1f3-65c9-4ed8-9ce0-48d34cd73b96",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b69e02ca-0cd4-4b00-85d4-3319573c9348",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ServiceQuotaExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1cc29878-74cc-435b-9a5c-05718485c33c",
      "documentation": "Delete an AWS App Runner automatic scaling configuration resource. You can delete a specific revision or the latest active revision. You can't delete a configuration that's used by one or more App Runner services.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AppRunner.DeleteAutoScalingConfiguration",
      "responses": [
        {
          "uuid": "9177c5bb-9cb0-436e-bbc6-0ddf48607bcb",
          "body": "{\n  \"AutoScalingConfiguration\": {\n    \"AutoScalingConfigurationArn\": \"\",\n    \"AutoScalingConfigurationName\": \"\",\n    \"AutoScalingConfigurationRevision\": {{faker 'random.number'}},\n    \"Latest\": {{faker 'random.boolean'}},\n    \"Status\": \"\",\n    \"MaxConcurrency\": {{faker 'random.number'}},\n    \"MinSize\": {{faker 'random.number'}},\n    \"MaxSize\": {{faker 'random.number'}},\n    \"CreatedAt\": \"{{faker 'date.recent' 365}}\",\n    \"DeletedAt\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "55324eb3-b58f-4f9b-b83e-2db99040555c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b23ce8e3-a59d-4406-a2c4-2d0d30ad5da8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "772a68aa-ae9b-4b6e-b73c-efa3d3b87ced",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7e46f25a-fb05-418d-a98b-7b6129af3861",
      "documentation": "Delete an AWS App Runner connection. You must first ensure that there are no running App Runner services that use this connection. If there are any, the <code>DeleteConnection</code> action fails.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AppRunner.DeleteConnection",
      "responses": [
        {
          "uuid": "db4aea56-5c15-49bb-8941-af236c5eef30",
          "body": "{\n  \"Connection\": {\n    \"ConnectionName\": \"\",\n    \"ConnectionArn\": \"\",\n    \"ProviderType\": \"\",\n    \"Status\": \"\",\n    \"CreatedAt\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "72d359c6-f003-4933-aa25-e325f898e03f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "70b8c0d6-9718-4abd-b0a5-f034fa93e908",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2804fcff-eaff-4a91-b945-41271df8b127",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3a97ba0f-8485-4496-a435-d3999ed78548",
      "documentation": "<p>Delete an AWS App Runner service.</p> <p>This is an asynchronous operation. On a successful call, you can use the returned <code>OperationId</code> and the <a>ListOperations</a> call to track the operation's progress.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AppRunner.DeleteService",
      "responses": [
        {
          "uuid": "00d2cf05-2c40-493b-9ebf-721e2a6021fe",
          "body": "{\n  \"Service\": {\n    \"ServiceName\": \"\",\n    \"ServiceId\": \"\",\n    \"ServiceArn\": \"\",\n    \"ServiceUrl\": \"\",\n    \"CreatedAt\": \"{{faker 'date.recent' 365}}\",\n    \"UpdatedAt\": \"{{faker 'date.recent' 365}}\",\n    \"DeletedAt\": \"{{faker 'date.recent' 365}}\",\n    \"Status\": \"\",\n    \"SourceConfiguration\": {\n      \"CodeRepository\": {\n        \"RepositoryUrl\": \"\",\n        \"SourceCodeVersion\": {\n          \"Type\": \"\",\n          \"Value\": \"\"\n        },\n        \"CodeConfiguration\": {\n          \"ConfigurationSource\": \"\",\n          \"CodeConfigurationValues\": {\n            \"Runtime\": \"\",\n            \"BuildCommand\": \"\",\n            \"StartCommand\": \"\",\n            \"Port\": \"\",\n            \"RuntimeEnvironmentVariables\": {}\n          }\n        }\n      },\n      \"ImageRepository\": {\n        \"ImageIdentifier\": \"\",\n        \"ImageConfiguration\": {\n          \"RuntimeEnvironmentVariables\": {},\n          \"StartCommand\": \"\",\n          \"Port\": \"\"\n        },\n        \"ImageRepositoryType\": \"\"\n      },\n      \"AutoDeploymentsEnabled\": {{faker 'random.boolean'}},\n      \"AuthenticationConfiguration\": {\n        \"ConnectionArn\": \"\",\n        \"AccessRoleArn\": \"\"\n      }\n    },\n    \"InstanceConfiguration\": {\n      \"Cpu\": \"\",\n      \"Memory\": \"\",\n      \"InstanceRoleArn\": \"\"\n    },\n    \"EncryptionConfiguration\": {\n      \"KmsKey\": \"\"\n    },\n    \"HealthCheckConfiguration\": {\n      \"Protocol\": \"\",\n      \"Path\": \"\",\n      \"Interval\": {{faker 'random.number'}},\n      \"Timeout\": {{faker 'random.number'}},\n      \"HealthyThreshold\": {{faker 'random.number'}},\n      \"UnhealthyThreshold\": {{faker 'random.number'}}\n    },\n    \"AutoScalingConfigurationSummary\": {\n      \"AutoScalingConfigurationArn\": \"\",\n      \"AutoScalingConfigurationName\": \"\",\n      \"AutoScalingConfigurationRevision\": {{faker 'random.number'}}\n    }\n  },\n  \"OperationId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2adc2cc8-2dc4-4ad2-a0f9-bf95314a695e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8c6bf8a1-1a19-49d9-9470-d1160db51dca",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e263f259-a458-41fd-a9b7-fe4b570de715",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e9d6d4a3-6cef-4155-b935-d7291b2edaf3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "50076e66-3680-4f08-9427-c2d2fffa0cc7",
      "documentation": "Return a full description of an AWS App Runner automatic scaling configuration resource.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AppRunner.DescribeAutoScalingConfiguration",
      "responses": [
        {
          "uuid": "0a909c8f-26b3-438e-b6eb-42f606a02e03",
          "body": "{\n  \"AutoScalingConfiguration\": {\n    \"AutoScalingConfigurationArn\": \"\",\n    \"AutoScalingConfigurationName\": \"\",\n    \"AutoScalingConfigurationRevision\": {{faker 'random.number'}},\n    \"Latest\": {{faker 'random.boolean'}},\n    \"Status\": \"\",\n    \"MaxConcurrency\": {{faker 'random.number'}},\n    \"MinSize\": {{faker 'random.number'}},\n    \"MaxSize\": {{faker 'random.number'}},\n    \"CreatedAt\": \"{{faker 'date.recent' 365}}\",\n    \"DeletedAt\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8df07396-bf63-4225-9582-e0dd22ddc218",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3f4950fa-2792-419d-bed9-33aaa8cde8e6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ff706e4b-618d-4470-a43a-6ef4dfb13f96",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "adeae282-d3e2-4ca9-9de8-638c552b845f",
      "documentation": "Return a description of custom domain names that are associated with an AWS App Runner service.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AppRunner.DescribeCustomDomains",
      "responses": [
        {
          "uuid": "bc4949d0-6dbe-4e9e-816d-db75631c0c6f",
          "body": "{\n  \"DNSTarget\": \"\",\n  \"ServiceArn\": \"\",\n  \"CustomDomains\": [\n    {\n      \"DomainName\": \"\",\n      \"EnableWWWSubdomain\": {{faker 'random.boolean'}},\n      \"CertificateValidationRecords\": [\n        {\n          \"Name\": \"\",\n          \"Type\": \"\",\n          \"Value\": \"\",\n          \"Status\": \"\"\n        }\n      ],\n      \"Status\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "78257af3-56bf-4f03-a314-a4928a109746",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "31a09e67-d875-4dfa-9edd-1caf99bcc4c3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5db1e65a-1838-4b38-a144-a6bb94c56d7e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f09fdae6-82fa-414d-8f0f-c8abf70c84fc",
      "documentation": "Return a full description of an AWS App Runner service.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AppRunner.DescribeService",
      "responses": [
        {
          "uuid": "92f63758-466e-4f42-bf3c-585273a3bc4e",
          "body": "{\n  \"Service\": {\n    \"ServiceName\": \"\",\n    \"ServiceId\": \"\",\n    \"ServiceArn\": \"\",\n    \"ServiceUrl\": \"\",\n    \"CreatedAt\": \"{{faker 'date.recent' 365}}\",\n    \"UpdatedAt\": \"{{faker 'date.recent' 365}}\",\n    \"DeletedAt\": \"{{faker 'date.recent' 365}}\",\n    \"Status\": \"\",\n    \"SourceConfiguration\": {\n      \"CodeRepository\": {\n        \"RepositoryUrl\": \"\",\n        \"SourceCodeVersion\": {\n          \"Type\": \"\",\n          \"Value\": \"\"\n        },\n        \"CodeConfiguration\": {\n          \"ConfigurationSource\": \"\",\n          \"CodeConfigurationValues\": {\n            \"Runtime\": \"\",\n            \"BuildCommand\": \"\",\n            \"StartCommand\": \"\",\n            \"Port\": \"\",\n            \"RuntimeEnvironmentVariables\": {}\n          }\n        }\n      },\n      \"ImageRepository\": {\n        \"ImageIdentifier\": \"\",\n        \"ImageConfiguration\": {\n          \"RuntimeEnvironmentVariables\": {},\n          \"StartCommand\": \"\",\n          \"Port\": \"\"\n        },\n        \"ImageRepositoryType\": \"\"\n      },\n      \"AutoDeploymentsEnabled\": {{faker 'random.boolean'}},\n      \"AuthenticationConfiguration\": {\n        \"ConnectionArn\": \"\",\n        \"AccessRoleArn\": \"\"\n      }\n    },\n    \"InstanceConfiguration\": {\n      \"Cpu\": \"\",\n      \"Memory\": \"\",\n      \"InstanceRoleArn\": \"\"\n    },\n    \"EncryptionConfiguration\": {\n      \"KmsKey\": \"\"\n    },\n    \"HealthCheckConfiguration\": {\n      \"Protocol\": \"\",\n      \"Path\": \"\",\n      \"Interval\": {{faker 'random.number'}},\n      \"Timeout\": {{faker 'random.number'}},\n      \"HealthyThreshold\": {{faker 'random.number'}},\n      \"UnhealthyThreshold\": {{faker 'random.number'}}\n    },\n    \"AutoScalingConfigurationSummary\": {\n      \"AutoScalingConfigurationArn\": \"\",\n      \"AutoScalingConfigurationName\": \"\",\n      \"AutoScalingConfigurationRevision\": {{faker 'random.number'}}\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9a950889-778d-434d-a9de-865c110635fa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1eebd9f2-5236-4e88-9bac-d63fd01cdf40",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c42ac764-2818-4462-a587-59e0e5780df4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9ce16bd1-c8ce-4d24-958e-8754f072e4c9",
      "documentation": "<p>Disassociate a custom domain name from an AWS App Runner service.</p> <p>Certificates tracking domain validity are associated with a custom domain and are stored in <a href=\"https://docs.aws.amazon.com/acm/latest/userguide\">AWS Certificate Manager (ACM)</a>. These certificates aren't deleted as part of this action. App Runner delays certificate deletion for 30 days after a domain is disassociated from your service.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AppRunner.DisassociateCustomDomain",
      "responses": [
        {
          "uuid": "1a0400d8-d704-4f77-9b95-44aa72899139",
          "body": "{\n  \"DNSTarget\": \"\",\n  \"ServiceArn\": \"\",\n  \"CustomDomain\": {\n    \"DomainName\": \"\",\n    \"EnableWWWSubdomain\": {{faker 'random.boolean'}},\n    \"CertificateValidationRecords\": [\n      {\n        \"Name\": \"\",\n        \"Type\": \"\",\n        \"Value\": \"\",\n        \"Status\": \"\"\n      }\n    ],\n    \"Status\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "850fd1b4-9dcb-4114-bb3e-da021af7581f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "200a73ef-a005-4bc4-84d0-fe6323a943d6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b1f131c1-f490-48bf-8928-e63fa052fe0e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c64c56bc-ff6a-461e-ad05-9148b4e0c52d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "39d8e9ed-6834-4c66-a8a1-6dad1365f8a9",
      "documentation": "Returns a list of AWS App Runner automatic scaling configurations in your AWS account. You can query the revisions for a specific configuration name or the revisions for all configurations in your account. You can optionally query only the latest revision of each requested name.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AppRunner.ListAutoScalingConfigurations",
      "responses": [
        {
          "uuid": "6ec89e31-69c3-4842-9f03-cf30e25d2187",
          "body": "{\n  \"AutoScalingConfigurationSummaryList\": [\n    {\n      \"AutoScalingConfigurationArn\": \"\",\n      \"AutoScalingConfigurationName\": \"\",\n      \"AutoScalingConfigurationRevision\": {{faker 'random.number'}}\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9f221124-9e05-4033-a42a-57d7a48b703b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e71cab5a-8ef2-4949-9034-91f71feb092b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "30f637a3-2041-45be-8cc8-0ff0f3afbedc",
      "documentation": "Returns a list of AWS App Runner connections that are associated with your AWS account.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AppRunner.ListConnections",
      "responses": [
        {
          "uuid": "1d96c0d3-a8dc-418a-938b-b6b8a6e3a568",
          "body": "{\n  \"ConnectionSummaryList\": [\n    {\n      \"ConnectionName\": \"\",\n      \"ConnectionArn\": \"\",\n      \"ProviderType\": \"\",\n      \"Status\": \"\",\n      \"CreatedAt\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a4504022-5748-4d66-ba3d-cd3a28d11324",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ec138beb-d1dd-49c6-9ec8-678da6c1ce67",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "72cca636-eace-41b5-bfd8-322baa22ec04",
      "documentation": "<p>Return a list of operations that occurred on an AWS App Runner service.</p> <p>The resulting list of <a>OperationSummary</a> objects is sorted in reverse chronological order. The first object on the list represents the last started operation.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AppRunner.ListOperations",
      "responses": [
        {
          "uuid": "adca3304-498f-4c56-9a15-b01a49572cc1",
          "body": "{\n  \"OperationSummaryList\": [\n    {\n      \"Id\": \"\",\n      \"Type\": \"\",\n      \"Status\": \"\",\n      \"TargetArn\": \"\",\n      \"StartedAt\": \"{{faker 'date.recent' 365}}\",\n      \"EndedAt\": \"{{faker 'date.recent' 365}}\",\n      \"UpdatedAt\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e5398093-511f-420b-86b7-23bd841de6f7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a45323c8-9b2f-4db1-a216-bd6c081361f9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2f6f73c1-cc02-4c4c-b1b5-d04a95ff1d38",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "593256cb-e2c3-4b71-ac66-826b14ea4956",
      "documentation": "Returns a list of running AWS App Runner services in your AWS account.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AppRunner.ListServices",
      "responses": [
        {
          "uuid": "4d5a4eac-9533-4ead-8076-08a66c2e5355",
          "body": "{\n  \"ServiceSummaryList\": [\n    {\n      \"ServiceName\": \"\",\n      \"ServiceId\": \"\",\n      \"ServiceArn\": \"\",\n      \"ServiceUrl\": \"\",\n      \"CreatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"UpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"Status\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4e8c3033-3b25-47be-91f9-d020a9b7a0df",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ca173e8e-5a74-4578-8806-80abaffec005",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "29b8a4c0-2da0-4d19-aa31-976919eff0e8",
      "documentation": "List tags that are associated with for an AWS App Runner resource. The response contains a list of tag key-value pairs.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AppRunner.ListTagsForResource",
      "responses": [
        {
          "uuid": "5a047346-cc9c-468b-838d-f92fb94e639d",
          "body": "{\n  \"Tags\": [\n    {\n      \"Key\": \"\",\n      \"Value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e6204201-ecf6-4ed5-85c7-8430f62bc7fe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a3cf7401-179a-48b7-8adf-dbf45ef8d1fb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f7ecd331-347c-488a-95ba-a7bb3a55c56a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7f48ec2a-ce7c-4ade-b696-acb147f9b061",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e9dfc54c-6391-45f8-8660-cf3335711c53",
      "documentation": "<p>Pause an active AWS App Runner service. App Runner reduces compute capacity for the service to zero and loses state (for example, ephemeral storage is removed).</p> <p>This is an asynchronous operation. On a successful call, you can use the returned <code>OperationId</code> and the <a>ListOperations</a> call to track the operation's progress.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AppRunner.PauseService",
      "responses": [
        {
          "uuid": "8e496947-c616-4bdc-a060-d23098a1d737",
          "body": "{\n  \"Service\": {\n    \"ServiceName\": \"\",\n    \"ServiceId\": \"\",\n    \"ServiceArn\": \"\",\n    \"ServiceUrl\": \"\",\n    \"CreatedAt\": \"{{faker 'date.recent' 365}}\",\n    \"UpdatedAt\": \"{{faker 'date.recent' 365}}\",\n    \"DeletedAt\": \"{{faker 'date.recent' 365}}\",\n    \"Status\": \"\",\n    \"SourceConfiguration\": {\n      \"CodeRepository\": {\n        \"RepositoryUrl\": \"\",\n        \"SourceCodeVersion\": {\n          \"Type\": \"\",\n          \"Value\": \"\"\n        },\n        \"CodeConfiguration\": {\n          \"ConfigurationSource\": \"\",\n          \"CodeConfigurationValues\": {\n            \"Runtime\": \"\",\n            \"BuildCommand\": \"\",\n            \"StartCommand\": \"\",\n            \"Port\": \"\",\n            \"RuntimeEnvironmentVariables\": {}\n          }\n        }\n      },\n      \"ImageRepository\": {\n        \"ImageIdentifier\": \"\",\n        \"ImageConfiguration\": {\n          \"RuntimeEnvironmentVariables\": {},\n          \"StartCommand\": \"\",\n          \"Port\": \"\"\n        },\n        \"ImageRepositoryType\": \"\"\n      },\n      \"AutoDeploymentsEnabled\": {{faker 'random.boolean'}},\n      \"AuthenticationConfiguration\": {\n        \"ConnectionArn\": \"\",\n        \"AccessRoleArn\": \"\"\n      }\n    },\n    \"InstanceConfiguration\": {\n      \"Cpu\": \"\",\n      \"Memory\": \"\",\n      \"InstanceRoleArn\": \"\"\n    },\n    \"EncryptionConfiguration\": {\n      \"KmsKey\": \"\"\n    },\n    \"HealthCheckConfiguration\": {\n      \"Protocol\": \"\",\n      \"Path\": \"\",\n      \"Interval\": {{faker 'random.number'}},\n      \"Timeout\": {{faker 'random.number'}},\n      \"HealthyThreshold\": {{faker 'random.number'}},\n      \"UnhealthyThreshold\": {{faker 'random.number'}}\n    },\n    \"AutoScalingConfigurationSummary\": {\n      \"AutoScalingConfigurationArn\": \"\",\n      \"AutoScalingConfigurationName\": \"\",\n      \"AutoScalingConfigurationRevision\": {{faker 'random.number'}}\n    }\n  },\n  \"OperationId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eeb42e0c-e733-4519-8d58-06a82dc05d0e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a054075d-0710-4667-bc3e-4edfa2cd0324",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5c67e5ca-d2a0-4461-87bd-34e0ad1ac347",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4c9a7370-5ddd-4468-8fcd-d5eab5d58c46",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "86d80789-be52-4d4b-b707-fd7729c1d5f0",
      "documentation": "<p>Resume an active AWS App Runner service. App Runner provisions compute capacity for the service.</p> <p>This is an asynchronous operation. On a successful call, you can use the returned <code>OperationId</code> and the <a>ListOperations</a> call to track the operation's progress.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AppRunner.ResumeService",
      "responses": [
        {
          "uuid": "dfdc06df-8acf-4b10-a892-1c822661d05c",
          "body": "{\n  \"Service\": {\n    \"ServiceName\": \"\",\n    \"ServiceId\": \"\",\n    \"ServiceArn\": \"\",\n    \"ServiceUrl\": \"\",\n    \"CreatedAt\": \"{{faker 'date.recent' 365}}\",\n    \"UpdatedAt\": \"{{faker 'date.recent' 365}}\",\n    \"DeletedAt\": \"{{faker 'date.recent' 365}}\",\n    \"Status\": \"\",\n    \"SourceConfiguration\": {\n      \"CodeRepository\": {\n        \"RepositoryUrl\": \"\",\n        \"SourceCodeVersion\": {\n          \"Type\": \"\",\n          \"Value\": \"\"\n        },\n        \"CodeConfiguration\": {\n          \"ConfigurationSource\": \"\",\n          \"CodeConfigurationValues\": {\n            \"Runtime\": \"\",\n            \"BuildCommand\": \"\",\n            \"StartCommand\": \"\",\n            \"Port\": \"\",\n            \"RuntimeEnvironmentVariables\": {}\n          }\n        }\n      },\n      \"ImageRepository\": {\n        \"ImageIdentifier\": \"\",\n        \"ImageConfiguration\": {\n          \"RuntimeEnvironmentVariables\": {},\n          \"StartCommand\": \"\",\n          \"Port\": \"\"\n        },\n        \"ImageRepositoryType\": \"\"\n      },\n      \"AutoDeploymentsEnabled\": {{faker 'random.boolean'}},\n      \"AuthenticationConfiguration\": {\n        \"ConnectionArn\": \"\",\n        \"AccessRoleArn\": \"\"\n      }\n    },\n    \"InstanceConfiguration\": {\n      \"Cpu\": \"\",\n      \"Memory\": \"\",\n      \"InstanceRoleArn\": \"\"\n    },\n    \"EncryptionConfiguration\": {\n      \"KmsKey\": \"\"\n    },\n    \"HealthCheckConfiguration\": {\n      \"Protocol\": \"\",\n      \"Path\": \"\",\n      \"Interval\": {{faker 'random.number'}},\n      \"Timeout\": {{faker 'random.number'}},\n      \"HealthyThreshold\": {{faker 'random.number'}},\n      \"UnhealthyThreshold\": {{faker 'random.number'}}\n    },\n    \"AutoScalingConfigurationSummary\": {\n      \"AutoScalingConfigurationArn\": \"\",\n      \"AutoScalingConfigurationName\": \"\",\n      \"AutoScalingConfigurationRevision\": {{faker 'random.number'}}\n    }\n  },\n  \"OperationId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "16f45c7a-4845-4361-ac9e-4273fafdf27b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3c52f479-199d-436f-9f37-5d4568bb3053",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "434246dc-9a60-43f2-8c01-5a605dd1102b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4eb81b20-3cba-43e9-8cba-16627209c7fd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5700ddbb-d883-48ee-a503-e1063917adb2",
      "documentation": "<p>Initiate a manual deployment of the latest commit in a source code repository or the latest image in a source image repository to an AWS App Runner service.</p> <p>For a source code repository, App Runner retrieves the commit and builds a Docker image. For a source image repository, App Runner retrieves the latest Docker image. In both cases, App Runner then deploys the new image to your service and starts a new container instance.</p> <p>This is an asynchronous operation. On a successful call, you can use the returned <code>OperationId</code> and the <a>ListOperations</a> call to track the operation's progress.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AppRunner.StartDeployment",
      "responses": [
        {
          "uuid": "5f792cfe-e6cb-4108-a405-a3804e9d0638",
          "body": "{\n  \"OperationId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bf4fae81-48da-481c-ae32-c4c7d8f6e140",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a0013687-189f-42f1-8f6e-2abd086887db",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f2a53e43-061e-41dc-9f24-bf5d444c1e4a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a939c3dd-3392-4d1e-8dac-a6e831e1c7db",
      "documentation": "Add tags to, or update the tag values of, an App Runner resource. A tag is a key-value pair.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AppRunner.TagResource",
      "responses": [
        {
          "uuid": "5b63d243-9b2b-4fc7-98ff-1e18b3098ed0",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "db265237-8591-437d-ade2-fa7dc9a6eac6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2d3a95a7-e449-4c2a-a6a0-7108ccce02cb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2df952b1-2ab3-4bc3-9a75-9f758aa3021e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c3bf0194-4ddb-4a57-8e45-2f96ecfa7615",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a56b68ad-080f-4214-ad29-116456ffc562",
      "documentation": "Remove tags from an App Runner resource.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AppRunner.UntagResource",
      "responses": [
        {
          "uuid": "a8482cab-e2e6-4ddf-ab48-0c7482684e77",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "47dbe124-e7b6-42d9-9bed-57ee81d56ea7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d3d602fd-04ed-4e33-82e4-90a81481cb69",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "199fd81a-9987-4828-9048-56d58ba1c3f2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fb09bb71-a31c-40fb-bd1e-197e710d9f54",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3b74c2af-9168-484c-98bf-37291aa67d8d",
      "documentation": "<p>Update an AWS App Runner service. You can update the source configuration and instance configuration of the service. You can also update the ARN of the auto scaling configuration resource that's associated with the service. However, you can't change the name or the encryption configuration of the service. These can be set only when you create the service.</p> <p>To update the tags applied to your service, use the separate actions <a>TagResource</a> and <a>UntagResource</a>.</p> <p>This is an asynchronous operation. On a successful call, you can use the returned <code>OperationId</code> and the <a>ListOperations</a> call to track the operation's progress.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AppRunner.UpdateService",
      "responses": [
        {
          "uuid": "39771845-4a78-47d2-86f2-0cf9d53d5c40",
          "body": "{\n  \"Service\": {\n    \"ServiceName\": \"\",\n    \"ServiceId\": \"\",\n    \"ServiceArn\": \"\",\n    \"ServiceUrl\": \"\",\n    \"CreatedAt\": \"{{faker 'date.recent' 365}}\",\n    \"UpdatedAt\": \"{{faker 'date.recent' 365}}\",\n    \"DeletedAt\": \"{{faker 'date.recent' 365}}\",\n    \"Status\": \"\",\n    \"SourceConfiguration\": {\n      \"CodeRepository\": {\n        \"RepositoryUrl\": \"\",\n        \"SourceCodeVersion\": {\n          \"Type\": \"\",\n          \"Value\": \"\"\n        },\n        \"CodeConfiguration\": {\n          \"ConfigurationSource\": \"\",\n          \"CodeConfigurationValues\": {\n            \"Runtime\": \"\",\n            \"BuildCommand\": \"\",\n            \"StartCommand\": \"\",\n            \"Port\": \"\",\n            \"RuntimeEnvironmentVariables\": {}\n          }\n        }\n      },\n      \"ImageRepository\": {\n        \"ImageIdentifier\": \"\",\n        \"ImageConfiguration\": {\n          \"RuntimeEnvironmentVariables\": {},\n          \"StartCommand\": \"\",\n          \"Port\": \"\"\n        },\n        \"ImageRepositoryType\": \"\"\n      },\n      \"AutoDeploymentsEnabled\": {{faker 'random.boolean'}},\n      \"AuthenticationConfiguration\": {\n        \"ConnectionArn\": \"\",\n        \"AccessRoleArn\": \"\"\n      }\n    },\n    \"InstanceConfiguration\": {\n      \"Cpu\": \"\",\n      \"Memory\": \"\",\n      \"InstanceRoleArn\": \"\"\n    },\n    \"EncryptionConfiguration\": {\n      \"KmsKey\": \"\"\n    },\n    \"HealthCheckConfiguration\": {\n      \"Protocol\": \"\",\n      \"Path\": \"\",\n      \"Interval\": {{faker 'random.number'}},\n      \"Timeout\": {{faker 'random.number'}},\n      \"HealthyThreshold\": {{faker 'random.number'}},\n      \"UnhealthyThreshold\": {{faker 'random.number'}}\n    },\n    \"AutoScalingConfigurationSummary\": {\n      \"AutoScalingConfigurationArn\": \"\",\n      \"AutoScalingConfigurationName\": \"\",\n      \"AutoScalingConfigurationRevision\": {{faker 'random.number'}}\n    }\n  },\n  \"OperationId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aaf79752-06e0-4e19-bf47-3e98e11ed197",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "164496ce-c254-47f8-b1a5-9cf3dca71071",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1e163c78-2942-4884-be91-3cb963bdd33c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ab26c884-db05-43d6-94a6-7ccb90bbe67b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}