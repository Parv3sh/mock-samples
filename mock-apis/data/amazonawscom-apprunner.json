{
  "uuid": "d9d7c9ba-ceb8-4bb2-84c8-9eb4df9d7375",
  "lastMigration": 19,
  "name": "AWS App Runner",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "7d1044ac-afa6-44f8-9505-a6506774fe41",
      "documentation": "<p>Associate your own domain name with the AWS App Runner subdomain URL of your App Runner service.</p> <p>After you call <code>AssociateCustomDomain</code> and receive a successful response, use the information in the <a>CustomDomain</a> record that's returned to add CNAME records to your Domain Name System (DNS). For each mapped domain name, add a mapping to the target App Runner subdomain and one or more certificate validation records. App Runner then performs DNS validation to verify that you own or control the domain name that you associated. App Runner tracks domain validity in a certificate stored in <a href=\"https://docs.aws.amazon.com/acm/latest/userguide\">AWS Certificate Manager (ACM)</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AppRunner.AssociateCustomDomain",
      "responses": [
        {
          "uuid": "354d4e81-8952-4842-94b8-68aad2745750",
          "body": "{\n  \"DNSTarget\": \"\",\n  \"ServiceArn\": \"\",\n  \"CustomDomain\": {\n    \"DomainName\": \"\",\n    \"EnableWWWSubdomain\": {{faker 'random.boolean'}},\n    \"CertificateValidationRecords\": [\n      {\n        \"Name\": \"\",\n        \"Type\": \"\",\n        \"Value\": \"\",\n        \"Status\": \"\"\n      }\n    ],\n    \"Status\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6ef0df77-64bc-4a63-8b48-f9fa271317fe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d6816717-abf8-4570-874a-ae35a6554434",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8b39c534-7cc5-4fd3-b82d-c7a7ec9d7d47",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "70716482-26b2-4d7d-bf85-bfdf3728b652",
      "documentation": "<p>Create an AWS App Runner automatic scaling configuration resource. App Runner requires this resource when you create App Runner services that require non-default auto scaling settings. You can share an auto scaling configuration across multiple services.</p> <p>Create multiple revisions of a configuration by using the same <code>AutoScalingConfigurationName</code> and different <code>AutoScalingConfigurationRevision</code> values. When you create a service, you can set it to use the latest active revision of an auto scaling configuration or a specific revision.</p> <p>Configure a higher <code>MinSize</code> to increase the spread of your App Runner service over more Availability Zones in the AWS Region. The tradeoff is a higher minimal cost.</p> <p>Configure a lower <code>MaxSize</code> to control your cost. The tradeoff is lower responsiveness during peak demand.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AppRunner.CreateAutoScalingConfiguration",
      "responses": [
        {
          "uuid": "e346e7f2-744b-4119-8ab8-c31ebfc38674",
          "body": "{\n  \"AutoScalingConfiguration\": {\n    \"AutoScalingConfigurationArn\": \"\",\n    \"AutoScalingConfigurationName\": \"\",\n    \"AutoScalingConfigurationRevision\": {{faker 'random.number'}},\n    \"Latest\": {{faker 'random.boolean'}},\n    \"Status\": \"\",\n    \"MaxConcurrency\": {{faker 'random.number'}},\n    \"MinSize\": {{faker 'random.number'}},\n    \"MaxSize\": {{faker 'random.number'}},\n    \"CreatedAt\": \"{{faker 'date.recent' 365}}\",\n    \"DeletedAt\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b811c00c-130d-47c0-9a19-9965dcf870e2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "41f48dc3-7b00-4480-8490-1946a5244b1b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "513596a5-44cc-4796-ad61-612eaf550347",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ServiceQuotaExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a09c937d-bae9-424b-a71a-d9c8d1019268",
      "documentation": "<p>Create an AWS App Runner connection resource. App Runner requires a connection resource when you create App Runner services that access private repositories from certain third-party providers. You can share a connection across multiple services.</p> <p>A connection resource is needed to access GitHub repositories. GitHub requires a user interface approval process through the App Runner console before you can use the connection.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AppRunner.CreateConnection",
      "responses": [
        {
          "uuid": "179a23dd-1fcf-460f-bde0-7842a76a47a8",
          "body": "{\n  \"Connection\": {\n    \"ConnectionName\": \"\",\n    \"ConnectionArn\": \"\",\n    \"ProviderType\": \"\",\n    \"Status\": \"\",\n    \"CreatedAt\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "09ea367b-926a-478e-82c2-f7e119825ba9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4888ce3b-2a9a-4c7d-a317-07ffa1b78ae2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1790f960-d262-4017-aab3-4ce8016f1ec4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ServiceQuotaExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bc74f02e-6481-45b5-98b4-449630726a0c",
      "documentation": "<p>Create an AWS App Runner service. After the service is created, the action also automatically starts a deployment.</p> <p>This is an asynchronous operation. On a successful call, you can use the returned <code>OperationId</code> and the <a href=\"https://docs.aws.amazon.com/apprunner/latest/api/API_ListOperations.html\">ListOperations</a> call to track the operation's progress.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AppRunner.CreateService",
      "responses": [
        {
          "uuid": "bd3ed0c3-5e3d-434a-b11b-f3c443351ce2",
          "body": "{\n  \"Service\": {\n    \"ServiceName\": \"\",\n    \"ServiceId\": \"\",\n    \"ServiceArn\": \"\",\n    \"ServiceUrl\": \"\",\n    \"CreatedAt\": \"{{faker 'date.recent' 365}}\",\n    \"UpdatedAt\": \"{{faker 'date.recent' 365}}\",\n    \"DeletedAt\": \"{{faker 'date.recent' 365}}\",\n    \"Status\": \"\",\n    \"SourceConfiguration\": {\n      \"CodeRepository\": {\n        \"RepositoryUrl\": \"\",\n        \"SourceCodeVersion\": {\n          \"Type\": \"\",\n          \"Value\": \"\"\n        },\n        \"CodeConfiguration\": {\n          \"ConfigurationSource\": \"\",\n          \"CodeConfigurationValues\": {\n            \"Runtime\": \"\",\n            \"BuildCommand\": \"\",\n            \"StartCommand\": \"\",\n            \"Port\": \"\",\n            \"RuntimeEnvironmentVariables\": {}\n          }\n        }\n      },\n      \"ImageRepository\": {\n        \"ImageIdentifier\": \"\",\n        \"ImageConfiguration\": {\n          \"RuntimeEnvironmentVariables\": {},\n          \"StartCommand\": \"\",\n          \"Port\": \"\"\n        },\n        \"ImageRepositoryType\": \"\"\n      },\n      \"AutoDeploymentsEnabled\": {{faker 'random.boolean'}},\n      \"AuthenticationConfiguration\": {\n        \"ConnectionArn\": \"\",\n        \"AccessRoleArn\": \"\"\n      }\n    },\n    \"InstanceConfiguration\": {\n      \"Cpu\": \"\",\n      \"Memory\": \"\",\n      \"InstanceRoleArn\": \"\"\n    },\n    \"EncryptionConfiguration\": {\n      \"KmsKey\": \"\"\n    },\n    \"HealthCheckConfiguration\": {\n      \"Protocol\": \"\",\n      \"Path\": \"\",\n      \"Interval\": {{faker 'random.number'}},\n      \"Timeout\": {{faker 'random.number'}},\n      \"HealthyThreshold\": {{faker 'random.number'}},\n      \"UnhealthyThreshold\": {{faker 'random.number'}}\n    },\n    \"AutoScalingConfigurationSummary\": {\n      \"AutoScalingConfigurationArn\": \"\",\n      \"AutoScalingConfigurationName\": \"\",\n      \"AutoScalingConfigurationRevision\": {{faker 'random.number'}}\n    }\n  },\n  \"OperationId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a81651d2-5198-41b6-a6b0-5fd72c7ae0a5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ec1ce68b-836e-4f6b-b13f-84be36ca08fc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6272364a-a1f3-4f0d-9957-cc5594aa849f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ServiceQuotaExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "004a36f8-2748-4c6b-9bf0-3bb2c91d3910",
      "documentation": "Delete an AWS App Runner automatic scaling configuration resource. You can delete a specific revision or the latest active revision. You can't delete a configuration that's used by one or more App Runner services.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AppRunner.DeleteAutoScalingConfiguration",
      "responses": [
        {
          "uuid": "ec738607-ed09-444d-a9f2-5cbf20c496dc",
          "body": "{\n  \"AutoScalingConfiguration\": {\n    \"AutoScalingConfigurationArn\": \"\",\n    \"AutoScalingConfigurationName\": \"\",\n    \"AutoScalingConfigurationRevision\": {{faker 'random.number'}},\n    \"Latest\": {{faker 'random.boolean'}},\n    \"Status\": \"\",\n    \"MaxConcurrency\": {{faker 'random.number'}},\n    \"MinSize\": {{faker 'random.number'}},\n    \"MaxSize\": {{faker 'random.number'}},\n    \"CreatedAt\": \"{{faker 'date.recent' 365}}\",\n    \"DeletedAt\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8b3b9354-0d1a-4ef3-9227-885c678cfa84",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bcd6fcc8-9bf0-4480-8ac4-c8a8651508ff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7ccb242e-a863-4b8a-9406-f30239e0fe7c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d22f9162-1810-46ec-b0d5-30ea0202b3e1",
      "documentation": "Delete an AWS App Runner connection. You must first ensure that there are no running App Runner services that use this connection. If there are any, the <code>DeleteConnection</code> action fails.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AppRunner.DeleteConnection",
      "responses": [
        {
          "uuid": "a51e4a87-7025-41d4-a53c-704ce98a98fc",
          "body": "{\n  \"Connection\": {\n    \"ConnectionName\": \"\",\n    \"ConnectionArn\": \"\",\n    \"ProviderType\": \"\",\n    \"Status\": \"\",\n    \"CreatedAt\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "518fdbfa-7da1-430f-9399-5a02ec8219f0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0605ab8b-75d5-40fb-b248-279785168c64",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e5d89255-d164-4a6e-9fcb-e0baada8f076",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8419e1ca-6427-4368-a90b-58ac1de67f91",
      "documentation": "<p>Delete an AWS App Runner service.</p> <p>This is an asynchronous operation. On a successful call, you can use the returned <code>OperationId</code> and the <a>ListOperations</a> call to track the operation's progress.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AppRunner.DeleteService",
      "responses": [
        {
          "uuid": "429830a3-2913-458b-8aeb-9fe2c542719d",
          "body": "{\n  \"Service\": {\n    \"ServiceName\": \"\",\n    \"ServiceId\": \"\",\n    \"ServiceArn\": \"\",\n    \"ServiceUrl\": \"\",\n    \"CreatedAt\": \"{{faker 'date.recent' 365}}\",\n    \"UpdatedAt\": \"{{faker 'date.recent' 365}}\",\n    \"DeletedAt\": \"{{faker 'date.recent' 365}}\",\n    \"Status\": \"\",\n    \"SourceConfiguration\": {\n      \"CodeRepository\": {\n        \"RepositoryUrl\": \"\",\n        \"SourceCodeVersion\": {\n          \"Type\": \"\",\n          \"Value\": \"\"\n        },\n        \"CodeConfiguration\": {\n          \"ConfigurationSource\": \"\",\n          \"CodeConfigurationValues\": {\n            \"Runtime\": \"\",\n            \"BuildCommand\": \"\",\n            \"StartCommand\": \"\",\n            \"Port\": \"\",\n            \"RuntimeEnvironmentVariables\": {}\n          }\n        }\n      },\n      \"ImageRepository\": {\n        \"ImageIdentifier\": \"\",\n        \"ImageConfiguration\": {\n          \"RuntimeEnvironmentVariables\": {},\n          \"StartCommand\": \"\",\n          \"Port\": \"\"\n        },\n        \"ImageRepositoryType\": \"\"\n      },\n      \"AutoDeploymentsEnabled\": {{faker 'random.boolean'}},\n      \"AuthenticationConfiguration\": {\n        \"ConnectionArn\": \"\",\n        \"AccessRoleArn\": \"\"\n      }\n    },\n    \"InstanceConfiguration\": {\n      \"Cpu\": \"\",\n      \"Memory\": \"\",\n      \"InstanceRoleArn\": \"\"\n    },\n    \"EncryptionConfiguration\": {\n      \"KmsKey\": \"\"\n    },\n    \"HealthCheckConfiguration\": {\n      \"Protocol\": \"\",\n      \"Path\": \"\",\n      \"Interval\": {{faker 'random.number'}},\n      \"Timeout\": {{faker 'random.number'}},\n      \"HealthyThreshold\": {{faker 'random.number'}},\n      \"UnhealthyThreshold\": {{faker 'random.number'}}\n    },\n    \"AutoScalingConfigurationSummary\": {\n      \"AutoScalingConfigurationArn\": \"\",\n      \"AutoScalingConfigurationName\": \"\",\n      \"AutoScalingConfigurationRevision\": {{faker 'random.number'}}\n    }\n  },\n  \"OperationId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "52a3178c-8628-42f1-b94c-da31b69d9c0c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3b81201f-9f05-48f3-b504-cc083ef14316",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c0af6d3a-5d9c-48fd-aaaf-bb0e27be1bea",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8e9afc7e-d9ad-4051-87a1-e3c3adf80030",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d84d9694-4bbb-4742-9162-dfe4777fb125",
      "documentation": "Return a full description of an AWS App Runner automatic scaling configuration resource.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AppRunner.DescribeAutoScalingConfiguration",
      "responses": [
        {
          "uuid": "2615d59d-c877-4391-9815-091764b014a2",
          "body": "{\n  \"AutoScalingConfiguration\": {\n    \"AutoScalingConfigurationArn\": \"\",\n    \"AutoScalingConfigurationName\": \"\",\n    \"AutoScalingConfigurationRevision\": {{faker 'random.number'}},\n    \"Latest\": {{faker 'random.boolean'}},\n    \"Status\": \"\",\n    \"MaxConcurrency\": {{faker 'random.number'}},\n    \"MinSize\": {{faker 'random.number'}},\n    \"MaxSize\": {{faker 'random.number'}},\n    \"CreatedAt\": \"{{faker 'date.recent' 365}}\",\n    \"DeletedAt\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2f63911a-b3ea-42b1-9a07-9ef552b94a46",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "150b1cd4-33b6-4259-9e77-fb663040346d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "94a7fcb6-0e1a-4891-a9cd-fc88b00b3213",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b131e5be-aa9f-4103-8d9b-d829b07aa6d7",
      "documentation": "Return a description of custom domain names that are associated with an AWS App Runner service.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AppRunner.DescribeCustomDomains",
      "responses": [
        {
          "uuid": "dc3eeaea-21e3-4b55-ad3d-af7538378621",
          "body": "{\n  \"DNSTarget\": \"\",\n  \"ServiceArn\": \"\",\n  \"CustomDomains\": [\n    {\n      \"DomainName\": \"\",\n      \"EnableWWWSubdomain\": {{faker 'random.boolean'}},\n      \"CertificateValidationRecords\": [\n        {\n          \"Name\": \"\",\n          \"Type\": \"\",\n          \"Value\": \"\",\n          \"Status\": \"\"\n        }\n      ],\n      \"Status\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "47d0e6e7-29f7-47d3-bb4e-19b977d74445",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "deff9b16-4b2a-4756-8145-6ae44914d965",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "71acc2ab-c7a5-4ece-8683-f8d69df00df3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "57d38941-f92d-4608-8e73-7f6f0ecc7643",
      "documentation": "Return a full description of an AWS App Runner service.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AppRunner.DescribeService",
      "responses": [
        {
          "uuid": "111f3eee-3a36-4542-9183-109483312c99",
          "body": "{\n  \"Service\": {\n    \"ServiceName\": \"\",\n    \"ServiceId\": \"\",\n    \"ServiceArn\": \"\",\n    \"ServiceUrl\": \"\",\n    \"CreatedAt\": \"{{faker 'date.recent' 365}}\",\n    \"UpdatedAt\": \"{{faker 'date.recent' 365}}\",\n    \"DeletedAt\": \"{{faker 'date.recent' 365}}\",\n    \"Status\": \"\",\n    \"SourceConfiguration\": {\n      \"CodeRepository\": {\n        \"RepositoryUrl\": \"\",\n        \"SourceCodeVersion\": {\n          \"Type\": \"\",\n          \"Value\": \"\"\n        },\n        \"CodeConfiguration\": {\n          \"ConfigurationSource\": \"\",\n          \"CodeConfigurationValues\": {\n            \"Runtime\": \"\",\n            \"BuildCommand\": \"\",\n            \"StartCommand\": \"\",\n            \"Port\": \"\",\n            \"RuntimeEnvironmentVariables\": {}\n          }\n        }\n      },\n      \"ImageRepository\": {\n        \"ImageIdentifier\": \"\",\n        \"ImageConfiguration\": {\n          \"RuntimeEnvironmentVariables\": {},\n          \"StartCommand\": \"\",\n          \"Port\": \"\"\n        },\n        \"ImageRepositoryType\": \"\"\n      },\n      \"AutoDeploymentsEnabled\": {{faker 'random.boolean'}},\n      \"AuthenticationConfiguration\": {\n        \"ConnectionArn\": \"\",\n        \"AccessRoleArn\": \"\"\n      }\n    },\n    \"InstanceConfiguration\": {\n      \"Cpu\": \"\",\n      \"Memory\": \"\",\n      \"InstanceRoleArn\": \"\"\n    },\n    \"EncryptionConfiguration\": {\n      \"KmsKey\": \"\"\n    },\n    \"HealthCheckConfiguration\": {\n      \"Protocol\": \"\",\n      \"Path\": \"\",\n      \"Interval\": {{faker 'random.number'}},\n      \"Timeout\": {{faker 'random.number'}},\n      \"HealthyThreshold\": {{faker 'random.number'}},\n      \"UnhealthyThreshold\": {{faker 'random.number'}}\n    },\n    \"AutoScalingConfigurationSummary\": {\n      \"AutoScalingConfigurationArn\": \"\",\n      \"AutoScalingConfigurationName\": \"\",\n      \"AutoScalingConfigurationRevision\": {{faker 'random.number'}}\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "05d252c5-00cd-4bed-83e8-9f3739ad2045",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "348da693-b4ff-490a-95c2-8bd40d1505d9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c9fd821a-872f-41ec-a46f-e2d1158df115",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a8c00d8c-213e-449c-a06e-055e7f838230",
      "documentation": "<p>Disassociate a custom domain name from an AWS App Runner service.</p> <p>Certificates tracking domain validity are associated with a custom domain and are stored in <a href=\"https://docs.aws.amazon.com/acm/latest/userguide\">AWS Certificate Manager (ACM)</a>. These certificates aren't deleted as part of this action. App Runner delays certificate deletion for 30 days after a domain is disassociated from your service.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AppRunner.DisassociateCustomDomain",
      "responses": [
        {
          "uuid": "4addc4b8-17e8-4d6d-a96c-8dfcdd665616",
          "body": "{\n  \"DNSTarget\": \"\",\n  \"ServiceArn\": \"\",\n  \"CustomDomain\": {\n    \"DomainName\": \"\",\n    \"EnableWWWSubdomain\": {{faker 'random.boolean'}},\n    \"CertificateValidationRecords\": [\n      {\n        \"Name\": \"\",\n        \"Type\": \"\",\n        \"Value\": \"\",\n        \"Status\": \"\"\n      }\n    ],\n    \"Status\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "60bb7375-9cb7-4b8e-a1b6-0667712cee1b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "55a65db7-9086-4e1e-830d-9f3d3e6d81cf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8d5719fe-f972-4368-8818-ad20630eaeca",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0d383a0c-1189-489b-a495-f6b128c00b2c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5b77e3ba-ae64-42d1-aea8-575c35b7d6bc",
      "documentation": "Returns a list of AWS App Runner automatic scaling configurations in your AWS account. You can query the revisions for a specific configuration name or the revisions for all configurations in your account. You can optionally query only the latest revision of each requested name.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AppRunner.ListAutoScalingConfigurations",
      "responses": [
        {
          "uuid": "24ebaab2-839b-471d-888b-82438b733384",
          "body": "{\n  \"AutoScalingConfigurationSummaryList\": [\n    {\n      \"AutoScalingConfigurationArn\": \"\",\n      \"AutoScalingConfigurationName\": \"\",\n      \"AutoScalingConfigurationRevision\": {{faker 'random.number'}}\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fc7ef5a5-7fd5-49f3-b15f-0af6f5eecabe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "65ae4cc4-5996-4c32-b38e-72d069a6d6fb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9c6564d8-6106-4191-b35c-91f6aaa8415a",
      "documentation": "Returns a list of AWS App Runner connections that are associated with your AWS account.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AppRunner.ListConnections",
      "responses": [
        {
          "uuid": "2c35b1ce-4c21-4f37-8036-40f60286cf8a",
          "body": "{\n  \"ConnectionSummaryList\": [\n    {\n      \"ConnectionName\": \"\",\n      \"ConnectionArn\": \"\",\n      \"ProviderType\": \"\",\n      \"Status\": \"\",\n      \"CreatedAt\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6f40e093-bb06-451e-a9e0-3d3647a09682",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b0e859c3-de10-4ab7-9a9c-0b40f843c3c1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4c783c69-1836-47da-a720-b2657f7bc7fa",
      "documentation": "<p>Return a list of operations that occurred on an AWS App Runner service.</p> <p>The resulting list of <a>OperationSummary</a> objects is sorted in reverse chronological order. The first object on the list represents the last started operation.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AppRunner.ListOperations",
      "responses": [
        {
          "uuid": "6625b94d-e248-4fa9-a86e-978dffae6629",
          "body": "{\n  \"OperationSummaryList\": [\n    {\n      \"Id\": \"\",\n      \"Type\": \"\",\n      \"Status\": \"\",\n      \"TargetArn\": \"\",\n      \"StartedAt\": \"{{faker 'date.recent' 365}}\",\n      \"EndedAt\": \"{{faker 'date.recent' 365}}\",\n      \"UpdatedAt\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4ecd5c5e-8ed5-461b-8f70-39238a4f676b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a4440892-155a-45e4-a6bb-29357e7ddc09",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "139a6a30-5d96-4ad5-8bbb-007e144f7d55",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "809ebe54-a241-4b76-bc35-c14af21bc557",
      "documentation": "Returns a list of running AWS App Runner services in your AWS account.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AppRunner.ListServices",
      "responses": [
        {
          "uuid": "45a66813-e676-43ff-ab6c-af774dcec85f",
          "body": "{\n  \"ServiceSummaryList\": [\n    {\n      \"ServiceName\": \"\",\n      \"ServiceId\": \"\",\n      \"ServiceArn\": \"\",\n      \"ServiceUrl\": \"\",\n      \"CreatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"UpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"Status\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a7af0299-f026-43ca-8482-e4410b057429",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "caf7b402-6f9d-451e-adf1-70b15a8680d0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1bc38568-21f5-4952-9b7b-fb8b5bbdcbc0",
      "documentation": "List tags that are associated with for an AWS App Runner resource. The response contains a list of tag key-value pairs.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AppRunner.ListTagsForResource",
      "responses": [
        {
          "uuid": "477153ad-02f7-4a84-9825-e229a1a3caea",
          "body": "{\n  \"Tags\": [\n    {\n      \"Key\": \"\",\n      \"Value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b727e65d-d2a0-4ffe-82cf-3ae25f71ce0d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1c336d12-92ef-4926-88e9-cbc5f6938842",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "14594ef7-4a72-4e3b-abef-93f9879eb8e8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ca5f60d7-a305-4ec6-bccd-023ca2386c94",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1e771fdb-c8a1-4a8b-bb42-d868a67129c7",
      "documentation": "<p>Pause an active AWS App Runner service. App Runner reduces compute capacity for the service to zero and loses state (for example, ephemeral storage is removed).</p> <p>This is an asynchronous operation. On a successful call, you can use the returned <code>OperationId</code> and the <a>ListOperations</a> call to track the operation's progress.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AppRunner.PauseService",
      "responses": [
        {
          "uuid": "66afd41d-0281-40ff-8812-98a84f798e09",
          "body": "{\n  \"Service\": {\n    \"ServiceName\": \"\",\n    \"ServiceId\": \"\",\n    \"ServiceArn\": \"\",\n    \"ServiceUrl\": \"\",\n    \"CreatedAt\": \"{{faker 'date.recent' 365}}\",\n    \"UpdatedAt\": \"{{faker 'date.recent' 365}}\",\n    \"DeletedAt\": \"{{faker 'date.recent' 365}}\",\n    \"Status\": \"\",\n    \"SourceConfiguration\": {\n      \"CodeRepository\": {\n        \"RepositoryUrl\": \"\",\n        \"SourceCodeVersion\": {\n          \"Type\": \"\",\n          \"Value\": \"\"\n        },\n        \"CodeConfiguration\": {\n          \"ConfigurationSource\": \"\",\n          \"CodeConfigurationValues\": {\n            \"Runtime\": \"\",\n            \"BuildCommand\": \"\",\n            \"StartCommand\": \"\",\n            \"Port\": \"\",\n            \"RuntimeEnvironmentVariables\": {}\n          }\n        }\n      },\n      \"ImageRepository\": {\n        \"ImageIdentifier\": \"\",\n        \"ImageConfiguration\": {\n          \"RuntimeEnvironmentVariables\": {},\n          \"StartCommand\": \"\",\n          \"Port\": \"\"\n        },\n        \"ImageRepositoryType\": \"\"\n      },\n      \"AutoDeploymentsEnabled\": {{faker 'random.boolean'}},\n      \"AuthenticationConfiguration\": {\n        \"ConnectionArn\": \"\",\n        \"AccessRoleArn\": \"\"\n      }\n    },\n    \"InstanceConfiguration\": {\n      \"Cpu\": \"\",\n      \"Memory\": \"\",\n      \"InstanceRoleArn\": \"\"\n    },\n    \"EncryptionConfiguration\": {\n      \"KmsKey\": \"\"\n    },\n    \"HealthCheckConfiguration\": {\n      \"Protocol\": \"\",\n      \"Path\": \"\",\n      \"Interval\": {{faker 'random.number'}},\n      \"Timeout\": {{faker 'random.number'}},\n      \"HealthyThreshold\": {{faker 'random.number'}},\n      \"UnhealthyThreshold\": {{faker 'random.number'}}\n    },\n    \"AutoScalingConfigurationSummary\": {\n      \"AutoScalingConfigurationArn\": \"\",\n      \"AutoScalingConfigurationName\": \"\",\n      \"AutoScalingConfigurationRevision\": {{faker 'random.number'}}\n    }\n  },\n  \"OperationId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c11d5da6-fb51-4fcd-a29f-0230654f028e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "36276cdb-1d42-46d6-bf64-769f947b6be7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "805bb9ae-2ba9-415f-942c-9cab27b50b31",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "75386a04-a83c-422c-89b9-18333d98d1e6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "918e4fc5-15c1-4c51-8d91-16a9568428a6",
      "documentation": "<p>Resume an active AWS App Runner service. App Runner provisions compute capacity for the service.</p> <p>This is an asynchronous operation. On a successful call, you can use the returned <code>OperationId</code> and the <a>ListOperations</a> call to track the operation's progress.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AppRunner.ResumeService",
      "responses": [
        {
          "uuid": "5fe1798d-4b80-4191-9486-d14ccc05c34d",
          "body": "{\n  \"Service\": {\n    \"ServiceName\": \"\",\n    \"ServiceId\": \"\",\n    \"ServiceArn\": \"\",\n    \"ServiceUrl\": \"\",\n    \"CreatedAt\": \"{{faker 'date.recent' 365}}\",\n    \"UpdatedAt\": \"{{faker 'date.recent' 365}}\",\n    \"DeletedAt\": \"{{faker 'date.recent' 365}}\",\n    \"Status\": \"\",\n    \"SourceConfiguration\": {\n      \"CodeRepository\": {\n        \"RepositoryUrl\": \"\",\n        \"SourceCodeVersion\": {\n          \"Type\": \"\",\n          \"Value\": \"\"\n        },\n        \"CodeConfiguration\": {\n          \"ConfigurationSource\": \"\",\n          \"CodeConfigurationValues\": {\n            \"Runtime\": \"\",\n            \"BuildCommand\": \"\",\n            \"StartCommand\": \"\",\n            \"Port\": \"\",\n            \"RuntimeEnvironmentVariables\": {}\n          }\n        }\n      },\n      \"ImageRepository\": {\n        \"ImageIdentifier\": \"\",\n        \"ImageConfiguration\": {\n          \"RuntimeEnvironmentVariables\": {},\n          \"StartCommand\": \"\",\n          \"Port\": \"\"\n        },\n        \"ImageRepositoryType\": \"\"\n      },\n      \"AutoDeploymentsEnabled\": {{faker 'random.boolean'}},\n      \"AuthenticationConfiguration\": {\n        \"ConnectionArn\": \"\",\n        \"AccessRoleArn\": \"\"\n      }\n    },\n    \"InstanceConfiguration\": {\n      \"Cpu\": \"\",\n      \"Memory\": \"\",\n      \"InstanceRoleArn\": \"\"\n    },\n    \"EncryptionConfiguration\": {\n      \"KmsKey\": \"\"\n    },\n    \"HealthCheckConfiguration\": {\n      \"Protocol\": \"\",\n      \"Path\": \"\",\n      \"Interval\": {{faker 'random.number'}},\n      \"Timeout\": {{faker 'random.number'}},\n      \"HealthyThreshold\": {{faker 'random.number'}},\n      \"UnhealthyThreshold\": {{faker 'random.number'}}\n    },\n    \"AutoScalingConfigurationSummary\": {\n      \"AutoScalingConfigurationArn\": \"\",\n      \"AutoScalingConfigurationName\": \"\",\n      \"AutoScalingConfigurationRevision\": {{faker 'random.number'}}\n    }\n  },\n  \"OperationId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ba716b36-e721-4ba7-8af2-82e92b2ea61b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "00f51dbb-730e-4d10-9d13-06a88e89272b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c9bfa447-dfeb-4e4f-9552-dfde731210d5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "40cc1c4e-088d-4060-8510-3ffe3cee6cf4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "17a04415-265a-4924-ba78-d621abcb0684",
      "documentation": "<p>Initiate a manual deployment of the latest commit in a source code repository or the latest image in a source image repository to an AWS App Runner service.</p> <p>For a source code repository, App Runner retrieves the commit and builds a Docker image. For a source image repository, App Runner retrieves the latest Docker image. In both cases, App Runner then deploys the new image to your service and starts a new container instance.</p> <p>This is an asynchronous operation. On a successful call, you can use the returned <code>OperationId</code> and the <a>ListOperations</a> call to track the operation's progress.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AppRunner.StartDeployment",
      "responses": [
        {
          "uuid": "c765c3d3-21a6-43e4-9528-247b078f1fbb",
          "body": "{\n  \"OperationId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a51e5c59-e294-4ca9-84fc-84e05ef7ca14",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5a87d3c6-ca1e-400a-a585-8f178fe7b04c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0b55a388-8380-48f1-8090-8781172adf9a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b2848539-0d2a-458f-8052-569af0656cc3",
      "documentation": "Add tags to, or update the tag values of, an App Runner resource. A tag is a key-value pair.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AppRunner.TagResource",
      "responses": [
        {
          "uuid": "b2421bda-467c-45ac-ad22-45af0e19afeb",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1cd91383-0ab7-490a-953b-841e69b3b674",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f281cbd7-d514-4e9f-8b4a-97b8f9c015d7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "62dd95ca-e75c-41d6-87b3-fcc72d0a9b1f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2c210562-37a0-4095-b9ca-5b71544ee6c6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d3095530-0d6f-48b8-9a18-7db56a7bed37",
      "documentation": "Remove tags from an App Runner resource.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AppRunner.UntagResource",
      "responses": [
        {
          "uuid": "58ae0b1a-1b89-4d5b-bf6d-8d6be164ecde",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f7a66c86-b3c8-4a69-9c4a-1d1e41447815",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a04f9866-5a05-4d73-b2f3-961eaf7710f8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "34ff0107-cc87-4786-9967-16db8453eae8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "80e944ea-9d66-4fe7-a88e-940cab9b9500",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "182bb143-8fbd-43c1-a50d-6318ace22edc",
      "documentation": "<p>Update an AWS App Runner service. You can update the source configuration and instance configuration of the service. You can also update the ARN of the auto scaling configuration resource that's associated with the service. However, you can't change the name or the encryption configuration of the service. These can be set only when you create the service.</p> <p>To update the tags applied to your service, use the separate actions <a>TagResource</a> and <a>UntagResource</a>.</p> <p>This is an asynchronous operation. On a successful call, you can use the returned <code>OperationId</code> and the <a>ListOperations</a> call to track the operation's progress.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AppRunner.UpdateService",
      "responses": [
        {
          "uuid": "2a8e9fd4-0035-4801-9803-7dcd5267438f",
          "body": "{\n  \"Service\": {\n    \"ServiceName\": \"\",\n    \"ServiceId\": \"\",\n    \"ServiceArn\": \"\",\n    \"ServiceUrl\": \"\",\n    \"CreatedAt\": \"{{faker 'date.recent' 365}}\",\n    \"UpdatedAt\": \"{{faker 'date.recent' 365}}\",\n    \"DeletedAt\": \"{{faker 'date.recent' 365}}\",\n    \"Status\": \"\",\n    \"SourceConfiguration\": {\n      \"CodeRepository\": {\n        \"RepositoryUrl\": \"\",\n        \"SourceCodeVersion\": {\n          \"Type\": \"\",\n          \"Value\": \"\"\n        },\n        \"CodeConfiguration\": {\n          \"ConfigurationSource\": \"\",\n          \"CodeConfigurationValues\": {\n            \"Runtime\": \"\",\n            \"BuildCommand\": \"\",\n            \"StartCommand\": \"\",\n            \"Port\": \"\",\n            \"RuntimeEnvironmentVariables\": {}\n          }\n        }\n      },\n      \"ImageRepository\": {\n        \"ImageIdentifier\": \"\",\n        \"ImageConfiguration\": {\n          \"RuntimeEnvironmentVariables\": {},\n          \"StartCommand\": \"\",\n          \"Port\": \"\"\n        },\n        \"ImageRepositoryType\": \"\"\n      },\n      \"AutoDeploymentsEnabled\": {{faker 'random.boolean'}},\n      \"AuthenticationConfiguration\": {\n        \"ConnectionArn\": \"\",\n        \"AccessRoleArn\": \"\"\n      }\n    },\n    \"InstanceConfiguration\": {\n      \"Cpu\": \"\",\n      \"Memory\": \"\",\n      \"InstanceRoleArn\": \"\"\n    },\n    \"EncryptionConfiguration\": {\n      \"KmsKey\": \"\"\n    },\n    \"HealthCheckConfiguration\": {\n      \"Protocol\": \"\",\n      \"Path\": \"\",\n      \"Interval\": {{faker 'random.number'}},\n      \"Timeout\": {{faker 'random.number'}},\n      \"HealthyThreshold\": {{faker 'random.number'}},\n      \"UnhealthyThreshold\": {{faker 'random.number'}}\n    },\n    \"AutoScalingConfigurationSummary\": {\n      \"AutoScalingConfigurationArn\": \"\",\n      \"AutoScalingConfigurationName\": \"\",\n      \"AutoScalingConfigurationRevision\": {{faker 'random.number'}}\n    }\n  },\n  \"OperationId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "31de3220-672b-4f1a-8b30-e7e39baeb067",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8bcf204c-2d36-44ad-8d54-896d82f2ee01",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c04b0804-2dac-4682-a223-e6083aaf2aa1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3468c08c-6b53-4970-85b0-3b8cd6b965a7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}