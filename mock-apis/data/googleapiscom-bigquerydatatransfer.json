{
  "uuid": "30597e0d-e0b9-464a-b70b-a9a4ae266684",
  "lastMigration": 19,
  "name": "BigQuery Data Transfer API",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "41c8c87a-7644-46ac-8d89-d0dd682ff805",
      "documentation": "Deletes the specified transfer run.",
      "method": "delete",
      "endpoint": "v1/:name",
      "responses": [
        {
          "uuid": "f565bc1a-9919-4752-bb86-ab391d221360",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c641f9bc-166c-4196-ba80-0265d4439a2e",
      "documentation": "Returns information about the particular transfer run.",
      "method": "get",
      "endpoint": "v1/:name",
      "responses": [
        {
          "uuid": "8c3ad7e2-7fc1-4b69-8038-3c3a9c03d342",
          "body": "{\n  \"dataSourceId\": \"\",\n  \"destinationDatasetId\": \"\",\n  \"emailPreferences\": {\n    \"enableFailureEmail\": {{faker 'random.boolean'}}\n  },\n  \"endTime\": \"\",\n  \"errorStatus\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"name\": \"\",\n  \"notificationPubsubTopic\": \"\",\n  \"params\": {},\n  \"runTime\": \"\",\n  \"schedule\": \"\",\n  \"scheduleTime\": \"\",\n  \"startTime\": \"\",\n  \"state\": \"{{oneOf (array 'TRANSFER_STATE_UNSPECIFIED' 'PENDING' 'RUNNING' 'SUCCEEDED' 'FAILED' 'CANCELLED')}}\",\n  \"updateTime\": \"\",\n  \"userId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f955e208-2832-4956-bc6f-874c61bb7e5d",
      "documentation": "Updates a data transfer configuration. All fields must be set, even if they are not updated.",
      "method": "patch",
      "endpoint": "v1/:name",
      "responses": [
        {
          "uuid": "54a3f5e0-08b1-4c2f-9fb4-21c6015ae88a",
          "body": "{\n  \"dataRefreshWindowDays\": {{faker 'random.number'}},\n  \"dataSourceId\": \"\",\n  \"datasetRegion\": \"\",\n  \"destinationDatasetId\": \"\",\n  \"disabled\": {{faker 'random.boolean'}},\n  \"displayName\": \"\",\n  \"emailPreferences\": {\n    \"enableFailureEmail\": {{faker 'random.boolean'}}\n  },\n  \"name\": \"\",\n  \"nextRunTime\": \"\",\n  \"notificationPubsubTopic\": \"\",\n  \"ownerInfo\": {\n    \"email\": \"\"\n  },\n  \"params\": {},\n  \"schedule\": \"\",\n  \"scheduleOptions\": {\n    \"disableAutoScheduling\": {{faker 'random.boolean'}},\n    \"endTime\": \"\",\n    \"startTime\": \"\"\n  },\n  \"state\": \"{{oneOf (array 'TRANSFER_STATE_UNSPECIFIED' 'PENDING' 'RUNNING' 'SUCCEEDED' 'FAILED' 'CANCELLED')}}\",\n  \"updateTime\": \"\",\n  \"userId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8e55d0a3-842d-430b-8546-1e56d77c5a00",
      "documentation": "Lists information about the supported locations for this service.",
      "method": "get",
      "endpoint": "v1/:name/locations",
      "responses": [
        {
          "uuid": "9dcf973d-a9c9-4687-97f0-4cb1511126f3",
          "body": "{\n  \"locations\": [\n    {\n      \"displayName\": \"\",\n      \"labels\": {},\n      \"locationId\": \"\",\n      \"metadata\": {},\n      \"name\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "eecb6c13-b9b3-4d60-abf2-0ec975ead6f3",
      "documentation": "Returns true if valid credentials exist for the given data source and requesting user.",
      "method": "post",
      "endpoint": "v1/:name:checkValidCreds",
      "responses": [
        {
          "uuid": "8bf16bf5-c60b-412d-a447-f8dc0359fff9",
          "body": "{\n  \"hasValidCreds\": {{faker 'random.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8e885b09-c284-4fca-8bf7-30f2c8641a93",
      "documentation": "Enroll data sources in a user project. This allows users to create transfer configurations for these data sources. They will also appear in the ListDataSources RPC and as such, will appear in the [BigQuery UI](https://console.cloud.google.com/bigquery), and the documents can be found in the public guide for [BigQuery Web UI](https://cloud.google.com/bigquery/bigquery-web-ui) and [Data Transfer Service](https://cloud.google.com/bigquery/docs/working-with-transfers).",
      "method": "post",
      "endpoint": "v1/:name:enrollDataSources",
      "responses": [
        {
          "uuid": "aed41d72-566f-4f31-b38f-709fea1f87f5",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ba9485d9-bcc8-40f4-8e0a-0aebc02a35f9",
      "documentation": "Lists supported data sources and returns their settings.",
      "method": "get",
      "endpoint": "v1/:parent/dataSources",
      "responses": [
        {
          "uuid": "66ad9def-a65e-424e-9329-5a51d33450f6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f046d8d5-a94e-42a2-8917-8c9e5f3bc74d",
      "documentation": "Returns information about running and completed transfer runs.",
      "method": "get",
      "endpoint": "v1/:parent/runs",
      "responses": [
        {
          "uuid": "7f474acd-0335-43f3-99ab-6b83f4ae9e86",
          "body": "{\n  \"nextPageToken\": \"\",\n  \"transferRuns\": [\n    {\n      \"dataSourceId\": \"\",\n      \"destinationDatasetId\": \"\",\n      \"emailPreferences\": {\n        \"enableFailureEmail\": {{faker 'random.boolean'}}\n      },\n      \"endTime\": \"\",\n      \"errorStatus\": {\n        \"code\": {{faker 'random.number'}},\n        \"details\": [\n          {}\n        ],\n        \"message\": \"\"\n      },\n      \"name\": \"\",\n      \"notificationPubsubTopic\": \"\",\n      \"params\": {},\n      \"runTime\": \"\",\n      \"schedule\": \"\",\n      \"scheduleTime\": \"\",\n      \"startTime\": \"\",\n      \"state\": \"{{oneOf (array 'TRANSFER_STATE_UNSPECIFIED' 'PENDING' 'RUNNING' 'SUCCEEDED' 'FAILED' 'CANCELLED')}}\",\n      \"updateTime\": \"\",\n      \"userId\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "685c720f-04c7-4ca2-9ac8-05569c3c759a",
      "documentation": "Returns information about all transfer configs owned by a project in the specified location.",
      "method": "get",
      "endpoint": "v1/:parent/transferConfigs",
      "responses": [
        {
          "uuid": "28eac3a4-cc5f-438e-ba32-a7544884657c",
          "body": "{\n  \"nextPageToken\": \"\",\n  \"transferConfigs\": [\n    {\n      \"dataRefreshWindowDays\": {{faker 'random.number'}},\n      \"dataSourceId\": \"\",\n      \"datasetRegion\": \"\",\n      \"destinationDatasetId\": \"\",\n      \"disabled\": {{faker 'random.boolean'}},\n      \"displayName\": \"\",\n      \"emailPreferences\": {\n        \"enableFailureEmail\": {{faker 'random.boolean'}}\n      },\n      \"name\": \"\",\n      \"nextRunTime\": \"\",\n      \"notificationPubsubTopic\": \"\",\n      \"ownerInfo\": {\n        \"email\": \"\"\n      },\n      \"params\": {},\n      \"schedule\": \"\",\n      \"scheduleOptions\": {\n        \"disableAutoScheduling\": {{faker 'random.boolean'}},\n        \"endTime\": \"\",\n        \"startTime\": \"\"\n      },\n      \"state\": \"{{oneOf (array 'TRANSFER_STATE_UNSPECIFIED' 'PENDING' 'RUNNING' 'SUCCEEDED' 'FAILED' 'CANCELLED')}}\",\n      \"updateTime\": \"\",\n      \"userId\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7bd504fa-3d5f-4c5d-80d8-6f9c86070727",
      "documentation": "Creates a new data transfer configuration.",
      "method": "post",
      "endpoint": "v1/:parent/transferConfigs",
      "responses": [
        {
          "uuid": "47847f26-cadb-4533-b6af-432eddc96f45",
          "body": "{\n  \"dataRefreshWindowDays\": {{faker 'random.number'}},\n  \"dataSourceId\": \"\",\n  \"datasetRegion\": \"\",\n  \"destinationDatasetId\": \"\",\n  \"disabled\": {{faker 'random.boolean'}},\n  \"displayName\": \"\",\n  \"emailPreferences\": {\n    \"enableFailureEmail\": {{faker 'random.boolean'}}\n  },\n  \"name\": \"\",\n  \"nextRunTime\": \"\",\n  \"notificationPubsubTopic\": \"\",\n  \"ownerInfo\": {\n    \"email\": \"\"\n  },\n  \"params\": {},\n  \"schedule\": \"\",\n  \"scheduleOptions\": {\n    \"disableAutoScheduling\": {{faker 'random.boolean'}},\n    \"endTime\": \"\",\n    \"startTime\": \"\"\n  },\n  \"state\": \"{{oneOf (array 'TRANSFER_STATE_UNSPECIFIED' 'PENDING' 'RUNNING' 'SUCCEEDED' 'FAILED' 'CANCELLED')}}\",\n  \"updateTime\": \"\",\n  \"userId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "77abe296-f242-4325-94ad-f7a9a60f7b4c",
      "documentation": "Returns log messages for the transfer run.",
      "method": "get",
      "endpoint": "v1/:parent/transferLogs",
      "responses": [
        {
          "uuid": "36db2107-3b8b-41d2-810c-d3807baac6e5",
          "body": "{\n  \"nextPageToken\": \"\",\n  \"transferMessages\": [\n    {\n      \"messageText\": \"\",\n      \"messageTime\": \"\",\n      \"severity\": \"{{oneOf (array 'MESSAGE_SEVERITY_UNSPECIFIED' 'INFO' 'WARNING' 'ERROR')}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "88e34b82-1f98-4797-bf0e-4c5fe7fe107a",
      "documentation": "Creates transfer runs for a time range [start_time, end_time]. For each date - or whatever granularity the data source supports - in the range, one transfer run is created. Note that runs are created per UTC time in the time range. DEPRECATED: use StartManualTransferRuns instead.",
      "method": "post",
      "endpoint": "v1/:parent:scheduleRuns",
      "responses": [
        {
          "uuid": "13c932ed-5df4-47b8-b243-e5099fb52a01",
          "body": "{\n  \"runs\": [\n    {\n      \"dataSourceId\": \"\",\n      \"destinationDatasetId\": \"\",\n      \"emailPreferences\": {\n        \"enableFailureEmail\": {{faker 'random.boolean'}}\n      },\n      \"endTime\": \"\",\n      \"errorStatus\": {\n        \"code\": {{faker 'random.number'}},\n        \"details\": [\n          {}\n        ],\n        \"message\": \"\"\n      },\n      \"name\": \"\",\n      \"notificationPubsubTopic\": \"\",\n      \"params\": {},\n      \"runTime\": \"\",\n      \"schedule\": \"\",\n      \"scheduleTime\": \"\",\n      \"startTime\": \"\",\n      \"state\": \"{{oneOf (array 'TRANSFER_STATE_UNSPECIFIED' 'PENDING' 'RUNNING' 'SUCCEEDED' 'FAILED' 'CANCELLED')}}\",\n      \"updateTime\": \"\",\n      \"userId\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0e41b248-032e-4da8-bfbf-ee7cca54b323",
      "documentation": "Start manual transfer runs to be executed now with schedule_time equal to current time. The transfer runs can be created for a time range where the run_time is between start_time (inclusive) and end_time (exclusive), or for a specific run_time.",
      "method": "post",
      "endpoint": "v1/:parent:startManualRuns",
      "responses": [
        {
          "uuid": "de539905-f8f3-4909-8e8e-62c54ba8f1af",
          "body": "{\n  \"runs\": [\n    {\n      \"dataSourceId\": \"\",\n      \"destinationDatasetId\": \"\",\n      \"emailPreferences\": {\n        \"enableFailureEmail\": {{faker 'random.boolean'}}\n      },\n      \"endTime\": \"\",\n      \"errorStatus\": {\n        \"code\": {{faker 'random.number'}},\n        \"details\": [\n          {}\n        ],\n        \"message\": \"\"\n      },\n      \"name\": \"\",\n      \"notificationPubsubTopic\": \"\",\n      \"params\": {},\n      \"runTime\": \"\",\n      \"schedule\": \"\",\n      \"scheduleTime\": \"\",\n      \"startTime\": \"\",\n      \"state\": \"{{oneOf (array 'TRANSFER_STATE_UNSPECIFIED' 'PENDING' 'RUNNING' 'SUCCEEDED' 'FAILED' 'CANCELLED')}}\",\n      \"updateTime\": \"\",\n      \"userId\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}