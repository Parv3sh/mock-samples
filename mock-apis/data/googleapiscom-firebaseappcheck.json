{
  "uuid": "74126b93-1cb2-47f7-a563-ec8937e4954c",
  "lastMigration": 19,
  "name": "Firebase App Check API",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "df30cafc-be0e-4b1c-a162-b1f82cc06594",
      "documentation": "Accepts an App Attest assertion and an artifact previously obtained from ExchangeAppAttestAttestation and verifies those with Apple. If valid, returns an App Check token encapsulated in an AttestationTokenResponse.",
      "method": "post",
      "endpoint": "v1beta/:app:exchangeAppAttestAssertion",
      "responses": [
        {
          "uuid": "38a9fa08-1e27-4b59-8898-939910a29a49",
          "body": "{\n  \"attestationToken\": \"\",\n  \"ttl\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8ed76bca-86a6-46f0-8368-ace85858b353",
      "documentation": "Accepts an App Attest CBOR attestation and verifies it with Apple using your preconfigured team and bundle IDs. If valid, returns an attestation artifact that can later be exchanged for an AttestationTokenResponse using ExchangeAppAttestAssertion. For convenience and performance, this method's response object will also contain an App Check token encapsulated in an AttestationTokenResponse (if the verification is successful).",
      "method": "post",
      "endpoint": "v1beta/:app:exchangeAppAttestAttestation",
      "responses": [
        {
          "uuid": "ee160ff1-87d3-4640-ac5a-f4564c07278a",
          "body": "{\n  \"artifact\": \"\",\n  \"attestationToken\": {\n    \"attestationToken\": \"\",\n    \"ttl\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f6509947-c300-41cc-9b77-7d60acff8aff",
      "documentation": "Validates a custom token signed using your project's Admin SDK service account credentials. If valid, returns an App Check token encapsulated in an AttestationTokenResponse.",
      "method": "post",
      "endpoint": "v1beta/:app:exchangeCustomToken",
      "responses": [
        {
          "uuid": "5c0b6a40-4b63-48e6-9c07-c540cce2cafa",
          "body": "{\n  \"attestationToken\": \"\",\n  \"ttl\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d34392e6-a2a4-42f5-8236-db9c98ecc94e",
      "documentation": "Validates a debug token secret that you have previously created using CreateDebugToken. If valid, returns an App Check token encapsulated in an AttestationTokenResponse. Note that a restrictive quota is enforced on this method to prevent accidental exposure of the app to abuse.",
      "method": "post",
      "endpoint": "v1beta/:app:exchangeDebugToken",
      "responses": [
        {
          "uuid": "71700f60-aee3-414c-bcfe-5eb6dffdd5a8",
          "body": "{\n  \"attestationToken\": \"\",\n  \"ttl\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "16f8f3bd-5ece-4d64-ab9d-ac65d2399ea7",
      "documentation": "Accepts a [`device_token`](https://developer.apple.com/documentation/devicecheck/dcdevice) issued by DeviceCheck, and attempts to validate it with Apple. If valid, returns an App Check token encapsulated in an AttestationTokenResponse.",
      "method": "post",
      "endpoint": "v1beta/:app:exchangeDeviceCheckToken",
      "responses": [
        {
          "uuid": "7fa8b547-2b86-4eac-a4e2-2bc408388310",
          "body": "{\n  \"attestationToken\": \"\",\n  \"ttl\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e3d0cbad-3c5d-4cc5-8745-2c557284b0d7",
      "documentation": "Validates a [reCAPTCHA Enterprise response token](https://cloud.google.com/recaptcha-enterprise/docs/create-assessment#retrieve_token). If valid, returns an App Check token encapsulated in an AttestationTokenResponse.",
      "method": "post",
      "endpoint": "v1beta/:app:exchangeRecaptchaEnterpriseToken",
      "responses": [
        {
          "uuid": "184c90ea-b621-44ba-8137-f0f87a3f8832",
          "body": "{\n  \"attestationToken\": \"\",\n  \"ttl\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "67af57d1-0a6e-4f87-a217-4b6078cd990e",
      "documentation": "Validates a [reCAPTCHA v3 response token](https://developers.google.com/recaptcha/docs/v3). If valid, returns an App Check token encapsulated in an AttestationTokenResponse.",
      "method": "post",
      "endpoint": "v1beta/:app:exchangeRecaptchaToken",
      "responses": [
        {
          "uuid": "9171cdad-1d88-4860-9681-f2cf33baf7e7",
          "body": "{\n  \"attestationToken\": \"\",\n  \"ttl\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5cca755c-ac9a-4831-8e28-ce467429778e",
      "documentation": "Validates a [SafetyNet token](https://developer.android.com/training/safetynet/attestation#request-attestation-step). If valid, returns an App Check token encapsulated in an AttestationTokenResponse.",
      "method": "post",
      "endpoint": "v1beta/:app:exchangeSafetyNetToken",
      "responses": [
        {
          "uuid": "234460de-3058-4d94-bf92-2ff303e287c9",
          "body": "{\n  \"attestationToken\": \"\",\n  \"ttl\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4856565d-76dd-4004-bee4-74d261d70656",
      "documentation": "Generates a challenge that protects the integrity of an immediately following call to ExchangeAppAttestAttestation or ExchangeAppAttestAssertion. A challenge should not be reused for multiple calls.",
      "method": "post",
      "endpoint": "v1beta/:app:generateAppAttestChallenge",
      "responses": [
        {
          "uuid": "8acacc3b-6cc0-4fbe-bc00-ba0f484123d0",
          "body": "{\n  \"challenge\": \"\",\n  \"ttl\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4590a94c-7f2c-4e71-93a2-fda9fa55a42c",
      "documentation": "Deletes the specified DebugToken. A deleted debug token cannot be used to exchange for an App Check token. Use this method when you suspect the secret `token` has been compromised or when you no longer need the debug token.",
      "method": "delete",
      "endpoint": "v1beta/:name",
      "responses": [
        {
          "uuid": "55d642ac-807b-4ae1-99a5-6ef363bb398f",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7914519f-d691-4373-955b-0d03dbcb6b5a",
      "documentation": "Gets the Service configuration for the specified service name.",
      "method": "get",
      "endpoint": "v1beta/:name",
      "responses": [
        {
          "uuid": "fd15fa7e-d432-448d-b41e-64770e0dd28f",
          "body": "{\n  \"enforcementMode\": \"{{oneOf (array 'OFF' 'UNENFORCED' 'ENFORCED')}}\",\n  \"name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c9c84172-310e-4947-b102-8acb66c5d1e9",
      "documentation": "Updates the specified Service configuration.",
      "method": "patch",
      "endpoint": "v1beta/:name",
      "responses": [
        {
          "uuid": "5e6c9b2f-0ff9-432a-9795-eb610029071b",
          "body": "{\n  \"enforcementMode\": \"{{oneOf (array 'OFF' 'UNENFORCED' 'ENFORCED')}}\",\n  \"name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a865bddd-25b2-4344-8284-4ed2756c2126",
      "documentation": "Atomically gets the AppAttestConfigs for the specified list of apps.",
      "method": "get",
      "endpoint": "v1beta/:parent/apps/-/appAttestConfig:batchGet",
      "responses": [
        {
          "uuid": "5fa44682-d6c1-4d6c-a12c-b8d2fc85700f",
          "body": "{\n  \"configs\": [\n    {\n      \"name\": \"\",\n      \"tokenTtl\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b4064d70-8d8f-434b-a808-1392101a6243",
      "documentation": "Atomically gets the DeviceCheckConfigs for the specified list of apps. For security reasons, the `private_key` field is never populated in the response.",
      "method": "get",
      "endpoint": "v1beta/:parent/apps/-/deviceCheckConfig:batchGet",
      "responses": [
        {
          "uuid": "5287ddc5-9334-49fb-9816-dfeb270c02cb",
          "body": "{\n  \"configs\": [\n    {\n      \"keyId\": \"\",\n      \"name\": \"\",\n      \"privateKey\": \"\",\n      \"privateKeySet\": {{faker 'random.boolean'}},\n      \"tokenTtl\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e642114e-2a5c-496c-a95f-6b731a697c4c",
      "documentation": "Atomically gets the RecaptchaConfigs for the specified list of apps. For security reasons, the `site_secret` field is never populated in the response.",
      "method": "get",
      "endpoint": "v1beta/:parent/apps/-/recaptchaConfig:batchGet",
      "responses": [
        {
          "uuid": "d23c590e-e915-4324-bb84-b4f51ff15e12",
          "body": "{\n  \"configs\": [\n    {\n      \"name\": \"\",\n      \"siteSecret\": \"\",\n      \"siteSecretSet\": {{faker 'random.boolean'}},\n      \"tokenTtl\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bd0180f7-26d9-48e9-9701-8ee807b4ae06",
      "documentation": "Atomically gets the RecaptchaEnterpriseConfigs for the specified list of apps.",
      "method": "get",
      "endpoint": "v1beta/:parent/apps/-/recaptchaEnterpriseConfig:batchGet",
      "responses": [
        {
          "uuid": "a34f112a-7ff6-4c7d-a41a-81f3296a0a6d",
          "body": "{\n  \"configs\": [\n    {\n      \"name\": \"\",\n      \"siteKey\": \"\",\n      \"tokenTtl\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "04485ce4-ccae-4471-b471-19801290b16b",
      "documentation": "Atomically gets the SafetyNetConfigs for the specified list of apps.",
      "method": "get",
      "endpoint": "v1beta/:parent/apps/-/safetyNetConfig:batchGet",
      "responses": [
        {
          "uuid": "8e5fbcc9-cc91-46e1-a5fd-fbb41e64ed70",
          "body": "{\n  \"configs\": [\n    {\n      \"name\": \"\",\n      \"tokenTtl\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f0ba0fee-9a14-4c29-aa34-ae66ca9c0dca",
      "documentation": "Lists all DebugTokens for the specified app. For security reasons, the `token` field is never populated in the response.",
      "method": "get",
      "endpoint": "v1beta/:parent/debugTokens",
      "responses": [
        {
          "uuid": "bb727208-463d-4e0e-8471-835fee43080b",
          "body": "{\n  \"debugTokens\": [\n    {\n      \"displayName\": \"\",\n      \"name\": \"\",\n      \"token\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a58d955b-036e-40d3-9a10-2dd4497b0626",
      "documentation": "Creates a new DebugToken for the specified app. For security reasons, after the creation operation completes, the `token` field cannot be updated or retrieved, but you can revoke the debug token using DeleteDebugToken. Each app can have a maximum of 20 debug tokens.",
      "method": "post",
      "endpoint": "v1beta/:parent/debugTokens",
      "responses": [
        {
          "uuid": "f5a7e7c3-8c39-4239-8d4e-ccc078f45e28",
          "body": "{\n  \"displayName\": \"\",\n  \"name\": \"\",\n  \"token\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "99fbbaba-d16f-4710-86d2-53b549f78337",
      "documentation": "Lists all Service configurations for the specified project. Only Services which were explicitly configured using UpdateService or BatchUpdateServices will be returned.",
      "method": "get",
      "endpoint": "v1beta/:parent/services",
      "responses": [
        {
          "uuid": "bda0834f-4983-4a71-82b0-cdac9f7753fb",
          "body": "{\n  \"nextPageToken\": \"\",\n  \"services\": [\n    {\n      \"enforcementMode\": \"{{oneOf (array 'OFF' 'UNENFORCED' 'ENFORCED')}}\",\n      \"name\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b21080c3-0368-494c-984e-b320f1d8fe36",
      "documentation": "Atomically updates the specified Service configurations.",
      "method": "post",
      "endpoint": "v1beta/:parent/services:batchUpdate",
      "responses": [
        {
          "uuid": "e2cda702-0f13-4e83-8521-0997da072cfe",
          "body": "{\n  \"services\": [\n    {\n      \"enforcementMode\": \"{{oneOf (array 'OFF' 'UNENFORCED' 'ENFORCED')}}\",\n      \"name\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}