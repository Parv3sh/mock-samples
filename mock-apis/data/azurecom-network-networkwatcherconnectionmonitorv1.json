{
  "uuid": "71535677-821f-404c-9e9c-9e3f4fefa245",
  "lastMigration": 19,
  "name": "NetworkManagementClient",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "3c34c45a-39e4-4df4-9ea3-6ea75c178993",
      "documentation": "Lists all connection monitors for the specified Network Watcher.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/connectionMonitors",
      "responses": [
        {
          "uuid": "f9e13a9e-abd1-4915-93ef-825d906605f1",
          "body": "{\n  \"value\": [\n    {\n      \"etag\": \"A unique read-only string that changes whenever the resource is updated.\",\n      \"id\": \"\",\n      \"location\": \"\",\n      \"name\": \"\",\n      \"properties\": {\n        \"autoStart\": true,\n        \"destination\": {\n          \"address\": \"\",\n          \"port\": {{faker 'random.number'}},\n          \"resourceId\": \"\"\n        },\n        \"monitoringIntervalInSeconds\": 60,\n        \"source\": {\n          \"port\": {{faker 'random.number'}},\n          \"resourceId\": \"\"\n        }\n      },\n      \"tags\": {},\n      \"type\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful connection monitor enumeration request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7f0f9757-4d4e-4bab-a3a3-5bcfd3e86323",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "003dd82c-3374-4753-9675-c8b7ae7975c8",
      "documentation": "Deletes the specified connection monitor.",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/connectionMonitors/:connectionMonitorName",
      "responses": [
        {
          "uuid": "02e527b4-cc27-4cb1-a104-12c8af616dd8",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted. The operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "33b2a215-7a9a-4052-92d0-2e0ae11ed304",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Delete successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f695f3f3-a3fe-48ec-baeb-a25fb2dfd7a7",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e17dae93-9e92-4119-8621-03e104207890",
      "documentation": "Gets a connection monitor by name.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/connectionMonitors/:connectionMonitorName",
      "responses": [
        {
          "uuid": "b4c9f1f7-c06f-43e3-abb1-26a971cfce2a",
          "body": "{\n  \"etag\": \"A unique read-only string that changes whenever the resource is updated.\",\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"properties\": {\n    \"autoStart\": true,\n    \"destination\": {\n      \"address\": \"\",\n      \"port\": {{faker 'random.number'}},\n      \"resourceId\": \"\"\n    },\n    \"monitoringIntervalInSeconds\": 60,\n    \"source\": {\n      \"port\": {{faker 'random.number'}},\n      \"resourceId\": \"\"\n    }\n  },\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful. The operation returns a connection monitor.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6433d8ac-561a-43e8-a5d5-c374b1ceece2",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "46b04923-88c2-4f5d-a560-4f0ad1b6af24",
      "documentation": "Update tags of the specified connection monitor.",
      "method": "patch",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/connectionMonitors/:connectionMonitorName",
      "responses": [
        {
          "uuid": "039518f5-7256-4249-a441-ee2de1437b55",
          "body": "{\n  \"etag\": \"A unique read-only string that changes whenever the resource is updated.\",\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"properties\": {\n    \"autoStart\": true,\n    \"destination\": {\n      \"address\": \"\",\n      \"port\": {{faker 'random.number'}},\n      \"resourceId\": \"\"\n    },\n    \"monitoringIntervalInSeconds\": 60,\n    \"source\": {\n      \"port\": {{faker 'random.number'}},\n      \"resourceId\": \"\"\n    }\n  },\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful. The operation returns updated connection monitor.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c7dd8b16-241f-4143-93ae-a6210c8e7d80",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c375b0e8-c3dd-423e-81d4-d81c3c9d2c35",
      "documentation": "Create or update a connection monitor.",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/connectionMonitors/:connectionMonitorName",
      "responses": [
        {
          "uuid": "c8e60660-e1cc-40c4-9fdf-9723935f5e6d",
          "body": "{\n  \"etag\": \"A unique read-only string that changes whenever the resource is updated.\",\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"properties\": {\n    \"autoStart\": true,\n    \"destination\": {\n      \"address\": \"\",\n      \"port\": {{faker 'random.number'}},\n      \"resourceId\": \"\"\n    },\n    \"monitoringIntervalInSeconds\": 60,\n    \"source\": {\n      \"port\": {{faker 'random.number'}},\n      \"resourceId\": \"\"\n    }\n  },\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Update successful. The operation returns the resulting network watcher resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a86870d1-6a2c-4421-909f-f1df08f44c60",
          "body": "{\n  \"etag\": \"A unique read-only string that changes whenever the resource is updated.\",\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"properties\": {\n    \"autoStart\": true,\n    \"destination\": {\n      \"address\": \"\",\n      \"port\": {{faker 'random.number'}},\n      \"resourceId\": \"\"\n    },\n    \"monitoringIntervalInSeconds\": 60,\n    \"source\": {\n      \"port\": {{faker 'random.number'}},\n      \"resourceId\": \"\"\n    }\n  },\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Create successful. The operation returns the resulting network watcher resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1012759b-5a65-485d-9019-4aaba854d685",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ef557720-2ce0-45e3-b081-adeaf9713ef5",
      "documentation": "Query a snapshot of the most recent connection states.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/connectionMonitors/:connectionMonitorName/query",
      "responses": [
        {
          "uuid": "cb4397c5-905f-4345-954e-d0ae79b6d5f6",
          "body": "{\n  \"sourceStatus\": \"{{oneOf (array 'Unknown' 'Active' 'Inactive')}}\",\n  \"states\": [\n    {\n      \"avgLatencyInMs\": {{faker 'random.number'}},\n      \"connectionState\": \"{{oneOf (array 'Reachable' 'Unreachable' 'Unknown')}}\",\n      \"endTime\": \"{{faker 'date.recent' 365}}\",\n      \"evaluationState\": \"{{oneOf (array 'NotStarted' 'InProgress' 'Completed')}}\",\n      \"hops\": [\n        {\n          \"address\": \"\",\n          \"id\": \"\",\n          \"issues\": [\n            {\n              \"context\": [\n                {}\n              ],\n              \"origin\": \"{{oneOf (array 'Local' 'Inbound' 'Outbound')}}\",\n              \"severity\": \"{{oneOf (array 'Error' 'Warning')}}\",\n              \"type\": \"{{oneOf (array 'Unknown' 'AgentStopped' 'GuestFirewall' 'DnsResolution' 'SocketBind' 'NetworkSecurityRule' 'UserDefinedRoute' 'PortThrottled' 'Platform')}}\"\n            }\n          ],\n          \"nextHopIds\": [\n            \"\"\n          ],\n          \"resourceId\": \"\",\n          \"type\": \"\"\n        }\n      ],\n      \"maxLatencyInMs\": {{faker 'random.number'}},\n      \"minLatencyInMs\": {{faker 'random.number'}},\n      \"probesFailed\": {{faker 'random.number'}},\n      \"probesSent\": {{faker 'random.number'}},\n      \"startTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful query of connection states.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "be4c09ca-f997-4eee-bbe5-dcd7e20a6e87",
          "body": "{\n  \"sourceStatus\": \"{{oneOf (array 'Unknown' 'Active' 'Inactive')}}\",\n  \"states\": [\n    {\n      \"avgLatencyInMs\": {{faker 'random.number'}},\n      \"connectionState\": \"{{oneOf (array 'Reachable' 'Unreachable' 'Unknown')}}\",\n      \"endTime\": \"{{faker 'date.recent' 365}}\",\n      \"evaluationState\": \"{{oneOf (array 'NotStarted' 'InProgress' 'Completed')}}\",\n      \"hops\": [\n        {\n          \"address\": \"\",\n          \"id\": \"\",\n          \"issues\": [\n            {\n              \"context\": [\n                {}\n              ],\n              \"origin\": \"{{oneOf (array 'Local' 'Inbound' 'Outbound')}}\",\n              \"severity\": \"{{oneOf (array 'Error' 'Warning')}}\",\n              \"type\": \"{{oneOf (array 'Unknown' 'AgentStopped' 'GuestFirewall' 'DnsResolution' 'SocketBind' 'NetworkSecurityRule' 'UserDefinedRoute' 'PortThrottled' 'Platform')}}\"\n            }\n          ],\n          \"nextHopIds\": [\n            \"\"\n          ],\n          \"resourceId\": \"\",\n          \"type\": \"\"\n        }\n      ],\n      \"maxLatencyInMs\": {{faker 'random.number'}},\n      \"minLatencyInMs\": {{faker 'random.number'}},\n      \"probesFailed\": {{faker 'random.number'}},\n      \"probesSent\": {{faker 'random.number'}},\n      \"startTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted query of connection states.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "644d47df-b42b-456f-8f34-668db4e6c834",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3690d7cb-89c7-4c78-a2d9-71e19226311c",
      "documentation": "Starts the specified connection monitor.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/connectionMonitors/:connectionMonitorName/start",
      "responses": [
        {
          "uuid": "d2647c4b-5b92-47bf-b92a-173679100b25",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful. The operation starts the connection monitor.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e1de1724-0f44-471e-9135-6de62d2f5bfa",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted. The operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "74956307-720f-44e8-9ab0-c44b15508e7f",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ab42672b-f47c-486a-8e70-aaae0fbd0ea0",
      "documentation": "Stops the specified connection monitor.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/networkWatchers/:networkWatcherName/connectionMonitors/:connectionMonitorName/stop",
      "responses": [
        {
          "uuid": "30e51325-4a32-4c47-ae7c-0279c6c89fa6",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful. The operation stops the connection monitor.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "725d5dab-fcd6-417c-84ab-df6845444818",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted. The operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "48dac5fa-31fb-4216-98e2-7730bc38fd95",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"target\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}