{
  "uuid": "50984605-c033-4493-b26b-93642f336485",
  "lastMigration": 19,
  "name": "AWS SSO OIDC",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "5756d87c-86ed-4c7b-a512-f14e311040ad",
      "documentation": "Creates and returns an access token for the authorized client. The access token issued will be used to fetch short-term credentials for the assigned roles in the AWS account.",
      "method": "post",
      "endpoint": "token",
      "responses": [
        {
          "uuid": "2aae060f-ee4e-443b-bc1f-d317f9d90a40",
          "body": "{\n  \"accessToken\": \"\",\n  \"tokenType\": \"\",\n  \"expiresIn\": {{faker 'random.number'}},\n  \"refreshToken\": \"\",\n  \"idToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0965d5bd-bda4-4e1c-85ed-57992a0d2260",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "25e6e681-689d-4c41-a8bd-316b40d97816",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dbe69362-fa17-4988-8bb6-2499281bbbe1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidGrantException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a39c293a-b30b-451f-94eb-525f4bfa4194",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "UnauthorizedClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4b789727-0af7-4613-82a6-be7a2ea25d7a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnsupportedGrantTypeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d52cba44-891d-4095-bfe9-3b62126efe3c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidScopeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c59d93f8-13e8-4229-9c29-efc9edd764d9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "AuthorizationPendingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "616d8ccc-395f-451a-a16d-803df4771c2c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "SlowDownException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "becfe159-1666-4f3b-a291-0124e4d5c5d6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "32d2e2cc-0c58-4b88-84fe-131cd6ed29f1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "ExpiredTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0d5b0a08-4a92-4955-97ee-f99cd3d74cd1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fcb195dd-2f75-4968-94ca-2ea8e8266512",
      "documentation": "Registers a client with AWS SSO. This allows clients to initiate device authorization. The output should be persisted for reuse through many authentication requests.",
      "method": "post",
      "endpoint": "client/register",
      "responses": [
        {
          "uuid": "c3b5dd4e-d583-4e05-a8ca-026dae053ddc",
          "body": "{\n  \"clientId\": \"\",\n  \"clientSecret\": \"\",\n  \"clientIdIssuedAt\": {{faker 'random.number'}},\n  \"clientSecretExpiresAt\": {{faker 'random.number'}},\n  \"authorizationEndpoint\": \"\",\n  \"tokenEndpoint\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5b54cb98-bc58-4f85-a416-9be41f8dbd95",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b68646ee-7578-4959-afd4-feb8c1436e4a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidScopeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6268dd7a-ce96-40d9-a1a3-31ca51e55c8d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidClientMetadataException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8943f19d-6cc9-413b-b017-0d00f952e39b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7787ceb6-89af-42dd-a0e2-2693ffc2ab9c",
      "documentation": "Initiates device authorization by requesting a pair of verification codes from the authorization service.",
      "method": "post",
      "endpoint": "device_authorization",
      "responses": [
        {
          "uuid": "98cd012c-b386-4ca7-aa0f-8e5525f249e5",
          "body": "{\n  \"deviceCode\": \"\",\n  \"userCode\": \"\",\n  \"verificationUri\": \"\",\n  \"verificationUriComplete\": \"\",\n  \"expiresIn\": {{faker 'random.number'}},\n  \"interval\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c8f886a4-5de9-4fa8-9a2c-cc756885c9d2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1c9c0f32-d59b-4669-b44e-087fef696164",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "caecbcba-82de-4856-b7b5-b4577a924f78",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "UnauthorizedClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1aae415a-5656-4c10-8c00-2ce31b066e58",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "SlowDownException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cf92e9c5-b00d-4550-9881-36cd82ccabf7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}