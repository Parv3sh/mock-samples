{
  "uuid": "ef609f5d-f683-410c-a4ab-739c849242a1",
  "lastMigration": 19,
  "name": "AWS SSO OIDC",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "c75e07ca-e8e3-45ed-8a9f-f71d8b77ee0b",
      "documentation": "Creates and returns an access token for the authorized client. The access token issued will be used to fetch short-term credentials for the assigned roles in the AWS account.",
      "method": "post",
      "endpoint": "token",
      "responses": [
        {
          "uuid": "49d70e84-942a-43be-b169-a1160488fc06",
          "body": "{\n  \"accessToken\": \"\",\n  \"tokenType\": \"\",\n  \"expiresIn\": {{faker 'random.number'}},\n  \"refreshToken\": \"\",\n  \"idToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "98b1ad36-920e-43e1-8628-0435c2cb8ebc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "69f4b3d9-30f0-4b36-9dbf-5a731d91dd25",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a822e1bb-7ca8-446f-a7f1-a31cfd6c5166",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidGrantException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "566eb3eb-cb40-4ae2-a2c9-461d21585f82",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "UnauthorizedClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2c4a2b50-e226-4a4a-8797-548b3ddd8fa7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnsupportedGrantTypeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "79f7a7fd-5ee1-47f8-9288-8c1198b4d784",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidScopeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "08b35605-e76a-4d6f-af86-ed1030dc9a95",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "AuthorizationPendingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5981436c-1592-4007-a70a-87270143e95f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "SlowDownException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9738b9fe-6612-4e00-84a9-28dcc755aadb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8c1bd9e8-94c0-487d-9b21-424589a5fa5b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "ExpiredTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "33dd99df-5814-4e5c-8a9e-2959af75e722",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c344c7c0-22c8-4fe5-89db-89568da0f4bd",
      "documentation": "Registers a client with AWS SSO. This allows clients to initiate device authorization. The output should be persisted for reuse through many authentication requests.",
      "method": "post",
      "endpoint": "client/register",
      "responses": [
        {
          "uuid": "b7af1587-e25b-4f60-9e99-3d60d8fad25f",
          "body": "{\n  \"clientId\": \"\",\n  \"clientSecret\": \"\",\n  \"clientIdIssuedAt\": {{faker 'random.number'}},\n  \"clientSecretExpiresAt\": {{faker 'random.number'}},\n  \"authorizationEndpoint\": \"\",\n  \"tokenEndpoint\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "df7da96e-c7c8-4c9c-aded-103ad025bc20",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5f519b46-f2df-44fc-bf41-9f618028ba3a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidScopeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f599a1ab-387b-4ad8-b7f8-a919a621cf24",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidClientMetadataException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dc80a632-caa1-4df7-a731-a8ad15346d6c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dfd2f712-f1cc-46b2-aa0b-a389edf5cc9b",
      "documentation": "Initiates device authorization by requesting a pair of verification codes from the authorization service.",
      "method": "post",
      "endpoint": "device_authorization",
      "responses": [
        {
          "uuid": "156e2597-e1e7-4e0a-8ca9-52404da2c543",
          "body": "{\n  \"deviceCode\": \"\",\n  \"userCode\": \"\",\n  \"verificationUri\": \"\",\n  \"verificationUriComplete\": \"\",\n  \"expiresIn\": {{faker 'random.number'}},\n  \"interval\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9a112ce4-b247-427d-b5e6-b65ef50e6334",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6a163f4e-ac42-4e2e-88be-a3770555c871",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "07031862-aae9-4e13-a53a-2104322d59e5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "UnauthorizedClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7c1b9660-17aa-4564-a609-7f53adf76d88",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "SlowDownException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dec6dbd6-2047-4aca-981f-bd7d076ee74a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}