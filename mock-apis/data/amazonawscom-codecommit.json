{
  "uuid": "743e0834-15ac-4c62-b00d-f92588269186",
  "lastMigration": 19,
  "name": "AWS CodeCommit",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "65b255cb-e05e-4c88-b387-4f3ee7e8b0ad",
      "documentation": "Creates an association between an approval rule template and a specified repository. Then, the next time a pull request is created in the repository where the destination reference (if specified) matches the destination reference (branch) for the pull request, an approval rule that matches the template conditions is automatically created for that pull request. If no destination references are specified in the template, an approval rule that matches the template contents is created for all pull requests in that repository.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.AssociateApprovalRuleTemplateWithRepository",
      "responses": [
        {
          "uuid": "19f79619-2bf0-4678-bd1e-5c5558ee7ab6",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e182de9c-4b67-423c-b8e4-a2e6ff9bd16e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ApprovalRuleTemplateNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0764ae39-089d-4f04-b8b7-a6d6a675c492",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidApprovalRuleTemplateNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6edde2b8-e6c7-4fdc-8826-a0623f8cbb0c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ApprovalRuleTemplateDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b85af897-bd34-49d7-ac5c-3b0c17b7f09e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "MaximumRuleTemplatesAssociatedWithRepositoryException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f57e97ab-5d3c-4db6-be4d-0a031d85ee7f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4acd1301-a0fe-43f7-9b2c-d241db7b5fd9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2fe797f5-ca04-4991-93e8-a15c82f54a04",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "deccdf95-ae55-43ba-ad41-065e1c72e4cb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "69c148e1-f26b-4bb0-aede-2d8c430c5dac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6b5014c8-74bd-41de-ae38-3ff5d1ece925",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9a279c5e-542d-4be4-ac22-3dd4125175e8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b7b05a69-a5ac-43e3-b4e5-450bb747e280",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1a4f8546-5aeb-41ae-9315-9bd76c0d0dd9",
      "documentation": "Creates an association between an approval rule template and one or more specified repositories. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.BatchAssociateApprovalRuleTemplateWithRepositories",
      "responses": [
        {
          "uuid": "555fd743-ad98-44ca-9524-a7e6db47ae1f",
          "body": "{\n  \"associatedRepositoryNames\": [\n    \"\"\n  ],\n  \"errors\": [\n    {\n      \"repositoryName\": \"\",\n      \"errorCode\": \"\",\n      \"errorMessage\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2906e883-ed48-4c52-8d3c-891764c8d01c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ApprovalRuleTemplateNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a97f40ab-bdc2-4382-adc4-3474e4f3678c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidApprovalRuleTemplateNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3e997c8e-6be9-4252-974e-4865ec86905f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ApprovalRuleTemplateDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "63a73b33-4d69-40c3-914e-5869aba52be8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "RepositoryNamesRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f633722f-a348-4c60-85cb-97d007945627",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "MaximumRepositoryNamesExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3c111151-a174-4324-a675-c809957eeb64",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d7d80acf-7c39-46f3-8bbe-fa9f86e43cf5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ff3bba6e-4441-41bd-b613-c3ba02fcb93d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3630c7f6-a287-47c8-8cad-3a3fc1f52f43",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "069022d0-c0d5-4ce2-966c-ab42a86ca9c9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1e28bdd9-670c-466a-95e7-7ada1c10d011",
      "documentation": "Returns information about one or more merge conflicts in the attempted merge of two commit specifiers using the squash or three-way merge strategy.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.BatchDescribeMergeConflicts",
      "responses": [
        {
          "uuid": "84186897-f3a7-481c-8036-fd60cbe3c3dc",
          "body": "{\n  \"conflicts\": [\n    {\n      \"conflictMetadata\": {\n        \"filePath\": \"\",\n        \"fileSizes\": {\n          \"source\": {{faker 'random.number'}},\n          \"destination\": {{faker 'random.number'}},\n          \"base\": {{faker 'random.number'}}\n        },\n        \"fileModes\": {\n          \"source\": \"\",\n          \"destination\": \"\",\n          \"base\": \"\"\n        },\n        \"objectTypes\": {\n          \"source\": \"\",\n          \"destination\": \"\",\n          \"base\": \"\"\n        },\n        \"numberOfConflicts\": {{faker 'random.number'}},\n        \"isBinaryFile\": {\n          \"source\": {{faker 'random.boolean'}},\n          \"destination\": {{faker 'random.boolean'}},\n          \"base\": {{faker 'random.boolean'}}\n        },\n        \"contentConflict\": {{faker 'random.boolean'}},\n        \"fileModeConflict\": {{faker 'random.boolean'}},\n        \"objectTypeConflict\": {{faker 'random.boolean'}},\n        \"mergeOperations\": {\n          \"source\": \"\",\n          \"destination\": \"\"\n        }\n      },\n      \"mergeHunks\": [\n        {\n          \"isConflict\": {{faker 'random.boolean'}},\n          \"source\": {\n            \"startLine\": {{faker 'random.number'}},\n            \"endLine\": {{faker 'random.number'}},\n            \"hunkContent\": \"\"\n          },\n          \"destination\": {\n            \"startLine\": {{faker 'random.number'}},\n            \"endLine\": {{faker 'random.number'}},\n            \"hunkContent\": \"\"\n          },\n          \"base\": {\n            \"startLine\": {{faker 'random.number'}},\n            \"endLine\": {{faker 'random.number'}},\n            \"hunkContent\": \"\"\n          }\n        }\n      ]\n    }\n  ],\n  \"nextToken\": \"\",\n  \"errors\": [\n    {\n      \"filePath\": \"\",\n      \"exceptionName\": \"\",\n      \"message\": \"\"\n    }\n  ],\n  \"destinationCommitId\": \"\",\n  \"sourceCommitId\": \"\",\n  \"baseCommitId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7887b503-f642-4d80-980d-fef4db016340",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a0648c83-91aa-43be-be94-e4c21e1264cf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "33ffa211-98f8-4356-acb1-d4c6cb99a24a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "23042f82-7875-4643-94b4-97fce0c49cfa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "MergeOptionRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0d971cfa-eed6-4bd7-a7bc-8f8607a129bf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidMergeOptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3fff9da3-e011-4663-a1b3-d4727fe5da8a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidContinuationTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e9e20fcd-960b-4069-9922-f199baa50067",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "CommitRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "805f6edd-c73c-4117-a944-6c39454cbf3d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "CommitDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0d339e1a-4f12-488d-be03-708578e084d1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidCommitException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "14392411-7bcd-4806-b777-7386f3435947",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "TipsDivergenceExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2f8fc2aa-6dd4-4dc5-8d98-5abc39cf2bc7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidMaxConflictFilesException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b5761393-7761-4d49-9e1a-115945fab199",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "InvalidMaxMergeHunksException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "adb6cf1a-5176-4156-96a2-16a9d11daa1e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "InvalidConflictDetailLevelException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4254e3bf-3544-4e92-b2f1-fcecd4567b0a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "InvalidConflictResolutionStrategyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e341c5dc-87c2-4f3e-9451-9b5eba44c784",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "MaximumFileContentToLoadExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c49d04e3-9102-48dc-bb42-f1fa4f87e3e7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 495,
          "label": "MaximumItemsToCompareExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "226e6a0d-99ca-48c2-9db3-dda3d90c8cea",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 496,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cf7cd6d8-d981-47b5-82d3-516f4b84804a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 497,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c31ab26e-ad66-4abf-91cb-9814f5e1aa31",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 498,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2bb1e45f-66f2-4ce7-a1f1-1d951699d320",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 499,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d45fd7e8-a606-4667-9fff-ec7a17da4d8a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 500,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4e4be900-1bd7-429d-ab25-c546942662b5",
      "documentation": "Removes the association between an approval rule template and one or more specified repositories. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.BatchDisassociateApprovalRuleTemplateFromRepositories",
      "responses": [
        {
          "uuid": "20eeeb0b-16e5-4f45-9e62-49a74edd93bb",
          "body": "{\n  \"disassociatedRepositoryNames\": [\n    \"\"\n  ],\n  \"errors\": [\n    {\n      \"repositoryName\": \"\",\n      \"errorCode\": \"\",\n      \"errorMessage\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6bbbd9ed-e935-4eac-8906-749ec578fd75",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ApprovalRuleTemplateNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5db40a85-7e4f-4a97-80f3-00a33d010bf0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidApprovalRuleTemplateNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "54a47a0e-3895-4b73-8266-fe638097d3fe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ApprovalRuleTemplateDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dceab986-b751-4b39-bb69-a1dd761290a4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "RepositoryNamesRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "51c17cdf-ba4b-488c-a694-188a3297ae59",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "MaximumRepositoryNamesExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "acae3f7b-db71-4130-a597-e031fd5a58ad",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1ec14abf-7b7b-4386-87af-008f459af574",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3085ca4a-7355-4604-9427-73ce349d9c7d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7b4b2ebc-2cdf-41d5-abb2-956027ca225f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2b42ed6f-1c95-447a-a4a4-53e16208611f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6885f68b-8a6a-4c8f-991c-9af148559efc",
      "documentation": "Returns information about the contents of one or more commits in a repository.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.BatchGetCommits",
      "responses": [
        {
          "uuid": "ef5cee85-5b11-4ff2-aec6-6d63b6474877",
          "body": "{\n  \"commits\": [\n    {\n      \"commitId\": \"\",\n      \"treeId\": \"\",\n      \"parents\": [\n        \"\"\n      ],\n      \"message\": \"\",\n      \"author\": {\n        \"name\": \"\",\n        \"email\": \"\",\n        \"date\": \"\"\n      },\n      \"committer\": {\n        \"name\": \"\",\n        \"email\": \"\",\n        \"date\": \"\"\n      },\n      \"additionalData\": \"\"\n    }\n  ],\n  \"errors\": [\n    {\n      \"commitId\": \"\",\n      \"errorCode\": \"\",\n      \"errorMessage\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "56bdaedf-ddbb-4eed-a794-daf6cb309275",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "CommitIdsListRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f39ef98c-84ad-4a0a-8243-4d316dea4866",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "CommitIdsLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f9a3ca52-9e4a-4207-a459-072461948037",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c334cbf2-c5a5-4b44-979b-5efca84e6056",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4a2e5542-4864-433c-9a03-3fe36bd7bc4c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ccd20b9d-76e9-41ee-b384-0c8b9dce358c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "12a4223d-8368-4db3-8bd8-91cc55ac2d4b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fc94c499-ede5-4d5d-b148-932621478148",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2b28a608-2491-479e-a353-a8812bfdd948",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "15a2879d-be1b-46c0-85a4-52bc8077c1cb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8a2fa6ba-fba1-40b2-945a-ecd9906d751c",
      "documentation": "<p>Returns information about one or more repositories.</p> <note> <p>The description field for a repository accepts all HTML characters and all valid Unicode characters. Applications that do not HTML-encode the description and display it in a webpage can expose users to potentially malicious code. Make sure that you HTML-encode the description field in any application that uses this API to display the repository description on a webpage.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.BatchGetRepositories",
      "responses": [
        {
          "uuid": "d47126d2-5598-4955-97c0-8afa0aad19b1",
          "body": "{\n  \"repositories\": [\n    {\n      \"accountId\": \"\",\n      \"repositoryId\": \"\",\n      \"repositoryName\": \"\",\n      \"repositoryDescription\": \"\",\n      \"defaultBranch\": \"\",\n      \"lastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n      \"creationDate\": \"{{faker 'date.recent' 365}}\",\n      \"cloneUrlHttp\": \"\",\n      \"cloneUrlSsh\": \"\",\n      \"Arn\": \"\"\n    }\n  ],\n  \"repositoriesNotFound\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "09a4e789-718f-4f1c-9aec-272de396dd21",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryNamesRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8ba15f5b-c117-4fba-bdc7-ed2ca5a8e394",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "MaximumRepositoryNamesExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e94396a5-b000-41e6-9064-f43f37ac86f1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8fd262b2-6206-4fd5-823f-6535c54f7352",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "71a879aa-213a-4b84-8e10-0b547b50cba4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7e815c8c-feb1-4cf3-84e1-b429dbab7c83",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eab08039-0cbd-4e4e-b60e-80db90c1b41b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c0082c95-cd1d-49a6-ab2b-c993339ca5d7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a51895de-88f9-4f7f-8439-50fb9d0da493",
      "documentation": "Creates a template for approval rules that can then be associated with one or more repositories in your AWS account. When you associate a template with a repository, AWS CodeCommit creates an approval rule that matches the conditions of the template for all pull requests that meet the conditions of the template. For more information, see <a>AssociateApprovalRuleTemplateWithRepository</a>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.CreateApprovalRuleTemplate",
      "responses": [
        {
          "uuid": "de5f2602-d1c4-4c51-9ffc-0d43968029df",
          "body": "{\n  \"approvalRuleTemplate\": {\n    \"approvalRuleTemplateId\": \"\",\n    \"approvalRuleTemplateName\": \"\",\n    \"approvalRuleTemplateDescription\": \"\",\n    \"approvalRuleTemplateContent\": \"\",\n    \"ruleContentSha256\": \"\",\n    \"lastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"creationDate\": \"{{faker 'date.recent' 365}}\",\n    \"lastModifiedUser\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "788e1372-13eb-482a-8563-ab382f543e27",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ApprovalRuleTemplateNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6879fcda-aeca-46c2-bdf6-cf510681d398",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidApprovalRuleTemplateNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "16746e2b-cdcd-4410-8845-69853c253de7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ApprovalRuleTemplateNameAlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "18e85cd0-d692-4ba4-bcc5-421abd80f587",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ApprovalRuleTemplateContentRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "82f9f365-41c3-494a-82ad-0a7911e51365",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidApprovalRuleTemplateContentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2cdbd929-573c-47e3-9337-ffc2009e8133",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidApprovalRuleTemplateDescriptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "11d7b17d-935e-4df4-a20d-f1494c4ccb39",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "NumberOfRuleTemplatesExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "efd1415f-0020-4198-af1f-d07107ba56bc",
      "documentation": "<p>Creates a branch in a repository and points the branch to a commit.</p> <note> <p>Calling the create branch operation does not set a repository's default branch. To do this, call the update default branch operation.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.CreateBranch",
      "responses": [
        {
          "uuid": "22fc59c0-818b-4767-a86f-7fdfe2699d8f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "47764eb6-a615-4676-907b-2eee70694ce4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8cedf2bd-ea05-48cf-a853-02b1343a83c4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "58b8f7cb-f96b-4993-b503-7e0bc09044a2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f7024079-7fbf-4b6e-8acc-d8b9204364cc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "BranchNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "659fda8f-1f20-40ec-97e0-8004f63b0450",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "BranchNameExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f8f26924-cd97-4514-af46-f5a17f51e6a0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidBranchNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2fccd14f-1a41-4c1d-b784-771a9736f3fb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "CommitIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c0376f03-1046-47e0-bffd-9f6cd9c80d0d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "CommitDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fbbd5c81-166b-46a3-8d6e-9633684f8571",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidCommitIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f89e6237-a9b3-4ed0-81e4-4c4c0af6181c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "30faaa13-cece-46db-be80-f3b66a018f49",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6c91e85b-aca5-4784-841e-b286a816378a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "18f8b9dd-00bd-4fdd-a9d6-0c64bc938119",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "75f1bbb9-10e6-4984-9b58-048983f0e277",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f9ddf7df-63ec-4b27-8af1-4ac535405a90",
      "documentation": "Creates a commit for a repository on the tip of a specified branch.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.CreateCommit",
      "responses": [
        {
          "uuid": "3d0c191e-3ca8-4e1f-b15c-e4ae1534f63a",
          "body": "{\n  \"commitId\": \"\",\n  \"treeId\": \"\",\n  \"filesAdded\": [\n    {\n      \"absolutePath\": \"\",\n      \"blobId\": \"\",\n      \"fileMode\": \"\"\n    }\n  ],\n  \"filesUpdated\": [\n    {\n      \"absolutePath\": \"\",\n      \"blobId\": \"\",\n      \"fileMode\": \"\"\n    }\n  ],\n  \"filesDeleted\": [\n    {\n      \"absolutePath\": \"\",\n      \"blobId\": \"\",\n      \"fileMode\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a4a42f8d-2d64-4868-94cf-208aa1c07d08",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "73741921-b88f-4d5d-9372-c98bf948cbb9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ce0e503f-b210-492f-8b29-b35550b1d165",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aae55d66-70cc-43b5-aba5-1b1d783974bc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ParentCommitIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eaf3e342-8e36-4c98-bcfc-18b33e9f5d07",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidParentCommitIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e00615b4-3c4b-47f7-b50d-a3a06cd6282a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ParentCommitDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "27276c8f-2e7d-4fa1-9333-fea40716a4ca",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ParentCommitIdOutdatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5cdae710-b223-419f-ac56-26fb322a7470",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "BranchNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bb7b2d1c-aeff-4f96-bfef-092065732729",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidBranchNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0953932e-f106-4a32-b29a-89e02e3d6e7f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "BranchDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7b7306b5-ec77-4b47-a9b2-ef82f6cdb862",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "BranchNameIsTagNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bfa3edc9-a3d4-41cd-81f2-539615f023d6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "FileEntryRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "70f318eb-5bf0-45dc-8819-2c435ba9a1f2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "MaximumFileEntriesExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4ec9c01c-6c39-402a-9791-496f3ffd8156",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "PutFileEntryConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c98c4758-44dd-4882-bf06-652a1363d5c5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "SourceFileOrContentRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f532ead0-79c7-4c83-bbb2-6096f17e78a7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 495,
          "label": "FileContentAndSourceFileSpecifiedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f2de07e4-f757-48bb-907b-ba15259b35fd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 496,
          "label": "PathRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c5b3424b-4e5c-42b0-a369-cad5bd3ccbbf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 497,
          "label": "InvalidPathException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ae922b57-581f-4582-9fd8-2b7bd7818113",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 498,
          "label": "SamePathRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e70f07f0-24d4-4672-95c4-03203eacb2fc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 499,
          "label": "FileDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cca0d8cd-a5b9-4f71-9252-2ae701fabdc9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 500,
          "label": "FileContentSizeLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "243f4dd1-5d1d-4c60-bffb-5b3ffc4324ae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 501,
          "label": "FolderContentSizeLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "22f263ea-32f1-4cfe-9f35-889e4d49e08e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 502,
          "label": "InvalidDeletionParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f58a2098-1a54-4176-850f-ef01f09179a4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 503,
          "label": "RestrictedSourceFileException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3eb62ef0-4977-43de-a39c-fd836e8f73c8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 504,
          "label": "FileModeRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1db458f4-a8c3-4668-a6df-7c3f462aa1f4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 505,
          "label": "InvalidFileModeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7162eb72-c5af-49f4-97d7-e466ab2b506b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 506,
          "label": "NameLengthExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b7cbe0c3-349b-46a6-84ef-61d2b2cf80fc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 507,
          "label": "InvalidEmailException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "958151f0-814b-414e-8dfc-c7628a5ca997",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 508,
          "label": "CommitMessageLengthExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9af995cf-bee7-4614-b61b-d43d288bd75b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 509,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "78dc4aa4-ccf9-4a4d-a226-a3ef726879fb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 510,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bb44a7ec-312f-47ef-bd0f-e01cf6a58b52",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 511,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6ebd027d-0dc3-4534-92d2-6b3c3079ec60",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 512,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2ddcd7ae-c9cd-4fb1-9108-15e08ef25124",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 513,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "36698cae-a67a-446b-b386-da2affdd5b10",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 514,
          "label": "NoChangeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fdd3893b-0b71-4670-a43e-d09c0f49580c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 515,
          "label": "FileNameConflictsWithDirectoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ffdfdce5-9a75-4c2a-9759-69bc46405c70",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 516,
          "label": "DirectoryNameConflictsWithFileNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "89c1825f-5051-410f-a509-18d428da384a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 517,
          "label": "FilePathConflictsWithSubmodulePathException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e195a588-58b3-4473-b2d7-0b2109926391",
      "documentation": "Creates a pull request in the specified repository.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.CreatePullRequest",
      "responses": [
        {
          "uuid": "9501cc20-6e67-493a-9e68-a1030657887f",
          "body": "{\n  \"pullRequest\": {\n    \"pullRequestId\": \"\",\n    \"title\": \"\",\n    \"description\": \"\",\n    \"lastActivityDate\": \"{{faker 'date.recent' 365}}\",\n    \"creationDate\": \"{{faker 'date.recent' 365}}\",\n    \"pullRequestStatus\": \"\",\n    \"authorArn\": \"\",\n    \"pullRequestTargets\": [\n      {\n        \"repositoryName\": \"\",\n        \"sourceReference\": \"\",\n        \"destinationReference\": \"\",\n        \"destinationCommit\": \"\",\n        \"sourceCommit\": \"\",\n        \"mergeBase\": \"\",\n        \"mergeMetadata\": {\n          \"isMerged\": {{faker 'random.boolean'}},\n          \"mergedBy\": \"\",\n          \"mergeCommitId\": \"\",\n          \"mergeOption\": \"\"\n        }\n      }\n    ],\n    \"clientRequestToken\": \"\",\n    \"revisionId\": \"\",\n    \"approvalRules\": [\n      {\n        \"approvalRuleId\": \"\",\n        \"approvalRuleName\": \"\",\n        \"approvalRuleContent\": \"\",\n        \"ruleContentSha256\": \"\",\n        \"lastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n        \"creationDate\": \"{{faker 'date.recent' 365}}\",\n        \"lastModifiedUser\": \"\",\n        \"originApprovalRuleTemplate\": {\n          \"approvalRuleTemplateId\": \"\",\n          \"approvalRuleTemplateName\": \"\"\n        }\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "85247232-d190-4877-bf1b-dabf8dd67006",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "df1c31fc-0bff-4c47-b0b3-6df04b6707a0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9e9c9065-6fad-4bc1-a143-34363872dc27",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "02d1811e-cda4-4a3b-89dc-9c902d86d2f1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7a58ec83-d474-4249-a7b9-63a0dc1eba4d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4de0c48a-601c-4722-80ea-c459398c752a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2e79b227-797a-4b50-86f9-31a1e0db0330",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1331e277-9c70-45dd-b33d-15ed0900c05b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "89818dba-edd7-4e56-b542-9be916b85f04",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "ClientRequestTokenRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "87a59ada-1a54-4aae-bbeb-8968af31cdc9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidClientRequestTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cb18d9ab-5db8-4c81-a06f-5aac094fa9e2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "IdempotencyParameterMismatchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e04f7954-716d-406e-8c3f-5ba30670d6b2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "ReferenceNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dca43508-c829-4341-96c4-ded45bccd7c1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "InvalidReferenceNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "22b70895-7144-4629-bf90-463a197c5b0f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "ReferenceDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "37a1c56e-8785-451f-96ee-83a362d05bf3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "ReferenceTypeNotSupportedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9205e93e-5fc1-462e-80ba-67f6a202e5a0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 495,
          "label": "TitleRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "da054261-81b9-49a6-b8f6-29c5fccb03ea",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 496,
          "label": "InvalidTitleException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0716c99a-8f68-4b8d-add9-96bab855b8a8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 497,
          "label": "InvalidDescriptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "467bc172-bad6-44d0-8f9c-f5648d14c3cd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 498,
          "label": "TargetsRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5130a74b-48dd-4dd3-8b85-3bc0bb364034",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 499,
          "label": "InvalidTargetsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "14864155-03a5-4663-83bd-867e03319c86",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 500,
          "label": "TargetRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2661d497-6733-4b33-93a7-842bddc78ca0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 501,
          "label": "InvalidTargetException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a190c188-01f0-441e-8c50-f942d30acce0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 502,
          "label": "MultipleRepositoriesInPullRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "562a1c6a-3b91-4476-affe-b99a77cf1e20",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 503,
          "label": "MaximumOpenPullRequestsExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "87eb8d9e-abf8-47c4-86ae-fd47cba96d94",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 504,
          "label": "SourceAndDestinationAreSameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "42991c96-0331-4ba5-978b-325fab03f93b",
      "documentation": "Creates an approval rule for a pull request.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.CreatePullRequestApprovalRule",
      "responses": [
        {
          "uuid": "c0fa7f22-ccb8-4057-a373-d4c1a9e8c39c",
          "body": "{\n  \"approvalRule\": {\n    \"approvalRuleId\": \"\",\n    \"approvalRuleName\": \"\",\n    \"approvalRuleContent\": \"\",\n    \"ruleContentSha256\": \"\",\n    \"lastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"creationDate\": \"{{faker 'date.recent' 365}}\",\n    \"lastModifiedUser\": \"\",\n    \"originApprovalRuleTemplate\": {\n      \"approvalRuleTemplateId\": \"\",\n      \"approvalRuleTemplateName\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d491ac9b-eae3-4db7-861f-2043aab02fd5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ApprovalRuleNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "20582827-608f-4210-83bd-78752829d1fb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidApprovalRuleNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f8ebf743-6178-4c0a-b4df-053dd490fed7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ApprovalRuleNameAlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ec0bc3cd-e57a-46eb-a10f-c75587d53e47",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ApprovalRuleContentRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2013c337-9888-4017-afd9-3654bf17d414",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidApprovalRuleContentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f61e663b-198e-4eb4-9192-12a687afb1d3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "NumberOfRulesExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5793c3a9-0263-4e46-9e06-624de05455d1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "PullRequestDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c48dea47-e126-4139-9f12-62a405aac024",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidPullRequestIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0211f1db-162c-4a0a-be57-4c0086192061",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "PullRequestIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fd3085be-1b1b-4a15-a5b3-5865c0e363b3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "PullRequestAlreadyClosedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9d8358a8-2f97-4eea-bd53-3ab6239d46a3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "48950348-8840-4039-901e-144f989276f2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b9db2cea-fe04-4369-bf68-dc52833e7357",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dc77011a-1767-407f-b026-3e688aaa1f27",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f4e4de88-c592-4a3d-ba6c-e50c6e8cfbb5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "26c63387-53c2-4dd1-be9f-80ee17111298",
      "documentation": "Creates a new, empty repository.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.CreateRepository",
      "responses": [
        {
          "uuid": "5b235dc7-0df9-4ea2-ba9d-47bed251a6f4",
          "body": "{\n  \"repositoryMetadata\": {\n    \"accountId\": \"\",\n    \"repositoryId\": \"\",\n    \"repositoryName\": \"\",\n    \"repositoryDescription\": \"\",\n    \"defaultBranch\": \"\",\n    \"lastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"creationDate\": \"{{faker 'date.recent' 365}}\",\n    \"cloneUrlHttp\": \"\",\n    \"cloneUrlSsh\": \"\",\n    \"Arn\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d4e24dcf-4903-4a8b-859a-251dc16f39df",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryNameExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8e76d618-a9ab-412d-88a5-f880b5bb923e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eea35bc5-607d-4d90-9cc6-ab17a4b38da4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a27d551a-f2f0-43dc-8b03-8d64752b01a5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidRepositoryDescriptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bc6c747c-2d35-4d2a-9da7-ffff32936a39",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "RepositoryLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c7a5cee4-127b-4146-b4a4-48837503d9a7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "14ef8fc1-7e05-4ab5-a2c6-e7af89c26c16",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "205abf00-86ad-4b6b-ab8c-2262dd5fbddc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "671834cb-670b-43c4-8480-3570848c1027",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a1084ad8-ccc7-491a-aa0e-f08080f090af",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bbcff096-2a7d-4298-9704-29cb1af96a48",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidTagsMapException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dd6a01a7-1bd1-4673-acda-161385465a56",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "TooManyTagsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a614922a-e5f0-443e-b917-f560c3ef63ae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "InvalidSystemTagUsageException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7704de9e-285c-48e3-ac28-198fee396f25",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "TagPolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "eb0a28dd-8f70-477a-8501-1f02a2d96b25",
      "documentation": "<p>Creates an unreferenced commit that represents the result of merging two branches using a specified merge strategy. This can help you determine the outcome of a potential merge. This API cannot be used with the fast-forward merge strategy because that strategy does not create a merge commit.</p> <note> <p>This unreferenced merge commit can only be accessed using the GetCommit API or through git commands such as git fetch. To retrieve this commit, you must specify its commit ID or otherwise reference it.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.CreateUnreferencedMergeCommit",
      "responses": [
        {
          "uuid": "bc0c5f7b-a3f0-48e7-abd7-0ac3cf0bf48e",
          "body": "{\n  \"commitId\": \"\",\n  \"treeId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0db6448a-f8d2-4075-9a89-d0bdd7c1b66c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cd8f15a6-10cf-4ce7-a58d-dc3957222f7f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6ffaa8c9-d9ea-42cc-a858-ad1b0330f609",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "46f0d84f-29f1-4773-8c5b-f6dc67a81b1c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TipsDivergenceExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aed3904b-6add-4172-86af-ee204aa4d0f8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "CommitRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c13dd3c8-32eb-4538-8d3a-bd1f5db14b42",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidCommitException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2b28106c-1897-42fe-beae-d479e34df6ac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "CommitDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "76f8fad5-edcb-4a23-b877-d44f2f4078a3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "MergeOptionRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f70646d2-e198-4e28-8dfe-add9380d839a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidMergeOptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1f297533-faaf-4b11-ac35-9c2d156a87ba",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidConflictDetailLevelException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "458e3f6a-4fb9-413f-96b0-16e0541eec70",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidConflictResolutionStrategyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5f2d6a2c-e856-434b-8f3d-1bf609de261b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "InvalidConflictResolutionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "72da0ff4-58f3-4deb-8c1e-cfe5823cbf12",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "ManualMergeRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d473937b-ee68-49bc-bfca-d3dd90d7540f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "MaximumConflictResolutionEntriesExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9504938f-f0c3-4034-9545-4ec7fd26eb9e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "MultipleConflictResolutionEntriesException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fb79e1ce-db87-4cf2-bdc8-599ebc796e44",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 495,
          "label": "ReplacementTypeRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b1970f7d-58d4-48f7-8530-c1c05ac97d52",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 496,
          "label": "InvalidReplacementTypeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8d96f14c-1e9c-4c6b-9e0f-515855b5fc81",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 497,
          "label": "ReplacementContentRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "395399ed-9791-4cf3-b4bd-4c66a31d06b1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 498,
          "label": "InvalidReplacementContentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "31d6cbe7-ca2c-40d7-bedb-a4afd71dfda3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 499,
          "label": "PathRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5d54c416-b6f0-4592-8bc5-e8faa06b049f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 500,
          "label": "InvalidPathException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f1faa5f4-fe78-4f1f-8341-f67bf65ae350",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 501,
          "label": "FileContentSizeLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2ea85543-6bb5-4466-b84d-4fe4189c91c5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 502,
          "label": "FolderContentSizeLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9ca5ddde-3a16-4a20-b0be-00b2b98fe8d7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 503,
          "label": "MaximumFileContentToLoadExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a5fd6199-a975-4ea6-94c3-ae8a8a5d4590",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 504,
          "label": "MaximumItemsToCompareExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4b86a321-c9e6-435b-a9ad-6014890922a6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 505,
          "label": "ConcurrentReferenceUpdateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c33fe5d6-b89f-4909-ac7f-539a2ac897a4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 506,
          "label": "FileModeRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7fc9ded7-789c-4436-97ae-bd40b2c1e764",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 507,
          "label": "InvalidFileModeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5ac74420-e3dd-44c6-881a-195009cad152",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 508,
          "label": "NameLengthExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "15dbb799-e538-478e-8cc4-f6a22a6f5da3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 509,
          "label": "InvalidEmailException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3c3967e8-aca5-4b8f-971a-d728b5df43c0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 510,
          "label": "CommitMessageLengthExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "86ac4b38-6153-403d-982d-02ced69e3700",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 511,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "367928ff-4020-4b1a-9c52-5fa27ec178c2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 512,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "24759ff5-f3d8-41e1-8807-f76506741531",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 513,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "41460396-af36-46dc-9112-c305aa443284",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 514,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "15f45548-aca2-4dd0-b114-7e51c15fd24a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 515,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "716616e2-ce1f-4d78-afab-c15f09a1ae31",
      "documentation": "Deletes a specified approval rule template. Deleting a template does not remove approval rules on pull requests already created with the template.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.DeleteApprovalRuleTemplate",
      "responses": [
        {
          "uuid": "02bd5d77-c924-452a-9e6c-39eeb9bf226c",
          "body": "{\n  \"approvalRuleTemplateId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1af96573-d5ac-4029-b440-747600df5fbb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ApprovalRuleTemplateNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7dfafb38-fa71-4a0d-b673-e683a06ba48a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidApprovalRuleTemplateNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2050d4f7-109e-4245-bfcd-18ea1dd19be0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ApprovalRuleTemplateInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d425600f-245e-4e5b-ad53-6cc05f8ccfce",
      "documentation": "Deletes a branch from a repository, unless that branch is the default branch for the repository. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.DeleteBranch",
      "responses": [
        {
          "uuid": "de9766ea-e8a8-4eb5-a073-6ec1852bfc2f",
          "body": "{\n  \"deletedBranch\": {\n    \"branchName\": \"\",\n    \"commitId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "514a7e23-0f41-411a-9df5-deeb714d5c6e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cb2a2832-14f3-4091-a87c-9989f51aa487",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b7670c3b-18d2-4c8a-bf85-4fcc62e66082",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "65f0f92a-0614-4fcc-9de6-89decc3fd1c4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "BranchNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dc78db76-a00f-4850-9d98-64068ee50380",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidBranchNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "98f03861-6097-4f00-ae66-58122c4c368c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "DefaultBranchCannotBeDeletedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1b21f1b0-afdf-4d6b-a2b1-cb8126c8356e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "13c06dea-3f84-41ea-8891-79edd776fd35",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3722dfaf-9068-4df7-b8b4-b2f296b12f4b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "08279deb-c722-40aa-875c-8c06ef66b2d5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aa32d92f-79e2-4d24-86cb-67d73f10f2e4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "69435a35-83e0-407e-a7c6-a07b7721ec9a",
      "documentation": "Deletes the content of a comment made on a change, file, or commit in a repository.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.DeleteCommentContent",
      "responses": [
        {
          "uuid": "00429af2-18a2-4f52-8a94-d38ebaa134d2",
          "body": "{\n  \"comment\": {\n    \"commentId\": \"\",\n    \"content\": \"\",\n    \"inReplyTo\": \"\",\n    \"creationDate\": \"{{faker 'date.recent' 365}}\",\n    \"lastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"authorArn\": \"\",\n    \"deleted\": {{faker 'random.boolean'}},\n    \"clientRequestToken\": \"\",\n    \"callerReactions\": [\n      \"\"\n    ],\n    \"reactionCounts\": {}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fc7214c3-a5a4-46d7-8f53-b8525a1dba56",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "CommentDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ac792551-4a22-4c4c-b822-9aae0ba0d4e8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "CommentIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "80bc0a06-2cea-4231-b6dc-140c0370da57",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidCommentIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5b8c0f1b-e85e-4828-b1b3-8e5dd29b70bb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "CommentDeletedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ba1765d8-bbcf-40b4-ab18-47b96da191cd",
      "documentation": "Deletes a specified file from a specified branch. A commit is created on the branch that contains the revision. The file still exists in the commits earlier to the commit that contains the deletion.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.DeleteFile",
      "responses": [
        {
          "uuid": "28d836bf-f954-4600-a2e8-8875cf1895cd",
          "body": "{\n  \"commitId\": \"\",\n  \"blobId\": \"\",\n  \"treeId\": \"\",\n  \"filePath\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b49933ad-cf84-4179-8cf9-95f9f4d9f863",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "269a70c0-dee7-4309-abba-771416823021",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "51373eb8-f32f-4cc8-ae3f-857438ae4e8c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "927cb215-dfeb-451c-abbb-fc3c6b236f2d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ParentCommitIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9cc3af6b-81ad-43c3-acd3-50f575666e25",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidParentCommitIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5c3cdcfa-8e44-447b-af00-c7320c2b6320",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ParentCommitDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5745cc68-11d8-4c07-a2c7-d98f055d2f50",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ParentCommitIdOutdatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c9d974c0-54d6-479f-9f9d-8dae49e44a4f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "PathRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4051487f-17b2-4834-8c0a-03f123a495bd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidPathException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "af113fd8-f88b-40aa-92fa-a5ae44badf6d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "FileDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "15177d3b-d08a-4029-bc6c-55315781a462",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "BranchNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ac37e508-0bf4-483c-8734-9c58980534f5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "InvalidBranchNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9f26f7df-c395-4451-b533-488f3ecd38fb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "BranchDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d2fb08c9-092f-4997-8c8d-e826b955c620",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "BranchNameIsTagNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "338a484e-dfdc-4f2b-bd4e-7a6912a20a2f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "NameLengthExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c9eece58-c2b0-4ac2-a09a-7b3f3031dba5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 495,
          "label": "InvalidEmailException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "95403a85-1ba2-4c43-9043-ac9677fff622",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 496,
          "label": "CommitMessageLengthExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "db56d3e2-17c3-4c1e-82d0-4e614adfb748",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 497,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0f4d19b2-524e-4643-a3a4-f3f71fc59000",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 498,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "40c2fa56-e22d-4cab-b252-a3e7fbfc3854",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 499,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a4ae413a-aa7f-43da-bb12-565e2d1d797a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 500,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7de92d93-9a5d-4d0a-ab21-2b36f4f8dc06",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 501,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "25349cfd-439c-4c07-b9c6-8d93e54e5a4d",
      "documentation": "Deletes an approval rule from a specified pull request. Approval rules can be deleted from a pull request only if the pull request is open, and if the approval rule was created specifically for a pull request and not generated from an approval rule template associated with the repository where the pull request was created. You cannot delete an approval rule from a merged or closed pull request.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.DeletePullRequestApprovalRule",
      "responses": [
        {
          "uuid": "3a782d78-8408-419e-8b14-aa68e92c7d5e",
          "body": "{\n  \"approvalRuleId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9456b483-9d37-4123-baca-cc993ed221ef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "PullRequestDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e9cd6332-08d5-4227-b8bf-fe44e13d6995",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidPullRequestIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8bff7f03-332d-4ca7-a798-ecdcd9d801d8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "PullRequestIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aae59bab-c00e-4883-9cea-bfa155b1f6c5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "PullRequestAlreadyClosedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "64377c50-6651-44bc-9aaf-3943f95ebab3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ApprovalRuleNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1b5e5b94-4577-48c1-a4a9-47a72560772f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidApprovalRuleNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "45fa2750-f671-478a-b603-39c9c1fcd822",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "CannotDeleteApprovalRuleFromTemplateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a6e74e7a-e0fa-442c-a180-2d27c0817b4c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "903307f6-a15e-4c93-8ff8-2247a0e984f0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5a0a975d-a55a-47a2-9788-9f3444a450a1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2825256f-560d-4499-983d-9fff040ff800",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "216639c3-25e4-40f5-a400-6db53bed55e5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f829ead7-fe41-46a3-a62f-cfe718958b60",
      "documentation": "<p>Deletes a repository. If a specified repository was already deleted, a null repository ID is returned.</p> <important> <p>Deleting a repository also deletes all associated objects and metadata. After a repository is deleted, all future push calls to the deleted repository fail.</p> </important>",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.DeleteRepository",
      "responses": [
        {
          "uuid": "62822532-833f-4942-abc9-5f2e903fd37a",
          "body": "{\n  \"repositoryId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "89239958-a209-4167-a402-5e3e18b2fc2d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2e865576-5e56-452d-9322-488edc2ddce5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a24210dc-87ed-4493-8210-ffdc5acb37fd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c4b5db21-d3af-46be-833a-4d621e954fae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "efca0ca3-61e9-4a3a-8c92-332fe612b069",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "04d54328-fa83-4555-be2f-06671e25b756",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "73e46e42-ff1d-4549-a17f-52fdc9b71d1d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "58772d38-1357-4a3d-903b-af7c1ccaaea3",
      "documentation": "Returns information about one or more merge conflicts in the attempted merge of two commit specifiers using the squash or three-way merge strategy. If the merge option for the attempted merge is specified as FAST_FORWARD_MERGE, an exception is thrown.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.DescribeMergeConflicts",
      "responses": [
        {
          "uuid": "5f76207c-52d3-4370-94b1-bf5059f6b4c4",
          "body": "{\n  \"conflictMetadata\": {\n    \"filePath\": \"\",\n    \"fileSizes\": {\n      \"source\": {{faker 'random.number'}},\n      \"destination\": {{faker 'random.number'}},\n      \"base\": {{faker 'random.number'}}\n    },\n    \"fileModes\": {\n      \"source\": \"\",\n      \"destination\": \"\",\n      \"base\": \"\"\n    },\n    \"objectTypes\": {\n      \"source\": \"\",\n      \"destination\": \"\",\n      \"base\": \"\"\n    },\n    \"numberOfConflicts\": {{faker 'random.number'}},\n    \"isBinaryFile\": {\n      \"source\": {{faker 'random.boolean'}},\n      \"destination\": {{faker 'random.boolean'}},\n      \"base\": {{faker 'random.boolean'}}\n    },\n    \"contentConflict\": {{faker 'random.boolean'}},\n    \"fileModeConflict\": {{faker 'random.boolean'}},\n    \"objectTypeConflict\": {{faker 'random.boolean'}},\n    \"mergeOperations\": {\n      \"source\": \"\",\n      \"destination\": \"\"\n    }\n  },\n  \"mergeHunks\": [\n    {\n      \"isConflict\": {{faker 'random.boolean'}},\n      \"source\": {\n        \"startLine\": {{faker 'random.number'}},\n        \"endLine\": {{faker 'random.number'}},\n        \"hunkContent\": \"\"\n      },\n      \"destination\": {\n        \"startLine\": {{faker 'random.number'}},\n        \"endLine\": {{faker 'random.number'}},\n        \"hunkContent\": \"\"\n      },\n      \"base\": {\n        \"startLine\": {{faker 'random.number'}},\n        \"endLine\": {{faker 'random.number'}},\n        \"hunkContent\": \"\"\n      }\n    }\n  ],\n  \"nextToken\": \"\",\n  \"destinationCommitId\": \"\",\n  \"sourceCommitId\": \"\",\n  \"baseCommitId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8cb7a4ae-8eb4-4636-a661-8ad4165308be",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a8520b9d-eaa6-4f3b-93e5-43a738199e61",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2627d994-3ae9-40b5-a286-27c8e684a442",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "538f557d-a8ef-4dc0-81e6-7d006b7870e4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "MergeOptionRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4d384e61-9486-4967-9542-21a4a06429ea",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidMergeOptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "69ad8f1f-cb31-4dc2-b6a1-9120af4bf4f4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidContinuationTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6342aeac-e872-4609-8eae-cfed1cf071c2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "CommitRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4cb31fec-8f23-48d8-99e5-b39da3694708",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "CommitDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8a11c7de-be38-48f6-8948-7a47c63d8586",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidCommitException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dd4cd20e-d093-42a4-beb1-e834146f7ba6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "TipsDivergenceExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d5cd2504-5b29-474c-a0bc-17d1a7d80210",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "PathRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f2fd072e-0315-4afd-a061-28dc2a1544b2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "InvalidPathException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8bc44c77-e5f2-4120-94f2-d602b602ab79",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "FileDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8931e441-fd85-47d7-884b-ae492793f345",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "InvalidMaxMergeHunksException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1259b1e9-5b85-4de4-92cc-33206e5e8e3c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "InvalidConflictDetailLevelException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "26b165f6-1bbb-47bf-ba58-691bf0cdce60",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 495,
          "label": "InvalidConflictResolutionStrategyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9acce5f9-735d-42bd-b6b1-b1761d375777",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 496,
          "label": "MaximumFileContentToLoadExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9d6d0c36-5ef6-4c40-bb70-06e4223869f9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 497,
          "label": "MaximumItemsToCompareExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "11d03908-82a9-46ae-a1f3-0f30c2be7f51",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 498,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "027df81f-1534-420d-a792-eda87ef79aae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 499,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "42444b4d-ad85-43a6-97ed-0cd92645b710",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 500,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "07f7c1ee-b4c4-48b2-b385-bdb7cde8556a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 501,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "341f25be-dbf0-4f4d-9c43-1c3ce2c7eb5c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 502,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a58c8aa1-7d47-4bb5-a978-c8433845e915",
      "documentation": "Returns information about one or more pull request events.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.DescribePullRequestEvents",
      "responses": [
        {
          "uuid": "28f57708-1b97-463c-a0fc-2f1ee2e5303e",
          "body": "{\n  \"pullRequestEvents\": [\n    {\n      \"pullRequestId\": \"\",\n      \"eventDate\": \"{{faker 'date.recent' 365}}\",\n      \"pullRequestEventType\": \"\",\n      \"actorArn\": \"\",\n      \"pullRequestCreatedEventMetadata\": {\n        \"repositoryName\": \"\",\n        \"sourceCommitId\": \"\",\n        \"destinationCommitId\": \"\",\n        \"mergeBase\": \"\"\n      },\n      \"pullRequestStatusChangedEventMetadata\": {\n        \"pullRequestStatus\": \"\"\n      },\n      \"pullRequestSourceReferenceUpdatedEventMetadata\": {\n        \"repositoryName\": \"\",\n        \"beforeCommitId\": \"\",\n        \"afterCommitId\": \"\",\n        \"mergeBase\": \"\"\n      },\n      \"pullRequestMergedStateChangedEventMetadata\": {\n        \"repositoryName\": \"\",\n        \"destinationReference\": \"\",\n        \"mergeMetadata\": {\n          \"isMerged\": {{faker 'random.boolean'}},\n          \"mergedBy\": \"\",\n          \"mergeCommitId\": \"\",\n          \"mergeOption\": \"\"\n        }\n      },\n      \"approvalRuleEventMetadata\": {\n        \"approvalRuleName\": \"\",\n        \"approvalRuleId\": \"\",\n        \"approvalRuleContent\": \"\"\n      },\n      \"approvalStateChangedEventMetadata\": {\n        \"revisionId\": \"\",\n        \"approvalStatus\": \"\"\n      },\n      \"approvalRuleOverriddenEventMetadata\": {\n        \"revisionId\": \"\",\n        \"overrideStatus\": \"\"\n      }\n    }\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "501615f5-5733-4b14-ac00-fca4f2e7baea",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "PullRequestDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0af14f75-afb2-4791-b265-9a68d0ee92ac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidPullRequestIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9852a6dd-7243-4008-9ce1-17e5c5502cc1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "PullRequestIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4302a50a-8f35-4559-a0a2-b40450748997",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidPullRequestEventTypeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "393e7df7-ba58-459d-b1e9-7bf5b618b765",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidActorArnException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "81e55c37-2ccb-4a0c-832b-a6fe7d53cd09",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ActorDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cd354172-8d1c-4fe0-9429-665fa384f1cc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidMaxResultsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "050964ed-7d84-4307-a267-144ab910f151",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidContinuationTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f33ebb47-9edf-4e36-90cf-3c5b8ac5525c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e0705314-bc3c-41ec-b545-407b1bc2499e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "315989d2-6e1b-438b-8ad2-b289a3df080f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6e1a578e-5cf2-403f-b2d7-7445d8073a86",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "52afb6ee-f8df-4afe-936e-dfd3587aae79",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "eb0976ca-e35c-4993-8f4f-a3f6bcc30d3b",
      "documentation": "Removes the association between a template and a repository so that approval rules based on the template are not automatically created when pull requests are created in the specified repository. This does not delete any approval rules previously created for pull requests through the template association.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.DisassociateApprovalRuleTemplateFromRepository",
      "responses": [
        {
          "uuid": "ae478299-e681-475c-b249-85fd9b46ea01",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1e302db0-ff7b-4c13-8bce-97c9991f850b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ApprovalRuleTemplateNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c3306e7d-e019-4d69-bf42-83eef655c081",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidApprovalRuleTemplateNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4cd68a90-8153-4bba-ab8e-9c3994cebb9c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ApprovalRuleTemplateDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7ee13cd1-f6a8-4ab9-b566-74647a465cb1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "549aed26-99c7-43d7-ac70-4ebcf556a420",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7fa3d6c8-28bf-4800-b8dc-434bacdd939a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ea656eff-536c-4b1c-9ff3-87c5d88f025c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1061fc6f-af14-49c5-9408-ba31c305d809",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "17c9fd6f-78f1-4941-93bd-ee6baa674555",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "41217855-6b39-46c9-bbdb-3cec0eb9e42e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "949e7d8e-a2e6-4c7a-9ecc-929610acb648",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "53a19f82-7c6c-4bce-8665-493c165adaad",
      "documentation": "Evaluates whether a pull request has met all the conditions specified in its associated approval rules.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.EvaluatePullRequestApprovalRules",
      "responses": [
        {
          "uuid": "26f755fe-536f-4e19-b5af-d8ccbec14261",
          "body": "{\n  \"evaluation\": {\n    \"approved\": {{faker 'random.boolean'}},\n    \"overridden\": {{faker 'random.boolean'}},\n    \"approvalRulesSatisfied\": [\n      \"\"\n    ],\n    \"approvalRulesNotSatisfied\": [\n      \"\"\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "40c5742f-5719-48a1-9819-6e0336d899c9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "PullRequestDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fdb2a0af-a5ca-4edc-b8dd-f702fad9106f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidPullRequestIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "53e09d19-4c92-46f0-9463-15667408f55f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "PullRequestIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8cbf71da-f9f1-4d83-a190-f412ec73379d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidRevisionIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dce5dab8-8fb0-49c7-8532-27f08f7119d5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "RevisionIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4953093d-f9fa-444a-b359-873cc046714f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "RevisionNotCurrentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "171adbd6-347d-456b-8dd0-496e9012fb55",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "47c55c18-7934-49dd-938b-7ce8cf491b4d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "069d6521-8c4e-48ed-a8d0-46ba78fa32e2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "523e1860-8e77-484e-bba4-9c00f7278760",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1394aef3-431c-4648-b8d2-5b5446bcdca1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b9d8b9d9-7924-41f3-a0c6-205d2d76c320",
      "documentation": "Returns information about a specified approval rule template.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.GetApprovalRuleTemplate",
      "responses": [
        {
          "uuid": "85a0ff97-fc94-403b-a32e-b285dd2e1f78",
          "body": "{\n  \"approvalRuleTemplate\": {\n    \"approvalRuleTemplateId\": \"\",\n    \"approvalRuleTemplateName\": \"\",\n    \"approvalRuleTemplateDescription\": \"\",\n    \"approvalRuleTemplateContent\": \"\",\n    \"ruleContentSha256\": \"\",\n    \"lastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"creationDate\": \"{{faker 'date.recent' 365}}\",\n    \"lastModifiedUser\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "71c52068-7252-4180-b822-47b43c7866de",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ApprovalRuleTemplateNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "805ca16a-1d1d-4fad-a277-d0b3d4c06803",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidApprovalRuleTemplateNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cf996bb6-c677-46e5-b115-5db987efeec9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ApprovalRuleTemplateDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "49482e16-f5cb-472f-aba1-fe796dbe2eab",
      "documentation": "Returns the base-64 encoded content of an individual blob in a repository.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.GetBlob",
      "responses": [
        {
          "uuid": "2e15c171-fe64-4c2d-842f-7c3401f40a24",
          "body": "{\n  \"content\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "05bf97de-87b0-4d82-9b74-b9604e22ffb7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "63bba174-b963-45a0-accd-14ba50476701",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bcc04d55-2847-4c53-8f1e-cf89178ad45d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1b38404b-19b4-4a36-bf75-b71ce7d501e4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "BlobIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "37b58a12-03f3-4354-9c93-921070b63073",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidBlobIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "91ee7b7d-5ed2-486a-ab55-a07763177212",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "BlobIdDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "868e3849-c52c-484e-8041-724f0d05911b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "72d7514e-8c71-4750-b8a3-b704f8bd6e41",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f8dfc5c1-0298-4946-8ee9-9e29dd2507b1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "63de4df7-e557-4018-8fb9-3240e1d231d8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eb794f62-68a0-43a6-8d5d-a372ddf3a2bb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2e2e3584-5674-49a6-9512-ba69a6c99b9e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "FileTooLargeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7ad6092c-26d6-4465-9f46-466191e75152",
      "documentation": "Returns information about a repository branch, including its name and the last commit ID.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.GetBranch",
      "responses": [
        {
          "uuid": "42e94292-b6df-4893-82ee-cfb180e6d9af",
          "body": "{\n  \"branch\": {\n    \"branchName\": \"\",\n    \"commitId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0cacc90e-46ad-4d93-89e6-2e0246784dd0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6ccc0974-3336-4b64-864a-5f003c9b4794",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "587c370e-5b57-4662-a854-7b0039f62a17",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c5da3a39-7aa5-41db-b54f-bcfb6f9ba9f4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "BranchNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3f946f8e-42ea-4239-8059-95bb8a855506",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidBranchNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bdd8ec0e-5944-4f22-a579-8824c226f653",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "BranchDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a4e6b778-9478-496e-93eb-32aec8af2f97",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4cc2c8af-b7b3-4e95-825f-75533aaad9aa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7133d5d3-0b64-4b9e-8d85-c59f8ee4af7c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "74dec0e2-aaf9-4f6e-bd1f-8de795d0f506",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eb5e2cf1-db56-4e23-9282-efa38f86cbbc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d0d9e81b-587b-46cb-9316-a1bd5d3b8952",
      "documentation": "<p>Returns the content of a comment made on a change, file, or commit in a repository. </p> <note> <p>Reaction counts might include numbers from user identities who were deleted after the reaction was made. For a count of reactions from active identities, use GetCommentReactions.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.GetComment",
      "responses": [
        {
          "uuid": "12e367c9-2153-447b-8b18-7bcf8f2fd392",
          "body": "{\n  \"comment\": {\n    \"commentId\": \"\",\n    \"content\": \"\",\n    \"inReplyTo\": \"\",\n    \"creationDate\": \"{{faker 'date.recent' 365}}\",\n    \"lastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"authorArn\": \"\",\n    \"deleted\": {{faker 'random.boolean'}},\n    \"clientRequestToken\": \"\",\n    \"callerReactions\": [\n      \"\"\n    ],\n    \"reactionCounts\": {}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "49278755-69d9-46a1-823e-eb27dea574fb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "CommentDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2905c7e8-efae-422a-9bf0-c7edde16a5a5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "CommentDeletedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "29ff4f14-321e-4afc-8344-a1589dc6888b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "CommentIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f415205e-e6c3-48b1-8ed1-7ecc0b8040ec",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidCommentIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "67ac84cb-dbf9-4424-afad-e02b8824f08d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6d3940fe-20f3-471b-ac71-4bdca41a14dd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "48925789-61f0-4b60-97c7-56749ea7d989",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5e895c67-1e40-4952-bf7a-add2d4f1cedb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2cdeee4a-e062-432d-96b9-fd3964b70dd6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "923d28fb-da9c-4eaf-9606-9391faf72154",
      "documentation": "Returns information about reactions to a specified comment ID. Reactions from users who have been deleted will not be included in the count.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.GetCommentReactions",
      "responses": [
        {
          "uuid": "9646ed7c-e008-42a8-b1f3-770cd7f12452",
          "body": "{\n  \"reactionsForComment\": [\n    {\n      \"reaction\": {\n        \"emoji\": \"\",\n        \"shortCode\": \"\",\n        \"unicode\": \"\"\n      },\n      \"reactionUsers\": [\n        \"\"\n      ],\n      \"reactionsFromDeletedUsersCount\": {{faker 'random.number'}}\n    }\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bf962bab-033a-4bb0-8a7b-020dc9afa8a2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "CommentDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "492579ee-f7c4-4695-8a7a-8294c8d9c276",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "CommentIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "839633e2-db2e-421b-adc7-349e85e255d4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidCommentIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d9ac1d11-88d0-490b-a905-0750c28aa29f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidReactionUserArnException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b8492921-f6f8-4264-9acb-122a72eba3a1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidMaxResultsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6d79f126-95cc-402c-a9db-14be3e8dcff4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidContinuationTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0b48511e-548f-4cf1-9ae5-5c95ec040ed1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "CommentDeletedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b80ac7d6-03e8-4ead-ab6b-6562e43a0412",
      "documentation": "<p>Returns information about comments made on the comparison between two commits.</p> <note> <p>Reaction counts might include numbers from user identities who were deleted after the reaction was made. For a count of reactions from active identities, use GetCommentReactions.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.GetCommentsForComparedCommit",
      "responses": [
        {
          "uuid": "696a213f-6dab-4ddb-9b12-eea544c0d3b9",
          "body": "{\n  \"commentsForComparedCommitData\": [\n    {\n      \"repositoryName\": \"\",\n      \"beforeCommitId\": \"\",\n      \"afterCommitId\": \"\",\n      \"beforeBlobId\": \"\",\n      \"afterBlobId\": \"\",\n      \"location\": {\n        \"filePath\": \"\",\n        \"filePosition\": {{faker 'random.number'}},\n        \"relativeFileVersion\": \"\"\n      },\n      \"comments\": [\n        {\n          \"commentId\": \"\",\n          \"content\": \"\",\n          \"inReplyTo\": \"\",\n          \"creationDate\": \"{{faker 'date.recent' 365}}\",\n          \"lastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n          \"authorArn\": \"\",\n          \"deleted\": {{faker 'random.boolean'}},\n          \"clientRequestToken\": \"\",\n          \"callerReactions\": [\n            \"\"\n          ],\n          \"reactionCounts\": {}\n        }\n      ]\n    }\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3255ecbb-1635-4dde-9279-80a75b03c126",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4119fc3a-c070-48e0-87ff-8726ca2b57d5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7443dfec-6ccc-4a3b-ac4a-1464ab27f73f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5ded982f-5188-40fa-adf2-4f2fb0fabc8a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "CommitIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "72413bf9-204e-4b92-b2e9-f90c0c782e39",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidCommitIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c9499775-15d7-4ae3-9146-9125ae780bc5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "CommitDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1e5c985b-0a04-4cb5-bb2c-d0c1a318e86e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidMaxResultsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "343069fc-cecc-47c2-a64f-e7a9b07ac40b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidContinuationTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2dc27d46-2dce-47b7-ae07-7067104a4c04",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dc9ac1ea-aef4-409b-ad5f-78b7cf105610",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1f6dcb17-4fb5-418b-bec7-3a4f42abfedd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6b861b1e-ec12-41d1-a3ae-8d9015052bef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0e0920d2-9e8a-4c76-9264-6be209872c42",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5dc92bd4-1e99-4db0-93dd-657feb39a5ff",
      "documentation": "<p>Returns comments made on a pull request.</p> <note> <p>Reaction counts might include numbers from user identities who were deleted after the reaction was made. For a count of reactions from active identities, use GetCommentReactions.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.GetCommentsForPullRequest",
      "responses": [
        {
          "uuid": "f104d0a8-70d6-44b1-87e6-e33f324a6352",
          "body": "{\n  \"commentsForPullRequestData\": [\n    {\n      \"pullRequestId\": \"\",\n      \"repositoryName\": \"\",\n      \"beforeCommitId\": \"\",\n      \"afterCommitId\": \"\",\n      \"beforeBlobId\": \"\",\n      \"afterBlobId\": \"\",\n      \"location\": {\n        \"filePath\": \"\",\n        \"filePosition\": {{faker 'random.number'}},\n        \"relativeFileVersion\": \"\"\n      },\n      \"comments\": [\n        {\n          \"commentId\": \"\",\n          \"content\": \"\",\n          \"inReplyTo\": \"\",\n          \"creationDate\": \"{{faker 'date.recent' 365}}\",\n          \"lastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n          \"authorArn\": \"\",\n          \"deleted\": {{faker 'random.boolean'}},\n          \"clientRequestToken\": \"\",\n          \"callerReactions\": [\n            \"\"\n          ],\n          \"reactionCounts\": {}\n        }\n      ]\n    }\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "045d082c-cc1a-4ce9-9cdd-ad78c68c236d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "PullRequestIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "15ef565c-5589-4736-a4c8-a58591736bc3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "PullRequestDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1f16500d-2b01-45e1-bd5b-749086513a90",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidPullRequestIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7aa258fc-23b8-4ca9-ada3-0d5570d44f3e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "47e40c9f-7c97-4bde-ac05-2ae0de85650e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ea4043e1-79e7-437d-8c75-c9c37f24cdc5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4eb2ceeb-17bd-4ed3-8be3-ea3f7c5d8ce8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "CommitIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9ca72604-4ace-4189-ab46-69f8eba1e5a1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidCommitIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eab2eb17-aa88-450f-9303-42816e232ab8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "CommitDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "303a3746-be89-4c85-815c-170b6ade02dd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidMaxResultsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aaf10066-b764-4d04-bf88-b243af359e9a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidContinuationTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d1fa4855-6839-415f-a4b6-7d9e7046b243",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "RepositoryNotAssociatedWithPullRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6bf10951-0385-4179-bb47-c19d6945562a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c6c111ae-b456-4eb2-9887-d39ac6d19d45",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cb67e8e5-546c-406e-97ac-a681a9312d63",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9ae93390-aaf6-453c-9cb7-37c5a61d7526",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 495,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f4361c59-c4d8-44e2-acbb-814992e80636",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 496,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2a58d317-81bb-411b-8e6a-78160b98aac7",
      "documentation": "Returns information about a commit, including commit message and committer information.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.GetCommit",
      "responses": [
        {
          "uuid": "da353629-5eb4-4456-986f-eaab4bb8ed5a",
          "body": "{\n  \"commit\": {\n    \"commitId\": \"\",\n    \"treeId\": \"\",\n    \"parents\": [\n      \"\"\n    ],\n    \"message\": \"\",\n    \"author\": {\n      \"name\": \"\",\n      \"email\": \"\",\n      \"date\": \"\"\n    },\n    \"committer\": {\n      \"name\": \"\",\n      \"email\": \"\",\n      \"date\": \"\"\n    },\n    \"additionalData\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "92a2a768-1040-4632-9123-cf4c2b91835b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e0d2b9a4-a640-4be3-8104-e2d1ed210630",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "28838783-9b69-4fe8-a481-2bac135c1690",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "91be3b6a-4f22-493a-b708-1ddc2f5eccb5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "CommitIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6746bf9f-e2e1-4d04-ac22-18441472d19c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidCommitIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "088c4f79-6729-490e-bcad-2afd4ffd7400",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "CommitIdDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d343dd37-4203-4bf2-b526-635bc3f6a872",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "11eabe1a-4c62-4522-a96a-1c016bbc1d54",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "169ec078-bbaa-4ea8-a8cb-ad86e2ef6241",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3137f98b-c4da-418c-88e4-0da0e7a08fcf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "19405982-f783-4786-8b89-ca896fd6b132",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bc52d077-5cc3-4f30-b471-6836e51dd99b",
      "documentation": "Returns information about the differences in a valid commit specifier (such as a branch, tag, HEAD, commit ID, or other fully qualified reference). Results can be limited to a specified path.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.GetDifferences",
      "responses": [
        {
          "uuid": "fee2a21c-7c70-452d-b05a-bdba483fce60",
          "body": "{\n  \"differences\": [\n    {\n      \"beforeBlob\": {\n        \"blobId\": \"\",\n        \"path\": \"\",\n        \"mode\": \"\"\n      },\n      \"afterBlob\": {\n        \"blobId\": \"\",\n        \"path\": \"\",\n        \"mode\": \"\"\n      },\n      \"changeType\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2498f5d0-00ce-402a-b8b7-00db14b0d2c4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4e277dcd-3cbd-4293-8e3a-24c4e64b5e0b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b65b6f87-165c-4cb2-8527-6f06487bc97f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "45fd3504-2590-4508-a983-776ac2d40785",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidContinuationTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fd9a8ebc-9948-47d5-b7ee-8bb7dc420d09",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidMaxResultsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b927a31d-8b96-4f9c-ab7e-2deb9d058967",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidCommitIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "42d271eb-d17c-4952-b0e4-0768e5ab2f84",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "CommitRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "430899d6-cf03-45b1-939e-5b476dce7131",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidCommitException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1505f7fc-2fa5-494e-93d9-096238fd496d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "CommitDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "38a59387-f5e4-4cde-9f69-f9d69810b5b6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidPathException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e60361cb-9f7f-4025-91c1-8b9e22405be0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "PathDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9623ce5c-ebbe-4972-a44f-a3216c73259a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f6e8fc2d-6b20-4bf2-94f8-3b205007c540",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "25415995-b7a6-49b6-baeb-c1d1cd334e42",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "40501146-d32c-4f83-b708-136f9cb878ee",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4fb5f8b9-9b06-4190-88d1-73bc96a46136",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 495,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4930c453-5d41-4d2e-ab66-c22dd4527eb9",
      "documentation": "Returns the base-64 encoded contents of a specified file and its metadata.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.GetFile",
      "responses": [
        {
          "uuid": "e47de8f1-d1ea-4ade-9fc3-ee09a131bb30",
          "body": "{\n  \"commitId\": \"\",\n  \"blobId\": \"\",\n  \"filePath\": \"\",\n  \"fileMode\": \"\",\n  \"fileSize\": {{faker 'random.number'}},\n  \"fileContent\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "af40a3be-c14e-4dab-a424-80024f11097d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d34b88d9-d293-4669-b142-d6a20630acd9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "59481642-45f6-433a-a933-84953bb3a9e4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "691b44c1-19cd-4f80-a6a8-39fb84b6dabb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidCommitException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "917ad305-9c6b-46cc-b09c-b5f6a37c1a34",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "CommitDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d508ac2b-cc23-4225-a0fa-29354c933665",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "PathRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f47a2b51-451c-4654-9c68-5b3814dd0bea",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidPathException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f1662347-7704-4749-a296-5828f4d976af",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "FileDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "70e93417-0003-4fe0-8e0b-e77edc2bfc72",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5b124d67-1b12-4c36-bfdf-84c9b770b8cf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9549f2af-9649-4d1a-8e2b-973ca2e962c1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "26e9d047-8f64-442b-922e-dfb637d4e391",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1c7a2b57-3ae9-4483-be37-b41b1d9e23dd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3e227c3a-4cfa-4caa-bd00-e4182159f75d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "FileTooLargeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a1a54ce9-b5c6-4bc1-8cf5-4b5eb75e04e7",
      "documentation": "Returns the contents of a specified folder in a repository.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.GetFolder",
      "responses": [
        {
          "uuid": "92cf8594-7146-45be-9eff-8b7b3879b9fe",
          "body": "{\n  \"commitId\": \"\",\n  \"folderPath\": \"\",\n  \"treeId\": \"\",\n  \"subFolders\": [\n    {\n      \"treeId\": \"\",\n      \"absolutePath\": \"\",\n      \"relativePath\": \"\"\n    }\n  ],\n  \"files\": [\n    {\n      \"blobId\": \"\",\n      \"absolutePath\": \"\",\n      \"relativePath\": \"\",\n      \"fileMode\": \"\"\n    }\n  ],\n  \"symbolicLinks\": [\n    {\n      \"blobId\": \"\",\n      \"absolutePath\": \"\",\n      \"relativePath\": \"\",\n      \"fileMode\": \"\"\n    }\n  ],\n  \"subModules\": [\n    {\n      \"commitId\": \"\",\n      \"absolutePath\": \"\",\n      \"relativePath\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7f79e485-ca1f-41ae-8647-1fc635374fe0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7df6c72e-fd13-4078-af50-0331670c954c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2516e07c-c2f4-47ba-a028-edb6d13e6cc9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "16e81760-9f29-4049-a30b-80c5ef9c892b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidCommitException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dd29be27-99b5-47d6-a7a4-a76bc9fd4972",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "CommitDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "39edd51b-3038-4224-90ae-d5076ff1a90e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "PathRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "565bfe9e-8d2c-43a9-9b68-e71c512ca547",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidPathException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "edaf3a70-57d9-484a-b147-60c8f9932fbd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "FolderDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "85b7e515-b2cc-47bd-9f1d-53e835cf546d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1df17539-80bd-40de-bcb9-1be7d41cd242",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8c4713e3-da53-4d73-bf90-d6d32103ec97",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "81503159-ed85-47bd-ad3e-e6f79042b096",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8daa170a-d081-49c2-ae63-52e6e7842bc9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f9e6a0ac-2d05-4a22-8353-eec572e3e1cd",
      "documentation": "Returns information about a specified merge commit.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.GetMergeCommit",
      "responses": [
        {
          "uuid": "7d3ece69-267f-471e-a1b1-120b4e56c144",
          "body": "{\n  \"sourceCommitId\": \"\",\n  \"destinationCommitId\": \"\",\n  \"baseCommitId\": \"\",\n  \"mergedCommitId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6d153f8d-6840-41a7-a88a-ed4d209f1103",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3ebca894-6028-4915-a984-fbd514cc9532",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1601bbbd-db27-4d3e-8d49-9e5f361d9c36",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9e263988-6066-4f6a-816c-6a1358b16a1f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "CommitRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "95f21abd-be5a-4425-b9fb-2390563a3835",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidCommitException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0cc07373-d3df-4a30-ac58-6f6ff062ded9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "CommitDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "65356985-3343-49fa-af58-e0dbce05586a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidConflictDetailLevelException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "95ece567-7798-4914-b571-3b2c57057b59",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidConflictResolutionStrategyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8072194d-cf6d-4fab-b178-563445937b91",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d9c8909b-31a0-4990-8263-f6724eca2fd7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6b6e7305-e382-414b-b47c-5a338d07a9ca",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "77751954-dade-44a2-8bba-784903107645",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dbf71c48-bef4-4717-b64e-4bf6dd83bdb0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7d7a2054-b9ff-451b-8682-e71879dc5d23",
      "documentation": "Returns information about merge conflicts between the before and after commit IDs for a pull request in a repository.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.GetMergeConflicts",
      "responses": [
        {
          "uuid": "db7f16a3-d738-4340-91b3-dd6c47bc798a",
          "body": "{\n  \"mergeable\": {{faker 'random.boolean'}},\n  \"destinationCommitId\": \"\",\n  \"sourceCommitId\": \"\",\n  \"baseCommitId\": \"\",\n  \"conflictMetadataList\": [\n    {\n      \"filePath\": \"\",\n      \"fileSizes\": {\n        \"source\": {{faker 'random.number'}},\n        \"destination\": {{faker 'random.number'}},\n        \"base\": {{faker 'random.number'}}\n      },\n      \"fileModes\": {\n        \"source\": \"\",\n        \"destination\": \"\",\n        \"base\": \"\"\n      },\n      \"objectTypes\": {\n        \"source\": \"\",\n        \"destination\": \"\",\n        \"base\": \"\"\n      },\n      \"numberOfConflicts\": {{faker 'random.number'}},\n      \"isBinaryFile\": {\n        \"source\": {{faker 'random.boolean'}},\n        \"destination\": {{faker 'random.boolean'}},\n        \"base\": {{faker 'random.boolean'}}\n      },\n      \"contentConflict\": {{faker 'random.boolean'}},\n      \"fileModeConflict\": {{faker 'random.boolean'}},\n      \"objectTypeConflict\": {{faker 'random.boolean'}},\n      \"mergeOperations\": {\n        \"source\": \"\",\n        \"destination\": \"\"\n      }\n    }\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a8e0a6f4-6f9a-45ee-98cc-d45b7966ded4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "65c66097-a1b0-4287-ad9e-fe66ecd77023",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8508acde-3fe1-4b34-a442-d4cad6b2b4ad",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b5bc1c03-4132-46bb-bd8d-68780c95bff2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "MergeOptionRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d1292dcf-ab78-444c-a3d6-1a0a5a99fda4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidMergeOptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "56652ccb-53ee-4d54-a138-0933b6f0fe77",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidContinuationTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a5e0bb3b-f04f-44b1-8550-4a610fcc8994",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "CommitRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d4015104-ca7f-438a-a7f2-5100654c3dd8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "CommitDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c790ea51-d0dd-4be5-b12f-8d3e7022c23a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidCommitException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "283acf8e-1f83-464b-b0d3-d304eff84156",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "TipsDivergenceExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d948cb36-23a4-4655-8e9b-9f851f9483ff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidMaxConflictFilesException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d5abe0ce-47c0-46fc-b19c-8b21b7e2cf1b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "InvalidConflictDetailLevelException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fc319f43-6d36-4a14-83e2-f6d575685c51",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "InvalidDestinationCommitSpecifierException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ab1b20e7-fbac-40e3-ab99-c77b3f138027",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "InvalidSourceCommitSpecifierException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c78eab94-bb60-4f63-ba1c-f0a495d4ee19",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "InvalidConflictResolutionStrategyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "63d7a191-96c9-434e-9645-4f38e1b5110e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 495,
          "label": "MaximumFileContentToLoadExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "43f97c62-0ac4-4022-b486-2ab81e0a9e2a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 496,
          "label": "MaximumItemsToCompareExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d7c4baf3-2594-4107-8d03-d5db1049c36f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 497,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7bc1d998-d7ef-4135-a33b-9eeba4ca306d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 498,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3d085eee-24a1-4c6b-a880-069898dfcc64",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 499,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "47693792-ab2b-4762-9885-f8821f57ca9d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 500,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "293de0cb-ae3f-4e02-a71b-7094f43f71b9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 501,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "860f48c0-d981-4a52-8acb-947b2b7c532c",
      "documentation": "Returns information about the merge options available for merging two specified branches. For details about why a merge option is not available, use GetMergeConflicts or DescribeMergeConflicts.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.GetMergeOptions",
      "responses": [
        {
          "uuid": "d9ffe838-5653-4db3-9b9b-356a2f205ed6",
          "body": "{\n  \"mergeOptions\": [\n    \"{{oneOf (array 'FAST_FORWARD_MERGE' 'SQUASH_MERGE' 'THREE_WAY_MERGE')}}\"\n  ],\n  \"sourceCommitId\": \"\",\n  \"destinationCommitId\": \"\",\n  \"baseCommitId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4fd61f2f-4093-48d5-9757-d3806663ef28",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "89715cef-fd97-4ec5-af40-dfc86eebeefb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6a83c6ae-27f7-403d-ba18-7606569da0f2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cdeca637-439b-4391-b301-92f9dd34b436",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "CommitRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4bff9a69-b35a-4a77-b87a-a99b4f809a2e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "CommitDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fa2a8756-6dc3-4d91-868e-9cf294c4a029",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidCommitException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "32009dbe-48f6-4e5f-94ce-4412d10be7b0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "TipsDivergenceExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "811a5f6c-99f6-4bc4-a36d-816ca9e6b78e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidConflictDetailLevelException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "374682ee-b52e-441c-8218-aa8d37d5e2ec",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidConflictResolutionStrategyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5f16d814-1f85-4e4c-9ebc-7eb24e09ff81",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "MaximumFileContentToLoadExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3b63c366-8f3f-4ebb-b9ed-cf9047f32c0d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "MaximumItemsToCompareExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c428c54d-5baf-4df2-8fcb-947ffba4cf7b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "73501d7b-bb17-4289-b7cd-8a6698ea52cf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3a447873-58d4-4992-91fc-e34cde190282",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "735227a0-ba16-40bb-9900-af825c220def",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e57a4a0d-4814-4a24-9f85-e91eeba28209",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 495,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1ed89a92-2b37-4555-9dc1-0f58bc8362cf",
      "documentation": "Gets information about a pull request in a specified repository.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.GetPullRequest",
      "responses": [
        {
          "uuid": "8d3c6137-f374-47fd-ac89-d7e622bcecaa",
          "body": "{\n  \"pullRequest\": {\n    \"pullRequestId\": \"\",\n    \"title\": \"\",\n    \"description\": \"\",\n    \"lastActivityDate\": \"{{faker 'date.recent' 365}}\",\n    \"creationDate\": \"{{faker 'date.recent' 365}}\",\n    \"pullRequestStatus\": \"\",\n    \"authorArn\": \"\",\n    \"pullRequestTargets\": [\n      {\n        \"repositoryName\": \"\",\n        \"sourceReference\": \"\",\n        \"destinationReference\": \"\",\n        \"destinationCommit\": \"\",\n        \"sourceCommit\": \"\",\n        \"mergeBase\": \"\",\n        \"mergeMetadata\": {\n          \"isMerged\": {{faker 'random.boolean'}},\n          \"mergedBy\": \"\",\n          \"mergeCommitId\": \"\",\n          \"mergeOption\": \"\"\n        }\n      }\n    ],\n    \"clientRequestToken\": \"\",\n    \"revisionId\": \"\",\n    \"approvalRules\": [\n      {\n        \"approvalRuleId\": \"\",\n        \"approvalRuleName\": \"\",\n        \"approvalRuleContent\": \"\",\n        \"ruleContentSha256\": \"\",\n        \"lastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n        \"creationDate\": \"{{faker 'date.recent' 365}}\",\n        \"lastModifiedUser\": \"\",\n        \"originApprovalRuleTemplate\": {\n          \"approvalRuleTemplateId\": \"\",\n          \"approvalRuleTemplateName\": \"\"\n        }\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4055d7ee-d4ae-4282-85d5-877d68c1b0d6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "PullRequestDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3f2b92dd-af92-4b87-89a7-ca6fb8748e2e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidPullRequestIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1fb9c174-34f5-4edb-8016-68e8c4dfadbb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "PullRequestIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e256bb8e-fc85-45d1-848c-9d56f983b28d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3425af1c-0cb7-4523-968c-80323ddef3fb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "da8f7167-2d29-4cc5-866e-8dcb1076d2cf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0969b54c-4dc3-4f72-9578-a08989c14611",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "30d806be-245d-4578-b140-a535dc3630c9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "82ecedd5-7e84-473c-8fb2-2cc8032ff3f0",
      "documentation": "Gets information about the approval states for a specified pull request. Approval states only apply to pull requests that have one or more approval rules applied to them.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.GetPullRequestApprovalStates",
      "responses": [
        {
          "uuid": "5484a16b-f364-48a7-8a8f-77b8e4bc3ad1",
          "body": "{\n  \"approvals\": [\n    {\n      \"userArn\": \"\",\n      \"approvalState\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c81c08be-bd1e-4a53-a967-334ae8d11f54",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "PullRequestDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "926e7b45-b89a-45c7-a684-54b70e5d991b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidPullRequestIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "473741e2-c78b-40b9-bb91-0ea396bf7c7c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "PullRequestIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aa303bb5-2ca6-44b9-9799-d12ea563e0a4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidRevisionIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "24fdcdbc-d05a-49c3-b298-19aa6cbe891f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "RevisionIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d94c29c4-1c47-4c11-89dd-e40444d4637c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1a367d15-b928-49a8-bd72-6a6375cd6a0a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "55c075aa-313f-43e0-a280-a18ae7021767",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2723b02b-f523-4f72-8bcb-5ff609bc7a24",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1b8f2255-9106-4c71-922e-ad814b43f6a8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "34fb6e13-738d-4a05-8b74-d057af028c5a",
      "documentation": "Returns information about whether approval rules have been set aside (overridden) for a pull request, and if so, the Amazon Resource Name (ARN) of the user or identity that overrode the rules and their requirements for the pull request.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.GetPullRequestOverrideState",
      "responses": [
        {
          "uuid": "1d94dfb1-9356-4f78-afd2-c2895f2f39ba",
          "body": "{\n  \"overridden\": {{faker 'random.boolean'}},\n  \"overrider\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "79ed5ea1-b5d8-4f83-a334-938e33098c35",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "PullRequestDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2041d80d-0127-4e45-bfc6-e30bbcd5d99b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidPullRequestIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ca630779-3b68-4788-830d-142e6dac95d8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "PullRequestIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bf9effb8-5be9-434c-b0f4-151c5f265ceb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidRevisionIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "97c03d05-8e76-470f-882f-2bfca11f5fa6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "RevisionIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c5e211ec-4d35-41fd-a4c6-e4086cbceb07",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "68ed3ab1-9512-4105-a281-fc654f1715f4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8377ded4-1094-4ec4-93a2-2e5ef5b1a27a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0065160c-fb02-4e5d-a46c-94742bb5d140",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0b50f806-d88d-4d1d-89b4-b43dd4c87bc4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a31ed34c-524d-4e45-b312-1d9ecd9aa840",
      "documentation": "<p>Returns information about a repository.</p> <note> <p>The description field for a repository accepts all HTML characters and all valid Unicode characters. Applications that do not HTML-encode the description and display it in a webpage can expose users to potentially malicious code. Make sure that you HTML-encode the description field in any application that uses this API to display the repository description on a webpage.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.GetRepository",
      "responses": [
        {
          "uuid": "2d9ba60a-9e2d-4242-a9cd-0a55b6cf8e66",
          "body": "{\n  \"repositoryMetadata\": {\n    \"accountId\": \"\",\n    \"repositoryId\": \"\",\n    \"repositoryName\": \"\",\n    \"repositoryDescription\": \"\",\n    \"defaultBranch\": \"\",\n    \"lastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"creationDate\": \"{{faker 'date.recent' 365}}\",\n    \"cloneUrlHttp\": \"\",\n    \"cloneUrlSsh\": \"\",\n    \"Arn\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "83a7438c-0995-4a02-9f47-30297956f525",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "de667826-e5c1-4f96-9afa-7cd616efff93",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0434aa83-6f84-43d6-aee1-77cc5237c93d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "273aa36f-c429-4180-bf9f-da75432de129",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7b131f8c-1eb3-42b6-a5d1-2eb0c25cdbb5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "822957d8-3f62-49b2-b530-991d352f9c56",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e5e15253-30a8-49a6-8a81-cb021f819f39",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "99b29d40-aa93-4e9f-80d8-c758306032ae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cf933ec8-bb1e-49e7-9114-8a218c6c3d05",
      "documentation": "Gets information about triggers configured for a repository.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.GetRepositoryTriggers",
      "responses": [
        {
          "uuid": "f128bb3a-b644-4803-b3ed-313f71938813",
          "body": "{\n  \"configurationId\": \"\",\n  \"triggers\": [\n    {\n      \"name\": \"\",\n      \"destinationArn\": \"\",\n      \"customData\": \"\",\n      \"branches\": [\n        \"\"\n      ],\n      \"events\": [\n        \"{{oneOf (array 'all' 'updateReference' 'createReference' 'deleteReference')}}\"\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "006513ee-e010-4e93-925d-4669fe82bbe9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1472e281-de88-48fd-ada3-bb2f550478a0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ac17720d-39e5-48cc-bc3f-2dde61e00778",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c760b238-8ad3-43c5-a9cc-921cfe6b3ca7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1048b0c6-beba-448b-aa75-2e346beb2966",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6ebcd342-a8b4-4460-9cce-5d358af63dc1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9e7f12ca-9df4-48c8-97da-cc02c03ca21d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e1400270-d711-4f58-88e6-c6f0d84e06d8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ec71c2d6-c8a9-401a-a624-0286cf744ff3",
      "documentation": "Lists all approval rule templates in the specified AWS Region in your AWS account. If an AWS Region is not specified, the AWS Region where you are signed in is used.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.ListApprovalRuleTemplates",
      "responses": [
        {
          "uuid": "e6fc9483-9440-4f75-94fb-0181b5b4fe15",
          "body": "{\n  \"approvalRuleTemplateNames\": [\n    \"\"\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1215ffef-071f-478b-bc77-b335074ddfed",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidMaxResultsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "375ccd08-eac5-4a03-bae6-d39bae5b567d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidContinuationTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c807f20d-96cd-445f-8307-44445667eb1a",
      "documentation": "Lists all approval rule templates that are associated with a specified repository.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.ListAssociatedApprovalRuleTemplatesForRepository",
      "responses": [
        {
          "uuid": "e54aeb0d-8b4a-4b48-a5a4-491a44ed8512",
          "body": "{\n  \"approvalRuleTemplateNames\": [\n    \"\"\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e5b92933-19ec-4ca2-b7ec-7be53e8899c2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "665dea51-5fee-45c7-9fa4-50f578794c91",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "145bd6cb-83fe-4fd0-b19c-6eb3cfbf48cd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8a79be10-1c71-4109-a83a-e330f7cc1309",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidMaxResultsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0efc56af-1bf9-4221-b24b-6eb7183d72d4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidContinuationTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "851f99d5-787b-49f7-9258-1758ac4d0596",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1e88afdb-f194-4d85-adf3-ede5fde6cb5d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "be2710d3-3e62-4e64-a434-162fc91d4940",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "66c805c8-bc32-47fb-abc1-bad6bc94b0c6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d710586b-b9ed-464e-af9d-c9667995a92e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "87f65759-b671-4e2f-809f-63b4f7784db9",
      "documentation": "Gets information about one or more branches in a repository.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.ListBranches",
      "responses": [
        {
          "uuid": "3aadde9b-cc23-4735-8fcd-dca8eb04ebf8",
          "body": "{\n  \"branches\": [\n    \"\"\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "554d18dd-0c28-40cf-ba36-7c9c7d0c1f0e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f1d1a903-45ec-415e-9a5f-6502d01123e4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ae5ac9f0-ff60-4c6c-9d41-73798f59a9a0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8a040147-5926-4af9-ab3a-211d2a140c65",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0208a932-c02e-47e1-af71-e4bc2ebf6bca",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a8a419be-9fae-4c26-bcd5-5aa231b1172e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "50a2940e-de8a-4eb8-9f4b-364f887efb21",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "07a584fc-3a0c-4673-848a-bd31b1575af1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "77914326-5391-48d5-960a-8737b3edc248",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidContinuationTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e4965375-9101-443d-8b46-258f5f749173",
      "documentation": "Returns a list of pull requests for a specified repository. The return list can be refined by pull request status or pull request author ARN.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.ListPullRequests",
      "responses": [
        {
          "uuid": "d2aad8f0-f769-487e-88b3-2ac134ab6216",
          "body": "{\n  \"pullRequestIds\": [\n    \"\"\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "42afe5a9-bf3a-4345-88b2-5b2cf3855672",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidPullRequestStatusException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4a319f03-ef35-4770-82b1-82b2fccb7b60",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidAuthorArnException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b7d834e7-293d-47e3-8092-5f9e7f0c981a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "AuthorDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "affad8f7-ac21-4cbd-add0-2f259db534db",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a459e411-40c9-43e0-9513-fe0a1e6d9310",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9a535d7b-7be5-4eeb-a39a-ad1517843771",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e6e78782-8ec5-436b-aadb-84b20c52cd0e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidMaxResultsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "44a199c2-438e-45d7-9848-107f3455f5d7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidContinuationTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "617ef463-76dd-4a5e-9279-974f98aa2ed3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8e84445e-5614-47af-ade9-43e11b552c0e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dddc3c3c-3d02-404c-b084-809700f766b4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0543a06b-61e7-4447-b6d9-1696b6b8c3e6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bf039fc0-db36-4168-8b30-005a56e679b0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "86df3f10-acba-46c5-b8c0-5d0dba1ce4b8",
      "documentation": "Gets information about one or more repositories.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.ListRepositories",
      "responses": [
        {
          "uuid": "78d58c69-b3a4-4b8c-b764-030ce300634e",
          "body": "{\n  \"repositories\": [\n    {\n      \"repositoryName\": \"\",\n      \"repositoryId\": \"\"\n    }\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dbb3766f-4ab7-4e25-9313-4022c31a8cc1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidSortByException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "319a8f95-9956-496d-8781-72f16035bd46",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidOrderException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ae9ccd82-5d82-40f1-8aec-b317377fca3c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidContinuationTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f63c8cd2-9269-41ce-974b-67af7fa9802a",
      "documentation": "Lists all repositories associated with the specified approval rule template.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.ListRepositoriesForApprovalRuleTemplate",
      "responses": [
        {
          "uuid": "172534a4-086b-482c-9eef-009fdd2eab7f",
          "body": "{\n  \"repositoryNames\": [\n    \"\"\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "93c26495-de6f-4771-b3a3-6c3a4728f387",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ApprovalRuleTemplateNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f85a05e6-bc45-47a7-a958-baeec45ad94e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidApprovalRuleTemplateNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b79c0575-12b4-4a82-9d50-52345f1a7219",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ApprovalRuleTemplateDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cc66d1cb-da1e-4225-9f7d-85cd5b71ab7b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidMaxResultsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "856b1a06-cafe-4d1f-96d0-8e37d7d06faa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidContinuationTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3f35f422-b3f8-4a05-b4f6-7fefd312a1ea",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4dccc932-deeb-410c-9c74-14c1e57f56c6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "029cae9c-d941-4858-886b-b030cab4a394",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "adf16982-f79a-4c3a-ac67-6f52f781d013",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1b741266-d851-4b02-8c50-14ec9929188d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "23906a8e-b8a8-4cc8-9745-8a73d6bf9ff1",
      "documentation": "Gets information about AWS tags for a specified Amazon Resource Name (ARN) in AWS CodeCommit. For a list of valid resources in AWS CodeCommit, see <a href=\"https://docs.aws.amazon.com/codecommit/latest/userguide/auth-and-access-control-iam-access-control-identity-based.html#arn-formats\">CodeCommit Resources and Operations</a> in the<i> AWS CodeCommit User Guide</i>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.ListTagsForResource",
      "responses": [
        {
          "uuid": "bdb4e271-7615-4e4c-a4d0-375cf0b1d25e",
          "body": "{\n  \"tags\": {},\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c00713b6-2bd9-46fc-9ff0-b12ea57ffa6f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "48670f82-5251-419a-8578-b73c9205cd0d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b96dadcc-798c-4fcd-9e35-444187be20e1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceArnRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6eb8d523-7ea6-41f1-ad9a-85c22a580039",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidResourceArnException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3b52a413-2e0b-416e-a65f-dcf6d79e7aa0",
      "documentation": "Merges two branches using the fast-forward merge strategy.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.MergeBranchesByFastForward",
      "responses": [
        {
          "uuid": "3c1dbc0c-93f0-4299-9ef4-ff736baa43d5",
          "body": "{\n  \"commitId\": \"\",\n  \"treeId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dc0007e1-2bc0-4d63-8958-977e7772adfa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "380d4d0d-97ba-437e-9c0d-8f59756b82da",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "222a304a-afa6-426d-85cc-6d3076496910",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "92f6c8d6-bd17-4c19-b127-3a3eca92043e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TipsDivergenceExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6c392c68-da43-42a2-9b40-37d40b311b81",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "CommitRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b6c72b6f-c2ef-46c3-9322-bdbd69f50346",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidCommitException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "48339000-6856-4f66-8d71-ee1690ea7caa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "CommitDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e3ac7dac-3ebb-4b3b-8f42-effa8a1a5581",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidTargetBranchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "267cbe8b-467e-4d29-8f90-9f54675d0f45",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidBranchNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "014b8a2c-2b66-4f68-a192-8213df797b8a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "BranchNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "07cccefb-0b6f-404c-a03c-255b56a44b36",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "BranchNameIsTagNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "08b0ab7f-a6a4-47cd-98f8-dca56788e019",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "BranchDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "73385500-b84d-401f-a712-3057eb92142c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "ManualMergeRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "191617d6-ef4e-4574-b425-70613b812c09",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "ConcurrentReferenceUpdateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "513e8a5b-5595-471c-9cf3-f60b3da73226",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c8107fa1-9a03-44a2-b0b7-07fce63fef19",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 495,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ef5450f6-789e-451a-a73d-ba9fe9a1b642",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 496,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3edd1ac1-82c7-4d54-9a91-3780b691a758",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 497,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "53444079-50a6-4e54-96d5-dc478d8ff917",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 498,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4e8f6f5d-d398-4ed9-829b-b0804bcaa221",
      "documentation": "Merges two branches using the squash merge strategy.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.MergeBranchesBySquash",
      "responses": [
        {
          "uuid": "ce6d205c-76d8-4fa4-ba82-bf59d509005f",
          "body": "{\n  \"commitId\": \"\",\n  \"treeId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4656f1d6-c648-49bf-9477-ba9a2be06aef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5c0fb1fe-9413-491f-804a-73c1cc67ce77",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8dc40d8b-db21-4c1e-89ba-065b865c1d58",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "62c3fe70-39d7-4d75-8fb6-fc1fa932dd95",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TipsDivergenceExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7dc84b01-69a4-410d-8d0a-2f10fd9f7867",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "CommitRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "87cb10ae-8d0e-4559-9ea1-0d2a6dcb09c3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidCommitException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "24d56f64-2aca-4d6f-828d-c320909cdb3e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "CommitDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "232072a5-2e6a-4c66-b934-94c5943481db",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidTargetBranchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "804e5d1f-e69f-4237-a1ae-429ce5a68c56",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidBranchNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5aacc9a8-2744-4121-8c89-1679b7bf16db",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "BranchNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e8a4c3cf-140c-48a2-a6be-7b541ca82445",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "BranchNameIsTagNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "483cc204-933c-42ed-a05f-bc9446d6aa74",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "BranchDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "01db9563-a5d8-437e-93b9-4609f815e4c4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "ManualMergeRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b704e938-279d-4ab4-aedf-ff66811701c6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "InvalidConflictDetailLevelException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "11ae66d6-d6de-4128-93d1-c77a3d06f978",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "InvalidConflictResolutionStrategyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c16f34b3-07eb-4887-a10c-fe98cdafb672",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 495,
          "label": "InvalidConflictResolutionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3c87fae9-b98d-440d-a2bf-ba4ddb74a61a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 496,
          "label": "MaximumConflictResolutionEntriesExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9a5e836c-bda0-4c48-b40b-062cd9d019d4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 497,
          "label": "MultipleConflictResolutionEntriesException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "69fa73f5-3be2-4eb7-9392-363058fb68d7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 498,
          "label": "ReplacementTypeRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9a06a340-fc68-48ed-b920-f8cb3e151e14",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 499,
          "label": "InvalidReplacementTypeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7e48e46d-cfde-411e-b4ba-409aa24c64e0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 500,
          "label": "ReplacementContentRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "837355b8-f93e-4af0-8b5e-a31d653787f6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 501,
          "label": "InvalidReplacementContentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "82cfbd1b-ecc6-4618-90cf-ab6b409a3001",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 502,
          "label": "PathRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "410426ec-53eb-4f54-9099-d5ef4ff9a9fb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 503,
          "label": "InvalidPathException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "142322d2-20ae-482e-b890-ca9ea8eca69a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 504,
          "label": "FileContentSizeLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "622e9d5b-ea3e-4fab-903e-568b5b6a8bed",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 505,
          "label": "FolderContentSizeLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "91710d92-91d1-4835-91bf-2022d7bd2628",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 506,
          "label": "MaximumFileContentToLoadExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "30f11639-4497-454b-983b-4eb5f3ab2db7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 507,
          "label": "MaximumItemsToCompareExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b1785e5a-a916-4c30-b730-bf6c5a654d7c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 508,
          "label": "FileModeRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4b22d326-bd31-4c29-b605-748b2e5395cf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 509,
          "label": "InvalidFileModeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "80157bea-dbf7-429c-9513-fd14f233ffc0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 510,
          "label": "NameLengthExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7f14de31-7e7d-4bca-a09a-ddd05012af3a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 511,
          "label": "InvalidEmailException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "63b9b26a-a3dc-4224-a441-82bd96175e5a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 512,
          "label": "CommitMessageLengthExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a2c88b5f-cba6-4f53-a1c7-d02158ab98b7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 513,
          "label": "ConcurrentReferenceUpdateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4e118dae-c4ea-4750-b7f3-70befafc9138",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 514,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fa73d930-39e0-4616-98c6-ae5a9a434216",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 515,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "590d2ecd-636a-4781-a85c-5ac3dee74604",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 516,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e1d6a2de-9dd2-434c-88e5-c4adec547e1f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 517,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7efde036-3e55-4393-9674-4e8847593f3c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 518,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "97e190fe-d0d7-4460-961a-e410abc437f3",
      "documentation": "Merges two specified branches using the three-way merge strategy.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.MergeBranchesByThreeWay",
      "responses": [
        {
          "uuid": "93cfc3c2-4560-412d-ab98-af445c3d698a",
          "body": "{\n  \"commitId\": \"\",\n  \"treeId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "03177b45-f2e4-47b0-9754-d7f8098a8642",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ade01df9-9a7e-4027-adb5-ae7f216d3cf6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a70c1852-b78b-4457-899c-ca23e4e8844d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e9cef01e-cafa-48be-bf0b-cb4c52bf03d8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TipsDivergenceExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3d55a1fc-ddc8-40f4-85ce-873181e73a06",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "CommitRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f8670075-c592-4675-9458-fa204a711e2f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidCommitException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eb0157a9-ae5b-450a-82b1-87645696801f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "CommitDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "af5ade5a-1040-45ca-99f9-93a96e6992b2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidTargetBranchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "08e73651-1f73-42be-b15d-7017b97486dd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidBranchNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5cd86154-8752-4511-bca4-38ce54226707",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "BranchNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "74f83f36-45e3-4eed-86d4-b63f9d5ff4c3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "BranchNameIsTagNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "853cd8e0-67d2-4ce6-aea6-ee01a014d0cf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "BranchDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7505b6a2-4c9b-4022-b8da-5fd8323d8d13",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "ManualMergeRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9cff32ab-52c7-4fe9-b9ba-0d99b764b3aa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "ConcurrentReferenceUpdateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c8ebce8b-eb8b-4270-9f96-12141a9df3b6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "InvalidConflictDetailLevelException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b68f6d4c-caf0-468e-b6da-02f3ef5888d2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 495,
          "label": "InvalidConflictResolutionStrategyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "932707f7-99dd-4f36-a3e6-53ce6abc8b8e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 496,
          "label": "InvalidConflictResolutionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "07d7c38a-46ab-4fca-9830-f05de7c296ad",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 497,
          "label": "MaximumConflictResolutionEntriesExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3b08eafa-9d0b-4025-855d-eafee7b19759",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 498,
          "label": "MultipleConflictResolutionEntriesException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "148baa07-b653-474f-b9b0-c34aaf69a438",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 499,
          "label": "ReplacementTypeRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f05344ec-6860-4979-b1a2-7261893210ca",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 500,
          "label": "InvalidReplacementTypeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a9e422d6-4765-492d-9d55-69f6dbd331c4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 501,
          "label": "ReplacementContentRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5dfdb3fb-abc8-4054-ad29-f66711ab56c1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 502,
          "label": "InvalidReplacementContentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3040b314-c996-4cbe-9daf-28effc4d45fd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 503,
          "label": "PathRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "def6f6a5-1eae-4248-bdeb-d1e77a131439",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 504,
          "label": "InvalidPathException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c7dbe658-1b93-43ad-a8d1-e364017bf974",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 505,
          "label": "FileContentSizeLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eb59cb50-7c7f-4f5a-863c-616974d73dc4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 506,
          "label": "FolderContentSizeLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2085f36c-571d-406d-bcca-ff0c3f1f814c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 507,
          "label": "MaximumFileContentToLoadExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bfb60325-58f1-4f99-9beb-bf382d9eccb4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 508,
          "label": "MaximumItemsToCompareExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4e6585fc-91be-4207-b708-c78bfddb3ee6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 509,
          "label": "FileModeRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "34292c88-ba8a-4501-8686-57904203c906",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 510,
          "label": "InvalidFileModeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8a332c82-bcdb-4990-99f9-83744db1c23b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 511,
          "label": "NameLengthExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7bf36a8a-c157-4251-8568-46bae2606f56",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 512,
          "label": "InvalidEmailException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "017edf37-5f4a-46b5-8c5a-34dbda72e5fb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 513,
          "label": "CommitMessageLengthExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1e06be6e-9c06-4b48-970a-9ed419001105",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 514,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0adedd6f-2ca1-4efb-8e6a-5f911c277244",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 515,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ccc3f51f-a21d-4c29-af50-a91341004fbc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 516,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3b54c3b5-703b-4589-9367-375a956de333",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 517,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0a061c11-71ee-4dae-8bc1-b1d7df122fae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 518,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0d3a3668-76b8-4164-8882-2cc1438114f3",
      "documentation": "Attempts to merge the source commit of a pull request into the specified destination branch for that pull request at the specified commit using the fast-forward merge strategy. If the merge is successful, it closes the pull request.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.MergePullRequestByFastForward",
      "responses": [
        {
          "uuid": "c93436ee-ee83-4364-8982-c4ab11774a88",
          "body": "{\n  \"pullRequest\": {\n    \"pullRequestId\": \"\",\n    \"title\": \"\",\n    \"description\": \"\",\n    \"lastActivityDate\": \"{{faker 'date.recent' 365}}\",\n    \"creationDate\": \"{{faker 'date.recent' 365}}\",\n    \"pullRequestStatus\": \"\",\n    \"authorArn\": \"\",\n    \"pullRequestTargets\": [\n      {\n        \"repositoryName\": \"\",\n        \"sourceReference\": \"\",\n        \"destinationReference\": \"\",\n        \"destinationCommit\": \"\",\n        \"sourceCommit\": \"\",\n        \"mergeBase\": \"\",\n        \"mergeMetadata\": {\n          \"isMerged\": {{faker 'random.boolean'}},\n          \"mergedBy\": \"\",\n          \"mergeCommitId\": \"\",\n          \"mergeOption\": \"\"\n        }\n      }\n    ],\n    \"clientRequestToken\": \"\",\n    \"revisionId\": \"\",\n    \"approvalRules\": [\n      {\n        \"approvalRuleId\": \"\",\n        \"approvalRuleName\": \"\",\n        \"approvalRuleContent\": \"\",\n        \"ruleContentSha256\": \"\",\n        \"lastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n        \"creationDate\": \"{{faker 'date.recent' 365}}\",\n        \"lastModifiedUser\": \"\",\n        \"originApprovalRuleTemplate\": {\n          \"approvalRuleTemplateId\": \"\",\n          \"approvalRuleTemplateName\": \"\"\n        }\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7ce4495e-a440-4656-97af-c4b1d04a14b7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ManualMergeRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "93ffed8f-c1c7-45c1-92a7-eb804adc05b0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "PullRequestAlreadyClosedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e36bd5c3-0818-4f2f-8a1d-beef68aada1d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "PullRequestDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "68a2e56c-7917-4297-87b4-e048343d0014",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidPullRequestIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e1e95db0-fb31-4ee6-8506-310a284eeb9a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "PullRequestIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4f673f41-ccb8-436c-ac25-310c13dc3bd2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "TipOfSourceReferenceIsDifferentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fcd24e70-98cc-464b-b731-d636a64888aa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ReferenceDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5b13c1d8-b9ca-4ceb-b2f4-c6d83813e49d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidCommitIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8e1516f4-ebda-410f-8a53-cecce2523530",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "RepositoryNotAssociatedWithPullRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ae14df8e-4bbf-450b-a301-92a9ab92221b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "08647914-ddc6-4dce-8160-f55a3a30d9e1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3f0436c8-6edd-4b91-a339-9e4e3854e6ff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "15bf2b15-07c9-44cc-bb36-884ff4d94aaf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "ConcurrentReferenceUpdateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "645c8588-7b3b-492c-adca-54a1e9785832",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "PullRequestApprovalRulesNotSatisfiedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "130af6d7-1f7f-4513-bcc4-6a896d06aa03",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "73aa39e5-7e01-402a-ad24-45b0249f6789",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 495,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8efd9e14-59e9-4d4e-9ff6-feeb17f61fd8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 496,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8a67c076-a4d4-4331-a37a-01ab25abbef5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 497,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "250b41dc-bdd0-4a72-aa68-a75c96392cd7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 498,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ba1c3c8d-a312-4d74-b0b0-ced95d75b990",
      "documentation": "Attempts to merge the source commit of a pull request into the specified destination branch for that pull request at the specified commit using the squash merge strategy. If the merge is successful, it closes the pull request.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.MergePullRequestBySquash",
      "responses": [
        {
          "uuid": "de2ab8c7-e611-4ed5-92b8-54be25bacb3a",
          "body": "{\n  \"pullRequest\": {\n    \"pullRequestId\": \"\",\n    \"title\": \"\",\n    \"description\": \"\",\n    \"lastActivityDate\": \"{{faker 'date.recent' 365}}\",\n    \"creationDate\": \"{{faker 'date.recent' 365}}\",\n    \"pullRequestStatus\": \"\",\n    \"authorArn\": \"\",\n    \"pullRequestTargets\": [\n      {\n        \"repositoryName\": \"\",\n        \"sourceReference\": \"\",\n        \"destinationReference\": \"\",\n        \"destinationCommit\": \"\",\n        \"sourceCommit\": \"\",\n        \"mergeBase\": \"\",\n        \"mergeMetadata\": {\n          \"isMerged\": {{faker 'random.boolean'}},\n          \"mergedBy\": \"\",\n          \"mergeCommitId\": \"\",\n          \"mergeOption\": \"\"\n        }\n      }\n    ],\n    \"clientRequestToken\": \"\",\n    \"revisionId\": \"\",\n    \"approvalRules\": [\n      {\n        \"approvalRuleId\": \"\",\n        \"approvalRuleName\": \"\",\n        \"approvalRuleContent\": \"\",\n        \"ruleContentSha256\": \"\",\n        \"lastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n        \"creationDate\": \"{{faker 'date.recent' 365}}\",\n        \"lastModifiedUser\": \"\",\n        \"originApprovalRuleTemplate\": {\n          \"approvalRuleTemplateId\": \"\",\n          \"approvalRuleTemplateName\": \"\"\n        }\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a651f383-a3c4-46b6-91da-a1efa8fef40c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "PullRequestAlreadyClosedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8bede167-5da2-40d4-a599-b755bd765739",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "PullRequestDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a68991a1-b7b2-44f6-8d6a-4b944f4404e1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "PullRequestIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0c9ee61e-3c4a-4d2b-9017-cfe29ca86235",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidPullRequestIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ef448bd8-7c0e-4126-aeac-32f475ce4fa1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidCommitIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "18013d97-5aee-4bc1-9ad5-1d96f5605559",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ManualMergeRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "812a2e14-5e90-4058-9c3e-6c2ea3bc64bd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "TipOfSourceReferenceIsDifferentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5e3281ef-3e24-43ae-945b-8508000e81cb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "TipsDivergenceExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "907bf965-bd7c-4836-a37f-1e17772a87e4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "NameLengthExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ca9654c5-01bc-425a-bd5d-cf0d6acfbcfe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidEmailException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ed9ba770-55e4-4575-b8b7-ddf76db0ad03",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "CommitMessageLengthExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f77fc80a-aa5d-43dc-ad8e-b2451d9ed580",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "InvalidConflictDetailLevelException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f432027c-43e8-4979-b78b-ad74080401ac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "InvalidConflictResolutionStrategyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "62293de7-6884-4192-8675-3e04b441bb50",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "InvalidConflictResolutionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "95af6433-79af-4307-9e6c-6b48978f280a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "ReplacementTypeRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1e24c1b5-43ec-4f48-8a3a-33755a309491",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 495,
          "label": "InvalidReplacementTypeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0ade2a39-e9dc-44a6-a946-597d173b1faf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 496,
          "label": "MultipleConflictResolutionEntriesException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6cad4931-1f3c-4e0d-8a3d-4ca6bad4c6db",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 497,
          "label": "ReplacementContentRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eb2dd1df-bb86-4329-b634-0d2b241f54d4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 498,
          "label": "MaximumConflictResolutionEntriesExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0814c8a0-708b-443e-9bac-c7282e79a453",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 499,
          "label": "ConcurrentReferenceUpdateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0bb676e7-772d-422e-8732-dac8b0daeeda",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 500,
          "label": "PathRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e9d4280f-5039-4a75-889c-b8461229526f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 501,
          "label": "InvalidPathException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "96b91179-73a1-4a06-9cd0-3e0c83807264",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 502,
          "label": "InvalidFileModeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "96d6bb0c-c4ee-4466-9907-bb51b2ef62e5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 503,
          "label": "InvalidReplacementContentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7bc0ef78-756a-4726-912c-61e00f9baa5a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 504,
          "label": "FileContentSizeLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "909a701a-83a9-492f-968a-a713413639ac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 505,
          "label": "FolderContentSizeLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0fc7444f-5758-4520-bf52-fbecf94c9811",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 506,
          "label": "MaximumFileContentToLoadExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3434ae77-9643-4a59-8410-a128a6da5aaa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 507,
          "label": "MaximumItemsToCompareExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9984bea9-17ac-4e81-8fc4-d7e3a7634ae3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 508,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "31f599b2-f58c-4dd0-ad79-8438bc9db49d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 509,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a31c6b89-d631-4923-8c81-f64a706e152d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 510,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c960c825-0fb0-435f-a8db-23a07be26912",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 511,
          "label": "RepositoryNotAssociatedWithPullRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3cd6bf65-d9dd-4eaa-a50b-85fb9192e5e6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 512,
          "label": "PullRequestApprovalRulesNotSatisfiedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "89c65730-24ce-4c5e-b911-0ee4b0fabf8c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 513,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "71cf3467-413e-4c11-8637-1320776ae08e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 514,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e26191d6-4541-49b4-a06e-bbe26c32f99c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 515,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3848d83d-72d6-4342-ab5f-c86d3ef9d3ff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 516,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d7b74ac5-2a3f-493e-87da-e431a4a62029",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 517,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f0dccbf2-6cb2-45c4-8832-c445b2463206",
      "documentation": "Attempts to merge the source commit of a pull request into the specified destination branch for that pull request at the specified commit using the three-way merge strategy. If the merge is successful, it closes the pull request.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.MergePullRequestByThreeWay",
      "responses": [
        {
          "uuid": "059e3317-2afa-4025-8750-7a910877f693",
          "body": "{\n  \"pullRequest\": {\n    \"pullRequestId\": \"\",\n    \"title\": \"\",\n    \"description\": \"\",\n    \"lastActivityDate\": \"{{faker 'date.recent' 365}}\",\n    \"creationDate\": \"{{faker 'date.recent' 365}}\",\n    \"pullRequestStatus\": \"\",\n    \"authorArn\": \"\",\n    \"pullRequestTargets\": [\n      {\n        \"repositoryName\": \"\",\n        \"sourceReference\": \"\",\n        \"destinationReference\": \"\",\n        \"destinationCommit\": \"\",\n        \"sourceCommit\": \"\",\n        \"mergeBase\": \"\",\n        \"mergeMetadata\": {\n          \"isMerged\": {{faker 'random.boolean'}},\n          \"mergedBy\": \"\",\n          \"mergeCommitId\": \"\",\n          \"mergeOption\": \"\"\n        }\n      }\n    ],\n    \"clientRequestToken\": \"\",\n    \"revisionId\": \"\",\n    \"approvalRules\": [\n      {\n        \"approvalRuleId\": \"\",\n        \"approvalRuleName\": \"\",\n        \"approvalRuleContent\": \"\",\n        \"ruleContentSha256\": \"\",\n        \"lastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n        \"creationDate\": \"{{faker 'date.recent' 365}}\",\n        \"lastModifiedUser\": \"\",\n        \"originApprovalRuleTemplate\": {\n          \"approvalRuleTemplateId\": \"\",\n          \"approvalRuleTemplateName\": \"\"\n        }\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7467f336-ba6a-44e9-8cc4-b1d3f31b2b20",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "PullRequestAlreadyClosedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2b8d8589-660c-4b5e-985e-5b95effd6b3e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "PullRequestDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9fee866d-8e50-4072-9231-7a02137df19b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "PullRequestIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "02723c7c-e507-4e65-aa3d-8033a3533323",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidPullRequestIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "11bc95bd-0be6-4138-a1e3-6d9f75911911",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidCommitIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cf451aba-6bd3-43a3-afc9-42a447bddc65",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ManualMergeRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e9e14d9d-4fc0-4ca1-9772-6f67e55eb253",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "TipOfSourceReferenceIsDifferentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1ec8f405-378a-4603-a0a2-3d2ecb7f43ab",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "TipsDivergenceExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d2c9125b-a1af-4c91-bd13-a114224370f3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "NameLengthExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b0077dda-a67f-4f03-825d-a6a918e70ee0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidEmailException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "23a726ed-731a-488a-be43-c886278eb945",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "CommitMessageLengthExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "88e9f333-3a3d-4f9d-9699-41028afe1e70",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "InvalidConflictDetailLevelException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "93a19843-f5b0-4d3a-a307-669a47fc93b3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "InvalidConflictResolutionStrategyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "61ab92be-0daa-44b7-90ea-fe4cbb389d09",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "InvalidConflictResolutionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1712982d-9e89-48c7-afb2-85ef06ec4a8f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "ReplacementTypeRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6b6604b6-11e5-4b4f-a73f-1cdacd46074f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 495,
          "label": "InvalidReplacementTypeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "53b57bcd-e1d3-4c7d-9ca6-f064274002c0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 496,
          "label": "MultipleConflictResolutionEntriesException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c7560df9-2545-438b-b0ff-329de0f82660",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 497,
          "label": "ReplacementContentRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cd831da7-0d59-4872-b89b-e60266cd91cf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 498,
          "label": "MaximumConflictResolutionEntriesExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bc82e9bb-a6cf-4f40-ba89-4cb0c4baed59",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 499,
          "label": "PathRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3a4f7004-0511-4efe-97e1-be2779f83830",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 500,
          "label": "InvalidPathException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eebd8cf2-cc52-4a86-87f7-c327cfa5669b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 501,
          "label": "InvalidFileModeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "96c9504b-9b7f-4135-81d3-dda4705f9bb4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 502,
          "label": "InvalidReplacementContentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8c987379-099d-4335-8bc7-5a8ce72bc7f2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 503,
          "label": "FileContentSizeLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3e58232e-cc8f-4017-979f-3787f3446246",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 504,
          "label": "FolderContentSizeLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6d0d1508-e56d-4316-bcde-307bd50792b7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 505,
          "label": "MaximumFileContentToLoadExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8e93f12e-dbf3-47bf-a86a-b5d12c471423",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 506,
          "label": "MaximumItemsToCompareExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e6e6ea2a-0812-4bb1-947b-d92b46471e82",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 507,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3c4f233b-778d-41e6-a8c6-bcd285a771ff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 508,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1e0b5cda-42e0-4323-9e58-ac545c0c330e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 509,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1b199f64-bafc-4c13-a81f-fc0f2f159466",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 510,
          "label": "RepositoryNotAssociatedWithPullRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9ed34edd-7216-430f-854c-b6c1c8fe726c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 511,
          "label": "ConcurrentReferenceUpdateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1c74ce3e-5909-40b8-9864-65a1234830d0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 512,
          "label": "PullRequestApprovalRulesNotSatisfiedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ca2c9abc-c068-4050-9144-90e76c5c952b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 513,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5256e915-3df3-4722-88df-17a9ac903af8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 514,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1b766f97-07ec-4b7a-98af-27772f788e53",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 515,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "df0046ba-8cac-4373-b880-b0f934aa5b22",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 516,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bcf33d4c-23be-4000-aa13-a92fd1a885d6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 517,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a771a91b-f014-45d2-8fd3-39c4cd4a9bff",
      "documentation": "Sets aside (overrides) all approval rule requirements for a specified pull request.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.OverridePullRequestApprovalRules",
      "responses": [
        {
          "uuid": "43cbeef9-6f9c-4240-b2a8-85f4e4b7ac6d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8a941342-2777-470b-9724-c35358339536",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "PullRequestDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "46463d2a-f56a-4ea2-bb8a-8b5df7f990eb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidPullRequestIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5a4aede5-65b7-401a-958c-e2824914852e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "PullRequestIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1fd24cc1-d515-411f-ac81-6e3547e50691",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidRevisionIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "29837976-15f9-4d47-acb5-9c93f66223b2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "RevisionIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ba20cd67-aad7-4c11-b97e-4ec6bac30d9e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidOverrideStatusException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2367488d-bb45-4a67-aedf-bf89eca86272",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "OverrideStatusRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "34379ef5-e713-4b89-b4b6-5806a36d1904",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "OverrideAlreadySetException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6555b1aa-4999-4c32-a772-e12d245309a2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "RevisionNotCurrentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1b83eed2-bd6a-4449-844e-65de9c7c013a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "PullRequestAlreadyClosedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "34666a32-5b0c-4a83-ab94-cb2205e81fa2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ff6ea84c-f972-42ad-9aed-4e6415e663f9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "68f8e99d-f3de-4233-8c1c-536e384232a6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4665b604-09b3-4d26-8d76-f2cb34d22c9e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "842203e2-54d5-4590-9f2a-be34cce33875",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b97359d5-80c9-4894-ba94-eda9f8aae96e",
      "documentation": "Posts a comment on the comparison between two commits.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.PostCommentForComparedCommit",
      "responses": [
        {
          "uuid": "7a217155-14ee-47e4-a89c-0710a3d0d331",
          "body": "{\n  \"repositoryName\": \"\",\n  \"beforeCommitId\": \"\",\n  \"afterCommitId\": \"\",\n  \"beforeBlobId\": \"\",\n  \"afterBlobId\": \"\",\n  \"location\": {\n    \"filePath\": \"\",\n    \"filePosition\": {{faker 'random.number'}},\n    \"relativeFileVersion\": \"\"\n  },\n  \"comment\": {\n    \"commentId\": \"\",\n    \"content\": \"\",\n    \"inReplyTo\": \"\",\n    \"creationDate\": \"{{faker 'date.recent' 365}}\",\n    \"lastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"authorArn\": \"\",\n    \"deleted\": {{faker 'random.boolean'}},\n    \"clientRequestToken\": \"\",\n    \"callerReactions\": [\n      \"\"\n    ],\n    \"reactionCounts\": {}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a593fd85-6aaa-4939-b859-ae2bf1da8449",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "464ff1b3-6d18-478f-8c21-d81ef9e3f6ad",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9650f98e-539d-4f83-85eb-dc33385f68f6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7e13ab6f-ac36-4f5a-8b57-e607cf3be82b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ClientRequestTokenRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4ee5f9cd-15b6-4fee-b08f-4797104202ef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidClientRequestTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ffafa918-b0d4-4845-a9a4-abdee0dde2d2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "IdempotencyParameterMismatchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "18d00903-fd53-4573-9eda-45b1b9394b8e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "CommentContentRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e7bb9f3d-c85c-4ff7-97c6-93155d310cc0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "CommentContentSizeLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3a30fdd5-fe15-4d10-b0a1-66b3ab7fd127",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidFileLocationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a31d31c7-c2e0-4ffb-8f2d-f0752171d553",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidRelativeFileVersionEnumException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3ab2832e-c1aa-4902-8e40-68c93d983acc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "PathRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f5287f01-9f0c-40ae-a430-e587123e025a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "InvalidFilePositionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1e6fe820-8b3c-43c4-b2da-0ad560b59f78",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "CommitIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "46a162f4-dbc5-4b7b-89c4-ceab8026f2ca",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "InvalidCommitIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bd96cb3d-66a7-4ecf-9d97-b082dafde531",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "BeforeCommitIdAndAfterCommitIdAreSameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "15c2af06-8633-403d-86c9-296292c7a6dd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 495,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9236d54d-f5c1-47b1-aaa0-315c85ea8d8a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 496,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0b75c470-0f80-4c6d-9353-60c80ae8a3a9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 497,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "85f59952-9016-4b20-822a-1df224145621",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 498,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6bca2a3b-8038-415f-9af3-13bc4f24c7af",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 499,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9b9ff648-b0fc-4b84-9594-e58fa7cd534f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 500,
          "label": "CommitDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cc3a4b2c-496d-42c0-86fc-d10b8cd080d5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 501,
          "label": "InvalidPathException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e22591d1-74d9-4cae-aa99-1e15e131398c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 502,
          "label": "PathDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "695dbaaa-0ed8-4fab-872e-676b0ad73ae5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 503,
          "label": "PathRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "87808108-3f37-4ccc-b184-b78772ed2603",
      "documentation": "Posts a comment on a pull request.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.PostCommentForPullRequest",
      "responses": [
        {
          "uuid": "2641423d-3125-46a3-a582-70e1a71ec91c",
          "body": "{\n  \"repositoryName\": \"\",\n  \"pullRequestId\": \"\",\n  \"beforeCommitId\": \"\",\n  \"afterCommitId\": \"\",\n  \"beforeBlobId\": \"\",\n  \"afterBlobId\": \"\",\n  \"location\": {\n    \"filePath\": \"\",\n    \"filePosition\": {{faker 'random.number'}},\n    \"relativeFileVersion\": \"\"\n  },\n  \"comment\": {\n    \"commentId\": \"\",\n    \"content\": \"\",\n    \"inReplyTo\": \"\",\n    \"creationDate\": \"{{faker 'date.recent' 365}}\",\n    \"lastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"authorArn\": \"\",\n    \"deleted\": {{faker 'random.boolean'}},\n    \"clientRequestToken\": \"\",\n    \"callerReactions\": [\n      \"\"\n    ],\n    \"reactionCounts\": {}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b50d209c-5062-41d9-9bdb-6432d5287c19",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "PullRequestDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3909f3d6-6c1f-4743-9fa9-10d2d4a98025",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidPullRequestIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c72c77de-21b3-4001-9b3a-eed5d1271578",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "PullRequestIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "394b507c-d3ff-42eb-88b7-82d1084d94ec",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "RepositoryNotAssociatedWithPullRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "090d077b-956f-413e-9f3e-ece51d4a476a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a0ae0b14-04f1-45e3-b2ed-228e2c89e58c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9cb987a6-3bd4-4153-8c38-5a37d7b66f30",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ced132e1-7eed-4b3c-9e18-8796c613e2b7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "ClientRequestTokenRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "49d012d6-159e-4ded-a7cd-4d186a53873f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidClientRequestTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "337d7147-05ca-4fa6-94fd-ae74eac759a2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "IdempotencyParameterMismatchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "055f2652-9408-498a-ad76-8da68d9e419a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "CommentContentRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "db3a5a89-a15d-407d-8786-448fbe8c0a10",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "CommentContentSizeLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "da3827c5-40a5-49c5-a0c2-80ac29818ad4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "InvalidFileLocationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5b089ac6-e11c-4ef1-a73a-18b2b6474ddf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "InvalidRelativeFileVersionEnumException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "095206a8-f7d9-4068-bd8b-6d552e061964",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "PathRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "48017b16-3ac9-4455-8cc6-20d649ce68ba",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 495,
          "label": "InvalidFilePositionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cc3db16f-7ded-4880-96dd-7f5160ab3d2d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 496,
          "label": "CommitIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "18e99494-fc2b-4f38-b67d-2d02c6fd2bf1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 497,
          "label": "InvalidCommitIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d9d10a07-5e06-4511-a82c-65d118d24fba",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 498,
          "label": "BeforeCommitIdAndAfterCommitIdAreSameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "67ebd355-4910-45d4-9cb0-85d563823645",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 499,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d170e289-39be-4099-8db5-95ac44c715d5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 500,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b49778e8-c1ee-4958-bbf7-b8da1b120dff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 501,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fba7d470-91e6-4e9f-8190-648fd660d935",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 502,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c5551878-c919-495f-b368-c707a8d1537a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 503,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2e52860c-0ca8-4683-9196-f9eecce8cf52",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 504,
          "label": "CommitDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "affad3d1-8193-4d26-9328-90fc2da35a76",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 505,
          "label": "InvalidPathException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6311847e-f2a1-4318-a700-27dd3e703777",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 506,
          "label": "PathDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "27150b23-8198-40d7-a455-13d81cbb6a60",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 507,
          "label": "PathRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "81d0f58f-e56a-4a7a-a950-c2d0cdc065f4",
      "documentation": "Posts a comment in reply to an existing comment on a comparison between commits or a pull request.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.PostCommentReply",
      "responses": [
        {
          "uuid": "2060fede-104b-4c93-8325-27be8c506f2a",
          "body": "{\n  \"comment\": {\n    \"commentId\": \"\",\n    \"content\": \"\",\n    \"inReplyTo\": \"\",\n    \"creationDate\": \"{{faker 'date.recent' 365}}\",\n    \"lastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"authorArn\": \"\",\n    \"deleted\": {{faker 'random.boolean'}},\n    \"clientRequestToken\": \"\",\n    \"callerReactions\": [\n      \"\"\n    ],\n    \"reactionCounts\": {}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9277d5ea-44fa-4131-9a20-9d8d9e83f528",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ClientRequestTokenRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a9152009-1550-42d1-8ed7-e350a1cb19a5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidClientRequestTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0323b608-2395-455a-a9ae-7f1b8a4f2a4a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "IdempotencyParameterMismatchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c43fd5e1-dfc0-4853-b6bc-374716d7f00f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "CommentContentRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d68bff25-0da3-4625-9309-974f4be308e6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "CommentContentSizeLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bdac92ad-d37b-4e8a-83df-b6f650bc76e2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "CommentDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1ea7842f-a820-40a3-8f3e-fd120952a7f3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "CommentIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5961458d-7383-4095-ad5d-7c34a643ab16",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidCommentIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e61389bf-1dbf-4866-9db1-346ea8a96534",
      "documentation": "Adds or updates a reaction to a specified comment for the user whose identity is used to make the request. You can only add or update a reaction for yourself. You cannot add, modify, or delete a reaction for another user.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.PutCommentReaction",
      "responses": [
        {
          "uuid": "3a5b6b49-c364-4588-b7cc-0af352c76df8",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8aa24c63-09c7-49d8-910b-4418532d270c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "CommentDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d8801eda-6833-4968-8986-1bd45770ea5f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "CommentIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f7bf49dd-649b-4dc5-a264-e466c5395dfb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidCommentIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "235f9250-a977-41ff-be58-fc3c6c9387d2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidReactionValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2e938789-7d58-4bac-a7b7-adaa870cd30e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ReactionValueRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f8987e8d-9ad8-41ce-b39a-50eb2aea05d3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ReactionLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9ab7942d-19f7-4776-91b9-c18ff89f4cdc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "CommentDeletedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "593be242-b971-4105-bedc-35b33c5cdeca",
      "documentation": "Adds or updates a file in a branch in an AWS CodeCommit repository, and generates a commit for the addition in the specified branch.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.PutFile",
      "responses": [
        {
          "uuid": "20d26652-6b6a-4d06-bb32-7640283ba19a",
          "body": "{\n  \"commitId\": \"\",\n  \"blobId\": \"\",\n  \"treeId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4a1eff9a-939c-4ab7-81f6-39bafe805a67",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cee0a1ac-2ff9-470f-9742-a256a829379d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8f0ca9b5-2ce2-4b15-9dcf-f92e1eb41135",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b3ee5d45-9970-425c-8b8d-242d2d660b1c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ParentCommitIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7dd5f0e6-fff6-4cc9-8556-b526d1b4658f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidParentCommitIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "777a173a-4e6f-4c9a-986a-3269e199bc8a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ParentCommitDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b20601e3-5810-4f97-abfe-fac4c10a45dd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ParentCommitIdOutdatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "83970e40-b945-47b1-b972-e752fbbbfd07",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "FileContentRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c62d1072-b483-46f7-b4ea-8fbe1a27fb40",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "FileContentSizeLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0262ed20-d9db-42d1-94d7-a16d3143f8e0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "FolderContentSizeLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0c8cc046-18b7-4354-a8d2-bc5b8d657670",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "PathRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "76e5d3aa-8b30-4a6c-9e6b-563ba8bb3f0a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "InvalidPathException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f5a46683-c910-48be-8c8a-1027d0dd1125",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "BranchNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0c317cc7-8a74-4c90-806a-8344275c546d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "InvalidBranchNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cf558f43-bccb-4c92-9db4-7a1e0acdb6d1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "BranchDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5badf3fc-e3d3-41c4-9542-0ef3a63e668d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 495,
          "label": "BranchNameIsTagNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ccae2f8f-e745-43b4-8f5b-ab7a61068fc4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 496,
          "label": "InvalidFileModeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4b72b345-d748-45ad-b2f3-bd1a07e6158c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 497,
          "label": "NameLengthExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "62de2018-e75c-4d80-80c6-b8db4ec5b7cd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 498,
          "label": "InvalidEmailException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a3af589b-016a-4216-a8ea-0192eb3a5966",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 499,
          "label": "CommitMessageLengthExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "28381a46-eb0a-4aaf-870c-cdedbfb3f3b4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 500,
          "label": "InvalidDeletionParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "382a4106-2dba-402c-bc3a-bf19d195e717",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 501,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6a935f31-3d70-4693-b72a-07516602d1d8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 502,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b150f38f-40fa-47e0-a329-3f000772420f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 503,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "37e3992b-9a83-460e-b46c-5955e24e52cb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 504,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4f8d5af5-7774-44df-b6c1-617eefb451e9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 505,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8310ff78-aaaa-4098-8e21-9d90c1951575",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 506,
          "label": "SameFileContentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f5773343-6d9c-4b46-b7fa-0688259d26fd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 507,
          "label": "FileNameConflictsWithDirectoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "31f2d788-7bdb-427c-a33a-12c27094dc7a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 508,
          "label": "DirectoryNameConflictsWithFileNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "278c4131-f636-4085-a6bb-057819ac18e1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 509,
          "label": "FilePathConflictsWithSubmodulePathException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2994132b-6fe4-4043-a8f7-22905a431f68",
      "documentation": "Replaces all triggers for a repository. Used to create or delete triggers.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.PutRepositoryTriggers",
      "responses": [
        {
          "uuid": "eeb1721c-70a6-46fc-a75c-2c199bb13f91",
          "body": "{\n  \"configurationId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "95057dc7-8d27-4fd8-845f-9d6969783c58",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6456d343-b757-46d1-9aef-a8c58673b5cf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "191ada51-7ae2-4c56-97f1-96c78ef24162",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b4dbadf4-fc9d-4184-82cc-7ef000a70369",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "RepositoryTriggersListRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "272e6213-2b18-46a3-acc0-021d8b262485",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "MaximumRepositoryTriggersExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "66a4a774-c1f0-49ad-bff6-cd633fb020e4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidRepositoryTriggerNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cb523d19-3e71-4bb7-aaa1-beb902ca45b9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidRepositoryTriggerDestinationArnException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0a5286ab-0fe1-44c8-b1fa-431b6684be6f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidRepositoryTriggerRegionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "11b3f14c-2066-40dd-a87c-c8ed8d2abeb6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidRepositoryTriggerCustomDataException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f8c0d514-86d4-4fff-86d4-753fcf4c4dd4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "MaximumBranchesExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "02a1d73e-b72c-4154-9d40-67bcee9f5b58",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidRepositoryTriggerBranchNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f9d6d825-188d-4360-800c-364bffc39d86",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "InvalidRepositoryTriggerEventsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aa8ba48a-0633-4ca5-a498-f395878ace1c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "RepositoryTriggerNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "87a770b4-b2ce-44b9-b3ae-1f0c1c674065",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "RepositoryTriggerDestinationArnRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "46da851b-2b9b-4d56-9e25-4b04f50929fb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "RepositoryTriggerBranchNameListRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fd225c67-9a75-40e1-8a85-254ad880cd55",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 495,
          "label": "RepositoryTriggerEventsListRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "46ad2905-5d55-4bbb-bd70-43495fce1507",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 496,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "03d587ff-8e69-4c8f-b563-57e147d1c270",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 497,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "09eb1243-28f4-4b69-b145-4c0074dc71f8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 498,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9617ffce-bb08-4dad-96a7-be0e6feb1f5c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 499,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3dfd736a-1524-4ac2-be98-acb075c2cb21",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 500,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c354d9d8-ebf1-4636-87d3-e1c530f4ce5a",
      "documentation": "Adds or updates tags for a resource in AWS CodeCommit. For a list of valid resources in AWS CodeCommit, see <a href=\"https://docs.aws.amazon.com/codecommit/latest/userguide/auth-and-access-control-iam-access-control-identity-based.html#arn-formats\">CodeCommit Resources and Operations</a> in the <i>AWS CodeCommit User Guide</i>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.TagResource",
      "responses": [
        {
          "uuid": "dcd4aed4-973e-4bf9-b4ec-9bf3bf9a41f4",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "39e8ceec-355a-43f6-8d75-0a91e4c1de07",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8e014326-1268-4242-b1df-42aa1f6a87b0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "db92fb24-9c6c-42a4-aa46-3697dd168d8d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceArnRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "039c3b59-a411-4cfb-9846-9bc5ae6e871b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidResourceArnException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bd2ef0e7-681d-4b8d-be30-a20fde9766f7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "TagsMapRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4d2f9cbd-33e9-479b-9660-c7a2e2096f51",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidTagsMapException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f47eed4a-214a-4153-bc61-6a8350b9df2d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "TooManyTagsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5462a374-067c-4848-9898-12786b3828e7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidSystemTagUsageException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e7b963a2-62d6-42e2-a0ac-63598a2c38e7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "TagPolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d7b3c1d1-4ad0-4621-a1ec-e9841bc8ed8d",
      "documentation": "Tests the functionality of repository triggers by sending information to the trigger target. If real data is available in the repository, the test sends data from the last commit. If no data is available, sample data is generated.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.TestRepositoryTriggers",
      "responses": [
        {
          "uuid": "d9ed53db-8cd3-43eb-96b6-38996e51afb2",
          "body": "{\n  \"successfulExecutions\": [\n    \"\"\n  ],\n  \"failedExecutions\": [\n    {\n      \"trigger\": \"\",\n      \"failureMessage\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5f64f43d-ef99-4599-ae6a-91a93a8b6fda",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1903c35e-b4de-4e8a-bb27-8a3bca288f24",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fe5a179e-7593-4e53-8640-3ee344c363cc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8c69e320-4db6-4a09-9b5b-f08e4566e427",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "RepositoryTriggersListRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "269571e7-21ef-4229-809e-43ae451dbd7e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "MaximumRepositoryTriggersExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "164a49c2-cc85-4d31-9959-595bc1297111",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidRepositoryTriggerNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6d6b3901-538d-4211-8b16-cd5d17ebccff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidRepositoryTriggerDestinationArnException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "67cda531-91f1-4e52-a6e9-47f3c0161c32",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidRepositoryTriggerRegionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "941fc363-b439-4cb7-aaf6-055fc1521e5f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidRepositoryTriggerCustomDataException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f2aaccc1-5e02-447b-bc4e-b7659fb11ab1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "MaximumBranchesExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7dc62f65-8a6a-4c6a-8eaf-69f48a7a9153",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidRepositoryTriggerBranchNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0a585753-1c7a-437e-91c2-e9061d6987d6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "InvalidRepositoryTriggerEventsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c3a01fab-d9b5-43ce-a630-fe690fac9527",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "RepositoryTriggerNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5a1dd157-8012-40d0-90f1-b00f71400b27",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "RepositoryTriggerDestinationArnRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "90a73882-2acd-4805-ae48-d93a5cb9d163",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "RepositoryTriggerBranchNameListRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "53d9931d-1cc5-4ed8-aeae-843460fdc669",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 495,
          "label": "RepositoryTriggerEventsListRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ecd00f49-1ce9-44e2-9ba7-53056b3120fb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 496,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a9f02bb8-5577-4367-8b98-f896af278e82",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 497,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "48a240a4-4f8c-491d-b72f-e3bb784618ea",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 498,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "73a3a0de-65a0-4eba-88bc-e74d9b304c3e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 499,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fd29053e-c5b1-4710-8418-2e3f3f711a3b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 500,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "16ddc2b6-bd57-4776-a6ff-8cbde9e26e29",
      "documentation": "Removes tags for a resource in AWS CodeCommit. For a list of valid resources in AWS CodeCommit, see <a href=\"https://docs.aws.amazon.com/codecommit/latest/userguide/auth-and-access-control-iam-access-control-identity-based.html#arn-formats\">CodeCommit Resources and Operations</a> in the <i>AWS CodeCommit User Guide</i>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.UntagResource",
      "responses": [
        {
          "uuid": "712fe364-54fe-4a27-a0fb-e3c295ad05d0",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "90bc8fd6-fec6-4cc6-9638-d812bafd35eb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6a328295-8e66-4927-aeb2-247094ad8062",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bfc3040b-261d-484a-a818-468a92d88a26",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceArnRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5736fe5d-4472-4eaa-9bfd-5ef7c2a5c90d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidResourceArnException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dae3b247-4c5b-4ee5-b8cd-3580aa6df9bc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "TagKeysListRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5225bed4-b956-4ea2-b71f-2cc55db30e9c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidTagKeysListException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "097756d6-51ed-47cd-b1e5-8965a7079d60",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "TooManyTagsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "32213b9e-bcfa-450f-a69e-39307e0b2dce",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidSystemTagUsageException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9026731c-7ade-4288-9fbe-4d10a6ab807f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "TagPolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c8464554-457b-43db-a168-817e4bf3da5e",
      "documentation": "Updates the content of an approval rule template. You can change the number of required approvals, the membership of the approval rule, and whether an approval pool is defined.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.UpdateApprovalRuleTemplateContent",
      "responses": [
        {
          "uuid": "2ed6ea10-2d59-4ea2-9945-c5bb485930bf",
          "body": "{\n  \"approvalRuleTemplate\": {\n    \"approvalRuleTemplateId\": \"\",\n    \"approvalRuleTemplateName\": \"\",\n    \"approvalRuleTemplateDescription\": \"\",\n    \"approvalRuleTemplateContent\": \"\",\n    \"ruleContentSha256\": \"\",\n    \"lastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"creationDate\": \"{{faker 'date.recent' 365}}\",\n    \"lastModifiedUser\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "28c2aad7-7e12-4009-bd6a-000a3fe50e1f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidApprovalRuleTemplateNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7fdccc93-c280-4ce0-a348-3b5b8e6eb6e8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ApprovalRuleTemplateNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2ad9787b-8a1f-4410-80f2-d982e798efe5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ApprovalRuleTemplateDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1ec02333-3b1d-4392-8a24-d344f5999390",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidApprovalRuleTemplateContentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "77130734-ca1d-4e6f-9942-fb6977bbfe6b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidRuleContentSha256Exception",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a0dd18df-db89-4d36-a5ba-7a0aba8a37ed",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ApprovalRuleTemplateContentRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "75a96b84-1ab1-4494-8281-a66958c5c486",
      "documentation": "Updates the description for a specified approval rule template.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.UpdateApprovalRuleTemplateDescription",
      "responses": [
        {
          "uuid": "0818d3d5-ccdb-4e93-82cf-b5b30be58989",
          "body": "{\n  \"approvalRuleTemplate\": {\n    \"approvalRuleTemplateId\": \"\",\n    \"approvalRuleTemplateName\": \"\",\n    \"approvalRuleTemplateDescription\": \"\",\n    \"approvalRuleTemplateContent\": \"\",\n    \"ruleContentSha256\": \"\",\n    \"lastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"creationDate\": \"{{faker 'date.recent' 365}}\",\n    \"lastModifiedUser\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "103b0dff-f30a-44db-b6aa-6c18e769f12f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidApprovalRuleTemplateNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "12a01fb1-14e3-4439-a252-cdf7306c2eb1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ApprovalRuleTemplateNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f20105c1-255b-4408-bfcd-3d2486d14fa8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ApprovalRuleTemplateDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5ce1ae35-c0fd-49da-a284-d882a7cdc4d8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidApprovalRuleTemplateDescriptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f00ddd47-0eea-4e42-8c69-ce360762e13d",
      "documentation": "Updates the name of a specified approval rule template.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.UpdateApprovalRuleTemplateName",
      "responses": [
        {
          "uuid": "a278028a-d62c-4912-8ffb-7a5a2dfed293",
          "body": "{\n  \"approvalRuleTemplate\": {\n    \"approvalRuleTemplateId\": \"\",\n    \"approvalRuleTemplateName\": \"\",\n    \"approvalRuleTemplateDescription\": \"\",\n    \"approvalRuleTemplateContent\": \"\",\n    \"ruleContentSha256\": \"\",\n    \"lastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"creationDate\": \"{{faker 'date.recent' 365}}\",\n    \"lastModifiedUser\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "929bda7c-8b05-4cc8-a225-a340e480b660",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidApprovalRuleTemplateNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ebc0e739-3a75-4aff-ba7e-28567e735830",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ApprovalRuleTemplateNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a2498282-f8e5-4fe8-bdb5-09a1e5da0d5a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ApprovalRuleTemplateDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ba9456fe-127f-469e-ade3-9b61814e3971",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ApprovalRuleTemplateNameAlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a5bdd5e2-d26c-49ec-8027-3f9cfc91c892",
      "documentation": "Replaces the contents of a comment.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.UpdateComment",
      "responses": [
        {
          "uuid": "b9d71b2b-feb8-41ea-b2a0-204b47d56922",
          "body": "{\n  \"comment\": {\n    \"commentId\": \"\",\n    \"content\": \"\",\n    \"inReplyTo\": \"\",\n    \"creationDate\": \"{{faker 'date.recent' 365}}\",\n    \"lastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"authorArn\": \"\",\n    \"deleted\": {{faker 'random.boolean'}},\n    \"clientRequestToken\": \"\",\n    \"callerReactions\": [\n      \"\"\n    ],\n    \"reactionCounts\": {}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0bcc5ac4-5f34-4b6f-9b75-5dfed9b0c405",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "CommentContentRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "236731b6-d652-4d88-93b6-a4937aa2b976",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "CommentContentSizeLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4d291756-e2c2-4253-a90a-9a6da9eea4ac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "CommentDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f1274369-4e84-486d-bccd-fe84858d1087",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "CommentIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "00fee28a-2b69-421f-b99c-e139fedc6100",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidCommentIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1c99c7ce-f841-4c4a-acc3-63efa9fe9904",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "CommentNotCreatedByCallerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ae283578-3bb8-411d-bb1f-cb202e7a84bd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "CommentDeletedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ea6b8679-6c9a-4778-b7e4-1523fad2ba3b",
      "documentation": "<p>Sets or changes the default branch name for the specified repository.</p> <note> <p>If you use this operation to change the default branch name to the current default branch name, a success message is returned even though the default branch did not change.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.UpdateDefaultBranch",
      "responses": [
        {
          "uuid": "3d878d0c-d6dd-41fe-892f-4cec0b24aacd",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ed894570-d7c4-4f45-a058-e0d909f83c24",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "989fcbec-b5a3-40b0-a414-ef8428f59074",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "07430e7d-6cd4-4541-a82c-964f0d364a7f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eda1aa5e-b129-436d-b37f-322d06277f86",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "BranchNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1db64cba-1d6e-48ee-a116-0cc3cf6194be",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidBranchNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ce316baf-00c0-4914-aec4-c7b2309c692f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "BranchDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b0c26cbe-1049-48f9-ae5f-eb8a5990d2a0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "787b0643-762f-48a3-8e2d-d1b397605df6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e0bab9aa-1ccb-4f5a-b3ce-28d4994e1e26",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4d5ba93e-b86c-452c-89c4-282950b68ef0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7cc5ce90-bb74-4a4e-98f8-db8492fa2cf0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "966505d4-1734-4524-96c3-03d043762212",
      "documentation": "Updates the structure of an approval rule created specifically for a pull request. For example, you can change the number of required approvers and the approval pool for approvers. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.UpdatePullRequestApprovalRuleContent",
      "responses": [
        {
          "uuid": "19c3dc59-a4c7-4b06-9fc0-07f0dd909bbb",
          "body": "{\n  \"approvalRule\": {\n    \"approvalRuleId\": \"\",\n    \"approvalRuleName\": \"\",\n    \"approvalRuleContent\": \"\",\n    \"ruleContentSha256\": \"\",\n    \"lastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"creationDate\": \"{{faker 'date.recent' 365}}\",\n    \"lastModifiedUser\": \"\",\n    \"originApprovalRuleTemplate\": {\n      \"approvalRuleTemplateId\": \"\",\n      \"approvalRuleTemplateName\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "df6da874-399e-482e-b6ad-38a4bdd7aee1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "PullRequestDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ba771b92-5cf7-47f5-87d3-3d1f19b35fc9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidPullRequestIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0f656251-69f3-4e02-92e4-24507625d82b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "PullRequestIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "80330069-7894-4e19-862a-8d6397086f06",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "PullRequestAlreadyClosedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "414040ea-5002-41b6-80ca-1dba7ddd369a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ApprovalRuleNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5e014117-286b-4218-8c68-2c2ddd2a46a2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidApprovalRuleNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f47f48f9-e084-45bb-afbd-d7c4e357581f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ApprovalRuleDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b8ffd014-57fe-42a6-a1f5-f7a2b2dca1f7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidRuleContentSha256Exception",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9ee69f15-6834-4fc6-b082-36f2b6856751",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "ApprovalRuleContentRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d02fbe8d-ed8d-4c41-83a5-effba0fa95bb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidApprovalRuleContentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "094abc5c-d02c-4409-9c0b-f8debff19abe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "CannotModifyApprovalRuleFromTemplateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d8d6b782-0f86-4a42-a86e-6e59e11b6d64",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8c771a65-fdb2-41f0-934e-29924e1ba87a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8940e47a-830e-41dd-ba07-4a0581fc5980",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0c9fba3f-788b-4af7-a94e-3e4b634a8d53",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c17e2e54-59a9-44af-8a7d-742242143852",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 495,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "703f4bbb-6d4d-4afe-89e4-6f8e9351e10e",
      "documentation": "Updates the state of a user's approval on a pull request. The user is derived from the signed-in account when the request is made.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.UpdatePullRequestApprovalState",
      "responses": [
        {
          "uuid": "9f75e5f0-6813-4c43-bbf3-1f518d2e8508",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "15fb3136-1b11-4fbd-972c-6b31b3e5e8e0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "PullRequestDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fa470f60-25e5-4cee-93b7-f1f69f7a755f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidPullRequestIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2bb69cf3-70ef-47d2-8e08-8dea42151003",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "PullRequestIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0241a635-953a-4f79-a25d-7a7e29f6205b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidRevisionIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "afb3e14b-edc5-45d5-95ae-9bbca43d2526",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "RevisionIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b41d5b5a-10ac-4d01-be67-d8b81ed2fbcf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidApprovalStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7b29bfd6-9cff-48ba-8e61-83ca36d4c56a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ApprovalStateRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8df0c395-aa8e-4370-b026-f47b7d0569ac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "PullRequestCannotBeApprovedByAuthorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "32a7abce-18ea-4250-8e8d-af511a52a0d7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "RevisionNotCurrentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "966d5f13-cbaf-4843-8d31-2d8d0e97742d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "PullRequestAlreadyClosedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "55353d2d-c794-479e-9ca6-9406f90433ee",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "MaximumNumberOfApprovalsExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a77fce78-9bf7-44ac-b709-f9aa8ed21f8a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ef26e8ef-1d58-4749-af80-abc009514c5e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9a54ca90-b0ee-4536-92b1-de445913efd0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4fbaf357-c7ac-4581-a24c-dcd8a94fc303",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6409e182-8fcf-4c1e-b6fc-801aac78ec75",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 495,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "be7bb192-3908-42f0-ae29-2e0c0325b283",
      "documentation": "Replaces the contents of the description of a pull request.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.UpdatePullRequestDescription",
      "responses": [
        {
          "uuid": "4489d9f1-468f-423f-8607-b70a28ca21d0",
          "body": "{\n  \"pullRequest\": {\n    \"pullRequestId\": \"\",\n    \"title\": \"\",\n    \"description\": \"\",\n    \"lastActivityDate\": \"{{faker 'date.recent' 365}}\",\n    \"creationDate\": \"{{faker 'date.recent' 365}}\",\n    \"pullRequestStatus\": \"\",\n    \"authorArn\": \"\",\n    \"pullRequestTargets\": [\n      {\n        \"repositoryName\": \"\",\n        \"sourceReference\": \"\",\n        \"destinationReference\": \"\",\n        \"destinationCommit\": \"\",\n        \"sourceCommit\": \"\",\n        \"mergeBase\": \"\",\n        \"mergeMetadata\": {\n          \"isMerged\": {{faker 'random.boolean'}},\n          \"mergedBy\": \"\",\n          \"mergeCommitId\": \"\",\n          \"mergeOption\": \"\"\n        }\n      }\n    ],\n    \"clientRequestToken\": \"\",\n    \"revisionId\": \"\",\n    \"approvalRules\": [\n      {\n        \"approvalRuleId\": \"\",\n        \"approvalRuleName\": \"\",\n        \"approvalRuleContent\": \"\",\n        \"ruleContentSha256\": \"\",\n        \"lastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n        \"creationDate\": \"{{faker 'date.recent' 365}}\",\n        \"lastModifiedUser\": \"\",\n        \"originApprovalRuleTemplate\": {\n          \"approvalRuleTemplateId\": \"\",\n          \"approvalRuleTemplateName\": \"\"\n        }\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c79e2fe3-1eb6-4e2c-8249-5dbd97d1a2ef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "PullRequestDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8676bb0d-bb8e-49c0-b03f-9b6a03ae1f4c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidPullRequestIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c688ecab-2fce-4773-836f-d8b94cfc8b15",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "PullRequestIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ed2a1a12-fad3-4597-9f06-6227b80f2933",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidDescriptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1e41d3db-3e5e-4e8d-88a2-4ec85e51d50f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "PullRequestAlreadyClosedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "58685d5f-f058-4109-a5eb-df56681beb64",
      "documentation": "Updates the status of a pull request. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.UpdatePullRequestStatus",
      "responses": [
        {
          "uuid": "c3b76ff2-8397-49e7-aa13-5aa9ab2a8923",
          "body": "{\n  \"pullRequest\": {\n    \"pullRequestId\": \"\",\n    \"title\": \"\",\n    \"description\": \"\",\n    \"lastActivityDate\": \"{{faker 'date.recent' 365}}\",\n    \"creationDate\": \"{{faker 'date.recent' 365}}\",\n    \"pullRequestStatus\": \"\",\n    \"authorArn\": \"\",\n    \"pullRequestTargets\": [\n      {\n        \"repositoryName\": \"\",\n        \"sourceReference\": \"\",\n        \"destinationReference\": \"\",\n        \"destinationCommit\": \"\",\n        \"sourceCommit\": \"\",\n        \"mergeBase\": \"\",\n        \"mergeMetadata\": {\n          \"isMerged\": {{faker 'random.boolean'}},\n          \"mergedBy\": \"\",\n          \"mergeCommitId\": \"\",\n          \"mergeOption\": \"\"\n        }\n      }\n    ],\n    \"clientRequestToken\": \"\",\n    \"revisionId\": \"\",\n    \"approvalRules\": [\n      {\n        \"approvalRuleId\": \"\",\n        \"approvalRuleName\": \"\",\n        \"approvalRuleContent\": \"\",\n        \"ruleContentSha256\": \"\",\n        \"lastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n        \"creationDate\": \"{{faker 'date.recent' 365}}\",\n        \"lastModifiedUser\": \"\",\n        \"originApprovalRuleTemplate\": {\n          \"approvalRuleTemplateId\": \"\",\n          \"approvalRuleTemplateName\": \"\"\n        }\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6b2e62e7-9ad1-46fd-a393-eb63507094d4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "PullRequestDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "343b4e39-a8f5-4fba-86fa-5c4ecc38a304",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidPullRequestIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e993ad9b-b67c-4877-ba3d-e59c92da7140",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "PullRequestIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0cdd4c9c-6f22-455a-bbc4-16f226442da4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidPullRequestStatusUpdateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "803f0498-08f2-4b1a-a30e-b3fce4f0d1f6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidPullRequestStatusException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3c0e344c-35fc-42b2-8f9b-7b0ac06de1ad",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "PullRequestStatusRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4e7e1711-d36e-403b-812a-7ce05ef9fefe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "15387990-76db-4ebe-8c59-25d5c853ad22",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "db10f50d-dfdd-489a-81fc-667e1dfac10a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c8082141-7c96-4aaf-b097-8d0ed1a0c1b4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8e17e3a6-2849-42b6-a321-38d5e7019227",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "31a5a587-0482-449c-a612-032c5b8bcba7",
      "documentation": "Replaces the title of a pull request.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.UpdatePullRequestTitle",
      "responses": [
        {
          "uuid": "df9521e6-4531-4318-a9fd-23b2f1761044",
          "body": "{\n  \"pullRequest\": {\n    \"pullRequestId\": \"\",\n    \"title\": \"\",\n    \"description\": \"\",\n    \"lastActivityDate\": \"{{faker 'date.recent' 365}}\",\n    \"creationDate\": \"{{faker 'date.recent' 365}}\",\n    \"pullRequestStatus\": \"\",\n    \"authorArn\": \"\",\n    \"pullRequestTargets\": [\n      {\n        \"repositoryName\": \"\",\n        \"sourceReference\": \"\",\n        \"destinationReference\": \"\",\n        \"destinationCommit\": \"\",\n        \"sourceCommit\": \"\",\n        \"mergeBase\": \"\",\n        \"mergeMetadata\": {\n          \"isMerged\": {{faker 'random.boolean'}},\n          \"mergedBy\": \"\",\n          \"mergeCommitId\": \"\",\n          \"mergeOption\": \"\"\n        }\n      }\n    ],\n    \"clientRequestToken\": \"\",\n    \"revisionId\": \"\",\n    \"approvalRules\": [\n      {\n        \"approvalRuleId\": \"\",\n        \"approvalRuleName\": \"\",\n        \"approvalRuleContent\": \"\",\n        \"ruleContentSha256\": \"\",\n        \"lastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n        \"creationDate\": \"{{faker 'date.recent' 365}}\",\n        \"lastModifiedUser\": \"\",\n        \"originApprovalRuleTemplate\": {\n          \"approvalRuleTemplateId\": \"\",\n          \"approvalRuleTemplateName\": \"\"\n        }\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9063a365-28b0-4879-8c62-1b657b9c924b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "PullRequestDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2fc6b875-17df-4a1a-a33a-c3632f05b88f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidPullRequestIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "28f91cf9-3ab6-4be3-a1da-a40f2048f4c2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "PullRequestIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "51e874b9-5e34-403a-9c67-21de11d07ec8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TitleRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "61f0ec0d-888a-4e29-b803-c2eb546b7e05",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidTitleException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6087718f-8e27-47ac-b7b8-4baa0e98980f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "PullRequestAlreadyClosedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c3a4af51-ee90-441b-854f-9f5c57e94d9d",
      "documentation": "<p>Sets or changes the comment or description for a repository.</p> <note> <p>The description field for a repository accepts all HTML characters and all valid Unicode characters. Applications that do not HTML-encode the description and display it in a webpage can expose users to potentially malicious code. Make sure that you HTML-encode the description field in any application that uses this API to display the repository description on a webpage.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.UpdateRepositoryDescription",
      "responses": [
        {
          "uuid": "336af359-de00-4afd-b5f9-c3f7098a54d1",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7d054350-3845-4038-9d26-73e1f66ee091",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f33783d4-cc73-4fd8-ab8a-02c0c23176e9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5edf6a03-ec46-44bc-9223-3eaf7cc8e4aa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c6b2f9e4-da47-4e99-b33f-981ee66f1cda",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidRepositoryDescriptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "35b3a81a-17b6-4522-a208-9a7604e341e0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "df63bd2c-2c12-49e6-896e-59aa9d643a79",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d327d3fb-1bdb-4c03-a888-5489f3294936",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e82ee622-5f7a-43e9-a5dc-af43cebd42a1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "61f00102-02d4-44d8-bbff-92dc7a211ace",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4d097314-94d0-4fd0-8b0a-32cd4934a60d",
      "documentation": "Renames a repository. The repository name must be unique across the calling AWS account. Repository names are limited to 100 alphanumeric, dash, and underscore characters, and cannot include certain characters. The suffix .git is prohibited. For more information about the limits on repository names, see <a href=\"https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html\">Limits</a> in the AWS CodeCommit User Guide.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.UpdateRepositoryName",
      "responses": [
        {
          "uuid": "56aadd6c-3436-4ffc-b694-b5f3cb9c0f54",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "187b1755-14e6-4227-84b5-b9bbc288ad8f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ab733506-b495-4754-8749-ce20fa271d63",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "RepositoryNameExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9412396a-29a1-4921-8b71-9b016ee31d22",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8fd3bbc5-8bee-4a0d-aaba-89e3e5eb81db",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}