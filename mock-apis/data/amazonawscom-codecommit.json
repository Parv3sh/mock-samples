{
  "uuid": "c7ed8a2a-abb9-4e9c-925e-9ea953241d2b",
  "lastMigration": 19,
  "name": "AWS CodeCommit",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "e01e1e05-93d2-44b8-9d77-da75c111975a",
      "documentation": "Creates an association between an approval rule template and a specified repository. Then, the next time a pull request is created in the repository where the destination reference (if specified) matches the destination reference (branch) for the pull request, an approval rule that matches the template conditions is automatically created for that pull request. If no destination references are specified in the template, an approval rule that matches the template contents is created for all pull requests in that repository.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.AssociateApprovalRuleTemplateWithRepository",
      "responses": [
        {
          "uuid": "fd7c750c-fa35-4957-b62c-b253dd3c5621",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b12f2c55-eed8-43cc-9bec-58885dba1060",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ApprovalRuleTemplateNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "04254c5c-80f4-4efe-8068-95bf3bc6cfd2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidApprovalRuleTemplateNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0623f8a7-cb3b-42cb-b8f4-56a330a57b37",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ApprovalRuleTemplateDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "04e27e16-945d-47f7-bf4b-875355f5fbeb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "MaximumRuleTemplatesAssociatedWithRepositoryException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "72e62ca5-9cfc-4a20-97d4-20f50dece025",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fc3e06ce-fd7d-4b7d-ad94-a9a8aae022f0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0c17a46c-8dc6-4759-b3a5-ecf1b8984755",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f6a31ac5-a885-41f7-b5db-6880a1036a8a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7c9897b8-20f6-4fcd-83d5-e154efd3e6b9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dd883590-4da5-4c50-be55-0ba71cbfcf9c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b023b88d-8a2c-4a00-8009-96aa777abac8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2395afc3-7f38-4a2d-bdc6-0e3222593ebc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1ecce097-3445-4c06-8d2f-ef98eb4bec17",
      "documentation": "Creates an association between an approval rule template and one or more specified repositories. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.BatchAssociateApprovalRuleTemplateWithRepositories",
      "responses": [
        {
          "uuid": "19b18189-1591-4d1c-a76a-9f3d293ef748",
          "body": "{\n  \"associatedRepositoryNames\": [\n    \"\"\n  ],\n  \"errors\": [\n    {\n      \"repositoryName\": \"\",\n      \"errorCode\": \"\",\n      \"errorMessage\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eedc996f-d384-46a0-b9b5-d9a0954f44f7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ApprovalRuleTemplateNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a1d60299-6328-49b6-82e1-4263f4e7f768",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidApprovalRuleTemplateNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fe2f4d99-7d24-4a8c-8cc3-afa8601edd9b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ApprovalRuleTemplateDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7c25c5e3-45e5-4995-90bf-7cc189338128",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "RepositoryNamesRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b0b6accb-6125-4dfc-9797-02b8d1a33c07",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "MaximumRepositoryNamesExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5b7d0f6e-27a8-49ad-b9d2-1baf268bcc59",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a1ac1e63-9bc6-439a-8957-d01c70651d65",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "59a43576-102d-4308-a72b-5283100eb176",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8ccc9485-9997-47b2-97d1-4d068d6ee3cd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b011da66-1e24-4155-9126-cac8e57402fd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "080cc016-cc11-48f1-9ca6-9ba7b871547a",
      "documentation": "Returns information about one or more merge conflicts in the attempted merge of two commit specifiers using the squash or three-way merge strategy.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.BatchDescribeMergeConflicts",
      "responses": [
        {
          "uuid": "bb2fde09-13f5-4798-ba67-ac266557191c",
          "body": "{\n  \"conflicts\": [\n    {\n      \"conflictMetadata\": {\n        \"filePath\": \"\",\n        \"fileSizes\": {\n          \"source\": {{faker 'random.number'}},\n          \"destination\": {{faker 'random.number'}},\n          \"base\": {{faker 'random.number'}}\n        },\n        \"fileModes\": {\n          \"source\": \"\",\n          \"destination\": \"\",\n          \"base\": \"\"\n        },\n        \"objectTypes\": {\n          \"source\": \"\",\n          \"destination\": \"\",\n          \"base\": \"\"\n        },\n        \"numberOfConflicts\": {{faker 'random.number'}},\n        \"isBinaryFile\": {\n          \"source\": {{faker 'random.boolean'}},\n          \"destination\": {{faker 'random.boolean'}},\n          \"base\": {{faker 'random.boolean'}}\n        },\n        \"contentConflict\": {{faker 'random.boolean'}},\n        \"fileModeConflict\": {{faker 'random.boolean'}},\n        \"objectTypeConflict\": {{faker 'random.boolean'}},\n        \"mergeOperations\": {\n          \"source\": \"\",\n          \"destination\": \"\"\n        }\n      },\n      \"mergeHunks\": [\n        {\n          \"isConflict\": {{faker 'random.boolean'}},\n          \"source\": {\n            \"startLine\": {{faker 'random.number'}},\n            \"endLine\": {{faker 'random.number'}},\n            \"hunkContent\": \"\"\n          },\n          \"destination\": {\n            \"startLine\": {{faker 'random.number'}},\n            \"endLine\": {{faker 'random.number'}},\n            \"hunkContent\": \"\"\n          },\n          \"base\": {\n            \"startLine\": {{faker 'random.number'}},\n            \"endLine\": {{faker 'random.number'}},\n            \"hunkContent\": \"\"\n          }\n        }\n      ]\n    }\n  ],\n  \"nextToken\": \"\",\n  \"errors\": [\n    {\n      \"filePath\": \"\",\n      \"exceptionName\": \"\",\n      \"message\": \"\"\n    }\n  ],\n  \"destinationCommitId\": \"\",\n  \"sourceCommitId\": \"\",\n  \"baseCommitId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "75faf410-37c8-4236-b427-3ba0c701ba72",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6095538f-b116-411b-8341-9ceab78d51b2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "92dcb077-c2fb-43b0-90a7-4f88cf37163a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8b272a2f-9cee-4145-b968-039b684917e3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "MergeOptionRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b62f7edb-8eef-446e-adf0-3fad02591680",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidMergeOptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0d34889f-7c35-4391-bc99-60c40e2c0b0d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidContinuationTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b0e9e734-5c82-48f8-bcac-b03cda99de05",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "CommitRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4832364a-4bf9-4515-9948-30d299d8c674",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "CommitDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "971a2817-cb25-4586-b5cf-c50c96249fbb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidCommitException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2b944d6d-ced4-43c9-81db-75a97202af50",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "TipsDivergenceExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "26a77ad0-a13c-4dc7-b3e1-a2659e84808d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidMaxConflictFilesException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "25cfacaf-6438-43d8-aa8a-c1a8a299da5a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "InvalidMaxMergeHunksException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fe08764f-bb5d-41bb-86ac-69179568ed1a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "InvalidConflictDetailLevelException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a90c2bc6-7e0b-48c3-b61c-ba3fc1f1e08b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "InvalidConflictResolutionStrategyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e1042ae4-4542-443c-9fd7-85883bb049e5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "MaximumFileContentToLoadExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4b278148-66e6-4e15-abb8-809e3b9e17a7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 495,
          "label": "MaximumItemsToCompareExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b12bce04-43a8-411c-9dbc-60616cc68744",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 496,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4372abf2-0e33-40da-aafc-86bfa007544b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 497,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2c8c4f9e-952d-4bcb-a23c-7fc2991d38a3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 498,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "edd71be1-89f8-4281-96d0-8b32f9027da5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 499,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "22d15fd7-be58-46a7-a183-1b0c6b59aee1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 500,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a91f5ad2-ee98-45e9-93f5-9d9262bbbd0e",
      "documentation": "Removes the association between an approval rule template and one or more specified repositories. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.BatchDisassociateApprovalRuleTemplateFromRepositories",
      "responses": [
        {
          "uuid": "056e348d-838b-49ba-9af6-b070d0a3a06b",
          "body": "{\n  \"disassociatedRepositoryNames\": [\n    \"\"\n  ],\n  \"errors\": [\n    {\n      \"repositoryName\": \"\",\n      \"errorCode\": \"\",\n      \"errorMessage\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "65301089-5c70-474d-9041-7d8d9d21ff61",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ApprovalRuleTemplateNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "346993c4-91ad-4cb9-a3e5-8856dc01afba",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidApprovalRuleTemplateNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a5a21d6d-0f83-4cf2-999e-b899b665b233",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ApprovalRuleTemplateDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9616600d-548c-4493-8c3c-87509df4ce67",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "RepositoryNamesRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c3156fb2-bea1-4352-b935-74206a5f699c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "MaximumRepositoryNamesExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "61c669a9-7a3f-4328-a2c7-eac5d45f8bad",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c5610cd4-93a4-49dc-a40e-a4fc4ecfc883",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c0bfee8d-7616-47a7-9aaf-52722c5a5cb3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d13dc33c-6c64-4cc6-89a8-066bedd35864",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1216cc38-102f-4902-bdd2-4c614d0d911a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d8cab9d1-835f-42ae-a5ee-b11512db39f0",
      "documentation": "Returns information about the contents of one or more commits in a repository.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.BatchGetCommits",
      "responses": [
        {
          "uuid": "72a38731-3fe3-44c7-866e-6aeafe1b6ad0",
          "body": "{\n  \"commits\": [\n    {\n      \"commitId\": \"\",\n      \"treeId\": \"\",\n      \"parents\": [\n        \"\"\n      ],\n      \"message\": \"\",\n      \"author\": {\n        \"name\": \"\",\n        \"email\": \"\",\n        \"date\": \"\"\n      },\n      \"committer\": {\n        \"name\": \"\",\n        \"email\": \"\",\n        \"date\": \"\"\n      },\n      \"additionalData\": \"\"\n    }\n  ],\n  \"errors\": [\n    {\n      \"commitId\": \"\",\n      \"errorCode\": \"\",\n      \"errorMessage\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cb84323a-7667-4d15-8152-8c866fadc634",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "CommitIdsListRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "96fd50a2-458c-4b63-8146-96d903b81edd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "CommitIdsLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "28406e7f-1b5a-41f7-aeec-0eb73dcfad85",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a89aa6f7-4300-4a3a-b6c7-fd26f5004e7a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5cc93e2f-5fe8-46ff-8252-78d76170c834",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4c55cc20-35c0-4e07-a561-c3dd0854ac78",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "128598ee-2ee2-43ad-89c0-dc33837c649a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2a6eed88-b5f6-4664-86fa-9f036ced7363",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c87ff220-a27b-42cb-a1d4-53cfd570deb2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "234d0ae7-6f74-41a7-b216-1498cedc5140",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "21c3bd55-cb96-4660-9f18-e1c9faa65c74",
      "documentation": "<p>Returns information about one or more repositories.</p> <note> <p>The description field for a repository accepts all HTML characters and all valid Unicode characters. Applications that do not HTML-encode the description and display it in a webpage can expose users to potentially malicious code. Make sure that you HTML-encode the description field in any application that uses this API to display the repository description on a webpage.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.BatchGetRepositories",
      "responses": [
        {
          "uuid": "89d0b29c-ba0e-4d6b-8b69-06fee56a5b3c",
          "body": "{\n  \"repositories\": [\n    {\n      \"accountId\": \"\",\n      \"repositoryId\": \"\",\n      \"repositoryName\": \"\",\n      \"repositoryDescription\": \"\",\n      \"defaultBranch\": \"\",\n      \"lastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n      \"creationDate\": \"{{faker 'date.recent' 365}}\",\n      \"cloneUrlHttp\": \"\",\n      \"cloneUrlSsh\": \"\",\n      \"Arn\": \"\"\n    }\n  ],\n  \"repositoriesNotFound\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7b43c457-d342-477b-8344-00908ad178cd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryNamesRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5876ed0a-c41c-4d46-bb9e-82daf2e23725",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "MaximumRepositoryNamesExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d6267a33-55a5-4cf7-866d-7d8ef838e647",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "451ba7b8-cdb0-4040-9ae0-f413aad71fb1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "03d6b42f-ca91-4c54-8100-af5c3793e253",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8d29f9f0-c8a6-4cba-864b-766530b74c9a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "835942e2-5ec0-48da-8759-b024c75b47c9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b49ef057-11d1-408e-9216-b7a8a7522271",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0c6de7b0-1eaa-4486-a5a2-92db02906b38",
      "documentation": "Creates a template for approval rules that can then be associated with one or more repositories in your AWS account. When you associate a template with a repository, AWS CodeCommit creates an approval rule that matches the conditions of the template for all pull requests that meet the conditions of the template. For more information, see <a>AssociateApprovalRuleTemplateWithRepository</a>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.CreateApprovalRuleTemplate",
      "responses": [
        {
          "uuid": "2b717231-1e0c-4e5a-8283-23932d7849cf",
          "body": "{\n  \"approvalRuleTemplate\": {\n    \"approvalRuleTemplateId\": \"\",\n    \"approvalRuleTemplateName\": \"\",\n    \"approvalRuleTemplateDescription\": \"\",\n    \"approvalRuleTemplateContent\": \"\",\n    \"ruleContentSha256\": \"\",\n    \"lastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"creationDate\": \"{{faker 'date.recent' 365}}\",\n    \"lastModifiedUser\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "164135ad-fa9f-4421-969e-b74788268d3c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ApprovalRuleTemplateNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7a04ab68-f45d-4f3a-9be4-3d7855d932a2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidApprovalRuleTemplateNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "34b41630-99ef-4c50-818f-dafe3b323a47",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ApprovalRuleTemplateNameAlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dc193d4f-bd82-4118-8f48-43736999b250",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ApprovalRuleTemplateContentRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "021c2f99-7660-4429-afbf-7af4f4ae3a99",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidApprovalRuleTemplateContentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "51bfb8c5-3a1a-4b86-8c1b-034c21d05444",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidApprovalRuleTemplateDescriptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0727574e-e404-4d39-8590-1d6b019615c6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "NumberOfRuleTemplatesExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bdfc55c0-e024-44fd-8b0b-2d07c0034529",
      "documentation": "<p>Creates a branch in a repository and points the branch to a commit.</p> <note> <p>Calling the create branch operation does not set a repository's default branch. To do this, call the update default branch operation.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.CreateBranch",
      "responses": [
        {
          "uuid": "8058deb7-e614-43e7-9829-ef58c4930654",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9c7705ac-0c9b-4d49-8b9f-0263199f2c24",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9408d2b7-7bda-473c-b9d7-e0ea244aa20e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "72e83a99-9a0f-415e-ade9-88a4e24c3145",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "481b6470-9aee-47d5-b1f0-ef565a7c845b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "BranchNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f53f0f09-d6ae-46de-b6bc-df851d4f9039",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "BranchNameExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "da9e8495-0f89-403a-a3fe-896004f87bc3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidBranchNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c6af21a7-72d7-459b-81e8-4821012fc524",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "CommitIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "89758e40-e10b-44a5-8725-b601f85aa256",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "CommitDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "477ca7c4-ebd0-4f4a-bf6e-c6e291252e35",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidCommitIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "abea39a8-f311-4d07-a969-dc4e339b066b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "705d5223-7b0c-496f-8594-611834d613ea",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a6098e05-41f1-44e5-89d1-5bc3d6a1ae87",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1196d3d9-6b5c-4bb1-ab3d-eac11a6897be",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "197e99d5-b94a-41be-b2fd-e4991a15c24b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0f0f9096-ff00-4f09-9a95-73f3d0160c0b",
      "documentation": "Creates a commit for a repository on the tip of a specified branch.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.CreateCommit",
      "responses": [
        {
          "uuid": "31b0a65c-2ed6-4630-b1e1-7c205aea72df",
          "body": "{\n  \"commitId\": \"\",\n  \"treeId\": \"\",\n  \"filesAdded\": [\n    {\n      \"absolutePath\": \"\",\n      \"blobId\": \"\",\n      \"fileMode\": \"\"\n    }\n  ],\n  \"filesUpdated\": [\n    {\n      \"absolutePath\": \"\",\n      \"blobId\": \"\",\n      \"fileMode\": \"\"\n    }\n  ],\n  \"filesDeleted\": [\n    {\n      \"absolutePath\": \"\",\n      \"blobId\": \"\",\n      \"fileMode\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "add61a7f-e868-4fed-91ce-9070d76f68e8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9a9be147-9d00-4764-b9d9-fcd54b54d352",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "956b6aa6-58ab-4a44-b01a-5a0d13ff19b8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "60b8cbe5-4665-4cb1-90ed-b8edad38e921",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ParentCommitIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c8fb3261-6352-4cac-a1cd-d82da5aa4427",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidParentCommitIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "67974584-a5de-4688-9ce5-1c6c14304ead",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ParentCommitDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1c190457-a1d1-4fb7-818a-8f5559770733",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ParentCommitIdOutdatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3f54a4de-6fcd-48a7-a415-0ad41b918a36",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "BranchNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "002346ee-cfa9-438a-8940-d7dc0941bc40",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidBranchNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "db33f97d-eccc-4903-ac48-e7233b029bad",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "BranchDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2f22b704-90bf-43bc-bf1b-26566efa2439",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "BranchNameIsTagNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c4d401ab-2357-4a90-84d6-fe920a99a68f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "FileEntryRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e75f7e6e-3b14-4cb6-8f26-6506447ef6f2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "MaximumFileEntriesExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "55c747e2-9a44-482b-bac2-2251c9db4468",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "PutFileEntryConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bcb9224f-9457-4096-a143-78b9c6923600",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "SourceFileOrContentRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9c634c52-d9cc-4331-9f9c-7e9f944c586d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 495,
          "label": "FileContentAndSourceFileSpecifiedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "07f8bba5-2dbf-4886-bc14-19ddc5f6df8b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 496,
          "label": "PathRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1e257088-202e-42a3-a698-3224238ef22a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 497,
          "label": "InvalidPathException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b0623d66-ab82-47d4-99f3-7fc00da8ced6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 498,
          "label": "SamePathRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d49f5cbe-81c6-47a6-a2c6-49531ba21cba",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 499,
          "label": "FileDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c29ece5e-7814-4def-afdd-9690d404c3ad",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 500,
          "label": "FileContentSizeLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dbf116d9-b6df-4ec0-ba38-ab1ad1e92a10",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 501,
          "label": "FolderContentSizeLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "61e0883c-4021-4242-a057-1ca3d455b1dd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 502,
          "label": "InvalidDeletionParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cbd2a61a-be0a-4eea-a55e-d62e3c55422b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 503,
          "label": "RestrictedSourceFileException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "63f2e51f-98e2-4e2d-b016-7611c77e09c0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 504,
          "label": "FileModeRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dbb70261-3704-4f96-bbf5-6c7e26487a16",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 505,
          "label": "InvalidFileModeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "63c7c921-4e1e-4672-a8cc-a323b05b4682",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 506,
          "label": "NameLengthExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "10384795-21a1-47fb-bf51-2013e4b715eb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 507,
          "label": "InvalidEmailException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2aaf0e61-17cb-4b4d-a24d-b6c6266e46b2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 508,
          "label": "CommitMessageLengthExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f9eada72-c6c8-4b4a-bb8c-a094926eec84",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 509,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a1c7bb58-e627-4779-8da5-61debe5bde8b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 510,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "364eb2c2-a8a0-4b7f-811b-42bf2d08cf29",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 511,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ed0ce2e1-45f6-401d-aac3-78570ad65e26",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 512,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c45decaf-03fb-4c81-a393-ea813f8767b4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 513,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7c0c541b-d7a1-41e7-9150-d2a2589351f0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 514,
          "label": "NoChangeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c6b26507-ad4a-4bb8-9e5f-de2c5d8e8a36",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 515,
          "label": "FileNameConflictsWithDirectoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "246b3925-3b52-427b-bae2-516eef51658c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 516,
          "label": "DirectoryNameConflictsWithFileNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6451018e-f374-4434-91f7-32979b9363f1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 517,
          "label": "FilePathConflictsWithSubmodulePathException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7feff825-301a-4ec6-a90e-ecc27222c423",
      "documentation": "Creates a pull request in the specified repository.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.CreatePullRequest",
      "responses": [
        {
          "uuid": "2ae5936f-33e6-453c-8280-d3333aab9a41",
          "body": "{\n  \"pullRequest\": {\n    \"pullRequestId\": \"\",\n    \"title\": \"\",\n    \"description\": \"\",\n    \"lastActivityDate\": \"{{faker 'date.recent' 365}}\",\n    \"creationDate\": \"{{faker 'date.recent' 365}}\",\n    \"pullRequestStatus\": \"\",\n    \"authorArn\": \"\",\n    \"pullRequestTargets\": [\n      {\n        \"repositoryName\": \"\",\n        \"sourceReference\": \"\",\n        \"destinationReference\": \"\",\n        \"destinationCommit\": \"\",\n        \"sourceCommit\": \"\",\n        \"mergeBase\": \"\",\n        \"mergeMetadata\": {\n          \"isMerged\": {{faker 'random.boolean'}},\n          \"mergedBy\": \"\",\n          \"mergeCommitId\": \"\",\n          \"mergeOption\": \"\"\n        }\n      }\n    ],\n    \"clientRequestToken\": \"\",\n    \"revisionId\": \"\",\n    \"approvalRules\": [\n      {\n        \"approvalRuleId\": \"\",\n        \"approvalRuleName\": \"\",\n        \"approvalRuleContent\": \"\",\n        \"ruleContentSha256\": \"\",\n        \"lastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n        \"creationDate\": \"{{faker 'date.recent' 365}}\",\n        \"lastModifiedUser\": \"\",\n        \"originApprovalRuleTemplate\": {\n          \"approvalRuleTemplateId\": \"\",\n          \"approvalRuleTemplateName\": \"\"\n        }\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0eacebd6-58a0-45a3-b96d-d81423c9ceeb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9d4aa4f7-d5fe-4337-b6a7-3e23d0670120",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d5721990-9591-4f97-9469-402e50b59f83",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4bcc6799-0905-4a8c-bc50-a912f7ec55f5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "85d2609d-7c4c-4465-b26a-fb22371d4b74",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fef8666c-8efd-4b59-b4da-bd1db8dc1049",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8c45f7aa-a672-4734-99f2-5b7070853682",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6485ded5-17c8-4487-bbee-26afae6aa765",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8968928c-e24a-444c-b79d-b925d02159a2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "ClientRequestTokenRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eae9d631-81a3-439d-b7a5-b96c94603279",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidClientRequestTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f3005af1-15f4-4f37-be16-acf40cf3cf95",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "IdempotencyParameterMismatchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d0674d61-dffb-42e2-93ca-48cf6196910a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "ReferenceNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3daee60f-3087-4c03-b278-2773511b00c7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "InvalidReferenceNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1cafc68a-6ff4-4885-b916-a06a2121fa16",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "ReferenceDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2bfd1fcf-ea11-4e1e-b58c-85d2913121f5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "ReferenceTypeNotSupportedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3046b49f-56a0-469a-9de2-cf8d36a8c40f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 495,
          "label": "TitleRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "491b74f6-dc7e-4476-b30d-c33146a3b770",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 496,
          "label": "InvalidTitleException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0e51c43b-1886-4be4-afb6-216755de748a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 497,
          "label": "InvalidDescriptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "47db7647-870e-4121-9347-006d891ac2a7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 498,
          "label": "TargetsRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ea1af772-cc51-4911-9a5c-b9a2ffccb2e9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 499,
          "label": "InvalidTargetsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f97c9587-8638-4b7b-86b2-f86df6465300",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 500,
          "label": "TargetRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eb2d7fd3-7b39-4f8d-82bc-9591b8e8aabb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 501,
          "label": "InvalidTargetException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8f6e939b-e1ec-443e-b09a-dedf6eee0c01",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 502,
          "label": "MultipleRepositoriesInPullRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "13ccdd1d-864b-4e81-af4f-de54acee3a2e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 503,
          "label": "MaximumOpenPullRequestsExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7dd2def3-e9ab-42eb-bd74-59601199c1a0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 504,
          "label": "SourceAndDestinationAreSameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b6a42c8e-8081-4576-be5e-87bc53532fed",
      "documentation": "Creates an approval rule for a pull request.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.CreatePullRequestApprovalRule",
      "responses": [
        {
          "uuid": "e9c8d7ef-e712-42ff-b7d1-0c69176a48ef",
          "body": "{\n  \"approvalRule\": {\n    \"approvalRuleId\": \"\",\n    \"approvalRuleName\": \"\",\n    \"approvalRuleContent\": \"\",\n    \"ruleContentSha256\": \"\",\n    \"lastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"creationDate\": \"{{faker 'date.recent' 365}}\",\n    \"lastModifiedUser\": \"\",\n    \"originApprovalRuleTemplate\": {\n      \"approvalRuleTemplateId\": \"\",\n      \"approvalRuleTemplateName\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aaffcf55-80e9-40cd-adeb-2a4837a823b1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ApprovalRuleNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5ae9f55f-ec12-48fb-b5ed-cb235e63f4b4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidApprovalRuleNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f17f8d37-dee1-4162-9273-a399bab2abec",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ApprovalRuleNameAlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "88f89078-f987-4592-b767-11cb5d92c73c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ApprovalRuleContentRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "564eacc9-8a60-4d02-b1dd-1e890f484605",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidApprovalRuleContentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "810c0a09-206d-446c-9e7a-f03eb41eea54",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "NumberOfRulesExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "806e8bfe-26ba-44f8-9dae-34cd9cea514d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "PullRequestDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "57227303-7741-4374-9f23-14879d11c410",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidPullRequestIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "db8d3908-1c93-454c-9605-39548a2ac48c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "PullRequestIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ad353a57-c642-4ef9-99ca-110c47329398",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "PullRequestAlreadyClosedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e7a67ff7-de51-49f4-900e-8b4fc096d58f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6ace9284-be18-419c-9c3c-8933f66088ef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b9387004-cff0-4dce-bb8e-66bbad2bb391",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "27c9a17b-57d1-4ad7-929e-11b9a63c4f32",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e2e66451-4e8c-4da0-a620-170aa3cb6a71",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "74ed8d90-35e4-446f-b938-d3650f227100",
      "documentation": "Creates a new, empty repository.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.CreateRepository",
      "responses": [
        {
          "uuid": "97e77f93-9338-42f4-81e5-99cc78a8df3d",
          "body": "{\n  \"repositoryMetadata\": {\n    \"accountId\": \"\",\n    \"repositoryId\": \"\",\n    \"repositoryName\": \"\",\n    \"repositoryDescription\": \"\",\n    \"defaultBranch\": \"\",\n    \"lastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"creationDate\": \"{{faker 'date.recent' 365}}\",\n    \"cloneUrlHttp\": \"\",\n    \"cloneUrlSsh\": \"\",\n    \"Arn\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "69f1f1fe-3c2c-44ca-907f-d05747b84d63",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryNameExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fb9be63c-d905-400d-ac51-0c65b95362bd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c058a67b-1b23-48dd-be49-0c778f083530",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "edcd91a8-b24a-45e2-bc65-47fe9f654a1e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidRepositoryDescriptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c9fcc0a5-5fc4-4bcb-83a6-f5957180f78b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "RepositoryLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e20ecd52-001d-4b9f-8d65-4c48b899ad63",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4d2a3ce2-ad64-4a77-ae51-c05b3c94cb51",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9b3d6f56-ac04-4da0-bb44-c507ba8b36b4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "829ad243-4219-432c-9666-920b6e1a3b82",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ad3c57c1-6d93-4d26-8d9c-1f0c922ee769",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8061005a-cc40-42a5-b433-b8581c2070b9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidTagsMapException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9d279dbd-7aca-4f49-ae46-55a398a23278",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "TooManyTagsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f15f6640-d52f-463a-90d3-4f2fd571d47e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "InvalidSystemTagUsageException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "539995c3-d241-4efc-a675-bc76bc5f886d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "TagPolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9fd16974-2104-432f-ad23-b7367546ed27",
      "documentation": "<p>Creates an unreferenced commit that represents the result of merging two branches using a specified merge strategy. This can help you determine the outcome of a potential merge. This API cannot be used with the fast-forward merge strategy because that strategy does not create a merge commit.</p> <note> <p>This unreferenced merge commit can only be accessed using the GetCommit API or through git commands such as git fetch. To retrieve this commit, you must specify its commit ID or otherwise reference it.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.CreateUnreferencedMergeCommit",
      "responses": [
        {
          "uuid": "50f89e33-1f04-41cf-a6a5-6f8ce697e22b",
          "body": "{\n  \"commitId\": \"\",\n  \"treeId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dc0ef695-ac56-41c1-8007-81cf8e056178",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "21f13ade-4686-4667-addb-f49d32645e9b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e393149b-1531-43d9-9d82-1147ac4799f7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "35bb645b-e593-4562-bc62-145dbcc4ae33",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TipsDivergenceExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9c34b513-f325-4a60-894e-17c6d965f7f6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "CommitRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c9586b91-52c1-49da-a3b6-4b6119016527",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidCommitException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f7aeff5d-3250-4e45-9c89-0bb038078f46",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "CommitDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4b8746ad-97c4-45c7-af6f-5cf5a89d39f4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "MergeOptionRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "606f1b42-0b61-460a-9048-85ddb0029295",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidMergeOptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dfd39730-35cd-4d70-9b7e-3de4df0fd49b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidConflictDetailLevelException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "938b57b5-984d-42ff-96d3-a60d0bb2a8b9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidConflictResolutionStrategyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "42fdfeb6-e11a-4efe-9caf-d0bcc8ca6211",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "InvalidConflictResolutionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cc0374dd-1a0b-4af0-82f6-408d6dfa79ab",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "ManualMergeRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9034690e-84da-45e3-8845-22a60c79c7d7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "MaximumConflictResolutionEntriesExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f13929ed-86ed-442d-8aad-8f93aaa0b8f3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "MultipleConflictResolutionEntriesException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d3a5f169-7f26-4524-8963-d4e227c801d4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 495,
          "label": "ReplacementTypeRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "02c4123d-f0ff-4515-ad0d-3c74a70bdcfe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 496,
          "label": "InvalidReplacementTypeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "09e27a76-8df3-4696-a42f-06e90ce7dbdc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 497,
          "label": "ReplacementContentRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "18ba12b7-0c00-4e77-8859-79c12bb79031",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 498,
          "label": "InvalidReplacementContentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "21a5ada7-b447-4533-b133-a0eca8e82e21",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 499,
          "label": "PathRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "667b3a56-5df3-4789-8465-f2b6b4d6e75e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 500,
          "label": "InvalidPathException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "af425a92-9c17-426d-9ffd-7ebcf7f6cd8a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 501,
          "label": "FileContentSizeLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6bb2d054-3da1-4d3a-857e-20207453b0bf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 502,
          "label": "FolderContentSizeLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "51c8cd9b-c366-4389-9875-9f544bf71af1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 503,
          "label": "MaximumFileContentToLoadExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eb66e455-4825-4c34-97b8-5dd4ae85266e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 504,
          "label": "MaximumItemsToCompareExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aa1918f4-3517-4bdd-ae81-48568d5e302c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 505,
          "label": "ConcurrentReferenceUpdateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "70785f21-b76b-4b09-8f3a-9311bca18677",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 506,
          "label": "FileModeRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5d27126a-0aa8-4325-bb6e-8898d3371c7c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 507,
          "label": "InvalidFileModeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "49c9f24d-d667-48b6-97d2-cdfdbe51ae81",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 508,
          "label": "NameLengthExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "27168859-117f-4757-9734-f756e07b089b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 509,
          "label": "InvalidEmailException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d88914d1-3035-4e94-a5a0-01083b1e4436",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 510,
          "label": "CommitMessageLengthExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6ae0e24a-3862-4d00-ba41-79c675ddf618",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 511,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fccac3db-5384-414a-8ac5-5646c5fd0b6e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 512,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7e89c52d-d0ee-4060-b987-a187386faeb4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 513,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d9484099-15db-44a0-8109-dc4a5479f221",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 514,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "512a20ba-19e0-402d-a9aa-74e25e3e3523",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 515,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0f438659-066b-47f5-9e75-0617a4a943dc",
      "documentation": "Deletes a specified approval rule template. Deleting a template does not remove approval rules on pull requests already created with the template.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.DeleteApprovalRuleTemplate",
      "responses": [
        {
          "uuid": "00d579a6-d55a-48e5-bde0-1eefa4874582",
          "body": "{\n  \"approvalRuleTemplateId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0a894db7-015d-42cf-bcf4-300d72024d8f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ApprovalRuleTemplateNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1f1c0f79-80a0-4334-8671-7b501c15f430",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidApprovalRuleTemplateNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "97390bdb-8eef-453c-8dcc-2a9e1e97b7e4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ApprovalRuleTemplateInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ba71861d-47e6-49b7-a428-82fb00a09c51",
      "documentation": "Deletes a branch from a repository, unless that branch is the default branch for the repository. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.DeleteBranch",
      "responses": [
        {
          "uuid": "e896da01-785c-4816-98af-88c92d2b792f",
          "body": "{\n  \"deletedBranch\": {\n    \"branchName\": \"\",\n    \"commitId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5185697c-2eaa-45c3-8036-d6181e992cab",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ad34754f-9c95-44d0-96a3-c7ff0b1e501e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c8a94020-7b98-4461-84bf-80c81ab84732",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7491edf9-dd4a-4e31-b0a3-93c1c77a832c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "BranchNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "80cecf8c-77c1-4b7a-9693-65003b9cea46",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidBranchNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aad64e80-ca77-4046-82c6-7115f2936ebf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "DefaultBranchCannotBeDeletedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fb8dc83b-a20f-4e96-81e4-8f4bb33b44a4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "582d7933-7e68-49b5-9f14-69be00c79362",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "909f6f9f-4360-49d6-a631-32a7ad3b7efd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "06d62132-357d-4304-861c-3ad43f740985",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dbd3fbcf-cced-4f52-a744-eff34724383d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "003a82fe-bf37-4c48-aa32-f7ed304b026e",
      "documentation": "Deletes the content of a comment made on a change, file, or commit in a repository.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.DeleteCommentContent",
      "responses": [
        {
          "uuid": "9efbbecf-9f6f-498c-a18f-91f7d6822e0f",
          "body": "{\n  \"comment\": {\n    \"commentId\": \"\",\n    \"content\": \"\",\n    \"inReplyTo\": \"\",\n    \"creationDate\": \"{{faker 'date.recent' 365}}\",\n    \"lastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"authorArn\": \"\",\n    \"deleted\": {{faker 'random.boolean'}},\n    \"clientRequestToken\": \"\",\n    \"callerReactions\": [\n      \"\"\n    ],\n    \"reactionCounts\": {}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e98a7c10-f0fc-43e2-8b41-b3aac69fe616",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "CommentDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f58a8a12-dd89-4061-92a7-7981e323c671",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "CommentIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2f352905-5eb3-4466-8b84-b11fa746dbfd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidCommentIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6d9ce95a-e22c-4b73-8541-31766f0e66e4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "CommentDeletedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e4b3dce2-03c9-4acd-9482-697f674509d7",
      "documentation": "Deletes a specified file from a specified branch. A commit is created on the branch that contains the revision. The file still exists in the commits earlier to the commit that contains the deletion.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.DeleteFile",
      "responses": [
        {
          "uuid": "12d1f78d-f24b-4adb-9c50-e480e992e000",
          "body": "{\n  \"commitId\": \"\",\n  \"blobId\": \"\",\n  \"treeId\": \"\",\n  \"filePath\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c3d23b36-9db7-4c51-9ebe-871c0a448f75",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b6cbc241-27cb-4d05-ae37-05131e17e212",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "91eb62a3-a0aa-4cc8-bb1e-22310feb8f4c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "19323842-4c3f-4698-bb3c-2b2ae57a4e45",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ParentCommitIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "57bb986d-b4bb-42ec-81b8-8ea540c7c5a9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidParentCommitIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "15a80f60-05cc-4f6b-85b2-950dd56ed526",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ParentCommitDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3f6558b3-552a-4046-81b5-9f88430dc973",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ParentCommitIdOutdatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1bca5a5c-24b6-4037-90ea-ab9d2abc98ff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "PathRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "652f5bfe-265b-44ce-ac40-3836d1e0e9f1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidPathException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "387a5b04-fdb7-4a42-a02c-4b7b8bd3a4d6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "FileDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "edce07e8-4a34-4f80-8f56-120decff0068",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "BranchNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0b648575-0970-4522-9629-ed72e9eaa8ec",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "InvalidBranchNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f7ba14ea-6fe5-4bda-a1fd-334ed208a040",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "BranchDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "96b3b399-b2ee-4c84-9997-cc884a69252c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "BranchNameIsTagNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7a18cd2f-8d62-4691-b029-b45808e6ab4f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "NameLengthExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7d5d1420-a011-46a0-a000-8ad1abf64aba",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 495,
          "label": "InvalidEmailException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "05eedff8-288e-4a81-a8f8-b711eba66cc4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 496,
          "label": "CommitMessageLengthExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "390c1495-13b7-4372-b1cc-6184f469c805",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 497,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ed2fb31e-cb70-4754-aa06-5ac7defb3a85",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 498,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0cb3e3e5-efc4-49e4-b281-7b27e76eecd4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 499,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3f1925a4-71f7-40f2-9290-f96c552e8d09",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 500,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3526590e-497e-4158-84ac-c8c85eb5a0af",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 501,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7bdf5b2d-bbed-4a9d-9d46-47ae612ddf27",
      "documentation": "Deletes an approval rule from a specified pull request. Approval rules can be deleted from a pull request only if the pull request is open, and if the approval rule was created specifically for a pull request and not generated from an approval rule template associated with the repository where the pull request was created. You cannot delete an approval rule from a merged or closed pull request.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.DeletePullRequestApprovalRule",
      "responses": [
        {
          "uuid": "c2898f23-cbed-4769-b833-e1416e740591",
          "body": "{\n  \"approvalRuleId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0a246a97-e802-4642-a853-0b487d20ebd8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "PullRequestDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0ddd2802-0a97-4d05-b83a-2efc5df24d94",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidPullRequestIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d42435b2-bdd9-4164-b1bd-c20beefdbf1c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "PullRequestIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b477dced-46cc-41bb-bc1d-8ba5a499296d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "PullRequestAlreadyClosedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d6fb06a3-4656-45b9-8fce-74e86e694ccf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ApprovalRuleNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e967bddf-348c-4d93-b3a5-fc93222edbae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidApprovalRuleNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "07354c5b-9130-49ae-b0bd-7fb85d927666",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "CannotDeleteApprovalRuleFromTemplateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7e37cb77-9abe-4b66-9559-6da34cb252bd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b5861bde-a935-402d-b7be-77ac3518a008",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1cb861e4-8f54-4161-86ee-454740c781f6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bfe0a36e-3e7b-40b7-8791-94d27e91021e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b5408029-6d32-4ae2-8281-1bf1c8a5e8b4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7ed01024-87fe-4efc-b195-8f37c9a8a9e3",
      "documentation": "<p>Deletes a repository. If a specified repository was already deleted, a null repository ID is returned.</p> <important> <p>Deleting a repository also deletes all associated objects and metadata. After a repository is deleted, all future push calls to the deleted repository fail.</p> </important>",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.DeleteRepository",
      "responses": [
        {
          "uuid": "f5360374-c60d-4018-a7f7-19b8f9ccefae",
          "body": "{\n  \"repositoryId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d07e92e2-e8ce-4927-ab25-0f264abdc871",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "51ea239d-01bb-473d-9b19-62870067e356",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "90c0a386-8c8a-4799-9dee-f686a41edfc3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5892db46-4c37-406a-b591-06c5e9d0b8b7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4a00cd54-1595-465e-ab46-cd328cf63154",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1de7958f-56d4-426e-b4e5-8040de43bb1b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "409d94e3-c93f-4bc7-85b5-2b74de512b16",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bf3f1649-4a3c-40de-a608-d6b5ef7aff12",
      "documentation": "Returns information about one or more merge conflicts in the attempted merge of two commit specifiers using the squash or three-way merge strategy. If the merge option for the attempted merge is specified as FAST_FORWARD_MERGE, an exception is thrown.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.DescribeMergeConflicts",
      "responses": [
        {
          "uuid": "1ecb3570-4c55-4fd2-9f71-6db5096236c6",
          "body": "{\n  \"conflictMetadata\": {\n    \"filePath\": \"\",\n    \"fileSizes\": {\n      \"source\": {{faker 'random.number'}},\n      \"destination\": {{faker 'random.number'}},\n      \"base\": {{faker 'random.number'}}\n    },\n    \"fileModes\": {\n      \"source\": \"\",\n      \"destination\": \"\",\n      \"base\": \"\"\n    },\n    \"objectTypes\": {\n      \"source\": \"\",\n      \"destination\": \"\",\n      \"base\": \"\"\n    },\n    \"numberOfConflicts\": {{faker 'random.number'}},\n    \"isBinaryFile\": {\n      \"source\": {{faker 'random.boolean'}},\n      \"destination\": {{faker 'random.boolean'}},\n      \"base\": {{faker 'random.boolean'}}\n    },\n    \"contentConflict\": {{faker 'random.boolean'}},\n    \"fileModeConflict\": {{faker 'random.boolean'}},\n    \"objectTypeConflict\": {{faker 'random.boolean'}},\n    \"mergeOperations\": {\n      \"source\": \"\",\n      \"destination\": \"\"\n    }\n  },\n  \"mergeHunks\": [\n    {\n      \"isConflict\": {{faker 'random.boolean'}},\n      \"source\": {\n        \"startLine\": {{faker 'random.number'}},\n        \"endLine\": {{faker 'random.number'}},\n        \"hunkContent\": \"\"\n      },\n      \"destination\": {\n        \"startLine\": {{faker 'random.number'}},\n        \"endLine\": {{faker 'random.number'}},\n        \"hunkContent\": \"\"\n      },\n      \"base\": {\n        \"startLine\": {{faker 'random.number'}},\n        \"endLine\": {{faker 'random.number'}},\n        \"hunkContent\": \"\"\n      }\n    }\n  ],\n  \"nextToken\": \"\",\n  \"destinationCommitId\": \"\",\n  \"sourceCommitId\": \"\",\n  \"baseCommitId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2eb5a129-edd0-46b0-a856-937b1de50296",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7388d961-495b-4951-999f-0dd88d8ab151",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9dbd5f96-7794-4b9b-8861-8d8d61c5096a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ce950267-68ef-407c-8175-7824656636bb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "MergeOptionRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a3d7ab62-fe51-4377-9771-845e7cafbc9c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidMergeOptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "66e1da4d-25a5-4a29-bf96-e3d2f9b1afcc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidContinuationTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ea0fc7b6-dd5f-439b-bdbf-547b6bb0245d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "CommitRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5e1e29a9-e383-48a0-84ed-35c1fb6812c1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "CommitDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "78f16b48-2788-40fb-a4cd-4edd432d4452",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidCommitException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "84bbac41-644e-446b-845a-04f495239fce",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "TipsDivergenceExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c9a9e413-99ef-460a-aa03-ed130d64431f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "PathRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d484c25f-e5ea-4253-aa1b-f38d6aa338e8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "InvalidPathException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "57dd5a93-9c3f-4c10-bb8b-4a0eb81ce1fa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "FileDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "729a4b79-d0d0-4608-9648-7636e964805a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "InvalidMaxMergeHunksException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "83741765-17e5-4666-a6e4-13ea789140bf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "InvalidConflictDetailLevelException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "135b22d0-7f76-4dca-867f-031ecf069f49",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 495,
          "label": "InvalidConflictResolutionStrategyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6dafa384-8129-4f66-8984-2cfc8a060a49",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 496,
          "label": "MaximumFileContentToLoadExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5ad0f663-9a5d-4a39-a962-25d8436f8b88",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 497,
          "label": "MaximumItemsToCompareExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e9cebba7-2003-4a97-8303-30928179a0d9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 498,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "68ef6f6b-4763-4db5-a066-40195353a1bc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 499,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cfb137ba-76ff-43a2-b1c7-451a8cc73e48",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 500,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aca0e047-e7d5-49e7-8447-68b849f9382d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 501,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "58544587-34ff-430e-b342-2a5eb2f26cc6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 502,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d8e65a78-9e90-4053-971d-64eb3f1a7009",
      "documentation": "Returns information about one or more pull request events.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.DescribePullRequestEvents",
      "responses": [
        {
          "uuid": "9c041386-29b7-446d-a772-73adb6956d5d",
          "body": "{\n  \"pullRequestEvents\": [\n    {\n      \"pullRequestId\": \"\",\n      \"eventDate\": \"{{faker 'date.recent' 365}}\",\n      \"pullRequestEventType\": \"\",\n      \"actorArn\": \"\",\n      \"pullRequestCreatedEventMetadata\": {\n        \"repositoryName\": \"\",\n        \"sourceCommitId\": \"\",\n        \"destinationCommitId\": \"\",\n        \"mergeBase\": \"\"\n      },\n      \"pullRequestStatusChangedEventMetadata\": {\n        \"pullRequestStatus\": \"\"\n      },\n      \"pullRequestSourceReferenceUpdatedEventMetadata\": {\n        \"repositoryName\": \"\",\n        \"beforeCommitId\": \"\",\n        \"afterCommitId\": \"\",\n        \"mergeBase\": \"\"\n      },\n      \"pullRequestMergedStateChangedEventMetadata\": {\n        \"repositoryName\": \"\",\n        \"destinationReference\": \"\",\n        \"mergeMetadata\": {\n          \"isMerged\": {{faker 'random.boolean'}},\n          \"mergedBy\": \"\",\n          \"mergeCommitId\": \"\",\n          \"mergeOption\": \"\"\n        }\n      },\n      \"approvalRuleEventMetadata\": {\n        \"approvalRuleName\": \"\",\n        \"approvalRuleId\": \"\",\n        \"approvalRuleContent\": \"\"\n      },\n      \"approvalStateChangedEventMetadata\": {\n        \"revisionId\": \"\",\n        \"approvalStatus\": \"\"\n      },\n      \"approvalRuleOverriddenEventMetadata\": {\n        \"revisionId\": \"\",\n        \"overrideStatus\": \"\"\n      }\n    }\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6499b9ad-9cf8-4a17-89cf-6ccb0855af52",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "PullRequestDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dcf073f2-3e31-4960-802f-bd3c51931372",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidPullRequestIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f73f34fc-6e00-4c0e-8420-a200f39947ca",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "PullRequestIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c8b285c8-0988-422c-91ab-39c18faae491",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidPullRequestEventTypeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8831a974-e08a-44ec-bbe8-df39953d0365",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidActorArnException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6f31dd1a-17af-49d7-9603-b66e76916b6f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ActorDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c2611f80-4f65-4d14-b8d1-344d21be74b9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidMaxResultsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7f2a704f-408a-4979-9e1e-2cb556ed1293",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidContinuationTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1d3c837a-b5e1-49ee-9cef-498574f95897",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b27400f8-ab8f-4184-8466-a79f39821842",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e1f1237c-57a8-4a90-a85b-fa0f7b1f50ac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0c50938c-c580-44b2-953b-95b78e668618",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8fc3f665-3be0-43c9-8848-7d184b8e04b9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dd48f8ab-c23b-4383-b801-624494be6025",
      "documentation": "Removes the association between a template and a repository so that approval rules based on the template are not automatically created when pull requests are created in the specified repository. This does not delete any approval rules previously created for pull requests through the template association.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.DisassociateApprovalRuleTemplateFromRepository",
      "responses": [
        {
          "uuid": "e9e8c088-7f66-438f-90db-77ba9b494738",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3f5ec35b-bab5-4caa-970d-e739ed7285a2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ApprovalRuleTemplateNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a250de37-cd9b-43fc-ac05-6d3d048b662f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidApprovalRuleTemplateNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "36246d1f-da7a-4014-9533-7ba9c044983c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ApprovalRuleTemplateDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "339bee17-a872-4d7c-9d97-0196c6c061df",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ef705419-3b1c-4739-875f-1e824c66ad30",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "355c5ae4-2cf6-463a-95a6-fa839f1b027e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "878aa3ba-1b8d-4f43-bd55-8145b0f5620c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b9fa89ce-d7e4-43e6-9cc4-c2cd7c7dba95",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9a778a5d-a488-4a7c-9ff4-507bc133f88f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3acfa660-83a2-43f2-9135-6ddbcebed868",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "255d6f2d-0ea4-455d-af69-41913a996724",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "22223044-6782-42bf-9fd1-9a5d89fab840",
      "documentation": "Evaluates whether a pull request has met all the conditions specified in its associated approval rules.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.EvaluatePullRequestApprovalRules",
      "responses": [
        {
          "uuid": "1de91598-a9e4-47db-8cd6-15ef8461c24e",
          "body": "{\n  \"evaluation\": {\n    \"approved\": {{faker 'random.boolean'}},\n    \"overridden\": {{faker 'random.boolean'}},\n    \"approvalRulesSatisfied\": [\n      \"\"\n    ],\n    \"approvalRulesNotSatisfied\": [\n      \"\"\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "96766d5a-d7f5-4b7f-aead-9e63fa4523c2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "PullRequestDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "59379249-13d4-48bc-9a9c-ccde237e2fd8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidPullRequestIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "32f9bfd3-a6b0-4fda-9265-e986196ca94d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "PullRequestIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e5de34f3-33b9-4dbd-84ae-8c67d21e62ba",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidRevisionIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3099fe12-97ea-4ef5-86ad-a6155d58b2eb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "RevisionIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "92ad301d-e704-4b7f-9fa1-63e7785b2535",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "RevisionNotCurrentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "46433406-6994-416f-8d1b-4807c9d0721f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "522dd95a-31b6-4a45-9162-098534811103",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cb929f2a-1e04-4cf6-aeb2-b2f128510409",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ffc50a5d-84e3-4d45-9114-3d169f3af94b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3f6f99fa-faf0-4b36-b1cc-12abf0e7ecb3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1fcebd59-c4c7-4589-b3ea-ca241db81c3d",
      "documentation": "Returns information about a specified approval rule template.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.GetApprovalRuleTemplate",
      "responses": [
        {
          "uuid": "8d211c11-e4cb-4993-ab0b-ef2c574bc46e",
          "body": "{\n  \"approvalRuleTemplate\": {\n    \"approvalRuleTemplateId\": \"\",\n    \"approvalRuleTemplateName\": \"\",\n    \"approvalRuleTemplateDescription\": \"\",\n    \"approvalRuleTemplateContent\": \"\",\n    \"ruleContentSha256\": \"\",\n    \"lastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"creationDate\": \"{{faker 'date.recent' 365}}\",\n    \"lastModifiedUser\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "de55bbdf-d20e-4417-80c9-2c17f2445856",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ApprovalRuleTemplateNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d9c1f8b0-b039-4309-b736-0a71e60c621e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidApprovalRuleTemplateNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "21d550db-5cb2-42b8-8256-87a1185084ae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ApprovalRuleTemplateDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b53d528e-22e1-4f03-9a21-6c8eaf377c38",
      "documentation": "Returns the base-64 encoded content of an individual blob in a repository.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.GetBlob",
      "responses": [
        {
          "uuid": "d42c5973-0568-4be6-9bda-a3d741378378",
          "body": "{\n  \"content\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b83452b0-fd0d-468e-b84a-5884fbf9b20e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b3a49035-04e6-4b12-9aeb-3bc219266434",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0a37b610-db24-46c1-9887-3e50416d9cd4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dca308bc-341a-44f7-8c63-d472dabd22f1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "BlobIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fb58d252-173d-47a9-a89f-e868a32c0e19",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidBlobIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "378f985c-9405-4afb-a2a8-fa572a6647fe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "BlobIdDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2a6cfa1d-361b-4c71-9970-f26af077dd99",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fb5edd1e-dd60-4679-9c4e-db3c2b3d85bb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1a4ebb40-6345-4ad0-b8a6-494ca8ece756",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4d081485-5dcb-470d-a066-a18692edfe1b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e5cb218d-cfc9-421f-ba16-0ca4adefa34a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "40111f68-daf7-4db9-834e-571e833869d5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "FileTooLargeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "aa5b8c10-d53e-4ea7-966b-4f74baa49953",
      "documentation": "Returns information about a repository branch, including its name and the last commit ID.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.GetBranch",
      "responses": [
        {
          "uuid": "f66ffa4f-bb13-4a60-9f95-9719192885d5",
          "body": "{\n  \"branch\": {\n    \"branchName\": \"\",\n    \"commitId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c0b956ed-80dc-4113-84ea-4816cdff77af",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "65d293c7-6d5e-4c83-ac55-95aed0facbb6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "696fed49-e023-4dde-8a12-d6c7512b1fe0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "994a24b9-b2a3-47e7-9081-a2c0e66a0e67",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "BranchNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d46a34e8-3e45-40eb-ac3e-6ec810eaf39e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidBranchNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4534161a-ab38-4bc3-9b55-456f2461e305",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "BranchDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7120ed72-12cd-4ebb-ae7f-c6666df4dbee",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "902f4454-ba0a-40c0-ada8-1c2eb47071f2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1b6dbac5-ced4-4a7c-984e-78f16ec72884",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1ef73a7d-cfeb-45ac-9056-1d3c3a04ab36",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a8b22992-69d9-4ab0-b8ba-feed865b75cb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b425c6a3-97f5-4f5a-bf22-bfa4c21e2055",
      "documentation": "<p>Returns the content of a comment made on a change, file, or commit in a repository. </p> <note> <p>Reaction counts might include numbers from user identities who were deleted after the reaction was made. For a count of reactions from active identities, use GetCommentReactions.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.GetComment",
      "responses": [
        {
          "uuid": "41b0094d-f080-4b4a-814c-7894496bbfac",
          "body": "{\n  \"comment\": {\n    \"commentId\": \"\",\n    \"content\": \"\",\n    \"inReplyTo\": \"\",\n    \"creationDate\": \"{{faker 'date.recent' 365}}\",\n    \"lastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"authorArn\": \"\",\n    \"deleted\": {{faker 'random.boolean'}},\n    \"clientRequestToken\": \"\",\n    \"callerReactions\": [\n      \"\"\n    ],\n    \"reactionCounts\": {}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bdf6c2d5-3a86-4564-ab31-605e57d0520d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "CommentDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9e7c8542-dd41-4bd2-bcef-a465b1bdc204",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "CommentDeletedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f0ce8ef4-7ee2-4800-a5c7-6cf29f49b0bc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "CommentIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fd19e708-48cd-4658-9bcd-ede46a038f7d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidCommentIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "44ab54a6-2f37-496f-9d09-997488fe3ebc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "178697fc-cd72-45c9-9cc5-1ab7c08a4aad",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5e78f9c2-97e7-41d8-8609-9a2c6b2eeb8e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c582e8e5-0716-45f3-98c4-5b38534c569f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "48243ff8-de58-4f06-ae67-c80255637ba3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b35f5291-5407-4bf7-858c-6ff69c46fe1d",
      "documentation": "Returns information about reactions to a specified comment ID. Reactions from users who have been deleted will not be included in the count.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.GetCommentReactions",
      "responses": [
        {
          "uuid": "86ed7d7f-a40e-44e4-a67e-54f2044d6b76",
          "body": "{\n  \"reactionsForComment\": [\n    {\n      \"reaction\": {\n        \"emoji\": \"\",\n        \"shortCode\": \"\",\n        \"unicode\": \"\"\n      },\n      \"reactionUsers\": [\n        \"\"\n      ],\n      \"reactionsFromDeletedUsersCount\": {{faker 'random.number'}}\n    }\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f7e5347f-52e4-4776-9830-77519d84e1f8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "CommentDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "733aef0b-8130-4d29-ac06-331a5b1d87c2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "CommentIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "354ee824-889c-4c37-b742-44a6d96c672a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidCommentIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8d1a7525-0c82-4a9c-b94e-6b99bfc54e0b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidReactionUserArnException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4cb20a04-2c8f-4fef-a970-2abad2c2ec2f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidMaxResultsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b59d5b32-9334-4600-b3b4-c1c403db4d45",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidContinuationTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c49fdcda-6ea0-4f6e-9242-ee8ca3f5004f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "CommentDeletedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e8923bfe-ab9c-4bc9-a41f-83d7d85779cd",
      "documentation": "<p>Returns information about comments made on the comparison between two commits.</p> <note> <p>Reaction counts might include numbers from user identities who were deleted after the reaction was made. For a count of reactions from active identities, use GetCommentReactions.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.GetCommentsForComparedCommit",
      "responses": [
        {
          "uuid": "bd402ec1-1f43-4351-8e01-42da75125016",
          "body": "{\n  \"commentsForComparedCommitData\": [\n    {\n      \"repositoryName\": \"\",\n      \"beforeCommitId\": \"\",\n      \"afterCommitId\": \"\",\n      \"beforeBlobId\": \"\",\n      \"afterBlobId\": \"\",\n      \"location\": {\n        \"filePath\": \"\",\n        \"filePosition\": {{faker 'random.number'}},\n        \"relativeFileVersion\": \"\"\n      },\n      \"comments\": [\n        {\n          \"commentId\": \"\",\n          \"content\": \"\",\n          \"inReplyTo\": \"\",\n          \"creationDate\": \"{{faker 'date.recent' 365}}\",\n          \"lastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n          \"authorArn\": \"\",\n          \"deleted\": {{faker 'random.boolean'}},\n          \"clientRequestToken\": \"\",\n          \"callerReactions\": [\n            \"\"\n          ],\n          \"reactionCounts\": {}\n        }\n      ]\n    }\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f3d3570a-c055-4698-8fdb-0a39064c2cbb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "021bfd49-4033-42a5-92fb-65d8989beeb7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "80195af7-55a4-4e3c-a9e5-b876fe5f68a0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a3431336-ae88-4b84-9f54-d164f9862a9a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "CommitIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "decf91af-7ffb-446e-b649-c1c3cc571a58",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidCommitIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cea0b366-1956-4dd2-872d-6c6aa4195472",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "CommitDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "00208e34-0bfb-4c58-b27e-18884b290f2e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidMaxResultsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2edb690d-407e-46dc-856c-ce8982e06eed",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidContinuationTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2cc5851c-ee28-4113-a85a-495bbad5dbe8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4fe0d48d-5966-4525-b4ca-07e409733bc8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "62f4ddb9-cf31-4b0c-af6a-308877d2b5e5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b6fa83d1-1705-4985-94a4-b67914940dd3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4a8a4269-4c9d-44a5-91d4-523737ab17f6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7f99cb46-04d4-4a41-8e1e-88f7cf871f18",
      "documentation": "<p>Returns comments made on a pull request.</p> <note> <p>Reaction counts might include numbers from user identities who were deleted after the reaction was made. For a count of reactions from active identities, use GetCommentReactions.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.GetCommentsForPullRequest",
      "responses": [
        {
          "uuid": "8bda12b7-b510-4029-a472-279923791919",
          "body": "{\n  \"commentsForPullRequestData\": [\n    {\n      \"pullRequestId\": \"\",\n      \"repositoryName\": \"\",\n      \"beforeCommitId\": \"\",\n      \"afterCommitId\": \"\",\n      \"beforeBlobId\": \"\",\n      \"afterBlobId\": \"\",\n      \"location\": {\n        \"filePath\": \"\",\n        \"filePosition\": {{faker 'random.number'}},\n        \"relativeFileVersion\": \"\"\n      },\n      \"comments\": [\n        {\n          \"commentId\": \"\",\n          \"content\": \"\",\n          \"inReplyTo\": \"\",\n          \"creationDate\": \"{{faker 'date.recent' 365}}\",\n          \"lastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n          \"authorArn\": \"\",\n          \"deleted\": {{faker 'random.boolean'}},\n          \"clientRequestToken\": \"\",\n          \"callerReactions\": [\n            \"\"\n          ],\n          \"reactionCounts\": {}\n        }\n      ]\n    }\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "94d6e9d0-3b57-4336-81c1-8eceb4a50b43",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "PullRequestIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e8dd8af0-04d9-46a1-af44-27ae9efa883e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "PullRequestDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cc9f7a17-e125-4867-948a-7e18a650b13c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidPullRequestIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "08f2db63-1e61-4a2d-b363-86318314e7d9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c2280276-c281-4bdb-a9fa-2f1d2a7ffbf8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "75ad4d5d-f550-4106-a66e-1868db712122",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7453d51d-21d7-465d-9caf-43bdfa190d69",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "CommitIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4a4b402a-4a31-4c5d-a27f-088a9ff3021e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidCommitIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6f1ef59b-7099-49c4-9648-80c9c0473e9a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "CommitDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2ae81a93-23e1-4301-956f-9066341ebca3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidMaxResultsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0ad1d426-a1ea-43ae-a6b1-273863c9bb01",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidContinuationTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "252a5266-b341-4a3a-bbf8-b41e391dc142",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "RepositoryNotAssociatedWithPullRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a7e4a5f7-d3c7-44d5-baf1-7b5f22fa9831",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bd339c37-0632-4778-921f-a0d760e533a9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "30e4e25c-0a8a-4070-b678-2fa0b04898db",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6ff56896-b536-45e2-99b5-21054b24aecc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 495,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "90d30c60-6974-41d4-bded-cb0a9f22e345",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 496,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "819a0513-392e-4e78-94cd-c7ad67f3e179",
      "documentation": "Returns information about a commit, including commit message and committer information.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.GetCommit",
      "responses": [
        {
          "uuid": "9e89823c-9a9e-4b00-9198-97953d089b64",
          "body": "{\n  \"commit\": {\n    \"commitId\": \"\",\n    \"treeId\": \"\",\n    \"parents\": [\n      \"\"\n    ],\n    \"message\": \"\",\n    \"author\": {\n      \"name\": \"\",\n      \"email\": \"\",\n      \"date\": \"\"\n    },\n    \"committer\": {\n      \"name\": \"\",\n      \"email\": \"\",\n      \"date\": \"\"\n    },\n    \"additionalData\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fc4a387a-7c05-42a5-93c2-06bed2deb441",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "067858fd-df5a-4476-ba89-3f7c2a5de69a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "077d82c8-abef-4cf2-a09b-e27e3b65de71",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eba9ee92-606f-4a36-a251-01a6fb1f9387",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "CommitIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b4515a98-7794-4652-8d38-c1db1aaae29f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidCommitIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4769539e-2552-40d3-8aa8-c9ec7313a87f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "CommitIdDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5ff4e910-e93c-4eed-8950-8af5fae9e379",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f8d5be21-4cc5-4395-ad95-ff0f053de30b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "513fd8b2-0910-4718-93f8-17000a8c9bf2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9202a033-0dfc-428a-8b2d-74941f2991f3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f83ecc8e-b229-4446-8484-b93516be6014",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e2840cb1-a8cf-4d06-9aef-91e43e3ed653",
      "documentation": "Returns information about the differences in a valid commit specifier (such as a branch, tag, HEAD, commit ID, or other fully qualified reference). Results can be limited to a specified path.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.GetDifferences",
      "responses": [
        {
          "uuid": "af761178-b7e1-4c46-aaba-942357aa1772",
          "body": "{\n  \"differences\": [\n    {\n      \"beforeBlob\": {\n        \"blobId\": \"\",\n        \"path\": \"\",\n        \"mode\": \"\"\n      },\n      \"afterBlob\": {\n        \"blobId\": \"\",\n        \"path\": \"\",\n        \"mode\": \"\"\n      },\n      \"changeType\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7ee8cc62-c7a9-4f71-9653-05fe7d3aa816",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8ed0db5d-fb54-4a1d-8c5b-c67466cdfa04",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "af486e31-50b8-492f-8adc-5ca30a05aaea",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6c6b3f42-e8e0-4891-9a2e-b386265956ab",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidContinuationTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b4562b52-d125-4149-a0e2-b0bd0d5bb273",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidMaxResultsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "529bc5ce-9046-4515-abb2-627e65fb9bc8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidCommitIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f010e8a8-f5c0-43b4-adfe-7c824d63888b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "CommitRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cdd19e9e-19fb-434d-9c41-177999048426",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidCommitException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a104b3a0-795a-4f1d-95f3-58920405d33a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "CommitDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6fedecb1-f061-4da9-ae5d-f3d69e4aabdd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidPathException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "270d3544-2f97-4e72-9e33-33e21b2fad79",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "PathDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "197af8d3-5e05-416c-961c-f729e7659903",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7c249c5e-9b17-44f5-b820-9638c6af333b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e2e090d5-ef1c-4c42-8281-3c3610d79e20",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "03786c54-fb5b-486f-bcd3-9c969e8a1177",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b4fbdc68-f5cc-47ec-898f-c1b8d1545bfe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 495,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4e038ab8-8fd8-473e-bc56-c6db1acc2fe2",
      "documentation": "Returns the base-64 encoded contents of a specified file and its metadata.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.GetFile",
      "responses": [
        {
          "uuid": "c1b1ad55-da3e-42f1-abd7-37dab6d706a7",
          "body": "{\n  \"commitId\": \"\",\n  \"blobId\": \"\",\n  \"filePath\": \"\",\n  \"fileMode\": \"\",\n  \"fileSize\": {{faker 'random.number'}},\n  \"fileContent\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "58fb7912-3bbf-4a3d-b508-ee40505440a6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6964f01f-86ee-42bc-88d4-7281d78c5352",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8e3766d7-3281-4ca7-9ffe-d42a45b96dea",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c26ebf16-589b-4720-bfb4-a0ca8effb7a9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidCommitException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "12fed16c-9c28-49ab-9bf8-e2ef6dbdfeae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "CommitDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "58ffca39-0b28-41eb-9b18-be62116fb5c0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "PathRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ee9b5903-a821-4bae-80ff-cd265ddec688",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidPathException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "029733dc-a3b9-4e48-9ae4-3afec1480557",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "FileDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "be0f539f-269a-4c5d-a485-7886de3e3fe7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "73356b53-326f-4fe8-8aca-7101df5e08f0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "94e88745-5f97-4719-88fd-4668cbe89649",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d8e82d56-17bf-4025-ae52-9f172ddb5f8e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "07a7b5d4-0d00-4106-902b-e3b3c09b10ae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4fad934a-3ec2-488f-ab3b-95605aee3ce0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "FileTooLargeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9eb21e81-bd37-4f0c-a83f-1c86cec810ae",
      "documentation": "Returns the contents of a specified folder in a repository.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.GetFolder",
      "responses": [
        {
          "uuid": "f34a8271-5bed-4cc3-b7e4-985c19347a96",
          "body": "{\n  \"commitId\": \"\",\n  \"folderPath\": \"\",\n  \"treeId\": \"\",\n  \"subFolders\": [\n    {\n      \"treeId\": \"\",\n      \"absolutePath\": \"\",\n      \"relativePath\": \"\"\n    }\n  ],\n  \"files\": [\n    {\n      \"blobId\": \"\",\n      \"absolutePath\": \"\",\n      \"relativePath\": \"\",\n      \"fileMode\": \"\"\n    }\n  ],\n  \"symbolicLinks\": [\n    {\n      \"blobId\": \"\",\n      \"absolutePath\": \"\",\n      \"relativePath\": \"\",\n      \"fileMode\": \"\"\n    }\n  ],\n  \"subModules\": [\n    {\n      \"commitId\": \"\",\n      \"absolutePath\": \"\",\n      \"relativePath\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4cd11741-9742-4379-8d4c-d022c433e2ce",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "469718c9-a628-409a-8f2b-7d7723ebae0d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f44c582a-93ef-48e9-9485-1b825e851ad3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b284df36-fdd0-4c4a-a81f-6e110f1dc4f9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidCommitException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8aa72c64-c5f6-4990-88f1-dee40144b491",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "CommitDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c6ca3a9b-fb63-49b5-b4fa-d418d2eaeda4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "PathRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7ad612ed-54de-4039-90ac-0bbe5f8a1b73",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidPathException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9bdc843e-b148-4b11-8a48-a14db05209b1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "FolderDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e91f1aec-9b39-49b9-9463-ded78d809225",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8c05342a-2468-4518-89e4-c532d15e4f16",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bbb72987-9fab-4c4c-8565-899a5c454482",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "945d2f15-5e72-444d-b942-a41fa056d0f7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "94434f96-cf27-4d4f-846f-2ea61dfd8bdf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4ddfea49-43e4-4e65-934e-750fc59f3c9c",
      "documentation": "Returns information about a specified merge commit.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.GetMergeCommit",
      "responses": [
        {
          "uuid": "a574138d-3362-4de2-aefd-8abdc1699b9c",
          "body": "{\n  \"sourceCommitId\": \"\",\n  \"destinationCommitId\": \"\",\n  \"baseCommitId\": \"\",\n  \"mergedCommitId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4902de0a-8f24-4956-accb-adb38175fb8c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "de523df4-a0b3-48c6-9264-664b5e466218",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d4c0d970-8700-454d-b6ff-a37b74c99682",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "927bb9cc-947d-4188-ad41-79831f48e618",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "CommitRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "62da7e17-bc70-4428-8f13-3830ade00188",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidCommitException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4aca74c3-9e42-41ff-bf81-5eb0536bdeac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "CommitDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ffba1af7-7b0d-431a-bb75-3c7b3fa3d75d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidConflictDetailLevelException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0319d4df-2cdb-4211-8311-57321c11648a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidConflictResolutionStrategyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f51bb917-d998-4d6d-be1d-14d30b7a4918",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "32f9edee-d0e7-4959-92d8-519083793c68",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6f6261d9-0278-4879-89dd-1b3e1adcc87d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0cd5f1f1-451e-4017-88a9-265df716492e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "37ae12cc-4464-43e8-84ae-454138454c6e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5ced6f74-aacb-4dc7-9d13-bcc185ae831e",
      "documentation": "Returns information about merge conflicts between the before and after commit IDs for a pull request in a repository.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.GetMergeConflicts",
      "responses": [
        {
          "uuid": "c3061fce-1164-4bf3-877a-73dab4c6691c",
          "body": "{\n  \"mergeable\": {{faker 'random.boolean'}},\n  \"destinationCommitId\": \"\",\n  \"sourceCommitId\": \"\",\n  \"baseCommitId\": \"\",\n  \"conflictMetadataList\": [\n    {\n      \"filePath\": \"\",\n      \"fileSizes\": {\n        \"source\": {{faker 'random.number'}},\n        \"destination\": {{faker 'random.number'}},\n        \"base\": {{faker 'random.number'}}\n      },\n      \"fileModes\": {\n        \"source\": \"\",\n        \"destination\": \"\",\n        \"base\": \"\"\n      },\n      \"objectTypes\": {\n        \"source\": \"\",\n        \"destination\": \"\",\n        \"base\": \"\"\n      },\n      \"numberOfConflicts\": {{faker 'random.number'}},\n      \"isBinaryFile\": {\n        \"source\": {{faker 'random.boolean'}},\n        \"destination\": {{faker 'random.boolean'}},\n        \"base\": {{faker 'random.boolean'}}\n      },\n      \"contentConflict\": {{faker 'random.boolean'}},\n      \"fileModeConflict\": {{faker 'random.boolean'}},\n      \"objectTypeConflict\": {{faker 'random.boolean'}},\n      \"mergeOperations\": {\n        \"source\": \"\",\n        \"destination\": \"\"\n      }\n    }\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ee5beeaa-74d2-4941-bce2-c59597771ec0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ae7561cc-8c7b-4365-aec8-3a2cdd9bb8f0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d06d059c-1dc8-487a-aaa4-f50b689091de",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "342353be-5b2a-4bab-9bda-4e1790e28f47",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "MergeOptionRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "83cbf373-44b5-49a7-99ae-e0d2a52d309d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidMergeOptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "16b6f949-4a8e-4ec8-a7a9-df5325d34dcc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidContinuationTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c50e264b-d89d-47de-b378-d17d1488c833",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "CommitRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eb3a9b17-d3d0-451a-b4e1-f9f0d743bdff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "CommitDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1df50e79-9904-4959-8eda-ae4634f57a6b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidCommitException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aad6a237-4bd4-4d06-8e54-9c6ba1aed86b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "TipsDivergenceExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f9c1c7cf-54ab-47cc-ae3a-2bf32680c753",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidMaxConflictFilesException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5e73994f-e4c5-40a1-aa7a-b91afc484466",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "InvalidConflictDetailLevelException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c59de15b-c59b-4e73-a330-f28d6d9cd57d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "InvalidDestinationCommitSpecifierException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e8ac978a-ab85-49a6-afc4-9af299937936",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "InvalidSourceCommitSpecifierException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "15ef11af-3097-4170-9395-c35c51b49160",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "InvalidConflictResolutionStrategyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c2bbada2-e3f0-409b-8970-4eb2518a3dde",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 495,
          "label": "MaximumFileContentToLoadExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6427385f-8cc8-4213-8c11-961dd18a0c30",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 496,
          "label": "MaximumItemsToCompareExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f58fad1f-109f-4362-b70d-865203d1bbf0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 497,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9f0039a9-aae3-4078-8444-d31caac7a0fc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 498,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "253ddd49-7519-4b09-b94d-010a7904adf7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 499,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5377505c-0608-4a3a-a2ec-18aefd6eed57",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 500,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "17706ad2-cfaa-48b2-ba66-0deeb2403493",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 501,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1fcfe0f5-63fd-4d86-87e1-c5ad8f317666",
      "documentation": "Returns information about the merge options available for merging two specified branches. For details about why a merge option is not available, use GetMergeConflicts or DescribeMergeConflicts.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.GetMergeOptions",
      "responses": [
        {
          "uuid": "d3150ebc-3483-4071-965d-696f4408ac55",
          "body": "{\n  \"mergeOptions\": [\n    \"{{oneOf (array 'FAST_FORWARD_MERGE' 'SQUASH_MERGE' 'THREE_WAY_MERGE')}}\"\n  ],\n  \"sourceCommitId\": \"\",\n  \"destinationCommitId\": \"\",\n  \"baseCommitId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a088cc05-f7bd-4591-b69a-6188fbfef727",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8a7bb754-3abe-48fa-aa5f-fe9353292a3c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "deb5fdec-8d0e-4fb5-8e08-8e6a55a84691",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6e8ed537-a237-4a02-9dbd-a456e7249d58",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "CommitRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "214df4c0-4687-4f34-b16b-f2aaba84ef97",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "CommitDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8ce4d9d4-0a3e-466b-9794-03c17bc8229a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidCommitException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1783f769-7df0-4600-899d-8e4aa185fb21",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "TipsDivergenceExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "444b2b05-5418-4f29-a0df-21c8321f5400",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidConflictDetailLevelException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "70f29364-0b86-43b6-a93f-699bd0323e90",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidConflictResolutionStrategyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0d173ba4-a0e6-4780-8e14-532563bfb41d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "MaximumFileContentToLoadExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5bad0053-d2b3-476b-bc28-e800cade9a20",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "MaximumItemsToCompareExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d22132b9-ce63-4496-9a73-ae4bc4fe0824",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "816bf72f-a4ee-402b-b2fe-c48e4ec9b360",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "21160c7b-92f8-4329-b69b-2a921c6cd7b6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cbdc3e61-07a5-4c0e-94b6-930a37ab0eba",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2372826f-3a33-4666-abc4-761379a12eda",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 495,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e7b8fbda-4454-47a0-b9f2-0de2ed5d271c",
      "documentation": "Gets information about a pull request in a specified repository.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.GetPullRequest",
      "responses": [
        {
          "uuid": "8715081b-a91e-4ffb-8568-27658ac69841",
          "body": "{\n  \"pullRequest\": {\n    \"pullRequestId\": \"\",\n    \"title\": \"\",\n    \"description\": \"\",\n    \"lastActivityDate\": \"{{faker 'date.recent' 365}}\",\n    \"creationDate\": \"{{faker 'date.recent' 365}}\",\n    \"pullRequestStatus\": \"\",\n    \"authorArn\": \"\",\n    \"pullRequestTargets\": [\n      {\n        \"repositoryName\": \"\",\n        \"sourceReference\": \"\",\n        \"destinationReference\": \"\",\n        \"destinationCommit\": \"\",\n        \"sourceCommit\": \"\",\n        \"mergeBase\": \"\",\n        \"mergeMetadata\": {\n          \"isMerged\": {{faker 'random.boolean'}},\n          \"mergedBy\": \"\",\n          \"mergeCommitId\": \"\",\n          \"mergeOption\": \"\"\n        }\n      }\n    ],\n    \"clientRequestToken\": \"\",\n    \"revisionId\": \"\",\n    \"approvalRules\": [\n      {\n        \"approvalRuleId\": \"\",\n        \"approvalRuleName\": \"\",\n        \"approvalRuleContent\": \"\",\n        \"ruleContentSha256\": \"\",\n        \"lastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n        \"creationDate\": \"{{faker 'date.recent' 365}}\",\n        \"lastModifiedUser\": \"\",\n        \"originApprovalRuleTemplate\": {\n          \"approvalRuleTemplateId\": \"\",\n          \"approvalRuleTemplateName\": \"\"\n        }\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b92412d0-85cb-4a4d-8587-cbeeb204ed9f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "PullRequestDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "73b7ef3a-a5d2-4572-adfd-3d90df9a21cf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidPullRequestIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4148101c-5109-4c25-aeb1-35005010cde7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "PullRequestIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "835157e7-d747-4bb5-bcbc-8045d117f188",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f245b349-8dac-4b7b-b53b-02ebbe9e994a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "22c98941-f1c9-4328-b1c8-24f35be542eb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "126fbe1c-7bac-4719-ac0c-faf355313815",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8c211815-a6c4-49c5-a3a6-645724f4d70a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "741dec87-5464-409b-b468-39afb459647a",
      "documentation": "Gets information about the approval states for a specified pull request. Approval states only apply to pull requests that have one or more approval rules applied to them.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.GetPullRequestApprovalStates",
      "responses": [
        {
          "uuid": "960e50e5-0faa-4316-8cf4-c79aa36e8c11",
          "body": "{\n  \"approvals\": [\n    {\n      \"userArn\": \"\",\n      \"approvalState\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "acee0a1c-be99-4efb-8150-ad7cb74639ab",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "PullRequestDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dfcaf2f3-693f-4491-8071-eabbb84d44d2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidPullRequestIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9251ceba-b68b-426f-90f3-f683fc1b2e62",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "PullRequestIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fc7eb641-189a-44b8-aacf-bfe5672d92b1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidRevisionIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0650701c-d119-444a-9e30-a374f6e019ba",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "RevisionIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "69b419f6-338e-43d9-8c32-cb1929dd3779",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "618aa513-4db8-4c54-a2aa-79858da2c7d3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7488dea0-e4bc-4f36-964c-fbf893a1d4a8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "77a5668f-08b4-4e53-9a77-84d9da1a8417",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e08225ea-b9b2-4743-97c4-b00c5aa881da",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6d57b59c-9bb6-40a8-8c56-a71dced65bce",
      "documentation": "Returns information about whether approval rules have been set aside (overridden) for a pull request, and if so, the Amazon Resource Name (ARN) of the user or identity that overrode the rules and their requirements for the pull request.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.GetPullRequestOverrideState",
      "responses": [
        {
          "uuid": "a5e7b83e-ab2f-4891-816d-5483f9b3614d",
          "body": "{\n  \"overridden\": {{faker 'random.boolean'}},\n  \"overrider\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e41103f4-7f8d-436a-9aab-7d44aad1aa1d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "PullRequestDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2dbb42a3-109c-4dfc-8583-1a9c805a139d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidPullRequestIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6c03adbb-a9ff-4156-8036-97bbaee0eaf9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "PullRequestIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b733b2b8-f1d6-497c-9a3a-a655535e5991",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidRevisionIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "927f6536-40f7-4114-a291-b53c3cce3642",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "RevisionIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7bbf3dde-f5c7-4b4b-80df-4b686c55f533",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "72bf024e-8b0f-45f0-afa0-9afa3c89a971",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b3b9621d-5cd0-40b9-ab2e-4c823844eb22",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "af0742de-1eba-4744-ad19-6eb044a0b211",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9c6af46f-0830-4baa-b02e-5ceeff62f961",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8e978285-3dcb-4ef3-8595-4023801d0794",
      "documentation": "<p>Returns information about a repository.</p> <note> <p>The description field for a repository accepts all HTML characters and all valid Unicode characters. Applications that do not HTML-encode the description and display it in a webpage can expose users to potentially malicious code. Make sure that you HTML-encode the description field in any application that uses this API to display the repository description on a webpage.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.GetRepository",
      "responses": [
        {
          "uuid": "9c4230c4-e474-4e0f-9115-95869df7a9db",
          "body": "{\n  \"repositoryMetadata\": {\n    \"accountId\": \"\",\n    \"repositoryId\": \"\",\n    \"repositoryName\": \"\",\n    \"repositoryDescription\": \"\",\n    \"defaultBranch\": \"\",\n    \"lastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"creationDate\": \"{{faker 'date.recent' 365}}\",\n    \"cloneUrlHttp\": \"\",\n    \"cloneUrlSsh\": \"\",\n    \"Arn\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3bb8543d-3e06-460c-a0cf-81a4828f6cd0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7fc666a0-9719-4e88-9749-d375da9005a8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ffc9476d-a071-41f6-9562-5aeca21b9b35",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "42522193-472e-4545-ad26-e58fa3e2f629",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "35fc1969-744d-4356-8634-4fcb7608533c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3a1ebb50-1791-480a-9f8e-f971c502027d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2e4f6420-39cd-4319-8126-e2d86c8e9600",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "df1743c2-5450-433e-b63b-fa15c0a223a8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e63de715-0e6d-4db8-b373-42feb24d875e",
      "documentation": "Gets information about triggers configured for a repository.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.GetRepositoryTriggers",
      "responses": [
        {
          "uuid": "25894ad5-ccbd-4fee-a2a8-6af758860721",
          "body": "{\n  \"configurationId\": \"\",\n  \"triggers\": [\n    {\n      \"name\": \"\",\n      \"destinationArn\": \"\",\n      \"customData\": \"\",\n      \"branches\": [\n        \"\"\n      ],\n      \"events\": [\n        \"{{oneOf (array 'all' 'updateReference' 'createReference' 'deleteReference')}}\"\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "631562e4-4d5e-44f6-b1fa-e339ccd85ec7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "76bc95d1-9d30-4fb7-9945-b2c84929502f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a59e6789-26bc-4fa1-954b-6b4309498159",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "750f90c7-2931-43e7-b603-1f0ac19c2dda",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "91c6b807-854e-4e9f-93a2-d90be6152455",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3ed9c81f-dd68-4b78-81d4-dabfacc2b6fc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f1ace51b-337a-468b-8196-6a98802c86b5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e84585b6-5ee8-4657-a27c-fe0785c96bab",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "241bf7a0-e62c-47eb-87a1-6cef79335420",
      "documentation": "Lists all approval rule templates in the specified AWS Region in your AWS account. If an AWS Region is not specified, the AWS Region where you are signed in is used.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.ListApprovalRuleTemplates",
      "responses": [
        {
          "uuid": "7eadee43-0bb8-4ab0-a554-28181b32447b",
          "body": "{\n  \"approvalRuleTemplateNames\": [\n    \"\"\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0e977782-2860-411f-91c5-2ae28e64b1c0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidMaxResultsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "524a29df-3c5e-46aa-b7bb-876d428ce18b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidContinuationTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7ac0121a-63d4-45fa-af2c-682be5f5d3bc",
      "documentation": "Lists all approval rule templates that are associated with a specified repository.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.ListAssociatedApprovalRuleTemplatesForRepository",
      "responses": [
        {
          "uuid": "12cd59f7-1b11-4017-92a1-3679fe3538e2",
          "body": "{\n  \"approvalRuleTemplateNames\": [\n    \"\"\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b9d89d9a-b421-4463-8905-54143287ff72",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4f6b9acd-a87c-4e2c-b5ea-56aded6b4d62",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "900f13dc-fcab-474a-9ebb-fc28f7ea6fc9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1a8a3627-dcac-4294-9f83-2448e817d27a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidMaxResultsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "046b1b02-2c22-4e40-a4c4-d9f7e7aee241",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidContinuationTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f821e05c-7b85-4619-893d-878c65bd4120",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "257dcc09-a45f-43d5-bcd5-5c63f1f6adab",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "333df9a4-e431-4915-9615-26e6afac0af0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "04af5fae-2160-4b74-81eb-25714a91e778",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a2d54e17-0457-49a9-8bfe-2c354e1aa6ae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e741374e-64bc-4938-aa78-b8dae00a6018",
      "documentation": "Gets information about one or more branches in a repository.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.ListBranches",
      "responses": [
        {
          "uuid": "accaaf71-c0be-4387-a023-3a3544d705bb",
          "body": "{\n  \"branches\": [\n    \"\"\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c2129b8e-569d-4f1a-8a4b-91cc4ed08f0e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "25976527-6977-4559-878d-b36be60abec5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "443c0daa-a390-4cc4-8644-b9795467f666",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f50059a0-cb2f-484a-bf63-b166368e2312",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b58f0d97-2ec3-4647-b493-bd60170b5967",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2c61328f-1ccb-434f-b650-c92372b5099e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "247042b2-938d-45de-939b-a4a295fab4e9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9c5be3c7-28ae-44a2-8f18-960d73601f6b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "384daa0e-bd4a-48b6-b88e-985250719521",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidContinuationTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c892cbbf-49d1-439d-b6c3-5c108c373d11",
      "documentation": "Returns a list of pull requests for a specified repository. The return list can be refined by pull request status or pull request author ARN.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.ListPullRequests",
      "responses": [
        {
          "uuid": "a7cd5c2d-e53d-472a-a8f0-5d85d5debf56",
          "body": "{\n  \"pullRequestIds\": [\n    \"\"\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "914f9969-4ed9-4b78-b841-554b0ce8b0f0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidPullRequestStatusException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f46e299e-2563-4306-bb61-f7da307dc55d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidAuthorArnException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "11c018d5-c939-43ec-af35-f3e728d0a579",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "AuthorDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "75eb3724-4ee1-4511-a15b-568115c4f729",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6059e0f3-df7e-4f01-8415-98b10b3293eb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "53186619-b04a-4c50-b432-623e04f8de95",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7663db6c-a2db-4643-81a6-6d38cd37bdca",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidMaxResultsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "effabd40-f95c-4689-b330-2fa17e476fe5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidContinuationTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b324a98d-73eb-49c7-8387-de17676d44ca",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "25e2edb6-a506-4b18-908b-bc60a10c0b90",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fdbfa9ba-ec55-40be-bae2-fd7248fa104d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "92361dcd-a422-4dad-a1bd-6098894311fa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4690c875-5618-4895-8eac-31ad59445744",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "03655557-c01b-4093-9dd0-c0b7594f1cb0",
      "documentation": "Gets information about one or more repositories.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.ListRepositories",
      "responses": [
        {
          "uuid": "06c1404d-a019-4abf-a5ce-ffe4876a1709",
          "body": "{\n  \"repositories\": [\n    {\n      \"repositoryName\": \"\",\n      \"repositoryId\": \"\"\n    }\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d7655a34-d5d1-49ce-8409-ee9ef7a9bee9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidSortByException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c1d8ab91-4459-47c7-bd50-6cba1dd21a6b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidOrderException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7c3d90de-59fb-4472-92f9-77e4465d7884",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidContinuationTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "52c8a960-d4e2-4a6d-be5e-7657b126964c",
      "documentation": "Lists all repositories associated with the specified approval rule template.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.ListRepositoriesForApprovalRuleTemplate",
      "responses": [
        {
          "uuid": "62f246d6-132a-4e4a-b070-a80426a9f188",
          "body": "{\n  \"repositoryNames\": [\n    \"\"\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4aaeaf6f-0362-4211-bb63-ce7f53116d74",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ApprovalRuleTemplateNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8aeac8fb-1b02-4040-9c74-41c99790c549",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidApprovalRuleTemplateNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5cb4f0f8-6190-4283-98a7-5cb5385e29b8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ApprovalRuleTemplateDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9558206e-d10b-4e00-9397-fb5462a7910a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidMaxResultsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7e74f457-7903-4a79-82bc-4983c45e1cd5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidContinuationTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7a879a0e-73b5-47a4-9911-9167791c37e7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "581acc21-8105-4994-bc2e-37b1f7142914",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a028cb1a-f62c-45fb-b138-da01526b2061",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "99b53512-8d89-4756-bf4c-e74227241ed7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7e106731-9489-45f2-a4ee-4c1790a73a19",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "29e5efa6-7919-4566-a9ee-296ece388b5a",
      "documentation": "Gets information about AWS tags for a specified Amazon Resource Name (ARN) in AWS CodeCommit. For a list of valid resources in AWS CodeCommit, see <a href=\"https://docs.aws.amazon.com/codecommit/latest/userguide/auth-and-access-control-iam-access-control-identity-based.html#arn-formats\">CodeCommit Resources and Operations</a> in the<i> AWS CodeCommit User Guide</i>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.ListTagsForResource",
      "responses": [
        {
          "uuid": "50bf1997-1687-4483-986f-3ea0ad4fa27e",
          "body": "{\n  \"tags\": {},\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "27449d2d-9c22-4cfa-8f20-2479ec9e8401",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d89f5edf-1a20-490e-8f53-6b37914a362b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "476d94a2-4bcb-4a45-b494-5a5e8b2df622",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceArnRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "59436572-77d8-4485-9dcc-4c42a4b82c9e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidResourceArnException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "865c051d-6340-4421-a391-1fb1466d20c8",
      "documentation": "Merges two branches using the fast-forward merge strategy.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.MergeBranchesByFastForward",
      "responses": [
        {
          "uuid": "235a85fc-73bc-4886-998d-cc2432911237",
          "body": "{\n  \"commitId\": \"\",\n  \"treeId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1a34b699-aa78-40fd-8f75-1818f35d2c60",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d0cb55dd-2cce-42f9-89d0-4b53ceb40887",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "42361bbe-d0db-427d-8304-720b0f23e917",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "17d66717-4c72-442b-b6e5-12de6eb6c86d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TipsDivergenceExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ab04daff-2ccc-47e3-a627-7e6990b79f3f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "CommitRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0832e8ac-8774-4b12-808e-152a5d0d57a2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidCommitException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e5e9cfd2-247c-49f0-9ac4-a216277e346e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "CommitDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9a00d789-c85e-4b95-a823-7a8c01075aec",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidTargetBranchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7b6b5e4a-620d-4b11-97e1-f0412fd89808",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidBranchNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "de684148-5cd6-4a5b-8204-a512341fb8af",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "BranchNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3a2701af-67dc-4bac-9256-16c089ccf828",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "BranchNameIsTagNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ddd13a6b-e9ad-4726-9a7b-b6ac37cbb70e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "BranchDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f310083a-495b-4ace-a2cf-583d52db8eb1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "ManualMergeRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8836acdc-ea66-475a-b646-73feb2361574",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "ConcurrentReferenceUpdateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7d952aab-5422-4c97-9e6a-f5643c62afe3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3783a8d3-07ba-4455-9cd5-d1f3f80a9dbe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 495,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "095314d5-2b66-43f4-9297-9cdc6d477bfc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 496,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "00c37314-4997-472b-ad9f-d764a5e0cdfc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 497,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1fd03eed-ea9b-4297-bb07-711377a3794e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 498,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5dc25b61-717d-4976-9801-421d4349cc03",
      "documentation": "Merges two branches using the squash merge strategy.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.MergeBranchesBySquash",
      "responses": [
        {
          "uuid": "80adec7a-71a2-4bed-8b07-319057df466b",
          "body": "{\n  \"commitId\": \"\",\n  \"treeId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "de52cd2f-201c-40bb-8b76-0c902fb29dba",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4badd74d-4309-47a0-acc8-f51ea0c427ea",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "23f3968d-25a5-4f02-814b-3d3ffe414547",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f517e319-b445-4d66-a402-a71d4c1c310f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TipsDivergenceExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "758b027a-18e1-42cc-a035-7dcb6dc475a9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "CommitRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c9966c65-c266-4731-b61c-17ccfb0b855c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidCommitException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "187fb989-5dbd-4840-86a4-19264ce7bd47",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "CommitDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9fa9d933-ba4e-4430-8a8c-9ef7a07ff94c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidTargetBranchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "81b6c5a4-780d-4e75-bdef-cd3ee84234ef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidBranchNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ddcf4b4e-74cb-4c5d-b133-3efab7817f97",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "BranchNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "55fc0df0-3d9b-40c4-af11-56dc0c7aa53e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "BranchNameIsTagNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "415f95d3-58c4-40bc-82b6-57b6e26ec542",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "BranchDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ec8a4bca-4084-4deb-b25f-81f1f91cc2a7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "ManualMergeRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7f1ce882-d554-4e86-a08b-795464115ef8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "InvalidConflictDetailLevelException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "15a92809-f4aa-479c-8ece-72e598a5230d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "InvalidConflictResolutionStrategyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a20d73a1-052d-44db-8275-2a5fc4b0ab2c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 495,
          "label": "InvalidConflictResolutionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "76c152b7-04e8-4acc-957e-d9dc36bf4187",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 496,
          "label": "MaximumConflictResolutionEntriesExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d680d3bc-6ef6-4ec2-b247-66779ee73bce",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 497,
          "label": "MultipleConflictResolutionEntriesException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "69db194b-9700-461e-a1ed-524543be4512",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 498,
          "label": "ReplacementTypeRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0ab6f729-90bc-4667-9240-0e1a6f8c0bf6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 499,
          "label": "InvalidReplacementTypeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a4ed0450-d13e-4856-916a-dab099c65200",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 500,
          "label": "ReplacementContentRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "394eedb1-d326-4a3f-9494-fdd5821a92b1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 501,
          "label": "InvalidReplacementContentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "59efbc08-b9ec-4b0e-bef6-7ab4b1328dd8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 502,
          "label": "PathRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "53524ff1-100a-4c2e-9fb3-2fb521facc75",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 503,
          "label": "InvalidPathException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8ca326f0-65b0-4ab3-a888-09da0c1d151f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 504,
          "label": "FileContentSizeLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "52101bae-fce3-49e3-8ea5-e48befdfb873",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 505,
          "label": "FolderContentSizeLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c8190bc1-3584-4d5f-a467-c641a5bdbce7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 506,
          "label": "MaximumFileContentToLoadExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "79d4e07f-73ae-4b16-bdf4-28bb917566c1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 507,
          "label": "MaximumItemsToCompareExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f0b0a1bd-e5f6-4a11-b82d-15bead08102e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 508,
          "label": "FileModeRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7c9148a1-95d7-4c48-9be8-09b9c8f761ac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 509,
          "label": "InvalidFileModeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bd04625d-9b0d-45bf-bff5-1b2d80ea2465",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 510,
          "label": "NameLengthExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5b876864-513d-46da-88c6-7bfd207f8c53",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 511,
          "label": "InvalidEmailException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c87c4753-13bb-4eee-8729-07769e2d58b3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 512,
          "label": "CommitMessageLengthExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e0e912a0-18d1-4620-bd11-cb73c6309ac5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 513,
          "label": "ConcurrentReferenceUpdateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b584f0be-67c3-4489-b31b-1346beea6c9e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 514,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cbe8f5fc-6097-428e-ba35-d286f5e78513",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 515,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "17e09731-6480-4ece-bcb8-cdb2a44d8f2e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 516,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0e8ca781-c86b-48c0-acac-92904db16b97",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 517,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "19df43bf-3dea-472e-bedb-7a39ea07a83c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 518,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1d920ed2-db16-47cb-a4aa-08ffcac7edfb",
      "documentation": "Merges two specified branches using the three-way merge strategy.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.MergeBranchesByThreeWay",
      "responses": [
        {
          "uuid": "b2efedb9-6bb7-4126-9bbe-886dfb4acc9f",
          "body": "{\n  \"commitId\": \"\",\n  \"treeId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "49c9569c-2361-47f5-8e85-780216188b3b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d7b35f34-7d42-4071-8787-fccd04c84fe4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9b802778-8cb6-400e-a93d-545f32782990",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "547df49f-7dd2-45ad-8ab8-ce81778394fe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TipsDivergenceExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bdb1c9cc-f6ef-4da8-96ef-f430d905fa72",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "CommitRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "02686e53-8946-4e7c-8455-b0a43517a94a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidCommitException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f4612cff-e028-4338-9f7c-6de1c8b3de64",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "CommitDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5a084b9b-b42c-4080-8d4c-6fdbc5f90161",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidTargetBranchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "39ab8a5b-9173-45fa-b030-e010d24270ad",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidBranchNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a0ac04a8-cfa1-41bd-bd47-b62ac16eb921",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "BranchNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a6741976-c2bb-4101-af50-4e4df39e10a2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "BranchNameIsTagNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "54bf5939-768b-4a3d-b03d-43b22f98c2d4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "BranchDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7210bf76-e095-44e4-b099-b9b51ce8291a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "ManualMergeRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "da743888-8412-4805-82ae-2bc2e6656547",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "ConcurrentReferenceUpdateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "70dd558c-6c84-4cc9-ae23-e3d6826c685f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "InvalidConflictDetailLevelException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0ab6707f-f69a-4afb-a488-f04cd19f67ed",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 495,
          "label": "InvalidConflictResolutionStrategyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e30e93cb-8fd0-42bf-9b73-354d3640c59b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 496,
          "label": "InvalidConflictResolutionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c3be473b-53a5-43f0-a9e5-b41b727b056d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 497,
          "label": "MaximumConflictResolutionEntriesExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "35948f60-896d-4ee0-a8b1-908f0387f830",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 498,
          "label": "MultipleConflictResolutionEntriesException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "87f73541-e182-49f9-b0d0-e9475eb0e0d3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 499,
          "label": "ReplacementTypeRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7bb7ec61-b776-4435-88a5-a194d1edd379",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 500,
          "label": "InvalidReplacementTypeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9393320c-6dd9-47d3-af0d-49510516c3be",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 501,
          "label": "ReplacementContentRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "933990d7-a426-4e70-864b-c4a467ab5099",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 502,
          "label": "InvalidReplacementContentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "70523fa0-9c7d-4259-ace8-e3c839d570a3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 503,
          "label": "PathRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8ce095a8-68e1-464e-8762-fc37ccfd6503",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 504,
          "label": "InvalidPathException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2a4e3447-04dc-48a0-91bc-905f35a51960",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 505,
          "label": "FileContentSizeLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "62010ca6-c65d-4398-912b-77944f594d56",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 506,
          "label": "FolderContentSizeLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "97204c7a-b44c-4738-99b8-780e468e498b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 507,
          "label": "MaximumFileContentToLoadExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "343c6c7b-d6f1-4adb-8ef7-6ababe6f89c2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 508,
          "label": "MaximumItemsToCompareExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1468b020-20d5-456b-815e-34a5447ed9c4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 509,
          "label": "FileModeRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6d69efae-e028-4ab0-9214-14a4bc3801f3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 510,
          "label": "InvalidFileModeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "321e5d04-a4b1-4559-bf7c-f8780bc313b2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 511,
          "label": "NameLengthExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4c5f1c95-aad7-4eec-bbd6-04ce0f40b35b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 512,
          "label": "InvalidEmailException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "27aaa19b-97b3-4642-8101-39f4ea559f36",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 513,
          "label": "CommitMessageLengthExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "049026be-4e77-44a0-a8e5-52c50648fe3f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 514,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "06fe5efa-bc10-42c9-b0fe-f2ebba4e767c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 515,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "76e16f23-ceec-4a3a-be0d-94b368bcf5e3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 516,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "46ce901a-3264-4c12-b080-ba91acfb0d53",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 517,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a090613d-c5c7-4a72-8f5e-71d320998279",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 518,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2a474789-206c-4023-9522-c165a64c0761",
      "documentation": "Attempts to merge the source commit of a pull request into the specified destination branch for that pull request at the specified commit using the fast-forward merge strategy. If the merge is successful, it closes the pull request.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.MergePullRequestByFastForward",
      "responses": [
        {
          "uuid": "f76d4dae-f55f-4b2c-ab02-2e168a53ac6d",
          "body": "{\n  \"pullRequest\": {\n    \"pullRequestId\": \"\",\n    \"title\": \"\",\n    \"description\": \"\",\n    \"lastActivityDate\": \"{{faker 'date.recent' 365}}\",\n    \"creationDate\": \"{{faker 'date.recent' 365}}\",\n    \"pullRequestStatus\": \"\",\n    \"authorArn\": \"\",\n    \"pullRequestTargets\": [\n      {\n        \"repositoryName\": \"\",\n        \"sourceReference\": \"\",\n        \"destinationReference\": \"\",\n        \"destinationCommit\": \"\",\n        \"sourceCommit\": \"\",\n        \"mergeBase\": \"\",\n        \"mergeMetadata\": {\n          \"isMerged\": {{faker 'random.boolean'}},\n          \"mergedBy\": \"\",\n          \"mergeCommitId\": \"\",\n          \"mergeOption\": \"\"\n        }\n      }\n    ],\n    \"clientRequestToken\": \"\",\n    \"revisionId\": \"\",\n    \"approvalRules\": [\n      {\n        \"approvalRuleId\": \"\",\n        \"approvalRuleName\": \"\",\n        \"approvalRuleContent\": \"\",\n        \"ruleContentSha256\": \"\",\n        \"lastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n        \"creationDate\": \"{{faker 'date.recent' 365}}\",\n        \"lastModifiedUser\": \"\",\n        \"originApprovalRuleTemplate\": {\n          \"approvalRuleTemplateId\": \"\",\n          \"approvalRuleTemplateName\": \"\"\n        }\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bba65fce-ffee-4a35-9f34-573472acabbc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ManualMergeRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5ee4c140-b306-4d7f-9937-49a3d80ab8dd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "PullRequestAlreadyClosedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "58349fb7-516f-4615-994e-06b9c63c7c6e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "PullRequestDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f4f8903e-1529-44b9-8632-9c84b19e8c75",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidPullRequestIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a4ff2a34-0895-45e3-add5-44f2d31052f9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "PullRequestIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a625c4e0-23d3-4385-b74c-dbb0561b7ebd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "TipOfSourceReferenceIsDifferentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cee99631-9a8e-40e0-9c70-b703ca3d4d99",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ReferenceDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bee4f30b-57a8-4ea3-b282-bbfa7acfd786",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidCommitIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "51abe6cc-510c-42f3-8eb7-0c2097bf1af2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "RepositoryNotAssociatedWithPullRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9cd5470c-99f9-4af2-aa68-9a34dc0602a7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "55059484-e970-4a59-a2b9-9b28fd1c51aa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9c9b69e0-8556-4667-8222-ff77d6574a69",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f900d184-c531-41e8-9ecb-d7934ea39ad2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "ConcurrentReferenceUpdateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c6e04b82-5332-4463-a159-306ca0bc09e2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "PullRequestApprovalRulesNotSatisfiedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3b6ae894-c6e5-421e-addf-9545cd6a09bf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c947f8ef-0164-4069-b71b-23d411b7d196",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 495,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c4a5f5e3-604d-4ffb-8c33-ae7044ff23f4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 496,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "afa7f425-1e9c-43f0-a9d2-47187f022c56",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 497,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "21d54359-6409-42eb-a3be-47eeec0c70dd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 498,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1629ac2a-fd1b-4726-9f80-9211001d6f24",
      "documentation": "Attempts to merge the source commit of a pull request into the specified destination branch for that pull request at the specified commit using the squash merge strategy. If the merge is successful, it closes the pull request.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.MergePullRequestBySquash",
      "responses": [
        {
          "uuid": "bbd12282-89a1-4751-bec8-efc39834d3ca",
          "body": "{\n  \"pullRequest\": {\n    \"pullRequestId\": \"\",\n    \"title\": \"\",\n    \"description\": \"\",\n    \"lastActivityDate\": \"{{faker 'date.recent' 365}}\",\n    \"creationDate\": \"{{faker 'date.recent' 365}}\",\n    \"pullRequestStatus\": \"\",\n    \"authorArn\": \"\",\n    \"pullRequestTargets\": [\n      {\n        \"repositoryName\": \"\",\n        \"sourceReference\": \"\",\n        \"destinationReference\": \"\",\n        \"destinationCommit\": \"\",\n        \"sourceCommit\": \"\",\n        \"mergeBase\": \"\",\n        \"mergeMetadata\": {\n          \"isMerged\": {{faker 'random.boolean'}},\n          \"mergedBy\": \"\",\n          \"mergeCommitId\": \"\",\n          \"mergeOption\": \"\"\n        }\n      }\n    ],\n    \"clientRequestToken\": \"\",\n    \"revisionId\": \"\",\n    \"approvalRules\": [\n      {\n        \"approvalRuleId\": \"\",\n        \"approvalRuleName\": \"\",\n        \"approvalRuleContent\": \"\",\n        \"ruleContentSha256\": \"\",\n        \"lastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n        \"creationDate\": \"{{faker 'date.recent' 365}}\",\n        \"lastModifiedUser\": \"\",\n        \"originApprovalRuleTemplate\": {\n          \"approvalRuleTemplateId\": \"\",\n          \"approvalRuleTemplateName\": \"\"\n        }\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b245e14f-ed20-47df-afa8-6c7939eb811b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "PullRequestAlreadyClosedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b52d4dbb-cc66-4c77-af9e-8347a2497162",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "PullRequestDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5aab73ee-4d44-45ba-915c-6d53fdfcf8c5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "PullRequestIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6815d96d-8bb7-4fd8-9d3f-61afce40bc71",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidPullRequestIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a18bdf60-83f4-45b6-8685-9b379a5fa3e0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidCommitIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "26a80336-0be7-4264-a791-8cb20ff07aae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ManualMergeRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "850c6ce7-90cd-4573-9ce4-e05e27ea4a99",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "TipOfSourceReferenceIsDifferentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8d01bf11-99c1-4ab0-9d94-a5c5e6a0f697",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "TipsDivergenceExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cdf88d71-b2b1-4727-b36f-2bdd6bf58ed8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "NameLengthExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1fe68bb8-3d02-4d9e-9491-8e8751481c6c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidEmailException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f9ff5657-2cac-426e-9731-06c352610f3b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "CommitMessageLengthExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d5ae0c42-93c2-4aaa-b7a2-92580db4d096",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "InvalidConflictDetailLevelException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "61eb5a11-f867-4929-ac28-32ddc3927933",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "InvalidConflictResolutionStrategyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7fb77c1e-d731-4b46-b0e2-76ff81e52f36",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "InvalidConflictResolutionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "324c4830-ad32-4f9e-ad7e-fec84488a3fd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "ReplacementTypeRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "92bd0620-cc61-4b9b-9b9f-4a60a8ef38b6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 495,
          "label": "InvalidReplacementTypeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c1b28de7-dc22-4fb2-ac3a-3651dbeb7d2a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 496,
          "label": "MultipleConflictResolutionEntriesException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "20da0bc1-0bbe-4904-be5d-e98df8e8a51a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 497,
          "label": "ReplacementContentRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "469dac5d-8b1f-413c-9a0b-efafa7ddf337",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 498,
          "label": "MaximumConflictResolutionEntriesExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "39952285-2982-49e2-8598-72b8796ba363",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 499,
          "label": "ConcurrentReferenceUpdateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "50513ee0-a311-4f4d-8f6b-e7f30edb6f76",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 500,
          "label": "PathRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5a8f5001-1b9b-4ffd-a606-6dccfe565fdc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 501,
          "label": "InvalidPathException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "92d0e94c-a05b-49e8-bf54-3fe2716932fc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 502,
          "label": "InvalidFileModeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f1bee792-2ac9-4f1a-9de5-1061c821a5ad",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 503,
          "label": "InvalidReplacementContentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b2b39e7a-f6f7-4fe9-b78c-76fcc4dcc1d2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 504,
          "label": "FileContentSizeLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f00ba0a7-dcec-45c4-95e7-66ad7785d425",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 505,
          "label": "FolderContentSizeLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4b622190-65d9-4c1b-ab4e-678e2bb8addf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 506,
          "label": "MaximumFileContentToLoadExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e0f1e7b9-cedb-4e54-8dcb-c3bd819aaf39",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 507,
          "label": "MaximumItemsToCompareExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9f19d141-5473-46bf-961e-aba4b2c43efe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 508,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1000b24d-6c16-457b-bda6-23c5ba99ab24",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 509,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "689387d1-c768-4527-8737-9316a0ab1ad2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 510,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3a73060b-d2f0-4b22-82c9-9fbbb8860c00",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 511,
          "label": "RepositoryNotAssociatedWithPullRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aa6c6d47-308f-4491-af9d-73509d17fdca",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 512,
          "label": "PullRequestApprovalRulesNotSatisfiedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "76b9f3e1-0f8d-48e2-b8c1-5d538c85cd51",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 513,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "48a60977-f32e-40e4-8ef9-0ab0d48bce48",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 514,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "60e30840-9674-4971-9676-61227ba26db2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 515,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "894777dc-3f5f-434a-bb26-83c5eb72379e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 516,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d82f1f00-91b3-4f5c-9e0f-6c0ff4c32a6e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 517,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "36edce19-eb11-428f-b0a7-dd22e68ae649",
      "documentation": "Attempts to merge the source commit of a pull request into the specified destination branch for that pull request at the specified commit using the three-way merge strategy. If the merge is successful, it closes the pull request.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.MergePullRequestByThreeWay",
      "responses": [
        {
          "uuid": "1d799f3d-2ce9-42c3-9b18-1efbcc553c4a",
          "body": "{\n  \"pullRequest\": {\n    \"pullRequestId\": \"\",\n    \"title\": \"\",\n    \"description\": \"\",\n    \"lastActivityDate\": \"{{faker 'date.recent' 365}}\",\n    \"creationDate\": \"{{faker 'date.recent' 365}}\",\n    \"pullRequestStatus\": \"\",\n    \"authorArn\": \"\",\n    \"pullRequestTargets\": [\n      {\n        \"repositoryName\": \"\",\n        \"sourceReference\": \"\",\n        \"destinationReference\": \"\",\n        \"destinationCommit\": \"\",\n        \"sourceCommit\": \"\",\n        \"mergeBase\": \"\",\n        \"mergeMetadata\": {\n          \"isMerged\": {{faker 'random.boolean'}},\n          \"mergedBy\": \"\",\n          \"mergeCommitId\": \"\",\n          \"mergeOption\": \"\"\n        }\n      }\n    ],\n    \"clientRequestToken\": \"\",\n    \"revisionId\": \"\",\n    \"approvalRules\": [\n      {\n        \"approvalRuleId\": \"\",\n        \"approvalRuleName\": \"\",\n        \"approvalRuleContent\": \"\",\n        \"ruleContentSha256\": \"\",\n        \"lastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n        \"creationDate\": \"{{faker 'date.recent' 365}}\",\n        \"lastModifiedUser\": \"\",\n        \"originApprovalRuleTemplate\": {\n          \"approvalRuleTemplateId\": \"\",\n          \"approvalRuleTemplateName\": \"\"\n        }\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "36d84d1d-7f98-41be-8cd6-ad58926467cd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "PullRequestAlreadyClosedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7654775a-8f48-47d7-9386-df9e2b3bafb1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "PullRequestDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d03a0fa3-2878-40f0-b2dc-99b4809712e4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "PullRequestIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "efdd1fb6-c956-4987-ae49-13d83588f7b8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidPullRequestIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "408f376b-1253-45a0-8341-5950bf0f2b58",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidCommitIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "022e2be1-e679-4217-92e3-bd3d5b02930f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ManualMergeRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "94990efd-4800-4658-8a67-0abfe8da6372",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "TipOfSourceReferenceIsDifferentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ce8aa3f5-c468-4f68-a1af-713918e5a2a8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "TipsDivergenceExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "51b8aadf-997e-46a1-b42e-b1541175cefd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "NameLengthExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f428c1d6-0481-4403-b1cc-f1a04ec9870a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidEmailException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b1d9e52e-3995-4c07-a9a5-4fb1b9bcd5d8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "CommitMessageLengthExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "65bca726-4775-45ef-9ce0-d5588ff521c8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "InvalidConflictDetailLevelException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "29ac7cf0-7957-49b9-85d6-1c1dd9544a1b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "InvalidConflictResolutionStrategyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0aa3ca89-f22a-45a2-a932-47cc0135d5fe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "InvalidConflictResolutionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "826bb83b-f6c6-4687-8a5f-e895755df4bd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "ReplacementTypeRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f7ca7683-f01c-41f2-b515-030b6ffcc689",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 495,
          "label": "InvalidReplacementTypeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dfa9a20e-40cb-4c37-90b7-9fe5e50f7a5b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 496,
          "label": "MultipleConflictResolutionEntriesException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "55d92bdc-30d4-415d-bfb8-643cc2498e93",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 497,
          "label": "ReplacementContentRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "54b73d86-3074-4fa1-807e-118b6b64719b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 498,
          "label": "MaximumConflictResolutionEntriesExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "24641dd8-9d9f-4355-a1f3-22cc95fa0f80",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 499,
          "label": "PathRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3b57a6d5-e589-4bfa-b145-3e5e5ab83ee7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 500,
          "label": "InvalidPathException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a64a8c4c-82e7-496a-ba46-953e62cfefb7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 501,
          "label": "InvalidFileModeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8e9e6b21-3756-49bf-a9d9-4696bcd4de04",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 502,
          "label": "InvalidReplacementContentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1cee9072-c38c-42f7-9197-65d77bff2c97",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 503,
          "label": "FileContentSizeLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fc8267c3-e3c5-4ef1-91ce-2db9fc7197f3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 504,
          "label": "FolderContentSizeLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "358e0a14-c34b-4471-b905-3741bc8a04a0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 505,
          "label": "MaximumFileContentToLoadExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "79d4a27d-70c7-4b69-9e25-6e381ee01837",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 506,
          "label": "MaximumItemsToCompareExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6da023aa-b2b6-40a0-81a7-ecc3c5c9dc7c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 507,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e9a3c10f-2b11-43b5-9454-a7754288b8b3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 508,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "01935844-da0a-4685-a2a4-fc5f283e6e7e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 509,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f2cd1914-958d-4519-94d7-a0600a56b6f4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 510,
          "label": "RepositoryNotAssociatedWithPullRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "73c6a957-10e8-42f2-9f33-68e4e957e9b0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 511,
          "label": "ConcurrentReferenceUpdateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a1956188-9c20-4ce6-b661-43a1c3f19ef5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 512,
          "label": "PullRequestApprovalRulesNotSatisfiedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "775f1f53-e832-48f0-82ed-4b852148f3fd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 513,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e215e995-6192-497e-8241-747bf4da4f05",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 514,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f938a761-f528-4e0b-9711-09a06801cd7c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 515,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a37d208e-efb3-4600-9c7b-15e83b1cace6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 516,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4378031e-d832-47cf-b06c-04301d927eb4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 517,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1f43c727-d569-4c7d-8679-ad03d309f62e",
      "documentation": "Sets aside (overrides) all approval rule requirements for a specified pull request.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.OverridePullRequestApprovalRules",
      "responses": [
        {
          "uuid": "8252394c-cbfd-4929-98b3-3bb381209eb2",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9e80040a-80bb-4b58-ac36-45bf2a383319",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "PullRequestDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "49358825-160f-4cad-8918-e24764fdb5c5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidPullRequestIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a75acb50-6ec3-4b6d-b63f-a16e5f07d7d3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "PullRequestIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "45cd32d0-19ae-4f68-9d08-5ed31ce7130d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidRevisionIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b8f51db1-7c53-4697-81bb-3254480b1289",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "RevisionIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "27ac30c7-db91-4fc3-9506-c33f427e7f2c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidOverrideStatusException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "53b4c3e1-c2b2-412d-959b-81e52e850fb0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "OverrideStatusRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7e214949-94a7-4ab7-975d-a3e57cbce5de",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "OverrideAlreadySetException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "74330a01-26f9-4532-979e-d504181d20bc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "RevisionNotCurrentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "87d56db5-917d-417c-b59d-43c982d77065",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "PullRequestAlreadyClosedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f16fe54c-2d3f-4640-9bbf-78a2af43bd80",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f25a2a45-6743-4ffe-9d45-e493c24cc38d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bf825093-da3c-4a30-b520-6453dff190b8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3f8b9c90-5509-4d35-9fb3-61c56b860bce",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "170c8711-8615-4a2b-b1ce-711e722e5f79",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d3f54d4b-7674-4d8f-98f2-b8347564e34f",
      "documentation": "Posts a comment on the comparison between two commits.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.PostCommentForComparedCommit",
      "responses": [
        {
          "uuid": "aa4b69be-5d1c-4810-b0cc-a5d97aff4ac6",
          "body": "{\n  \"repositoryName\": \"\",\n  \"beforeCommitId\": \"\",\n  \"afterCommitId\": \"\",\n  \"beforeBlobId\": \"\",\n  \"afterBlobId\": \"\",\n  \"location\": {\n    \"filePath\": \"\",\n    \"filePosition\": {{faker 'random.number'}},\n    \"relativeFileVersion\": \"\"\n  },\n  \"comment\": {\n    \"commentId\": \"\",\n    \"content\": \"\",\n    \"inReplyTo\": \"\",\n    \"creationDate\": \"{{faker 'date.recent' 365}}\",\n    \"lastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"authorArn\": \"\",\n    \"deleted\": {{faker 'random.boolean'}},\n    \"clientRequestToken\": \"\",\n    \"callerReactions\": [\n      \"\"\n    ],\n    \"reactionCounts\": {}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c5c872f5-5515-413e-bc28-a0f9118fae1c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "78d4ac71-a150-4e92-8423-ef66d02f21da",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d644d4e1-76cc-43f9-860b-b68ef39d5a64",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e9f3a924-9f0c-4f20-9951-51cdfd9042d6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ClientRequestTokenRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "969fec4f-559c-4035-8ef2-3e7a70468ccd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidClientRequestTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b7db6605-050e-4c8d-9230-747df2364476",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "IdempotencyParameterMismatchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e2aa2b3c-6bd1-4b5a-99b6-f2c91477130b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "CommentContentRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "43d43c58-b22f-468a-aed2-55f894108ea7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "CommentContentSizeLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9a4b8f4a-d6c5-4430-b0d4-1e5ee5d79df2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidFileLocationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d850fd43-a182-4033-8caa-d919a804e81d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidRelativeFileVersionEnumException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b50a86d5-2507-4686-a5be-659514d3370f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "PathRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bf84e345-09b9-4ca7-a031-0d72b645e396",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "InvalidFilePositionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c835b013-20e6-4ba3-8a76-ea824aaac156",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "CommitIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "afe463c8-bf96-46de-9e4f-6f9e1e0d2571",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "InvalidCommitIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "93cf7a87-5ca5-415e-8587-ef9188702722",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "BeforeCommitIdAndAfterCommitIdAreSameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1ceb0195-7ad7-42e6-ae45-c444e17919df",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 495,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "150d1755-dfb6-4177-8ff8-b3778d86507e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 496,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bc04a0bc-d55c-4b33-b142-acbc26aaa40c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 497,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d74f16a5-3f5d-420a-97ae-a60e32f2bc38",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 498,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0c3f2584-2aa8-4667-bfdb-a9db499c7046",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 499,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "10cfff16-0199-41ac-97fa-596fea8fcdb1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 500,
          "label": "CommitDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0405375c-4175-4ec6-ad92-d16e630fefae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 501,
          "label": "InvalidPathException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f3b448ad-4141-4e36-9abc-56d097a5e668",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 502,
          "label": "PathDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5ce5ee02-aa7e-493c-8576-4d9b846a3bc2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 503,
          "label": "PathRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a4451ee9-1310-4452-97f7-37c0920b6008",
      "documentation": "Posts a comment on a pull request.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.PostCommentForPullRequest",
      "responses": [
        {
          "uuid": "5fc98933-76e2-4cfd-b958-d3e218de62fa",
          "body": "{\n  \"repositoryName\": \"\",\n  \"pullRequestId\": \"\",\n  \"beforeCommitId\": \"\",\n  \"afterCommitId\": \"\",\n  \"beforeBlobId\": \"\",\n  \"afterBlobId\": \"\",\n  \"location\": {\n    \"filePath\": \"\",\n    \"filePosition\": {{faker 'random.number'}},\n    \"relativeFileVersion\": \"\"\n  },\n  \"comment\": {\n    \"commentId\": \"\",\n    \"content\": \"\",\n    \"inReplyTo\": \"\",\n    \"creationDate\": \"{{faker 'date.recent' 365}}\",\n    \"lastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"authorArn\": \"\",\n    \"deleted\": {{faker 'random.boolean'}},\n    \"clientRequestToken\": \"\",\n    \"callerReactions\": [\n      \"\"\n    ],\n    \"reactionCounts\": {}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dc8339c9-df14-48d3-bb4e-1e1d4bee7ba7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "PullRequestDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "090bd788-392c-4b56-9ea7-8ed59448e03e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidPullRequestIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "117d1e07-6cca-459d-8eaf-78d94537d925",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "PullRequestIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a38ed9a9-d3e2-4ba5-afe0-113edb637702",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "RepositoryNotAssociatedWithPullRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4c791414-d58f-4a86-a676-1288c61041bc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "41dea5db-b152-4c07-9320-1dec28c9fe4e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "02b4e2e8-e8c2-46a0-b3a9-f3fbd932b1cf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b11c179f-4889-420d-a19b-3170c0e68fb3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "ClientRequestTokenRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5393989f-e62d-4884-8a51-81e823b50777",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidClientRequestTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fd257af5-7eb0-41a7-8ab4-d91109dc6a1e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "IdempotencyParameterMismatchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2e4cc6cd-e58e-4a3c-b6d0-9dcfa5b76b58",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "CommentContentRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f4000338-376f-43cc-8023-c83aee32df73",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "CommentContentSizeLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "127625fd-185e-4ace-8521-a7512d7d48f7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "InvalidFileLocationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "376002ef-b224-476c-840f-cc61b070b413",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "InvalidRelativeFileVersionEnumException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "36a89814-e42c-433b-b669-0619ab02fd2b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "PathRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "31e10a76-fc0f-4573-b09c-1d1ccaaf3792",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 495,
          "label": "InvalidFilePositionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4f9b58ce-eee9-4d48-91f9-4f2fbca6c53c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 496,
          "label": "CommitIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cca090c5-cbec-4b31-8c65-af4c3ef21cf1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 497,
          "label": "InvalidCommitIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1568ebc3-0c68-4366-be4e-fd3e524f3631",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 498,
          "label": "BeforeCommitIdAndAfterCommitIdAreSameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2014bbfd-55c4-46c0-95d1-48c2c4afbc9b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 499,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3dd4ba1c-c580-4710-aaa7-32f618b0a5d2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 500,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "915fcb58-1c59-4626-9fa2-464333020840",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 501,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dc3e1e49-412d-40ff-a41e-f891f981040c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 502,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8ffdfcc2-8463-400e-9367-4dc8c547b3d4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 503,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dea04cbe-bdc9-40cf-beee-fafda3bc66cf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 504,
          "label": "CommitDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7d8243b1-5bf7-460e-ae4d-b99fcabfd4ee",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 505,
          "label": "InvalidPathException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8ca0e7c6-b4a2-461c-9e99-2d79c3137cf3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 506,
          "label": "PathDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "921dc514-6928-48d1-8826-1560500ad033",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 507,
          "label": "PathRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "50e2136b-3605-4c1a-bafd-cce868d6142e",
      "documentation": "Posts a comment in reply to an existing comment on a comparison between commits or a pull request.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.PostCommentReply",
      "responses": [
        {
          "uuid": "b8404996-115e-4f04-9970-b535af46e1a7",
          "body": "{\n  \"comment\": {\n    \"commentId\": \"\",\n    \"content\": \"\",\n    \"inReplyTo\": \"\",\n    \"creationDate\": \"{{faker 'date.recent' 365}}\",\n    \"lastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"authorArn\": \"\",\n    \"deleted\": {{faker 'random.boolean'}},\n    \"clientRequestToken\": \"\",\n    \"callerReactions\": [\n      \"\"\n    ],\n    \"reactionCounts\": {}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "701528bb-7358-4cfd-a200-9d40d47c6c68",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ClientRequestTokenRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4971ad95-5a22-4662-bbf5-3f59073a438c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidClientRequestTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2b245bdd-7268-4bea-962e-617394ae4829",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "IdempotencyParameterMismatchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f158ca93-620d-4e5a-8cb5-0cd0ab60121d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "CommentContentRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "23cbaeb4-759e-44c6-90d4-688d9d80711a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "CommentContentSizeLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e261cd55-974d-4d97-b359-2448ece7f84a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "CommentDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "73cd1d7b-7d63-49e1-9535-c5f322dce9f8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "CommentIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9aa85900-0347-4fc9-9a04-aa792a7052d0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidCommentIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "077e232d-cc87-44a1-8b14-d0740ecce7f9",
      "documentation": "Adds or updates a reaction to a specified comment for the user whose identity is used to make the request. You can only add or update a reaction for yourself. You cannot add, modify, or delete a reaction for another user.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.PutCommentReaction",
      "responses": [
        {
          "uuid": "c584eaa2-d3e1-412e-bc9d-e75dd1938d8d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8fd59eef-adff-4247-94d9-8de9d0ce49c0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "CommentDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "97f0e9fe-936b-4b83-a94d-78f8c04f466b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "CommentIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ff3ae4ec-8569-4dfc-994e-b9f90337bdce",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidCommentIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0c0dba89-d2f0-4bd8-84fa-3e2a15da02a5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidReactionValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "72820881-f988-472b-b47e-98ccb7eb6e5b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ReactionValueRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9f62ed1e-85b9-4a49-94f6-422f82481d19",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ReactionLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6ad40f4b-7a4a-464d-9a5d-ce04e2a3c316",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "CommentDeletedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ea96a407-09a3-45f3-ac56-e615b54822f5",
      "documentation": "Adds or updates a file in a branch in an AWS CodeCommit repository, and generates a commit for the addition in the specified branch.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.PutFile",
      "responses": [
        {
          "uuid": "5d116c31-6ce9-4abc-b027-a1da470f6adb",
          "body": "{\n  \"commitId\": \"\",\n  \"blobId\": \"\",\n  \"treeId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2d1ddaf3-98d6-41bf-95a2-639a14696eb3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b9921e9a-7314-4122-92d6-13558c4b89a4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4eb3d1e5-5ebd-4b09-ba87-419b60664981",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6f2351a8-38f8-419b-9854-1add41d392c5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ParentCommitIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "23293f4e-b9cc-4ea3-b0dd-4b59e98bed8f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidParentCommitIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b9a09c7c-52c4-4312-b62b-d137d8d2e757",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ParentCommitDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4365c1b8-358b-4f78-9bf6-b44e3633c609",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ParentCommitIdOutdatedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d6ceaa12-3312-4f22-9cea-b41660e7bffd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "FileContentRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "077e57fb-3dfc-4f86-a112-2379e49bfc48",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "FileContentSizeLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cd6880d0-67f6-43ac-97d8-d42682731899",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "FolderContentSizeLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e3f03651-6091-4d11-b486-62f974d37c1e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "PathRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "24a4caeb-62f9-46f1-b976-ab545034053d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "InvalidPathException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "726d1088-111f-48b2-9353-338e2ad8bba9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "BranchNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5b1408eb-f472-44db-a7c9-751a433ca4e8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "InvalidBranchNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0970a9b7-af56-4082-b735-61cb72bc8c70",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "BranchDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2d294b2a-ff51-4ccd-9e97-428e6b0eb816",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 495,
          "label": "BranchNameIsTagNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e4d4ba42-4e9d-43e4-ac18-fbf601d2e48a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 496,
          "label": "InvalidFileModeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "47cdbe86-79d7-4525-a57f-9c9992f921bd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 497,
          "label": "NameLengthExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9332dbe1-b0d1-41a1-877f-a41617289183",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 498,
          "label": "InvalidEmailException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ee2635a5-2aa3-444b-a795-dbc2537e053d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 499,
          "label": "CommitMessageLengthExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ae0640cc-a7d3-43c8-92b5-e5fa63b1ace3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 500,
          "label": "InvalidDeletionParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cd69eaeb-549e-496f-a1c3-0b05804c5e13",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 501,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "98ea24a1-67e6-4191-a0b6-589b781c914e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 502,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "843eef0e-df4b-4d86-82d7-5599485d147f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 503,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c83e002b-f435-448b-8d98-9c89f8ba109b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 504,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "56d80066-f1ed-48dc-8817-c42850c3b67a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 505,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8c328394-3f00-4725-9c86-3cd3f3b11187",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 506,
          "label": "SameFileContentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f7303f80-b0d9-4dd9-81aa-d872aad44156",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 507,
          "label": "FileNameConflictsWithDirectoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "029c1885-b99e-471c-9a83-8fcc5f98fa19",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 508,
          "label": "DirectoryNameConflictsWithFileNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4b1d52fa-2f67-44eb-a5dc-901fea4b1bc3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 509,
          "label": "FilePathConflictsWithSubmodulePathException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "aef10866-86e0-4388-b4dd-6b1c9425ed6a",
      "documentation": "Replaces all triggers for a repository. Used to create or delete triggers.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.PutRepositoryTriggers",
      "responses": [
        {
          "uuid": "86ec9324-dc3a-400b-b42e-319f5c32ec82",
          "body": "{\n  \"configurationId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6e351f12-7f0e-4972-a769-8222a390831e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4f88c3e3-a77f-4da5-8e4c-baaed336ac91",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "13fd1515-ddad-439c-9bfd-879106dcc918",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4def1bcb-ea2d-42b8-88e5-77827dd836b7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "RepositoryTriggersListRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "45019291-21fc-41ec-9eed-056375af92b6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "MaximumRepositoryTriggersExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8fcd1d75-87bf-434a-8b3c-ccba4d315490",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidRepositoryTriggerNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a5d22750-a10c-4353-bd99-e092248d9b25",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidRepositoryTriggerDestinationArnException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "46980e0b-05c5-4753-9007-848387fd0160",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidRepositoryTriggerRegionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f66334ab-196d-4e34-91d9-0ddab928135e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidRepositoryTriggerCustomDataException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "695e93b1-918a-40d4-a430-3ae7e29715fc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "MaximumBranchesExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "63fc3254-4bfd-4791-801e-5d0ad2bf5d4c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidRepositoryTriggerBranchNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d5d29c84-fd5d-490a-9e3f-9a55b07de658",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "InvalidRepositoryTriggerEventsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "750a288c-5675-45f5-8a8d-349a519ebd4d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "RepositoryTriggerNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5f807035-bb4d-49af-8d30-d9e3ab00780d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "RepositoryTriggerDestinationArnRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "475666a8-a035-4728-b5c3-898a9ac15533",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "RepositoryTriggerBranchNameListRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c6d41d3d-b0d5-47ce-809b-a18c29d75724",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 495,
          "label": "RepositoryTriggerEventsListRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "809eae85-81e0-45cf-b2f3-fe69b232ccc8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 496,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3df8de3f-149d-42f3-b91d-2c5cd28d258c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 497,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "561655f3-2c5b-4a65-81e9-2a4edae25c67",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 498,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1fae9d6a-60b8-44e4-ad48-af3be45eac51",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 499,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6168d592-15a5-4c48-b8b9-62f3f163e2ab",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 500,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "92e75d34-c902-49b2-a54d-4a836feb3c6f",
      "documentation": "Adds or updates tags for a resource in AWS CodeCommit. For a list of valid resources in AWS CodeCommit, see <a href=\"https://docs.aws.amazon.com/codecommit/latest/userguide/auth-and-access-control-iam-access-control-identity-based.html#arn-formats\">CodeCommit Resources and Operations</a> in the <i>AWS CodeCommit User Guide</i>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.TagResource",
      "responses": [
        {
          "uuid": "a7733b0e-93d0-4c6c-bedb-b938cff2ffbf",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b7fc3e8a-d9c4-4a6b-92a3-84e43de6542c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "32079af6-842f-43d5-a450-c6c78a576d1c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "878055e7-f738-470d-b408-145fa65664c4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceArnRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "be2c406b-5edd-460f-8ff1-f44d05ee8d22",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidResourceArnException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0267cb91-85c9-4c77-a6b0-35d653c12b6e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "TagsMapRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "91735e5b-4029-4d97-bfa8-a258e14c6697",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidTagsMapException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4cda94d7-eb3b-484d-b8c5-73a514897e28",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "TooManyTagsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "00d48bc0-f05b-499d-a358-7760c234c621",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidSystemTagUsageException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cd51fa4a-59de-4cb3-92f5-93fab804d6f2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "TagPolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2b2cb917-fa8c-45b7-8fc3-e6830fbb7910",
      "documentation": "Tests the functionality of repository triggers by sending information to the trigger target. If real data is available in the repository, the test sends data from the last commit. If no data is available, sample data is generated.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.TestRepositoryTriggers",
      "responses": [
        {
          "uuid": "bfee3002-afe1-41d3-80e7-d12082dbfabb",
          "body": "{\n  \"successfulExecutions\": [\n    \"\"\n  ],\n  \"failedExecutions\": [\n    {\n      \"trigger\": \"\",\n      \"failureMessage\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "94406ed2-de82-43b1-be41-d8ad33f0e12e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1093712d-0351-4238-b3ae-25ebb4708824",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8f90a18b-2af5-46d6-966f-a280abb46b10",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "37e522a6-be31-4afc-a4b8-2b31564245fa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "RepositoryTriggersListRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2b9d0ee0-a2bd-452a-9e11-77d2dc59299a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "MaximumRepositoryTriggersExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "36fd82d1-be8d-41d9-aa6e-3dcf17536608",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidRepositoryTriggerNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7fd0fed4-a0bd-4b44-aa0f-fc5fbbab2132",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidRepositoryTriggerDestinationArnException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "597dd093-f6c2-4184-a4c0-c321f5914819",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidRepositoryTriggerRegionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d2a6a89e-ff22-4bed-9730-7125f0265d68",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidRepositoryTriggerCustomDataException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e8259d9b-d541-4feb-b862-803e30762718",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "MaximumBranchesExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "612df0bc-7052-4928-9982-1c11dc023049",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidRepositoryTriggerBranchNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1f51d3cb-0abd-4585-9d4a-85e5ec9d3c56",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "InvalidRepositoryTriggerEventsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5639e4cb-29d4-4dd5-901b-ccddf9d5c133",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "RepositoryTriggerNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a0751404-cca7-4736-8e59-0512e04dd6d0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "RepositoryTriggerDestinationArnRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a5f4dab6-693f-4ee4-9d62-9d05c2de25db",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "RepositoryTriggerBranchNameListRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "84368c21-63db-4aa7-87d4-6f3dbbb275d2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 495,
          "label": "RepositoryTriggerEventsListRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cfea1341-64aa-47b9-abf2-0679237a5246",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 496,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "004c932e-d494-49f3-ae5a-366ad0c6f07d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 497,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3bd23869-f321-475d-9c4a-48e0e20ad16d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 498,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5a7aadf5-019b-4d8d-916a-50ba83758e01",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 499,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8c4e2715-40b8-4b52-a348-e22a8432f69d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 500,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "24bac9bb-c201-4051-b7d3-de176d8b37d0",
      "documentation": "Removes tags for a resource in AWS CodeCommit. For a list of valid resources in AWS CodeCommit, see <a href=\"https://docs.aws.amazon.com/codecommit/latest/userguide/auth-and-access-control-iam-access-control-identity-based.html#arn-formats\">CodeCommit Resources and Operations</a> in the <i>AWS CodeCommit User Guide</i>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.UntagResource",
      "responses": [
        {
          "uuid": "4d277224-6484-48d2-9f94-57d308d86ce7",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cc9d4e18-4130-4bb0-acde-66bbec047a8d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d7c12468-d88d-4bbd-a06a-935801c5df54",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ab5e8cca-3108-4bd5-ba8b-5a3458cd822f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceArnRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f018a570-1be8-4fcc-8718-40f7654595ab",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidResourceArnException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1ff7474b-1080-4c61-9f3c-8356fdc567ff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "TagKeysListRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7131b5c8-7c7e-4953-b7e2-0755fc7bd61a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidTagKeysListException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7a985955-85b6-4d38-9df1-aac0574f8486",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "TooManyTagsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6f9038d7-b430-48cd-800e-6a4b6447ae33",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidSystemTagUsageException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "86a6e59a-896b-4e80-a6e1-0f736f799f80",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "TagPolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f7f649bd-6059-401c-86fa-f487c1eb7679",
      "documentation": "Updates the content of an approval rule template. You can change the number of required approvals, the membership of the approval rule, and whether an approval pool is defined.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.UpdateApprovalRuleTemplateContent",
      "responses": [
        {
          "uuid": "ec997c44-caa9-4df5-9415-dba94e03b1b8",
          "body": "{\n  \"approvalRuleTemplate\": {\n    \"approvalRuleTemplateId\": \"\",\n    \"approvalRuleTemplateName\": \"\",\n    \"approvalRuleTemplateDescription\": \"\",\n    \"approvalRuleTemplateContent\": \"\",\n    \"ruleContentSha256\": \"\",\n    \"lastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"creationDate\": \"{{faker 'date.recent' 365}}\",\n    \"lastModifiedUser\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "747a32be-49a4-43be-8bc2-9c590805a7a3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidApprovalRuleTemplateNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "41fd1c83-0833-4d59-9bce-abdaf9aa9a74",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ApprovalRuleTemplateNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0d30ccfd-f3fe-4036-a4e5-1fd4b65eac21",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ApprovalRuleTemplateDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ecd2255d-6b05-4eb4-a5ad-f080d1604ceb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidApprovalRuleTemplateContentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bca88b34-b484-4595-9ded-901eb28088a1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidRuleContentSha256Exception",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4ca951bb-d338-4ee4-b6dd-e4e0b6e0973c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ApprovalRuleTemplateContentRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5d803c70-64c0-4e16-a06c-271a3cbadf3d",
      "documentation": "Updates the description for a specified approval rule template.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.UpdateApprovalRuleTemplateDescription",
      "responses": [
        {
          "uuid": "688f1e8b-d08b-453b-b6ed-3323556fa281",
          "body": "{\n  \"approvalRuleTemplate\": {\n    \"approvalRuleTemplateId\": \"\",\n    \"approvalRuleTemplateName\": \"\",\n    \"approvalRuleTemplateDescription\": \"\",\n    \"approvalRuleTemplateContent\": \"\",\n    \"ruleContentSha256\": \"\",\n    \"lastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"creationDate\": \"{{faker 'date.recent' 365}}\",\n    \"lastModifiedUser\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d4f2476f-e892-4643-8577-d231e89bceb8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidApprovalRuleTemplateNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2f3d6982-58eb-4180-a03c-1a8cc1e0dfc0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ApprovalRuleTemplateNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "af15f2f9-7582-4fac-a8ba-e5c31d32d04b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ApprovalRuleTemplateDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a96c1716-b5e6-4d3f-9df7-fce3607fbcb9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidApprovalRuleTemplateDescriptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9e2481de-958e-4274-b9dd-4c512c57673d",
      "documentation": "Updates the name of a specified approval rule template.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.UpdateApprovalRuleTemplateName",
      "responses": [
        {
          "uuid": "b538211e-1d73-4fb5-b352-0f28e2b94dd2",
          "body": "{\n  \"approvalRuleTemplate\": {\n    \"approvalRuleTemplateId\": \"\",\n    \"approvalRuleTemplateName\": \"\",\n    \"approvalRuleTemplateDescription\": \"\",\n    \"approvalRuleTemplateContent\": \"\",\n    \"ruleContentSha256\": \"\",\n    \"lastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"creationDate\": \"{{faker 'date.recent' 365}}\",\n    \"lastModifiedUser\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d0c25da3-4f1d-43a2-8246-71fd63247c84",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidApprovalRuleTemplateNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "475f3cb7-2f4d-4846-b4d0-0b31a0fb0725",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ApprovalRuleTemplateNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "11aa587c-2bd9-423b-89d8-c7f0bb5de9e8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ApprovalRuleTemplateDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f40ba331-37ad-48f4-8249-4e6ab3a7ef75",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ApprovalRuleTemplateNameAlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e1723a8e-9484-4b27-8c51-9db215bbd44f",
      "documentation": "Replaces the contents of a comment.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.UpdateComment",
      "responses": [
        {
          "uuid": "3a4bcf84-364e-42a7-a255-4d3c943aff2e",
          "body": "{\n  \"comment\": {\n    \"commentId\": \"\",\n    \"content\": \"\",\n    \"inReplyTo\": \"\",\n    \"creationDate\": \"{{faker 'date.recent' 365}}\",\n    \"lastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"authorArn\": \"\",\n    \"deleted\": {{faker 'random.boolean'}},\n    \"clientRequestToken\": \"\",\n    \"callerReactions\": [\n      \"\"\n    ],\n    \"reactionCounts\": {}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1e84336d-fe25-466d-b41b-da144f2ca0fc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "CommentContentRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "02fccd28-fd90-47c4-a852-d2798e413dea",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "CommentContentSizeLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "abd4eaec-7a3f-4e30-a44e-b91f45fc98af",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "CommentDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1cb475d7-cc82-40f6-a2f2-490762c45bd8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "CommentIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3c9f2d70-85c3-406f-aed6-930c33d31368",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidCommentIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6b36c12d-1679-444d-bbab-37d36df820ad",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "CommentNotCreatedByCallerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e1d0a568-0268-45f5-8f8a-d32e680e66f0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "CommentDeletedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "34610676-6f0d-44bf-9cea-c90042bee876",
      "documentation": "<p>Sets or changes the default branch name for the specified repository.</p> <note> <p>If you use this operation to change the default branch name to the current default branch name, a success message is returned even though the default branch did not change.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.UpdateDefaultBranch",
      "responses": [
        {
          "uuid": "3e0884e8-4471-4f81-9d10-d3d9b1f79339",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "466a45ff-f726-4972-bc7e-9c3c59fbf778",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "210ae691-dbb0-4510-a7f2-5de44d19cfd1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2b1724e4-3572-4343-b60c-12c389797841",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f0a776bc-8281-45fc-996f-52fa76c27fc0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "BranchNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0f436eb0-5b06-47ff-b807-3360a2aef9c7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidBranchNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ad9f71be-8f82-487a-af59-9e5cae8569ce",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "BranchDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "18db6fff-6a01-4f44-b949-22fb77d9ef38",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ade579bb-f282-4f56-9323-69ab67ed8f6a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "81ae5960-8cb6-4db5-90ea-0e224576dbe9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "70a9abed-7942-4b34-a5f5-c02e33d976df",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8160a0f3-70e5-4e47-8bda-373546fa471b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1972c0c4-8d12-4494-b8db-ace9e496152d",
      "documentation": "Updates the structure of an approval rule created specifically for a pull request. For example, you can change the number of required approvers and the approval pool for approvers. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.UpdatePullRequestApprovalRuleContent",
      "responses": [
        {
          "uuid": "f6b4f13e-8f85-4c72-a8b4-9504ae1abf81",
          "body": "{\n  \"approvalRule\": {\n    \"approvalRuleId\": \"\",\n    \"approvalRuleName\": \"\",\n    \"approvalRuleContent\": \"\",\n    \"ruleContentSha256\": \"\",\n    \"lastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"creationDate\": \"{{faker 'date.recent' 365}}\",\n    \"lastModifiedUser\": \"\",\n    \"originApprovalRuleTemplate\": {\n      \"approvalRuleTemplateId\": \"\",\n      \"approvalRuleTemplateName\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9eddb6dd-c149-4b21-b2ca-d596560154c3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "PullRequestDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ba7a3c99-61be-4c88-a1bc-6d2e90bc8316",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidPullRequestIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2b679e9e-dbe3-4562-99a8-554abf6e6805",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "PullRequestIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2d5aec8f-7623-4ed1-8c70-ed04b0f47f8c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "PullRequestAlreadyClosedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d7b7017b-4efd-40c0-ad9f-c364315e0b62",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ApprovalRuleNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "827da1d5-b3b5-4026-8c51-fa1d56db16a9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidApprovalRuleNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "45929faa-365b-431b-8384-39f81b3b8b94",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ApprovalRuleDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f67a0bb9-8f53-4560-a43a-ba8ec47ada5a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidRuleContentSha256Exception",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8588e086-136c-42eb-914d-28b2b235da0e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "ApprovalRuleContentRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6c219959-2e92-41c8-8f8e-42a463779ee6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidApprovalRuleContentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5313b871-3f62-46b9-812e-1da1c16e7bce",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "CannotModifyApprovalRuleFromTemplateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "46b2b81d-599b-426c-8c2a-876e7f33dd8d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1d9d59c8-da89-4c0e-9923-cf9e082328cd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "39013e83-02bf-41fa-8873-4d3d80565b0f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a247b30a-903b-4140-9ce2-fe56bc280801",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3628152e-15f1-4101-b43e-01c3790a74ff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 495,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f969c419-a71e-4233-a806-961e86ac4813",
      "documentation": "Updates the state of a user's approval on a pull request. The user is derived from the signed-in account when the request is made.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.UpdatePullRequestApprovalState",
      "responses": [
        {
          "uuid": "56d2c197-76aa-4fee-8990-9e269f5695a0",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "038e599f-58e4-4e7c-9d76-eeb2b8670cde",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "PullRequestDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6b93eef3-a02f-4a40-9bd4-71d28766992b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidPullRequestIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2aabaffc-bf86-457a-abdf-c79d122b8f1a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "PullRequestIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "512e68b1-ee4c-479c-b0e3-78d76e2d58f5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidRevisionIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5b34db71-4df3-411b-900a-0e27add46d10",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "RevisionIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bd6fcab6-9442-4c56-b300-12b69c077302",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidApprovalStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e542f50c-a56b-426a-9ecd-0cc4e22d2c82",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ApprovalStateRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a482814a-beb8-4d31-8f8f-3e0c2cac5488",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "PullRequestCannotBeApprovedByAuthorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "74a6ad70-d8c7-4019-9fa8-e300b26f9a75",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "RevisionNotCurrentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1506675f-9b50-4ac1-912f-6159202e00cb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "PullRequestAlreadyClosedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "954b4640-b441-423c-8325-9386f9e76d5d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "MaximumNumberOfApprovalsExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5aafb4cc-b414-4490-8d1f-2b090931ad6b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "73c47e04-0f4a-48c3-acd6-d922056134be",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "76fbd03f-bba5-47c8-9491-bc78182669c7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b91b675e-d1be-4203-b0f5-ef225894a09c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6ae1facf-d0be-4a65-8864-204f2b0fdbb5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 495,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b6041c1f-c757-4d04-8ae1-805e28ba7122",
      "documentation": "Replaces the contents of the description of a pull request.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.UpdatePullRequestDescription",
      "responses": [
        {
          "uuid": "86eabcfa-db91-4cbb-b23b-368acee8b544",
          "body": "{\n  \"pullRequest\": {\n    \"pullRequestId\": \"\",\n    \"title\": \"\",\n    \"description\": \"\",\n    \"lastActivityDate\": \"{{faker 'date.recent' 365}}\",\n    \"creationDate\": \"{{faker 'date.recent' 365}}\",\n    \"pullRequestStatus\": \"\",\n    \"authorArn\": \"\",\n    \"pullRequestTargets\": [\n      {\n        \"repositoryName\": \"\",\n        \"sourceReference\": \"\",\n        \"destinationReference\": \"\",\n        \"destinationCommit\": \"\",\n        \"sourceCommit\": \"\",\n        \"mergeBase\": \"\",\n        \"mergeMetadata\": {\n          \"isMerged\": {{faker 'random.boolean'}},\n          \"mergedBy\": \"\",\n          \"mergeCommitId\": \"\",\n          \"mergeOption\": \"\"\n        }\n      }\n    ],\n    \"clientRequestToken\": \"\",\n    \"revisionId\": \"\",\n    \"approvalRules\": [\n      {\n        \"approvalRuleId\": \"\",\n        \"approvalRuleName\": \"\",\n        \"approvalRuleContent\": \"\",\n        \"ruleContentSha256\": \"\",\n        \"lastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n        \"creationDate\": \"{{faker 'date.recent' 365}}\",\n        \"lastModifiedUser\": \"\",\n        \"originApprovalRuleTemplate\": {\n          \"approvalRuleTemplateId\": \"\",\n          \"approvalRuleTemplateName\": \"\"\n        }\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "046bd788-a6cc-4557-91c2-bb70bf22b6e0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "PullRequestDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "524acab2-927d-4581-ba3f-0091374ccda6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidPullRequestIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3d954d8e-7aac-4884-ba03-9ac555a7bd18",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "PullRequestIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "55ec4c01-0896-47ab-95b6-8b783d080201",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidDescriptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "519aac1a-af14-410b-b7aa-5fdc065cb52e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "PullRequestAlreadyClosedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3d4c5f24-27b0-4e85-a4eb-0077c18a15e7",
      "documentation": "Updates the status of a pull request. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.UpdatePullRequestStatus",
      "responses": [
        {
          "uuid": "9c5a35d6-330f-4279-993f-54eded53a594",
          "body": "{\n  \"pullRequest\": {\n    \"pullRequestId\": \"\",\n    \"title\": \"\",\n    \"description\": \"\",\n    \"lastActivityDate\": \"{{faker 'date.recent' 365}}\",\n    \"creationDate\": \"{{faker 'date.recent' 365}}\",\n    \"pullRequestStatus\": \"\",\n    \"authorArn\": \"\",\n    \"pullRequestTargets\": [\n      {\n        \"repositoryName\": \"\",\n        \"sourceReference\": \"\",\n        \"destinationReference\": \"\",\n        \"destinationCommit\": \"\",\n        \"sourceCommit\": \"\",\n        \"mergeBase\": \"\",\n        \"mergeMetadata\": {\n          \"isMerged\": {{faker 'random.boolean'}},\n          \"mergedBy\": \"\",\n          \"mergeCommitId\": \"\",\n          \"mergeOption\": \"\"\n        }\n      }\n    ],\n    \"clientRequestToken\": \"\",\n    \"revisionId\": \"\",\n    \"approvalRules\": [\n      {\n        \"approvalRuleId\": \"\",\n        \"approvalRuleName\": \"\",\n        \"approvalRuleContent\": \"\",\n        \"ruleContentSha256\": \"\",\n        \"lastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n        \"creationDate\": \"{{faker 'date.recent' 365}}\",\n        \"lastModifiedUser\": \"\",\n        \"originApprovalRuleTemplate\": {\n          \"approvalRuleTemplateId\": \"\",\n          \"approvalRuleTemplateName\": \"\"\n        }\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ccb6fe17-9474-4d97-9b2d-1dcc5385e719",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "PullRequestDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fb3f8e77-bb84-42b2-9993-a95bf5fd052a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidPullRequestIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "147c6eb2-bc55-4b91-a680-f2995de158a3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "PullRequestIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "199458a9-4ed5-4882-8531-83d8fd04b7f4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidPullRequestStatusUpdateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5fb185c6-3ed4-4837-ae21-1d0018a1e4ca",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidPullRequestStatusException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b630dfd9-93a2-4c89-a27d-1ab61c0a8059",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "PullRequestStatusRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5e68b3b1-5075-4a26-b7a6-3d7960da13d9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "99b9a90c-99d5-4bb6-ab60-2ac4f9c2afd7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "09e52c71-968f-4fcf-82fd-053f0ed23699",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9a72216e-fefb-4115-a500-2d43cffd5036",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "70cb1551-6c6a-42c8-a8ce-d50e388a1275",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d1ec01b2-d2e5-492f-a175-fdd4e87fbad4",
      "documentation": "Replaces the title of a pull request.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.UpdatePullRequestTitle",
      "responses": [
        {
          "uuid": "ed811b5c-7e77-4758-a189-db010cda5875",
          "body": "{\n  \"pullRequest\": {\n    \"pullRequestId\": \"\",\n    \"title\": \"\",\n    \"description\": \"\",\n    \"lastActivityDate\": \"{{faker 'date.recent' 365}}\",\n    \"creationDate\": \"{{faker 'date.recent' 365}}\",\n    \"pullRequestStatus\": \"\",\n    \"authorArn\": \"\",\n    \"pullRequestTargets\": [\n      {\n        \"repositoryName\": \"\",\n        \"sourceReference\": \"\",\n        \"destinationReference\": \"\",\n        \"destinationCommit\": \"\",\n        \"sourceCommit\": \"\",\n        \"mergeBase\": \"\",\n        \"mergeMetadata\": {\n          \"isMerged\": {{faker 'random.boolean'}},\n          \"mergedBy\": \"\",\n          \"mergeCommitId\": \"\",\n          \"mergeOption\": \"\"\n        }\n      }\n    ],\n    \"clientRequestToken\": \"\",\n    \"revisionId\": \"\",\n    \"approvalRules\": [\n      {\n        \"approvalRuleId\": \"\",\n        \"approvalRuleName\": \"\",\n        \"approvalRuleContent\": \"\",\n        \"ruleContentSha256\": \"\",\n        \"lastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n        \"creationDate\": \"{{faker 'date.recent' 365}}\",\n        \"lastModifiedUser\": \"\",\n        \"originApprovalRuleTemplate\": {\n          \"approvalRuleTemplateId\": \"\",\n          \"approvalRuleTemplateName\": \"\"\n        }\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8f92ebed-f488-47e3-b0a3-f72238c5294b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "PullRequestDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c3dbeebf-dd41-4a4b-a66b-377567a54cd0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidPullRequestIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "943816c2-49a1-4d5a-ba69-69d31b491e7c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "PullRequestIdRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "438be02a-5bf8-446e-9cd0-a1599ce08b9c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TitleRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f9cf4cfe-766e-4085-a025-f27cba1ad613",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidTitleException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3e7d7a0f-02b3-4753-89e9-15e7005f6553",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "PullRequestAlreadyClosedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "aaf7b2de-d859-4f77-bbf1-330992500adb",
      "documentation": "<p>Sets or changes the comment or description for a repository.</p> <note> <p>The description field for a repository accepts all HTML characters and all valid Unicode characters. Applications that do not HTML-encode the description and display it in a webpage can expose users to potentially malicious code. Make sure that you HTML-encode the description field in any application that uses this API to display the repository description on a webpage.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.UpdateRepositoryDescription",
      "responses": [
        {
          "uuid": "e39dfc02-9021-4718-a11f-b01eb01d8e17",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9140321e-cfe8-417e-abfd-9599b3894de9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d90e93c7-6907-41ee-b9b2-f57675d9a470",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f4e20c17-64f3-43f5-823c-40b920f14b1a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d0ed1b55-8af2-40ba-a760-835533180c6b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidRepositoryDescriptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "454a3066-4970-45eb-9e49-72727994ee06",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "EncryptionIntegrityChecksFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f4be5130-87c9-46d7-a60d-6b5fa53a9a10",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "EncryptionKeyAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "216b1f81-3674-4b22-a321-9993076d2d6a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "EncryptionKeyDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2804669f-2ae6-4124-9054-018069c43dbc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "EncryptionKeyNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4f75a7e7-58ba-4423-9100-a880661cc41a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "EncryptionKeyUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8fb3100d-b236-4af0-92b8-f4e8effcc323",
      "documentation": "Renames a repository. The repository name must be unique across the calling AWS account. Repository names are limited to 100 alphanumeric, dash, and underscore characters, and cannot include certain characters. The suffix .git is prohibited. For more information about the limits on repository names, see <a href=\"https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html\">Limits</a> in the AWS CodeCommit User Guide.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeCommit_20150413.UpdateRepositoryName",
      "responses": [
        {
          "uuid": "3576e965-2f78-4173-9aec-864d40fad4ad",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e716ed13-b6b1-47de-bdf0-b795fd2af26b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "RepositoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "51207083-2c51-407e-8aa9-44b5f6bc94b8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "RepositoryNameExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7cfd05e9-6f84-4e84-afb4-c49a155aa73a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "RepositoryNameRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a529fdf9-e31e-457c-9182-7489980b4363",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidRepositoryNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}