{
  "uuid": "3b5c5eb2-4f63-4421-9fe0-b247ae6fc2ee",
  "lastMigration": 19,
  "name": "Postman API",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "d1f04d02-b132-4007-bd40-3f78a90c31c3",
      "documentation": "Get all APIs",
      "method": "get",
      "endpoint": "apis",
      "responses": [
        {
          "uuid": "85655a76-1105-4d4f-9fae-50597c133637",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "eebd7d62-7f5e-4dd0-af30-1ebdbf999658",
      "documentation": "Create API",
      "method": "post",
      "endpoint": "apis",
      "responses": [
        {
          "uuid": "fbb2c86f-7b9e-4e86-982f-13ab8415efe3",
          "body": "{\n  \"api\": {\n    \"createdAt\": \"2019-02-12 19:34:49\",\n    \"createdBy\": \"5665\",\n    \"description\": \"This is supposed to handle markdown *descriptions*.\",\n    \"id\": \"387c2863-6ee3-4a56-8210-225f774edade\",\n    \"name\": \"Sync API\",\n    \"summary\": \"This is a summary\",\n    \"updatedAt\": \"2019-02-12 19:34:49\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Create API",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0b855323-9ed7-463c-bf95-273c6dc01440",
      "documentation": "Delete an API",
      "method": "delete",
      "endpoint": "apis/:apiId",
      "responses": [
        {
          "uuid": "44f9d596-4e3c-4568-831f-c5a329a1f6a1",
          "body": "{\n  \"api\": {\n    \"id\": \"387c2863-6ee3-4a56-8210-225f774edade\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Delete an API",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f94c6f2b-b252-40a9-9a1e-82a8fd23c2cc",
      "documentation": "Single API",
      "method": "get",
      "endpoint": "apis/:apiId",
      "responses": [
        {
          "uuid": "13a758c8-4031-49e6-9dd2-5218fa1284d0",
          "body": "{\n  \"api\": {\n    \"createdAt\": \"2019-02-12 19:34:49\",\n    \"createdBy\": \"5665\",\n    \"description\": \"This is a description.This is a description.\",\n    \"id\": \"387c2863-6ee3-4a56-8210-225f774edade\",\n    \"name\": \"Sync API\",\n    \"summary\": \"This is a summary\",\n    \"updatedAt\": \"2019-02-12 19:34:49\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Get single API",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "73c0e1fd-34ab-4bbb-838d-b64f7e98098d",
      "documentation": "Update an API",
      "method": "put",
      "endpoint": "apis/:apiId",
      "responses": [
        {
          "uuid": "75e75bd1-ac96-4942-aa80-a71179bf6305",
          "body": "{\n  \"api\": {\n    \"createdAt\": \"2019-02-12 19:34:49\",\n    \"createdBy\": \"5665\",\n    \"description\": \"This is a description.\",\n    \"id\": \"387c2863-6ee3-4a56-8210-225f774edade\",\n    \"name\": \"Sync API\",\n    \"summary\": \"This is a summary\",\n    \"updatedAt\": \"2019-02-12 19:34:49\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Update an API",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "46eb6ceb-cd17-45d2-ba03-beced6f7c536",
      "documentation": "Get All API Versions",
      "method": "get",
      "endpoint": "apis/:apiId/versions",
      "responses": [
        {
          "uuid": "5308a429-1f29-49f3-9d88-00d6d0ca72d8",
          "body": "{\n  \"versions\": [\n    {\n      \"createdAt\": \"2019-02-12 19:34:49\",\n      \"createdBy\": \"5665\",\n      \"description\": \"Description\",\n      \"id\": \"024660a6-c837-46ca-91d8-7e8dd7c669de\",\n      \"name\": \"0.1\",\n      \"summary\": \"Summary\",\n      \"updatedAt\": \"2019-02-12 19:34:49\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Get All API versions",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d89b4998-613f-4483-87f4-636e1d5184f4",
      "documentation": "Create API Version",
      "method": "post",
      "endpoint": "apis/:apiId/versions",
      "responses": [
        {
          "uuid": "32dc2b68-b513-4cdf-b259-9ef6a1521c1a",
          "body": "{\n  \"version\": {\n    \"api\": \"2b95d07c-8379-4bd1-924f-e7e1af185284\",\n    \"id\": \"d71cf403-c549-4c7c-9dc6-a6a105acf67c\",\n    \"name\": \"1.0\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Create API version",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f24daca4-5ab6-4791-9532-ecd42d91cdbb",
      "documentation": "Delete an API Version",
      "method": "delete",
      "endpoint": "apis/:apiId/versions/:apiVersionId",
      "responses": [
        {
          "uuid": "f69dd88f-f6a0-4669-9342-7c735348387c",
          "body": "{\n  \"version\": {\n    \"id\": \"03c17f53-7e2e-427d-b55a-006b244f29ff\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Delete an API version",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5b641bd7-cc7a-479f-aa9c-8364102c05a9",
      "documentation": "Get an API Version",
      "method": "get",
      "endpoint": "apis/:apiId/versions/:apiVersionId",
      "responses": [
        {
          "uuid": "90f6c33c-422a-4239-b0c3-aa734b36e5f9",
          "body": "{\n  \"version\": {\n    \"api\": \"06e41ca3-8bea-4bc5-a726-70338b9f1940\",\n    \"createdAt\": \"2019-07-21T16:31:15.000Z\",\n    \"createdBy\": \"5665\",\n    \"id\": \"03c17f53-7e2e-427d-b55a-006b244f29ff\",\n    \"name\": \"0.1\",\n    \"schema\": [\n      \"3484cd1e-e00d-4c39-aea4-539663afe898\"\n    ],\n    \"updatedAt\": \"2019-07-21T16:31:15.000Z\",\n    \"updatedBy\": \"5665\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Get an API version",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ac0d95ae-2954-4ac7-99e2-4742769482e5",
      "documentation": "Update an API Version",
      "method": "put",
      "endpoint": "apis/:apiId/versions/:apiVersionId",
      "responses": [
        {
          "uuid": "686c967a-03c0-453a-9ba6-f823ec0644d7",
          "body": "{\n  \"version\": {\n    \"api\": \"2b95d07c-8379-4bd1-924f-e7e1af185284\",\n    \"createdAt\": \"2019-07-26T11:24:15.000Z\",\n    \"createdBy\": \"12\",\n    \"id\": \"d71cf403-c549-4c7c-9dc6-a6a105acf67c\",\n    \"name\": \"2.0\",\n    \"updatedAt\": \"2019-08-09T09:27:36.000Z\",\n    \"updatedBy\": \"5665\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Update an API version",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "91b5eb7d-fc2d-4b50-bf29-c0700f1dcb26",
      "documentation": "Get contract test relations",
      "method": "get",
      "endpoint": "apis/:apiId/versions/:apiVersionId/contracttest",
      "responses": [
        {
          "uuid": "3a2ce7a0-6cdb-4a71-8987-5e96ef3f1cd3",
          "body": "{\n  \"contracttest\": [\n    {\n      \"collectionId\": \"7732157-a8bcd149-2b01-4b4c-8c14-c7d05be77745\",\n      \"id\": \"2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2\",\n      \"name\": \"C test\",\n      \"updatedAt\": \"2019-08-29T10:18:11.000Z\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Get contract test relations",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "68347f38-9bfe-4512-bd34-628146c7ebd0",
      "documentation": "Get  documentation relations",
      "method": "get",
      "endpoint": "apis/:apiId/versions/:apiVersionId/documentation",
      "responses": [
        {
          "uuid": "302e3afc-2b5a-45b5-b9de-ffbb255bb00e",
          "body": "{\n  \"documentation\": [\n    {\n      \"collectionId\": \"7732157-a8bcd149-2b01-4b4c-8c14-c7d05be77745\",\n      \"id\": \"2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2\",\n      \"name\": \"C test\",\n      \"updatedAt\": \"2019-08-29T10:18:11.000Z\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Get documentation relations",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5b95bd7d-2482-4fc6-a5a5-60358b298c1c",
      "documentation": "Get environment relations",
      "method": "get",
      "endpoint": "apis/:apiId/versions/:apiVersionId/environment",
      "responses": [
        {
          "uuid": "97f9b86c-7418-47ef-93bd-044aff60174d",
          "body": "{\n  \"environment\": [\n    {\n      \"id\": \"2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2\",\n      \"name\": \"C test\",\n      \"updatedAt\": \"2019-08-29T10:18:11.000Z\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Get environment relations",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "956a954c-8acf-434c-9010-1dfa3ed98269",
      "documentation": "Get integration test relations",
      "method": "get",
      "endpoint": "apis/:apiId/versions/:apiVersionId/integrationtest",
      "responses": [
        {
          "uuid": "8399ff94-0c83-4203-b3e9-a1a3af4f1f8d",
          "body": "{\n  \"integrationtest\": [\n    {\n      \"collectionId\": \"7732157-a8bcd149-2b01-4b4c-8c14-c7d05be77745\",\n      \"id\": \"2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2\",\n      \"name\": \"C test\",\n      \"updatedAt\": \"2019-08-29T10:18:11.000Z\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Get integration test relations",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b747953f-d940-4670-a93f-3e1e6859c9c1",
      "documentation": "Get monitor relations",
      "method": "get",
      "endpoint": "apis/:apiId/versions/:apiVersionId/monitor",
      "responses": [
        {
          "uuid": "5c6d282a-2128-47a2-b994-82d202024d71",
          "body": "{\n  \"monitor\": [\n    {\n      \"id\": \"2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2\",\n      \"monitorId\": \"7732157-a8bcd149-2b01-4b4c-8c14-c7d05be77745\",\n      \"name\": \"C test\",\n      \"updatedAt\": \"2019-08-29T10:18:11.000Z\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Get monitor relations",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3ca424ce-c52c-4c97-80af-fc5d8de69425",
      "documentation": "Get linked relations",
      "method": "get",
      "endpoint": "apis/:apiId/versions/:apiVersionId/relations",
      "responses": [
        {
          "uuid": "cf373b52-8934-4d81-9bdf-b040555ca341",
          "body": "{\n  \"relations\": {\n    \"contracttest\": {\n      \"2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2\": {\n        \"id\": \"2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2\",\n        \"name\": \"C test\",\n        \"updatedAt\": \"2019-08-29T10:18:11.000Z\"\n      }\n    },\n    \"integrationtest\": {\n      \"521b0486-ab91-4d3a-9189-43c9380a0533\": {\n        \"id\": \"521b0486-ab91-4d3a-9189-43c9380a0533\",\n        \"name\": \"C1\",\n        \"updatedAt\": \"2019-08-29T11:40:39.000Z\"\n      },\n      \"a236b715-e682-460b-97b6-c1db24f7612e\": {\n        \"id\": \"a236b715-e682-460b-97b6-c1db24f7612e\",\n        \"name\": \"C test\",\n        \"updatedAt\": \"2019-08-29T10:18:11.000Z\"\n      }\n    },\n    \"mock\": {\n      \"4ccd755f-2c80-481b-a262-49b55e12f5e1\": {\n        \"id\": \"4ccd755f-2c80-481b-a262-49b55e12f5e1\",\n        \"name\": \"Mock\",\n        \"updatedAt\": \"2019-08-20T10:18:13.000Z\",\n        \"url\": \"https://4ccd755f-2c80-481b-a262-49b55e12f5e1.mock-beta.pstmn.io\"\n      }\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Get linked relations for an API version",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e301e68a-7926-42ee-a53f-deeb98677ce3",
      "documentation": "Create relations",
      "method": "post",
      "endpoint": "apis/:apiId/versions/:apiVersionId/relations",
      "responses": [
        {
          "uuid": "ba90f280-bf1c-4667-a428-0f3452a25f6d",
          "body": "{\n  \"contracttest\": [\n    \"5bcece87-ca4b-4e75-a967-2a6845626164\"\n  ],\n  \"documentation\": [\n    \"2084eba6-a17b-4751-8f03-ea60f30ba19c\"\n  ],\n  \"testsuite\": [\n    \"e525fa71-035e-4620-acda-ce878524f1e7\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Create multiple relations from existing collections",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d1d14ad6-d401-481a-8f76-8b79bd7fd5a8",
      "documentation": "Create Schema",
      "method": "post",
      "endpoint": "apis/:apiId/versions/:apiVersionId/schemas",
      "responses": [
        {
          "uuid": "ba589a5d-1125-45d0-b7ac-945c9868013a",
          "body": "{\n  \"schema\": {\n    \"apiVersion\": \"ad810c39-df60-434e-a76f-a2192cd8d81f\",\n    \"createdAt\": \"2019-02-12 19:34:49\",\n    \"createdBy\": \"5665\",\n    \"id\": \"e3b3a0b7-34d5-4fc5-83e0-118bd9e8c822\",\n    \"language\": \"yaml\",\n    \"type\": \"openapi3\",\n    \"updateBy\": \"5665\",\n    \"updatedAt\": \"2019-02-12 19:34:49\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Create schema",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "17f793d6-03ef-4587-a34c-232efca2b503",
      "documentation": "Get Schema",
      "method": "get",
      "endpoint": "apis/:apiId/versions/:apiVersionId/schemas/:schemaId",
      "responses": [
        {
          "uuid": "7861a097-80bf-4b6b-8437-9ea069c6d950",
          "body": "{\n  \"schema\": {\n    \"apiVersion\": \"ad810c39-df60-434e-a76f-a2192cd8d81f\",\n    \"createdAt\": \"2019-02-12 19:34:49\",\n    \"createdBy\": \"5665\",\n    \"id\": \"e3b3a0b7-34d5-4fc5-83e0-118bd9e8c822\",\n    \"language\": \"yaml\",\n    \"type\": \"openapi3\",\n    \"updateBy\": \"5665\",\n    \"updatedAt\": \"2019-02-12 19:34:49\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Get schema",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4379788d-781c-413a-96a6-0997542b3f5a",
      "documentation": "Update Schema",
      "method": "put",
      "endpoint": "apis/:apiId/versions/:apiVersionId/schemas/:schemaId",
      "responses": [
        {
          "uuid": "58ffac01-dbe9-4c6a-926d-909d2001e3f3",
          "body": "{\n  \"schema\": {\n    \"apiVersion\": \"ad810c39-df60-434e-a76f-a2192cd8d81f\",\n    \"createdAt\": \"2019-02-12 19:34:49\",\n    \"createdBy\": \"5665\",\n    \"id\": \"e3b3a0b7-34d5-4fc5-83e0-118bd9e8c822\",\n    \"language\": \"yaml\",\n    \"type\": \"openapi3\",\n    \"updateBy\": \"5665\",\n    \"updatedAt\": \"2019-02-12 19:34:49\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Update schema",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0e0673b9-7382-4574-ba2a-c4dd5b015c80",
      "documentation": "Create collection from schema",
      "method": "post",
      "endpoint": "apis/:apiId/versions/:apiVersionId/schemas/:schemaId/collections",
      "responses": [
        {
          "uuid": "4b38dd4e-d5fd-4207-9749-8cb42f605a45",
          "body": "{\n  \"collection\": {\n    \"id\": \"e6b0d46a-8722-4f42-ab86-f5f473187ddf\",\n    \"uid\": \"112098-e6b0d46a-8722-4f42-ab86-f5f473187ddf\"\n  },\n  \"relations\": [\n    {\n      \"id\": \"4b40f06a-5a6a-448f-bfcd-a6dbcb68da22\",\n      \"type\": \"contracttest\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Create collection from schema",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e5078753-5717-4839-828c-fd4a3d64c1d3",
      "documentation": "Get test suite relations",
      "method": "get",
      "endpoint": "apis/:apiId/versions/:apiVersionId/testsuite",
      "responses": [
        {
          "uuid": "eed81e47-de01-4a77-b745-c929d796d832",
          "body": "{\n  \"testsuite\": [\n    {\n      \"collectionId\": \"7732157-a8bcd149-2b01-4b4c-8c14-c7d05be77745\",\n      \"id\": \"2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2\",\n      \"name\": \"C test\",\n      \"updatedAt\": \"2019-08-29T10:18:11.000Z\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Get test suite relations",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f3445483-68c2-4414-861e-188f3012c0d9",
      "documentation": "Sync relations with schema",
      "method": "put",
      "endpoint": "apis/:apiId/versions/:apiVersionId/:entityType/:entityId/syncWithSchema",
      "responses": [
        {
          "uuid": "97115931-7083-4d13-8f1d-6589f0567b3b",
          "body": "{\n  \"success\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful sync",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "61876e1e-f2d5-49db-8028-a7a914d91604",
          "body": "{\n  \"error\": {\n    \"message\": \"Unable to validate. Only the OpenAPI 3.0 schema format is supported.\",\n    \"name\": \"validationFailed\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Failed to sync",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a5206e20-0513-49f9-bcef-f0ef10fceb23",
      "documentation": "All Collections",
      "method": "get",
      "endpoint": "collections",
      "responses": [
        {
          "uuid": "c4166d73-dd86-427c-a249-9839af6f37f4",
          "body": "{\n  \"collections\": [\n    {\n      \"id\": \"dac5eac9-148d-a32e-b76b-3edee9da28f7\",\n      \"name\": \"Cloud API\",\n      \"owner\": \"631643\",\n      \"uid\": \"631643-dac5eac9-148d-a32e-b76b-3edee9da28f7\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Valid Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ec56d126-d8a7-45fb-aa74-2c6a4af91bce",
      "documentation": "Create Collection",
      "method": "post",
      "endpoint": "collections",
      "responses": [
        {
          "uuid": "77fde17a-6d89-4a4d-9d34-211c5d090369",
          "body": "{\n  \"collection\": {\n    \"id\": \"2412a72c-1d8e-491b-aced-93809c0e94e9\",\n    \"name\": \"Sample Collection\",\n    \"uid\": \"5852-2412a72c-1d8e-491b-aced-93809c0e94e9\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Create Collection in a Workspace",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5b3b3353-e97f-449b-bdff-eb84de1ec457",
          "body": "{\n  \"error\": {\n    \"message\": \"Missing required property: name at info\",\n    \"name\": \"malformedRequestError\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Malformed Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1d4baa0a-b569-4acc-8ce3-7c4e5702c382",
      "documentation": "Create a Fork",
      "method": "post",
      "endpoint": "collections/fork/:collection_uid",
      "responses": [
        {
          "uuid": "6564295e-bdae-4089-927a-fb41323567d7",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fdc973a1-298c-464d-a568-658ee012f4b6",
      "documentation": "Merge a Fork",
      "method": "post",
      "endpoint": "collections/merge",
      "responses": [
        {
          "uuid": "3d435bad-79d6-42ff-881f-698ee65f736b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ea10dfa0-081a-49f5-a5ba-af0674d2b6d3",
      "documentation": "Delete Collection",
      "method": "delete",
      "endpoint": "collections/:collection_uid",
      "responses": [
        {
          "uuid": "68d9c219-b215-4135-bee0-8c15c8067f9b",
          "body": "{\n  \"collection\": {\n    \"id\": \"a14c6da7-afba-4a84-bf22-4febbaaced6c\",\n    \"uid\": \"5852-a14c6da7-afba-4a84-bf22-4febbaaced6c\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Collection Deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7df6314b-bc8f-492e-beda-ef86c1d08d5d",
          "body": "{\n  \"error\": {\n    \"details\": {\n      \"id\": \"a14c6da7-afba-4a84-bf22-4febbaaced6c\",\n      \"item\": \"collection\"\n    },\n    \"message\": \"The specified item does not exist.\",\n    \"name\": \"instanceNotFoundError\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Collection Not Found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6247f0b0-983d-40dd-a322-9586f02e8772",
      "documentation": "Single Collection ",
      "method": "get",
      "endpoint": "collections/:collection_uid",
      "responses": [
        {
          "uuid": "e9a911a7-2f65-4752-a20e-fa59d983618b",
          "body": "{\n  \"collection\": {\n    \"info\": {\n      \"_postman_id\": \"f2e66c2e-5297-e4a5-739e-20cbb90900e3\",\n      \"description\": \"This is a sample collection that makes a tiny request to Postman Echo service to get the list of request headers sent by a HTTP client.\",\n      \"name\": \"Sample Collection\",\n      \"schema\": \"https://schema.getpostman.com/json/collection/v2.0.0/collection.json\"\n    },\n    \"item\": [\n      {\n        \"event\": [\n          {\n            \"listen\": \"test\",\n            \"script\": {\n              \"exec\": \"var responseJSON;\\ntry {\\n    tests[\\\"Body contains headers\\\"] = responseBody.has(\\\"headers\\\");\\n    responseJSON = JSON.parse(responseBody);\\n    tests[\\\"Header contains host\\\"] = \\\"host\\\" in responseJSON.headers;\\n    tests[\\\"Header contains test parameter sent as part of request header\\\"] = \\\"my-sample-header\\\" in responseJSON.headers;\\n}\\ncatch (e) { }\\n\\n\\n\\n\",\n              \"type\": \"text/javascript\"\n            }\n          }\n        ],\n        \"id\": \"82ee981b-e19f-962a-401e-ea34ebfb4848\",\n        \"name\": \"Request Headers\",\n        \"request\": {\n          \"body\": {\n            \"formdata\": [\n              \"\"\n            ],\n            \"mode\": \"formdata\"\n          },\n          \"description\": \"\",\n          \"header\": [\n            {\n              \"description\": \"\",\n              \"key\": \"my-sample-header\",\n              \"value\": \"Lorem ipsum dolor sit amet\"\n            }\n          ],\n          \"method\": \"GET\",\n          \"url\": \"https://echo.getpostman.com/headers\"\n        },\n        \"response\": [\n          \"\"\n        ]\n      }\n    ],\n    \"variables\": [\n      \"\"\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Valid Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b0aff715-b703-4bb1-8903-81045dc3d9ac",
      "documentation": "Update Collection",
      "method": "put",
      "endpoint": "collections/:collection_uid",
      "responses": [
        {
          "uuid": "2c22f4f7-9d07-4d3a-b090-4db4bf530c05",
          "body": "{\n  \"collection\": {\n    \"id\": \"1d3daef4-2037-4584-ab86-bafd8c8f8a55\",\n    \"name\": \"Sample Collection\",\n    \"uid\": \"5852-1d3daef4-2037-4584-ab86-bafd8c8f8a55\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Collection Updated",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "933f8c11-5f4c-4e02-8449-29f9c76ba918",
          "body": "{\n  \"error\": {\n    \"message\": \"The collection ID in the path does not match the collection ID in the request body.\",\n    \"name\": \"collectionMismatchError\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Collection ID Mismatch",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ad7afa18-9806-4b8e-b385-305899e2567f",
          "body": "{\n  \"error\": {\n    \"message\": \"You do not have enough permissions to perform this action.\",\n    \"name\": \"forbiddenError\"\n  }\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "Not Enough Permissions",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "001293ca-da04-4af1-a62b-cae32963185f",
          "body": "{\n  \"error\": {\n    \"details\": {\n      \"id\": \"1d3daef4-2037-4584-ab86-bafd8c8f8a54\",\n      \"item\": \"collection\"\n    },\n    \"message\": \"The specified item does not exist.\",\n    \"name\": \"instanceNotFoundError\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Collection Not Found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "395b2de6-6769-4f2a-9790-54ce4384361c",
      "documentation": "All Environments",
      "method": "get",
      "endpoint": "environments",
      "responses": [
        {
          "uuid": "c1b1fcdf-be83-4da3-ac22-2c59142448d3",
          "body": "{\n  \"environments\": [\n    {\n      \"id\": \"357668d2-84f1-2264-438b-113095359f80\",\n      \"name\": \"Postman Cloud API\",\n      \"owner\": \"631643\",\n      \"uid\": \"631643-357668d2-84f1-2264-438b-113095359f80\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Valid Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a45b19bc-0aa5-4369-a83c-d0a006d05247",
      "documentation": "Create Environment",
      "method": "post",
      "endpoint": "environments",
      "responses": [
        {
          "uuid": "7b9dab54-b066-4aa0-99df-78270dce9af2",
          "body": "{\n  \"environment\": {\n    \"id\": \"f158266e-306b-4702-a2b9-e4ede7878b7a\",\n    \"name\": \"Sample Environment Name (required)\",\n    \"uid\": \"5665-f158266e-306b-4702-a2b9-e4ede7878b7a\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "084c4f8c-730d-4f98-8fdc-aa1f20c60435",
          "body": "{\n  \"error\": {\n    \"message\": \"Missing required property: environment\",\n    \"name\": \"malformedRequestError\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Failure Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "596da544-16ac-40aa-b982-aab3c59ccd52",
      "documentation": "Delete Environment",
      "method": "delete",
      "endpoint": "environments/:environment_uid",
      "responses": [
        {
          "uuid": "c121e8f7-e672-4bb0-a162-1480d483bd1e",
          "body": "{\n  \"environment\": {\n    \"id\": \"4dfb28a4-9a6c-4ce4-b31a-17c26a8b2cce\",\n    \"uid\": \"5852-4dfb28a4-9a6c-4ce4-b31a-17c26a8b2cce\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Environment Deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e7efb2fb-d469-4b14-87b8-520ee4fab582",
          "body": "{\n  \"error\": {\n    \"message\": \"The specified environment does not exist.\",\n    \"name\": \"instanceNotFoundError\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Environment Not Found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f735f0f8-3c4c-4bc2-90ed-ae6287123662",
      "documentation": "Single Environment",
      "method": "get",
      "endpoint": "environments/:environment_uid",
      "responses": [
        {
          "uuid": "e5d7f151-d20d-4758-86dc-5a9ec3808006",
          "body": "{\n  \"environment\": {\n    \"id\": \"84a119b6-f4b1-9120-5f11-a73b17818d70\",\n    \"name\": \"Postman Cloud API.template\",\n    \"values\": [\n      {\n        \"enabled\": true,\n        \"hovered\": {{faker 'random.boolean'}},\n        \"key\": \"postman_api_key\",\n        \"type\": \"text\",\n        \"value\": \"\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Valid Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3a88bf53-7740-440d-87fc-64d5699af3a7",
      "documentation": "Update Environment",
      "method": "put",
      "endpoint": "environments/:environment_uid",
      "responses": [
        {
          "uuid": "7a9b234d-1894-4d98-95f0-e3269a73a2cd",
          "body": "{\n  \"environment\": {\n    \"id\": \"357668d2-84f1-2264-438b-113095359f80\",\n    \"name\": \"New Name\",\n    \"uid\": \"631643-357668d2-84f1-2264-438b-113095359f80\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "90fe0d4a-2845-4bbe-b665-511639b50ae4",
          "body": "{\n  \"error\": {\n    \"message\": \"Invalid type: null (expected object) at environment.values.0\",\n    \"name\": \"malformedRequestError\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Failure Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "18da39bf-3c68-4b39-b5f1-0e0ee6a4ad99",
      "documentation": "Import exported data",
      "method": "post",
      "endpoint": "import/exported",
      "responses": [
        {
          "uuid": "dad3188c-e52b-4a6a-b9c2-d7d4ea5febd2",
          "body": "{\n  \"collections\": [\n    {\n      \"id\": \"b31be584-1b1e-4444-b581-761edf88fe77\",\n      \"name\": \"Swagger Petstore\",\n      \"uid\": \"2282-b31be584-1b1e-4444-b581-761edf88fe77\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success: Import to a specific workspace with workspace ID passed as a query parameter",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2e1d85ad-91f1-43f2-8b89-b8a54a3f8fc2",
          "body": "{\n  \"error\": {\n    \"details\": {\n      \"param\": \"type\"\n    },\n    \"message\": \"The request body is missing a value for the type parameter. Check your request and try again.\",\n    \"name\": \"paramMissingError\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Error: Param Missing",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dccaf4a8-754b-4d84-9dcc-6b53fc07dd4c",
      "documentation": "Import external API specification",
      "method": "post",
      "endpoint": "import/openapi",
      "responses": [
        {
          "uuid": "6da6cb45-719e-47f3-8ea1-f71f6f527bad",
          "body": "{\n  \"collections\": [\n    {\n      \"id\": \"b31be584-1b1e-4444-b581-761edf88fe77\",\n      \"name\": \"Swagger Petstore\",\n      \"uid\": \"2282-b31be584-1b1e-4444-b581-761edf88fe77\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success: Import to a specific workspace with workspace ID passed as a query parameter",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cf368b61-dda2-4a66-8707-fa8e06c01ddd",
          "body": "{\n  \"error\": {\n    \"details\": {\n      \"param\": \"type\"\n    },\n    \"message\": \"The request body is missing a value for the type parameter. Check your request and try again.\",\n    \"name\": \"paramMissingError\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Error: Param Missing",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4f2a06d4-f2cb-4858-8edb-cb30d0515b57",
      "documentation": "API Key Owner",
      "method": "get",
      "endpoint": "me",
      "responses": [
        {
          "uuid": "af5b71e7-a5aa-4525-bedb-010f43c28e68",
          "body": "{\n  \"operations\": [\n    {\n      \"limit\": 1000000,\n      \"name\": \"mock_usage\",\n      \"overage\": {{faker 'random.number'}},\n      \"usage\": 2382\n    }\n  ],\n  \"user\": {\n    \"avatar\": \"https://www.gravatar.com/avatar/e1f3994f2632af3d1c8c2dcc168a10e6\",\n    \"email\": \"janedoe@example.com\",\n    \"fullName\": \"Jane Doe\",\n    \"id\": \"631643\",\n    \"isPublic\": {{faker 'random.boolean'}},\n    \"username\": \"janedoe\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Valid Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "21ed7ae9-b13e-4b33-8918-b3ecc2eb4916",
      "documentation": "All Mocks",
      "method": "get",
      "endpoint": "mocks",
      "responses": [
        {
          "uuid": "bd30d01d-8727-4a2e-bf0d-eb137e83972c",
          "body": "{\n  \"mocks\": [\n    {\n      \"collection\": \"1679925-39fee52f-b806-3ffa-1173-00a6f5b183dc\",\n      \"environment\": \"1679925-0b9e9f15-3208-a2b1-22e0-d58392f01524\",\n      \"id\": \"0fca2246-c108-41f5-8454-cc032def329f\",\n      \"mockUrl\": \"https://0fca2246-c108-41f5-8454-cc032def329f.mock.pstmn.io\",\n      \"owner\": \"1679925\",\n      \"uid\": \"1679925-0fca2246-c108-41f5-8454-cc032def329f\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5c955acb-86c7-459f-832d-700e4c6e12d0",
      "documentation": "Create Mock",
      "method": "post",
      "endpoint": "mocks",
      "responses": [
        {
          "uuid": "c461e78f-3647-446d-a694-cb41784b1576",
          "body": "{\n  \"mock\": {\n    \"collection\": \"1679925-39fee52f-b806-3ffa-1173-00a6f5b183dc\",\n    \"environment\": \"1679925-0b9e9f15-3208-a2b1-22e0-d58392f01524\",\n    \"id\": \"0fca2246-c108-41f5-8454-cc032def329f\",\n    \"mockUrl\": \"https://0fca2246-c108-41f5-8454-cc032def329f.mock.pstmn.io\",\n    \"owner\": \"1679925\",\n    \"uid\": \"1679925-0fca2246-c108-41f5-8454-cc032def329f\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c8a33ff5-24ca-418d-acba-4457e5370f77",
      "documentation": "Delete Mock",
      "method": "delete",
      "endpoint": "mocks/:mock_uid",
      "responses": [
        {
          "uuid": "dfe90e2e-3a81-43a5-be91-26e8e48f0f1e",
          "body": "{\n  \"mock\": {\n    \"id\": \"0fca2246-c108-41f5-8454-cc032def329f\",\n    \"uid\": \"1679925-0fca2246-c108-41f5-8454-cc032def329f\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cb5e7971-a12b-4c57-ab46-208ec4794043",
      "documentation": "Single Mock",
      "method": "get",
      "endpoint": "mocks/:mock_uid",
      "responses": [
        {
          "uuid": "bf80f7ef-239d-4bc0-9b0d-091e7ef9b43a",
          "body": "{\n  \"mock\": {\n    \"collection\": \"1679925-39fee52f-b806-3ffa-1173-00a6f5b183dc\",\n    \"environment\": \"1679925-0b9e9f15-3208-a2b1-22e0-d58392f01524\",\n    \"id\": \"0fca2246-c108-41f5-8454-cc032def329f\",\n    \"mockUrl\": \"https://0fca2246-c108-41f5-8454-cc032def329f.mock.pstmn.io\",\n    \"owner\": \"1679925\",\n    \"uid\": \"1679925-0fca2246-c108-41f5-8454-cc032def329f\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "51a396ac-0937-4dc3-a14c-511cacf28176",
      "documentation": "Update Mock",
      "method": "put",
      "endpoint": "mocks/:mock_uid",
      "responses": [
        {
          "uuid": "1401894f-80f6-4e13-80c9-cb519bf7b0e1",
          "body": "{\n  \"mock\": {\n    \"collection\": \"11582779-fd6797e2-de6b-4699-975c-85290e4c2499\",\n    \"config\": {\n      \"headers\": [\n        \"\"\n      ],\n      \"matchBody\": {{faker 'random.boolean'}},\n      \"matchQueryParams\": true,\n      \"matchWildcards\": true\n    },\n    \"environment\": \"11582779-ac1b6608-deb7-4c05-9d48-ee775aabfc19\",\n    \"id\": \"06040138-dd6b-4cce-9a02-7e1c1ab59723\",\n    \"mockUrl\": \"https://06040138-dd6b-4cce-9a02-7e1c1ab59723.mock.pstmn.io\",\n    \"name\": \"My Mock Server\",\n    \"owner\": \"11582779\",\n    \"uid\": \"11582779-06040138-dd6b-4cce-9a02-7e1c1ab59723\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "success Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7708b7de-3b5f-4960-8570-64b56178d51f",
      "documentation": "Publish Mock",
      "method": "post",
      "endpoint": "mocks/:mock_uid/publish",
      "responses": [
        {
          "uuid": "2db87897-33dd-4701-a0d1-6d7d46b2072e",
          "body": "{\n  \"mock\": {\n    \"id\": \"06040138-dd6b-4cce-9a02-7e1c1ab59723\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d42f47c9-2e81-4d75-bce8-f1a2a338387f",
      "documentation": "Unpublish Mock",
      "method": "delete",
      "endpoint": "mocks/:mock_uid/unpublish",
      "responses": [
        {
          "uuid": "47045580-e34f-4122-98b7-693b46745173",
          "body": "{\n  \"mock\": {\n    \"id\": \"06040138-dd6b-4cce-9a02-7e1c1ab59723\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "739004ab-e58d-4c94-842a-d81d1dac89c0",
      "documentation": "All Monitors",
      "method": "get",
      "endpoint": "monitors",
      "responses": [
        {
          "uuid": "3016d14a-86f2-41a6-86c3-771979e56916",
          "body": "{\n  \"monitors\": [\n    {\n      \"id\": \"1e6b6c77-2031-42d0-9948-76d7251b2dd1\",\n      \"name\": \"Batman & Sherlock Holmes Monitor\",\n      \"owner\": \"5852\",\n      \"uid\": \"5852-1e6b6c77-2031-42d0-9948-76d7251b2dd1\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2d245cd7-d3c8-4d71-b4ff-046d8ee9c84c",
      "documentation": "Create Monitor",
      "method": "post",
      "endpoint": "monitors",
      "responses": [
        {
          "uuid": "7d657df6-c503-4d3b-93a5-a51792883387",
          "body": "{\n  \"monitor\": {\n    \"id\": \"1e6b6dfd-7ba4-4590-9ee1-5948102d7797\",\n    \"name\": \"Monitor Name\",\n    \"uid\": \"5852-1e6b6dfd-7ba4-4590-9ee1-5948102d7797\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Create Monitor in a Workspace",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2303287c-a73f-43a4-b8b9-777dc522cf28",
          "body": "{\n  \"error\": {\n    \"details\": {\n      \"param\": \"monitor\"\n    },\n    \"message\": \"Parameter is missing in the request.\",\n    \"name\": \"paramMissingError\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Parameter Missing",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a25fbf8b-b192-45fb-a099-54fd169e3bd5",
      "documentation": "Delete Monitor",
      "method": "delete",
      "endpoint": "monitors/:monitor_uid",
      "responses": [
        {
          "uuid": "a67b743a-5e2a-468f-9f39-102ec1a9bde0",
          "body": "{\n  \"monitor\": {\n    \"id\": \"1e6b8957-35f9-42a0-8d2f-f03d7085b3d2\",\n    \"uid\": \"5852-1e6b8957-35f9-42a0-8d2f-f03d7085b3d2\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Monitor Deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4a2f4c52-7af0-427d-907a-17d53903bfaa",
          "body": "{\n  \"error\": {\n    \"message\": \"The specified monitor does not exist.\",\n    \"name\": \"instanceNotFoundError\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Monitor Not Found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9b8d2ac6-36d9-433a-a031-fa38b34fab09",
      "documentation": "Single Monitor",
      "method": "get",
      "endpoint": "monitors/:monitor_uid",
      "responses": [
        {
          "uuid": "983cfe0c-3c48-4b29-896d-9e21650d7295",
          "body": "{\n  \"monitor\": {\n    \"collectionUid\": \"5852-8d05dd85-222c-1452-553b-e76a531b71ed\",\n    \"distribution\": [\n      \"\"\n    ],\n    \"environmentUid\": \"5851-8d05dd85-222c-1452-553b-e76a531b71ed\",\n    \"id\": \"1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n    \"lastRun\": {\n      \"finishedAt\": \"2020-03-25T15:45:31.340Z\",\n      \"startedAt\": \"2020-03-25T15:45:29.218Z\",\n      \"stats\": {\n        \"assertions\": {\n          \"failed\": 1,\n          \"total\": 8\n        },\n        \"requests\": {\n          \"total\": 4\n        }\n      },\n      \"status\": \"failed\"\n    },\n    \"name\": \"Postman Echo Monitor\",\n    \"notifications\": {\n      \"onError\": [\n        {\n          \"email\": \"john.appleseed@example.com\"\n        }\n      ],\n      \"onFailure\": [\n        {\n          \"email\": \"john.appleseed@example.com\"\n        }\n      ]\n    },\n    \"options\": {\n      \"followRedirects\": true,\n      \"requestDelay\": {{faker 'random.number'}},\n      \"requestTimeout\": 3000,\n      \"strictSSL\": true\n    },\n    \"owner\": \"5852\",\n    \"schedule\": {\n      \"cron\": \"0 0 * * * *\",\n      \"nextRun\": \"2016-11-30T09:30:00.000Z\",\n      \"timezone\": \"Asia/Calcutta\"\n    },\n    \"uid\": \"5852-1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a29154db-4696-4509-85a3-ba0cfce95620",
          "body": "{\n  \"error\": {\n    \"message\": \"The specified monitor does not exist.\",\n    \"name\": \"instanceNotFoundError\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Monitor Not Found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "769b0d23-ac2b-441a-b851-9070ddd8d24b",
      "documentation": "Update Monitor",
      "method": "put",
      "endpoint": "monitors/:monitor_uid",
      "responses": [
        {
          "uuid": "00a20382-fe27-431d-9ff3-331c1538feb5",
          "body": "{\n  \"monitor\": {\n    \"id\": \"1e6b6e2a-c2ad-4090-b750-0df4e6624352\",\n    \"name\": \"Updated Monitor Name\",\n    \"uid\": \"5852-1e6b6e2a-c2ad-4090-b750-0df4e6624352\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Monitor Updated",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f11a076a-806c-485c-8d43-54559126b2f1",
      "documentation": "Run a Monitor",
      "method": "post",
      "endpoint": "monitors/:monitor_uid/run",
      "responses": [
        {
          "uuid": "14f5b5a4-baaf-4060-b86b-cf3ebcbad06d",
          "body": "{\n  \"run\": {\n    \"executions\": [\n      {\n        \"id\": 1,\n        \"item\": {\n          \"id\": \"b5e8d7dd-909c-4ba7-aef4-8609bc50b586\",\n          \"name\": \"Sample POST Request\"\n        },\n        \"request\": {\n          \"body\": {\n            \"contentLength\": 18,\n            \"mode\": \"raw\"\n          },\n          \"headers\": {\n            \"accept\": \"*/*\",\n            \"accept-encoding\": \"gzip, deflate\",\n            \"content-length\": 18,\n            \"content-type\": \"application/json\"\n          },\n          \"method\": \"POST\",\n          \"timestamp\": \"2016-12-04T14:30:26.025Z\",\n          \"url\": \"echo.getpostman.com/post\"\n        },\n        \"response\": {\n          \"body\": {\n            \"contentLength\": 298\n          },\n          \"code\": 200,\n          \"headers\": {\n            \"connection\": \"keep-alive\",\n            \"content-encoding\": \"gzip\",\n            \"content-type\": \"application/json\",\n            \"date\": \"Sun, 04 Dec 2016 14:30:26 GMT\",\n            \"transfer-encoding\": \"chunked\"\n          },\n          \"responseSize\": 298,\n          \"responseTime\": 26\n        }\n      }\n    ],\n    \"failures\": [\n      {\n        \"assertion\": {\n          \"Status code is 400\": {{faker 'random.boolean'}}\n        },\n        \"executionId\": 2,\n        \"message\": \"Expected 'Status code is 400' to be truthy\",\n        \"name\": \"AssertionError\"\n      }\n    ],\n    \"info\": {\n      \"collectionUid\": \"5852-1d3daef4-2037-4584-ab86-bafd8c8f8a55\",\n      \"finishedAt\": \"2016-12-04T14:30:26.000Z\",\n      \"jobId\": \"1e6ba2e3-1aaf-4c10-bd5f-905943284b2a\",\n      \"monitorId\": \"1e6b8970-fd13-4480-b011-b3b3e3cd271d\",\n      \"name\": \"Sample Collection monitor 1 #56\",\n      \"startedAt\": \"2016-12-04T14:30:25.000Z\",\n      \"status\": \"failed\"\n    },\n    \"stats\": {\n      \"assertions\": {\n        \"failed\": 1,\n        \"total\": 1\n      },\n      \"requests\": {\n        \"failed\": 1,\n        \"total\": 3\n      }\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Monitor Run with Errors",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ced6efc3-6d55-4961-bdfb-b64f4df2c81c",
      "documentation": "Create Webhook",
      "method": "post",
      "endpoint": "webhooks",
      "responses": [
        {
          "uuid": "b1ea943c-42ab-420e-a919-bcd8a0c0a915",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "88ac4249-f921-4616-85a5-7a5612ebfa67",
      "documentation": "All workspaces",
      "method": "get",
      "endpoint": "workspaces",
      "responses": [
        {
          "uuid": "3a4d399c-8b15-430c-bb19-346f618b3f77",
          "body": "{\n  \"workspaces\": [\n    {\n      \"id\": \"4e6d34c2-cfdb-4b33-8868-12a875bebda3\",\n      \"name\": \"My Workspace\",\n      \"type\": \"personal\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Valid Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "efe3d702-9f98-4d64-ba85-2132a5ff8ed4",
      "documentation": "Create Workspace",
      "method": "post",
      "endpoint": "workspaces",
      "responses": [
        {
          "uuid": "e3211ff4-bdcc-4d2e-9360-082a7eb5056e",
          "body": "{\n  \"workspace\": {\n    \"id\": \"cfbcd9bf-cc8b-4d6f-b8ef-440a3e49e29f\",\n    \"name\": \"New Workspace\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "caeb291d-efe4-46ba-bd21-883424ccbb88",
          "body": "{\n  \"error\": {\n    \"message\": \"Instance not found in the database.\",\n    \"name\": \"instanceNotFoundError\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Instance supplied not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9a88a42e-5238-400e-8972-630e4560b663",
      "documentation": "Delete Workspace",
      "method": "delete",
      "endpoint": "workspaces/:workspace_id",
      "responses": [
        {
          "uuid": "f4602b98-b147-4265-90a9-bbf33ed2ac05",
          "body": "{\n  \"workspace\": {\n    \"id\": \"{{workspace_id}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "267bedee-4e9e-4d9f-81d1-8a2d14b3280d",
      "documentation": "Single workspace",
      "method": "get",
      "endpoint": "workspaces/:workspace_id",
      "responses": [
        {
          "uuid": "9c09b5fd-a973-40e6-952f-2857e2b83fbc",
          "body": "{\n  \"workspace\": {\n    \"collections\": [\n      {\n        \"id\": \"7c31b469-bd43-4411-9283-6d397855ee0e\",\n        \"name\": \"Mock demo - collection\",\n        \"uid\": \"1234-7c31b469-bd43-4411-9283-6d397855ee0e\"\n      }\n    ],\n    \"description\": \"Demos.\",\n    \"environments\": [\n      {\n        \"id\": \"423fd955-a9c8-47cd-9ab0-09a6a575c4be\",\n        \"name\": \"Mock demo - CNX\",\n        \"uid\": \"1234-423fd955-a9c8-47cd-9ab0-09a6a575c4be\"\n      }\n    ],\n    \"id\": \"f8801e9e-03a4-4c7b-b31e-5db5cd771696\",\n    \"name\": \"Demo workspace\",\n    \"type\": \"personal\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Valid Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "71ef80be-2984-469e-a33a-4c84c207da5b",
          "body": "{\n  \"error\": {\n    \"message\": \"Instance not found in the database.\",\n    \"name\": \"instanceNotFoundError\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Workspace Not Found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d952adb6-4697-4299-84da-d530522a0a2c",
      "documentation": "Update Workspace",
      "method": "put",
      "endpoint": "workspaces/:workspace_id",
      "responses": [
        {
          "uuid": "2668bb7f-9eb2-4cb0-ac45-c1e35c8e892a",
          "body": "{\n  \"workspace\": {\n    \"id\": \"cfbcd9bf-cc8b-4d6f-b8ef-440a3e49e29f\",\n    \"name\": \"New Workspace\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4dd27c86-b585-48d8-9777-fb982f7bfd88",
          "body": "{\n  \"error\": {\n    \"message\": \"You do not have access to update this workspace.\",\n    \"name\": \"forbiddenError\"\n  }\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "Not enough permissions",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bbd1cc39-edba-49db-9ed7-39bc22fe9741",
          "body": "{\n  \"error\": {\n    \"message\": \"The specified workspace does not exist.\",\n    \"name\": \"instanceNotFoundError\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Specified workspace/entities do not exist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}