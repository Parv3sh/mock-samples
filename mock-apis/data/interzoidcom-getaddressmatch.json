{
  "uuid": "eca62c2d-4c96-4893-9bac-a5a06cdcc065",
  "lastMigration": 19,
  "name": "Interzoid Get Address Match Similarity Key API",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "c868ce32-63e8-4fff-8fe9-d50fc6776f62",
      "documentation": "Gets a similarity key for matching purposes for address data",
      "method": "get",
      "endpoint": "getaddressmatch",
      "responses": [
        {
          "uuid": "09d57d5e-4570-4717-9ce3-430328eaf6e3",
          "body": "{\n  \"Code\": \"\",\n  \"Credits\": \"\",\n  \"Simkey\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Generated similarity key for address data",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a36b7f22-9bcc-4934-b050-e2ed1e984c74",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "bad request - insufficient parameters",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fc3a65eb-e047-4d8b-9eb3-58009049a67a",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "credits exhausted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e6aca5bb-6cf9-4eee-b79a-ed48c154b543",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "invalid license API key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ae150681-e2ba-4c86-b1a0-940b5c29047f",
          "body": "",
          "latency": 0,
          "statusCode": 405,
          "label": "method not allowed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cc0fa943-150b-459b-b733-0dd0b0874b52",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "internal server error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}