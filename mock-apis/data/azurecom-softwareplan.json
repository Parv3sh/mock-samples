{
  "uuid": "e27f10d3-618d-4f6e-99c3-ddb2bacda37f",
  "lastMigration": 19,
  "name": "Software Plan RP",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "4b0f06b8-bcbf-4873-973f-80ecb10c85a0",
      "documentation": "Register to Microsoft.SoftwarePlan resource provider.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/providers/Microsoft.SoftwarePlan/register",
      "responses": [
        {
          "uuid": "9b7564d7-3b09-49cd-9eb7-d7b4e4619a95",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "OK - Microsoft.SoftwarePlan is registered",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d705b6f1-0cfc-4879-894e-b5a2ecad0129",
          "body": "{\n  \"code\": \"{{oneOf (array 'InvalidRequestParameter' 'MissingRequestParameter')}}\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f5f2f448-576b-4b16-a438-5acd0fc459b4",
      "documentation": "Get all hybrid use benefits associated with an ARM resource.",
      "method": "get",
      "endpoint": ":scope/providers/Microsoft.SoftwarePlan/hybridUseBenefits",
      "responses": [
        {
          "uuid": "1166c102-5071-4493-80fe-5f6b6c0f1dcf",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"id\": \"\",\n      \"name\": \"\",\n      \"type\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK - returns an array of plans at that scope",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8ff4e138-c181-46d8-9b83-e6eab8f94c5b",
          "body": "{\n  \"code\": \"{{oneOf (array 'InvalidRequestParameter' 'MissingRequestParameter')}}\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7221db5d-247e-4c69-81ad-f67d4ef5f1ff",
      "documentation": "Deletes a given plan ID",
      "method": "delete",
      "endpoint": ":scope/providers/Microsoft.SoftwarePlan/hybridUseBenefits/:planId",
      "responses": [
        {
          "uuid": "3fec4d9d-f49d-4032-8a50-50abd8a1e230",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK - successfully deleted the given plan",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "493f2202-9b41-4fed-be33-5128aa0b2418",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "OK - there was no plan to delete",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9cbc31b7-eafc-4bdd-8e95-b29ed0df9e4b",
          "body": "{\n  \"code\": \"{{oneOf (array 'InvalidRequestParameter' 'MissingRequestParameter')}}\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "114d80b1-1f19-4c5c-906a-841dd1044b23",
      "documentation": "Gets a given plan ID",
      "method": "get",
      "endpoint": ":scope/providers/Microsoft.SoftwarePlan/hybridUseBenefits/:planId",
      "responses": [
        {
          "uuid": "dfd928fd-f365-4800-bf4b-d81c592b756d",
          "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK - returns the plan that is created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ee238976-45e1-4c5a-b334-a545785258aa",
          "body": "{\n  \"code\": \"{{oneOf (array 'InvalidRequestParameter' 'MissingRequestParameter')}}\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "615aeb05-5aee-4fa5-916d-475b591ff634",
      "documentation": "Updates an existing hybrid use benefit",
      "method": "patch",
      "endpoint": ":scope/providers/Microsoft.SoftwarePlan/hybridUseBenefits/:planId",
      "responses": [
        {
          "uuid": "6fea3a23-c2ae-4f01-a0d7-dab2ba283d31",
          "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK - successfully updated the given hybrid use benefit",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9a420ca9-2a84-4d52-9b15-e33b0ded3f3a",
          "body": "{\n  \"code\": \"{{oneOf (array 'InvalidRequestParameter' 'MissingRequestParameter')}}\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ba129d93-47b9-412d-9604-85b738e2d0d8",
      "documentation": "Create a new hybrid use benefit under a given scope",
      "method": "put",
      "endpoint": ":scope/providers/Microsoft.SoftwarePlan/hybridUseBenefits/:planId",
      "responses": [
        {
          "uuid": "0fa6aac5-cb52-418c-8b4e-307f0025eaf1",
          "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK - returns the plan that is created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d3343bb4-4ef6-49ce-b212-785110ce9032",
          "body": "{\n  \"code\": \"{{oneOf (array 'InvalidRequestParameter' 'MissingRequestParameter')}}\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d3ac903f-5997-47fb-bd2b-4706defb110a",
      "documentation": "Gets the version history of a hybrid use benefit",
      "method": "get",
      "endpoint": ":scope/providers/Microsoft.SoftwarePlan/hybridUseBenefits/:planId/revisions",
      "responses": [
        {
          "uuid": "5c7442b5-ff09-4ee4-aec4-0bac27357997",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"id\": \"\",\n      \"name\": \"\",\n      \"type\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK - returns an array of plans ordered by revision",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "99963b22-151e-44df-98be-9a3bc7176993",
          "body": "{\n  \"code\": \"{{oneOf (array 'InvalidRequestParameter' 'MissingRequestParameter')}}\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "77d8913d-5072-412f-baf5-d3602f517221",
      "documentation": "Get operations.",
      "method": "get",
      "endpoint": ":scope/providers/Microsoft.SoftwarePlan/operations",
      "responses": [
        {
          "uuid": "e56e528f-c903-43e6-8980-3340d1d484fd",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"display\": {\n        \"description\": \"\",\n        \"operation\": \"\",\n        \"provider\": \"\",\n        \"resource\": \"\"\n      },\n      \"name\": \"\",\n      \"origin\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "List all the operations.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1760117b-92a2-4887-8ada-e6f23acc8aa7",
          "body": "{\n  \"code\": \"{{oneOf (array 'InvalidRequestParameter' 'MissingRequestParameter')}}\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}