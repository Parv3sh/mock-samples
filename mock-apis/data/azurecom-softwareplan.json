{
  "uuid": "2848c3ae-148b-4b7c-ad43-d122739c6731",
  "lastMigration": 19,
  "name": "Software Plan RP",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "9398b4ac-3d39-4feb-801e-2ed72f7690da",
      "documentation": "Register to Microsoft.SoftwarePlan resource provider.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/providers/Microsoft.SoftwarePlan/register",
      "responses": [
        {
          "uuid": "7ebbc0b1-9cce-4a80-96ec-c59eb2a904cf",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "OK - Microsoft.SoftwarePlan is registered",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4cee89e8-9ab6-4e0d-b52a-d183f62b5b66",
          "body": "{\n  \"code\": \"{{oneOf (array 'InvalidRequestParameter' 'MissingRequestParameter')}}\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ea97a373-bc8f-44b6-903b-92df9793031f",
      "documentation": "Get all hybrid use benefits associated with an ARM resource.",
      "method": "get",
      "endpoint": ":scope/providers/Microsoft.SoftwarePlan/hybridUseBenefits",
      "responses": [
        {
          "uuid": "c2449c71-acf8-4c61-8d49-77699bd77ebd",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"id\": \"\",\n      \"name\": \"\",\n      \"type\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK - returns an array of plans at that scope",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "28d37ed0-81c7-409a-81b4-f3f6b7adc91c",
          "body": "{\n  \"code\": \"{{oneOf (array 'InvalidRequestParameter' 'MissingRequestParameter')}}\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6f4a449c-255d-4369-ba35-f71009754693",
      "documentation": "Deletes a given plan ID",
      "method": "delete",
      "endpoint": ":scope/providers/Microsoft.SoftwarePlan/hybridUseBenefits/:planId",
      "responses": [
        {
          "uuid": "620b336f-cf3e-483b-a4fc-4f62986b6ff1",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK - successfully deleted the given plan",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9cc6b228-8fec-4792-aa9e-51e535f4063b",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "OK - there was no plan to delete",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e4d21c04-58d9-47b6-9e09-fe263579dc71",
          "body": "{\n  \"code\": \"{{oneOf (array 'InvalidRequestParameter' 'MissingRequestParameter')}}\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5d48e185-7bcc-437c-939e-b0a6905b091b",
      "documentation": "Gets a given plan ID",
      "method": "get",
      "endpoint": ":scope/providers/Microsoft.SoftwarePlan/hybridUseBenefits/:planId",
      "responses": [
        {
          "uuid": "c0ad2ec8-4cde-49b1-b8ed-7a7cdc87d764",
          "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK - returns the plan that is created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d4a89108-5bfe-45f7-a174-223b55be17cd",
          "body": "{\n  \"code\": \"{{oneOf (array 'InvalidRequestParameter' 'MissingRequestParameter')}}\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "aa8eadd9-e063-4a0f-a472-f99545bcf3be",
      "documentation": "Updates an existing hybrid use benefit",
      "method": "patch",
      "endpoint": ":scope/providers/Microsoft.SoftwarePlan/hybridUseBenefits/:planId",
      "responses": [
        {
          "uuid": "231c6b8c-848a-4950-8d04-79ffe63421c5",
          "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK - successfully updated the given hybrid use benefit",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3746f29a-d4d6-4b27-b490-9e48e5afb561",
          "body": "{\n  \"code\": \"{{oneOf (array 'InvalidRequestParameter' 'MissingRequestParameter')}}\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "adf43353-b3fc-4b14-8805-4f545092125c",
      "documentation": "Create a new hybrid use benefit under a given scope",
      "method": "put",
      "endpoint": ":scope/providers/Microsoft.SoftwarePlan/hybridUseBenefits/:planId",
      "responses": [
        {
          "uuid": "4aa79a08-30c9-47dd-beb8-ab87b0a76088",
          "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK - returns the plan that is created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9cf1e691-1929-436a-9c0f-1e2d931f179f",
          "body": "{\n  \"code\": \"{{oneOf (array 'InvalidRequestParameter' 'MissingRequestParameter')}}\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0efc5f14-7750-4066-b06c-cc05a85c49c8",
      "documentation": "Gets the version history of a hybrid use benefit",
      "method": "get",
      "endpoint": ":scope/providers/Microsoft.SoftwarePlan/hybridUseBenefits/:planId/revisions",
      "responses": [
        {
          "uuid": "3f91aad4-ae2a-4d92-932f-a0f7be05016b",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"id\": \"\",\n      \"name\": \"\",\n      \"type\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK - returns an array of plans ordered by revision",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2e3b2d8c-e5f3-4b21-87db-723c1e91cbaf",
          "body": "{\n  \"code\": \"{{oneOf (array 'InvalidRequestParameter' 'MissingRequestParameter')}}\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a2116b75-6d26-4b74-9212-7c0447baad29",
      "documentation": "Get operations.",
      "method": "get",
      "endpoint": ":scope/providers/Microsoft.SoftwarePlan/operations",
      "responses": [
        {
          "uuid": "4b43aee7-0ec9-478b-a603-cb112fb07cd2",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"display\": {\n        \"description\": \"\",\n        \"operation\": \"\",\n        \"provider\": \"\",\n        \"resource\": \"\"\n      },\n      \"name\": \"\",\n      \"origin\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "List all the operations.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1cd38866-af8e-4655-b6ae-77bfbd55112f",
          "body": "{\n  \"code\": \"{{oneOf (array 'InvalidRequestParameter' 'MissingRequestParameter')}}\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}