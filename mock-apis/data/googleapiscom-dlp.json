{
  "uuid": "6d671eda-0fcb-44e9-84da-1b45cbd4cb46",
  "lastMigration": 19,
  "name": "Cloud Data Loss Prevention (DLP) API",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "7afc9192-53f0-41a0-a462-da0c159370ae",
      "documentation": "Returns a list of the sensitive information types that the DLP API supports. See https://cloud.google.com/dlp/docs/infotypes-reference to learn more.",
      "method": "get",
      "endpoint": "v2/infoTypes",
      "responses": [
        {
          "uuid": "00506ca8-7979-4a50-be17-1d57594fee92",
          "body": "{\n  \"infoTypes\": [\n    {\n      \"description\": \"\",\n      \"displayName\": \"\",\n      \"name\": \"\",\n      \"supportedBy\": [\n        \"{{oneOf (array 'ENUM_TYPE_UNSPECIFIED' 'INSPECT' 'RISK_ANALYSIS')}}\"\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "64014e71-5ede-4732-aba6-1aeff4075995",
      "documentation": "Deletes a stored infoType. See https://cloud.google.com/dlp/docs/creating-stored-infotypes to learn more.",
      "method": "delete",
      "endpoint": "v2/:name",
      "responses": [
        {
          "uuid": "240391e6-5744-4faa-a3d3-d9d1db118cc1",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a5bff60d-7c5b-420b-96bf-ffed523bb61b",
      "documentation": "Gets a stored infoType. See https://cloud.google.com/dlp/docs/creating-stored-infotypes to learn more.",
      "method": "get",
      "endpoint": "v2/:name",
      "responses": [
        {
          "uuid": "1a5cfc5d-36bf-42dc-b47d-9fd7769be51b",
          "body": "{\n  \"currentVersion\": {\n    \"config\": {\n      \"description\": \"\",\n      \"dictionary\": {\n        \"cloudStoragePath\": {\n          \"path\": \"\"\n        },\n        \"wordList\": {\n          \"words\": [\n            \"\"\n          ]\n        }\n      },\n      \"displayName\": \"\",\n      \"largeCustomDictionary\": {\n        \"bigQueryField\": {\n          \"field\": {\n            \"name\": \"\"\n          },\n          \"table\": {\n            \"datasetId\": \"\",\n            \"projectId\": \"\",\n            \"tableId\": \"\"\n          }\n        },\n        \"cloudStorageFileSet\": {\n          \"url\": \"\"\n        },\n        \"outputPath\": {\n          \"path\": \"\"\n        }\n      },\n      \"regex\": {\n        \"groupIndexes\": [\n          {{faker 'random.number'}}\n        ],\n        \"pattern\": \"\"\n      }\n    },\n    \"createTime\": \"\",\n    \"errors\": [\n      {\n        \"details\": {\n          \"code\": {{faker 'random.number'}},\n          \"details\": [\n            {}\n          ],\n          \"message\": \"\"\n        },\n        \"timestamps\": [\n          \"\"\n        ]\n      }\n    ],\n    \"state\": \"{{oneOf (array 'STORED_INFO_TYPE_STATE_UNSPECIFIED' 'PENDING' 'READY' 'FAILED' 'INVALID')}}\",\n    \"stats\": {\n      \"largeCustomDictionary\": {\n        \"approxNumPhrases\": \"\"\n      }\n    }\n  },\n  \"name\": \"\",\n  \"pendingVersions\": [\n    {\n      \"config\": {\n        \"description\": \"\",\n        \"dictionary\": {\n          \"cloudStoragePath\": {\n            \"path\": \"\"\n          },\n          \"wordList\": {\n            \"words\": [\n              \"\"\n            ]\n          }\n        },\n        \"displayName\": \"\",\n        \"largeCustomDictionary\": {\n          \"bigQueryField\": {\n            \"field\": {\n              \"name\": \"\"\n            },\n            \"table\": {\n              \"datasetId\": \"\",\n              \"projectId\": \"\",\n              \"tableId\": \"\"\n            }\n          },\n          \"cloudStorageFileSet\": {\n            \"url\": \"\"\n          },\n          \"outputPath\": {\n            \"path\": \"\"\n          }\n        },\n        \"regex\": {\n          \"groupIndexes\": [\n            {{faker 'random.number'}}\n          ],\n          \"pattern\": \"\"\n        }\n      },\n      \"createTime\": \"\",\n      \"errors\": [\n        {\n          \"details\": {\n            \"code\": {{faker 'random.number'}},\n            \"details\": [\n              {}\n            ],\n            \"message\": \"\"\n          },\n          \"timestamps\": [\n            \"\"\n          ]\n        }\n      ],\n      \"state\": \"{{oneOf (array 'STORED_INFO_TYPE_STATE_UNSPECIFIED' 'PENDING' 'READY' 'FAILED' 'INVALID')}}\",\n      \"stats\": {\n        \"largeCustomDictionary\": {\n          \"approxNumPhrases\": \"\"\n        }\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0977d723-2736-4de9-a690-80fe0c6645b2",
      "documentation": "Updates the stored infoType by creating a new version. The existing version will continue to be used until the new version is ready. See https://cloud.google.com/dlp/docs/creating-stored-infotypes to learn more.",
      "method": "patch",
      "endpoint": "v2/:name",
      "responses": [
        {
          "uuid": "6f274862-a3f0-4da5-874d-c74d1023ff0e",
          "body": "{\n  \"currentVersion\": {\n    \"config\": {\n      \"description\": \"\",\n      \"dictionary\": {\n        \"cloudStoragePath\": {\n          \"path\": \"\"\n        },\n        \"wordList\": {\n          \"words\": [\n            \"\"\n          ]\n        }\n      },\n      \"displayName\": \"\",\n      \"largeCustomDictionary\": {\n        \"bigQueryField\": {\n          \"field\": {\n            \"name\": \"\"\n          },\n          \"table\": {\n            \"datasetId\": \"\",\n            \"projectId\": \"\",\n            \"tableId\": \"\"\n          }\n        },\n        \"cloudStorageFileSet\": {\n          \"url\": \"\"\n        },\n        \"outputPath\": {\n          \"path\": \"\"\n        }\n      },\n      \"regex\": {\n        \"groupIndexes\": [\n          {{faker 'random.number'}}\n        ],\n        \"pattern\": \"\"\n      }\n    },\n    \"createTime\": \"\",\n    \"errors\": [\n      {\n        \"details\": {\n          \"code\": {{faker 'random.number'}},\n          \"details\": [\n            {}\n          ],\n          \"message\": \"\"\n        },\n        \"timestamps\": [\n          \"\"\n        ]\n      }\n    ],\n    \"state\": \"{{oneOf (array 'STORED_INFO_TYPE_STATE_UNSPECIFIED' 'PENDING' 'READY' 'FAILED' 'INVALID')}}\",\n    \"stats\": {\n      \"largeCustomDictionary\": {\n        \"approxNumPhrases\": \"\"\n      }\n    }\n  },\n  \"name\": \"\",\n  \"pendingVersions\": [\n    {\n      \"config\": {\n        \"description\": \"\",\n        \"dictionary\": {\n          \"cloudStoragePath\": {\n            \"path\": \"\"\n          },\n          \"wordList\": {\n            \"words\": [\n              \"\"\n            ]\n          }\n        },\n        \"displayName\": \"\",\n        \"largeCustomDictionary\": {\n          \"bigQueryField\": {\n            \"field\": {\n              \"name\": \"\"\n            },\n            \"table\": {\n              \"datasetId\": \"\",\n              \"projectId\": \"\",\n              \"tableId\": \"\"\n            }\n          },\n          \"cloudStorageFileSet\": {\n            \"url\": \"\"\n          },\n          \"outputPath\": {\n            \"path\": \"\"\n          }\n        },\n        \"regex\": {\n          \"groupIndexes\": [\n            {{faker 'random.number'}}\n          ],\n          \"pattern\": \"\"\n        }\n      },\n      \"createTime\": \"\",\n      \"errors\": [\n        {\n          \"details\": {\n            \"code\": {{faker 'random.number'}},\n            \"details\": [\n              {}\n            ],\n            \"message\": \"\"\n          },\n          \"timestamps\": [\n            \"\"\n          ]\n        }\n      ],\n      \"state\": \"{{oneOf (array 'STORED_INFO_TYPE_STATE_UNSPECIFIED' 'PENDING' 'READY' 'FAILED' 'INVALID')}}\",\n      \"stats\": {\n        \"largeCustomDictionary\": {\n          \"approxNumPhrases\": \"\"\n        }\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "860c7809-30d7-445b-8e3c-81c4cfe89221",
      "documentation": "Activate a job trigger. Causes the immediate execute of a trigger instead of waiting on the trigger event to occur.",
      "method": "post",
      "endpoint": "v2/:name:activate",
      "responses": [
        {
          "uuid": "22554dc7-b87c-4056-ae0d-1dc2a15c0aa6",
          "body": "{\n  \"createTime\": \"\",\n  \"endTime\": \"\",\n  \"errors\": [\n    {\n      \"details\": {\n        \"code\": {{faker 'random.number'}},\n        \"details\": [\n          {}\n        ],\n        \"message\": \"\"\n      },\n      \"timestamps\": [\n        \"\"\n      ]\n    }\n  ],\n  \"inspectDetails\": {\n    \"requestedOptions\": {\n      \"jobConfig\": {\n        \"actions\": [\n          {\n            \"jobNotificationEmails\": {},\n            \"pubSub\": {\n              \"topic\": \"\"\n            },\n            \"publishFindingsToCloudDataCatalog\": {},\n            \"publishSummaryToCscc\": {},\n            \"publishToStackdriver\": {},\n            \"saveFindings\": {\n              \"outputConfig\": {\n                \"outputSchema\": \"{{oneOf (array 'OUTPUT_SCHEMA_UNSPECIFIED' 'BASIC_COLUMNS' 'GCS_COLUMNS' 'DATASTORE_COLUMNS' 'BIG_QUERY_COLUMNS' 'ALL_COLUMNS')}}\",\n                \"table\": {\n                  \"datasetId\": \"\",\n                  \"projectId\": \"\",\n                  \"tableId\": \"\"\n                }\n              }\n            }\n          }\n        ],\n        \"inspectConfig\": {\n          \"contentOptions\": [\n            \"{{oneOf (array 'CONTENT_UNSPECIFIED' 'CONTENT_TEXT' 'CONTENT_IMAGE')}}\"\n          ],\n          \"customInfoTypes\": [\n            {\n              \"detectionRules\": [\n                {\n                  \"hotwordRule\": {\n                    \"hotwordRegex\": {\n                      \"groupIndexes\": [\n                        {{faker 'random.number'}}\n                      ],\n                      \"pattern\": \"\"\n                    },\n                    \"likelihoodAdjustment\": {\n                      \"fixedLikelihood\": \"{{oneOf (array 'LIKELIHOOD_UNSPECIFIED' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n                      \"relativeLikelihood\": {{faker 'random.number'}}\n                    },\n                    \"proximity\": {\n                      \"windowAfter\": {{faker 'random.number'}},\n                      \"windowBefore\": {{faker 'random.number'}}\n                    }\n                  }\n                }\n              ],\n              \"dictionary\": {\n                \"cloudStoragePath\": {\n                  \"path\": \"\"\n                },\n                \"wordList\": {\n                  \"words\": [\n                    \"\"\n                  ]\n                }\n              },\n              \"exclusionType\": \"{{oneOf (array 'EXCLUSION_TYPE_UNSPECIFIED' 'EXCLUSION_TYPE_EXCLUDE')}}\",\n              \"infoType\": {\n                \"name\": \"\",\n                \"version\": \"\"\n              },\n              \"likelihood\": \"{{oneOf (array 'LIKELIHOOD_UNSPECIFIED' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n              \"regex\": {\n                \"groupIndexes\": [\n                  {{faker 'random.number'}}\n                ],\n                \"pattern\": \"\"\n              },\n              \"storedType\": {\n                \"createTime\": \"\",\n                \"name\": \"\"\n              },\n              \"surrogateType\": {}\n            }\n          ],\n          \"excludeInfoTypes\": {{faker 'random.boolean'}},\n          \"includeQuote\": {{faker 'random.boolean'}},\n          \"infoTypes\": [\n            {\n              \"name\": \"\",\n              \"version\": \"\"\n            }\n          ],\n          \"limits\": {\n            \"maxFindingsPerInfoType\": [\n              {\n                \"infoType\": {\n                  \"name\": \"\",\n                  \"version\": \"\"\n                },\n                \"maxFindings\": {{faker 'random.number'}}\n              }\n            ],\n            \"maxFindingsPerItem\": {{faker 'random.number'}},\n            \"maxFindingsPerRequest\": {{faker 'random.number'}}\n          },\n          \"minLikelihood\": \"{{oneOf (array 'LIKELIHOOD_UNSPECIFIED' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n          \"ruleSet\": [\n            {\n              \"infoTypes\": [\n                {\n                  \"name\": \"\",\n                  \"version\": \"\"\n                }\n              ],\n              \"rules\": [\n                {\n                  \"exclusionRule\": {\n                    \"dictionary\": {\n                      \"cloudStoragePath\": {\n                        \"path\": \"\"\n                      },\n                      \"wordList\": {\n                        \"words\": [\n                          \"\"\n                        ]\n                      }\n                    },\n                    \"excludeInfoTypes\": {\n                      \"infoTypes\": [\n                        {\n                          \"name\": \"\",\n                          \"version\": \"\"\n                        }\n                      ]\n                    },\n                    \"matchingType\": \"{{oneOf (array 'MATCHING_TYPE_UNSPECIFIED' 'MATCHING_TYPE_FULL_MATCH' 'MATCHING_TYPE_PARTIAL_MATCH' 'MATCHING_TYPE_INVERSE_MATCH')}}\",\n                    \"regex\": {\n                      \"groupIndexes\": [\n                        {{faker 'random.number'}}\n                      ],\n                      \"pattern\": \"\"\n                    }\n                  },\n                  \"hotwordRule\": {\n                    \"hotwordRegex\": {\n                      \"groupIndexes\": [\n                        {{faker 'random.number'}}\n                      ],\n                      \"pattern\": \"\"\n                    },\n                    \"likelihoodAdjustment\": {\n                      \"fixedLikelihood\": \"{{oneOf (array 'LIKELIHOOD_UNSPECIFIED' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n                      \"relativeLikelihood\": {{faker 'random.number'}}\n                    },\n                    \"proximity\": {\n                      \"windowAfter\": {{faker 'random.number'}},\n                      \"windowBefore\": {{faker 'random.number'}}\n                    }\n                  }\n                }\n              ]\n            }\n          ]\n        },\n        \"inspectTemplateName\": \"\",\n        \"storageConfig\": {\n          \"bigQueryOptions\": {\n            \"excludedFields\": [\n              {\n                \"name\": \"\"\n              }\n            ],\n            \"identifyingFields\": [\n              {\n                \"name\": \"\"\n              }\n            ],\n            \"includedFields\": [\n              {\n                \"name\": \"\"\n              }\n            ],\n            \"rowsLimit\": \"\",\n            \"rowsLimitPercent\": {{faker 'random.number'}},\n            \"sampleMethod\": \"{{oneOf (array 'SAMPLE_METHOD_UNSPECIFIED' 'TOP' 'RANDOM_START')}}\",\n            \"tableReference\": {\n              \"datasetId\": \"\",\n              \"projectId\": \"\",\n              \"tableId\": \"\"\n            }\n          },\n          \"cloudStorageOptions\": {\n            \"bytesLimitPerFile\": \"\",\n            \"bytesLimitPerFilePercent\": {{faker 'random.number'}},\n            \"fileSet\": {\n              \"regexFileSet\": {\n                \"bucketName\": \"\",\n                \"excludeRegex\": [\n                  \"\"\n                ],\n                \"includeRegex\": [\n                  \"\"\n                ]\n              },\n              \"url\": \"\"\n            },\n            \"fileTypes\": [\n              \"{{oneOf (array 'FILE_TYPE_UNSPECIFIED' 'BINARY_FILE' 'TEXT_FILE' 'IMAGE' 'WORD' 'PDF' 'AVRO' 'CSV' 'TSV' 'POWERPOINT' 'EXCEL')}}\"\n            ],\n            \"filesLimitPercent\": {{faker 'random.number'}},\n            \"sampleMethod\": \"{{oneOf (array 'SAMPLE_METHOD_UNSPECIFIED' 'TOP' 'RANDOM_START')}}\"\n          },\n          \"datastoreOptions\": {\n            \"kind\": {\n              \"name\": \"\"\n            },\n            \"partitionId\": {\n              \"namespaceId\": \"\",\n              \"projectId\": \"\"\n            }\n          },\n          \"hybridOptions\": {\n            \"description\": \"\",\n            \"labels\": {},\n            \"requiredFindingLabelKeys\": [\n              \"\"\n            ],\n            \"tableOptions\": {\n              \"identifyingFields\": [\n                {\n                  \"name\": \"\"\n                }\n              ]\n            }\n          },\n          \"timespanConfig\": {\n            \"enableAutoPopulationOfTimespanConfig\": {{faker 'random.boolean'}},\n            \"endTime\": \"\",\n            \"startTime\": \"\",\n            \"timestampField\": {\n              \"name\": \"\"\n            }\n          }\n        }\n      },\n      \"snapshotInspectTemplate\": {\n        \"createTime\": \"\",\n        \"description\": \"\",\n        \"displayName\": \"\",\n        \"inspectConfig\": {\n          \"contentOptions\": [\n            \"{{oneOf (array 'CONTENT_UNSPECIFIED' 'CONTENT_TEXT' 'CONTENT_IMAGE')}}\"\n          ],\n          \"customInfoTypes\": [\n            {\n              \"detectionRules\": [\n                {\n                  \"hotwordRule\": {\n                    \"hotwordRegex\": {\n                      \"groupIndexes\": [\n                        {{faker 'random.number'}}\n                      ],\n                      \"pattern\": \"\"\n                    },\n                    \"likelihoodAdjustment\": {\n                      \"fixedLikelihood\": \"{{oneOf (array 'LIKELIHOOD_UNSPECIFIED' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n                      \"relativeLikelihood\": {{faker 'random.number'}}\n                    },\n                    \"proximity\": {\n                      \"windowAfter\": {{faker 'random.number'}},\n                      \"windowBefore\": {{faker 'random.number'}}\n                    }\n                  }\n                }\n              ],\n              \"dictionary\": {\n                \"cloudStoragePath\": {\n                  \"path\": \"\"\n                },\n                \"wordList\": {\n                  \"words\": [\n                    \"\"\n                  ]\n                }\n              },\n              \"exclusionType\": \"{{oneOf (array 'EXCLUSION_TYPE_UNSPECIFIED' 'EXCLUSION_TYPE_EXCLUDE')}}\",\n              \"infoType\": {\n                \"name\": \"\",\n                \"version\": \"\"\n              },\n              \"likelihood\": \"{{oneOf (array 'LIKELIHOOD_UNSPECIFIED' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n              \"regex\": {\n                \"groupIndexes\": [\n                  {{faker 'random.number'}}\n                ],\n                \"pattern\": \"\"\n              },\n              \"storedType\": {\n                \"createTime\": \"\",\n                \"name\": \"\"\n              },\n              \"surrogateType\": {}\n            }\n          ],\n          \"excludeInfoTypes\": {{faker 'random.boolean'}},\n          \"includeQuote\": {{faker 'random.boolean'}},\n          \"infoTypes\": [\n            {\n              \"name\": \"\",\n              \"version\": \"\"\n            }\n          ],\n          \"limits\": {\n            \"maxFindingsPerInfoType\": [\n              {\n                \"infoType\": {\n                  \"name\": \"\",\n                  \"version\": \"\"\n                },\n                \"maxFindings\": {{faker 'random.number'}}\n              }\n            ],\n            \"maxFindingsPerItem\": {{faker 'random.number'}},\n            \"maxFindingsPerRequest\": {{faker 'random.number'}}\n          },\n          \"minLikelihood\": \"{{oneOf (array 'LIKELIHOOD_UNSPECIFIED' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n          \"ruleSet\": [\n            {\n              \"infoTypes\": [\n                {\n                  \"name\": \"\",\n                  \"version\": \"\"\n                }\n              ],\n              \"rules\": [\n                {\n                  \"exclusionRule\": {\n                    \"dictionary\": {\n                      \"cloudStoragePath\": {\n                        \"path\": \"\"\n                      },\n                      \"wordList\": {\n                        \"words\": [\n                          \"\"\n                        ]\n                      }\n                    },\n                    \"excludeInfoTypes\": {\n                      \"infoTypes\": [\n                        {\n                          \"name\": \"\",\n                          \"version\": \"\"\n                        }\n                      ]\n                    },\n                    \"matchingType\": \"{{oneOf (array 'MATCHING_TYPE_UNSPECIFIED' 'MATCHING_TYPE_FULL_MATCH' 'MATCHING_TYPE_PARTIAL_MATCH' 'MATCHING_TYPE_INVERSE_MATCH')}}\",\n                    \"regex\": {\n                      \"groupIndexes\": [\n                        {{faker 'random.number'}}\n                      ],\n                      \"pattern\": \"\"\n                    }\n                  },\n                  \"hotwordRule\": {\n                    \"hotwordRegex\": {\n                      \"groupIndexes\": [\n                        {{faker 'random.number'}}\n                      ],\n                      \"pattern\": \"\"\n                    },\n                    \"likelihoodAdjustment\": {\n                      \"fixedLikelihood\": \"{{oneOf (array 'LIKELIHOOD_UNSPECIFIED' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n                      \"relativeLikelihood\": {{faker 'random.number'}}\n                    },\n                    \"proximity\": {\n                      \"windowAfter\": {{faker 'random.number'}},\n                      \"windowBefore\": {{faker 'random.number'}}\n                    }\n                  }\n                }\n              ]\n            }\n          ]\n        },\n        \"name\": \"\",\n        \"updateTime\": \"\"\n      }\n    },\n    \"result\": {\n      \"hybridStats\": {\n        \"abortedCount\": \"\",\n        \"pendingCount\": \"\",\n        \"processedCount\": \"\"\n      },\n      \"infoTypeStats\": [\n        {\n          \"count\": \"\",\n          \"infoType\": {\n            \"name\": \"\",\n            \"version\": \"\"\n          }\n        }\n      ],\n      \"processedBytes\": \"\",\n      \"totalEstimatedBytes\": \"\"\n    }\n  },\n  \"jobTriggerName\": \"\",\n  \"name\": \"\",\n  \"riskDetails\": {\n    \"categoricalStatsResult\": {\n      \"valueFrequencyHistogramBuckets\": [\n        {\n          \"bucketSize\": \"\",\n          \"bucketValueCount\": \"\",\n          \"bucketValues\": [\n            {\n              \"count\": \"\",\n              \"value\": {\n                \"booleanValue\": {{faker 'random.boolean'}},\n                \"dateValue\": {\n                  \"day\": {{faker 'random.number'}},\n                  \"month\": {{faker 'random.number'}},\n                  \"year\": {{faker 'random.number'}}\n                },\n                \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                \"floatValue\": {{faker 'random.float'}},\n                \"integerValue\": \"\",\n                \"stringValue\": \"\",\n                \"timeValue\": {\n                  \"hours\": {{faker 'random.number'}},\n                  \"minutes\": {{faker 'random.number'}},\n                  \"nanos\": {{faker 'random.number'}},\n                  \"seconds\": {{faker 'random.number'}}\n                },\n                \"timestampValue\": \"\"\n              }\n            }\n          ],\n          \"valueFrequencyLowerBound\": \"\",\n          \"valueFrequencyUpperBound\": \"\"\n        }\n      ]\n    },\n    \"deltaPresenceEstimationResult\": {\n      \"deltaPresenceEstimationHistogram\": [\n        {\n          \"bucketSize\": \"\",\n          \"bucketValueCount\": \"\",\n          \"bucketValues\": [\n            {\n              \"estimatedProbability\": {{faker 'random.float'}},\n              \"quasiIdsValues\": [\n                {\n                  \"booleanValue\": {{faker 'random.boolean'}},\n                  \"dateValue\": {\n                    \"day\": {{faker 'random.number'}},\n                    \"month\": {{faker 'random.number'}},\n                    \"year\": {{faker 'random.number'}}\n                  },\n                  \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                  \"floatValue\": {{faker 'random.float'}},\n                  \"integerValue\": \"\",\n                  \"stringValue\": \"\",\n                  \"timeValue\": {\n                    \"hours\": {{faker 'random.number'}},\n                    \"minutes\": {{faker 'random.number'}},\n                    \"nanos\": {{faker 'random.number'}},\n                    \"seconds\": {{faker 'random.number'}}\n                  },\n                  \"timestampValue\": \"\"\n                }\n              ]\n            }\n          ],\n          \"maxProbability\": {{faker 'random.float'}},\n          \"minProbability\": {{faker 'random.float'}}\n        }\n      ]\n    },\n    \"kAnonymityResult\": {\n      \"equivalenceClassHistogramBuckets\": [\n        {\n          \"bucketSize\": \"\",\n          \"bucketValueCount\": \"\",\n          \"bucketValues\": [\n            {\n              \"equivalenceClassSize\": \"\",\n              \"quasiIdsValues\": [\n                {\n                  \"booleanValue\": {{faker 'random.boolean'}},\n                  \"dateValue\": {\n                    \"day\": {{faker 'random.number'}},\n                    \"month\": {{faker 'random.number'}},\n                    \"year\": {{faker 'random.number'}}\n                  },\n                  \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                  \"floatValue\": {{faker 'random.float'}},\n                  \"integerValue\": \"\",\n                  \"stringValue\": \"\",\n                  \"timeValue\": {\n                    \"hours\": {{faker 'random.number'}},\n                    \"minutes\": {{faker 'random.number'}},\n                    \"nanos\": {{faker 'random.number'}},\n                    \"seconds\": {{faker 'random.number'}}\n                  },\n                  \"timestampValue\": \"\"\n                }\n              ]\n            }\n          ],\n          \"equivalenceClassSizeLowerBound\": \"\",\n          \"equivalenceClassSizeUpperBound\": \"\"\n        }\n      ]\n    },\n    \"kMapEstimationResult\": {\n      \"kMapEstimationHistogram\": [\n        {\n          \"bucketSize\": \"\",\n          \"bucketValueCount\": \"\",\n          \"bucketValues\": [\n            {\n              \"estimatedAnonymity\": \"\",\n              \"quasiIdsValues\": [\n                {\n                  \"booleanValue\": {{faker 'random.boolean'}},\n                  \"dateValue\": {\n                    \"day\": {{faker 'random.number'}},\n                    \"month\": {{faker 'random.number'}},\n                    \"year\": {{faker 'random.number'}}\n                  },\n                  \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                  \"floatValue\": {{faker 'random.float'}},\n                  \"integerValue\": \"\",\n                  \"stringValue\": \"\",\n                  \"timeValue\": {\n                    \"hours\": {{faker 'random.number'}},\n                    \"minutes\": {{faker 'random.number'}},\n                    \"nanos\": {{faker 'random.number'}},\n                    \"seconds\": {{faker 'random.number'}}\n                  },\n                  \"timestampValue\": \"\"\n                }\n              ]\n            }\n          ],\n          \"maxAnonymity\": \"\",\n          \"minAnonymity\": \"\"\n        }\n      ]\n    },\n    \"lDiversityResult\": {\n      \"sensitiveValueFrequencyHistogramBuckets\": [\n        {\n          \"bucketSize\": \"\",\n          \"bucketValueCount\": \"\",\n          \"bucketValues\": [\n            {\n              \"equivalenceClassSize\": \"\",\n              \"numDistinctSensitiveValues\": \"\",\n              \"quasiIdsValues\": [\n                {\n                  \"booleanValue\": {{faker 'random.boolean'}},\n                  \"dateValue\": {\n                    \"day\": {{faker 'random.number'}},\n                    \"month\": {{faker 'random.number'}},\n                    \"year\": {{faker 'random.number'}}\n                  },\n                  \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                  \"floatValue\": {{faker 'random.float'}},\n                  \"integerValue\": \"\",\n                  \"stringValue\": \"\",\n                  \"timeValue\": {\n                    \"hours\": {{faker 'random.number'}},\n                    \"minutes\": {{faker 'random.number'}},\n                    \"nanos\": {{faker 'random.number'}},\n                    \"seconds\": {{faker 'random.number'}}\n                  },\n                  \"timestampValue\": \"\"\n                }\n              ],\n              \"topSensitiveValues\": [\n                {\n                  \"count\": \"\",\n                  \"value\": {\n                    \"booleanValue\": {{faker 'random.boolean'}},\n                    \"dateValue\": {\n                      \"day\": {{faker 'random.number'}},\n                      \"month\": {{faker 'random.number'}},\n                      \"year\": {{faker 'random.number'}}\n                    },\n                    \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                    \"floatValue\": {{faker 'random.float'}},\n                    \"integerValue\": \"\",\n                    \"stringValue\": \"\",\n                    \"timeValue\": {\n                      \"hours\": {{faker 'random.number'}},\n                      \"minutes\": {{faker 'random.number'}},\n                      \"nanos\": {{faker 'random.number'}},\n                      \"seconds\": {{faker 'random.number'}}\n                    },\n                    \"timestampValue\": \"\"\n                  }\n                }\n              ]\n            }\n          ],\n          \"sensitiveValueFrequencyLowerBound\": \"\",\n          \"sensitiveValueFrequencyUpperBound\": \"\"\n        }\n      ]\n    },\n    \"numericalStatsResult\": {\n      \"maxValue\": {\n        \"booleanValue\": {{faker 'random.boolean'}},\n        \"dateValue\": {\n          \"day\": {{faker 'random.number'}},\n          \"month\": {{faker 'random.number'}},\n          \"year\": {{faker 'random.number'}}\n        },\n        \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n        \"floatValue\": {{faker 'random.float'}},\n        \"integerValue\": \"\",\n        \"stringValue\": \"\",\n        \"timeValue\": {\n          \"hours\": {{faker 'random.number'}},\n          \"minutes\": {{faker 'random.number'}},\n          \"nanos\": {{faker 'random.number'}},\n          \"seconds\": {{faker 'random.number'}}\n        },\n        \"timestampValue\": \"\"\n      },\n      \"minValue\": {\n        \"booleanValue\": {{faker 'random.boolean'}},\n        \"dateValue\": {\n          \"day\": {{faker 'random.number'}},\n          \"month\": {{faker 'random.number'}},\n          \"year\": {{faker 'random.number'}}\n        },\n        \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n        \"floatValue\": {{faker 'random.float'}},\n        \"integerValue\": \"\",\n        \"stringValue\": \"\",\n        \"timeValue\": {\n          \"hours\": {{faker 'random.number'}},\n          \"minutes\": {{faker 'random.number'}},\n          \"nanos\": {{faker 'random.number'}},\n          \"seconds\": {{faker 'random.number'}}\n        },\n        \"timestampValue\": \"\"\n      },\n      \"quantileValues\": [\n        {\n          \"booleanValue\": {{faker 'random.boolean'}},\n          \"dateValue\": {\n            \"day\": {{faker 'random.number'}},\n            \"month\": {{faker 'random.number'}},\n            \"year\": {{faker 'random.number'}}\n          },\n          \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n          \"floatValue\": {{faker 'random.float'}},\n          \"integerValue\": \"\",\n          \"stringValue\": \"\",\n          \"timeValue\": {\n            \"hours\": {{faker 'random.number'}},\n            \"minutes\": {{faker 'random.number'}},\n            \"nanos\": {{faker 'random.number'}},\n            \"seconds\": {{faker 'random.number'}}\n          },\n          \"timestampValue\": \"\"\n        }\n      ]\n    },\n    \"requestedOptions\": {\n      \"jobConfig\": {\n        \"actions\": [\n          {\n            \"jobNotificationEmails\": {},\n            \"pubSub\": {\n              \"topic\": \"\"\n            },\n            \"publishFindingsToCloudDataCatalog\": {},\n            \"publishSummaryToCscc\": {},\n            \"publishToStackdriver\": {},\n            \"saveFindings\": {\n              \"outputConfig\": {\n                \"outputSchema\": \"{{oneOf (array 'OUTPUT_SCHEMA_UNSPECIFIED' 'BASIC_COLUMNS' 'GCS_COLUMNS' 'DATASTORE_COLUMNS' 'BIG_QUERY_COLUMNS' 'ALL_COLUMNS')}}\",\n                \"table\": {\n                  \"datasetId\": \"\",\n                  \"projectId\": \"\",\n                  \"tableId\": \"\"\n                }\n              }\n            }\n          }\n        ],\n        \"privacyMetric\": {\n          \"categoricalStatsConfig\": {\n            \"field\": {\n              \"name\": \"\"\n            }\n          },\n          \"deltaPresenceEstimationConfig\": {\n            \"auxiliaryTables\": [\n              {\n                \"quasiIds\": [\n                  {\n                    \"customTag\": \"\",\n                    \"field\": {\n                      \"name\": \"\"\n                    }\n                  }\n                ],\n                \"relativeFrequency\": {\n                  \"name\": \"\"\n                },\n                \"table\": {\n                  \"datasetId\": \"\",\n                  \"projectId\": \"\",\n                  \"tableId\": \"\"\n                }\n              }\n            ],\n            \"quasiIds\": [\n              {\n                \"customTag\": \"\",\n                \"field\": {\n                  \"name\": \"\"\n                },\n                \"inferred\": {},\n                \"infoType\": {\n                  \"name\": \"\",\n                  \"version\": \"\"\n                }\n              }\n            ],\n            \"regionCode\": \"\"\n          },\n          \"kAnonymityConfig\": {\n            \"entityId\": {\n              \"field\": {\n                \"name\": \"\"\n              }\n            },\n            \"quasiIds\": [\n              {\n                \"name\": \"\"\n              }\n            ]\n          },\n          \"kMapEstimationConfig\": {\n            \"auxiliaryTables\": [\n              {\n                \"quasiIds\": [\n                  {\n                    \"customTag\": \"\",\n                    \"field\": {\n                      \"name\": \"\"\n                    }\n                  }\n                ],\n                \"relativeFrequency\": {\n                  \"name\": \"\"\n                },\n                \"table\": {\n                  \"datasetId\": \"\",\n                  \"projectId\": \"\",\n                  \"tableId\": \"\"\n                }\n              }\n            ],\n            \"quasiIds\": [\n              {\n                \"customTag\": \"\",\n                \"field\": {\n                  \"name\": \"\"\n                },\n                \"inferred\": {},\n                \"infoType\": {\n                  \"name\": \"\",\n                  \"version\": \"\"\n                }\n              }\n            ],\n            \"regionCode\": \"\"\n          },\n          \"lDiversityConfig\": {\n            \"quasiIds\": [\n              {\n                \"name\": \"\"\n              }\n            ],\n            \"sensitiveAttribute\": {\n              \"name\": \"\"\n            }\n          },\n          \"numericalStatsConfig\": {\n            \"field\": {\n              \"name\": \"\"\n            }\n          }\n        },\n        \"sourceTable\": {\n          \"datasetId\": \"\",\n          \"projectId\": \"\",\n          \"tableId\": \"\"\n        }\n      }\n    },\n    \"requestedPrivacyMetric\": {\n      \"categoricalStatsConfig\": {\n        \"field\": {\n          \"name\": \"\"\n        }\n      },\n      \"deltaPresenceEstimationConfig\": {\n        \"auxiliaryTables\": [\n          {\n            \"quasiIds\": [\n              {\n                \"customTag\": \"\",\n                \"field\": {\n                  \"name\": \"\"\n                }\n              }\n            ],\n            \"relativeFrequency\": {\n              \"name\": \"\"\n            },\n            \"table\": {\n              \"datasetId\": \"\",\n              \"projectId\": \"\",\n              \"tableId\": \"\"\n            }\n          }\n        ],\n        \"quasiIds\": [\n          {\n            \"customTag\": \"\",\n            \"field\": {\n              \"name\": \"\"\n            },\n            \"inferred\": {},\n            \"infoType\": {\n              \"name\": \"\",\n              \"version\": \"\"\n            }\n          }\n        ],\n        \"regionCode\": \"\"\n      },\n      \"kAnonymityConfig\": {\n        \"entityId\": {\n          \"field\": {\n            \"name\": \"\"\n          }\n        },\n        \"quasiIds\": [\n          {\n            \"name\": \"\"\n          }\n        ]\n      },\n      \"kMapEstimationConfig\": {\n        \"auxiliaryTables\": [\n          {\n            \"quasiIds\": [\n              {\n                \"customTag\": \"\",\n                \"field\": {\n                  \"name\": \"\"\n                }\n              }\n            ],\n            \"relativeFrequency\": {\n              \"name\": \"\"\n            },\n            \"table\": {\n              \"datasetId\": \"\",\n              \"projectId\": \"\",\n              \"tableId\": \"\"\n            }\n          }\n        ],\n        \"quasiIds\": [\n          {\n            \"customTag\": \"\",\n            \"field\": {\n              \"name\": \"\"\n            },\n            \"inferred\": {},\n            \"infoType\": {\n              \"name\": \"\",\n              \"version\": \"\"\n            }\n          }\n        ],\n        \"regionCode\": \"\"\n      },\n      \"lDiversityConfig\": {\n        \"quasiIds\": [\n          {\n            \"name\": \"\"\n          }\n        ],\n        \"sensitiveAttribute\": {\n          \"name\": \"\"\n        }\n      },\n      \"numericalStatsConfig\": {\n        \"field\": {\n          \"name\": \"\"\n        }\n      }\n    },\n    \"requestedSourceTable\": {\n      \"datasetId\": \"\",\n      \"projectId\": \"\",\n      \"tableId\": \"\"\n    }\n  },\n  \"startTime\": \"\",\n  \"state\": \"{{oneOf (array 'JOB_STATE_UNSPECIFIED' 'PENDING' 'RUNNING' 'DONE' 'CANCELED' 'FAILED' 'ACTIVE')}}\",\n  \"type\": \"{{oneOf (array 'DLP_JOB_TYPE_UNSPECIFIED' 'INSPECT_JOB' 'RISK_ANALYSIS_JOB')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "97731c69-43db-4a3b-bd2d-dcf9be103548",
      "documentation": "Starts asynchronous cancellation on a long-running DlpJob. The server makes a best effort to cancel the DlpJob, but success is not guaranteed. See https://cloud.google.com/dlp/docs/inspecting-storage and https://cloud.google.com/dlp/docs/compute-risk-analysis to learn more.",
      "method": "post",
      "endpoint": "v2/:name:cancel",
      "responses": [
        {
          "uuid": "bc8250a2-9563-44e7-90b0-2ac536f92a6b",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ee98d5d7-a862-49cc-8baf-9216544e053a",
      "documentation": "Finish a running hybrid DlpJob. Triggers the finalization steps and running of any enabled actions that have not yet run.",
      "method": "post",
      "endpoint": "v2/:name:finish",
      "responses": [
        {
          "uuid": "bf01c4bd-51d7-4579-8552-9a9df841ee7f",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a0aa5f68-a1fa-4207-8c22-8e967d738096",
      "documentation": "Inspect hybrid content and store findings to a trigger. The inspection will be processed asynchronously. To review the findings monitor the jobs within the trigger.",
      "method": "post",
      "endpoint": "v2/:name:hybridInspect",
      "responses": [
        {
          "uuid": "0171e0f0-b86c-446b-b20c-0ec55cb39af7",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d99a5ad9-e5bf-4809-bcce-7c2665eb65f0",
      "documentation": "De-identifies potentially sensitive info from a ContentItem. This method has limits on input size and output size. See https://cloud.google.com/dlp/docs/deidentify-sensitive-data to learn more. When no InfoTypes or CustomInfoTypes are specified in this request, the system will automatically choose what detectors to run. By default this may be all types, but may change over time as detectors are updated.",
      "method": "post",
      "endpoint": "v2/:parent/content:deidentify",
      "responses": [
        {
          "uuid": "5327673d-4534-4f77-98ff-7189285be5af",
          "body": "{\n  \"item\": {\n    \"byteItem\": {\n      \"data\": \"\",\n      \"type\": \"{{oneOf (array 'BYTES_TYPE_UNSPECIFIED' 'IMAGE' 'IMAGE_JPEG' 'IMAGE_BMP' 'IMAGE_PNG' 'IMAGE_SVG' 'TEXT_UTF8' 'WORD_DOCUMENT' 'PDF' 'POWERPOINT_DOCUMENT' 'EXCEL_DOCUMENT' 'AVRO' 'CSV' 'TSV')}}\"\n    },\n    \"table\": {\n      \"headers\": [\n        {\n          \"name\": \"\"\n        }\n      ],\n      \"rows\": [\n        {\n          \"values\": [\n            {\n              \"booleanValue\": {{faker 'random.boolean'}},\n              \"dateValue\": {\n                \"day\": {{faker 'random.number'}},\n                \"month\": {{faker 'random.number'}},\n                \"year\": {{faker 'random.number'}}\n              },\n              \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n              \"floatValue\": {{faker 'random.float'}},\n              \"integerValue\": \"\",\n              \"stringValue\": \"\",\n              \"timeValue\": {\n                \"hours\": {{faker 'random.number'}},\n                \"minutes\": {{faker 'random.number'}},\n                \"nanos\": {{faker 'random.number'}},\n                \"seconds\": {{faker 'random.number'}}\n              },\n              \"timestampValue\": \"\"\n            }\n          ]\n        }\n      ]\n    },\n    \"value\": \"\"\n  },\n  \"overview\": {\n    \"transformationSummaries\": [\n      {\n        \"field\": {\n          \"name\": \"\"\n        },\n        \"fieldTransformations\": [\n          {\n            \"condition\": {\n              \"expressions\": {\n                \"conditions\": {\n                  \"conditions\": [\n                    {\n                      \"field\": {\n                        \"name\": \"\"\n                      },\n                      \"operator\": \"{{oneOf (array 'RELATIONAL_OPERATOR_UNSPECIFIED' 'EQUAL_TO' 'NOT_EQUAL_TO' 'GREATER_THAN' 'LESS_THAN' 'GREATER_THAN_OR_EQUALS' 'LESS_THAN_OR_EQUALS' 'EXISTS')}}\",\n                      \"value\": {\n                        \"booleanValue\": {{faker 'random.boolean'}},\n                        \"dateValue\": {\n                          \"day\": {{faker 'random.number'}},\n                          \"month\": {{faker 'random.number'}},\n                          \"year\": {{faker 'random.number'}}\n                        },\n                        \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                        \"floatValue\": {{faker 'random.float'}},\n                        \"integerValue\": \"\",\n                        \"stringValue\": \"\",\n                        \"timeValue\": {\n                          \"hours\": {{faker 'random.number'}},\n                          \"minutes\": {{faker 'random.number'}},\n                          \"nanos\": {{faker 'random.number'}},\n                          \"seconds\": {{faker 'random.number'}}\n                        },\n                        \"timestampValue\": \"\"\n                      }\n                    }\n                  ]\n                },\n                \"logicalOperator\": \"{{oneOf (array 'LOGICAL_OPERATOR_UNSPECIFIED' 'AND')}}\"\n              }\n            },\n            \"fields\": [\n              {\n                \"name\": \"\"\n              }\n            ],\n            \"infoTypeTransformations\": {\n              \"transformations\": [\n                {\n                  \"infoTypes\": [\n                    {\n                      \"name\": \"\",\n                      \"version\": \"\"\n                    }\n                  ],\n                  \"primitiveTransformation\": {\n                    \"bucketingConfig\": {\n                      \"buckets\": [\n                        {\n                          \"max\": {\n                            \"booleanValue\": {{faker 'random.boolean'}},\n                            \"dateValue\": {\n                              \"day\": {{faker 'random.number'}},\n                              \"month\": {{faker 'random.number'}},\n                              \"year\": {{faker 'random.number'}}\n                            },\n                            \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                            \"floatValue\": {{faker 'random.float'}},\n                            \"integerValue\": \"\",\n                            \"stringValue\": \"\",\n                            \"timeValue\": {\n                              \"hours\": {{faker 'random.number'}},\n                              \"minutes\": {{faker 'random.number'}},\n                              \"nanos\": {{faker 'random.number'}},\n                              \"seconds\": {{faker 'random.number'}}\n                            },\n                            \"timestampValue\": \"\"\n                          },\n                          \"min\": {\n                            \"booleanValue\": {{faker 'random.boolean'}},\n                            \"dateValue\": {\n                              \"day\": {{faker 'random.number'}},\n                              \"month\": {{faker 'random.number'}},\n                              \"year\": {{faker 'random.number'}}\n                            },\n                            \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                            \"floatValue\": {{faker 'random.float'}},\n                            \"integerValue\": \"\",\n                            \"stringValue\": \"\",\n                            \"timeValue\": {\n                              \"hours\": {{faker 'random.number'}},\n                              \"minutes\": {{faker 'random.number'}},\n                              \"nanos\": {{faker 'random.number'}},\n                              \"seconds\": {{faker 'random.number'}}\n                            },\n                            \"timestampValue\": \"\"\n                          },\n                          \"replacementValue\": {\n                            \"booleanValue\": {{faker 'random.boolean'}},\n                            \"dateValue\": {\n                              \"day\": {{faker 'random.number'}},\n                              \"month\": {{faker 'random.number'}},\n                              \"year\": {{faker 'random.number'}}\n                            },\n                            \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                            \"floatValue\": {{faker 'random.float'}},\n                            \"integerValue\": \"\",\n                            \"stringValue\": \"\",\n                            \"timeValue\": {\n                              \"hours\": {{faker 'random.number'}},\n                              \"minutes\": {{faker 'random.number'}},\n                              \"nanos\": {{faker 'random.number'}},\n                              \"seconds\": {{faker 'random.number'}}\n                            },\n                            \"timestampValue\": \"\"\n                          }\n                        }\n                      ]\n                    },\n                    \"characterMaskConfig\": {\n                      \"charactersToIgnore\": [\n                        {\n                          \"charactersToSkip\": \"\",\n                          \"commonCharactersToIgnore\": \"{{oneOf (array 'COMMON_CHARS_TO_IGNORE_UNSPECIFIED' 'NUMERIC' 'ALPHA_UPPER_CASE' 'ALPHA_LOWER_CASE' 'PUNCTUATION' 'WHITESPACE')}}\"\n                        }\n                      ],\n                      \"maskingCharacter\": \"\",\n                      \"numberToMask\": {{faker 'random.number'}},\n                      \"reverseOrder\": {{faker 'random.boolean'}}\n                    },\n                    \"cryptoDeterministicConfig\": {\n                      \"context\": {\n                        \"name\": \"\"\n                      },\n                      \"cryptoKey\": {\n                        \"kmsWrapped\": {\n                          \"cryptoKeyName\": \"\",\n                          \"wrappedKey\": \"\"\n                        },\n                        \"transient\": {\n                          \"name\": \"\"\n                        },\n                        \"unwrapped\": {\n                          \"key\": \"\"\n                        }\n                      },\n                      \"surrogateInfoType\": {\n                        \"name\": \"\",\n                        \"version\": \"\"\n                      }\n                    },\n                    \"cryptoHashConfig\": {\n                      \"cryptoKey\": {\n                        \"kmsWrapped\": {\n                          \"cryptoKeyName\": \"\",\n                          \"wrappedKey\": \"\"\n                        },\n                        \"transient\": {\n                          \"name\": \"\"\n                        },\n                        \"unwrapped\": {\n                          \"key\": \"\"\n                        }\n                      }\n                    },\n                    \"cryptoReplaceFfxFpeConfig\": {\n                      \"commonAlphabet\": \"{{oneOf (array 'FFX_COMMON_NATIVE_ALPHABET_UNSPECIFIED' 'NUMERIC' 'HEXADECIMAL' 'UPPER_CASE_ALPHA_NUMERIC' 'ALPHA_NUMERIC')}}\",\n                      \"context\": {\n                        \"name\": \"\"\n                      },\n                      \"cryptoKey\": {\n                        \"kmsWrapped\": {\n                          \"cryptoKeyName\": \"\",\n                          \"wrappedKey\": \"\"\n                        },\n                        \"transient\": {\n                          \"name\": \"\"\n                        },\n                        \"unwrapped\": {\n                          \"key\": \"\"\n                        }\n                      },\n                      \"customAlphabet\": \"\",\n                      \"radix\": {{faker 'random.number'}},\n                      \"surrogateInfoType\": {\n                        \"name\": \"\",\n                        \"version\": \"\"\n                      }\n                    },\n                    \"dateShiftConfig\": {\n                      \"context\": {\n                        \"name\": \"\"\n                      },\n                      \"cryptoKey\": {\n                        \"kmsWrapped\": {\n                          \"cryptoKeyName\": \"\",\n                          \"wrappedKey\": \"\"\n                        },\n                        \"transient\": {\n                          \"name\": \"\"\n                        },\n                        \"unwrapped\": {\n                          \"key\": \"\"\n                        }\n                      },\n                      \"lowerBoundDays\": {{faker 'random.number'}},\n                      \"upperBoundDays\": {{faker 'random.number'}}\n                    },\n                    \"fixedSizeBucketingConfig\": {\n                      \"bucketSize\": {{faker 'random.float'}},\n                      \"lowerBound\": {\n                        \"booleanValue\": {{faker 'random.boolean'}},\n                        \"dateValue\": {\n                          \"day\": {{faker 'random.number'}},\n                          \"month\": {{faker 'random.number'}},\n                          \"year\": {{faker 'random.number'}}\n                        },\n                        \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                        \"floatValue\": {{faker 'random.float'}},\n                        \"integerValue\": \"\",\n                        \"stringValue\": \"\",\n                        \"timeValue\": {\n                          \"hours\": {{faker 'random.number'}},\n                          \"minutes\": {{faker 'random.number'}},\n                          \"nanos\": {{faker 'random.number'}},\n                          \"seconds\": {{faker 'random.number'}}\n                        },\n                        \"timestampValue\": \"\"\n                      },\n                      \"upperBound\": {\n                        \"booleanValue\": {{faker 'random.boolean'}},\n                        \"dateValue\": {\n                          \"day\": {{faker 'random.number'}},\n                          \"month\": {{faker 'random.number'}},\n                          \"year\": {{faker 'random.number'}}\n                        },\n                        \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                        \"floatValue\": {{faker 'random.float'}},\n                        \"integerValue\": \"\",\n                        \"stringValue\": \"\",\n                        \"timeValue\": {\n                          \"hours\": {{faker 'random.number'}},\n                          \"minutes\": {{faker 'random.number'}},\n                          \"nanos\": {{faker 'random.number'}},\n                          \"seconds\": {{faker 'random.number'}}\n                        },\n                        \"timestampValue\": \"\"\n                      }\n                    },\n                    \"redactConfig\": {},\n                    \"replaceConfig\": {\n                      \"newValue\": {\n                        \"booleanValue\": {{faker 'random.boolean'}},\n                        \"dateValue\": {\n                          \"day\": {{faker 'random.number'}},\n                          \"month\": {{faker 'random.number'}},\n                          \"year\": {{faker 'random.number'}}\n                        },\n                        \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                        \"floatValue\": {{faker 'random.float'}},\n                        \"integerValue\": \"\",\n                        \"stringValue\": \"\",\n                        \"timeValue\": {\n                          \"hours\": {{faker 'random.number'}},\n                          \"minutes\": {{faker 'random.number'}},\n                          \"nanos\": {{faker 'random.number'}},\n                          \"seconds\": {{faker 'random.number'}}\n                        },\n                        \"timestampValue\": \"\"\n                      }\n                    },\n                    \"replaceDictionaryConfig\": {\n                      \"wordList\": {\n                        \"words\": [\n                          \"\"\n                        ]\n                      }\n                    },\n                    \"replaceWithInfoTypeConfig\": {},\n                    \"timePartConfig\": {\n                      \"partToExtract\": \"{{oneOf (array 'TIME_PART_UNSPECIFIED' 'YEAR' 'MONTH' 'DAY_OF_MONTH' 'DAY_OF_WEEK' 'WEEK_OF_YEAR' 'HOUR_OF_DAY')}}\"\n                    }\n                  }\n                }\n              ]\n            },\n            \"primitiveTransformation\": {\n              \"bucketingConfig\": {\n                \"buckets\": [\n                  {\n                    \"max\": {\n                      \"booleanValue\": {{faker 'random.boolean'}},\n                      \"dateValue\": {\n                        \"day\": {{faker 'random.number'}},\n                        \"month\": {{faker 'random.number'}},\n                        \"year\": {{faker 'random.number'}}\n                      },\n                      \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                      \"floatValue\": {{faker 'random.float'}},\n                      \"integerValue\": \"\",\n                      \"stringValue\": \"\",\n                      \"timeValue\": {\n                        \"hours\": {{faker 'random.number'}},\n                        \"minutes\": {{faker 'random.number'}},\n                        \"nanos\": {{faker 'random.number'}},\n                        \"seconds\": {{faker 'random.number'}}\n                      },\n                      \"timestampValue\": \"\"\n                    },\n                    \"min\": {\n                      \"booleanValue\": {{faker 'random.boolean'}},\n                      \"dateValue\": {\n                        \"day\": {{faker 'random.number'}},\n                        \"month\": {{faker 'random.number'}},\n                        \"year\": {{faker 'random.number'}}\n                      },\n                      \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                      \"floatValue\": {{faker 'random.float'}},\n                      \"integerValue\": \"\",\n                      \"stringValue\": \"\",\n                      \"timeValue\": {\n                        \"hours\": {{faker 'random.number'}},\n                        \"minutes\": {{faker 'random.number'}},\n                        \"nanos\": {{faker 'random.number'}},\n                        \"seconds\": {{faker 'random.number'}}\n                      },\n                      \"timestampValue\": \"\"\n                    },\n                    \"replacementValue\": {\n                      \"booleanValue\": {{faker 'random.boolean'}},\n                      \"dateValue\": {\n                        \"day\": {{faker 'random.number'}},\n                        \"month\": {{faker 'random.number'}},\n                        \"year\": {{faker 'random.number'}}\n                      },\n                      \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                      \"floatValue\": {{faker 'random.float'}},\n                      \"integerValue\": \"\",\n                      \"stringValue\": \"\",\n                      \"timeValue\": {\n                        \"hours\": {{faker 'random.number'}},\n                        \"minutes\": {{faker 'random.number'}},\n                        \"nanos\": {{faker 'random.number'}},\n                        \"seconds\": {{faker 'random.number'}}\n                      },\n                      \"timestampValue\": \"\"\n                    }\n                  }\n                ]\n              },\n              \"characterMaskConfig\": {\n                \"charactersToIgnore\": [\n                  {\n                    \"charactersToSkip\": \"\",\n                    \"commonCharactersToIgnore\": \"{{oneOf (array 'COMMON_CHARS_TO_IGNORE_UNSPECIFIED' 'NUMERIC' 'ALPHA_UPPER_CASE' 'ALPHA_LOWER_CASE' 'PUNCTUATION' 'WHITESPACE')}}\"\n                  }\n                ],\n                \"maskingCharacter\": \"\",\n                \"numberToMask\": {{faker 'random.number'}},\n                \"reverseOrder\": {{faker 'random.boolean'}}\n              },\n              \"cryptoDeterministicConfig\": {\n                \"context\": {\n                  \"name\": \"\"\n                },\n                \"cryptoKey\": {\n                  \"kmsWrapped\": {\n                    \"cryptoKeyName\": \"\",\n                    \"wrappedKey\": \"\"\n                  },\n                  \"transient\": {\n                    \"name\": \"\"\n                  },\n                  \"unwrapped\": {\n                    \"key\": \"\"\n                  }\n                },\n                \"surrogateInfoType\": {\n                  \"name\": \"\",\n                  \"version\": \"\"\n                }\n              },\n              \"cryptoHashConfig\": {\n                \"cryptoKey\": {\n                  \"kmsWrapped\": {\n                    \"cryptoKeyName\": \"\",\n                    \"wrappedKey\": \"\"\n                  },\n                  \"transient\": {\n                    \"name\": \"\"\n                  },\n                  \"unwrapped\": {\n                    \"key\": \"\"\n                  }\n                }\n              },\n              \"cryptoReplaceFfxFpeConfig\": {\n                \"commonAlphabet\": \"{{oneOf (array 'FFX_COMMON_NATIVE_ALPHABET_UNSPECIFIED' 'NUMERIC' 'HEXADECIMAL' 'UPPER_CASE_ALPHA_NUMERIC' 'ALPHA_NUMERIC')}}\",\n                \"context\": {\n                  \"name\": \"\"\n                },\n                \"cryptoKey\": {\n                  \"kmsWrapped\": {\n                    \"cryptoKeyName\": \"\",\n                    \"wrappedKey\": \"\"\n                  },\n                  \"transient\": {\n                    \"name\": \"\"\n                  },\n                  \"unwrapped\": {\n                    \"key\": \"\"\n                  }\n                },\n                \"customAlphabet\": \"\",\n                \"radix\": {{faker 'random.number'}},\n                \"surrogateInfoType\": {\n                  \"name\": \"\",\n                  \"version\": \"\"\n                }\n              },\n              \"dateShiftConfig\": {\n                \"context\": {\n                  \"name\": \"\"\n                },\n                \"cryptoKey\": {\n                  \"kmsWrapped\": {\n                    \"cryptoKeyName\": \"\",\n                    \"wrappedKey\": \"\"\n                  },\n                  \"transient\": {\n                    \"name\": \"\"\n                  },\n                  \"unwrapped\": {\n                    \"key\": \"\"\n                  }\n                },\n                \"lowerBoundDays\": {{faker 'random.number'}},\n                \"upperBoundDays\": {{faker 'random.number'}}\n              },\n              \"fixedSizeBucketingConfig\": {\n                \"bucketSize\": {{faker 'random.float'}},\n                \"lowerBound\": {\n                  \"booleanValue\": {{faker 'random.boolean'}},\n                  \"dateValue\": {\n                    \"day\": {{faker 'random.number'}},\n                    \"month\": {{faker 'random.number'}},\n                    \"year\": {{faker 'random.number'}}\n                  },\n                  \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                  \"floatValue\": {{faker 'random.float'}},\n                  \"integerValue\": \"\",\n                  \"stringValue\": \"\",\n                  \"timeValue\": {\n                    \"hours\": {{faker 'random.number'}},\n                    \"minutes\": {{faker 'random.number'}},\n                    \"nanos\": {{faker 'random.number'}},\n                    \"seconds\": {{faker 'random.number'}}\n                  },\n                  \"timestampValue\": \"\"\n                },\n                \"upperBound\": {\n                  \"booleanValue\": {{faker 'random.boolean'}},\n                  \"dateValue\": {\n                    \"day\": {{faker 'random.number'}},\n                    \"month\": {{faker 'random.number'}},\n                    \"year\": {{faker 'random.number'}}\n                  },\n                  \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                  \"floatValue\": {{faker 'random.float'}},\n                  \"integerValue\": \"\",\n                  \"stringValue\": \"\",\n                  \"timeValue\": {\n                    \"hours\": {{faker 'random.number'}},\n                    \"minutes\": {{faker 'random.number'}},\n                    \"nanos\": {{faker 'random.number'}},\n                    \"seconds\": {{faker 'random.number'}}\n                  },\n                  \"timestampValue\": \"\"\n                }\n              },\n              \"redactConfig\": {},\n              \"replaceConfig\": {\n                \"newValue\": {\n                  \"booleanValue\": {{faker 'random.boolean'}},\n                  \"dateValue\": {\n                    \"day\": {{faker 'random.number'}},\n                    \"month\": {{faker 'random.number'}},\n                    \"year\": {{faker 'random.number'}}\n                  },\n                  \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                  \"floatValue\": {{faker 'random.float'}},\n                  \"integerValue\": \"\",\n                  \"stringValue\": \"\",\n                  \"timeValue\": {\n                    \"hours\": {{faker 'random.number'}},\n                    \"minutes\": {{faker 'random.number'}},\n                    \"nanos\": {{faker 'random.number'}},\n                    \"seconds\": {{faker 'random.number'}}\n                  },\n                  \"timestampValue\": \"\"\n                }\n              },\n              \"replaceDictionaryConfig\": {\n                \"wordList\": {\n                  \"words\": [\n                    \"\"\n                  ]\n                }\n              },\n              \"replaceWithInfoTypeConfig\": {},\n              \"timePartConfig\": {\n                \"partToExtract\": \"{{oneOf (array 'TIME_PART_UNSPECIFIED' 'YEAR' 'MONTH' 'DAY_OF_MONTH' 'DAY_OF_WEEK' 'WEEK_OF_YEAR' 'HOUR_OF_DAY')}}\"\n              }\n            }\n          }\n        ],\n        \"infoType\": {\n          \"name\": \"\",\n          \"version\": \"\"\n        },\n        \"recordSuppress\": {\n          \"condition\": {\n            \"expressions\": {\n              \"conditions\": {\n                \"conditions\": [\n                  {\n                    \"field\": {\n                      \"name\": \"\"\n                    },\n                    \"operator\": \"{{oneOf (array 'RELATIONAL_OPERATOR_UNSPECIFIED' 'EQUAL_TO' 'NOT_EQUAL_TO' 'GREATER_THAN' 'LESS_THAN' 'GREATER_THAN_OR_EQUALS' 'LESS_THAN_OR_EQUALS' 'EXISTS')}}\",\n                    \"value\": {\n                      \"booleanValue\": {{faker 'random.boolean'}},\n                      \"dateValue\": {\n                        \"day\": {{faker 'random.number'}},\n                        \"month\": {{faker 'random.number'}},\n                        \"year\": {{faker 'random.number'}}\n                      },\n                      \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                      \"floatValue\": {{faker 'random.float'}},\n                      \"integerValue\": \"\",\n                      \"stringValue\": \"\",\n                      \"timeValue\": {\n                        \"hours\": {{faker 'random.number'}},\n                        \"minutes\": {{faker 'random.number'}},\n                        \"nanos\": {{faker 'random.number'}},\n                        \"seconds\": {{faker 'random.number'}}\n                      },\n                      \"timestampValue\": \"\"\n                    }\n                  }\n                ]\n              },\n              \"logicalOperator\": \"{{oneOf (array 'LOGICAL_OPERATOR_UNSPECIFIED' 'AND')}}\"\n            }\n          }\n        },\n        \"results\": [\n          {\n            \"code\": \"{{oneOf (array 'TRANSFORMATION_RESULT_CODE_UNSPECIFIED' 'SUCCESS' 'ERROR')}}\",\n            \"count\": \"\",\n            \"details\": \"\"\n          }\n        ],\n        \"transformation\": {\n          \"bucketingConfig\": {\n            \"buckets\": [\n              {\n                \"max\": {\n                  \"booleanValue\": {{faker 'random.boolean'}},\n                  \"dateValue\": {\n                    \"day\": {{faker 'random.number'}},\n                    \"month\": {{faker 'random.number'}},\n                    \"year\": {{faker 'random.number'}}\n                  },\n                  \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                  \"floatValue\": {{faker 'random.float'}},\n                  \"integerValue\": \"\",\n                  \"stringValue\": \"\",\n                  \"timeValue\": {\n                    \"hours\": {{faker 'random.number'}},\n                    \"minutes\": {{faker 'random.number'}},\n                    \"nanos\": {{faker 'random.number'}},\n                    \"seconds\": {{faker 'random.number'}}\n                  },\n                  \"timestampValue\": \"\"\n                },\n                \"min\": {\n                  \"booleanValue\": {{faker 'random.boolean'}},\n                  \"dateValue\": {\n                    \"day\": {{faker 'random.number'}},\n                    \"month\": {{faker 'random.number'}},\n                    \"year\": {{faker 'random.number'}}\n                  },\n                  \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                  \"floatValue\": {{faker 'random.float'}},\n                  \"integerValue\": \"\",\n                  \"stringValue\": \"\",\n                  \"timeValue\": {\n                    \"hours\": {{faker 'random.number'}},\n                    \"minutes\": {{faker 'random.number'}},\n                    \"nanos\": {{faker 'random.number'}},\n                    \"seconds\": {{faker 'random.number'}}\n                  },\n                  \"timestampValue\": \"\"\n                },\n                \"replacementValue\": {\n                  \"booleanValue\": {{faker 'random.boolean'}},\n                  \"dateValue\": {\n                    \"day\": {{faker 'random.number'}},\n                    \"month\": {{faker 'random.number'}},\n                    \"year\": {{faker 'random.number'}}\n                  },\n                  \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                  \"floatValue\": {{faker 'random.float'}},\n                  \"integerValue\": \"\",\n                  \"stringValue\": \"\",\n                  \"timeValue\": {\n                    \"hours\": {{faker 'random.number'}},\n                    \"minutes\": {{faker 'random.number'}},\n                    \"nanos\": {{faker 'random.number'}},\n                    \"seconds\": {{faker 'random.number'}}\n                  },\n                  \"timestampValue\": \"\"\n                }\n              }\n            ]\n          },\n          \"characterMaskConfig\": {\n            \"charactersToIgnore\": [\n              {\n                \"charactersToSkip\": \"\",\n                \"commonCharactersToIgnore\": \"{{oneOf (array 'COMMON_CHARS_TO_IGNORE_UNSPECIFIED' 'NUMERIC' 'ALPHA_UPPER_CASE' 'ALPHA_LOWER_CASE' 'PUNCTUATION' 'WHITESPACE')}}\"\n              }\n            ],\n            \"maskingCharacter\": \"\",\n            \"numberToMask\": {{faker 'random.number'}},\n            \"reverseOrder\": {{faker 'random.boolean'}}\n          },\n          \"cryptoDeterministicConfig\": {\n            \"context\": {\n              \"name\": \"\"\n            },\n            \"cryptoKey\": {\n              \"kmsWrapped\": {\n                \"cryptoKeyName\": \"\",\n                \"wrappedKey\": \"\"\n              },\n              \"transient\": {\n                \"name\": \"\"\n              },\n              \"unwrapped\": {\n                \"key\": \"\"\n              }\n            },\n            \"surrogateInfoType\": {\n              \"name\": \"\",\n              \"version\": \"\"\n            }\n          },\n          \"cryptoHashConfig\": {\n            \"cryptoKey\": {\n              \"kmsWrapped\": {\n                \"cryptoKeyName\": \"\",\n                \"wrappedKey\": \"\"\n              },\n              \"transient\": {\n                \"name\": \"\"\n              },\n              \"unwrapped\": {\n                \"key\": \"\"\n              }\n            }\n          },\n          \"cryptoReplaceFfxFpeConfig\": {\n            \"commonAlphabet\": \"{{oneOf (array 'FFX_COMMON_NATIVE_ALPHABET_UNSPECIFIED' 'NUMERIC' 'HEXADECIMAL' 'UPPER_CASE_ALPHA_NUMERIC' 'ALPHA_NUMERIC')}}\",\n            \"context\": {\n              \"name\": \"\"\n            },\n            \"cryptoKey\": {\n              \"kmsWrapped\": {\n                \"cryptoKeyName\": \"\",\n                \"wrappedKey\": \"\"\n              },\n              \"transient\": {\n                \"name\": \"\"\n              },\n              \"unwrapped\": {\n                \"key\": \"\"\n              }\n            },\n            \"customAlphabet\": \"\",\n            \"radix\": {{faker 'random.number'}},\n            \"surrogateInfoType\": {\n              \"name\": \"\",\n              \"version\": \"\"\n            }\n          },\n          \"dateShiftConfig\": {\n            \"context\": {\n              \"name\": \"\"\n            },\n            \"cryptoKey\": {\n              \"kmsWrapped\": {\n                \"cryptoKeyName\": \"\",\n                \"wrappedKey\": \"\"\n              },\n              \"transient\": {\n                \"name\": \"\"\n              },\n              \"unwrapped\": {\n                \"key\": \"\"\n              }\n            },\n            \"lowerBoundDays\": {{faker 'random.number'}},\n            \"upperBoundDays\": {{faker 'random.number'}}\n          },\n          \"fixedSizeBucketingConfig\": {\n            \"bucketSize\": {{faker 'random.float'}},\n            \"lowerBound\": {\n              \"booleanValue\": {{faker 'random.boolean'}},\n              \"dateValue\": {\n                \"day\": {{faker 'random.number'}},\n                \"month\": {{faker 'random.number'}},\n                \"year\": {{faker 'random.number'}}\n              },\n              \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n              \"floatValue\": {{faker 'random.float'}},\n              \"integerValue\": \"\",\n              \"stringValue\": \"\",\n              \"timeValue\": {\n                \"hours\": {{faker 'random.number'}},\n                \"minutes\": {{faker 'random.number'}},\n                \"nanos\": {{faker 'random.number'}},\n                \"seconds\": {{faker 'random.number'}}\n              },\n              \"timestampValue\": \"\"\n            },\n            \"upperBound\": {\n              \"booleanValue\": {{faker 'random.boolean'}},\n              \"dateValue\": {\n                \"day\": {{faker 'random.number'}},\n                \"month\": {{faker 'random.number'}},\n                \"year\": {{faker 'random.number'}}\n              },\n              \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n              \"floatValue\": {{faker 'random.float'}},\n              \"integerValue\": \"\",\n              \"stringValue\": \"\",\n              \"timeValue\": {\n                \"hours\": {{faker 'random.number'}},\n                \"minutes\": {{faker 'random.number'}},\n                \"nanos\": {{faker 'random.number'}},\n                \"seconds\": {{faker 'random.number'}}\n              },\n              \"timestampValue\": \"\"\n            }\n          },\n          \"redactConfig\": {},\n          \"replaceConfig\": {\n            \"newValue\": {\n              \"booleanValue\": {{faker 'random.boolean'}},\n              \"dateValue\": {\n                \"day\": {{faker 'random.number'}},\n                \"month\": {{faker 'random.number'}},\n                \"year\": {{faker 'random.number'}}\n              },\n              \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n              \"floatValue\": {{faker 'random.float'}},\n              \"integerValue\": \"\",\n              \"stringValue\": \"\",\n              \"timeValue\": {\n                \"hours\": {{faker 'random.number'}},\n                \"minutes\": {{faker 'random.number'}},\n                \"nanos\": {{faker 'random.number'}},\n                \"seconds\": {{faker 'random.number'}}\n              },\n              \"timestampValue\": \"\"\n            }\n          },\n          \"replaceDictionaryConfig\": {\n            \"wordList\": {\n              \"words\": [\n                \"\"\n              ]\n            }\n          },\n          \"replaceWithInfoTypeConfig\": {},\n          \"timePartConfig\": {\n            \"partToExtract\": \"{{oneOf (array 'TIME_PART_UNSPECIFIED' 'YEAR' 'MONTH' 'DAY_OF_MONTH' 'DAY_OF_WEEK' 'WEEK_OF_YEAR' 'HOUR_OF_DAY')}}\"\n          }\n        },\n        \"transformedBytes\": \"\"\n      }\n    ],\n    \"transformedBytes\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "825819e6-5945-4f85-883e-729b74867c0d",
      "documentation": "Finds potentially sensitive info in content. This method has limits on input size, processing time, and output size. When no InfoTypes or CustomInfoTypes are specified in this request, the system will automatically choose what detectors to run. By default this may be all types, but may change over time as detectors are updated. For how to guides, see https://cloud.google.com/dlp/docs/inspecting-images and https://cloud.google.com/dlp/docs/inspecting-text,",
      "method": "post",
      "endpoint": "v2/:parent/content:inspect",
      "responses": [
        {
          "uuid": "4a6905d4-1e58-4cb6-b295-dc77bbb04cef",
          "body": "{\n  \"result\": {\n    \"findings\": [\n      {\n        \"createTime\": \"\",\n        \"findingId\": \"\",\n        \"infoType\": {\n          \"name\": \"\",\n          \"version\": \"\"\n        },\n        \"jobCreateTime\": \"\",\n        \"jobName\": \"\",\n        \"labels\": {},\n        \"likelihood\": \"{{oneOf (array 'LIKELIHOOD_UNSPECIFIED' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n        \"location\": {\n          \"byteRange\": {\n            \"end\": \"\",\n            \"start\": \"\"\n          },\n          \"codepointRange\": {\n            \"end\": \"\",\n            \"start\": \"\"\n          },\n          \"container\": {\n            \"fullPath\": \"\",\n            \"projectId\": \"\",\n            \"relativePath\": \"\",\n            \"rootPath\": \"\",\n            \"type\": \"\",\n            \"updateTime\": \"\",\n            \"version\": \"\"\n          },\n          \"contentLocations\": [\n            {\n              \"containerName\": \"\",\n              \"containerTimestamp\": \"\",\n              \"containerVersion\": \"\",\n              \"documentLocation\": {\n                \"fileOffset\": \"\"\n              },\n              \"imageLocation\": {\n                \"boundingBoxes\": [\n                  {\n                    \"height\": {{faker 'random.number'}},\n                    \"left\": {{faker 'random.number'}},\n                    \"top\": {{faker 'random.number'}},\n                    \"width\": {{faker 'random.number'}}\n                  }\n                ]\n              },\n              \"metadataLocation\": {\n                \"storageLabel\": {\n                  \"key\": \"\"\n                },\n                \"type\": \"{{oneOf (array 'METADATATYPE_UNSPECIFIED' 'STORAGE_METADATA')}}\"\n              },\n              \"recordLocation\": {\n                \"fieldId\": {\n                  \"name\": \"\"\n                },\n                \"recordKey\": {\n                  \"bigQueryKey\": {\n                    \"rowNumber\": \"\",\n                    \"tableReference\": {\n                      \"datasetId\": \"\",\n                      \"projectId\": \"\",\n                      \"tableId\": \"\"\n                    }\n                  },\n                  \"datastoreKey\": {\n                    \"entityKey\": {\n                      \"partitionId\": {\n                        \"namespaceId\": \"\",\n                        \"projectId\": \"\"\n                      },\n                      \"path\": [\n                        {\n                          \"id\": \"\",\n                          \"kind\": \"\",\n                          \"name\": \"\"\n                        }\n                      ]\n                    }\n                  },\n                  \"idValues\": [\n                    \"\"\n                  ]\n                },\n                \"tableLocation\": {\n                  \"rowIndex\": \"\"\n                }\n              }\n            }\n          ]\n        },\n        \"name\": \"\",\n        \"quote\": \"\",\n        \"quoteInfo\": {\n          \"dateTime\": {\n            \"date\": {\n              \"day\": {{faker 'random.number'}},\n              \"month\": {{faker 'random.number'}},\n              \"year\": {{faker 'random.number'}}\n            },\n            \"dayOfWeek\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n            \"time\": {\n              \"hours\": {{faker 'random.number'}},\n              \"minutes\": {{faker 'random.number'}},\n              \"nanos\": {{faker 'random.number'}},\n              \"seconds\": {{faker 'random.number'}}\n            },\n            \"timeZone\": {\n              \"offsetMinutes\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"resourceName\": \"\",\n        \"triggerName\": \"\"\n      }\n    ],\n    \"findingsTruncated\": {{faker 'random.boolean'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0dad3824-b3fd-4c99-87f9-4d737ff048ef",
      "documentation": "Re-identifies content that has been de-identified. See https://cloud.google.com/dlp/docs/pseudonymization#re-identification_in_free_text_code_example to learn more.",
      "method": "post",
      "endpoint": "v2/:parent/content:reidentify",
      "responses": [
        {
          "uuid": "81e45348-7624-40bd-8a7e-98deb48ff863",
          "body": "{\n  \"item\": {\n    \"byteItem\": {\n      \"data\": \"\",\n      \"type\": \"{{oneOf (array 'BYTES_TYPE_UNSPECIFIED' 'IMAGE' 'IMAGE_JPEG' 'IMAGE_BMP' 'IMAGE_PNG' 'IMAGE_SVG' 'TEXT_UTF8' 'WORD_DOCUMENT' 'PDF' 'POWERPOINT_DOCUMENT' 'EXCEL_DOCUMENT' 'AVRO' 'CSV' 'TSV')}}\"\n    },\n    \"table\": {\n      \"headers\": [\n        {\n          \"name\": \"\"\n        }\n      ],\n      \"rows\": [\n        {\n          \"values\": [\n            {\n              \"booleanValue\": {{faker 'random.boolean'}},\n              \"dateValue\": {\n                \"day\": {{faker 'random.number'}},\n                \"month\": {{faker 'random.number'}},\n                \"year\": {{faker 'random.number'}}\n              },\n              \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n              \"floatValue\": {{faker 'random.float'}},\n              \"integerValue\": \"\",\n              \"stringValue\": \"\",\n              \"timeValue\": {\n                \"hours\": {{faker 'random.number'}},\n                \"minutes\": {{faker 'random.number'}},\n                \"nanos\": {{faker 'random.number'}},\n                \"seconds\": {{faker 'random.number'}}\n              },\n              \"timestampValue\": \"\"\n            }\n          ]\n        }\n      ]\n    },\n    \"value\": \"\"\n  },\n  \"overview\": {\n    \"transformationSummaries\": [\n      {\n        \"field\": {\n          \"name\": \"\"\n        },\n        \"fieldTransformations\": [\n          {\n            \"condition\": {\n              \"expressions\": {\n                \"conditions\": {\n                  \"conditions\": [\n                    {\n                      \"field\": {\n                        \"name\": \"\"\n                      },\n                      \"operator\": \"{{oneOf (array 'RELATIONAL_OPERATOR_UNSPECIFIED' 'EQUAL_TO' 'NOT_EQUAL_TO' 'GREATER_THAN' 'LESS_THAN' 'GREATER_THAN_OR_EQUALS' 'LESS_THAN_OR_EQUALS' 'EXISTS')}}\",\n                      \"value\": {\n                        \"booleanValue\": {{faker 'random.boolean'}},\n                        \"dateValue\": {\n                          \"day\": {{faker 'random.number'}},\n                          \"month\": {{faker 'random.number'}},\n                          \"year\": {{faker 'random.number'}}\n                        },\n                        \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                        \"floatValue\": {{faker 'random.float'}},\n                        \"integerValue\": \"\",\n                        \"stringValue\": \"\",\n                        \"timeValue\": {\n                          \"hours\": {{faker 'random.number'}},\n                          \"minutes\": {{faker 'random.number'}},\n                          \"nanos\": {{faker 'random.number'}},\n                          \"seconds\": {{faker 'random.number'}}\n                        },\n                        \"timestampValue\": \"\"\n                      }\n                    }\n                  ]\n                },\n                \"logicalOperator\": \"{{oneOf (array 'LOGICAL_OPERATOR_UNSPECIFIED' 'AND')}}\"\n              }\n            },\n            \"fields\": [\n              {\n                \"name\": \"\"\n              }\n            ],\n            \"infoTypeTransformations\": {\n              \"transformations\": [\n                {\n                  \"infoTypes\": [\n                    {\n                      \"name\": \"\",\n                      \"version\": \"\"\n                    }\n                  ],\n                  \"primitiveTransformation\": {\n                    \"bucketingConfig\": {\n                      \"buckets\": [\n                        {\n                          \"max\": {\n                            \"booleanValue\": {{faker 'random.boolean'}},\n                            \"dateValue\": {\n                              \"day\": {{faker 'random.number'}},\n                              \"month\": {{faker 'random.number'}},\n                              \"year\": {{faker 'random.number'}}\n                            },\n                            \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                            \"floatValue\": {{faker 'random.float'}},\n                            \"integerValue\": \"\",\n                            \"stringValue\": \"\",\n                            \"timeValue\": {\n                              \"hours\": {{faker 'random.number'}},\n                              \"minutes\": {{faker 'random.number'}},\n                              \"nanos\": {{faker 'random.number'}},\n                              \"seconds\": {{faker 'random.number'}}\n                            },\n                            \"timestampValue\": \"\"\n                          },\n                          \"min\": {\n                            \"booleanValue\": {{faker 'random.boolean'}},\n                            \"dateValue\": {\n                              \"day\": {{faker 'random.number'}},\n                              \"month\": {{faker 'random.number'}},\n                              \"year\": {{faker 'random.number'}}\n                            },\n                            \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                            \"floatValue\": {{faker 'random.float'}},\n                            \"integerValue\": \"\",\n                            \"stringValue\": \"\",\n                            \"timeValue\": {\n                              \"hours\": {{faker 'random.number'}},\n                              \"minutes\": {{faker 'random.number'}},\n                              \"nanos\": {{faker 'random.number'}},\n                              \"seconds\": {{faker 'random.number'}}\n                            },\n                            \"timestampValue\": \"\"\n                          },\n                          \"replacementValue\": {\n                            \"booleanValue\": {{faker 'random.boolean'}},\n                            \"dateValue\": {\n                              \"day\": {{faker 'random.number'}},\n                              \"month\": {{faker 'random.number'}},\n                              \"year\": {{faker 'random.number'}}\n                            },\n                            \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                            \"floatValue\": {{faker 'random.float'}},\n                            \"integerValue\": \"\",\n                            \"stringValue\": \"\",\n                            \"timeValue\": {\n                              \"hours\": {{faker 'random.number'}},\n                              \"minutes\": {{faker 'random.number'}},\n                              \"nanos\": {{faker 'random.number'}},\n                              \"seconds\": {{faker 'random.number'}}\n                            },\n                            \"timestampValue\": \"\"\n                          }\n                        }\n                      ]\n                    },\n                    \"characterMaskConfig\": {\n                      \"charactersToIgnore\": [\n                        {\n                          \"charactersToSkip\": \"\",\n                          \"commonCharactersToIgnore\": \"{{oneOf (array 'COMMON_CHARS_TO_IGNORE_UNSPECIFIED' 'NUMERIC' 'ALPHA_UPPER_CASE' 'ALPHA_LOWER_CASE' 'PUNCTUATION' 'WHITESPACE')}}\"\n                        }\n                      ],\n                      \"maskingCharacter\": \"\",\n                      \"numberToMask\": {{faker 'random.number'}},\n                      \"reverseOrder\": {{faker 'random.boolean'}}\n                    },\n                    \"cryptoDeterministicConfig\": {\n                      \"context\": {\n                        \"name\": \"\"\n                      },\n                      \"cryptoKey\": {\n                        \"kmsWrapped\": {\n                          \"cryptoKeyName\": \"\",\n                          \"wrappedKey\": \"\"\n                        },\n                        \"transient\": {\n                          \"name\": \"\"\n                        },\n                        \"unwrapped\": {\n                          \"key\": \"\"\n                        }\n                      },\n                      \"surrogateInfoType\": {\n                        \"name\": \"\",\n                        \"version\": \"\"\n                      }\n                    },\n                    \"cryptoHashConfig\": {\n                      \"cryptoKey\": {\n                        \"kmsWrapped\": {\n                          \"cryptoKeyName\": \"\",\n                          \"wrappedKey\": \"\"\n                        },\n                        \"transient\": {\n                          \"name\": \"\"\n                        },\n                        \"unwrapped\": {\n                          \"key\": \"\"\n                        }\n                      }\n                    },\n                    \"cryptoReplaceFfxFpeConfig\": {\n                      \"commonAlphabet\": \"{{oneOf (array 'FFX_COMMON_NATIVE_ALPHABET_UNSPECIFIED' 'NUMERIC' 'HEXADECIMAL' 'UPPER_CASE_ALPHA_NUMERIC' 'ALPHA_NUMERIC')}}\",\n                      \"context\": {\n                        \"name\": \"\"\n                      },\n                      \"cryptoKey\": {\n                        \"kmsWrapped\": {\n                          \"cryptoKeyName\": \"\",\n                          \"wrappedKey\": \"\"\n                        },\n                        \"transient\": {\n                          \"name\": \"\"\n                        },\n                        \"unwrapped\": {\n                          \"key\": \"\"\n                        }\n                      },\n                      \"customAlphabet\": \"\",\n                      \"radix\": {{faker 'random.number'}},\n                      \"surrogateInfoType\": {\n                        \"name\": \"\",\n                        \"version\": \"\"\n                      }\n                    },\n                    \"dateShiftConfig\": {\n                      \"context\": {\n                        \"name\": \"\"\n                      },\n                      \"cryptoKey\": {\n                        \"kmsWrapped\": {\n                          \"cryptoKeyName\": \"\",\n                          \"wrappedKey\": \"\"\n                        },\n                        \"transient\": {\n                          \"name\": \"\"\n                        },\n                        \"unwrapped\": {\n                          \"key\": \"\"\n                        }\n                      },\n                      \"lowerBoundDays\": {{faker 'random.number'}},\n                      \"upperBoundDays\": {{faker 'random.number'}}\n                    },\n                    \"fixedSizeBucketingConfig\": {\n                      \"bucketSize\": {{faker 'random.float'}},\n                      \"lowerBound\": {\n                        \"booleanValue\": {{faker 'random.boolean'}},\n                        \"dateValue\": {\n                          \"day\": {{faker 'random.number'}},\n                          \"month\": {{faker 'random.number'}},\n                          \"year\": {{faker 'random.number'}}\n                        },\n                        \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                        \"floatValue\": {{faker 'random.float'}},\n                        \"integerValue\": \"\",\n                        \"stringValue\": \"\",\n                        \"timeValue\": {\n                          \"hours\": {{faker 'random.number'}},\n                          \"minutes\": {{faker 'random.number'}},\n                          \"nanos\": {{faker 'random.number'}},\n                          \"seconds\": {{faker 'random.number'}}\n                        },\n                        \"timestampValue\": \"\"\n                      },\n                      \"upperBound\": {\n                        \"booleanValue\": {{faker 'random.boolean'}},\n                        \"dateValue\": {\n                          \"day\": {{faker 'random.number'}},\n                          \"month\": {{faker 'random.number'}},\n                          \"year\": {{faker 'random.number'}}\n                        },\n                        \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                        \"floatValue\": {{faker 'random.float'}},\n                        \"integerValue\": \"\",\n                        \"stringValue\": \"\",\n                        \"timeValue\": {\n                          \"hours\": {{faker 'random.number'}},\n                          \"minutes\": {{faker 'random.number'}},\n                          \"nanos\": {{faker 'random.number'}},\n                          \"seconds\": {{faker 'random.number'}}\n                        },\n                        \"timestampValue\": \"\"\n                      }\n                    },\n                    \"redactConfig\": {},\n                    \"replaceConfig\": {\n                      \"newValue\": {\n                        \"booleanValue\": {{faker 'random.boolean'}},\n                        \"dateValue\": {\n                          \"day\": {{faker 'random.number'}},\n                          \"month\": {{faker 'random.number'}},\n                          \"year\": {{faker 'random.number'}}\n                        },\n                        \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                        \"floatValue\": {{faker 'random.float'}},\n                        \"integerValue\": \"\",\n                        \"stringValue\": \"\",\n                        \"timeValue\": {\n                          \"hours\": {{faker 'random.number'}},\n                          \"minutes\": {{faker 'random.number'}},\n                          \"nanos\": {{faker 'random.number'}},\n                          \"seconds\": {{faker 'random.number'}}\n                        },\n                        \"timestampValue\": \"\"\n                      }\n                    },\n                    \"replaceDictionaryConfig\": {\n                      \"wordList\": {\n                        \"words\": [\n                          \"\"\n                        ]\n                      }\n                    },\n                    \"replaceWithInfoTypeConfig\": {},\n                    \"timePartConfig\": {\n                      \"partToExtract\": \"{{oneOf (array 'TIME_PART_UNSPECIFIED' 'YEAR' 'MONTH' 'DAY_OF_MONTH' 'DAY_OF_WEEK' 'WEEK_OF_YEAR' 'HOUR_OF_DAY')}}\"\n                    }\n                  }\n                }\n              ]\n            },\n            \"primitiveTransformation\": {\n              \"bucketingConfig\": {\n                \"buckets\": [\n                  {\n                    \"max\": {\n                      \"booleanValue\": {{faker 'random.boolean'}},\n                      \"dateValue\": {\n                        \"day\": {{faker 'random.number'}},\n                        \"month\": {{faker 'random.number'}},\n                        \"year\": {{faker 'random.number'}}\n                      },\n                      \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                      \"floatValue\": {{faker 'random.float'}},\n                      \"integerValue\": \"\",\n                      \"stringValue\": \"\",\n                      \"timeValue\": {\n                        \"hours\": {{faker 'random.number'}},\n                        \"minutes\": {{faker 'random.number'}},\n                        \"nanos\": {{faker 'random.number'}},\n                        \"seconds\": {{faker 'random.number'}}\n                      },\n                      \"timestampValue\": \"\"\n                    },\n                    \"min\": {\n                      \"booleanValue\": {{faker 'random.boolean'}},\n                      \"dateValue\": {\n                        \"day\": {{faker 'random.number'}},\n                        \"month\": {{faker 'random.number'}},\n                        \"year\": {{faker 'random.number'}}\n                      },\n                      \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                      \"floatValue\": {{faker 'random.float'}},\n                      \"integerValue\": \"\",\n                      \"stringValue\": \"\",\n                      \"timeValue\": {\n                        \"hours\": {{faker 'random.number'}},\n                        \"minutes\": {{faker 'random.number'}},\n                        \"nanos\": {{faker 'random.number'}},\n                        \"seconds\": {{faker 'random.number'}}\n                      },\n                      \"timestampValue\": \"\"\n                    },\n                    \"replacementValue\": {\n                      \"booleanValue\": {{faker 'random.boolean'}},\n                      \"dateValue\": {\n                        \"day\": {{faker 'random.number'}},\n                        \"month\": {{faker 'random.number'}},\n                        \"year\": {{faker 'random.number'}}\n                      },\n                      \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                      \"floatValue\": {{faker 'random.float'}},\n                      \"integerValue\": \"\",\n                      \"stringValue\": \"\",\n                      \"timeValue\": {\n                        \"hours\": {{faker 'random.number'}},\n                        \"minutes\": {{faker 'random.number'}},\n                        \"nanos\": {{faker 'random.number'}},\n                        \"seconds\": {{faker 'random.number'}}\n                      },\n                      \"timestampValue\": \"\"\n                    }\n                  }\n                ]\n              },\n              \"characterMaskConfig\": {\n                \"charactersToIgnore\": [\n                  {\n                    \"charactersToSkip\": \"\",\n                    \"commonCharactersToIgnore\": \"{{oneOf (array 'COMMON_CHARS_TO_IGNORE_UNSPECIFIED' 'NUMERIC' 'ALPHA_UPPER_CASE' 'ALPHA_LOWER_CASE' 'PUNCTUATION' 'WHITESPACE')}}\"\n                  }\n                ],\n                \"maskingCharacter\": \"\",\n                \"numberToMask\": {{faker 'random.number'}},\n                \"reverseOrder\": {{faker 'random.boolean'}}\n              },\n              \"cryptoDeterministicConfig\": {\n                \"context\": {\n                  \"name\": \"\"\n                },\n                \"cryptoKey\": {\n                  \"kmsWrapped\": {\n                    \"cryptoKeyName\": \"\",\n                    \"wrappedKey\": \"\"\n                  },\n                  \"transient\": {\n                    \"name\": \"\"\n                  },\n                  \"unwrapped\": {\n                    \"key\": \"\"\n                  }\n                },\n                \"surrogateInfoType\": {\n                  \"name\": \"\",\n                  \"version\": \"\"\n                }\n              },\n              \"cryptoHashConfig\": {\n                \"cryptoKey\": {\n                  \"kmsWrapped\": {\n                    \"cryptoKeyName\": \"\",\n                    \"wrappedKey\": \"\"\n                  },\n                  \"transient\": {\n                    \"name\": \"\"\n                  },\n                  \"unwrapped\": {\n                    \"key\": \"\"\n                  }\n                }\n              },\n              \"cryptoReplaceFfxFpeConfig\": {\n                \"commonAlphabet\": \"{{oneOf (array 'FFX_COMMON_NATIVE_ALPHABET_UNSPECIFIED' 'NUMERIC' 'HEXADECIMAL' 'UPPER_CASE_ALPHA_NUMERIC' 'ALPHA_NUMERIC')}}\",\n                \"context\": {\n                  \"name\": \"\"\n                },\n                \"cryptoKey\": {\n                  \"kmsWrapped\": {\n                    \"cryptoKeyName\": \"\",\n                    \"wrappedKey\": \"\"\n                  },\n                  \"transient\": {\n                    \"name\": \"\"\n                  },\n                  \"unwrapped\": {\n                    \"key\": \"\"\n                  }\n                },\n                \"customAlphabet\": \"\",\n                \"radix\": {{faker 'random.number'}},\n                \"surrogateInfoType\": {\n                  \"name\": \"\",\n                  \"version\": \"\"\n                }\n              },\n              \"dateShiftConfig\": {\n                \"context\": {\n                  \"name\": \"\"\n                },\n                \"cryptoKey\": {\n                  \"kmsWrapped\": {\n                    \"cryptoKeyName\": \"\",\n                    \"wrappedKey\": \"\"\n                  },\n                  \"transient\": {\n                    \"name\": \"\"\n                  },\n                  \"unwrapped\": {\n                    \"key\": \"\"\n                  }\n                },\n                \"lowerBoundDays\": {{faker 'random.number'}},\n                \"upperBoundDays\": {{faker 'random.number'}}\n              },\n              \"fixedSizeBucketingConfig\": {\n                \"bucketSize\": {{faker 'random.float'}},\n                \"lowerBound\": {\n                  \"booleanValue\": {{faker 'random.boolean'}},\n                  \"dateValue\": {\n                    \"day\": {{faker 'random.number'}},\n                    \"month\": {{faker 'random.number'}},\n                    \"year\": {{faker 'random.number'}}\n                  },\n                  \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                  \"floatValue\": {{faker 'random.float'}},\n                  \"integerValue\": \"\",\n                  \"stringValue\": \"\",\n                  \"timeValue\": {\n                    \"hours\": {{faker 'random.number'}},\n                    \"minutes\": {{faker 'random.number'}},\n                    \"nanos\": {{faker 'random.number'}},\n                    \"seconds\": {{faker 'random.number'}}\n                  },\n                  \"timestampValue\": \"\"\n                },\n                \"upperBound\": {\n                  \"booleanValue\": {{faker 'random.boolean'}},\n                  \"dateValue\": {\n                    \"day\": {{faker 'random.number'}},\n                    \"month\": {{faker 'random.number'}},\n                    \"year\": {{faker 'random.number'}}\n                  },\n                  \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                  \"floatValue\": {{faker 'random.float'}},\n                  \"integerValue\": \"\",\n                  \"stringValue\": \"\",\n                  \"timeValue\": {\n                    \"hours\": {{faker 'random.number'}},\n                    \"minutes\": {{faker 'random.number'}},\n                    \"nanos\": {{faker 'random.number'}},\n                    \"seconds\": {{faker 'random.number'}}\n                  },\n                  \"timestampValue\": \"\"\n                }\n              },\n              \"redactConfig\": {},\n              \"replaceConfig\": {\n                \"newValue\": {\n                  \"booleanValue\": {{faker 'random.boolean'}},\n                  \"dateValue\": {\n                    \"day\": {{faker 'random.number'}},\n                    \"month\": {{faker 'random.number'}},\n                    \"year\": {{faker 'random.number'}}\n                  },\n                  \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                  \"floatValue\": {{faker 'random.float'}},\n                  \"integerValue\": \"\",\n                  \"stringValue\": \"\",\n                  \"timeValue\": {\n                    \"hours\": {{faker 'random.number'}},\n                    \"minutes\": {{faker 'random.number'}},\n                    \"nanos\": {{faker 'random.number'}},\n                    \"seconds\": {{faker 'random.number'}}\n                  },\n                  \"timestampValue\": \"\"\n                }\n              },\n              \"replaceDictionaryConfig\": {\n                \"wordList\": {\n                  \"words\": [\n                    \"\"\n                  ]\n                }\n              },\n              \"replaceWithInfoTypeConfig\": {},\n              \"timePartConfig\": {\n                \"partToExtract\": \"{{oneOf (array 'TIME_PART_UNSPECIFIED' 'YEAR' 'MONTH' 'DAY_OF_MONTH' 'DAY_OF_WEEK' 'WEEK_OF_YEAR' 'HOUR_OF_DAY')}}\"\n              }\n            }\n          }\n        ],\n        \"infoType\": {\n          \"name\": \"\",\n          \"version\": \"\"\n        },\n        \"recordSuppress\": {\n          \"condition\": {\n            \"expressions\": {\n              \"conditions\": {\n                \"conditions\": [\n                  {\n                    \"field\": {\n                      \"name\": \"\"\n                    },\n                    \"operator\": \"{{oneOf (array 'RELATIONAL_OPERATOR_UNSPECIFIED' 'EQUAL_TO' 'NOT_EQUAL_TO' 'GREATER_THAN' 'LESS_THAN' 'GREATER_THAN_OR_EQUALS' 'LESS_THAN_OR_EQUALS' 'EXISTS')}}\",\n                    \"value\": {\n                      \"booleanValue\": {{faker 'random.boolean'}},\n                      \"dateValue\": {\n                        \"day\": {{faker 'random.number'}},\n                        \"month\": {{faker 'random.number'}},\n                        \"year\": {{faker 'random.number'}}\n                      },\n                      \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                      \"floatValue\": {{faker 'random.float'}},\n                      \"integerValue\": \"\",\n                      \"stringValue\": \"\",\n                      \"timeValue\": {\n                        \"hours\": {{faker 'random.number'}},\n                        \"minutes\": {{faker 'random.number'}},\n                        \"nanos\": {{faker 'random.number'}},\n                        \"seconds\": {{faker 'random.number'}}\n                      },\n                      \"timestampValue\": \"\"\n                    }\n                  }\n                ]\n              },\n              \"logicalOperator\": \"{{oneOf (array 'LOGICAL_OPERATOR_UNSPECIFIED' 'AND')}}\"\n            }\n          }\n        },\n        \"results\": [\n          {\n            \"code\": \"{{oneOf (array 'TRANSFORMATION_RESULT_CODE_UNSPECIFIED' 'SUCCESS' 'ERROR')}}\",\n            \"count\": \"\",\n            \"details\": \"\"\n          }\n        ],\n        \"transformation\": {\n          \"bucketingConfig\": {\n            \"buckets\": [\n              {\n                \"max\": {\n                  \"booleanValue\": {{faker 'random.boolean'}},\n                  \"dateValue\": {\n                    \"day\": {{faker 'random.number'}},\n                    \"month\": {{faker 'random.number'}},\n                    \"year\": {{faker 'random.number'}}\n                  },\n                  \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                  \"floatValue\": {{faker 'random.float'}},\n                  \"integerValue\": \"\",\n                  \"stringValue\": \"\",\n                  \"timeValue\": {\n                    \"hours\": {{faker 'random.number'}},\n                    \"minutes\": {{faker 'random.number'}},\n                    \"nanos\": {{faker 'random.number'}},\n                    \"seconds\": {{faker 'random.number'}}\n                  },\n                  \"timestampValue\": \"\"\n                },\n                \"min\": {\n                  \"booleanValue\": {{faker 'random.boolean'}},\n                  \"dateValue\": {\n                    \"day\": {{faker 'random.number'}},\n                    \"month\": {{faker 'random.number'}},\n                    \"year\": {{faker 'random.number'}}\n                  },\n                  \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                  \"floatValue\": {{faker 'random.float'}},\n                  \"integerValue\": \"\",\n                  \"stringValue\": \"\",\n                  \"timeValue\": {\n                    \"hours\": {{faker 'random.number'}},\n                    \"minutes\": {{faker 'random.number'}},\n                    \"nanos\": {{faker 'random.number'}},\n                    \"seconds\": {{faker 'random.number'}}\n                  },\n                  \"timestampValue\": \"\"\n                },\n                \"replacementValue\": {\n                  \"booleanValue\": {{faker 'random.boolean'}},\n                  \"dateValue\": {\n                    \"day\": {{faker 'random.number'}},\n                    \"month\": {{faker 'random.number'}},\n                    \"year\": {{faker 'random.number'}}\n                  },\n                  \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                  \"floatValue\": {{faker 'random.float'}},\n                  \"integerValue\": \"\",\n                  \"stringValue\": \"\",\n                  \"timeValue\": {\n                    \"hours\": {{faker 'random.number'}},\n                    \"minutes\": {{faker 'random.number'}},\n                    \"nanos\": {{faker 'random.number'}},\n                    \"seconds\": {{faker 'random.number'}}\n                  },\n                  \"timestampValue\": \"\"\n                }\n              }\n            ]\n          },\n          \"characterMaskConfig\": {\n            \"charactersToIgnore\": [\n              {\n                \"charactersToSkip\": \"\",\n                \"commonCharactersToIgnore\": \"{{oneOf (array 'COMMON_CHARS_TO_IGNORE_UNSPECIFIED' 'NUMERIC' 'ALPHA_UPPER_CASE' 'ALPHA_LOWER_CASE' 'PUNCTUATION' 'WHITESPACE')}}\"\n              }\n            ],\n            \"maskingCharacter\": \"\",\n            \"numberToMask\": {{faker 'random.number'}},\n            \"reverseOrder\": {{faker 'random.boolean'}}\n          },\n          \"cryptoDeterministicConfig\": {\n            \"context\": {\n              \"name\": \"\"\n            },\n            \"cryptoKey\": {\n              \"kmsWrapped\": {\n                \"cryptoKeyName\": \"\",\n                \"wrappedKey\": \"\"\n              },\n              \"transient\": {\n                \"name\": \"\"\n              },\n              \"unwrapped\": {\n                \"key\": \"\"\n              }\n            },\n            \"surrogateInfoType\": {\n              \"name\": \"\",\n              \"version\": \"\"\n            }\n          },\n          \"cryptoHashConfig\": {\n            \"cryptoKey\": {\n              \"kmsWrapped\": {\n                \"cryptoKeyName\": \"\",\n                \"wrappedKey\": \"\"\n              },\n              \"transient\": {\n                \"name\": \"\"\n              },\n              \"unwrapped\": {\n                \"key\": \"\"\n              }\n            }\n          },\n          \"cryptoReplaceFfxFpeConfig\": {\n            \"commonAlphabet\": \"{{oneOf (array 'FFX_COMMON_NATIVE_ALPHABET_UNSPECIFIED' 'NUMERIC' 'HEXADECIMAL' 'UPPER_CASE_ALPHA_NUMERIC' 'ALPHA_NUMERIC')}}\",\n            \"context\": {\n              \"name\": \"\"\n            },\n            \"cryptoKey\": {\n              \"kmsWrapped\": {\n                \"cryptoKeyName\": \"\",\n                \"wrappedKey\": \"\"\n              },\n              \"transient\": {\n                \"name\": \"\"\n              },\n              \"unwrapped\": {\n                \"key\": \"\"\n              }\n            },\n            \"customAlphabet\": \"\",\n            \"radix\": {{faker 'random.number'}},\n            \"surrogateInfoType\": {\n              \"name\": \"\",\n              \"version\": \"\"\n            }\n          },\n          \"dateShiftConfig\": {\n            \"context\": {\n              \"name\": \"\"\n            },\n            \"cryptoKey\": {\n              \"kmsWrapped\": {\n                \"cryptoKeyName\": \"\",\n                \"wrappedKey\": \"\"\n              },\n              \"transient\": {\n                \"name\": \"\"\n              },\n              \"unwrapped\": {\n                \"key\": \"\"\n              }\n            },\n            \"lowerBoundDays\": {{faker 'random.number'}},\n            \"upperBoundDays\": {{faker 'random.number'}}\n          },\n          \"fixedSizeBucketingConfig\": {\n            \"bucketSize\": {{faker 'random.float'}},\n            \"lowerBound\": {\n              \"booleanValue\": {{faker 'random.boolean'}},\n              \"dateValue\": {\n                \"day\": {{faker 'random.number'}},\n                \"month\": {{faker 'random.number'}},\n                \"year\": {{faker 'random.number'}}\n              },\n              \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n              \"floatValue\": {{faker 'random.float'}},\n              \"integerValue\": \"\",\n              \"stringValue\": \"\",\n              \"timeValue\": {\n                \"hours\": {{faker 'random.number'}},\n                \"minutes\": {{faker 'random.number'}},\n                \"nanos\": {{faker 'random.number'}},\n                \"seconds\": {{faker 'random.number'}}\n              },\n              \"timestampValue\": \"\"\n            },\n            \"upperBound\": {\n              \"booleanValue\": {{faker 'random.boolean'}},\n              \"dateValue\": {\n                \"day\": {{faker 'random.number'}},\n                \"month\": {{faker 'random.number'}},\n                \"year\": {{faker 'random.number'}}\n              },\n              \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n              \"floatValue\": {{faker 'random.float'}},\n              \"integerValue\": \"\",\n              \"stringValue\": \"\",\n              \"timeValue\": {\n                \"hours\": {{faker 'random.number'}},\n                \"minutes\": {{faker 'random.number'}},\n                \"nanos\": {{faker 'random.number'}},\n                \"seconds\": {{faker 'random.number'}}\n              },\n              \"timestampValue\": \"\"\n            }\n          },\n          \"redactConfig\": {},\n          \"replaceConfig\": {\n            \"newValue\": {\n              \"booleanValue\": {{faker 'random.boolean'}},\n              \"dateValue\": {\n                \"day\": {{faker 'random.number'}},\n                \"month\": {{faker 'random.number'}},\n                \"year\": {{faker 'random.number'}}\n              },\n              \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n              \"floatValue\": {{faker 'random.float'}},\n              \"integerValue\": \"\",\n              \"stringValue\": \"\",\n              \"timeValue\": {\n                \"hours\": {{faker 'random.number'}},\n                \"minutes\": {{faker 'random.number'}},\n                \"nanos\": {{faker 'random.number'}},\n                \"seconds\": {{faker 'random.number'}}\n              },\n              \"timestampValue\": \"\"\n            }\n          },\n          \"replaceDictionaryConfig\": {\n            \"wordList\": {\n              \"words\": [\n                \"\"\n              ]\n            }\n          },\n          \"replaceWithInfoTypeConfig\": {},\n          \"timePartConfig\": {\n            \"partToExtract\": \"{{oneOf (array 'TIME_PART_UNSPECIFIED' 'YEAR' 'MONTH' 'DAY_OF_MONTH' 'DAY_OF_WEEK' 'WEEK_OF_YEAR' 'HOUR_OF_DAY')}}\"\n          }\n        },\n        \"transformedBytes\": \"\"\n      }\n    ],\n    \"transformedBytes\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2631757d-020e-4e4c-8f96-eaea0a76a1bd",
      "documentation": "Lists DeidentifyTemplates. See https://cloud.google.com/dlp/docs/creating-templates-deid to learn more.",
      "method": "get",
      "endpoint": "v2/:parent/deidentifyTemplates",
      "responses": [
        {
          "uuid": "4b7fd876-ff97-4d9c-bd05-0eeae3babbb0",
          "body": "{\n  \"deidentifyTemplates\": [\n    {\n      \"createTime\": \"\",\n      \"deidentifyConfig\": {\n        \"infoTypeTransformations\": {\n          \"transformations\": [\n            {\n              \"infoTypes\": [\n                {\n                  \"name\": \"\",\n                  \"version\": \"\"\n                }\n              ],\n              \"primitiveTransformation\": {\n                \"bucketingConfig\": {\n                  \"buckets\": [\n                    {\n                      \"max\": {\n                        \"booleanValue\": {{faker 'random.boolean'}},\n                        \"dateValue\": {\n                          \"day\": {{faker 'random.number'}},\n                          \"month\": {{faker 'random.number'}},\n                          \"year\": {{faker 'random.number'}}\n                        },\n                        \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                        \"floatValue\": {{faker 'random.float'}},\n                        \"integerValue\": \"\",\n                        \"stringValue\": \"\",\n                        \"timeValue\": {\n                          \"hours\": {{faker 'random.number'}},\n                          \"minutes\": {{faker 'random.number'}},\n                          \"nanos\": {{faker 'random.number'}},\n                          \"seconds\": {{faker 'random.number'}}\n                        },\n                        \"timestampValue\": \"\"\n                      },\n                      \"min\": {\n                        \"booleanValue\": {{faker 'random.boolean'}},\n                        \"dateValue\": {\n                          \"day\": {{faker 'random.number'}},\n                          \"month\": {{faker 'random.number'}},\n                          \"year\": {{faker 'random.number'}}\n                        },\n                        \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                        \"floatValue\": {{faker 'random.float'}},\n                        \"integerValue\": \"\",\n                        \"stringValue\": \"\",\n                        \"timeValue\": {\n                          \"hours\": {{faker 'random.number'}},\n                          \"minutes\": {{faker 'random.number'}},\n                          \"nanos\": {{faker 'random.number'}},\n                          \"seconds\": {{faker 'random.number'}}\n                        },\n                        \"timestampValue\": \"\"\n                      },\n                      \"replacementValue\": {\n                        \"booleanValue\": {{faker 'random.boolean'}},\n                        \"dateValue\": {\n                          \"day\": {{faker 'random.number'}},\n                          \"month\": {{faker 'random.number'}},\n                          \"year\": {{faker 'random.number'}}\n                        },\n                        \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                        \"floatValue\": {{faker 'random.float'}},\n                        \"integerValue\": \"\",\n                        \"stringValue\": \"\",\n                        \"timeValue\": {\n                          \"hours\": {{faker 'random.number'}},\n                          \"minutes\": {{faker 'random.number'}},\n                          \"nanos\": {{faker 'random.number'}},\n                          \"seconds\": {{faker 'random.number'}}\n                        },\n                        \"timestampValue\": \"\"\n                      }\n                    }\n                  ]\n                },\n                \"characterMaskConfig\": {\n                  \"charactersToIgnore\": [\n                    {\n                      \"charactersToSkip\": \"\",\n                      \"commonCharactersToIgnore\": \"{{oneOf (array 'COMMON_CHARS_TO_IGNORE_UNSPECIFIED' 'NUMERIC' 'ALPHA_UPPER_CASE' 'ALPHA_LOWER_CASE' 'PUNCTUATION' 'WHITESPACE')}}\"\n                    }\n                  ],\n                  \"maskingCharacter\": \"\",\n                  \"numberToMask\": {{faker 'random.number'}},\n                  \"reverseOrder\": {{faker 'random.boolean'}}\n                },\n                \"cryptoDeterministicConfig\": {\n                  \"context\": {\n                    \"name\": \"\"\n                  },\n                  \"cryptoKey\": {\n                    \"kmsWrapped\": {\n                      \"cryptoKeyName\": \"\",\n                      \"wrappedKey\": \"\"\n                    },\n                    \"transient\": {\n                      \"name\": \"\"\n                    },\n                    \"unwrapped\": {\n                      \"key\": \"\"\n                    }\n                  },\n                  \"surrogateInfoType\": {\n                    \"name\": \"\",\n                    \"version\": \"\"\n                  }\n                },\n                \"cryptoHashConfig\": {\n                  \"cryptoKey\": {\n                    \"kmsWrapped\": {\n                      \"cryptoKeyName\": \"\",\n                      \"wrappedKey\": \"\"\n                    },\n                    \"transient\": {\n                      \"name\": \"\"\n                    },\n                    \"unwrapped\": {\n                      \"key\": \"\"\n                    }\n                  }\n                },\n                \"cryptoReplaceFfxFpeConfig\": {\n                  \"commonAlphabet\": \"{{oneOf (array 'FFX_COMMON_NATIVE_ALPHABET_UNSPECIFIED' 'NUMERIC' 'HEXADECIMAL' 'UPPER_CASE_ALPHA_NUMERIC' 'ALPHA_NUMERIC')}}\",\n                  \"context\": {\n                    \"name\": \"\"\n                  },\n                  \"cryptoKey\": {\n                    \"kmsWrapped\": {\n                      \"cryptoKeyName\": \"\",\n                      \"wrappedKey\": \"\"\n                    },\n                    \"transient\": {\n                      \"name\": \"\"\n                    },\n                    \"unwrapped\": {\n                      \"key\": \"\"\n                    }\n                  },\n                  \"customAlphabet\": \"\",\n                  \"radix\": {{faker 'random.number'}},\n                  \"surrogateInfoType\": {\n                    \"name\": \"\",\n                    \"version\": \"\"\n                  }\n                },\n                \"dateShiftConfig\": {\n                  \"context\": {\n                    \"name\": \"\"\n                  },\n                  \"cryptoKey\": {\n                    \"kmsWrapped\": {\n                      \"cryptoKeyName\": \"\",\n                      \"wrappedKey\": \"\"\n                    },\n                    \"transient\": {\n                      \"name\": \"\"\n                    },\n                    \"unwrapped\": {\n                      \"key\": \"\"\n                    }\n                  },\n                  \"lowerBoundDays\": {{faker 'random.number'}},\n                  \"upperBoundDays\": {{faker 'random.number'}}\n                },\n                \"fixedSizeBucketingConfig\": {\n                  \"bucketSize\": {{faker 'random.float'}},\n                  \"lowerBound\": {\n                    \"booleanValue\": {{faker 'random.boolean'}},\n                    \"dateValue\": {\n                      \"day\": {{faker 'random.number'}},\n                      \"month\": {{faker 'random.number'}},\n                      \"year\": {{faker 'random.number'}}\n                    },\n                    \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                    \"floatValue\": {{faker 'random.float'}},\n                    \"integerValue\": \"\",\n                    \"stringValue\": \"\",\n                    \"timeValue\": {\n                      \"hours\": {{faker 'random.number'}},\n                      \"minutes\": {{faker 'random.number'}},\n                      \"nanos\": {{faker 'random.number'}},\n                      \"seconds\": {{faker 'random.number'}}\n                    },\n                    \"timestampValue\": \"\"\n                  },\n                  \"upperBound\": {\n                    \"booleanValue\": {{faker 'random.boolean'}},\n                    \"dateValue\": {\n                      \"day\": {{faker 'random.number'}},\n                      \"month\": {{faker 'random.number'}},\n                      \"year\": {{faker 'random.number'}}\n                    },\n                    \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                    \"floatValue\": {{faker 'random.float'}},\n                    \"integerValue\": \"\",\n                    \"stringValue\": \"\",\n                    \"timeValue\": {\n                      \"hours\": {{faker 'random.number'}},\n                      \"minutes\": {{faker 'random.number'}},\n                      \"nanos\": {{faker 'random.number'}},\n                      \"seconds\": {{faker 'random.number'}}\n                    },\n                    \"timestampValue\": \"\"\n                  }\n                },\n                \"redactConfig\": {},\n                \"replaceConfig\": {\n                  \"newValue\": {\n                    \"booleanValue\": {{faker 'random.boolean'}},\n                    \"dateValue\": {\n                      \"day\": {{faker 'random.number'}},\n                      \"month\": {{faker 'random.number'}},\n                      \"year\": {{faker 'random.number'}}\n                    },\n                    \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                    \"floatValue\": {{faker 'random.float'}},\n                    \"integerValue\": \"\",\n                    \"stringValue\": \"\",\n                    \"timeValue\": {\n                      \"hours\": {{faker 'random.number'}},\n                      \"minutes\": {{faker 'random.number'}},\n                      \"nanos\": {{faker 'random.number'}},\n                      \"seconds\": {{faker 'random.number'}}\n                    },\n                    \"timestampValue\": \"\"\n                  }\n                },\n                \"replaceDictionaryConfig\": {\n                  \"wordList\": {\n                    \"words\": [\n                      \"\"\n                    ]\n                  }\n                },\n                \"replaceWithInfoTypeConfig\": {},\n                \"timePartConfig\": {\n                  \"partToExtract\": \"{{oneOf (array 'TIME_PART_UNSPECIFIED' 'YEAR' 'MONTH' 'DAY_OF_MONTH' 'DAY_OF_WEEK' 'WEEK_OF_YEAR' 'HOUR_OF_DAY')}}\"\n                }\n              }\n            }\n          ]\n        },\n        \"recordTransformations\": {\n          \"fieldTransformations\": [\n            {\n              \"condition\": {\n                \"expressions\": {\n                  \"conditions\": {\n                    \"conditions\": [\n                      {\n                        \"field\": {\n                          \"name\": \"\"\n                        },\n                        \"operator\": \"{{oneOf (array 'RELATIONAL_OPERATOR_UNSPECIFIED' 'EQUAL_TO' 'NOT_EQUAL_TO' 'GREATER_THAN' 'LESS_THAN' 'GREATER_THAN_OR_EQUALS' 'LESS_THAN_OR_EQUALS' 'EXISTS')}}\",\n                        \"value\": {\n                          \"booleanValue\": {{faker 'random.boolean'}},\n                          \"dateValue\": {\n                            \"day\": {{faker 'random.number'}},\n                            \"month\": {{faker 'random.number'}},\n                            \"year\": {{faker 'random.number'}}\n                          },\n                          \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                          \"floatValue\": {{faker 'random.float'}},\n                          \"integerValue\": \"\",\n                          \"stringValue\": \"\",\n                          \"timeValue\": {\n                            \"hours\": {{faker 'random.number'}},\n                            \"minutes\": {{faker 'random.number'}},\n                            \"nanos\": {{faker 'random.number'}},\n                            \"seconds\": {{faker 'random.number'}}\n                          },\n                          \"timestampValue\": \"\"\n                        }\n                      }\n                    ]\n                  },\n                  \"logicalOperator\": \"{{oneOf (array 'LOGICAL_OPERATOR_UNSPECIFIED' 'AND')}}\"\n                }\n              },\n              \"fields\": [\n                {\n                  \"name\": \"\"\n                }\n              ],\n              \"infoTypeTransformations\": {\n                \"transformations\": [\n                  {\n                    \"infoTypes\": [\n                      {\n                        \"name\": \"\",\n                        \"version\": \"\"\n                      }\n                    ],\n                    \"primitiveTransformation\": {\n                      \"bucketingConfig\": {\n                        \"buckets\": [\n                          {\n                            \"max\": {\n                              \"booleanValue\": {{faker 'random.boolean'}},\n                              \"dateValue\": {\n                                \"day\": {{faker 'random.number'}},\n                                \"month\": {{faker 'random.number'}},\n                                \"year\": {{faker 'random.number'}}\n                              },\n                              \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                              \"floatValue\": {{faker 'random.float'}},\n                              \"integerValue\": \"\",\n                              \"stringValue\": \"\",\n                              \"timeValue\": {\n                                \"hours\": {{faker 'random.number'}},\n                                \"minutes\": {{faker 'random.number'}},\n                                \"nanos\": {{faker 'random.number'}},\n                                \"seconds\": {{faker 'random.number'}}\n                              },\n                              \"timestampValue\": \"\"\n                            },\n                            \"min\": {\n                              \"booleanValue\": {{faker 'random.boolean'}},\n                              \"dateValue\": {\n                                \"day\": {{faker 'random.number'}},\n                                \"month\": {{faker 'random.number'}},\n                                \"year\": {{faker 'random.number'}}\n                              },\n                              \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                              \"floatValue\": {{faker 'random.float'}},\n                              \"integerValue\": \"\",\n                              \"stringValue\": \"\",\n                              \"timeValue\": {\n                                \"hours\": {{faker 'random.number'}},\n                                \"minutes\": {{faker 'random.number'}},\n                                \"nanos\": {{faker 'random.number'}},\n                                \"seconds\": {{faker 'random.number'}}\n                              },\n                              \"timestampValue\": \"\"\n                            },\n                            \"replacementValue\": {\n                              \"booleanValue\": {{faker 'random.boolean'}},\n                              \"dateValue\": {\n                                \"day\": {{faker 'random.number'}},\n                                \"month\": {{faker 'random.number'}},\n                                \"year\": {{faker 'random.number'}}\n                              },\n                              \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                              \"floatValue\": {{faker 'random.float'}},\n                              \"integerValue\": \"\",\n                              \"stringValue\": \"\",\n                              \"timeValue\": {\n                                \"hours\": {{faker 'random.number'}},\n                                \"minutes\": {{faker 'random.number'}},\n                                \"nanos\": {{faker 'random.number'}},\n                                \"seconds\": {{faker 'random.number'}}\n                              },\n                              \"timestampValue\": \"\"\n                            }\n                          }\n                        ]\n                      },\n                      \"characterMaskConfig\": {\n                        \"charactersToIgnore\": [\n                          {\n                            \"charactersToSkip\": \"\",\n                            \"commonCharactersToIgnore\": \"{{oneOf (array 'COMMON_CHARS_TO_IGNORE_UNSPECIFIED' 'NUMERIC' 'ALPHA_UPPER_CASE' 'ALPHA_LOWER_CASE' 'PUNCTUATION' 'WHITESPACE')}}\"\n                          }\n                        ],\n                        \"maskingCharacter\": \"\",\n                        \"numberToMask\": {{faker 'random.number'}},\n                        \"reverseOrder\": {{faker 'random.boolean'}}\n                      },\n                      \"cryptoDeterministicConfig\": {\n                        \"context\": {\n                          \"name\": \"\"\n                        },\n                        \"cryptoKey\": {\n                          \"kmsWrapped\": {\n                            \"cryptoKeyName\": \"\",\n                            \"wrappedKey\": \"\"\n                          },\n                          \"transient\": {\n                            \"name\": \"\"\n                          },\n                          \"unwrapped\": {\n                            \"key\": \"\"\n                          }\n                        },\n                        \"surrogateInfoType\": {\n                          \"name\": \"\",\n                          \"version\": \"\"\n                        }\n                      },\n                      \"cryptoHashConfig\": {\n                        \"cryptoKey\": {\n                          \"kmsWrapped\": {\n                            \"cryptoKeyName\": \"\",\n                            \"wrappedKey\": \"\"\n                          },\n                          \"transient\": {\n                            \"name\": \"\"\n                          },\n                          \"unwrapped\": {\n                            \"key\": \"\"\n                          }\n                        }\n                      },\n                      \"cryptoReplaceFfxFpeConfig\": {\n                        \"commonAlphabet\": \"{{oneOf (array 'FFX_COMMON_NATIVE_ALPHABET_UNSPECIFIED' 'NUMERIC' 'HEXADECIMAL' 'UPPER_CASE_ALPHA_NUMERIC' 'ALPHA_NUMERIC')}}\",\n                        \"context\": {\n                          \"name\": \"\"\n                        },\n                        \"cryptoKey\": {\n                          \"kmsWrapped\": {\n                            \"cryptoKeyName\": \"\",\n                            \"wrappedKey\": \"\"\n                          },\n                          \"transient\": {\n                            \"name\": \"\"\n                          },\n                          \"unwrapped\": {\n                            \"key\": \"\"\n                          }\n                        },\n                        \"customAlphabet\": \"\",\n                        \"radix\": {{faker 'random.number'}},\n                        \"surrogateInfoType\": {\n                          \"name\": \"\",\n                          \"version\": \"\"\n                        }\n                      },\n                      \"dateShiftConfig\": {\n                        \"context\": {\n                          \"name\": \"\"\n                        },\n                        \"cryptoKey\": {\n                          \"kmsWrapped\": {\n                            \"cryptoKeyName\": \"\",\n                            \"wrappedKey\": \"\"\n                          },\n                          \"transient\": {\n                            \"name\": \"\"\n                          },\n                          \"unwrapped\": {\n                            \"key\": \"\"\n                          }\n                        },\n                        \"lowerBoundDays\": {{faker 'random.number'}},\n                        \"upperBoundDays\": {{faker 'random.number'}}\n                      },\n                      \"fixedSizeBucketingConfig\": {\n                        \"bucketSize\": {{faker 'random.float'}},\n                        \"lowerBound\": {\n                          \"booleanValue\": {{faker 'random.boolean'}},\n                          \"dateValue\": {\n                            \"day\": {{faker 'random.number'}},\n                            \"month\": {{faker 'random.number'}},\n                            \"year\": {{faker 'random.number'}}\n                          },\n                          \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                          \"floatValue\": {{faker 'random.float'}},\n                          \"integerValue\": \"\",\n                          \"stringValue\": \"\",\n                          \"timeValue\": {\n                            \"hours\": {{faker 'random.number'}},\n                            \"minutes\": {{faker 'random.number'}},\n                            \"nanos\": {{faker 'random.number'}},\n                            \"seconds\": {{faker 'random.number'}}\n                          },\n                          \"timestampValue\": \"\"\n                        },\n                        \"upperBound\": {\n                          \"booleanValue\": {{faker 'random.boolean'}},\n                          \"dateValue\": {\n                            \"day\": {{faker 'random.number'}},\n                            \"month\": {{faker 'random.number'}},\n                            \"year\": {{faker 'random.number'}}\n                          },\n                          \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                          \"floatValue\": {{faker 'random.float'}},\n                          \"integerValue\": \"\",\n                          \"stringValue\": \"\",\n                          \"timeValue\": {\n                            \"hours\": {{faker 'random.number'}},\n                            \"minutes\": {{faker 'random.number'}},\n                            \"nanos\": {{faker 'random.number'}},\n                            \"seconds\": {{faker 'random.number'}}\n                          },\n                          \"timestampValue\": \"\"\n                        }\n                      },\n                      \"redactConfig\": {},\n                      \"replaceConfig\": {\n                        \"newValue\": {\n                          \"booleanValue\": {{faker 'random.boolean'}},\n                          \"dateValue\": {\n                            \"day\": {{faker 'random.number'}},\n                            \"month\": {{faker 'random.number'}},\n                            \"year\": {{faker 'random.number'}}\n                          },\n                          \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                          \"floatValue\": {{faker 'random.float'}},\n                          \"integerValue\": \"\",\n                          \"stringValue\": \"\",\n                          \"timeValue\": {\n                            \"hours\": {{faker 'random.number'}},\n                            \"minutes\": {{faker 'random.number'}},\n                            \"nanos\": {{faker 'random.number'}},\n                            \"seconds\": {{faker 'random.number'}}\n                          },\n                          \"timestampValue\": \"\"\n                        }\n                      },\n                      \"replaceDictionaryConfig\": {\n                        \"wordList\": {\n                          \"words\": [\n                            \"\"\n                          ]\n                        }\n                      },\n                      \"replaceWithInfoTypeConfig\": {},\n                      \"timePartConfig\": {\n                        \"partToExtract\": \"{{oneOf (array 'TIME_PART_UNSPECIFIED' 'YEAR' 'MONTH' 'DAY_OF_MONTH' 'DAY_OF_WEEK' 'WEEK_OF_YEAR' 'HOUR_OF_DAY')}}\"\n                      }\n                    }\n                  }\n                ]\n              },\n              \"primitiveTransformation\": {\n                \"bucketingConfig\": {\n                  \"buckets\": [\n                    {\n                      \"max\": {\n                        \"booleanValue\": {{faker 'random.boolean'}},\n                        \"dateValue\": {\n                          \"day\": {{faker 'random.number'}},\n                          \"month\": {{faker 'random.number'}},\n                          \"year\": {{faker 'random.number'}}\n                        },\n                        \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                        \"floatValue\": {{faker 'random.float'}},\n                        \"integerValue\": \"\",\n                        \"stringValue\": \"\",\n                        \"timeValue\": {\n                          \"hours\": {{faker 'random.number'}},\n                          \"minutes\": {{faker 'random.number'}},\n                          \"nanos\": {{faker 'random.number'}},\n                          \"seconds\": {{faker 'random.number'}}\n                        },\n                        \"timestampValue\": \"\"\n                      },\n                      \"min\": {\n                        \"booleanValue\": {{faker 'random.boolean'}},\n                        \"dateValue\": {\n                          \"day\": {{faker 'random.number'}},\n                          \"month\": {{faker 'random.number'}},\n                          \"year\": {{faker 'random.number'}}\n                        },\n                        \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                        \"floatValue\": {{faker 'random.float'}},\n                        \"integerValue\": \"\",\n                        \"stringValue\": \"\",\n                        \"timeValue\": {\n                          \"hours\": {{faker 'random.number'}},\n                          \"minutes\": {{faker 'random.number'}},\n                          \"nanos\": {{faker 'random.number'}},\n                          \"seconds\": {{faker 'random.number'}}\n                        },\n                        \"timestampValue\": \"\"\n                      },\n                      \"replacementValue\": {\n                        \"booleanValue\": {{faker 'random.boolean'}},\n                        \"dateValue\": {\n                          \"day\": {{faker 'random.number'}},\n                          \"month\": {{faker 'random.number'}},\n                          \"year\": {{faker 'random.number'}}\n                        },\n                        \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                        \"floatValue\": {{faker 'random.float'}},\n                        \"integerValue\": \"\",\n                        \"stringValue\": \"\",\n                        \"timeValue\": {\n                          \"hours\": {{faker 'random.number'}},\n                          \"minutes\": {{faker 'random.number'}},\n                          \"nanos\": {{faker 'random.number'}},\n                          \"seconds\": {{faker 'random.number'}}\n                        },\n                        \"timestampValue\": \"\"\n                      }\n                    }\n                  ]\n                },\n                \"characterMaskConfig\": {\n                  \"charactersToIgnore\": [\n                    {\n                      \"charactersToSkip\": \"\",\n                      \"commonCharactersToIgnore\": \"{{oneOf (array 'COMMON_CHARS_TO_IGNORE_UNSPECIFIED' 'NUMERIC' 'ALPHA_UPPER_CASE' 'ALPHA_LOWER_CASE' 'PUNCTUATION' 'WHITESPACE')}}\"\n                    }\n                  ],\n                  \"maskingCharacter\": \"\",\n                  \"numberToMask\": {{faker 'random.number'}},\n                  \"reverseOrder\": {{faker 'random.boolean'}}\n                },\n                \"cryptoDeterministicConfig\": {\n                  \"context\": {\n                    \"name\": \"\"\n                  },\n                  \"cryptoKey\": {\n                    \"kmsWrapped\": {\n                      \"cryptoKeyName\": \"\",\n                      \"wrappedKey\": \"\"\n                    },\n                    \"transient\": {\n                      \"name\": \"\"\n                    },\n                    \"unwrapped\": {\n                      \"key\": \"\"\n                    }\n                  },\n                  \"surrogateInfoType\": {\n                    \"name\": \"\",\n                    \"version\": \"\"\n                  }\n                },\n                \"cryptoHashConfig\": {\n                  \"cryptoKey\": {\n                    \"kmsWrapped\": {\n                      \"cryptoKeyName\": \"\",\n                      \"wrappedKey\": \"\"\n                    },\n                    \"transient\": {\n                      \"name\": \"\"\n                    },\n                    \"unwrapped\": {\n                      \"key\": \"\"\n                    }\n                  }\n                },\n                \"cryptoReplaceFfxFpeConfig\": {\n                  \"commonAlphabet\": \"{{oneOf (array 'FFX_COMMON_NATIVE_ALPHABET_UNSPECIFIED' 'NUMERIC' 'HEXADECIMAL' 'UPPER_CASE_ALPHA_NUMERIC' 'ALPHA_NUMERIC')}}\",\n                  \"context\": {\n                    \"name\": \"\"\n                  },\n                  \"cryptoKey\": {\n                    \"kmsWrapped\": {\n                      \"cryptoKeyName\": \"\",\n                      \"wrappedKey\": \"\"\n                    },\n                    \"transient\": {\n                      \"name\": \"\"\n                    },\n                    \"unwrapped\": {\n                      \"key\": \"\"\n                    }\n                  },\n                  \"customAlphabet\": \"\",\n                  \"radix\": {{faker 'random.number'}},\n                  \"surrogateInfoType\": {\n                    \"name\": \"\",\n                    \"version\": \"\"\n                  }\n                },\n                \"dateShiftConfig\": {\n                  \"context\": {\n                    \"name\": \"\"\n                  },\n                  \"cryptoKey\": {\n                    \"kmsWrapped\": {\n                      \"cryptoKeyName\": \"\",\n                      \"wrappedKey\": \"\"\n                    },\n                    \"transient\": {\n                      \"name\": \"\"\n                    },\n                    \"unwrapped\": {\n                      \"key\": \"\"\n                    }\n                  },\n                  \"lowerBoundDays\": {{faker 'random.number'}},\n                  \"upperBoundDays\": {{faker 'random.number'}}\n                },\n                \"fixedSizeBucketingConfig\": {\n                  \"bucketSize\": {{faker 'random.float'}},\n                  \"lowerBound\": {\n                    \"booleanValue\": {{faker 'random.boolean'}},\n                    \"dateValue\": {\n                      \"day\": {{faker 'random.number'}},\n                      \"month\": {{faker 'random.number'}},\n                      \"year\": {{faker 'random.number'}}\n                    },\n                    \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                    \"floatValue\": {{faker 'random.float'}},\n                    \"integerValue\": \"\",\n                    \"stringValue\": \"\",\n                    \"timeValue\": {\n                      \"hours\": {{faker 'random.number'}},\n                      \"minutes\": {{faker 'random.number'}},\n                      \"nanos\": {{faker 'random.number'}},\n                      \"seconds\": {{faker 'random.number'}}\n                    },\n                    \"timestampValue\": \"\"\n                  },\n                  \"upperBound\": {\n                    \"booleanValue\": {{faker 'random.boolean'}},\n                    \"dateValue\": {\n                      \"day\": {{faker 'random.number'}},\n                      \"month\": {{faker 'random.number'}},\n                      \"year\": {{faker 'random.number'}}\n                    },\n                    \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                    \"floatValue\": {{faker 'random.float'}},\n                    \"integerValue\": \"\",\n                    \"stringValue\": \"\",\n                    \"timeValue\": {\n                      \"hours\": {{faker 'random.number'}},\n                      \"minutes\": {{faker 'random.number'}},\n                      \"nanos\": {{faker 'random.number'}},\n                      \"seconds\": {{faker 'random.number'}}\n                    },\n                    \"timestampValue\": \"\"\n                  }\n                },\n                \"redactConfig\": {},\n                \"replaceConfig\": {\n                  \"newValue\": {\n                    \"booleanValue\": {{faker 'random.boolean'}},\n                    \"dateValue\": {\n                      \"day\": {{faker 'random.number'}},\n                      \"month\": {{faker 'random.number'}},\n                      \"year\": {{faker 'random.number'}}\n                    },\n                    \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                    \"floatValue\": {{faker 'random.float'}},\n                    \"integerValue\": \"\",\n                    \"stringValue\": \"\",\n                    \"timeValue\": {\n                      \"hours\": {{faker 'random.number'}},\n                      \"minutes\": {{faker 'random.number'}},\n                      \"nanos\": {{faker 'random.number'}},\n                      \"seconds\": {{faker 'random.number'}}\n                    },\n                    \"timestampValue\": \"\"\n                  }\n                },\n                \"replaceDictionaryConfig\": {\n                  \"wordList\": {\n                    \"words\": [\n                      \"\"\n                    ]\n                  }\n                },\n                \"replaceWithInfoTypeConfig\": {},\n                \"timePartConfig\": {\n                  \"partToExtract\": \"{{oneOf (array 'TIME_PART_UNSPECIFIED' 'YEAR' 'MONTH' 'DAY_OF_MONTH' 'DAY_OF_WEEK' 'WEEK_OF_YEAR' 'HOUR_OF_DAY')}}\"\n                }\n              }\n            }\n          ],\n          \"recordSuppressions\": [\n            {\n              \"condition\": {\n                \"expressions\": {\n                  \"conditions\": {\n                    \"conditions\": [\n                      {\n                        \"field\": {\n                          \"name\": \"\"\n                        },\n                        \"operator\": \"{{oneOf (array 'RELATIONAL_OPERATOR_UNSPECIFIED' 'EQUAL_TO' 'NOT_EQUAL_TO' 'GREATER_THAN' 'LESS_THAN' 'GREATER_THAN_OR_EQUALS' 'LESS_THAN_OR_EQUALS' 'EXISTS')}}\",\n                        \"value\": {\n                          \"booleanValue\": {{faker 'random.boolean'}},\n                          \"dateValue\": {\n                            \"day\": {{faker 'random.number'}},\n                            \"month\": {{faker 'random.number'}},\n                            \"year\": {{faker 'random.number'}}\n                          },\n                          \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                          \"floatValue\": {{faker 'random.float'}},\n                          \"integerValue\": \"\",\n                          \"stringValue\": \"\",\n                          \"timeValue\": {\n                            \"hours\": {{faker 'random.number'}},\n                            \"minutes\": {{faker 'random.number'}},\n                            \"nanos\": {{faker 'random.number'}},\n                            \"seconds\": {{faker 'random.number'}}\n                          },\n                          \"timestampValue\": \"\"\n                        }\n                      }\n                    ]\n                  },\n                  \"logicalOperator\": \"{{oneOf (array 'LOGICAL_OPERATOR_UNSPECIFIED' 'AND')}}\"\n                }\n              }\n            }\n          ]\n        },\n        \"transformationErrorHandling\": {\n          \"leaveUntransformed\": {},\n          \"throwError\": {}\n        }\n      },\n      \"description\": \"\",\n      \"displayName\": \"\",\n      \"name\": \"\",\n      \"updateTime\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ffbf3683-f02c-4ef3-b317-756e89d63a12",
      "documentation": "Creates a DeidentifyTemplate for re-using frequently used configuration for de-identifying content, images, and storage. See https://cloud.google.com/dlp/docs/creating-templates-deid to learn more.",
      "method": "post",
      "endpoint": "v2/:parent/deidentifyTemplates",
      "responses": [
        {
          "uuid": "30bec375-e586-4974-a537-294a12bc6183",
          "body": "{\n  \"createTime\": \"\",\n  \"deidentifyConfig\": {\n    \"infoTypeTransformations\": {\n      \"transformations\": [\n        {\n          \"infoTypes\": [\n            {\n              \"name\": \"\",\n              \"version\": \"\"\n            }\n          ],\n          \"primitiveTransformation\": {\n            \"bucketingConfig\": {\n              \"buckets\": [\n                {\n                  \"max\": {\n                    \"booleanValue\": {{faker 'random.boolean'}},\n                    \"dateValue\": {\n                      \"day\": {{faker 'random.number'}},\n                      \"month\": {{faker 'random.number'}},\n                      \"year\": {{faker 'random.number'}}\n                    },\n                    \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                    \"floatValue\": {{faker 'random.float'}},\n                    \"integerValue\": \"\",\n                    \"stringValue\": \"\",\n                    \"timeValue\": {\n                      \"hours\": {{faker 'random.number'}},\n                      \"minutes\": {{faker 'random.number'}},\n                      \"nanos\": {{faker 'random.number'}},\n                      \"seconds\": {{faker 'random.number'}}\n                    },\n                    \"timestampValue\": \"\"\n                  },\n                  \"min\": {\n                    \"booleanValue\": {{faker 'random.boolean'}},\n                    \"dateValue\": {\n                      \"day\": {{faker 'random.number'}},\n                      \"month\": {{faker 'random.number'}},\n                      \"year\": {{faker 'random.number'}}\n                    },\n                    \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                    \"floatValue\": {{faker 'random.float'}},\n                    \"integerValue\": \"\",\n                    \"stringValue\": \"\",\n                    \"timeValue\": {\n                      \"hours\": {{faker 'random.number'}},\n                      \"minutes\": {{faker 'random.number'}},\n                      \"nanos\": {{faker 'random.number'}},\n                      \"seconds\": {{faker 'random.number'}}\n                    },\n                    \"timestampValue\": \"\"\n                  },\n                  \"replacementValue\": {\n                    \"booleanValue\": {{faker 'random.boolean'}},\n                    \"dateValue\": {\n                      \"day\": {{faker 'random.number'}},\n                      \"month\": {{faker 'random.number'}},\n                      \"year\": {{faker 'random.number'}}\n                    },\n                    \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                    \"floatValue\": {{faker 'random.float'}},\n                    \"integerValue\": \"\",\n                    \"stringValue\": \"\",\n                    \"timeValue\": {\n                      \"hours\": {{faker 'random.number'}},\n                      \"minutes\": {{faker 'random.number'}},\n                      \"nanos\": {{faker 'random.number'}},\n                      \"seconds\": {{faker 'random.number'}}\n                    },\n                    \"timestampValue\": \"\"\n                  }\n                }\n              ]\n            },\n            \"characterMaskConfig\": {\n              \"charactersToIgnore\": [\n                {\n                  \"charactersToSkip\": \"\",\n                  \"commonCharactersToIgnore\": \"{{oneOf (array 'COMMON_CHARS_TO_IGNORE_UNSPECIFIED' 'NUMERIC' 'ALPHA_UPPER_CASE' 'ALPHA_LOWER_CASE' 'PUNCTUATION' 'WHITESPACE')}}\"\n                }\n              ],\n              \"maskingCharacter\": \"\",\n              \"numberToMask\": {{faker 'random.number'}},\n              \"reverseOrder\": {{faker 'random.boolean'}}\n            },\n            \"cryptoDeterministicConfig\": {\n              \"context\": {\n                \"name\": \"\"\n              },\n              \"cryptoKey\": {\n                \"kmsWrapped\": {\n                  \"cryptoKeyName\": \"\",\n                  \"wrappedKey\": \"\"\n                },\n                \"transient\": {\n                  \"name\": \"\"\n                },\n                \"unwrapped\": {\n                  \"key\": \"\"\n                }\n              },\n              \"surrogateInfoType\": {\n                \"name\": \"\",\n                \"version\": \"\"\n              }\n            },\n            \"cryptoHashConfig\": {\n              \"cryptoKey\": {\n                \"kmsWrapped\": {\n                  \"cryptoKeyName\": \"\",\n                  \"wrappedKey\": \"\"\n                },\n                \"transient\": {\n                  \"name\": \"\"\n                },\n                \"unwrapped\": {\n                  \"key\": \"\"\n                }\n              }\n            },\n            \"cryptoReplaceFfxFpeConfig\": {\n              \"commonAlphabet\": \"{{oneOf (array 'FFX_COMMON_NATIVE_ALPHABET_UNSPECIFIED' 'NUMERIC' 'HEXADECIMAL' 'UPPER_CASE_ALPHA_NUMERIC' 'ALPHA_NUMERIC')}}\",\n              \"context\": {\n                \"name\": \"\"\n              },\n              \"cryptoKey\": {\n                \"kmsWrapped\": {\n                  \"cryptoKeyName\": \"\",\n                  \"wrappedKey\": \"\"\n                },\n                \"transient\": {\n                  \"name\": \"\"\n                },\n                \"unwrapped\": {\n                  \"key\": \"\"\n                }\n              },\n              \"customAlphabet\": \"\",\n              \"radix\": {{faker 'random.number'}},\n              \"surrogateInfoType\": {\n                \"name\": \"\",\n                \"version\": \"\"\n              }\n            },\n            \"dateShiftConfig\": {\n              \"context\": {\n                \"name\": \"\"\n              },\n              \"cryptoKey\": {\n                \"kmsWrapped\": {\n                  \"cryptoKeyName\": \"\",\n                  \"wrappedKey\": \"\"\n                },\n                \"transient\": {\n                  \"name\": \"\"\n                },\n                \"unwrapped\": {\n                  \"key\": \"\"\n                }\n              },\n              \"lowerBoundDays\": {{faker 'random.number'}},\n              \"upperBoundDays\": {{faker 'random.number'}}\n            },\n            \"fixedSizeBucketingConfig\": {\n              \"bucketSize\": {{faker 'random.float'}},\n              \"lowerBound\": {\n                \"booleanValue\": {{faker 'random.boolean'}},\n                \"dateValue\": {\n                  \"day\": {{faker 'random.number'}},\n                  \"month\": {{faker 'random.number'}},\n                  \"year\": {{faker 'random.number'}}\n                },\n                \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                \"floatValue\": {{faker 'random.float'}},\n                \"integerValue\": \"\",\n                \"stringValue\": \"\",\n                \"timeValue\": {\n                  \"hours\": {{faker 'random.number'}},\n                  \"minutes\": {{faker 'random.number'}},\n                  \"nanos\": {{faker 'random.number'}},\n                  \"seconds\": {{faker 'random.number'}}\n                },\n                \"timestampValue\": \"\"\n              },\n              \"upperBound\": {\n                \"booleanValue\": {{faker 'random.boolean'}},\n                \"dateValue\": {\n                  \"day\": {{faker 'random.number'}},\n                  \"month\": {{faker 'random.number'}},\n                  \"year\": {{faker 'random.number'}}\n                },\n                \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                \"floatValue\": {{faker 'random.float'}},\n                \"integerValue\": \"\",\n                \"stringValue\": \"\",\n                \"timeValue\": {\n                  \"hours\": {{faker 'random.number'}},\n                  \"minutes\": {{faker 'random.number'}},\n                  \"nanos\": {{faker 'random.number'}},\n                  \"seconds\": {{faker 'random.number'}}\n                },\n                \"timestampValue\": \"\"\n              }\n            },\n            \"redactConfig\": {},\n            \"replaceConfig\": {\n              \"newValue\": {\n                \"booleanValue\": {{faker 'random.boolean'}},\n                \"dateValue\": {\n                  \"day\": {{faker 'random.number'}},\n                  \"month\": {{faker 'random.number'}},\n                  \"year\": {{faker 'random.number'}}\n                },\n                \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                \"floatValue\": {{faker 'random.float'}},\n                \"integerValue\": \"\",\n                \"stringValue\": \"\",\n                \"timeValue\": {\n                  \"hours\": {{faker 'random.number'}},\n                  \"minutes\": {{faker 'random.number'}},\n                  \"nanos\": {{faker 'random.number'}},\n                  \"seconds\": {{faker 'random.number'}}\n                },\n                \"timestampValue\": \"\"\n              }\n            },\n            \"replaceDictionaryConfig\": {\n              \"wordList\": {\n                \"words\": [\n                  \"\"\n                ]\n              }\n            },\n            \"replaceWithInfoTypeConfig\": {},\n            \"timePartConfig\": {\n              \"partToExtract\": \"{{oneOf (array 'TIME_PART_UNSPECIFIED' 'YEAR' 'MONTH' 'DAY_OF_MONTH' 'DAY_OF_WEEK' 'WEEK_OF_YEAR' 'HOUR_OF_DAY')}}\"\n            }\n          }\n        }\n      ]\n    },\n    \"recordTransformations\": {\n      \"fieldTransformations\": [\n        {\n          \"condition\": {\n            \"expressions\": {\n              \"conditions\": {\n                \"conditions\": [\n                  {\n                    \"field\": {\n                      \"name\": \"\"\n                    },\n                    \"operator\": \"{{oneOf (array 'RELATIONAL_OPERATOR_UNSPECIFIED' 'EQUAL_TO' 'NOT_EQUAL_TO' 'GREATER_THAN' 'LESS_THAN' 'GREATER_THAN_OR_EQUALS' 'LESS_THAN_OR_EQUALS' 'EXISTS')}}\",\n                    \"value\": {\n                      \"booleanValue\": {{faker 'random.boolean'}},\n                      \"dateValue\": {\n                        \"day\": {{faker 'random.number'}},\n                        \"month\": {{faker 'random.number'}},\n                        \"year\": {{faker 'random.number'}}\n                      },\n                      \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                      \"floatValue\": {{faker 'random.float'}},\n                      \"integerValue\": \"\",\n                      \"stringValue\": \"\",\n                      \"timeValue\": {\n                        \"hours\": {{faker 'random.number'}},\n                        \"minutes\": {{faker 'random.number'}},\n                        \"nanos\": {{faker 'random.number'}},\n                        \"seconds\": {{faker 'random.number'}}\n                      },\n                      \"timestampValue\": \"\"\n                    }\n                  }\n                ]\n              },\n              \"logicalOperator\": \"{{oneOf (array 'LOGICAL_OPERATOR_UNSPECIFIED' 'AND')}}\"\n            }\n          },\n          \"fields\": [\n            {\n              \"name\": \"\"\n            }\n          ],\n          \"infoTypeTransformations\": {\n            \"transformations\": [\n              {\n                \"infoTypes\": [\n                  {\n                    \"name\": \"\",\n                    \"version\": \"\"\n                  }\n                ],\n                \"primitiveTransformation\": {\n                  \"bucketingConfig\": {\n                    \"buckets\": [\n                      {\n                        \"max\": {\n                          \"booleanValue\": {{faker 'random.boolean'}},\n                          \"dateValue\": {\n                            \"day\": {{faker 'random.number'}},\n                            \"month\": {{faker 'random.number'}},\n                            \"year\": {{faker 'random.number'}}\n                          },\n                          \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                          \"floatValue\": {{faker 'random.float'}},\n                          \"integerValue\": \"\",\n                          \"stringValue\": \"\",\n                          \"timeValue\": {\n                            \"hours\": {{faker 'random.number'}},\n                            \"minutes\": {{faker 'random.number'}},\n                            \"nanos\": {{faker 'random.number'}},\n                            \"seconds\": {{faker 'random.number'}}\n                          },\n                          \"timestampValue\": \"\"\n                        },\n                        \"min\": {\n                          \"booleanValue\": {{faker 'random.boolean'}},\n                          \"dateValue\": {\n                            \"day\": {{faker 'random.number'}},\n                            \"month\": {{faker 'random.number'}},\n                            \"year\": {{faker 'random.number'}}\n                          },\n                          \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                          \"floatValue\": {{faker 'random.float'}},\n                          \"integerValue\": \"\",\n                          \"stringValue\": \"\",\n                          \"timeValue\": {\n                            \"hours\": {{faker 'random.number'}},\n                            \"minutes\": {{faker 'random.number'}},\n                            \"nanos\": {{faker 'random.number'}},\n                            \"seconds\": {{faker 'random.number'}}\n                          },\n                          \"timestampValue\": \"\"\n                        },\n                        \"replacementValue\": {\n                          \"booleanValue\": {{faker 'random.boolean'}},\n                          \"dateValue\": {\n                            \"day\": {{faker 'random.number'}},\n                            \"month\": {{faker 'random.number'}},\n                            \"year\": {{faker 'random.number'}}\n                          },\n                          \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                          \"floatValue\": {{faker 'random.float'}},\n                          \"integerValue\": \"\",\n                          \"stringValue\": \"\",\n                          \"timeValue\": {\n                            \"hours\": {{faker 'random.number'}},\n                            \"minutes\": {{faker 'random.number'}},\n                            \"nanos\": {{faker 'random.number'}},\n                            \"seconds\": {{faker 'random.number'}}\n                          },\n                          \"timestampValue\": \"\"\n                        }\n                      }\n                    ]\n                  },\n                  \"characterMaskConfig\": {\n                    \"charactersToIgnore\": [\n                      {\n                        \"charactersToSkip\": \"\",\n                        \"commonCharactersToIgnore\": \"{{oneOf (array 'COMMON_CHARS_TO_IGNORE_UNSPECIFIED' 'NUMERIC' 'ALPHA_UPPER_CASE' 'ALPHA_LOWER_CASE' 'PUNCTUATION' 'WHITESPACE')}}\"\n                      }\n                    ],\n                    \"maskingCharacter\": \"\",\n                    \"numberToMask\": {{faker 'random.number'}},\n                    \"reverseOrder\": {{faker 'random.boolean'}}\n                  },\n                  \"cryptoDeterministicConfig\": {\n                    \"context\": {\n                      \"name\": \"\"\n                    },\n                    \"cryptoKey\": {\n                      \"kmsWrapped\": {\n                        \"cryptoKeyName\": \"\",\n                        \"wrappedKey\": \"\"\n                      },\n                      \"transient\": {\n                        \"name\": \"\"\n                      },\n                      \"unwrapped\": {\n                        \"key\": \"\"\n                      }\n                    },\n                    \"surrogateInfoType\": {\n                      \"name\": \"\",\n                      \"version\": \"\"\n                    }\n                  },\n                  \"cryptoHashConfig\": {\n                    \"cryptoKey\": {\n                      \"kmsWrapped\": {\n                        \"cryptoKeyName\": \"\",\n                        \"wrappedKey\": \"\"\n                      },\n                      \"transient\": {\n                        \"name\": \"\"\n                      },\n                      \"unwrapped\": {\n                        \"key\": \"\"\n                      }\n                    }\n                  },\n                  \"cryptoReplaceFfxFpeConfig\": {\n                    \"commonAlphabet\": \"{{oneOf (array 'FFX_COMMON_NATIVE_ALPHABET_UNSPECIFIED' 'NUMERIC' 'HEXADECIMAL' 'UPPER_CASE_ALPHA_NUMERIC' 'ALPHA_NUMERIC')}}\",\n                    \"context\": {\n                      \"name\": \"\"\n                    },\n                    \"cryptoKey\": {\n                      \"kmsWrapped\": {\n                        \"cryptoKeyName\": \"\",\n                        \"wrappedKey\": \"\"\n                      },\n                      \"transient\": {\n                        \"name\": \"\"\n                      },\n                      \"unwrapped\": {\n                        \"key\": \"\"\n                      }\n                    },\n                    \"customAlphabet\": \"\",\n                    \"radix\": {{faker 'random.number'}},\n                    \"surrogateInfoType\": {\n                      \"name\": \"\",\n                      \"version\": \"\"\n                    }\n                  },\n                  \"dateShiftConfig\": {\n                    \"context\": {\n                      \"name\": \"\"\n                    },\n                    \"cryptoKey\": {\n                      \"kmsWrapped\": {\n                        \"cryptoKeyName\": \"\",\n                        \"wrappedKey\": \"\"\n                      },\n                      \"transient\": {\n                        \"name\": \"\"\n                      },\n                      \"unwrapped\": {\n                        \"key\": \"\"\n                      }\n                    },\n                    \"lowerBoundDays\": {{faker 'random.number'}},\n                    \"upperBoundDays\": {{faker 'random.number'}}\n                  },\n                  \"fixedSizeBucketingConfig\": {\n                    \"bucketSize\": {{faker 'random.float'}},\n                    \"lowerBound\": {\n                      \"booleanValue\": {{faker 'random.boolean'}},\n                      \"dateValue\": {\n                        \"day\": {{faker 'random.number'}},\n                        \"month\": {{faker 'random.number'}},\n                        \"year\": {{faker 'random.number'}}\n                      },\n                      \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                      \"floatValue\": {{faker 'random.float'}},\n                      \"integerValue\": \"\",\n                      \"stringValue\": \"\",\n                      \"timeValue\": {\n                        \"hours\": {{faker 'random.number'}},\n                        \"minutes\": {{faker 'random.number'}},\n                        \"nanos\": {{faker 'random.number'}},\n                        \"seconds\": {{faker 'random.number'}}\n                      },\n                      \"timestampValue\": \"\"\n                    },\n                    \"upperBound\": {\n                      \"booleanValue\": {{faker 'random.boolean'}},\n                      \"dateValue\": {\n                        \"day\": {{faker 'random.number'}},\n                        \"month\": {{faker 'random.number'}},\n                        \"year\": {{faker 'random.number'}}\n                      },\n                      \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                      \"floatValue\": {{faker 'random.float'}},\n                      \"integerValue\": \"\",\n                      \"stringValue\": \"\",\n                      \"timeValue\": {\n                        \"hours\": {{faker 'random.number'}},\n                        \"minutes\": {{faker 'random.number'}},\n                        \"nanos\": {{faker 'random.number'}},\n                        \"seconds\": {{faker 'random.number'}}\n                      },\n                      \"timestampValue\": \"\"\n                    }\n                  },\n                  \"redactConfig\": {},\n                  \"replaceConfig\": {\n                    \"newValue\": {\n                      \"booleanValue\": {{faker 'random.boolean'}},\n                      \"dateValue\": {\n                        \"day\": {{faker 'random.number'}},\n                        \"month\": {{faker 'random.number'}},\n                        \"year\": {{faker 'random.number'}}\n                      },\n                      \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                      \"floatValue\": {{faker 'random.float'}},\n                      \"integerValue\": \"\",\n                      \"stringValue\": \"\",\n                      \"timeValue\": {\n                        \"hours\": {{faker 'random.number'}},\n                        \"minutes\": {{faker 'random.number'}},\n                        \"nanos\": {{faker 'random.number'}},\n                        \"seconds\": {{faker 'random.number'}}\n                      },\n                      \"timestampValue\": \"\"\n                    }\n                  },\n                  \"replaceDictionaryConfig\": {\n                    \"wordList\": {\n                      \"words\": [\n                        \"\"\n                      ]\n                    }\n                  },\n                  \"replaceWithInfoTypeConfig\": {},\n                  \"timePartConfig\": {\n                    \"partToExtract\": \"{{oneOf (array 'TIME_PART_UNSPECIFIED' 'YEAR' 'MONTH' 'DAY_OF_MONTH' 'DAY_OF_WEEK' 'WEEK_OF_YEAR' 'HOUR_OF_DAY')}}\"\n                  }\n                }\n              }\n            ]\n          },\n          \"primitiveTransformation\": {\n            \"bucketingConfig\": {\n              \"buckets\": [\n                {\n                  \"max\": {\n                    \"booleanValue\": {{faker 'random.boolean'}},\n                    \"dateValue\": {\n                      \"day\": {{faker 'random.number'}},\n                      \"month\": {{faker 'random.number'}},\n                      \"year\": {{faker 'random.number'}}\n                    },\n                    \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                    \"floatValue\": {{faker 'random.float'}},\n                    \"integerValue\": \"\",\n                    \"stringValue\": \"\",\n                    \"timeValue\": {\n                      \"hours\": {{faker 'random.number'}},\n                      \"minutes\": {{faker 'random.number'}},\n                      \"nanos\": {{faker 'random.number'}},\n                      \"seconds\": {{faker 'random.number'}}\n                    },\n                    \"timestampValue\": \"\"\n                  },\n                  \"min\": {\n                    \"booleanValue\": {{faker 'random.boolean'}},\n                    \"dateValue\": {\n                      \"day\": {{faker 'random.number'}},\n                      \"month\": {{faker 'random.number'}},\n                      \"year\": {{faker 'random.number'}}\n                    },\n                    \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                    \"floatValue\": {{faker 'random.float'}},\n                    \"integerValue\": \"\",\n                    \"stringValue\": \"\",\n                    \"timeValue\": {\n                      \"hours\": {{faker 'random.number'}},\n                      \"minutes\": {{faker 'random.number'}},\n                      \"nanos\": {{faker 'random.number'}},\n                      \"seconds\": {{faker 'random.number'}}\n                    },\n                    \"timestampValue\": \"\"\n                  },\n                  \"replacementValue\": {\n                    \"booleanValue\": {{faker 'random.boolean'}},\n                    \"dateValue\": {\n                      \"day\": {{faker 'random.number'}},\n                      \"month\": {{faker 'random.number'}},\n                      \"year\": {{faker 'random.number'}}\n                    },\n                    \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                    \"floatValue\": {{faker 'random.float'}},\n                    \"integerValue\": \"\",\n                    \"stringValue\": \"\",\n                    \"timeValue\": {\n                      \"hours\": {{faker 'random.number'}},\n                      \"minutes\": {{faker 'random.number'}},\n                      \"nanos\": {{faker 'random.number'}},\n                      \"seconds\": {{faker 'random.number'}}\n                    },\n                    \"timestampValue\": \"\"\n                  }\n                }\n              ]\n            },\n            \"characterMaskConfig\": {\n              \"charactersToIgnore\": [\n                {\n                  \"charactersToSkip\": \"\",\n                  \"commonCharactersToIgnore\": \"{{oneOf (array 'COMMON_CHARS_TO_IGNORE_UNSPECIFIED' 'NUMERIC' 'ALPHA_UPPER_CASE' 'ALPHA_LOWER_CASE' 'PUNCTUATION' 'WHITESPACE')}}\"\n                }\n              ],\n              \"maskingCharacter\": \"\",\n              \"numberToMask\": {{faker 'random.number'}},\n              \"reverseOrder\": {{faker 'random.boolean'}}\n            },\n            \"cryptoDeterministicConfig\": {\n              \"context\": {\n                \"name\": \"\"\n              },\n              \"cryptoKey\": {\n                \"kmsWrapped\": {\n                  \"cryptoKeyName\": \"\",\n                  \"wrappedKey\": \"\"\n                },\n                \"transient\": {\n                  \"name\": \"\"\n                },\n                \"unwrapped\": {\n                  \"key\": \"\"\n                }\n              },\n              \"surrogateInfoType\": {\n                \"name\": \"\",\n                \"version\": \"\"\n              }\n            },\n            \"cryptoHashConfig\": {\n              \"cryptoKey\": {\n                \"kmsWrapped\": {\n                  \"cryptoKeyName\": \"\",\n                  \"wrappedKey\": \"\"\n                },\n                \"transient\": {\n                  \"name\": \"\"\n                },\n                \"unwrapped\": {\n                  \"key\": \"\"\n                }\n              }\n            },\n            \"cryptoReplaceFfxFpeConfig\": {\n              \"commonAlphabet\": \"{{oneOf (array 'FFX_COMMON_NATIVE_ALPHABET_UNSPECIFIED' 'NUMERIC' 'HEXADECIMAL' 'UPPER_CASE_ALPHA_NUMERIC' 'ALPHA_NUMERIC')}}\",\n              \"context\": {\n                \"name\": \"\"\n              },\n              \"cryptoKey\": {\n                \"kmsWrapped\": {\n                  \"cryptoKeyName\": \"\",\n                  \"wrappedKey\": \"\"\n                },\n                \"transient\": {\n                  \"name\": \"\"\n                },\n                \"unwrapped\": {\n                  \"key\": \"\"\n                }\n              },\n              \"customAlphabet\": \"\",\n              \"radix\": {{faker 'random.number'}},\n              \"surrogateInfoType\": {\n                \"name\": \"\",\n                \"version\": \"\"\n              }\n            },\n            \"dateShiftConfig\": {\n              \"context\": {\n                \"name\": \"\"\n              },\n              \"cryptoKey\": {\n                \"kmsWrapped\": {\n                  \"cryptoKeyName\": \"\",\n                  \"wrappedKey\": \"\"\n                },\n                \"transient\": {\n                  \"name\": \"\"\n                },\n                \"unwrapped\": {\n                  \"key\": \"\"\n                }\n              },\n              \"lowerBoundDays\": {{faker 'random.number'}},\n              \"upperBoundDays\": {{faker 'random.number'}}\n            },\n            \"fixedSizeBucketingConfig\": {\n              \"bucketSize\": {{faker 'random.float'}},\n              \"lowerBound\": {\n                \"booleanValue\": {{faker 'random.boolean'}},\n                \"dateValue\": {\n                  \"day\": {{faker 'random.number'}},\n                  \"month\": {{faker 'random.number'}},\n                  \"year\": {{faker 'random.number'}}\n                },\n                \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                \"floatValue\": {{faker 'random.float'}},\n                \"integerValue\": \"\",\n                \"stringValue\": \"\",\n                \"timeValue\": {\n                  \"hours\": {{faker 'random.number'}},\n                  \"minutes\": {{faker 'random.number'}},\n                  \"nanos\": {{faker 'random.number'}},\n                  \"seconds\": {{faker 'random.number'}}\n                },\n                \"timestampValue\": \"\"\n              },\n              \"upperBound\": {\n                \"booleanValue\": {{faker 'random.boolean'}},\n                \"dateValue\": {\n                  \"day\": {{faker 'random.number'}},\n                  \"month\": {{faker 'random.number'}},\n                  \"year\": {{faker 'random.number'}}\n                },\n                \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                \"floatValue\": {{faker 'random.float'}},\n                \"integerValue\": \"\",\n                \"stringValue\": \"\",\n                \"timeValue\": {\n                  \"hours\": {{faker 'random.number'}},\n                  \"minutes\": {{faker 'random.number'}},\n                  \"nanos\": {{faker 'random.number'}},\n                  \"seconds\": {{faker 'random.number'}}\n                },\n                \"timestampValue\": \"\"\n              }\n            },\n            \"redactConfig\": {},\n            \"replaceConfig\": {\n              \"newValue\": {\n                \"booleanValue\": {{faker 'random.boolean'}},\n                \"dateValue\": {\n                  \"day\": {{faker 'random.number'}},\n                  \"month\": {{faker 'random.number'}},\n                  \"year\": {{faker 'random.number'}}\n                },\n                \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                \"floatValue\": {{faker 'random.float'}},\n                \"integerValue\": \"\",\n                \"stringValue\": \"\",\n                \"timeValue\": {\n                  \"hours\": {{faker 'random.number'}},\n                  \"minutes\": {{faker 'random.number'}},\n                  \"nanos\": {{faker 'random.number'}},\n                  \"seconds\": {{faker 'random.number'}}\n                },\n                \"timestampValue\": \"\"\n              }\n            },\n            \"replaceDictionaryConfig\": {\n              \"wordList\": {\n                \"words\": [\n                  \"\"\n                ]\n              }\n            },\n            \"replaceWithInfoTypeConfig\": {},\n            \"timePartConfig\": {\n              \"partToExtract\": \"{{oneOf (array 'TIME_PART_UNSPECIFIED' 'YEAR' 'MONTH' 'DAY_OF_MONTH' 'DAY_OF_WEEK' 'WEEK_OF_YEAR' 'HOUR_OF_DAY')}}\"\n            }\n          }\n        }\n      ],\n      \"recordSuppressions\": [\n        {\n          \"condition\": {\n            \"expressions\": {\n              \"conditions\": {\n                \"conditions\": [\n                  {\n                    \"field\": {\n                      \"name\": \"\"\n                    },\n                    \"operator\": \"{{oneOf (array 'RELATIONAL_OPERATOR_UNSPECIFIED' 'EQUAL_TO' 'NOT_EQUAL_TO' 'GREATER_THAN' 'LESS_THAN' 'GREATER_THAN_OR_EQUALS' 'LESS_THAN_OR_EQUALS' 'EXISTS')}}\",\n                    \"value\": {\n                      \"booleanValue\": {{faker 'random.boolean'}},\n                      \"dateValue\": {\n                        \"day\": {{faker 'random.number'}},\n                        \"month\": {{faker 'random.number'}},\n                        \"year\": {{faker 'random.number'}}\n                      },\n                      \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                      \"floatValue\": {{faker 'random.float'}},\n                      \"integerValue\": \"\",\n                      \"stringValue\": \"\",\n                      \"timeValue\": {\n                        \"hours\": {{faker 'random.number'}},\n                        \"minutes\": {{faker 'random.number'}},\n                        \"nanos\": {{faker 'random.number'}},\n                        \"seconds\": {{faker 'random.number'}}\n                      },\n                      \"timestampValue\": \"\"\n                    }\n                  }\n                ]\n              },\n              \"logicalOperator\": \"{{oneOf (array 'LOGICAL_OPERATOR_UNSPECIFIED' 'AND')}}\"\n            }\n          }\n        }\n      ]\n    },\n    \"transformationErrorHandling\": {\n      \"leaveUntransformed\": {},\n      \"throwError\": {}\n    }\n  },\n  \"description\": \"\",\n  \"displayName\": \"\",\n  \"name\": \"\",\n  \"updateTime\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bb204f7f-8bf0-4c77-b8f8-94f06cd2d1dc",
      "documentation": "Lists DlpJobs that match the specified filter in the request. See https://cloud.google.com/dlp/docs/inspecting-storage and https://cloud.google.com/dlp/docs/compute-risk-analysis to learn more.",
      "method": "get",
      "endpoint": "v2/:parent/dlpJobs",
      "responses": [
        {
          "uuid": "2c13c648-3c68-439f-bd2e-927743328c42",
          "body": "{\n  \"jobs\": [\n    {\n      \"createTime\": \"\",\n      \"endTime\": \"\",\n      \"errors\": [\n        {\n          \"details\": {\n            \"code\": {{faker 'random.number'}},\n            \"details\": [\n              {}\n            ],\n            \"message\": \"\"\n          },\n          \"timestamps\": [\n            \"\"\n          ]\n        }\n      ],\n      \"inspectDetails\": {\n        \"requestedOptions\": {\n          \"jobConfig\": {\n            \"actions\": [\n              {\n                \"jobNotificationEmails\": {},\n                \"pubSub\": {\n                  \"topic\": \"\"\n                },\n                \"publishFindingsToCloudDataCatalog\": {},\n                \"publishSummaryToCscc\": {},\n                \"publishToStackdriver\": {},\n                \"saveFindings\": {\n                  \"outputConfig\": {\n                    \"outputSchema\": \"{{oneOf (array 'OUTPUT_SCHEMA_UNSPECIFIED' 'BASIC_COLUMNS' 'GCS_COLUMNS' 'DATASTORE_COLUMNS' 'BIG_QUERY_COLUMNS' 'ALL_COLUMNS')}}\",\n                    \"table\": {\n                      \"datasetId\": \"\",\n                      \"projectId\": \"\",\n                      \"tableId\": \"\"\n                    }\n                  }\n                }\n              }\n            ],\n            \"inspectConfig\": {\n              \"contentOptions\": [\n                \"{{oneOf (array 'CONTENT_UNSPECIFIED' 'CONTENT_TEXT' 'CONTENT_IMAGE')}}\"\n              ],\n              \"customInfoTypes\": [\n                {\n                  \"detectionRules\": [\n                    {\n                      \"hotwordRule\": {\n                        \"hotwordRegex\": {\n                          \"groupIndexes\": [\n                            {{faker 'random.number'}}\n                          ],\n                          \"pattern\": \"\"\n                        },\n                        \"likelihoodAdjustment\": {\n                          \"fixedLikelihood\": \"{{oneOf (array 'LIKELIHOOD_UNSPECIFIED' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n                          \"relativeLikelihood\": {{faker 'random.number'}}\n                        },\n                        \"proximity\": {\n                          \"windowAfter\": {{faker 'random.number'}},\n                          \"windowBefore\": {{faker 'random.number'}}\n                        }\n                      }\n                    }\n                  ],\n                  \"dictionary\": {\n                    \"cloudStoragePath\": {\n                      \"path\": \"\"\n                    },\n                    \"wordList\": {\n                      \"words\": [\n                        \"\"\n                      ]\n                    }\n                  },\n                  \"exclusionType\": \"{{oneOf (array 'EXCLUSION_TYPE_UNSPECIFIED' 'EXCLUSION_TYPE_EXCLUDE')}}\",\n                  \"infoType\": {\n                    \"name\": \"\",\n                    \"version\": \"\"\n                  },\n                  \"likelihood\": \"{{oneOf (array 'LIKELIHOOD_UNSPECIFIED' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n                  \"regex\": {\n                    \"groupIndexes\": [\n                      {{faker 'random.number'}}\n                    ],\n                    \"pattern\": \"\"\n                  },\n                  \"storedType\": {\n                    \"createTime\": \"\",\n                    \"name\": \"\"\n                  },\n                  \"surrogateType\": {}\n                }\n              ],\n              \"excludeInfoTypes\": {{faker 'random.boolean'}},\n              \"includeQuote\": {{faker 'random.boolean'}},\n              \"infoTypes\": [\n                {\n                  \"name\": \"\",\n                  \"version\": \"\"\n                }\n              ],\n              \"limits\": {\n                \"maxFindingsPerInfoType\": [\n                  {\n                    \"infoType\": {\n                      \"name\": \"\",\n                      \"version\": \"\"\n                    },\n                    \"maxFindings\": {{faker 'random.number'}}\n                  }\n                ],\n                \"maxFindingsPerItem\": {{faker 'random.number'}},\n                \"maxFindingsPerRequest\": {{faker 'random.number'}}\n              },\n              \"minLikelihood\": \"{{oneOf (array 'LIKELIHOOD_UNSPECIFIED' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n              \"ruleSet\": [\n                {\n                  \"infoTypes\": [\n                    {\n                      \"name\": \"\",\n                      \"version\": \"\"\n                    }\n                  ],\n                  \"rules\": [\n                    {\n                      \"exclusionRule\": {\n                        \"dictionary\": {\n                          \"cloudStoragePath\": {\n                            \"path\": \"\"\n                          },\n                          \"wordList\": {\n                            \"words\": [\n                              \"\"\n                            ]\n                          }\n                        },\n                        \"excludeInfoTypes\": {\n                          \"infoTypes\": [\n                            {\n                              \"name\": \"\",\n                              \"version\": \"\"\n                            }\n                          ]\n                        },\n                        \"matchingType\": \"{{oneOf (array 'MATCHING_TYPE_UNSPECIFIED' 'MATCHING_TYPE_FULL_MATCH' 'MATCHING_TYPE_PARTIAL_MATCH' 'MATCHING_TYPE_INVERSE_MATCH')}}\",\n                        \"regex\": {\n                          \"groupIndexes\": [\n                            {{faker 'random.number'}}\n                          ],\n                          \"pattern\": \"\"\n                        }\n                      },\n                      \"hotwordRule\": {\n                        \"hotwordRegex\": {\n                          \"groupIndexes\": [\n                            {{faker 'random.number'}}\n                          ],\n                          \"pattern\": \"\"\n                        },\n                        \"likelihoodAdjustment\": {\n                          \"fixedLikelihood\": \"{{oneOf (array 'LIKELIHOOD_UNSPECIFIED' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n                          \"relativeLikelihood\": {{faker 'random.number'}}\n                        },\n                        \"proximity\": {\n                          \"windowAfter\": {{faker 'random.number'}},\n                          \"windowBefore\": {{faker 'random.number'}}\n                        }\n                      }\n                    }\n                  ]\n                }\n              ]\n            },\n            \"inspectTemplateName\": \"\",\n            \"storageConfig\": {\n              \"bigQueryOptions\": {\n                \"excludedFields\": [\n                  {\n                    \"name\": \"\"\n                  }\n                ],\n                \"identifyingFields\": [\n                  {\n                    \"name\": \"\"\n                  }\n                ],\n                \"includedFields\": [\n                  {\n                    \"name\": \"\"\n                  }\n                ],\n                \"rowsLimit\": \"\",\n                \"rowsLimitPercent\": {{faker 'random.number'}},\n                \"sampleMethod\": \"{{oneOf (array 'SAMPLE_METHOD_UNSPECIFIED' 'TOP' 'RANDOM_START')}}\",\n                \"tableReference\": {\n                  \"datasetId\": \"\",\n                  \"projectId\": \"\",\n                  \"tableId\": \"\"\n                }\n              },\n              \"cloudStorageOptions\": {\n                \"bytesLimitPerFile\": \"\",\n                \"bytesLimitPerFilePercent\": {{faker 'random.number'}},\n                \"fileSet\": {\n                  \"regexFileSet\": {\n                    \"bucketName\": \"\",\n                    \"excludeRegex\": [\n                      \"\"\n                    ],\n                    \"includeRegex\": [\n                      \"\"\n                    ]\n                  },\n                  \"url\": \"\"\n                },\n                \"fileTypes\": [\n                  \"{{oneOf (array 'FILE_TYPE_UNSPECIFIED' 'BINARY_FILE' 'TEXT_FILE' 'IMAGE' 'WORD' 'PDF' 'AVRO' 'CSV' 'TSV' 'POWERPOINT' 'EXCEL')}}\"\n                ],\n                \"filesLimitPercent\": {{faker 'random.number'}},\n                \"sampleMethod\": \"{{oneOf (array 'SAMPLE_METHOD_UNSPECIFIED' 'TOP' 'RANDOM_START')}}\"\n              },\n              \"datastoreOptions\": {\n                \"kind\": {\n                  \"name\": \"\"\n                },\n                \"partitionId\": {\n                  \"namespaceId\": \"\",\n                  \"projectId\": \"\"\n                }\n              },\n              \"hybridOptions\": {\n                \"description\": \"\",\n                \"labels\": {},\n                \"requiredFindingLabelKeys\": [\n                  \"\"\n                ],\n                \"tableOptions\": {\n                  \"identifyingFields\": [\n                    {\n                      \"name\": \"\"\n                    }\n                  ]\n                }\n              },\n              \"timespanConfig\": {\n                \"enableAutoPopulationOfTimespanConfig\": {{faker 'random.boolean'}},\n                \"endTime\": \"\",\n                \"startTime\": \"\",\n                \"timestampField\": {\n                  \"name\": \"\"\n                }\n              }\n            }\n          },\n          \"snapshotInspectTemplate\": {\n            \"createTime\": \"\",\n            \"description\": \"\",\n            \"displayName\": \"\",\n            \"inspectConfig\": {\n              \"contentOptions\": [\n                \"{{oneOf (array 'CONTENT_UNSPECIFIED' 'CONTENT_TEXT' 'CONTENT_IMAGE')}}\"\n              ],\n              \"customInfoTypes\": [\n                {\n                  \"detectionRules\": [\n                    {\n                      \"hotwordRule\": {\n                        \"hotwordRegex\": {\n                          \"groupIndexes\": [\n                            {{faker 'random.number'}}\n                          ],\n                          \"pattern\": \"\"\n                        },\n                        \"likelihoodAdjustment\": {\n                          \"fixedLikelihood\": \"{{oneOf (array 'LIKELIHOOD_UNSPECIFIED' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n                          \"relativeLikelihood\": {{faker 'random.number'}}\n                        },\n                        \"proximity\": {\n                          \"windowAfter\": {{faker 'random.number'}},\n                          \"windowBefore\": {{faker 'random.number'}}\n                        }\n                      }\n                    }\n                  ],\n                  \"dictionary\": {\n                    \"cloudStoragePath\": {\n                      \"path\": \"\"\n                    },\n                    \"wordList\": {\n                      \"words\": [\n                        \"\"\n                      ]\n                    }\n                  },\n                  \"exclusionType\": \"{{oneOf (array 'EXCLUSION_TYPE_UNSPECIFIED' 'EXCLUSION_TYPE_EXCLUDE')}}\",\n                  \"infoType\": {\n                    \"name\": \"\",\n                    \"version\": \"\"\n                  },\n                  \"likelihood\": \"{{oneOf (array 'LIKELIHOOD_UNSPECIFIED' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n                  \"regex\": {\n                    \"groupIndexes\": [\n                      {{faker 'random.number'}}\n                    ],\n                    \"pattern\": \"\"\n                  },\n                  \"storedType\": {\n                    \"createTime\": \"\",\n                    \"name\": \"\"\n                  },\n                  \"surrogateType\": {}\n                }\n              ],\n              \"excludeInfoTypes\": {{faker 'random.boolean'}},\n              \"includeQuote\": {{faker 'random.boolean'}},\n              \"infoTypes\": [\n                {\n                  \"name\": \"\",\n                  \"version\": \"\"\n                }\n              ],\n              \"limits\": {\n                \"maxFindingsPerInfoType\": [\n                  {\n                    \"infoType\": {\n                      \"name\": \"\",\n                      \"version\": \"\"\n                    },\n                    \"maxFindings\": {{faker 'random.number'}}\n                  }\n                ],\n                \"maxFindingsPerItem\": {{faker 'random.number'}},\n                \"maxFindingsPerRequest\": {{faker 'random.number'}}\n              },\n              \"minLikelihood\": \"{{oneOf (array 'LIKELIHOOD_UNSPECIFIED' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n              \"ruleSet\": [\n                {\n                  \"infoTypes\": [\n                    {\n                      \"name\": \"\",\n                      \"version\": \"\"\n                    }\n                  ],\n                  \"rules\": [\n                    {\n                      \"exclusionRule\": {\n                        \"dictionary\": {\n                          \"cloudStoragePath\": {\n                            \"path\": \"\"\n                          },\n                          \"wordList\": {\n                            \"words\": [\n                              \"\"\n                            ]\n                          }\n                        },\n                        \"excludeInfoTypes\": {\n                          \"infoTypes\": [\n                            {\n                              \"name\": \"\",\n                              \"version\": \"\"\n                            }\n                          ]\n                        },\n                        \"matchingType\": \"{{oneOf (array 'MATCHING_TYPE_UNSPECIFIED' 'MATCHING_TYPE_FULL_MATCH' 'MATCHING_TYPE_PARTIAL_MATCH' 'MATCHING_TYPE_INVERSE_MATCH')}}\",\n                        \"regex\": {\n                          \"groupIndexes\": [\n                            {{faker 'random.number'}}\n                          ],\n                          \"pattern\": \"\"\n                        }\n                      },\n                      \"hotwordRule\": {\n                        \"hotwordRegex\": {\n                          \"groupIndexes\": [\n                            {{faker 'random.number'}}\n                          ],\n                          \"pattern\": \"\"\n                        },\n                        \"likelihoodAdjustment\": {\n                          \"fixedLikelihood\": \"{{oneOf (array 'LIKELIHOOD_UNSPECIFIED' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n                          \"relativeLikelihood\": {{faker 'random.number'}}\n                        },\n                        \"proximity\": {\n                          \"windowAfter\": {{faker 'random.number'}},\n                          \"windowBefore\": {{faker 'random.number'}}\n                        }\n                      }\n                    }\n                  ]\n                }\n              ]\n            },\n            \"name\": \"\",\n            \"updateTime\": \"\"\n          }\n        },\n        \"result\": {\n          \"hybridStats\": {\n            \"abortedCount\": \"\",\n            \"pendingCount\": \"\",\n            \"processedCount\": \"\"\n          },\n          \"infoTypeStats\": [\n            {\n              \"count\": \"\",\n              \"infoType\": {\n                \"name\": \"\",\n                \"version\": \"\"\n              }\n            }\n          ],\n          \"processedBytes\": \"\",\n          \"totalEstimatedBytes\": \"\"\n        }\n      },\n      \"jobTriggerName\": \"\",\n      \"name\": \"\",\n      \"riskDetails\": {\n        \"categoricalStatsResult\": {\n          \"valueFrequencyHistogramBuckets\": [\n            {\n              \"bucketSize\": \"\",\n              \"bucketValueCount\": \"\",\n              \"bucketValues\": [\n                {\n                  \"count\": \"\",\n                  \"value\": {\n                    \"booleanValue\": {{faker 'random.boolean'}},\n                    \"dateValue\": {\n                      \"day\": {{faker 'random.number'}},\n                      \"month\": {{faker 'random.number'}},\n                      \"year\": {{faker 'random.number'}}\n                    },\n                    \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                    \"floatValue\": {{faker 'random.float'}},\n                    \"integerValue\": \"\",\n                    \"stringValue\": \"\",\n                    \"timeValue\": {\n                      \"hours\": {{faker 'random.number'}},\n                      \"minutes\": {{faker 'random.number'}},\n                      \"nanos\": {{faker 'random.number'}},\n                      \"seconds\": {{faker 'random.number'}}\n                    },\n                    \"timestampValue\": \"\"\n                  }\n                }\n              ],\n              \"valueFrequencyLowerBound\": \"\",\n              \"valueFrequencyUpperBound\": \"\"\n            }\n          ]\n        },\n        \"deltaPresenceEstimationResult\": {\n          \"deltaPresenceEstimationHistogram\": [\n            {\n              \"bucketSize\": \"\",\n              \"bucketValueCount\": \"\",\n              \"bucketValues\": [\n                {\n                  \"estimatedProbability\": {{faker 'random.float'}},\n                  \"quasiIdsValues\": [\n                    {\n                      \"booleanValue\": {{faker 'random.boolean'}},\n                      \"dateValue\": {\n                        \"day\": {{faker 'random.number'}},\n                        \"month\": {{faker 'random.number'}},\n                        \"year\": {{faker 'random.number'}}\n                      },\n                      \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                      \"floatValue\": {{faker 'random.float'}},\n                      \"integerValue\": \"\",\n                      \"stringValue\": \"\",\n                      \"timeValue\": {\n                        \"hours\": {{faker 'random.number'}},\n                        \"minutes\": {{faker 'random.number'}},\n                        \"nanos\": {{faker 'random.number'}},\n                        \"seconds\": {{faker 'random.number'}}\n                      },\n                      \"timestampValue\": \"\"\n                    }\n                  ]\n                }\n              ],\n              \"maxProbability\": {{faker 'random.float'}},\n              \"minProbability\": {{faker 'random.float'}}\n            }\n          ]\n        },\n        \"kAnonymityResult\": {\n          \"equivalenceClassHistogramBuckets\": [\n            {\n              \"bucketSize\": \"\",\n              \"bucketValueCount\": \"\",\n              \"bucketValues\": [\n                {\n                  \"equivalenceClassSize\": \"\",\n                  \"quasiIdsValues\": [\n                    {\n                      \"booleanValue\": {{faker 'random.boolean'}},\n                      \"dateValue\": {\n                        \"day\": {{faker 'random.number'}},\n                        \"month\": {{faker 'random.number'}},\n                        \"year\": {{faker 'random.number'}}\n                      },\n                      \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                      \"floatValue\": {{faker 'random.float'}},\n                      \"integerValue\": \"\",\n                      \"stringValue\": \"\",\n                      \"timeValue\": {\n                        \"hours\": {{faker 'random.number'}},\n                        \"minutes\": {{faker 'random.number'}},\n                        \"nanos\": {{faker 'random.number'}},\n                        \"seconds\": {{faker 'random.number'}}\n                      },\n                      \"timestampValue\": \"\"\n                    }\n                  ]\n                }\n              ],\n              \"equivalenceClassSizeLowerBound\": \"\",\n              \"equivalenceClassSizeUpperBound\": \"\"\n            }\n          ]\n        },\n        \"kMapEstimationResult\": {\n          \"kMapEstimationHistogram\": [\n            {\n              \"bucketSize\": \"\",\n              \"bucketValueCount\": \"\",\n              \"bucketValues\": [\n                {\n                  \"estimatedAnonymity\": \"\",\n                  \"quasiIdsValues\": [\n                    {\n                      \"booleanValue\": {{faker 'random.boolean'}},\n                      \"dateValue\": {\n                        \"day\": {{faker 'random.number'}},\n                        \"month\": {{faker 'random.number'}},\n                        \"year\": {{faker 'random.number'}}\n                      },\n                      \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                      \"floatValue\": {{faker 'random.float'}},\n                      \"integerValue\": \"\",\n                      \"stringValue\": \"\",\n                      \"timeValue\": {\n                        \"hours\": {{faker 'random.number'}},\n                        \"minutes\": {{faker 'random.number'}},\n                        \"nanos\": {{faker 'random.number'}},\n                        \"seconds\": {{faker 'random.number'}}\n                      },\n                      \"timestampValue\": \"\"\n                    }\n                  ]\n                }\n              ],\n              \"maxAnonymity\": \"\",\n              \"minAnonymity\": \"\"\n            }\n          ]\n        },\n        \"lDiversityResult\": {\n          \"sensitiveValueFrequencyHistogramBuckets\": [\n            {\n              \"bucketSize\": \"\",\n              \"bucketValueCount\": \"\",\n              \"bucketValues\": [\n                {\n                  \"equivalenceClassSize\": \"\",\n                  \"numDistinctSensitiveValues\": \"\",\n                  \"quasiIdsValues\": [\n                    {\n                      \"booleanValue\": {{faker 'random.boolean'}},\n                      \"dateValue\": {\n                        \"day\": {{faker 'random.number'}},\n                        \"month\": {{faker 'random.number'}},\n                        \"year\": {{faker 'random.number'}}\n                      },\n                      \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                      \"floatValue\": {{faker 'random.float'}},\n                      \"integerValue\": \"\",\n                      \"stringValue\": \"\",\n                      \"timeValue\": {\n                        \"hours\": {{faker 'random.number'}},\n                        \"minutes\": {{faker 'random.number'}},\n                        \"nanos\": {{faker 'random.number'}},\n                        \"seconds\": {{faker 'random.number'}}\n                      },\n                      \"timestampValue\": \"\"\n                    }\n                  ],\n                  \"topSensitiveValues\": [\n                    {\n                      \"count\": \"\",\n                      \"value\": {\n                        \"booleanValue\": {{faker 'random.boolean'}},\n                        \"dateValue\": {\n                          \"day\": {{faker 'random.number'}},\n                          \"month\": {{faker 'random.number'}},\n                          \"year\": {{faker 'random.number'}}\n                        },\n                        \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                        \"floatValue\": {{faker 'random.float'}},\n                        \"integerValue\": \"\",\n                        \"stringValue\": \"\",\n                        \"timeValue\": {\n                          \"hours\": {{faker 'random.number'}},\n                          \"minutes\": {{faker 'random.number'}},\n                          \"nanos\": {{faker 'random.number'}},\n                          \"seconds\": {{faker 'random.number'}}\n                        },\n                        \"timestampValue\": \"\"\n                      }\n                    }\n                  ]\n                }\n              ],\n              \"sensitiveValueFrequencyLowerBound\": \"\",\n              \"sensitiveValueFrequencyUpperBound\": \"\"\n            }\n          ]\n        },\n        \"numericalStatsResult\": {\n          \"maxValue\": {\n            \"booleanValue\": {{faker 'random.boolean'}},\n            \"dateValue\": {\n              \"day\": {{faker 'random.number'}},\n              \"month\": {{faker 'random.number'}},\n              \"year\": {{faker 'random.number'}}\n            },\n            \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n            \"floatValue\": {{faker 'random.float'}},\n            \"integerValue\": \"\",\n            \"stringValue\": \"\",\n            \"timeValue\": {\n              \"hours\": {{faker 'random.number'}},\n              \"minutes\": {{faker 'random.number'}},\n              \"nanos\": {{faker 'random.number'}},\n              \"seconds\": {{faker 'random.number'}}\n            },\n            \"timestampValue\": \"\"\n          },\n          \"minValue\": {\n            \"booleanValue\": {{faker 'random.boolean'}},\n            \"dateValue\": {\n              \"day\": {{faker 'random.number'}},\n              \"month\": {{faker 'random.number'}},\n              \"year\": {{faker 'random.number'}}\n            },\n            \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n            \"floatValue\": {{faker 'random.float'}},\n            \"integerValue\": \"\",\n            \"stringValue\": \"\",\n            \"timeValue\": {\n              \"hours\": {{faker 'random.number'}},\n              \"minutes\": {{faker 'random.number'}},\n              \"nanos\": {{faker 'random.number'}},\n              \"seconds\": {{faker 'random.number'}}\n            },\n            \"timestampValue\": \"\"\n          },\n          \"quantileValues\": [\n            {\n              \"booleanValue\": {{faker 'random.boolean'}},\n              \"dateValue\": {\n                \"day\": {{faker 'random.number'}},\n                \"month\": {{faker 'random.number'}},\n                \"year\": {{faker 'random.number'}}\n              },\n              \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n              \"floatValue\": {{faker 'random.float'}},\n              \"integerValue\": \"\",\n              \"stringValue\": \"\",\n              \"timeValue\": {\n                \"hours\": {{faker 'random.number'}},\n                \"minutes\": {{faker 'random.number'}},\n                \"nanos\": {{faker 'random.number'}},\n                \"seconds\": {{faker 'random.number'}}\n              },\n              \"timestampValue\": \"\"\n            }\n          ]\n        },\n        \"requestedOptions\": {\n          \"jobConfig\": {\n            \"actions\": [\n              {\n                \"jobNotificationEmails\": {},\n                \"pubSub\": {\n                  \"topic\": \"\"\n                },\n                \"publishFindingsToCloudDataCatalog\": {},\n                \"publishSummaryToCscc\": {},\n                \"publishToStackdriver\": {},\n                \"saveFindings\": {\n                  \"outputConfig\": {\n                    \"outputSchema\": \"{{oneOf (array 'OUTPUT_SCHEMA_UNSPECIFIED' 'BASIC_COLUMNS' 'GCS_COLUMNS' 'DATASTORE_COLUMNS' 'BIG_QUERY_COLUMNS' 'ALL_COLUMNS')}}\",\n                    \"table\": {\n                      \"datasetId\": \"\",\n                      \"projectId\": \"\",\n                      \"tableId\": \"\"\n                    }\n                  }\n                }\n              }\n            ],\n            \"privacyMetric\": {\n              \"categoricalStatsConfig\": {\n                \"field\": {\n                  \"name\": \"\"\n                }\n              },\n              \"deltaPresenceEstimationConfig\": {\n                \"auxiliaryTables\": [\n                  {\n                    \"quasiIds\": [\n                      {\n                        \"customTag\": \"\",\n                        \"field\": {\n                          \"name\": \"\"\n                        }\n                      }\n                    ],\n                    \"relativeFrequency\": {\n                      \"name\": \"\"\n                    },\n                    \"table\": {\n                      \"datasetId\": \"\",\n                      \"projectId\": \"\",\n                      \"tableId\": \"\"\n                    }\n                  }\n                ],\n                \"quasiIds\": [\n                  {\n                    \"customTag\": \"\",\n                    \"field\": {\n                      \"name\": \"\"\n                    },\n                    \"inferred\": {},\n                    \"infoType\": {\n                      \"name\": \"\",\n                      \"version\": \"\"\n                    }\n                  }\n                ],\n                \"regionCode\": \"\"\n              },\n              \"kAnonymityConfig\": {\n                \"entityId\": {\n                  \"field\": {\n                    \"name\": \"\"\n                  }\n                },\n                \"quasiIds\": [\n                  {\n                    \"name\": \"\"\n                  }\n                ]\n              },\n              \"kMapEstimationConfig\": {\n                \"auxiliaryTables\": [\n                  {\n                    \"quasiIds\": [\n                      {\n                        \"customTag\": \"\",\n                        \"field\": {\n                          \"name\": \"\"\n                        }\n                      }\n                    ],\n                    \"relativeFrequency\": {\n                      \"name\": \"\"\n                    },\n                    \"table\": {\n                      \"datasetId\": \"\",\n                      \"projectId\": \"\",\n                      \"tableId\": \"\"\n                    }\n                  }\n                ],\n                \"quasiIds\": [\n                  {\n                    \"customTag\": \"\",\n                    \"field\": {\n                      \"name\": \"\"\n                    },\n                    \"inferred\": {},\n                    \"infoType\": {\n                      \"name\": \"\",\n                      \"version\": \"\"\n                    }\n                  }\n                ],\n                \"regionCode\": \"\"\n              },\n              \"lDiversityConfig\": {\n                \"quasiIds\": [\n                  {\n                    \"name\": \"\"\n                  }\n                ],\n                \"sensitiveAttribute\": {\n                  \"name\": \"\"\n                }\n              },\n              \"numericalStatsConfig\": {\n                \"field\": {\n                  \"name\": \"\"\n                }\n              }\n            },\n            \"sourceTable\": {\n              \"datasetId\": \"\",\n              \"projectId\": \"\",\n              \"tableId\": \"\"\n            }\n          }\n        },\n        \"requestedPrivacyMetric\": {\n          \"categoricalStatsConfig\": {\n            \"field\": {\n              \"name\": \"\"\n            }\n          },\n          \"deltaPresenceEstimationConfig\": {\n            \"auxiliaryTables\": [\n              {\n                \"quasiIds\": [\n                  {\n                    \"customTag\": \"\",\n                    \"field\": {\n                      \"name\": \"\"\n                    }\n                  }\n                ],\n                \"relativeFrequency\": {\n                  \"name\": \"\"\n                },\n                \"table\": {\n                  \"datasetId\": \"\",\n                  \"projectId\": \"\",\n                  \"tableId\": \"\"\n                }\n              }\n            ],\n            \"quasiIds\": [\n              {\n                \"customTag\": \"\",\n                \"field\": {\n                  \"name\": \"\"\n                },\n                \"inferred\": {},\n                \"infoType\": {\n                  \"name\": \"\",\n                  \"version\": \"\"\n                }\n              }\n            ],\n            \"regionCode\": \"\"\n          },\n          \"kAnonymityConfig\": {\n            \"entityId\": {\n              \"field\": {\n                \"name\": \"\"\n              }\n            },\n            \"quasiIds\": [\n              {\n                \"name\": \"\"\n              }\n            ]\n          },\n          \"kMapEstimationConfig\": {\n            \"auxiliaryTables\": [\n              {\n                \"quasiIds\": [\n                  {\n                    \"customTag\": \"\",\n                    \"field\": {\n                      \"name\": \"\"\n                    }\n                  }\n                ],\n                \"relativeFrequency\": {\n                  \"name\": \"\"\n                },\n                \"table\": {\n                  \"datasetId\": \"\",\n                  \"projectId\": \"\",\n                  \"tableId\": \"\"\n                }\n              }\n            ],\n            \"quasiIds\": [\n              {\n                \"customTag\": \"\",\n                \"field\": {\n                  \"name\": \"\"\n                },\n                \"inferred\": {},\n                \"infoType\": {\n                  \"name\": \"\",\n                  \"version\": \"\"\n                }\n              }\n            ],\n            \"regionCode\": \"\"\n          },\n          \"lDiversityConfig\": {\n            \"quasiIds\": [\n              {\n                \"name\": \"\"\n              }\n            ],\n            \"sensitiveAttribute\": {\n              \"name\": \"\"\n            }\n          },\n          \"numericalStatsConfig\": {\n            \"field\": {\n              \"name\": \"\"\n            }\n          }\n        },\n        \"requestedSourceTable\": {\n          \"datasetId\": \"\",\n          \"projectId\": \"\",\n          \"tableId\": \"\"\n        }\n      },\n      \"startTime\": \"\",\n      \"state\": \"{{oneOf (array 'JOB_STATE_UNSPECIFIED' 'PENDING' 'RUNNING' 'DONE' 'CANCELED' 'FAILED' 'ACTIVE')}}\",\n      \"type\": \"{{oneOf (array 'DLP_JOB_TYPE_UNSPECIFIED' 'INSPECT_JOB' 'RISK_ANALYSIS_JOB')}}\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "27aac541-c8ba-4bf5-a78a-92d8b45442f0",
      "documentation": "Creates a new job to inspect storage or calculate risk metrics. See https://cloud.google.com/dlp/docs/inspecting-storage and https://cloud.google.com/dlp/docs/compute-risk-analysis to learn more. When no InfoTypes or CustomInfoTypes are specified in inspect jobs, the system will automatically choose what detectors to run. By default this may be all types, but may change over time as detectors are updated.",
      "method": "post",
      "endpoint": "v2/:parent/dlpJobs",
      "responses": [
        {
          "uuid": "048cbab3-7817-4114-b47d-1e3f78a8b6bc",
          "body": "{\n  \"createTime\": \"\",\n  \"endTime\": \"\",\n  \"errors\": [\n    {\n      \"details\": {\n        \"code\": {{faker 'random.number'}},\n        \"details\": [\n          {}\n        ],\n        \"message\": \"\"\n      },\n      \"timestamps\": [\n        \"\"\n      ]\n    }\n  ],\n  \"inspectDetails\": {\n    \"requestedOptions\": {\n      \"jobConfig\": {\n        \"actions\": [\n          {\n            \"jobNotificationEmails\": {},\n            \"pubSub\": {\n              \"topic\": \"\"\n            },\n            \"publishFindingsToCloudDataCatalog\": {},\n            \"publishSummaryToCscc\": {},\n            \"publishToStackdriver\": {},\n            \"saveFindings\": {\n              \"outputConfig\": {\n                \"outputSchema\": \"{{oneOf (array 'OUTPUT_SCHEMA_UNSPECIFIED' 'BASIC_COLUMNS' 'GCS_COLUMNS' 'DATASTORE_COLUMNS' 'BIG_QUERY_COLUMNS' 'ALL_COLUMNS')}}\",\n                \"table\": {\n                  \"datasetId\": \"\",\n                  \"projectId\": \"\",\n                  \"tableId\": \"\"\n                }\n              }\n            }\n          }\n        ],\n        \"inspectConfig\": {\n          \"contentOptions\": [\n            \"{{oneOf (array 'CONTENT_UNSPECIFIED' 'CONTENT_TEXT' 'CONTENT_IMAGE')}}\"\n          ],\n          \"customInfoTypes\": [\n            {\n              \"detectionRules\": [\n                {\n                  \"hotwordRule\": {\n                    \"hotwordRegex\": {\n                      \"groupIndexes\": [\n                        {{faker 'random.number'}}\n                      ],\n                      \"pattern\": \"\"\n                    },\n                    \"likelihoodAdjustment\": {\n                      \"fixedLikelihood\": \"{{oneOf (array 'LIKELIHOOD_UNSPECIFIED' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n                      \"relativeLikelihood\": {{faker 'random.number'}}\n                    },\n                    \"proximity\": {\n                      \"windowAfter\": {{faker 'random.number'}},\n                      \"windowBefore\": {{faker 'random.number'}}\n                    }\n                  }\n                }\n              ],\n              \"dictionary\": {\n                \"cloudStoragePath\": {\n                  \"path\": \"\"\n                },\n                \"wordList\": {\n                  \"words\": [\n                    \"\"\n                  ]\n                }\n              },\n              \"exclusionType\": \"{{oneOf (array 'EXCLUSION_TYPE_UNSPECIFIED' 'EXCLUSION_TYPE_EXCLUDE')}}\",\n              \"infoType\": {\n                \"name\": \"\",\n                \"version\": \"\"\n              },\n              \"likelihood\": \"{{oneOf (array 'LIKELIHOOD_UNSPECIFIED' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n              \"regex\": {\n                \"groupIndexes\": [\n                  {{faker 'random.number'}}\n                ],\n                \"pattern\": \"\"\n              },\n              \"storedType\": {\n                \"createTime\": \"\",\n                \"name\": \"\"\n              },\n              \"surrogateType\": {}\n            }\n          ],\n          \"excludeInfoTypes\": {{faker 'random.boolean'}},\n          \"includeQuote\": {{faker 'random.boolean'}},\n          \"infoTypes\": [\n            {\n              \"name\": \"\",\n              \"version\": \"\"\n            }\n          ],\n          \"limits\": {\n            \"maxFindingsPerInfoType\": [\n              {\n                \"infoType\": {\n                  \"name\": \"\",\n                  \"version\": \"\"\n                },\n                \"maxFindings\": {{faker 'random.number'}}\n              }\n            ],\n            \"maxFindingsPerItem\": {{faker 'random.number'}},\n            \"maxFindingsPerRequest\": {{faker 'random.number'}}\n          },\n          \"minLikelihood\": \"{{oneOf (array 'LIKELIHOOD_UNSPECIFIED' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n          \"ruleSet\": [\n            {\n              \"infoTypes\": [\n                {\n                  \"name\": \"\",\n                  \"version\": \"\"\n                }\n              ],\n              \"rules\": [\n                {\n                  \"exclusionRule\": {\n                    \"dictionary\": {\n                      \"cloudStoragePath\": {\n                        \"path\": \"\"\n                      },\n                      \"wordList\": {\n                        \"words\": [\n                          \"\"\n                        ]\n                      }\n                    },\n                    \"excludeInfoTypes\": {\n                      \"infoTypes\": [\n                        {\n                          \"name\": \"\",\n                          \"version\": \"\"\n                        }\n                      ]\n                    },\n                    \"matchingType\": \"{{oneOf (array 'MATCHING_TYPE_UNSPECIFIED' 'MATCHING_TYPE_FULL_MATCH' 'MATCHING_TYPE_PARTIAL_MATCH' 'MATCHING_TYPE_INVERSE_MATCH')}}\",\n                    \"regex\": {\n                      \"groupIndexes\": [\n                        {{faker 'random.number'}}\n                      ],\n                      \"pattern\": \"\"\n                    }\n                  },\n                  \"hotwordRule\": {\n                    \"hotwordRegex\": {\n                      \"groupIndexes\": [\n                        {{faker 'random.number'}}\n                      ],\n                      \"pattern\": \"\"\n                    },\n                    \"likelihoodAdjustment\": {\n                      \"fixedLikelihood\": \"{{oneOf (array 'LIKELIHOOD_UNSPECIFIED' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n                      \"relativeLikelihood\": {{faker 'random.number'}}\n                    },\n                    \"proximity\": {\n                      \"windowAfter\": {{faker 'random.number'}},\n                      \"windowBefore\": {{faker 'random.number'}}\n                    }\n                  }\n                }\n              ]\n            }\n          ]\n        },\n        \"inspectTemplateName\": \"\",\n        \"storageConfig\": {\n          \"bigQueryOptions\": {\n            \"excludedFields\": [\n              {\n                \"name\": \"\"\n              }\n            ],\n            \"identifyingFields\": [\n              {\n                \"name\": \"\"\n              }\n            ],\n            \"includedFields\": [\n              {\n                \"name\": \"\"\n              }\n            ],\n            \"rowsLimit\": \"\",\n            \"rowsLimitPercent\": {{faker 'random.number'}},\n            \"sampleMethod\": \"{{oneOf (array 'SAMPLE_METHOD_UNSPECIFIED' 'TOP' 'RANDOM_START')}}\",\n            \"tableReference\": {\n              \"datasetId\": \"\",\n              \"projectId\": \"\",\n              \"tableId\": \"\"\n            }\n          },\n          \"cloudStorageOptions\": {\n            \"bytesLimitPerFile\": \"\",\n            \"bytesLimitPerFilePercent\": {{faker 'random.number'}},\n            \"fileSet\": {\n              \"regexFileSet\": {\n                \"bucketName\": \"\",\n                \"excludeRegex\": [\n                  \"\"\n                ],\n                \"includeRegex\": [\n                  \"\"\n                ]\n              },\n              \"url\": \"\"\n            },\n            \"fileTypes\": [\n              \"{{oneOf (array 'FILE_TYPE_UNSPECIFIED' 'BINARY_FILE' 'TEXT_FILE' 'IMAGE' 'WORD' 'PDF' 'AVRO' 'CSV' 'TSV' 'POWERPOINT' 'EXCEL')}}\"\n            ],\n            \"filesLimitPercent\": {{faker 'random.number'}},\n            \"sampleMethod\": \"{{oneOf (array 'SAMPLE_METHOD_UNSPECIFIED' 'TOP' 'RANDOM_START')}}\"\n          },\n          \"datastoreOptions\": {\n            \"kind\": {\n              \"name\": \"\"\n            },\n            \"partitionId\": {\n              \"namespaceId\": \"\",\n              \"projectId\": \"\"\n            }\n          },\n          \"hybridOptions\": {\n            \"description\": \"\",\n            \"labels\": {},\n            \"requiredFindingLabelKeys\": [\n              \"\"\n            ],\n            \"tableOptions\": {\n              \"identifyingFields\": [\n                {\n                  \"name\": \"\"\n                }\n              ]\n            }\n          },\n          \"timespanConfig\": {\n            \"enableAutoPopulationOfTimespanConfig\": {{faker 'random.boolean'}},\n            \"endTime\": \"\",\n            \"startTime\": \"\",\n            \"timestampField\": {\n              \"name\": \"\"\n            }\n          }\n        }\n      },\n      \"snapshotInspectTemplate\": {\n        \"createTime\": \"\",\n        \"description\": \"\",\n        \"displayName\": \"\",\n        \"inspectConfig\": {\n          \"contentOptions\": [\n            \"{{oneOf (array 'CONTENT_UNSPECIFIED' 'CONTENT_TEXT' 'CONTENT_IMAGE')}}\"\n          ],\n          \"customInfoTypes\": [\n            {\n              \"detectionRules\": [\n                {\n                  \"hotwordRule\": {\n                    \"hotwordRegex\": {\n                      \"groupIndexes\": [\n                        {{faker 'random.number'}}\n                      ],\n                      \"pattern\": \"\"\n                    },\n                    \"likelihoodAdjustment\": {\n                      \"fixedLikelihood\": \"{{oneOf (array 'LIKELIHOOD_UNSPECIFIED' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n                      \"relativeLikelihood\": {{faker 'random.number'}}\n                    },\n                    \"proximity\": {\n                      \"windowAfter\": {{faker 'random.number'}},\n                      \"windowBefore\": {{faker 'random.number'}}\n                    }\n                  }\n                }\n              ],\n              \"dictionary\": {\n                \"cloudStoragePath\": {\n                  \"path\": \"\"\n                },\n                \"wordList\": {\n                  \"words\": [\n                    \"\"\n                  ]\n                }\n              },\n              \"exclusionType\": \"{{oneOf (array 'EXCLUSION_TYPE_UNSPECIFIED' 'EXCLUSION_TYPE_EXCLUDE')}}\",\n              \"infoType\": {\n                \"name\": \"\",\n                \"version\": \"\"\n              },\n              \"likelihood\": \"{{oneOf (array 'LIKELIHOOD_UNSPECIFIED' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n              \"regex\": {\n                \"groupIndexes\": [\n                  {{faker 'random.number'}}\n                ],\n                \"pattern\": \"\"\n              },\n              \"storedType\": {\n                \"createTime\": \"\",\n                \"name\": \"\"\n              },\n              \"surrogateType\": {}\n            }\n          ],\n          \"excludeInfoTypes\": {{faker 'random.boolean'}},\n          \"includeQuote\": {{faker 'random.boolean'}},\n          \"infoTypes\": [\n            {\n              \"name\": \"\",\n              \"version\": \"\"\n            }\n          ],\n          \"limits\": {\n            \"maxFindingsPerInfoType\": [\n              {\n                \"infoType\": {\n                  \"name\": \"\",\n                  \"version\": \"\"\n                },\n                \"maxFindings\": {{faker 'random.number'}}\n              }\n            ],\n            \"maxFindingsPerItem\": {{faker 'random.number'}},\n            \"maxFindingsPerRequest\": {{faker 'random.number'}}\n          },\n          \"minLikelihood\": \"{{oneOf (array 'LIKELIHOOD_UNSPECIFIED' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n          \"ruleSet\": [\n            {\n              \"infoTypes\": [\n                {\n                  \"name\": \"\",\n                  \"version\": \"\"\n                }\n              ],\n              \"rules\": [\n                {\n                  \"exclusionRule\": {\n                    \"dictionary\": {\n                      \"cloudStoragePath\": {\n                        \"path\": \"\"\n                      },\n                      \"wordList\": {\n                        \"words\": [\n                          \"\"\n                        ]\n                      }\n                    },\n                    \"excludeInfoTypes\": {\n                      \"infoTypes\": [\n                        {\n                          \"name\": \"\",\n                          \"version\": \"\"\n                        }\n                      ]\n                    },\n                    \"matchingType\": \"{{oneOf (array 'MATCHING_TYPE_UNSPECIFIED' 'MATCHING_TYPE_FULL_MATCH' 'MATCHING_TYPE_PARTIAL_MATCH' 'MATCHING_TYPE_INVERSE_MATCH')}}\",\n                    \"regex\": {\n                      \"groupIndexes\": [\n                        {{faker 'random.number'}}\n                      ],\n                      \"pattern\": \"\"\n                    }\n                  },\n                  \"hotwordRule\": {\n                    \"hotwordRegex\": {\n                      \"groupIndexes\": [\n                        {{faker 'random.number'}}\n                      ],\n                      \"pattern\": \"\"\n                    },\n                    \"likelihoodAdjustment\": {\n                      \"fixedLikelihood\": \"{{oneOf (array 'LIKELIHOOD_UNSPECIFIED' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n                      \"relativeLikelihood\": {{faker 'random.number'}}\n                    },\n                    \"proximity\": {\n                      \"windowAfter\": {{faker 'random.number'}},\n                      \"windowBefore\": {{faker 'random.number'}}\n                    }\n                  }\n                }\n              ]\n            }\n          ]\n        },\n        \"name\": \"\",\n        \"updateTime\": \"\"\n      }\n    },\n    \"result\": {\n      \"hybridStats\": {\n        \"abortedCount\": \"\",\n        \"pendingCount\": \"\",\n        \"processedCount\": \"\"\n      },\n      \"infoTypeStats\": [\n        {\n          \"count\": \"\",\n          \"infoType\": {\n            \"name\": \"\",\n            \"version\": \"\"\n          }\n        }\n      ],\n      \"processedBytes\": \"\",\n      \"totalEstimatedBytes\": \"\"\n    }\n  },\n  \"jobTriggerName\": \"\",\n  \"name\": \"\",\n  \"riskDetails\": {\n    \"categoricalStatsResult\": {\n      \"valueFrequencyHistogramBuckets\": [\n        {\n          \"bucketSize\": \"\",\n          \"bucketValueCount\": \"\",\n          \"bucketValues\": [\n            {\n              \"count\": \"\",\n              \"value\": {\n                \"booleanValue\": {{faker 'random.boolean'}},\n                \"dateValue\": {\n                  \"day\": {{faker 'random.number'}},\n                  \"month\": {{faker 'random.number'}},\n                  \"year\": {{faker 'random.number'}}\n                },\n                \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                \"floatValue\": {{faker 'random.float'}},\n                \"integerValue\": \"\",\n                \"stringValue\": \"\",\n                \"timeValue\": {\n                  \"hours\": {{faker 'random.number'}},\n                  \"minutes\": {{faker 'random.number'}},\n                  \"nanos\": {{faker 'random.number'}},\n                  \"seconds\": {{faker 'random.number'}}\n                },\n                \"timestampValue\": \"\"\n              }\n            }\n          ],\n          \"valueFrequencyLowerBound\": \"\",\n          \"valueFrequencyUpperBound\": \"\"\n        }\n      ]\n    },\n    \"deltaPresenceEstimationResult\": {\n      \"deltaPresenceEstimationHistogram\": [\n        {\n          \"bucketSize\": \"\",\n          \"bucketValueCount\": \"\",\n          \"bucketValues\": [\n            {\n              \"estimatedProbability\": {{faker 'random.float'}},\n              \"quasiIdsValues\": [\n                {\n                  \"booleanValue\": {{faker 'random.boolean'}},\n                  \"dateValue\": {\n                    \"day\": {{faker 'random.number'}},\n                    \"month\": {{faker 'random.number'}},\n                    \"year\": {{faker 'random.number'}}\n                  },\n                  \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                  \"floatValue\": {{faker 'random.float'}},\n                  \"integerValue\": \"\",\n                  \"stringValue\": \"\",\n                  \"timeValue\": {\n                    \"hours\": {{faker 'random.number'}},\n                    \"minutes\": {{faker 'random.number'}},\n                    \"nanos\": {{faker 'random.number'}},\n                    \"seconds\": {{faker 'random.number'}}\n                  },\n                  \"timestampValue\": \"\"\n                }\n              ]\n            }\n          ],\n          \"maxProbability\": {{faker 'random.float'}},\n          \"minProbability\": {{faker 'random.float'}}\n        }\n      ]\n    },\n    \"kAnonymityResult\": {\n      \"equivalenceClassHistogramBuckets\": [\n        {\n          \"bucketSize\": \"\",\n          \"bucketValueCount\": \"\",\n          \"bucketValues\": [\n            {\n              \"equivalenceClassSize\": \"\",\n              \"quasiIdsValues\": [\n                {\n                  \"booleanValue\": {{faker 'random.boolean'}},\n                  \"dateValue\": {\n                    \"day\": {{faker 'random.number'}},\n                    \"month\": {{faker 'random.number'}},\n                    \"year\": {{faker 'random.number'}}\n                  },\n                  \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                  \"floatValue\": {{faker 'random.float'}},\n                  \"integerValue\": \"\",\n                  \"stringValue\": \"\",\n                  \"timeValue\": {\n                    \"hours\": {{faker 'random.number'}},\n                    \"minutes\": {{faker 'random.number'}},\n                    \"nanos\": {{faker 'random.number'}},\n                    \"seconds\": {{faker 'random.number'}}\n                  },\n                  \"timestampValue\": \"\"\n                }\n              ]\n            }\n          ],\n          \"equivalenceClassSizeLowerBound\": \"\",\n          \"equivalenceClassSizeUpperBound\": \"\"\n        }\n      ]\n    },\n    \"kMapEstimationResult\": {\n      \"kMapEstimationHistogram\": [\n        {\n          \"bucketSize\": \"\",\n          \"bucketValueCount\": \"\",\n          \"bucketValues\": [\n            {\n              \"estimatedAnonymity\": \"\",\n              \"quasiIdsValues\": [\n                {\n                  \"booleanValue\": {{faker 'random.boolean'}},\n                  \"dateValue\": {\n                    \"day\": {{faker 'random.number'}},\n                    \"month\": {{faker 'random.number'}},\n                    \"year\": {{faker 'random.number'}}\n                  },\n                  \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                  \"floatValue\": {{faker 'random.float'}},\n                  \"integerValue\": \"\",\n                  \"stringValue\": \"\",\n                  \"timeValue\": {\n                    \"hours\": {{faker 'random.number'}},\n                    \"minutes\": {{faker 'random.number'}},\n                    \"nanos\": {{faker 'random.number'}},\n                    \"seconds\": {{faker 'random.number'}}\n                  },\n                  \"timestampValue\": \"\"\n                }\n              ]\n            }\n          ],\n          \"maxAnonymity\": \"\",\n          \"minAnonymity\": \"\"\n        }\n      ]\n    },\n    \"lDiversityResult\": {\n      \"sensitiveValueFrequencyHistogramBuckets\": [\n        {\n          \"bucketSize\": \"\",\n          \"bucketValueCount\": \"\",\n          \"bucketValues\": [\n            {\n              \"equivalenceClassSize\": \"\",\n              \"numDistinctSensitiveValues\": \"\",\n              \"quasiIdsValues\": [\n                {\n                  \"booleanValue\": {{faker 'random.boolean'}},\n                  \"dateValue\": {\n                    \"day\": {{faker 'random.number'}},\n                    \"month\": {{faker 'random.number'}},\n                    \"year\": {{faker 'random.number'}}\n                  },\n                  \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                  \"floatValue\": {{faker 'random.float'}},\n                  \"integerValue\": \"\",\n                  \"stringValue\": \"\",\n                  \"timeValue\": {\n                    \"hours\": {{faker 'random.number'}},\n                    \"minutes\": {{faker 'random.number'}},\n                    \"nanos\": {{faker 'random.number'}},\n                    \"seconds\": {{faker 'random.number'}}\n                  },\n                  \"timestampValue\": \"\"\n                }\n              ],\n              \"topSensitiveValues\": [\n                {\n                  \"count\": \"\",\n                  \"value\": {\n                    \"booleanValue\": {{faker 'random.boolean'}},\n                    \"dateValue\": {\n                      \"day\": {{faker 'random.number'}},\n                      \"month\": {{faker 'random.number'}},\n                      \"year\": {{faker 'random.number'}}\n                    },\n                    \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n                    \"floatValue\": {{faker 'random.float'}},\n                    \"integerValue\": \"\",\n                    \"stringValue\": \"\",\n                    \"timeValue\": {\n                      \"hours\": {{faker 'random.number'}},\n                      \"minutes\": {{faker 'random.number'}},\n                      \"nanos\": {{faker 'random.number'}},\n                      \"seconds\": {{faker 'random.number'}}\n                    },\n                    \"timestampValue\": \"\"\n                  }\n                }\n              ]\n            }\n          ],\n          \"sensitiveValueFrequencyLowerBound\": \"\",\n          \"sensitiveValueFrequencyUpperBound\": \"\"\n        }\n      ]\n    },\n    \"numericalStatsResult\": {\n      \"maxValue\": {\n        \"booleanValue\": {{faker 'random.boolean'}},\n        \"dateValue\": {\n          \"day\": {{faker 'random.number'}},\n          \"month\": {{faker 'random.number'}},\n          \"year\": {{faker 'random.number'}}\n        },\n        \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n        \"floatValue\": {{faker 'random.float'}},\n        \"integerValue\": \"\",\n        \"stringValue\": \"\",\n        \"timeValue\": {\n          \"hours\": {{faker 'random.number'}},\n          \"minutes\": {{faker 'random.number'}},\n          \"nanos\": {{faker 'random.number'}},\n          \"seconds\": {{faker 'random.number'}}\n        },\n        \"timestampValue\": \"\"\n      },\n      \"minValue\": {\n        \"booleanValue\": {{faker 'random.boolean'}},\n        \"dateValue\": {\n          \"day\": {{faker 'random.number'}},\n          \"month\": {{faker 'random.number'}},\n          \"year\": {{faker 'random.number'}}\n        },\n        \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n        \"floatValue\": {{faker 'random.float'}},\n        \"integerValue\": \"\",\n        \"stringValue\": \"\",\n        \"timeValue\": {\n          \"hours\": {{faker 'random.number'}},\n          \"minutes\": {{faker 'random.number'}},\n          \"nanos\": {{faker 'random.number'}},\n          \"seconds\": {{faker 'random.number'}}\n        },\n        \"timestampValue\": \"\"\n      },\n      \"quantileValues\": [\n        {\n          \"booleanValue\": {{faker 'random.boolean'}},\n          \"dateValue\": {\n            \"day\": {{faker 'random.number'}},\n            \"month\": {{faker 'random.number'}},\n            \"year\": {{faker 'random.number'}}\n          },\n          \"dayOfWeekValue\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n          \"floatValue\": {{faker 'random.float'}},\n          \"integerValue\": \"\",\n          \"stringValue\": \"\",\n          \"timeValue\": {\n            \"hours\": {{faker 'random.number'}},\n            \"minutes\": {{faker 'random.number'}},\n            \"nanos\": {{faker 'random.number'}},\n            \"seconds\": {{faker 'random.number'}}\n          },\n          \"timestampValue\": \"\"\n        }\n      ]\n    },\n    \"requestedOptions\": {\n      \"jobConfig\": {\n        \"actions\": [\n          {\n            \"jobNotificationEmails\": {},\n            \"pubSub\": {\n              \"topic\": \"\"\n            },\n            \"publishFindingsToCloudDataCatalog\": {},\n            \"publishSummaryToCscc\": {},\n            \"publishToStackdriver\": {},\n            \"saveFindings\": {\n              \"outputConfig\": {\n                \"outputSchema\": \"{{oneOf (array 'OUTPUT_SCHEMA_UNSPECIFIED' 'BASIC_COLUMNS' 'GCS_COLUMNS' 'DATASTORE_COLUMNS' 'BIG_QUERY_COLUMNS' 'ALL_COLUMNS')}}\",\n                \"table\": {\n                  \"datasetId\": \"\",\n                  \"projectId\": \"\",\n                  \"tableId\": \"\"\n                }\n              }\n            }\n          }\n        ],\n        \"privacyMetric\": {\n          \"categoricalStatsConfig\": {\n            \"field\": {\n              \"name\": \"\"\n            }\n          },\n          \"deltaPresenceEstimationConfig\": {\n            \"auxiliaryTables\": [\n              {\n                \"quasiIds\": [\n                  {\n                    \"customTag\": \"\",\n                    \"field\": {\n                      \"name\": \"\"\n                    }\n                  }\n                ],\n                \"relativeFrequency\": {\n                  \"name\": \"\"\n                },\n                \"table\": {\n                  \"datasetId\": \"\",\n                  \"projectId\": \"\",\n                  \"tableId\": \"\"\n                }\n              }\n            ],\n            \"quasiIds\": [\n              {\n                \"customTag\": \"\",\n                \"field\": {\n                  \"name\": \"\"\n                },\n                \"inferred\": {},\n                \"infoType\": {\n                  \"name\": \"\",\n                  \"version\": \"\"\n                }\n              }\n            ],\n            \"regionCode\": \"\"\n          },\n          \"kAnonymityConfig\": {\n            \"entityId\": {\n              \"field\": {\n                \"name\": \"\"\n              }\n            },\n            \"quasiIds\": [\n              {\n                \"name\": \"\"\n              }\n            ]\n          },\n          \"kMapEstimationConfig\": {\n            \"auxiliaryTables\": [\n              {\n                \"quasiIds\": [\n                  {\n                    \"customTag\": \"\",\n                    \"field\": {\n                      \"name\": \"\"\n                    }\n                  }\n                ],\n                \"relativeFrequency\": {\n                  \"name\": \"\"\n                },\n                \"table\": {\n                  \"datasetId\": \"\",\n                  \"projectId\": \"\",\n                  \"tableId\": \"\"\n                }\n              }\n            ],\n            \"quasiIds\": [\n              {\n                \"customTag\": \"\",\n                \"field\": {\n                  \"name\": \"\"\n                },\n                \"inferred\": {},\n                \"infoType\": {\n                  \"name\": \"\",\n                  \"version\": \"\"\n                }\n              }\n            ],\n            \"regionCode\": \"\"\n          },\n          \"lDiversityConfig\": {\n            \"quasiIds\": [\n              {\n                \"name\": \"\"\n              }\n            ],\n            \"sensitiveAttribute\": {\n              \"name\": \"\"\n            }\n          },\n          \"numericalStatsConfig\": {\n            \"field\": {\n              \"name\": \"\"\n            }\n          }\n        },\n        \"sourceTable\": {\n          \"datasetId\": \"\",\n          \"projectId\": \"\",\n          \"tableId\": \"\"\n        }\n      }\n    },\n    \"requestedPrivacyMetric\": {\n      \"categoricalStatsConfig\": {\n        \"field\": {\n          \"name\": \"\"\n        }\n      },\n      \"deltaPresenceEstimationConfig\": {\n        \"auxiliaryTables\": [\n          {\n            \"quasiIds\": [\n              {\n                \"customTag\": \"\",\n                \"field\": {\n                  \"name\": \"\"\n                }\n              }\n            ],\n            \"relativeFrequency\": {\n              \"name\": \"\"\n            },\n            \"table\": {\n              \"datasetId\": \"\",\n              \"projectId\": \"\",\n              \"tableId\": \"\"\n            }\n          }\n        ],\n        \"quasiIds\": [\n          {\n            \"customTag\": \"\",\n            \"field\": {\n              \"name\": \"\"\n            },\n            \"inferred\": {},\n            \"infoType\": {\n              \"name\": \"\",\n              \"version\": \"\"\n            }\n          }\n        ],\n        \"regionCode\": \"\"\n      },\n      \"kAnonymityConfig\": {\n        \"entityId\": {\n          \"field\": {\n            \"name\": \"\"\n          }\n        },\n        \"quasiIds\": [\n          {\n            \"name\": \"\"\n          }\n        ]\n      },\n      \"kMapEstimationConfig\": {\n        \"auxiliaryTables\": [\n          {\n            \"quasiIds\": [\n              {\n                \"customTag\": \"\",\n                \"field\": {\n                  \"name\": \"\"\n                }\n              }\n            ],\n            \"relativeFrequency\": {\n              \"name\": \"\"\n            },\n            \"table\": {\n              \"datasetId\": \"\",\n              \"projectId\": \"\",\n              \"tableId\": \"\"\n            }\n          }\n        ],\n        \"quasiIds\": [\n          {\n            \"customTag\": \"\",\n            \"field\": {\n              \"name\": \"\"\n            },\n            \"inferred\": {},\n            \"infoType\": {\n              \"name\": \"\",\n              \"version\": \"\"\n            }\n          }\n        ],\n        \"regionCode\": \"\"\n      },\n      \"lDiversityConfig\": {\n        \"quasiIds\": [\n          {\n            \"name\": \"\"\n          }\n        ],\n        \"sensitiveAttribute\": {\n          \"name\": \"\"\n        }\n      },\n      \"numericalStatsConfig\": {\n        \"field\": {\n          \"name\": \"\"\n        }\n      }\n    },\n    \"requestedSourceTable\": {\n      \"datasetId\": \"\",\n      \"projectId\": \"\",\n      \"tableId\": \"\"\n    }\n  },\n  \"startTime\": \"\",\n  \"state\": \"{{oneOf (array 'JOB_STATE_UNSPECIFIED' 'PENDING' 'RUNNING' 'DONE' 'CANCELED' 'FAILED' 'ACTIVE')}}\",\n  \"type\": \"{{oneOf (array 'DLP_JOB_TYPE_UNSPECIFIED' 'INSPECT_JOB' 'RISK_ANALYSIS_JOB')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5664fc19-e60d-4900-b789-b378520cb42b",
      "documentation": "Redacts potentially sensitive info from an image. This method has limits on input size, processing time, and output size. See https://cloud.google.com/dlp/docs/redacting-sensitive-data-images to learn more. When no InfoTypes or CustomInfoTypes are specified in this request, the system will automatically choose what detectors to run. By default this may be all types, but may change over time as detectors are updated.",
      "method": "post",
      "endpoint": "v2/:parent/image:redact",
      "responses": [
        {
          "uuid": "dc12f652-b31c-4a4a-a7d2-0b17434639e7",
          "body": "{\n  \"extractedText\": \"\",\n  \"inspectResult\": {\n    \"findings\": [\n      {\n        \"createTime\": \"\",\n        \"findingId\": \"\",\n        \"infoType\": {\n          \"name\": \"\",\n          \"version\": \"\"\n        },\n        \"jobCreateTime\": \"\",\n        \"jobName\": \"\",\n        \"labels\": {},\n        \"likelihood\": \"{{oneOf (array 'LIKELIHOOD_UNSPECIFIED' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n        \"location\": {\n          \"byteRange\": {\n            \"end\": \"\",\n            \"start\": \"\"\n          },\n          \"codepointRange\": {\n            \"end\": \"\",\n            \"start\": \"\"\n          },\n          \"container\": {\n            \"fullPath\": \"\",\n            \"projectId\": \"\",\n            \"relativePath\": \"\",\n            \"rootPath\": \"\",\n            \"type\": \"\",\n            \"updateTime\": \"\",\n            \"version\": \"\"\n          },\n          \"contentLocations\": [\n            {\n              \"containerName\": \"\",\n              \"containerTimestamp\": \"\",\n              \"containerVersion\": \"\",\n              \"documentLocation\": {\n                \"fileOffset\": \"\"\n              },\n              \"imageLocation\": {\n                \"boundingBoxes\": [\n                  {\n                    \"height\": {{faker 'random.number'}},\n                    \"left\": {{faker 'random.number'}},\n                    \"top\": {{faker 'random.number'}},\n                    \"width\": {{faker 'random.number'}}\n                  }\n                ]\n              },\n              \"metadataLocation\": {\n                \"storageLabel\": {\n                  \"key\": \"\"\n                },\n                \"type\": \"{{oneOf (array 'METADATATYPE_UNSPECIFIED' 'STORAGE_METADATA')}}\"\n              },\n              \"recordLocation\": {\n                \"fieldId\": {\n                  \"name\": \"\"\n                },\n                \"recordKey\": {\n                  \"bigQueryKey\": {\n                    \"rowNumber\": \"\",\n                    \"tableReference\": {\n                      \"datasetId\": \"\",\n                      \"projectId\": \"\",\n                      \"tableId\": \"\"\n                    }\n                  },\n                  \"datastoreKey\": {\n                    \"entityKey\": {\n                      \"partitionId\": {\n                        \"namespaceId\": \"\",\n                        \"projectId\": \"\"\n                      },\n                      \"path\": [\n                        {\n                          \"id\": \"\",\n                          \"kind\": \"\",\n                          \"name\": \"\"\n                        }\n                      ]\n                    }\n                  },\n                  \"idValues\": [\n                    \"\"\n                  ]\n                },\n                \"tableLocation\": {\n                  \"rowIndex\": \"\"\n                }\n              }\n            }\n          ]\n        },\n        \"name\": \"\",\n        \"quote\": \"\",\n        \"quoteInfo\": {\n          \"dateTime\": {\n            \"date\": {\n              \"day\": {{faker 'random.number'}},\n              \"month\": {{faker 'random.number'}},\n              \"year\": {{faker 'random.number'}}\n            },\n            \"dayOfWeek\": \"{{oneOf (array 'DAY_OF_WEEK_UNSPECIFIED' 'MONDAY' 'TUESDAY' 'WEDNESDAY' 'THURSDAY' 'FRIDAY' 'SATURDAY' 'SUNDAY')}}\",\n            \"time\": {\n              \"hours\": {{faker 'random.number'}},\n              \"minutes\": {{faker 'random.number'}},\n              \"nanos\": {{faker 'random.number'}},\n              \"seconds\": {{faker 'random.number'}}\n            },\n            \"timeZone\": {\n              \"offsetMinutes\": {{faker 'random.number'}}\n            }\n          }\n        },\n        \"resourceName\": \"\",\n        \"triggerName\": \"\"\n      }\n    ],\n    \"findingsTruncated\": {{faker 'random.boolean'}}\n  },\n  \"redactedImage\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "68bde998-b18c-43d5-b3a2-6faace687d5e",
      "documentation": "Returns a list of the sensitive information types that the DLP API supports. See https://cloud.google.com/dlp/docs/infotypes-reference to learn more.",
      "method": "get",
      "endpoint": "v2/:parent/infoTypes",
      "responses": [
        {
          "uuid": "7570c3ca-a7bf-4c94-8b38-42be904c8443",
          "body": "{\n  \"infoTypes\": [\n    {\n      \"description\": \"\",\n      \"displayName\": \"\",\n      \"name\": \"\",\n      \"supportedBy\": [\n        \"{{oneOf (array 'ENUM_TYPE_UNSPECIFIED' 'INSPECT' 'RISK_ANALYSIS')}}\"\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2d3c7595-fb32-46e3-88ab-d6028148ee60",
      "documentation": "Lists InspectTemplates. See https://cloud.google.com/dlp/docs/creating-templates to learn more.",
      "method": "get",
      "endpoint": "v2/:parent/inspectTemplates",
      "responses": [
        {
          "uuid": "20e2e4f4-c4b8-46c6-8f5c-a4062c7c07d8",
          "body": "{\n  \"inspectTemplates\": [\n    {\n      \"createTime\": \"\",\n      \"description\": \"\",\n      \"displayName\": \"\",\n      \"inspectConfig\": {\n        \"contentOptions\": [\n          \"{{oneOf (array 'CONTENT_UNSPECIFIED' 'CONTENT_TEXT' 'CONTENT_IMAGE')}}\"\n        ],\n        \"customInfoTypes\": [\n          {\n            \"detectionRules\": [\n              {\n                \"hotwordRule\": {\n                  \"hotwordRegex\": {\n                    \"groupIndexes\": [\n                      {{faker 'random.number'}}\n                    ],\n                    \"pattern\": \"\"\n                  },\n                  \"likelihoodAdjustment\": {\n                    \"fixedLikelihood\": \"{{oneOf (array 'LIKELIHOOD_UNSPECIFIED' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n                    \"relativeLikelihood\": {{faker 'random.number'}}\n                  },\n                  \"proximity\": {\n                    \"windowAfter\": {{faker 'random.number'}},\n                    \"windowBefore\": {{faker 'random.number'}}\n                  }\n                }\n              }\n            ],\n            \"dictionary\": {\n              \"cloudStoragePath\": {\n                \"path\": \"\"\n              },\n              \"wordList\": {\n                \"words\": [\n                  \"\"\n                ]\n              }\n            },\n            \"exclusionType\": \"{{oneOf (array 'EXCLUSION_TYPE_UNSPECIFIED' 'EXCLUSION_TYPE_EXCLUDE')}}\",\n            \"infoType\": {\n              \"name\": \"\",\n              \"version\": \"\"\n            },\n            \"likelihood\": \"{{oneOf (array 'LIKELIHOOD_UNSPECIFIED' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n            \"regex\": {\n              \"groupIndexes\": [\n                {{faker 'random.number'}}\n              ],\n              \"pattern\": \"\"\n            },\n            \"storedType\": {\n              \"createTime\": \"\",\n              \"name\": \"\"\n            },\n            \"surrogateType\": {}\n          }\n        ],\n        \"excludeInfoTypes\": {{faker 'random.boolean'}},\n        \"includeQuote\": {{faker 'random.boolean'}},\n        \"infoTypes\": [\n          {\n            \"name\": \"\",\n            \"version\": \"\"\n          }\n        ],\n        \"limits\": {\n          \"maxFindingsPerInfoType\": [\n            {\n              \"infoType\": {\n                \"name\": \"\",\n                \"version\": \"\"\n              },\n              \"maxFindings\": {{faker 'random.number'}}\n            }\n          ],\n          \"maxFindingsPerItem\": {{faker 'random.number'}},\n          \"maxFindingsPerRequest\": {{faker 'random.number'}}\n        },\n        \"minLikelihood\": \"{{oneOf (array 'LIKELIHOOD_UNSPECIFIED' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n        \"ruleSet\": [\n          {\n            \"infoTypes\": [\n              {\n                \"name\": \"\",\n                \"version\": \"\"\n              }\n            ],\n            \"rules\": [\n              {\n                \"exclusionRule\": {\n                  \"dictionary\": {\n                    \"cloudStoragePath\": {\n                      \"path\": \"\"\n                    },\n                    \"wordList\": {\n                      \"words\": [\n                        \"\"\n                      ]\n                    }\n                  },\n                  \"excludeInfoTypes\": {\n                    \"infoTypes\": [\n                      {\n                        \"name\": \"\",\n                        \"version\": \"\"\n                      }\n                    ]\n                  },\n                  \"matchingType\": \"{{oneOf (array 'MATCHING_TYPE_UNSPECIFIED' 'MATCHING_TYPE_FULL_MATCH' 'MATCHING_TYPE_PARTIAL_MATCH' 'MATCHING_TYPE_INVERSE_MATCH')}}\",\n                  \"regex\": {\n                    \"groupIndexes\": [\n                      {{faker 'random.number'}}\n                    ],\n                    \"pattern\": \"\"\n                  }\n                },\n                \"hotwordRule\": {\n                  \"hotwordRegex\": {\n                    \"groupIndexes\": [\n                      {{faker 'random.number'}}\n                    ],\n                    \"pattern\": \"\"\n                  },\n                  \"likelihoodAdjustment\": {\n                    \"fixedLikelihood\": \"{{oneOf (array 'LIKELIHOOD_UNSPECIFIED' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n                    \"relativeLikelihood\": {{faker 'random.number'}}\n                  },\n                  \"proximity\": {\n                    \"windowAfter\": {{faker 'random.number'}},\n                    \"windowBefore\": {{faker 'random.number'}}\n                  }\n                }\n              }\n            ]\n          }\n        ]\n      },\n      \"name\": \"\",\n      \"updateTime\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5d3727cf-a94a-4ea5-bdf4-e087dad32546",
      "documentation": "Creates an InspectTemplate for re-using frequently used configuration for inspecting content, images, and storage. See https://cloud.google.com/dlp/docs/creating-templates to learn more.",
      "method": "post",
      "endpoint": "v2/:parent/inspectTemplates",
      "responses": [
        {
          "uuid": "9054f38c-45d9-4da9-a4b3-a5aadc6e8286",
          "body": "{\n  \"createTime\": \"\",\n  \"description\": \"\",\n  \"displayName\": \"\",\n  \"inspectConfig\": {\n    \"contentOptions\": [\n      \"{{oneOf (array 'CONTENT_UNSPECIFIED' 'CONTENT_TEXT' 'CONTENT_IMAGE')}}\"\n    ],\n    \"customInfoTypes\": [\n      {\n        \"detectionRules\": [\n          {\n            \"hotwordRule\": {\n              \"hotwordRegex\": {\n                \"groupIndexes\": [\n                  {{faker 'random.number'}}\n                ],\n                \"pattern\": \"\"\n              },\n              \"likelihoodAdjustment\": {\n                \"fixedLikelihood\": \"{{oneOf (array 'LIKELIHOOD_UNSPECIFIED' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n                \"relativeLikelihood\": {{faker 'random.number'}}\n              },\n              \"proximity\": {\n                \"windowAfter\": {{faker 'random.number'}},\n                \"windowBefore\": {{faker 'random.number'}}\n              }\n            }\n          }\n        ],\n        \"dictionary\": {\n          \"cloudStoragePath\": {\n            \"path\": \"\"\n          },\n          \"wordList\": {\n            \"words\": [\n              \"\"\n            ]\n          }\n        },\n        \"exclusionType\": \"{{oneOf (array 'EXCLUSION_TYPE_UNSPECIFIED' 'EXCLUSION_TYPE_EXCLUDE')}}\",\n        \"infoType\": {\n          \"name\": \"\",\n          \"version\": \"\"\n        },\n        \"likelihood\": \"{{oneOf (array 'LIKELIHOOD_UNSPECIFIED' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n        \"regex\": {\n          \"groupIndexes\": [\n            {{faker 'random.number'}}\n          ],\n          \"pattern\": \"\"\n        },\n        \"storedType\": {\n          \"createTime\": \"\",\n          \"name\": \"\"\n        },\n        \"surrogateType\": {}\n      }\n    ],\n    \"excludeInfoTypes\": {{faker 'random.boolean'}},\n    \"includeQuote\": {{faker 'random.boolean'}},\n    \"infoTypes\": [\n      {\n        \"name\": \"\",\n        \"version\": \"\"\n      }\n    ],\n    \"limits\": {\n      \"maxFindingsPerInfoType\": [\n        {\n          \"infoType\": {\n            \"name\": \"\",\n            \"version\": \"\"\n          },\n          \"maxFindings\": {{faker 'random.number'}}\n        }\n      ],\n      \"maxFindingsPerItem\": {{faker 'random.number'}},\n      \"maxFindingsPerRequest\": {{faker 'random.number'}}\n    },\n    \"minLikelihood\": \"{{oneOf (array 'LIKELIHOOD_UNSPECIFIED' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n    \"ruleSet\": [\n      {\n        \"infoTypes\": [\n          {\n            \"name\": \"\",\n            \"version\": \"\"\n          }\n        ],\n        \"rules\": [\n          {\n            \"exclusionRule\": {\n              \"dictionary\": {\n                \"cloudStoragePath\": {\n                  \"path\": \"\"\n                },\n                \"wordList\": {\n                  \"words\": [\n                    \"\"\n                  ]\n                }\n              },\n              \"excludeInfoTypes\": {\n                \"infoTypes\": [\n                  {\n                    \"name\": \"\",\n                    \"version\": \"\"\n                  }\n                ]\n              },\n              \"matchingType\": \"{{oneOf (array 'MATCHING_TYPE_UNSPECIFIED' 'MATCHING_TYPE_FULL_MATCH' 'MATCHING_TYPE_PARTIAL_MATCH' 'MATCHING_TYPE_INVERSE_MATCH')}}\",\n              \"regex\": {\n                \"groupIndexes\": [\n                  {{faker 'random.number'}}\n                ],\n                \"pattern\": \"\"\n              }\n            },\n            \"hotwordRule\": {\n              \"hotwordRegex\": {\n                \"groupIndexes\": [\n                  {{faker 'random.number'}}\n                ],\n                \"pattern\": \"\"\n              },\n              \"likelihoodAdjustment\": {\n                \"fixedLikelihood\": \"{{oneOf (array 'LIKELIHOOD_UNSPECIFIED' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n                \"relativeLikelihood\": {{faker 'random.number'}}\n              },\n              \"proximity\": {\n                \"windowAfter\": {{faker 'random.number'}},\n                \"windowBefore\": {{faker 'random.number'}}\n              }\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"name\": \"\",\n  \"updateTime\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dac20fbb-8278-4af2-9f0f-678ad4b7a879",
      "documentation": "Lists job triggers. See https://cloud.google.com/dlp/docs/creating-job-triggers to learn more.",
      "method": "get",
      "endpoint": "v2/:parent/jobTriggers",
      "responses": [
        {
          "uuid": "3367dd07-6fb2-48d6-b388-80e846b7dce4",
          "body": "{\n  \"jobTriggers\": [\n    {\n      \"createTime\": \"\",\n      \"description\": \"\",\n      \"displayName\": \"\",\n      \"errors\": [\n        {\n          \"details\": {\n            \"code\": {{faker 'random.number'}},\n            \"details\": [\n              {}\n            ],\n            \"message\": \"\"\n          },\n          \"timestamps\": [\n            \"\"\n          ]\n        }\n      ],\n      \"inspectJob\": {\n        \"actions\": [\n          {\n            \"jobNotificationEmails\": {},\n            \"pubSub\": {\n              \"topic\": \"\"\n            },\n            \"publishFindingsToCloudDataCatalog\": {},\n            \"publishSummaryToCscc\": {},\n            \"publishToStackdriver\": {},\n            \"saveFindings\": {\n              \"outputConfig\": {\n                \"outputSchema\": \"{{oneOf (array 'OUTPUT_SCHEMA_UNSPECIFIED' 'BASIC_COLUMNS' 'GCS_COLUMNS' 'DATASTORE_COLUMNS' 'BIG_QUERY_COLUMNS' 'ALL_COLUMNS')}}\",\n                \"table\": {\n                  \"datasetId\": \"\",\n                  \"projectId\": \"\",\n                  \"tableId\": \"\"\n                }\n              }\n            }\n          }\n        ],\n        \"inspectConfig\": {\n          \"contentOptions\": [\n            \"{{oneOf (array 'CONTENT_UNSPECIFIED' 'CONTENT_TEXT' 'CONTENT_IMAGE')}}\"\n          ],\n          \"customInfoTypes\": [\n            {\n              \"detectionRules\": [\n                {\n                  \"hotwordRule\": {\n                    \"hotwordRegex\": {\n                      \"groupIndexes\": [\n                        {{faker 'random.number'}}\n                      ],\n                      \"pattern\": \"\"\n                    },\n                    \"likelihoodAdjustment\": {\n                      \"fixedLikelihood\": \"{{oneOf (array 'LIKELIHOOD_UNSPECIFIED' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n                      \"relativeLikelihood\": {{faker 'random.number'}}\n                    },\n                    \"proximity\": {\n                      \"windowAfter\": {{faker 'random.number'}},\n                      \"windowBefore\": {{faker 'random.number'}}\n                    }\n                  }\n                }\n              ],\n              \"dictionary\": {\n                \"cloudStoragePath\": {\n                  \"path\": \"\"\n                },\n                \"wordList\": {\n                  \"words\": [\n                    \"\"\n                  ]\n                }\n              },\n              \"exclusionType\": \"{{oneOf (array 'EXCLUSION_TYPE_UNSPECIFIED' 'EXCLUSION_TYPE_EXCLUDE')}}\",\n              \"infoType\": {\n                \"name\": \"\",\n                \"version\": \"\"\n              },\n              \"likelihood\": \"{{oneOf (array 'LIKELIHOOD_UNSPECIFIED' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n              \"regex\": {\n                \"groupIndexes\": [\n                  {{faker 'random.number'}}\n                ],\n                \"pattern\": \"\"\n              },\n              \"storedType\": {\n                \"createTime\": \"\",\n                \"name\": \"\"\n              },\n              \"surrogateType\": {}\n            }\n          ],\n          \"excludeInfoTypes\": {{faker 'random.boolean'}},\n          \"includeQuote\": {{faker 'random.boolean'}},\n          \"infoTypes\": [\n            {\n              \"name\": \"\",\n              \"version\": \"\"\n            }\n          ],\n          \"limits\": {\n            \"maxFindingsPerInfoType\": [\n              {\n                \"infoType\": {\n                  \"name\": \"\",\n                  \"version\": \"\"\n                },\n                \"maxFindings\": {{faker 'random.number'}}\n              }\n            ],\n            \"maxFindingsPerItem\": {{faker 'random.number'}},\n            \"maxFindingsPerRequest\": {{faker 'random.number'}}\n          },\n          \"minLikelihood\": \"{{oneOf (array 'LIKELIHOOD_UNSPECIFIED' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n          \"ruleSet\": [\n            {\n              \"infoTypes\": [\n                {\n                  \"name\": \"\",\n                  \"version\": \"\"\n                }\n              ],\n              \"rules\": [\n                {\n                  \"exclusionRule\": {\n                    \"dictionary\": {\n                      \"cloudStoragePath\": {\n                        \"path\": \"\"\n                      },\n                      \"wordList\": {\n                        \"words\": [\n                          \"\"\n                        ]\n                      }\n                    },\n                    \"excludeInfoTypes\": {\n                      \"infoTypes\": [\n                        {\n                          \"name\": \"\",\n                          \"version\": \"\"\n                        }\n                      ]\n                    },\n                    \"matchingType\": \"{{oneOf (array 'MATCHING_TYPE_UNSPECIFIED' 'MATCHING_TYPE_FULL_MATCH' 'MATCHING_TYPE_PARTIAL_MATCH' 'MATCHING_TYPE_INVERSE_MATCH')}}\",\n                    \"regex\": {\n                      \"groupIndexes\": [\n                        {{faker 'random.number'}}\n                      ],\n                      \"pattern\": \"\"\n                    }\n                  },\n                  \"hotwordRule\": {\n                    \"hotwordRegex\": {\n                      \"groupIndexes\": [\n                        {{faker 'random.number'}}\n                      ],\n                      \"pattern\": \"\"\n                    },\n                    \"likelihoodAdjustment\": {\n                      \"fixedLikelihood\": \"{{oneOf (array 'LIKELIHOOD_UNSPECIFIED' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n                      \"relativeLikelihood\": {{faker 'random.number'}}\n                    },\n                    \"proximity\": {\n                      \"windowAfter\": {{faker 'random.number'}},\n                      \"windowBefore\": {{faker 'random.number'}}\n                    }\n                  }\n                }\n              ]\n            }\n          ]\n        },\n        \"inspectTemplateName\": \"\",\n        \"storageConfig\": {\n          \"bigQueryOptions\": {\n            \"excludedFields\": [\n              {\n                \"name\": \"\"\n              }\n            ],\n            \"identifyingFields\": [\n              {\n                \"name\": \"\"\n              }\n            ],\n            \"includedFields\": [\n              {\n                \"name\": \"\"\n              }\n            ],\n            \"rowsLimit\": \"\",\n            \"rowsLimitPercent\": {{faker 'random.number'}},\n            \"sampleMethod\": \"{{oneOf (array 'SAMPLE_METHOD_UNSPECIFIED' 'TOP' 'RANDOM_START')}}\",\n            \"tableReference\": {\n              \"datasetId\": \"\",\n              \"projectId\": \"\",\n              \"tableId\": \"\"\n            }\n          },\n          \"cloudStorageOptions\": {\n            \"bytesLimitPerFile\": \"\",\n            \"bytesLimitPerFilePercent\": {{faker 'random.number'}},\n            \"fileSet\": {\n              \"regexFileSet\": {\n                \"bucketName\": \"\",\n                \"excludeRegex\": [\n                  \"\"\n                ],\n                \"includeRegex\": [\n                  \"\"\n                ]\n              },\n              \"url\": \"\"\n            },\n            \"fileTypes\": [\n              \"{{oneOf (array 'FILE_TYPE_UNSPECIFIED' 'BINARY_FILE' 'TEXT_FILE' 'IMAGE' 'WORD' 'PDF' 'AVRO' 'CSV' 'TSV' 'POWERPOINT' 'EXCEL')}}\"\n            ],\n            \"filesLimitPercent\": {{faker 'random.number'}},\n            \"sampleMethod\": \"{{oneOf (array 'SAMPLE_METHOD_UNSPECIFIED' 'TOP' 'RANDOM_START')}}\"\n          },\n          \"datastoreOptions\": {\n            \"kind\": {\n              \"name\": \"\"\n            },\n            \"partitionId\": {\n              \"namespaceId\": \"\",\n              \"projectId\": \"\"\n            }\n          },\n          \"hybridOptions\": {\n            \"description\": \"\",\n            \"labels\": {},\n            \"requiredFindingLabelKeys\": [\n              \"\"\n            ],\n            \"tableOptions\": {\n              \"identifyingFields\": [\n                {\n                  \"name\": \"\"\n                }\n              ]\n            }\n          },\n          \"timespanConfig\": {\n            \"enableAutoPopulationOfTimespanConfig\": {{faker 'random.boolean'}},\n            \"endTime\": \"\",\n            \"startTime\": \"\",\n            \"timestampField\": {\n              \"name\": \"\"\n            }\n          }\n        }\n      },\n      \"lastRunTime\": \"\",\n      \"name\": \"\",\n      \"status\": \"{{oneOf (array 'STATUS_UNSPECIFIED' 'HEALTHY' 'PAUSED' 'CANCELLED')}}\",\n      \"triggers\": [\n        {\n          \"manual\": {},\n          \"schedule\": {\n            \"recurrencePeriodDuration\": \"\"\n          }\n        }\n      ],\n      \"updateTime\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "17d91d39-5a82-419d-b977-637ef7dd68a8",
      "documentation": "Creates a job trigger to run DLP actions such as scanning storage for sensitive information on a set schedule. See https://cloud.google.com/dlp/docs/creating-job-triggers to learn more.",
      "method": "post",
      "endpoint": "v2/:parent/jobTriggers",
      "responses": [
        {
          "uuid": "ee792025-d5e9-4125-b83f-3b6c324e631b",
          "body": "{\n  \"createTime\": \"\",\n  \"description\": \"\",\n  \"displayName\": \"\",\n  \"errors\": [\n    {\n      \"details\": {\n        \"code\": {{faker 'random.number'}},\n        \"details\": [\n          {}\n        ],\n        \"message\": \"\"\n      },\n      \"timestamps\": [\n        \"\"\n      ]\n    }\n  ],\n  \"inspectJob\": {\n    \"actions\": [\n      {\n        \"jobNotificationEmails\": {},\n        \"pubSub\": {\n          \"topic\": \"\"\n        },\n        \"publishFindingsToCloudDataCatalog\": {},\n        \"publishSummaryToCscc\": {},\n        \"publishToStackdriver\": {},\n        \"saveFindings\": {\n          \"outputConfig\": {\n            \"outputSchema\": \"{{oneOf (array 'OUTPUT_SCHEMA_UNSPECIFIED' 'BASIC_COLUMNS' 'GCS_COLUMNS' 'DATASTORE_COLUMNS' 'BIG_QUERY_COLUMNS' 'ALL_COLUMNS')}}\",\n            \"table\": {\n              \"datasetId\": \"\",\n              \"projectId\": \"\",\n              \"tableId\": \"\"\n            }\n          }\n        }\n      }\n    ],\n    \"inspectConfig\": {\n      \"contentOptions\": [\n        \"{{oneOf (array 'CONTENT_UNSPECIFIED' 'CONTENT_TEXT' 'CONTENT_IMAGE')}}\"\n      ],\n      \"customInfoTypes\": [\n        {\n          \"detectionRules\": [\n            {\n              \"hotwordRule\": {\n                \"hotwordRegex\": {\n                  \"groupIndexes\": [\n                    {{faker 'random.number'}}\n                  ],\n                  \"pattern\": \"\"\n                },\n                \"likelihoodAdjustment\": {\n                  \"fixedLikelihood\": \"{{oneOf (array 'LIKELIHOOD_UNSPECIFIED' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n                  \"relativeLikelihood\": {{faker 'random.number'}}\n                },\n                \"proximity\": {\n                  \"windowAfter\": {{faker 'random.number'}},\n                  \"windowBefore\": {{faker 'random.number'}}\n                }\n              }\n            }\n          ],\n          \"dictionary\": {\n            \"cloudStoragePath\": {\n              \"path\": \"\"\n            },\n            \"wordList\": {\n              \"words\": [\n                \"\"\n              ]\n            }\n          },\n          \"exclusionType\": \"{{oneOf (array 'EXCLUSION_TYPE_UNSPECIFIED' 'EXCLUSION_TYPE_EXCLUDE')}}\",\n          \"infoType\": {\n            \"name\": \"\",\n            \"version\": \"\"\n          },\n          \"likelihood\": \"{{oneOf (array 'LIKELIHOOD_UNSPECIFIED' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n          \"regex\": {\n            \"groupIndexes\": [\n              {{faker 'random.number'}}\n            ],\n            \"pattern\": \"\"\n          },\n          \"storedType\": {\n            \"createTime\": \"\",\n            \"name\": \"\"\n          },\n          \"surrogateType\": {}\n        }\n      ],\n      \"excludeInfoTypes\": {{faker 'random.boolean'}},\n      \"includeQuote\": {{faker 'random.boolean'}},\n      \"infoTypes\": [\n        {\n          \"name\": \"\",\n          \"version\": \"\"\n        }\n      ],\n      \"limits\": {\n        \"maxFindingsPerInfoType\": [\n          {\n            \"infoType\": {\n              \"name\": \"\",\n              \"version\": \"\"\n            },\n            \"maxFindings\": {{faker 'random.number'}}\n          }\n        ],\n        \"maxFindingsPerItem\": {{faker 'random.number'}},\n        \"maxFindingsPerRequest\": {{faker 'random.number'}}\n      },\n      \"minLikelihood\": \"{{oneOf (array 'LIKELIHOOD_UNSPECIFIED' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n      \"ruleSet\": [\n        {\n          \"infoTypes\": [\n            {\n              \"name\": \"\",\n              \"version\": \"\"\n            }\n          ],\n          \"rules\": [\n            {\n              \"exclusionRule\": {\n                \"dictionary\": {\n                  \"cloudStoragePath\": {\n                    \"path\": \"\"\n                  },\n                  \"wordList\": {\n                    \"words\": [\n                      \"\"\n                    ]\n                  }\n                },\n                \"excludeInfoTypes\": {\n                  \"infoTypes\": [\n                    {\n                      \"name\": \"\",\n                      \"version\": \"\"\n                    }\n                  ]\n                },\n                \"matchingType\": \"{{oneOf (array 'MATCHING_TYPE_UNSPECIFIED' 'MATCHING_TYPE_FULL_MATCH' 'MATCHING_TYPE_PARTIAL_MATCH' 'MATCHING_TYPE_INVERSE_MATCH')}}\",\n                \"regex\": {\n                  \"groupIndexes\": [\n                    {{faker 'random.number'}}\n                  ],\n                  \"pattern\": \"\"\n                }\n              },\n              \"hotwordRule\": {\n                \"hotwordRegex\": {\n                  \"groupIndexes\": [\n                    {{faker 'random.number'}}\n                  ],\n                  \"pattern\": \"\"\n                },\n                \"likelihoodAdjustment\": {\n                  \"fixedLikelihood\": \"{{oneOf (array 'LIKELIHOOD_UNSPECIFIED' 'VERY_UNLIKELY' 'UNLIKELY' 'POSSIBLE' 'LIKELY' 'VERY_LIKELY')}}\",\n                  \"relativeLikelihood\": {{faker 'random.number'}}\n                },\n                \"proximity\": {\n                  \"windowAfter\": {{faker 'random.number'}},\n                  \"windowBefore\": {{faker 'random.number'}}\n                }\n              }\n            }\n          ]\n        }\n      ]\n    },\n    \"inspectTemplateName\": \"\",\n    \"storageConfig\": {\n      \"bigQueryOptions\": {\n        \"excludedFields\": [\n          {\n            \"name\": \"\"\n          }\n        ],\n        \"identifyingFields\": [\n          {\n            \"name\": \"\"\n          }\n        ],\n        \"includedFields\": [\n          {\n            \"name\": \"\"\n          }\n        ],\n        \"rowsLimit\": \"\",\n        \"rowsLimitPercent\": {{faker 'random.number'}},\n        \"sampleMethod\": \"{{oneOf (array 'SAMPLE_METHOD_UNSPECIFIED' 'TOP' 'RANDOM_START')}}\",\n        \"tableReference\": {\n          \"datasetId\": \"\",\n          \"projectId\": \"\",\n          \"tableId\": \"\"\n        }\n      },\n      \"cloudStorageOptions\": {\n        \"bytesLimitPerFile\": \"\",\n        \"bytesLimitPerFilePercent\": {{faker 'random.number'}},\n        \"fileSet\": {\n          \"regexFileSet\": {\n            \"bucketName\": \"\",\n            \"excludeRegex\": [\n              \"\"\n            ],\n            \"includeRegex\": [\n              \"\"\n            ]\n          },\n          \"url\": \"\"\n        },\n        \"fileTypes\": [\n          \"{{oneOf (array 'FILE_TYPE_UNSPECIFIED' 'BINARY_FILE' 'TEXT_FILE' 'IMAGE' 'WORD' 'PDF' 'AVRO' 'CSV' 'TSV' 'POWERPOINT' 'EXCEL')}}\"\n        ],\n        \"filesLimitPercent\": {{faker 'random.number'}},\n        \"sampleMethod\": \"{{oneOf (array 'SAMPLE_METHOD_UNSPECIFIED' 'TOP' 'RANDOM_START')}}\"\n      },\n      \"datastoreOptions\": {\n        \"kind\": {\n          \"name\": \"\"\n        },\n        \"partitionId\": {\n          \"namespaceId\": \"\",\n          \"projectId\": \"\"\n        }\n      },\n      \"hybridOptions\": {\n        \"description\": \"\",\n        \"labels\": {},\n        \"requiredFindingLabelKeys\": [\n          \"\"\n        ],\n        \"tableOptions\": {\n          \"identifyingFields\": [\n            {\n              \"name\": \"\"\n            }\n          ]\n        }\n      },\n      \"timespanConfig\": {\n        \"enableAutoPopulationOfTimespanConfig\": {{faker 'random.boolean'}},\n        \"endTime\": \"\",\n        \"startTime\": \"\",\n        \"timestampField\": {\n          \"name\": \"\"\n        }\n      }\n    }\n  },\n  \"lastRunTime\": \"\",\n  \"name\": \"\",\n  \"status\": \"{{oneOf (array 'STATUS_UNSPECIFIED' 'HEALTHY' 'PAUSED' 'CANCELLED')}}\",\n  \"triggers\": [\n    {\n      \"manual\": {},\n      \"schedule\": {\n        \"recurrencePeriodDuration\": \"\"\n      }\n    }\n  ],\n  \"updateTime\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e27f7205-747d-43fd-a710-3b408ba4201d",
      "documentation": "Lists stored infoTypes. See https://cloud.google.com/dlp/docs/creating-stored-infotypes to learn more.",
      "method": "get",
      "endpoint": "v2/:parent/storedInfoTypes",
      "responses": [
        {
          "uuid": "b219fa16-c9d0-4807-a298-f8b8fa6302ff",
          "body": "{\n  \"nextPageToken\": \"\",\n  \"storedInfoTypes\": [\n    {\n      \"currentVersion\": {\n        \"config\": {\n          \"description\": \"\",\n          \"dictionary\": {\n            \"cloudStoragePath\": {\n              \"path\": \"\"\n            },\n            \"wordList\": {\n              \"words\": [\n                \"\"\n              ]\n            }\n          },\n          \"displayName\": \"\",\n          \"largeCustomDictionary\": {\n            \"bigQueryField\": {\n              \"field\": {\n                \"name\": \"\"\n              },\n              \"table\": {\n                \"datasetId\": \"\",\n                \"projectId\": \"\",\n                \"tableId\": \"\"\n              }\n            },\n            \"cloudStorageFileSet\": {\n              \"url\": \"\"\n            },\n            \"outputPath\": {\n              \"path\": \"\"\n            }\n          },\n          \"regex\": {\n            \"groupIndexes\": [\n              {{faker 'random.number'}}\n            ],\n            \"pattern\": \"\"\n          }\n        },\n        \"createTime\": \"\",\n        \"errors\": [\n          {\n            \"details\": {\n              \"code\": {{faker 'random.number'}},\n              \"details\": [\n                {}\n              ],\n              \"message\": \"\"\n            },\n            \"timestamps\": [\n              \"\"\n            ]\n          }\n        ],\n        \"state\": \"{{oneOf (array 'STORED_INFO_TYPE_STATE_UNSPECIFIED' 'PENDING' 'READY' 'FAILED' 'INVALID')}}\",\n        \"stats\": {\n          \"largeCustomDictionary\": {\n            \"approxNumPhrases\": \"\"\n          }\n        }\n      },\n      \"name\": \"\",\n      \"pendingVersions\": [\n        {\n          \"config\": {\n            \"description\": \"\",\n            \"dictionary\": {\n              \"cloudStoragePath\": {\n                \"path\": \"\"\n              },\n              \"wordList\": {\n                \"words\": [\n                  \"\"\n                ]\n              }\n            },\n            \"displayName\": \"\",\n            \"largeCustomDictionary\": {\n              \"bigQueryField\": {\n                \"field\": {\n                  \"name\": \"\"\n                },\n                \"table\": {\n                  \"datasetId\": \"\",\n                  \"projectId\": \"\",\n                  \"tableId\": \"\"\n                }\n              },\n              \"cloudStorageFileSet\": {\n                \"url\": \"\"\n              },\n              \"outputPath\": {\n                \"path\": \"\"\n              }\n            },\n            \"regex\": {\n              \"groupIndexes\": [\n                {{faker 'random.number'}}\n              ],\n              \"pattern\": \"\"\n            }\n          },\n          \"createTime\": \"\",\n          \"errors\": [\n            {\n              \"details\": {\n                \"code\": {{faker 'random.number'}},\n                \"details\": [\n                  {}\n                ],\n                \"message\": \"\"\n              },\n              \"timestamps\": [\n                \"\"\n              ]\n            }\n          ],\n          \"state\": \"{{oneOf (array 'STORED_INFO_TYPE_STATE_UNSPECIFIED' 'PENDING' 'READY' 'FAILED' 'INVALID')}}\",\n          \"stats\": {\n            \"largeCustomDictionary\": {\n              \"approxNumPhrases\": \"\"\n            }\n          }\n        }\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "60a286a5-82f7-46f3-a3f3-b53cd8104762",
      "documentation": "Creates a pre-built stored infoType to be used for inspection. See https://cloud.google.com/dlp/docs/creating-stored-infotypes to learn more.",
      "method": "post",
      "endpoint": "v2/:parent/storedInfoTypes",
      "responses": [
        {
          "uuid": "39e4f581-83c4-4717-ac18-3700e8a2b138",
          "body": "{\n  \"currentVersion\": {\n    \"config\": {\n      \"description\": \"\",\n      \"dictionary\": {\n        \"cloudStoragePath\": {\n          \"path\": \"\"\n        },\n        \"wordList\": {\n          \"words\": [\n            \"\"\n          ]\n        }\n      },\n      \"displayName\": \"\",\n      \"largeCustomDictionary\": {\n        \"bigQueryField\": {\n          \"field\": {\n            \"name\": \"\"\n          },\n          \"table\": {\n            \"datasetId\": \"\",\n            \"projectId\": \"\",\n            \"tableId\": \"\"\n          }\n        },\n        \"cloudStorageFileSet\": {\n          \"url\": \"\"\n        },\n        \"outputPath\": {\n          \"path\": \"\"\n        }\n      },\n      \"regex\": {\n        \"groupIndexes\": [\n          {{faker 'random.number'}}\n        ],\n        \"pattern\": \"\"\n      }\n    },\n    \"createTime\": \"\",\n    \"errors\": [\n      {\n        \"details\": {\n          \"code\": {{faker 'random.number'}},\n          \"details\": [\n            {}\n          ],\n          \"message\": \"\"\n        },\n        \"timestamps\": [\n          \"\"\n        ]\n      }\n    ],\n    \"state\": \"{{oneOf (array 'STORED_INFO_TYPE_STATE_UNSPECIFIED' 'PENDING' 'READY' 'FAILED' 'INVALID')}}\",\n    \"stats\": {\n      \"largeCustomDictionary\": {\n        \"approxNumPhrases\": \"\"\n      }\n    }\n  },\n  \"name\": \"\",\n  \"pendingVersions\": [\n    {\n      \"config\": {\n        \"description\": \"\",\n        \"dictionary\": {\n          \"cloudStoragePath\": {\n            \"path\": \"\"\n          },\n          \"wordList\": {\n            \"words\": [\n              \"\"\n            ]\n          }\n        },\n        \"displayName\": \"\",\n        \"largeCustomDictionary\": {\n          \"bigQueryField\": {\n            \"field\": {\n              \"name\": \"\"\n            },\n            \"table\": {\n              \"datasetId\": \"\",\n              \"projectId\": \"\",\n              \"tableId\": \"\"\n            }\n          },\n          \"cloudStorageFileSet\": {\n            \"url\": \"\"\n          },\n          \"outputPath\": {\n            \"path\": \"\"\n          }\n        },\n        \"regex\": {\n          \"groupIndexes\": [\n            {{faker 'random.number'}}\n          ],\n          \"pattern\": \"\"\n        }\n      },\n      \"createTime\": \"\",\n      \"errors\": [\n        {\n          \"details\": {\n            \"code\": {{faker 'random.number'}},\n            \"details\": [\n              {}\n            ],\n            \"message\": \"\"\n          },\n          \"timestamps\": [\n            \"\"\n          ]\n        }\n      ],\n      \"state\": \"{{oneOf (array 'STORED_INFO_TYPE_STATE_UNSPECIFIED' 'PENDING' 'READY' 'FAILED' 'INVALID')}}\",\n      \"stats\": {\n        \"largeCustomDictionary\": {\n          \"approxNumPhrases\": \"\"\n        }\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}