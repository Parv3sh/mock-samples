{
  "uuid": "1abcfdb1-64e5-4673-bb3c-f74c3044683e",
  "lastMigration": 19,
  "name": "Hetzner Cloud API",
  "endpointPrefix": "v1",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "a4bde39c-b317-4fe4-a9e1-596f103dd1a8",
      "documentation": "Get all Actions",
      "method": "get",
      "endpoint": "actions",
      "responses": [
        {
          "uuid": "8f8bf413-5dbd-4cf7-a45d-386bb8da77e9",
          "body": "{\n  \"actions\": [\n    {\n      \"command\": \"start_server\",\n      \"error\": {\n        \"code\": \"action_failed\",\n        \"message\": \"Action failed\"\n      },\n      \"finished\": \"2016-01-30T23:55:00+00:00\",\n      \"id\": 42,\n      \"progress\": 100,\n      \"resources\": [\n        {\n          \"id\": 42,\n          \"type\": \"server\"\n        }\n      ],\n      \"started\": \"2016-01-30T23:55:00+00:00\",\n      \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n      \"last_page\": 4,\n      \"next_page\": 4,\n      \"page\": 3,\n      \"per_page\": 25,\n      \"previous_page\": 2,\n      \"total_entries\": 100\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `actions` key contains a list of Actions",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "78616789-ab4d-4078-83c8-f5abcd432660",
      "documentation": "Get an Action",
      "method": "get",
      "endpoint": "actions/:id",
      "responses": [
        {
          "uuid": "950415a8-0bc1-4952-b122-e6826476db53",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `action` key in the reply has this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d49efd12-01ad-492a-b262-f0268a7f3370",
      "documentation": "Get all Certificates",
      "method": "get",
      "endpoint": "certificates",
      "responses": [
        {
          "uuid": "6772a53f-73f7-4223-bcd1-654c15d10aa8",
          "body": "{\n  \"certificates\": [\n    {\n      \"certificate\": \"-----BEGIN CERTIFICATE-----\\n...\",\n      \"created\": \"2016-01-30T23:55:00+00:00\",\n      \"domain_names\": [\n        \"example.com\",\n        \"webmail.example.com\",\n        \"www.example.com\"\n      ],\n      \"fingerprint\": \"03:c7:55:9b:2a:d1:04:17:09:f6:d0:7f:18:34:63:d4:3e:5f\",\n      \"id\": 42,\n      \"labels\": {},\n      \"name\": \"my-resource\",\n      \"not_valid_after\": \"2019-07-08T09:59:59+00:00\",\n      \"not_valid_before\": \"2019-01-08T10:00:00+00:00\",\n      \"status\": {\n        \"error\": {\n          \"code\": \"\",\n          \"message\": \"\"\n        },\n        \"issuance\": \"{{oneOf (array 'pending' 'completed' 'failed')}}\",\n        \"renewal\": \"{{oneOf (array 'scheduled' 'pending' 'failed' 'unavailable')}}\"\n      },\n      \"type\": \"{{oneOf (array 'uploaded' 'managed')}}\",\n      \"used_by\": [\n        {\n          \"id\": 4711,\n          \"type\": \"load_balancer\"\n        }\n      ]\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n      \"last_page\": 4,\n      \"next_page\": 4,\n      \"page\": 3,\n      \"per_page\": 25,\n      \"previous_page\": 2,\n      \"total_entries\": 100\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `certificates` key contains an array of Certificate objects",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b9995022-68f8-4ae5-96a1-942d31452425",
      "documentation": "Create a Certificate",
      "method": "post",
      "endpoint": "certificates",
      "responses": [
        {
          "uuid": "bf626070-7a7d-4b31-9c3f-0e2b3a67e468",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  },\n  \"certificate\": {\n    \"certificate\": \"-----BEGIN CERTIFICATE-----\\n...\",\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"domain_names\": [\n      \"example.com\",\n      \"webmail.example.com\",\n      \"www.example.com\"\n    ],\n    \"fingerprint\": \"03:c7:55:9b:2a:d1:04:17:09:f6:d0:7f:18:34:63:d4:3e:5f\",\n    \"id\": 42,\n    \"labels\": {},\n    \"name\": \"my-resource\",\n    \"not_valid_after\": \"2019-07-08T09:59:59+00:00\",\n    \"not_valid_before\": \"2019-01-08T10:00:00+00:00\",\n    \"status\": {\n      \"error\": {\n        \"code\": \"\",\n        \"message\": \"\"\n      },\n      \"issuance\": \"{{oneOf (array 'pending' 'completed' 'failed')}}\",\n      \"renewal\": \"{{oneOf (array 'scheduled' 'pending' 'failed' 'unavailable')}}\"\n    },\n    \"type\": \"{{oneOf (array 'uploaded' 'managed')}}\",\n    \"used_by\": [\n      {\n        \"id\": 4711,\n        \"type\": \"load_balancer\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `certificate` key contains the Certificate that was just created. For type `managed` Certificates the `action` key contains the Action that allows for tracking the issuance process. For type `uploaded` Certificates the `action` is always null.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "62f9631b-3f38-4763-85ad-3ef8055c614b",
      "documentation": "Delete a Certificate",
      "method": "delete",
      "endpoint": "certificates/:id",
      "responses": [
        {
          "uuid": "382642d6-ac30-472b-b5a6-717a2268763e",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Certificate deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "834483c0-4dfa-4fec-9b7f-202068a83e26",
      "documentation": "Get a Certificate",
      "method": "get",
      "endpoint": "certificates/:id",
      "responses": [
        {
          "uuid": "6bc3e6d3-584f-457d-b3dc-1d423f3d5f8f",
          "body": "{\n  \"certificate\": {\n    \"certificate\": \"-----BEGIN CERTIFICATE-----\\n...\",\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"domain_names\": [\n      \"example.com\",\n      \"webmail.example.com\",\n      \"www.example.com\"\n    ],\n    \"fingerprint\": \"03:c7:55:9b:2a:d1:04:17:09:f6:d0:7f:18:34:63:d4:3e:5f\",\n    \"id\": 42,\n    \"labels\": {},\n    \"name\": \"my-resource\",\n    \"not_valid_after\": \"2019-07-08T09:59:59+00:00\",\n    \"not_valid_before\": \"2019-01-08T10:00:00+00:00\",\n    \"status\": {\n      \"error\": {\n        \"code\": \"\",\n        \"message\": \"\"\n      },\n      \"issuance\": \"{{oneOf (array 'pending' 'completed' 'failed')}}\",\n      \"renewal\": \"{{oneOf (array 'scheduled' 'pending' 'failed' 'unavailable')}}\"\n    },\n    \"type\": \"{{oneOf (array 'uploaded' 'managed')}}\",\n    \"used_by\": [\n      {\n        \"id\": 4711,\n        \"type\": \"load_balancer\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `certificate` key contains a Certificate object",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "91f45bfb-5909-485c-9707-ac71d98a9f0c",
      "documentation": "Update a Certificate",
      "method": "put",
      "endpoint": "certificates/:id",
      "responses": [
        {
          "uuid": "399e0caa-d17f-40d3-8fd8-28b85e8e6869",
          "body": "{\n  \"certificate\": {\n    \"certificate\": \"-----BEGIN CERTIFICATE-----\\n...\",\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"domain_names\": [\n      \"example.com\",\n      \"webmail.example.com\",\n      \"www.example.com\"\n    ],\n    \"fingerprint\": \"03:c7:55:9b:2a:d1:04:17:09:f6:d0:7f:18:34:63:d4:3e:5f\",\n    \"id\": 42,\n    \"labels\": {},\n    \"name\": \"my-resource\",\n    \"not_valid_after\": \"2019-07-08T09:59:59+00:00\",\n    \"not_valid_before\": \"2019-01-08T10:00:00+00:00\",\n    \"status\": {\n      \"error\": {\n        \"code\": \"\",\n        \"message\": \"\"\n      },\n      \"issuance\": \"{{oneOf (array 'pending' 'completed' 'failed')}}\",\n      \"renewal\": \"{{oneOf (array 'scheduled' 'pending' 'failed' 'unavailable')}}\"\n    },\n    \"type\": \"{{oneOf (array 'uploaded' 'managed')}}\",\n    \"used_by\": [\n      {\n        \"id\": 4711,\n        \"type\": \"load_balancer\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `certificate` key contains the Certificate that was just updated",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "118fea90-a271-424a-9619-a09289b8bd23",
      "documentation": "Get all Actions for a Certificate",
      "method": "get",
      "endpoint": "certificates/:id/actions",
      "responses": [
        {
          "uuid": "ef31edc0-e519-4925-b077-20affd017a7b",
          "body": "{\n  \"actions\": [\n    {\n      \"command\": \"start_server\",\n      \"error\": {\n        \"code\": \"action_failed\",\n        \"message\": \"Action failed\"\n      },\n      \"finished\": \"2016-01-30T23:55:00+00:00\",\n      \"id\": 42,\n      \"progress\": 100,\n      \"resources\": [\n        {\n          \"id\": 42,\n          \"type\": \"server\"\n        }\n      ],\n      \"started\": \"2016-01-30T23:55:00+00:00\",\n      \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n      \"last_page\": 4,\n      \"next_page\": 4,\n      \"page\": 3,\n      \"per_page\": 25,\n      \"previous_page\": 2,\n      \"total_entries\": 100\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `actions` key contains a list of Actions",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d9422f22-b2fa-4457-8c0d-36b5976176ed",
      "documentation": "Retry Issuance or Renewal",
      "method": "post",
      "endpoint": "certificates/:id/actions/retry",
      "responses": [
        {
          "uuid": "f409d180-0e2a-4ca4-92cb-3c045517bdff",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the resulting Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e52e21ad-ca2b-4e4d-bb3c-065b9c29d64f",
      "documentation": "Get an Action for a Certificate",
      "method": "get",
      "endpoint": "certificates/:id/actions/:action_id",
      "responses": [
        {
          "uuid": "64710c7f-2a3f-4f2f-b42c-472a995c745a",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `action` key contains the Certificate Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b20f51ac-4864-4cda-82ec-460d5b4291f9",
      "documentation": "Get all Datacenters",
      "method": "get",
      "endpoint": "datacenters",
      "responses": [
        {
          "uuid": "9b49ef8b-c9ae-4956-9be7-6f61df5894fc",
          "body": "{\n  \"datacenters\": [\n    {\n      \"description\": \"Falkenstein DC Park 8\",\n      \"id\": 42,\n      \"location\": {\n        \"city\": \"Falkenstein\",\n        \"country\": \"DE\",\n        \"description\": \"Falkenstein DC Park 1\",\n        \"id\": 1,\n        \"latitude\": 50.47612,\n        \"longitude\": 12.370071,\n        \"name\": \"fsn1\",\n        \"network_zone\": \"eu-central\"\n      },\n      \"name\": \"fsn1-dc8\",\n      \"server_types\": {\n        \"available\": [\n          1,\n          2,\n          3\n        ],\n        \"available_for_migration\": [\n          1,\n          2,\n          3\n        ],\n        \"supported\": [\n          1,\n          2,\n          3\n        ]\n      }\n    }\n  ],\n  \"recommendation\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The reply contains the `datacenters` and `recommendation` keys",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d5cead06-a950-4625-ae14-bc8fd6fcd1f0",
      "documentation": "Get a Datacenter",
      "method": "get",
      "endpoint": "datacenters/:id",
      "responses": [
        {
          "uuid": "637f837f-106d-4d10-a8d4-c44d324b99d3",
          "body": "{\n  \"datacenter\": {\n    \"description\": \"Falkenstein DC Park 8\",\n    \"id\": 42,\n    \"location\": {\n      \"city\": \"Falkenstein\",\n      \"country\": \"DE\",\n      \"description\": \"Falkenstein DC Park 1\",\n      \"id\": 1,\n      \"latitude\": 50.47612,\n      \"longitude\": 12.370071,\n      \"name\": \"fsn1\",\n      \"network_zone\": \"eu-central\"\n    },\n    \"name\": \"fsn1-dc8\",\n    \"server_types\": {\n      \"available\": [\n        1,\n        2,\n        3\n      ],\n      \"available_for_migration\": [\n        1,\n        2,\n        3\n      ],\n      \"supported\": [\n        1,\n        2,\n        3\n      ]\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `datacenter` key in the reply contains a Datacenter object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6c82d7ee-4284-42a5-b47c-05568f3d8e31",
      "documentation": "Get all Firewalls",
      "method": "get",
      "endpoint": "firewalls",
      "responses": [
        {
          "uuid": "ca8169ce-2c98-4b6e-9ddf-1118c4f93f9c",
          "body": "{\n  \"firewalls\": [\n    {\n      \"applied_to\": [\n        {\n          \"applied_to_resources\": [\n            {\n              \"server\": {\n                \"id\": 42\n              },\n              \"type\": \"{{oneOf (array 'server')}}\"\n            }\n          ],\n          \"label_selector\": {\n            \"selector\": \"env=prod\"\n          },\n          \"server\": {\n            \"id\": 42\n          },\n          \"type\": \"{{oneOf (array 'server' 'label_selector')}}\"\n        }\n      ],\n      \"created\": \"2016-01-30T23:55:00+00:00\",\n      \"id\": 42,\n      \"labels\": {},\n      \"name\": \"my-resource\",\n      \"rules\": [\n        {\n          \"description\": \"\",\n          \"destination_ips\": [\n            \"28.239.13.1/32\",\n            \"28.239.14.0/24\",\n            \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\"\n          ],\n          \"direction\": \"{{oneOf (array 'in' 'out')}}\",\n          \"port\": \"80\",\n          \"protocol\": \"{{oneOf (array 'tcp' 'udp' 'icmp' 'esp' 'gre')}}\",\n          \"source_ips\": [\n            \"28.239.13.1/32\",\n            \"28.239.14.0/24\",\n            \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\"\n          ]\n        }\n      ]\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n      \"last_page\": 4,\n      \"next_page\": 4,\n      \"page\": 3,\n      \"per_page\": 25,\n      \"previous_page\": 2,\n      \"total_entries\": 100\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `firewalls` key contains an array of Firewall objects",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fed13c62-2a01-453d-b378-59fd781d848b",
      "documentation": "Create a Firewall",
      "method": "post",
      "endpoint": "firewalls",
      "responses": [
        {
          "uuid": "5d50981d-2994-4d0a-8f0e-2bd5f2f6dd41",
          "body": "{\n  \"actions\": [\n    {\n      \"command\": \"set_firewall_rules\",\n      \"error\": {\n        \"code\": \"action_failed\",\n        \"message\": \"Action failed\"\n      },\n      \"finished\": \"2016-01-30T23:56:00+00:00\",\n      \"id\": 13,\n      \"progress\": 100,\n      \"resources\": [\n        {\n          \"id\": 38,\n          \"type\": \"firewall\"\n        }\n      ],\n      \"started\": \"2016-01-30T23:55:00+00:00\",\n      \"status\": \"success\"\n    },\n    {\n      \"command\": \"apply_firewall\",\n      \"error\": {\n        \"code\": \"action_failed\",\n        \"message\": \"Action failed\"\n      },\n      \"finished\": \"2016-01-30T23:56:00+00:00\",\n      \"id\": 14,\n      \"progress\": 100,\n      \"resources\": [\n        {\n          \"id\": 42,\n          \"type\": \"server\"\n        },\n        {\n          \"id\": 38,\n          \"type\": \"firewall\"\n        }\n      ],\n      \"started\": \"2016-01-30T23:55:00+00:00\",\n      \"status\": \"success\"\n    }\n  ],\n  \"firewall\": {\n    \"applied_to\": [\n      {\n        \"applied_to_resources\": [\n          {\n            \"server\": {\n              \"id\": 42\n            },\n            \"type\": \"{{oneOf (array 'server')}}\"\n          }\n        ],\n        \"label_selector\": {\n          \"selector\": \"env=prod\"\n        },\n        \"server\": {\n          \"id\": 42\n        },\n        \"type\": \"{{oneOf (array 'server' 'label_selector')}}\"\n      }\n    ],\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"labels\": {},\n    \"name\": \"my-resource\",\n    \"rules\": [\n      {\n        \"description\": \"\",\n        \"destination_ips\": [\n          \"28.239.13.1/32\",\n          \"28.239.14.0/24\",\n          \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\"\n        ],\n        \"direction\": \"{{oneOf (array 'in' 'out')}}\",\n        \"port\": \"80\",\n        \"protocol\": \"{{oneOf (array 'tcp' 'udp' 'icmp' 'esp' 'gre')}}\",\n        \"source_ips\": [\n          \"28.239.13.1/32\",\n          \"28.239.14.0/24\",\n          \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\"\n        ]\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `firewall` key contains the Firewall that was just created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "32ca23e9-42b9-4891-9808-3138067c46e7",
      "documentation": "Delete a Firewall",
      "method": "delete",
      "endpoint": "firewalls/:id",
      "responses": [
        {
          "uuid": "01604c22-fc97-4247-a38a-e18daf39745d",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Firewall deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2c68b448-0ecb-4010-8112-14ea2dd83bf9",
      "documentation": "Get a Firewall",
      "method": "get",
      "endpoint": "firewalls/:id",
      "responses": [
        {
          "uuid": "4ace8385-5548-4c49-b0a8-e265e1208d3a",
          "body": "{\n  \"firewall\": {\n    \"applied_to\": [\n      {\n        \"applied_to_resources\": [\n          {\n            \"server\": {\n              \"id\": 42\n            },\n            \"type\": \"{{oneOf (array 'server')}}\"\n          }\n        ],\n        \"label_selector\": {\n          \"selector\": \"env=prod\"\n        },\n        \"server\": {\n          \"id\": 42\n        },\n        \"type\": \"{{oneOf (array 'server' 'label_selector')}}\"\n      }\n    ],\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"labels\": {},\n    \"name\": \"my-resource\",\n    \"rules\": [\n      {\n        \"description\": \"\",\n        \"destination_ips\": [\n          \"28.239.13.1/32\",\n          \"28.239.14.0/24\",\n          \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\"\n        ],\n        \"direction\": \"{{oneOf (array 'in' 'out')}}\",\n        \"port\": \"80\",\n        \"protocol\": \"{{oneOf (array 'tcp' 'udp' 'icmp' 'esp' 'gre')}}\",\n        \"source_ips\": [\n          \"28.239.13.1/32\",\n          \"28.239.14.0/24\",\n          \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\"\n        ]\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `firewall` key contains a Firewall object",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "db0fbc24-1151-4522-af9a-0ba054b4d37b",
      "documentation": "Update a Firewall",
      "method": "put",
      "endpoint": "firewalls/:id",
      "responses": [
        {
          "uuid": "074d6009-fe5f-48e4-a794-f2558cb0ef73",
          "body": "{\n  \"firewall\": {\n    \"applied_to\": [\n      {\n        \"applied_to_resources\": [\n          {\n            \"server\": {\n              \"id\": 42\n            },\n            \"type\": \"{{oneOf (array 'server')}}\"\n          }\n        ],\n        \"label_selector\": {\n          \"selector\": \"env=prod\"\n        },\n        \"server\": {\n          \"id\": 42\n        },\n        \"type\": \"{{oneOf (array 'server' 'label_selector')}}\"\n      }\n    ],\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"labels\": {},\n    \"name\": \"my-resource\",\n    \"rules\": [\n      {\n        \"description\": \"\",\n        \"destination_ips\": [\n          \"28.239.13.1/32\",\n          \"28.239.14.0/24\",\n          \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\"\n        ],\n        \"direction\": \"{{oneOf (array 'in' 'out')}}\",\n        \"port\": \"80\",\n        \"protocol\": \"{{oneOf (array 'tcp' 'udp' 'icmp' 'esp' 'gre')}}\",\n        \"source_ips\": [\n          \"28.239.13.1/32\",\n          \"28.239.14.0/24\",\n          \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\"\n        ]\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `firewall` key contains the Firewall that was just updated",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9f309c0d-3627-4674-bbe0-04c8f4a60ade",
      "documentation": "Get all Actions for a Firewall",
      "method": "get",
      "endpoint": "firewalls/:id/actions",
      "responses": [
        {
          "uuid": "76a74642-47f8-4562-acaf-8db2ba2acfa3",
          "body": "{\n  \"actions\": [\n    {\n      \"command\": \"start_server\",\n      \"error\": {\n        \"code\": \"action_failed\",\n        \"message\": \"Action failed\"\n      },\n      \"finished\": \"2016-01-30T23:55:00+00:00\",\n      \"id\": 42,\n      \"progress\": 100,\n      \"resources\": [\n        {\n          \"id\": 42,\n          \"type\": \"server\"\n        }\n      ],\n      \"started\": \"2016-01-30T23:55:00+00:00\",\n      \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n      \"last_page\": 4,\n      \"next_page\": 4,\n      \"page\": 3,\n      \"per_page\": 25,\n      \"previous_page\": 2,\n      \"total_entries\": 100\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `actions` key contains a list of Actions",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d1012e66-6c84-4031-8e04-dea38d782167",
      "documentation": "Apply to Resources",
      "method": "post",
      "endpoint": "firewalls/:id/actions/apply_to_resources",
      "responses": [
        {
          "uuid": "a3f3df02-1040-426a-a3fe-41ec15d5df85",
          "body": "{\n  \"actions\": [\n    {\n      \"command\": \"start_server\",\n      \"error\": {\n        \"code\": \"action_failed\",\n        \"message\": \"Action failed\"\n      },\n      \"finished\": \"2016-01-30T23:55:00+00:00\",\n      \"id\": 42,\n      \"progress\": 100,\n      \"resources\": [\n        {\n          \"id\": 42,\n          \"type\": \"server\"\n        }\n      ],\n      \"started\": \"2016-01-30T23:55:00+00:00\",\n      \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n      \"last_page\": 4,\n      \"next_page\": 4,\n      \"page\": 3,\n      \"per_page\": 25,\n      \"previous_page\": 2,\n      \"total_entries\": 100\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `actions` key contains multiple `apply_firewall` Actions",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "997e6939-3ad8-4b46-9085-bb46534c24ae",
      "documentation": "Remove from Resources",
      "method": "post",
      "endpoint": "firewalls/:id/actions/remove_from_resources",
      "responses": [
        {
          "uuid": "e24bb03c-280c-4b9c-ae06-1c4a7b0b9611",
          "body": "{\n  \"actions\": [\n    {\n      \"command\": \"start_server\",\n      \"error\": {\n        \"code\": \"action_failed\",\n        \"message\": \"Action failed\"\n      },\n      \"finished\": \"2016-01-30T23:55:00+00:00\",\n      \"id\": 42,\n      \"progress\": 100,\n      \"resources\": [\n        {\n          \"id\": 42,\n          \"type\": \"server\"\n        }\n      ],\n      \"started\": \"2016-01-30T23:55:00+00:00\",\n      \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n      \"last_page\": 4,\n      \"next_page\": 4,\n      \"page\": 3,\n      \"per_page\": 25,\n      \"previous_page\": 2,\n      \"total_entries\": 100\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `actions` key contains multiple `remove_firewall` Actions",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e5f4a16e-6f33-4036-899e-1c4d2696a2f1",
      "documentation": "Set Rules",
      "method": "post",
      "endpoint": "firewalls/:id/actions/set_rules",
      "responses": [
        {
          "uuid": "af923e41-95e2-40f8-bea7-93207d6038a0",
          "body": "{\n  \"actions\": [\n    {\n      \"command\": \"start_server\",\n      \"error\": {\n        \"code\": \"action_failed\",\n        \"message\": \"Action failed\"\n      },\n      \"finished\": \"2016-01-30T23:55:00+00:00\",\n      \"id\": 42,\n      \"progress\": 100,\n      \"resources\": [\n        {\n          \"id\": 42,\n          \"type\": \"server\"\n        }\n      ],\n      \"started\": \"2016-01-30T23:55:00+00:00\",\n      \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n      \"last_page\": 4,\n      \"next_page\": 4,\n      \"page\": 3,\n      \"per_page\": 25,\n      \"previous_page\": 2,\n      \"total_entries\": 100\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains one `set_firewall_rules` Action plus one `apply_firewall` Action per resource where the Firewall is active",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2fa5c499-46ac-4672-8911-3da594a2c18f",
      "documentation": "Get an Action for a Firewall",
      "method": "get",
      "endpoint": "firewalls/:id/actions/:action_id",
      "responses": [
        {
          "uuid": "ab5dac36-089f-4a4e-90b5-c463f29514ee",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `action` key contains the Firewall Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "01e7ef59-a53a-423b-9b56-f32994fd099d",
      "documentation": "Get all Floating IPs",
      "method": "get",
      "endpoint": "floating_ips",
      "responses": [
        {
          "uuid": "07765bf6-93fd-4f3b-b108-ea7f3635944a",
          "body": "{\n  \"floating_ips\": [\n    {\n      \"blocked\": {{faker 'random.boolean'}},\n      \"created\": \"2016-01-30T23:55:00+00:00\",\n      \"description\": \"this describes my resource\",\n      \"dns_ptr\": [\n        {\n          \"dns_ptr\": \"server.example.com\",\n          \"ip\": \"2001:db8::1\"\n        }\n      ],\n      \"home_location\": {\n        \"city\": \"Falkenstein\",\n        \"country\": \"DE\",\n        \"description\": \"Falkenstein DC Park 1\",\n        \"id\": 1,\n        \"latitude\": 50.47612,\n        \"longitude\": 12.370071,\n        \"name\": \"fsn1\",\n        \"network_zone\": \"eu-central\"\n      },\n      \"id\": 42,\n      \"ip\": \"131.232.99.1\",\n      \"labels\": {},\n      \"name\": \"my-resource\",\n      \"protection\": {\n        \"delete\": {{faker 'random.boolean'}}\n      },\n      \"server\": 42,\n      \"type\": \"{{oneOf (array 'ipv4' 'ipv6')}}\"\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n      \"last_page\": 4,\n      \"next_page\": 4,\n      \"page\": 3,\n      \"per_page\": 25,\n      \"previous_page\": 2,\n      \"total_entries\": 100\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `floating_ips` key in the reply contains an array of Floating IP objects with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "61c197f6-478e-4bac-8500-e75030e42186",
      "documentation": "Create a Floating IP",
      "method": "post",
      "endpoint": "floating_ips",
      "responses": [
        {
          "uuid": "b57da917-0d6f-4991-a5dc-c05567692002",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  },\n  \"floating_ip\": {\n    \"blocked\": {{faker 'random.boolean'}},\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"description\": \"this describes my resource\",\n    \"dns_ptr\": [\n      {\n        \"dns_ptr\": \"server.example.com\",\n        \"ip\": \"2001:db8::1\"\n      }\n    ],\n    \"home_location\": {\n      \"city\": \"Falkenstein\",\n      \"country\": \"DE\",\n      \"description\": \"Falkenstein DC Park 1\",\n      \"id\": 1,\n      \"latitude\": 50.47612,\n      \"longitude\": 12.370071,\n      \"name\": \"fsn1\",\n      \"network_zone\": \"eu-central\"\n    },\n    \"id\": 42,\n    \"ip\": \"131.232.99.1\",\n    \"labels\": {},\n    \"name\": \"my-resource\",\n    \"protection\": {\n      \"delete\": {{faker 'random.boolean'}}\n    },\n    \"server\": 42,\n    \"type\": \"{{oneOf (array 'ipv4' 'ipv6')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `floating_ip` key in the reply contains the object that was just created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9bfa1af7-919d-4832-9e4a-9583d1ca4274",
      "documentation": "Delete a Floating IP",
      "method": "delete",
      "endpoint": "floating_ips/:id",
      "responses": [
        {
          "uuid": "528cb2d0-4e69-4d41-a2d8-58a619bad39a",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Floating IP deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d7ce8e24-02af-4eff-8913-435f371bbcbe",
      "documentation": "Get a Floating IP",
      "method": "get",
      "endpoint": "floating_ips/:id",
      "responses": [
        {
          "uuid": "236f9248-9e63-4fb9-9af7-76b833767225",
          "body": "{\n  \"floating_ip\": {\n    \"blocked\": {{faker 'random.boolean'}},\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"description\": \"this describes my resource\",\n    \"dns_ptr\": [\n      {\n        \"dns_ptr\": \"server.example.com\",\n        \"ip\": \"2001:db8::1\"\n      }\n    ],\n    \"home_location\": {\n      \"city\": \"Falkenstein\",\n      \"country\": \"DE\",\n      \"description\": \"Falkenstein DC Park 1\",\n      \"id\": 1,\n      \"latitude\": 50.47612,\n      \"longitude\": 12.370071,\n      \"name\": \"fsn1\",\n      \"network_zone\": \"eu-central\"\n    },\n    \"id\": 42,\n    \"ip\": \"131.232.99.1\",\n    \"labels\": {},\n    \"name\": \"my-resource\",\n    \"protection\": {\n      \"delete\": {{faker 'random.boolean'}}\n    },\n    \"server\": 42,\n    \"type\": \"{{oneOf (array 'ipv4' 'ipv6')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `floating_ip` key in the reply contains a Floating IP object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "590272f9-cae5-4c51-9bea-e82d81d38177",
      "documentation": "Update a Floating IP",
      "method": "put",
      "endpoint": "floating_ips/:id",
      "responses": [
        {
          "uuid": "a08b076c-34b2-425f-913b-a4f498419ce8",
          "body": "{\n  \"floating_ip\": {\n    \"blocked\": {{faker 'random.boolean'}},\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"description\": \"this describes my resource\",\n    \"dns_ptr\": [\n      {\n        \"dns_ptr\": \"server.example.com\",\n        \"ip\": \"2001:db8::1\"\n      }\n    ],\n    \"home_location\": {\n      \"city\": \"Falkenstein\",\n      \"country\": \"DE\",\n      \"description\": \"Falkenstein DC Park 1\",\n      \"id\": 1,\n      \"latitude\": 50.47612,\n      \"longitude\": 12.370071,\n      \"name\": \"fsn1\",\n      \"network_zone\": \"eu-central\"\n    },\n    \"id\": 42,\n    \"ip\": \"131.232.99.1\",\n    \"labels\": {},\n    \"name\": \"my-resource\",\n    \"protection\": {\n      \"delete\": {{faker 'random.boolean'}}\n    },\n    \"server\": 42,\n    \"type\": \"{{oneOf (array 'ipv4' 'ipv6')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `floating_ip` key in the reply contains the modified Floating IP object with the new description",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "464f49f1-d70d-4109-8885-1884e8e64a01",
      "documentation": "Get all Actions for a Floating IP",
      "method": "get",
      "endpoint": "floating_ips/:id/actions",
      "responses": [
        {
          "uuid": "0a02707e-c451-45f4-a8d1-5f1f361d56ab",
          "body": "{\n  \"actions\": [\n    {\n      \"command\": \"start_server\",\n      \"error\": {\n        \"code\": \"action_failed\",\n        \"message\": \"Action failed\"\n      },\n      \"finished\": \"2016-01-30T23:55:00+00:00\",\n      \"id\": 42,\n      \"progress\": 100,\n      \"resources\": [\n        {\n          \"id\": 42,\n          \"type\": \"server\"\n        }\n      ],\n      \"started\": \"2016-01-30T23:55:00+00:00\",\n      \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `actions` key contains a list of Actions",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fa40e5a8-6f17-46e8-b2eb-4e2c2f751d90",
      "documentation": "Assign a Floating IP to a Server",
      "method": "post",
      "endpoint": "floating_ips/:id/actions/assign",
      "responses": [
        {
          "uuid": "ac4ca3e5-e716-4e18-98b2-fdd8d58fdc67",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `assign` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dd7bb421-3f08-48b6-9765-2f6824d50c61",
      "documentation": "Change reverse DNS entry for a Floating IP",
      "method": "post",
      "endpoint": "floating_ips/:id/actions/change_dns_ptr",
      "responses": [
        {
          "uuid": "483eb91e-d1ef-4cf0-bc42-ffa819975473",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `change_dns_ptr` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "248e00b3-88a3-45ab-bc4a-ae92475324b4",
      "documentation": "Change Floating IP Protection",
      "method": "post",
      "endpoint": "floating_ips/:id/actions/change_protection",
      "responses": [
        {
          "uuid": "d0c783e9-92ba-4916-a436-5b0dcc8d89c6",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `change_protection` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ac51efa9-3c70-4657-8fe7-088e5b799a13",
      "documentation": "Unassign a Floating IP",
      "method": "post",
      "endpoint": "floating_ips/:id/actions/unassign",
      "responses": [
        {
          "uuid": "e0f367a2-d072-4194-b2eb-d4f420f7e0ac",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `unassign` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0f09905c-dd60-4def-b52a-1df8d8b1c30a",
      "documentation": "Get an Action for a Floating IP",
      "method": "get",
      "endpoint": "floating_ips/:id/actions/:action_id",
      "responses": [
        {
          "uuid": "0c2d3646-7602-48f6-a657-eb05189610b7",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `action` key in the reply has this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "65c8ac0e-1687-4b72-8fd8-c6484c43c8a0",
      "documentation": "Get all Images",
      "method": "get",
      "endpoint": "images",
      "responses": [
        {
          "uuid": "104dd0af-f421-41f0-b483-b69ca839dcb7",
          "body": "{\n  \"images\": [\n    {\n      \"bound_to\": {{faker 'random.number'}},\n      \"build_id\": \"c313fe40383af26094a5a92026054320ab55abc7\",\n      \"created\": \"2016-01-30T23:55:00+00:00\",\n      \"created_from\": {\n        \"id\": 1,\n        \"name\": \"Server\"\n      },\n      \"deleted\": \"\",\n      \"deprecated\": \"2018-02-28T00:00:00+00:00\",\n      \"description\": \"Ubuntu 20.04 Standard 64 bit\",\n      \"disk_size\": 10,\n      \"id\": 42,\n      \"image_size\": 2.3,\n      \"labels\": {},\n      \"name\": \"ubuntu-20.04\",\n      \"os_flavor\": \"{{oneOf (array 'ubuntu' 'centos' 'debian' 'fedora' 'unknown')}}\",\n      \"os_version\": \"20.04\",\n      \"protection\": {\n        \"delete\": {{faker 'random.boolean'}}\n      },\n      \"rapid_deploy\": {{faker 'random.boolean'}},\n      \"status\": \"{{oneOf (array 'available' 'creating' 'unavailable')}}\",\n      \"type\": \"{{oneOf (array 'system' 'app' 'snapshot' 'backup' 'temporary')}}\"\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n      \"last_page\": 4,\n      \"next_page\": 4,\n      \"page\": 3,\n      \"per_page\": 25,\n      \"previous_page\": 2,\n      \"total_entries\": 100\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `images` key in the reply contains an array of Image objects with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c44dcf1a-072b-4ae4-936f-75a0c81e83b6",
      "documentation": "Delete an Image",
      "method": "delete",
      "endpoint": "images/:id",
      "responses": [
        {
          "uuid": "0c6dd908-7786-4368-ab31-a4d560cad6d5",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Image deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9798f38e-3584-4e88-97af-ec4513ad59a3",
      "documentation": "Get an Image",
      "method": "get",
      "endpoint": "images/:id",
      "responses": [
        {
          "uuid": "c8e507f3-cae2-4997-a017-5d2eddbe98e2",
          "body": "{\n  \"image\": {\n    \"bound_to\": {{faker 'random.number'}},\n    \"build_id\": \"c313fe40383af26094a5a92026054320ab55abc7\",\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"created_from\": {\n      \"id\": 1,\n      \"name\": \"Server\"\n    },\n    \"deleted\": \"\",\n    \"deprecated\": \"2018-02-28T00:00:00+00:00\",\n    \"description\": \"Ubuntu 20.04 Standard 64 bit\",\n    \"disk_size\": 10,\n    \"id\": 42,\n    \"image_size\": 2.3,\n    \"labels\": {},\n    \"name\": \"ubuntu-20.04\",\n    \"os_flavor\": \"{{oneOf (array 'ubuntu' 'centos' 'debian' 'fedora' 'unknown')}}\",\n    \"os_version\": \"20.04\",\n    \"protection\": {\n      \"delete\": {{faker 'random.boolean'}}\n    },\n    \"rapid_deploy\": {{faker 'random.boolean'}},\n    \"status\": \"{{oneOf (array 'available' 'creating' 'unavailable')}}\",\n    \"type\": \"{{oneOf (array 'system' 'app' 'snapshot' 'backup' 'temporary')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `image` key in the reply contains an Image object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8bcb108e-af23-4cf7-b7e2-534e53660b16",
      "documentation": "Update an Image",
      "method": "put",
      "endpoint": "images/:id",
      "responses": [
        {
          "uuid": "e3f49bf6-d48d-4e0e-b5a2-f16ef230db26",
          "body": "{\n  \"image\": {\n    \"bound_to\": {{faker 'random.number'}},\n    \"build_id\": \"c313fe40383af26094a5a92026054320ab55abc7\",\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"created_from\": {\n      \"id\": 1,\n      \"name\": \"Server\"\n    },\n    \"deleted\": \"\",\n    \"deprecated\": \"2018-02-28T00:00:00+00:00\",\n    \"description\": \"Ubuntu 20.04 Standard 64 bit\",\n    \"disk_size\": 10,\n    \"id\": 42,\n    \"image_size\": 2.3,\n    \"labels\": {},\n    \"name\": \"ubuntu-20.04\",\n    \"os_flavor\": \"{{oneOf (array 'ubuntu' 'centos' 'debian' 'fedora' 'unknown')}}\",\n    \"os_version\": \"20.04\",\n    \"protection\": {\n      \"delete\": {{faker 'random.boolean'}}\n    },\n    \"rapid_deploy\": {{faker 'random.boolean'}},\n    \"status\": \"{{oneOf (array 'available' 'creating' 'unavailable')}}\",\n    \"type\": \"{{oneOf (array 'system' 'app' 'snapshot' 'backup' 'temporary')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The image key in the reply contains the modified Image object",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7c11fc9d-e65b-4dad-af92-557ebd30a50c",
      "documentation": "Get all Actions for an Image",
      "method": "get",
      "endpoint": "images/:id/actions",
      "responses": [
        {
          "uuid": "def766a2-5e01-427a-8f53-2e88b6be9e0b",
          "body": "{\n  \"actions\": [\n    {\n      \"command\": \"start_server\",\n      \"error\": {\n        \"code\": \"action_failed\",\n        \"message\": \"Action failed\"\n      },\n      \"finished\": \"2016-01-30T23:55:00+00:00\",\n      \"id\": 42,\n      \"progress\": 100,\n      \"resources\": [\n        {\n          \"id\": 42,\n          \"type\": \"server\"\n        }\n      ],\n      \"started\": \"2016-01-30T23:55:00+00:00\",\n      \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n      \"last_page\": 4,\n      \"next_page\": 4,\n      \"page\": 3,\n      \"per_page\": 25,\n      \"previous_page\": 2,\n      \"total_entries\": 100\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `actions` key contains a list of Actions",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b7d75924-c0fe-4a2c-b79b-fe11308c58fd",
      "documentation": "Change Image Protection",
      "method": "post",
      "endpoint": "images/:id/actions/change_protection",
      "responses": [
        {
          "uuid": "a8c37a29-b836-4d9d-94d1-a21df37d318a",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `change_protection` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6568b205-7aa3-42e8-878a-669c06a647ac",
      "documentation": "Get an Action for an Image",
      "method": "get",
      "endpoint": "images/:id/actions/:action_id",
      "responses": [
        {
          "uuid": "c597533d-4c02-411b-a246-dfa621d465a9",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `action` key contains the Image Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e33b1255-2693-4aa6-aefb-d0f76ea11d93",
      "documentation": "Get all ISOs",
      "method": "get",
      "endpoint": "isos",
      "responses": [
        {
          "uuid": "acc3d4b9-7a1e-4ed2-9a48-ea35bd5252fb",
          "body": "{\n  \"isos\": [\n    {\n      \"deprecated\": \"2018-02-28T00:00:00+00:00\",\n      \"description\": \"FreeBSD 11.0 x64\",\n      \"id\": 42,\n      \"name\": \"FreeBSD-11.0-RELEASE-amd64-dvd1\",\n      \"type\": \"{{oneOf (array 'public' 'private')}}\"\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n      \"last_page\": 4,\n      \"next_page\": 4,\n      \"page\": 3,\n      \"per_page\": 25,\n      \"previous_page\": 2,\n      \"total_entries\": 100\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `isos` key in the reply contains an array of iso objects with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ea6ad071-62f4-4572-9fde-2748b884044f",
      "documentation": "Get an ISO",
      "method": "get",
      "endpoint": "isos/:id",
      "responses": [
        {
          "uuid": "e030f516-730f-41e5-9328-f527f907ea99",
          "body": "{\n  \"iso\": {\n    \"deprecated\": \"2018-02-28T00:00:00+00:00\",\n    \"description\": \"FreeBSD 11.0 x64\",\n    \"id\": 42,\n    \"name\": \"FreeBSD-11.0-RELEASE-amd64-dvd1\",\n    \"type\": \"{{oneOf (array 'public' 'private')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `iso` key in the reply contains an array of ISO objects with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "64af98d4-026f-4559-b172-7c4d0fe3b49a",
      "documentation": "Get all Load Balancer Types",
      "method": "get",
      "endpoint": "load_balancer_types",
      "responses": [
        {
          "uuid": "dc918fb8-79cc-4181-8ac5-cb7554f7dc11",
          "body": "{\n  \"load_balancer_types\": [\n    {\n      \"deprecated\": \"2016-01-30T23:50:00+00:00\",\n      \"description\": \"LB11\",\n      \"id\": 1,\n      \"max_assigned_certificates\": 10,\n      \"max_connections\": 20000,\n      \"max_services\": 5,\n      \"max_targets\": 25,\n      \"name\": \"lb11\",\n      \"prices\": [\n        {\n          \"location\": \"fsn1\",\n          \"price_hourly\": {\n            \"gross\": \"1.1900000000000000\",\n            \"net\": \"1.0000000000\"\n          },\n          \"price_monthly\": {\n            \"gross\": \"1.1900000000000000\",\n            \"net\": \"1.0000000000\"\n          }\n        }\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `load_balancer_types` key in the reply contains an array of Load Balancer type objects with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "195d62ef-589d-4a12-a2e9-5d6ad9d0e310",
      "documentation": "Get a Load Balancer Type",
      "method": "get",
      "endpoint": "load_balancer_types/:id",
      "responses": [
        {
          "uuid": "a6b63747-34db-48ea-9c33-2a51ea34ea12",
          "body": "{\n  \"load_balancer_type\": {\n    \"deprecated\": \"2016-01-30T23:50:00+00:00\",\n    \"description\": \"LB11\",\n    \"id\": 1,\n    \"max_assigned_certificates\": 10,\n    \"max_connections\": 20000,\n    \"max_services\": 5,\n    \"max_targets\": 25,\n    \"name\": \"lb11\",\n    \"prices\": [\n      {\n        \"location\": \"fsn1\",\n        \"price_hourly\": {\n          \"gross\": \"1.1900000000000000\",\n          \"net\": \"1.0000000000\"\n        },\n        \"price_monthly\": {\n          \"gross\": \"1.1900000000000000\",\n          \"net\": \"1.0000000000\"\n        }\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `load_balancer_type` key in the reply contains a Load Balancer type object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a899ef7d-cf2a-47f5-96e2-d1178ed7e99b",
      "documentation": "Get all Load Balancers",
      "method": "get",
      "endpoint": "load_balancers",
      "responses": [
        {
          "uuid": "41e2556b-9af5-41f2-9d25-c473cb08ba50",
          "body": "{\n  \"load_balancers\": [\n    {\n      \"algorithm\": {\n        \"type\": \"{{oneOf (array 'round_robin' 'least_connections')}}\"\n      },\n      \"created\": \"2016-01-30T23:55:00+00:00\",\n      \"id\": 42,\n      \"included_traffic\": 10000,\n      \"ingoing_traffic\": {{faker 'random.number'}},\n      \"labels\": {},\n      \"load_balancer_type\": {\n        \"deprecated\": \"2016-01-30T23:50:00+00:00\",\n        \"description\": \"LB11\",\n        \"id\": 1,\n        \"max_assigned_certificates\": 10,\n        \"max_connections\": 20000,\n        \"max_services\": 5,\n        \"max_targets\": 25,\n        \"name\": \"lb11\",\n        \"prices\": [\n          {\n            \"location\": \"fsn1\",\n            \"price_hourly\": {\n              \"gross\": \"1.1900000000000000\",\n              \"net\": \"1.0000000000\"\n            },\n            \"price_monthly\": {\n              \"gross\": \"1.1900000000000000\",\n              \"net\": \"1.0000000000\"\n            }\n          }\n        ]\n      },\n      \"location\": {\n        \"city\": \"Falkenstein\",\n        \"country\": \"DE\",\n        \"description\": \"Falkenstein DC Park 1\",\n        \"id\": 1,\n        \"latitude\": 50.47612,\n        \"longitude\": 12.370071,\n        \"name\": \"fsn1\",\n        \"network_zone\": \"eu-central\"\n      },\n      \"name\": \"my-resource\",\n      \"outgoing_traffic\": {{faker 'random.number'}},\n      \"private_net\": [\n        {\n          \"ip\": \"10.0.0.2\",\n          \"network\": 4711\n        }\n      ],\n      \"protection\": {\n        \"delete\": {{faker 'random.boolean'}}\n      },\n      \"public_net\": {\n        \"enabled\": {{faker 'random.boolean'}},\n        \"ipv4\": {\n          \"dns_ptr\": \"lb1.example.com\",\n          \"ip\": \"1.2.3.4\"\n        },\n        \"ipv6\": {\n          \"dns_ptr\": \"lb1.example.com\",\n          \"ip\": \"2001:db8::1\"\n        }\n      },\n      \"services\": [\n        {\n          \"destination_port\": 80,\n          \"health_check\": {\n            \"http\": {\n              \"domain\": \"example.com\",\n              \"path\": \"/\",\n              \"response\": \"{\\\"status\\\": \\\"ok\\\"}\",\n              \"status_codes\": [\n                \"2??\",\n                \"3??\"\n              ],\n              \"tls\": {{faker 'random.boolean'}}\n            },\n            \"interval\": 15,\n            \"port\": 4711,\n            \"protocol\": \"{{oneOf (array 'tcp' 'http')}}\",\n            \"retries\": 3,\n            \"timeout\": 10\n          },\n          \"http\": {\n            \"certificates\": [\n              897\n            ],\n            \"cookie_lifetime\": 300,\n            \"cookie_name\": \"HCLBSTICKY\",\n            \"redirect_http\": true,\n            \"sticky_sessions\": true\n          },\n          \"listen_port\": 443,\n          \"protocol\": \"{{oneOf (array 'tcp' 'http' 'https')}}\",\n          \"proxyprotocol\": {{faker 'random.boolean'}}\n        }\n      ],\n      \"targets\": [\n        {\n          \"health_status\": [\n            {\n              \"listen_port\": 443,\n              \"status\": \"healthy\"\n            }\n          ],\n          \"ip\": {\n            \"ip\": \"203.0.113.1\"\n          },\n          \"label_selector\": {\n            \"selector\": \"env=prod\"\n          },\n          \"server\": {\n            \"id\": 80\n          },\n          \"targets\": [\n            {\n              \"health_status\": [\n                {\n                  \"listen_port\": 443,\n                  \"status\": \"healthy\"\n                }\n              ],\n              \"server\": {\n                \"id\": 85\n              },\n              \"type\": \"server\",\n              \"use_private_ip\": {{faker 'random.boolean'}}\n            }\n          ],\n          \"type\": \"{{oneOf (array 'server' 'label_selector' 'ip')}}\",\n          \"use_private_ip\": {{faker 'random.boolean'}}\n        }\n      ]\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n      \"last_page\": 4,\n      \"next_page\": 4,\n      \"page\": 3,\n      \"per_page\": 25,\n      \"previous_page\": 2,\n      \"total_entries\": 100\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `load_balancers` key contains a list of Load Balancers",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d5d16f43-b082-4f30-b615-564b8040821d",
      "documentation": "Create a Load Balancer",
      "method": "post",
      "endpoint": "load_balancers",
      "responses": [
        {
          "uuid": "e59cf7d9-a33f-4c0e-85f7-6ec164d8d2b3",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  },\n  \"load_balancer\": {\n    \"algorithm\": {\n      \"type\": \"{{oneOf (array 'round_robin' 'least_connections')}}\"\n    },\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"included_traffic\": 10000,\n    \"ingoing_traffic\": {{faker 'random.number'}},\n    \"labels\": {},\n    \"load_balancer_type\": {\n      \"deprecated\": \"2016-01-30T23:50:00+00:00\",\n      \"description\": \"LB11\",\n      \"id\": 1,\n      \"max_assigned_certificates\": 10,\n      \"max_connections\": 20000,\n      \"max_services\": 5,\n      \"max_targets\": 25,\n      \"name\": \"lb11\",\n      \"prices\": [\n        {\n          \"location\": \"fsn1\",\n          \"price_hourly\": {\n            \"gross\": \"1.1900000000000000\",\n            \"net\": \"1.0000000000\"\n          },\n          \"price_monthly\": {\n            \"gross\": \"1.1900000000000000\",\n            \"net\": \"1.0000000000\"\n          }\n        }\n      ]\n    },\n    \"location\": {\n      \"city\": \"Falkenstein\",\n      \"country\": \"DE\",\n      \"description\": \"Falkenstein DC Park 1\",\n      \"id\": 1,\n      \"latitude\": 50.47612,\n      \"longitude\": 12.370071,\n      \"name\": \"fsn1\",\n      \"network_zone\": \"eu-central\"\n    },\n    \"name\": \"my-resource\",\n    \"outgoing_traffic\": {{faker 'random.number'}},\n    \"private_net\": [\n      {\n        \"ip\": \"10.0.0.2\",\n        \"network\": 4711\n      }\n    ],\n    \"protection\": {\n      \"delete\": {{faker 'random.boolean'}}\n    },\n    \"public_net\": {\n      \"enabled\": {{faker 'random.boolean'}},\n      \"ipv4\": {\n        \"dns_ptr\": \"lb1.example.com\",\n        \"ip\": \"1.2.3.4\"\n      },\n      \"ipv6\": {\n        \"dns_ptr\": \"lb1.example.com\",\n        \"ip\": \"2001:db8::1\"\n      }\n    },\n    \"services\": [\n      {\n        \"destination_port\": 80,\n        \"health_check\": {\n          \"http\": {\n            \"domain\": \"example.com\",\n            \"path\": \"/\",\n            \"response\": \"{\\\"status\\\": \\\"ok\\\"}\",\n            \"status_codes\": [\n              \"2??\",\n              \"3??\"\n            ],\n            \"tls\": {{faker 'random.boolean'}}\n          },\n          \"interval\": 15,\n          \"port\": 4711,\n          \"protocol\": \"{{oneOf (array 'tcp' 'http')}}\",\n          \"retries\": 3,\n          \"timeout\": 10\n        },\n        \"http\": {\n          \"certificates\": [\n            897\n          ],\n          \"cookie_lifetime\": 300,\n          \"cookie_name\": \"HCLBSTICKY\",\n          \"redirect_http\": true,\n          \"sticky_sessions\": true\n        },\n        \"listen_port\": 443,\n        \"protocol\": \"{{oneOf (array 'tcp' 'http' 'https')}}\",\n        \"proxyprotocol\": {{faker 'random.boolean'}}\n      }\n    ],\n    \"targets\": [\n      {\n        \"health_status\": [\n          {\n            \"listen_port\": 443,\n            \"status\": \"healthy\"\n          }\n        ],\n        \"ip\": {\n          \"ip\": \"203.0.113.1\"\n        },\n        \"label_selector\": {\n          \"selector\": \"env=prod\"\n        },\n        \"server\": {\n          \"id\": 80\n        },\n        \"targets\": [\n          {\n            \"health_status\": [\n              {\n                \"listen_port\": 443,\n                \"status\": \"healthy\"\n              }\n            ],\n            \"server\": {\n              \"id\": 85\n            },\n            \"type\": \"server\",\n            \"use_private_ip\": {{faker 'random.boolean'}}\n          }\n        ],\n        \"type\": \"{{oneOf (array 'server' 'label_selector' 'ip')}}\",\n        \"use_private_ip\": {{faker 'random.boolean'}}\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `load_balancer` key contains the Load Balancer that was just created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ebc3195f-0477-46e3-baf5-a33f84cd2a45",
      "documentation": "Delete a Load Balancer",
      "method": "delete",
      "endpoint": "load_balancers/:id",
      "responses": [
        {
          "uuid": "e2209f42-22db-40be-b44c-38515e5d1ffc",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Load Balancer deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f1e0c414-d165-40d0-bcec-1ab0c2af75b8",
      "documentation": "Get a Load Balancer",
      "method": "get",
      "endpoint": "load_balancers/:id",
      "responses": [
        {
          "uuid": "a8886336-f9dd-4761-8651-b0d20e383907",
          "body": "{\n  \"load_balancer\": {\n    \"algorithm\": {\n      \"type\": \"{{oneOf (array 'round_robin' 'least_connections')}}\"\n    },\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"included_traffic\": 10000,\n    \"ingoing_traffic\": {{faker 'random.number'}},\n    \"labels\": {},\n    \"load_balancer_type\": {\n      \"deprecated\": \"2016-01-30T23:50:00+00:00\",\n      \"description\": \"LB11\",\n      \"id\": 1,\n      \"max_assigned_certificates\": 10,\n      \"max_connections\": 20000,\n      \"max_services\": 5,\n      \"max_targets\": 25,\n      \"name\": \"lb11\",\n      \"prices\": [\n        {\n          \"location\": \"fsn1\",\n          \"price_hourly\": {\n            \"gross\": \"1.1900000000000000\",\n            \"net\": \"1.0000000000\"\n          },\n          \"price_monthly\": {\n            \"gross\": \"1.1900000000000000\",\n            \"net\": \"1.0000000000\"\n          }\n        }\n      ]\n    },\n    \"location\": {\n      \"city\": \"Falkenstein\",\n      \"country\": \"DE\",\n      \"description\": \"Falkenstein DC Park 1\",\n      \"id\": 1,\n      \"latitude\": 50.47612,\n      \"longitude\": 12.370071,\n      \"name\": \"fsn1\",\n      \"network_zone\": \"eu-central\"\n    },\n    \"name\": \"my-resource\",\n    \"outgoing_traffic\": {{faker 'random.number'}},\n    \"private_net\": [\n      {\n        \"ip\": \"10.0.0.2\",\n        \"network\": 4711\n      }\n    ],\n    \"protection\": {\n      \"delete\": {{faker 'random.boolean'}}\n    },\n    \"public_net\": {\n      \"enabled\": {{faker 'random.boolean'}},\n      \"ipv4\": {\n        \"dns_ptr\": \"lb1.example.com\",\n        \"ip\": \"1.2.3.4\"\n      },\n      \"ipv6\": {\n        \"dns_ptr\": \"lb1.example.com\",\n        \"ip\": \"2001:db8::1\"\n      }\n    },\n    \"services\": [\n      {\n        \"destination_port\": 80,\n        \"health_check\": {\n          \"http\": {\n            \"domain\": \"example.com\",\n            \"path\": \"/\",\n            \"response\": \"{\\\"status\\\": \\\"ok\\\"}\",\n            \"status_codes\": [\n              \"2??\",\n              \"3??\"\n            ],\n            \"tls\": {{faker 'random.boolean'}}\n          },\n          \"interval\": 15,\n          \"port\": 4711,\n          \"protocol\": \"{{oneOf (array 'tcp' 'http')}}\",\n          \"retries\": 3,\n          \"timeout\": 10\n        },\n        \"http\": {\n          \"certificates\": [\n            897\n          ],\n          \"cookie_lifetime\": 300,\n          \"cookie_name\": \"HCLBSTICKY\",\n          \"redirect_http\": true,\n          \"sticky_sessions\": true\n        },\n        \"listen_port\": 443,\n        \"protocol\": \"{{oneOf (array 'tcp' 'http' 'https')}}\",\n        \"proxyprotocol\": {{faker 'random.boolean'}}\n      }\n    ],\n    \"targets\": [\n      {\n        \"health_status\": [\n          {\n            \"listen_port\": 443,\n            \"status\": \"healthy\"\n          }\n        ],\n        \"ip\": {\n          \"ip\": \"203.0.113.1\"\n        },\n        \"label_selector\": {\n          \"selector\": \"env=prod\"\n        },\n        \"server\": {\n          \"id\": 80\n        },\n        \"targets\": [\n          {\n            \"health_status\": [\n              {\n                \"listen_port\": 443,\n                \"status\": \"healthy\"\n              }\n            ],\n            \"server\": {\n              \"id\": 85\n            },\n            \"type\": \"server\",\n            \"use_private_ip\": {{faker 'random.boolean'}}\n          }\n        ],\n        \"type\": \"{{oneOf (array 'server' 'label_selector' 'ip')}}\",\n        \"use_private_ip\": {{faker 'random.boolean'}}\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `load_balancer` key contains the Load Balancer",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ff27e38e-ec1e-4bef-9b3a-cf0124423c15",
      "documentation": "Update a Load Balancer",
      "method": "put",
      "endpoint": "load_balancers/:id",
      "responses": [
        {
          "uuid": "99733ed6-748e-4ef1-98cf-3652f151e5ed",
          "body": "{\n  \"load_balancer\": {\n    \"algorithm\": {\n      \"type\": \"{{oneOf (array 'round_robin' 'least_connections')}}\"\n    },\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"included_traffic\": 10000,\n    \"ingoing_traffic\": {{faker 'random.number'}},\n    \"labels\": {},\n    \"load_balancer_type\": {\n      \"deprecated\": \"2016-01-30T23:50:00+00:00\",\n      \"description\": \"LB11\",\n      \"id\": 1,\n      \"max_assigned_certificates\": 10,\n      \"max_connections\": 20000,\n      \"max_services\": 5,\n      \"max_targets\": 25,\n      \"name\": \"lb11\",\n      \"prices\": [\n        {\n          \"location\": \"fsn1\",\n          \"price_hourly\": {\n            \"gross\": \"1.1900000000000000\",\n            \"net\": \"1.0000000000\"\n          },\n          \"price_monthly\": {\n            \"gross\": \"1.1900000000000000\",\n            \"net\": \"1.0000000000\"\n          }\n        }\n      ]\n    },\n    \"location\": {\n      \"city\": \"Falkenstein\",\n      \"country\": \"DE\",\n      \"description\": \"Falkenstein DC Park 1\",\n      \"id\": 1,\n      \"latitude\": 50.47612,\n      \"longitude\": 12.370071,\n      \"name\": \"fsn1\",\n      \"network_zone\": \"eu-central\"\n    },\n    \"name\": \"my-resource\",\n    \"outgoing_traffic\": {{faker 'random.number'}},\n    \"private_net\": [\n      {\n        \"ip\": \"10.0.0.2\",\n        \"network\": 4711\n      }\n    ],\n    \"protection\": {\n      \"delete\": {{faker 'random.boolean'}}\n    },\n    \"public_net\": {\n      \"enabled\": {{faker 'random.boolean'}},\n      \"ipv4\": {\n        \"dns_ptr\": \"lb1.example.com\",\n        \"ip\": \"1.2.3.4\"\n      },\n      \"ipv6\": {\n        \"dns_ptr\": \"lb1.example.com\",\n        \"ip\": \"2001:db8::1\"\n      }\n    },\n    \"services\": [\n      {\n        \"destination_port\": 80,\n        \"health_check\": {\n          \"http\": {\n            \"domain\": \"example.com\",\n            \"path\": \"/\",\n            \"response\": \"{\\\"status\\\": \\\"ok\\\"}\",\n            \"status_codes\": [\n              \"2??\",\n              \"3??\"\n            ],\n            \"tls\": {{faker 'random.boolean'}}\n          },\n          \"interval\": 15,\n          \"port\": 4711,\n          \"protocol\": \"{{oneOf (array 'tcp' 'http')}}\",\n          \"retries\": 3,\n          \"timeout\": 10\n        },\n        \"http\": {\n          \"certificates\": [\n            897\n          ],\n          \"cookie_lifetime\": 300,\n          \"cookie_name\": \"HCLBSTICKY\",\n          \"redirect_http\": true,\n          \"sticky_sessions\": true\n        },\n        \"listen_port\": 443,\n        \"protocol\": \"{{oneOf (array 'tcp' 'http' 'https')}}\",\n        \"proxyprotocol\": {{faker 'random.boolean'}}\n      }\n    ],\n    \"targets\": [\n      {\n        \"health_status\": [\n          {\n            \"listen_port\": 443,\n            \"status\": \"healthy\"\n          }\n        ],\n        \"ip\": {\n          \"ip\": \"203.0.113.1\"\n        },\n        \"label_selector\": {\n          \"selector\": \"env=prod\"\n        },\n        \"server\": {\n          \"id\": 80\n        },\n        \"targets\": [\n          {\n            \"health_status\": [\n              {\n                \"listen_port\": 443,\n                \"status\": \"healthy\"\n              }\n            ],\n            \"server\": {\n              \"id\": 85\n            },\n            \"type\": \"server\",\n            \"use_private_ip\": {{faker 'random.boolean'}}\n          }\n        ],\n        \"type\": \"{{oneOf (array 'server' 'label_selector' 'ip')}}\",\n        \"use_private_ip\": {{faker 'random.boolean'}}\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `load_balancer` key contains the updated Load Balancer",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b3b9b627-2fe9-4d0a-ba74-40f21dc37b53",
      "documentation": "Get all Actions for a Load Balancer",
      "method": "get",
      "endpoint": "load_balancers/:id/actions",
      "responses": [
        {
          "uuid": "a867a457-1c61-42c2-9d24-7d54525952ba",
          "body": "{\n  \"actions\": [\n    {\n      \"command\": \"start_server\",\n      \"error\": {\n        \"code\": \"action_failed\",\n        \"message\": \"Action failed\"\n      },\n      \"finished\": \"2016-01-30T23:55:00+00:00\",\n      \"id\": 42,\n      \"progress\": 100,\n      \"resources\": [\n        {\n          \"id\": 42,\n          \"type\": \"server\"\n        }\n      ],\n      \"started\": \"2016-01-30T23:55:00+00:00\",\n      \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n      \"last_page\": 4,\n      \"next_page\": 4,\n      \"page\": 3,\n      \"per_page\": 25,\n      \"previous_page\": 2,\n      \"total_entries\": 100\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `actions` key contains a list of Actions",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d251b8e5-eb94-45c9-afc4-5b6990cc37b3",
      "documentation": "Add Service",
      "method": "post",
      "endpoint": "load_balancers/:id/actions/add_service",
      "responses": [
        {
          "uuid": "bcf802e9-252f-45fb-a9a1-7c905069441b",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `add_service` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7de6065b-a332-4b44-90ae-e1ac800bacca",
      "documentation": "Add Target",
      "method": "post",
      "endpoint": "load_balancers/:id/actions/add_target",
      "responses": [
        {
          "uuid": "a3623880-3e48-4c36-9ccf-432a8ac5d7ca",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `add_target` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cf8997c4-440a-4ef5-8931-8a912426d6c5",
      "documentation": "Attach a Load Balancer to a Network",
      "method": "post",
      "endpoint": "load_balancers/:id/actions/attach_to_network",
      "responses": [
        {
          "uuid": "4a4c4ef3-765b-4ed8-8f0b-db41275f763d",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `attach_to_network` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3f3cb373-965e-4546-b679-5ce920174840",
      "documentation": "Change Algorithm",
      "method": "post",
      "endpoint": "load_balancers/:id/actions/change_algorithm",
      "responses": [
        {
          "uuid": "0104fa09-2d55-440f-b989-170060fea42e",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `change_algorithm` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2f8b8c7d-e298-4edc-99c8-896dd5da316e",
      "documentation": "Change reverse DNS entry for this Load Balancer",
      "method": "post",
      "endpoint": "load_balancers/:id/actions/change_dns_ptr",
      "responses": [
        {
          "uuid": "4c0be67d-6c01-4074-91f7-6c3a94f95521",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key in the reply contains an Action object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "aade82c0-83d6-4c06-8944-cd644377ea91",
      "documentation": "Change Load Balancer Protection",
      "method": "post",
      "endpoint": "load_balancers/:id/actions/change_protection",
      "responses": [
        {
          "uuid": "78178a7a-cec2-4760-a146-b28547514525",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `change_protection` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1bf11ab4-9824-4dfe-a3de-2666a6495473",
      "documentation": "Change the Type of a Load Balancer",
      "method": "post",
      "endpoint": "load_balancers/:id/actions/change_type",
      "responses": [
        {
          "uuid": "ff1e4e90-559f-4a35-841e-c6508a4d66af",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `change_load_balancer_type` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "32a64d97-f5ee-4740-bc43-e08c4625b814",
      "documentation": "Delete Service",
      "method": "post",
      "endpoint": "load_balancers/:id/actions/delete_service",
      "responses": [
        {
          "uuid": "9bde3646-a8de-4a4e-a066-e8d217255530",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `delete_service` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "759792b1-82d3-4a72-bcaa-bab8d708cb4d",
      "documentation": "Detach a Load Balancer from a Network",
      "method": "post",
      "endpoint": "load_balancers/:id/actions/detach_from_network",
      "responses": [
        {
          "uuid": "2a8403b5-1ef3-44a9-b45f-2ad264ce9dfe",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `detach_from_network` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5ab2d7f1-6a99-46ac-ba62-7bca818547db",
      "documentation": "Disable the public interface of a Load Balancer",
      "method": "post",
      "endpoint": "load_balancers/:id/actions/disable_public_interface",
      "responses": [
        {
          "uuid": "5d30839e-c9a9-4722-a61c-63ddb6aa0ca1",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `disable_public_interface` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fc6c9c87-8abf-438d-8d8b-a21858d6dc73",
      "documentation": "Enable the public interface of a Load Balancer",
      "method": "post",
      "endpoint": "load_balancers/:id/actions/enable_public_interface",
      "responses": [
        {
          "uuid": "96136137-68b7-40e8-a5d0-bec7890862a4",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `enable_public_interface` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3ffa9c03-e0a0-43b3-b8c0-4baac2c292c1",
      "documentation": "Remove Target",
      "method": "post",
      "endpoint": "load_balancers/:id/actions/remove_target",
      "responses": [
        {
          "uuid": "476ccd3e-1ed3-4aa2-be24-5cf6cd5ce16f",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `remove_target` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "54093075-caf0-4f06-aeb0-1d3fbce0e214",
      "documentation": "Update Service",
      "method": "post",
      "endpoint": "load_balancers/:id/actions/update_service",
      "responses": [
        {
          "uuid": "27c14a78-9cd2-4647-9406-1694f398d2e1",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `update_service` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "208919a4-96b6-4eb4-8e76-88aa6ea895ea",
      "documentation": "Get an Action for a Load Balancer",
      "method": "get",
      "endpoint": "load_balancers/:id/actions/:action_id",
      "responses": [
        {
          "uuid": "bc997055-07c9-4654-be89-8ba89bb43724",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `action` key contains the Load Balancer Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "146fb8c5-87e5-417f-a66e-40833ae7886a",
      "documentation": "Get Metrics for a LoadBalancer",
      "method": "get",
      "endpoint": "load_balancers/:id/metrics",
      "responses": [
        {
          "uuid": "f1c2f96c-2544-4e53-a9e5-982f626913c1",
          "body": "{\n  \"metrics\": {\n    \"end\": \"2017-01-01T23:00:00+00:00\",\n    \"start\": \"2017-01-01T00:00:00+00:00\",\n    \"step\": 60,\n    \"time_series\": {\n      \"name_of_timeseries\": {\n        \"values\": [\n          [\n            1435781470.622,\n            \"42\"\n          ],\n          [\n            1435781471.622,\n            \"43\"\n          ]\n        ]\n      }\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `metrics` key in the reply contains a metrics object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a6d933d7-2702-4261-8c09-8393b6e47147",
      "documentation": "Get all Locations",
      "method": "get",
      "endpoint": "locations",
      "responses": [
        {
          "uuid": "d099913d-3c05-401b-aab5-0035f8ac457c",
          "body": "{\n  \"locations\": [\n    {\n      \"city\": \"Falkenstein\",\n      \"country\": \"DE\",\n      \"description\": \"Falkenstein DC Park 1\",\n      \"id\": 1,\n      \"latitude\": 50.47612,\n      \"longitude\": 12.370071,\n      \"name\": \"fsn1\",\n      \"network_zone\": \"eu-central\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `locations` key in the reply contains an array of Location objects with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fa99ac6e-6893-4830-b42f-477d6bef74a9",
      "documentation": "Get a Location",
      "method": "get",
      "endpoint": "locations/:id",
      "responses": [
        {
          "uuid": "48b6b2a8-b436-4cc3-976b-2e6b4a11c3c3",
          "body": "{\n  \"location\": {\n    \"city\": \"Falkenstein\",\n    \"country\": \"DE\",\n    \"description\": \"Falkenstein DC Park 1\",\n    \"id\": 1,\n    \"latitude\": 50.47612,\n    \"longitude\": 12.370071,\n    \"name\": \"fsn1\",\n    \"network_zone\": \"eu-central\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `location` key in the reply contains a Location object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c3579fa2-0736-4e5f-b32a-ad8571038957",
      "documentation": "Get all Networks",
      "method": "get",
      "endpoint": "networks",
      "responses": [
        {
          "uuid": "75ea2e2d-8404-4e7c-8450-6c72f6df0914",
          "body": "{\n  \"meta\": {\n    \"pagination\": {\n      \"last_page\": 4,\n      \"next_page\": 4,\n      \"page\": 3,\n      \"per_page\": 25,\n      \"previous_page\": 2,\n      \"total_entries\": 100\n    }\n  },\n  \"networks\": [\n    {\n      \"created\": \"2016-01-30T23:50:00+00:00\",\n      \"id\": 4711,\n      \"ip_range\": \"10.0.0.0/16\",\n      \"labels\": {},\n      \"load_balancers\": [\n        42\n      ],\n      \"name\": \"mynet\",\n      \"protection\": {\n        \"delete\": {{faker 'random.boolean'}}\n      },\n      \"routes\": [\n        {\n          \"destination\": \"10.100.1.0/24\",\n          \"gateway\": \"10.0.1.1\"\n        }\n      ],\n      \"servers\": [\n        42\n      ],\n      \"subnets\": [\n        {\n          \"gateway\": \"10.0.0.1\",\n          \"ip_range\": \"10.0.1.0/24\",\n          \"network_zone\": \"eu-central\",\n          \"type\": \"{{oneOf (array 'cloud' 'server' 'vswitch')}}\"\n        }\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `networks` key contains a list of networks",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2c11e8c0-bb55-493a-b1aa-b96de1f6c48a",
      "documentation": "Create a Network",
      "method": "post",
      "endpoint": "networks",
      "responses": [
        {
          "uuid": "a0523bf4-6673-4437-b683-02c5170a9ec8",
          "body": "{\n  \"network\": {\n    \"created\": \"2016-01-30T23:50:00+00:00\",\n    \"id\": 4711,\n    \"ip_range\": \"10.0.0.0/16\",\n    \"labels\": {},\n    \"load_balancers\": [\n      42\n    ],\n    \"name\": \"mynet\",\n    \"protection\": {\n      \"delete\": {{faker 'random.boolean'}}\n    },\n    \"routes\": [\n      {\n        \"destination\": \"10.100.1.0/24\",\n        \"gateway\": \"10.0.1.1\"\n      }\n    ],\n    \"servers\": [\n      42\n    ],\n    \"subnets\": [\n      {\n        \"gateway\": \"10.0.0.1\",\n        \"ip_range\": \"10.0.1.0/24\",\n        \"network_zone\": \"eu-central\",\n        \"type\": \"{{oneOf (array 'cloud' 'server' 'vswitch')}}\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `network` key contains the network that was just created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7aa86595-9ea9-4f18-817b-b09486f0fb3f",
      "documentation": "Delete a Network",
      "method": "delete",
      "endpoint": "networks/:id",
      "responses": [
        {
          "uuid": "66698cb4-8dec-43f2-9c5b-caa112e98002",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Network deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "11634854-023c-4c97-ab49-c86da9b00b86",
      "documentation": "Get a Network",
      "method": "get",
      "endpoint": "networks/:id",
      "responses": [
        {
          "uuid": "d92d6fa6-4219-45b3-b6f6-03bab8837e5a",
          "body": "{\n  \"network\": {\n    \"created\": \"2016-01-30T23:50:00+00:00\",\n    \"id\": 4711,\n    \"ip_range\": \"10.0.0.0/16\",\n    \"labels\": {},\n    \"load_balancers\": [\n      42\n    ],\n    \"name\": \"mynet\",\n    \"protection\": {\n      \"delete\": {{faker 'random.boolean'}}\n    },\n    \"routes\": [\n      {\n        \"destination\": \"10.100.1.0/24\",\n        \"gateway\": \"10.0.1.1\"\n      }\n    ],\n    \"servers\": [\n      42\n    ],\n    \"subnets\": [\n      {\n        \"gateway\": \"10.0.0.1\",\n        \"ip_range\": \"10.0.1.0/24\",\n        \"network_zone\": \"eu-central\",\n        \"type\": \"{{oneOf (array 'cloud' 'server' 'vswitch')}}\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `network` key contains the network",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ff232f34-a2ef-40d1-bc1b-f370554fd6f8",
      "documentation": "Update a Network",
      "method": "put",
      "endpoint": "networks/:id",
      "responses": [
        {
          "uuid": "79189803-4723-4f9e-9d9d-40b37910de06",
          "body": "{\n  \"network\": {\n    \"created\": \"2016-01-30T23:50:00+00:00\",\n    \"id\": 4711,\n    \"ip_range\": \"10.0.0.0/16\",\n    \"labels\": {},\n    \"load_balancers\": [\n      42\n    ],\n    \"name\": \"mynet\",\n    \"protection\": {\n      \"delete\": {{faker 'random.boolean'}}\n    },\n    \"routes\": [\n      {\n        \"destination\": \"10.100.1.0/24\",\n        \"gateway\": \"10.0.1.1\"\n      }\n    ],\n    \"servers\": [\n      42\n    ],\n    \"subnets\": [\n      {\n        \"gateway\": \"10.0.0.1\",\n        \"ip_range\": \"10.0.1.0/24\",\n        \"network_zone\": \"eu-central\",\n        \"type\": \"{{oneOf (array 'cloud' 'server' 'vswitch')}}\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `network` key contains the updated network",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8d130f30-c534-4b8b-bb6b-1279c547cac6",
      "documentation": "Get all Actions for a Network",
      "method": "get",
      "endpoint": "networks/:id/actions",
      "responses": [
        {
          "uuid": "8dae4585-8a75-4d58-9dca-798f04922102",
          "body": "{\n  \"actions\": [\n    {\n      \"command\": \"start_server\",\n      \"error\": {\n        \"code\": \"action_failed\",\n        \"message\": \"Action failed\"\n      },\n      \"finished\": \"2016-01-30T23:55:00+00:00\",\n      \"id\": 42,\n      \"progress\": 100,\n      \"resources\": [\n        {\n          \"id\": 42,\n          \"type\": \"server\"\n        }\n      ],\n      \"started\": \"2016-01-30T23:55:00+00:00\",\n      \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n      \"last_page\": 4,\n      \"next_page\": 4,\n      \"page\": 3,\n      \"per_page\": 25,\n      \"previous_page\": 2,\n      \"total_entries\": 100\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `actions` key contains a list of Actions",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f0ba181d-41b1-4d7c-a255-9f5596a47eb6",
      "documentation": "Add a route to a Network",
      "method": "post",
      "endpoint": "networks/:id/actions/add_route",
      "responses": [
        {
          "uuid": "55c4c825-a5f4-4afe-bc02-86c140822921",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `add_route` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7dd9eba1-a58b-4680-9830-92cf745db7da",
      "documentation": "Add a subnet to a Network",
      "method": "post",
      "endpoint": "networks/:id/actions/add_subnet",
      "responses": [
        {
          "uuid": "e521a171-0b3a-418b-8bfa-d78e22d496fb",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `add_subnet` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5955c9f1-9edd-4710-aa8c-dd1006375886",
      "documentation": "Change IP range of a Network",
      "method": "post",
      "endpoint": "networks/:id/actions/change_ip_range",
      "responses": [
        {
          "uuid": "7cd9a862-5908-4c48-a368-98f6dcccdd48",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `change_ip_range` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b18dc006-2197-4ba0-9161-a16f3e2c1f1c",
      "documentation": "Change Network Protection",
      "method": "post",
      "endpoint": "networks/:id/actions/change_protection",
      "responses": [
        {
          "uuid": "fa214315-9d65-40eb-b32f-378f036be982",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `change_protection` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7279e044-84ab-4baf-8505-8cc9bb03c103",
      "documentation": "Delete a route from a Network",
      "method": "post",
      "endpoint": "networks/:id/actions/delete_route",
      "responses": [
        {
          "uuid": "d1084680-deba-49bf-941b-30483e92278c",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `delete_route` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6cae3fc1-824f-41ea-bb83-39ead46be1da",
      "documentation": "Delete a subnet from a Network",
      "method": "post",
      "endpoint": "networks/:id/actions/delete_subnet",
      "responses": [
        {
          "uuid": "057cd904-379b-496b-8aa3-1a55c4b19150",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `delete_subnet` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "455e768f-1571-4e49-a99b-cfb66b28bc19",
      "documentation": "Get an Action for a Network",
      "method": "get",
      "endpoint": "networks/:id/actions/:action_id",
      "responses": [
        {
          "uuid": "9dbcdc4a-655b-48d3-b8ef-c8ecddef2fa8",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `action` key contains the Network Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "74c58dea-50df-4a9f-8784-271c649e47b5",
      "documentation": "Get all PlacementGroups",
      "method": "get",
      "endpoint": "placement_groups",
      "responses": [
        {
          "uuid": "3a1997d3-39cd-44a1-b66e-3efade1148fe",
          "body": "{\n  \"meta\": {\n    \"pagination\": {\n      \"last_page\": 4,\n      \"next_page\": 4,\n      \"page\": 3,\n      \"per_page\": 25,\n      \"previous_page\": 2,\n      \"total_entries\": 100\n    }\n  },\n  \"placement_groups\": [\n    {\n      \"created\": \"2016-01-30T23:55:00+00:00\",\n      \"id\": 42,\n      \"labels\": {},\n      \"name\": \"my-resource\",\n      \"servers\": [\n        42\n      ],\n      \"type\": \"{{oneOf (array 'spread')}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `placement_groups` key contains an array of PlacementGroup objects",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9b1f7a93-bb86-433a-a0fa-95862554a56c",
      "documentation": "Create a PlacementGroup",
      "method": "post",
      "endpoint": "placement_groups",
      "responses": [
        {
          "uuid": "b1de2cb7-1713-4e00-bb1c-2aa23d2c0ba8",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  },\n  \"placement_group\": {\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"labels\": {},\n    \"name\": \"my-resource\",\n    \"servers\": [\n      42\n    ],\n    \"type\": \"{{oneOf (array 'spread')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `PlacementGroup` key contains the PlacementGroup that was just created.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6a65e652-7e95-4a51-8854-bdb1f05e1a65",
      "documentation": "Delete a PlacementGroup",
      "method": "delete",
      "endpoint": "placement_groups/:id",
      "responses": [
        {
          "uuid": "7e01c51e-c540-400c-ab81-5d19228735e8",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "PlacementGroup deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4ac8809e-9344-41c0-a39f-c5fb0435bbd8",
      "documentation": "Get a PlacementGroup",
      "method": "get",
      "endpoint": "placement_groups/:id",
      "responses": [
        {
          "uuid": "11d8d81e-c8dd-4624-ab89-1a8a16f396e6",
          "body": "{\n  \"placement_group\": {\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"labels\": {},\n    \"name\": \"my-resource\",\n    \"servers\": [\n      42\n    ],\n    \"type\": \"{{oneOf (array 'spread')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `placement_group` key contains a PlacementGroup object",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "eea9389a-d2a2-4659-afa8-79ed69d7f886",
      "documentation": "Update a PlacementGroup",
      "method": "put",
      "endpoint": "placement_groups/:id",
      "responses": [
        {
          "uuid": "b86c7c7b-fc23-460a-a03d-3b9e612a8f41",
          "body": "{\n  \"placement_group\": {\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"labels\": {},\n    \"name\": \"my-resource\",\n    \"servers\": [\n      42\n    ],\n    \"type\": \"{{oneOf (array 'spread')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `certificate` key contains the PlacementGroup that was just updated",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8db61cd3-fb22-4348-8b78-ca4ffb2df9c1",
      "documentation": "Get all prices",
      "method": "get",
      "endpoint": "pricing",
      "responses": [
        {
          "uuid": "19ff2b59-5fb4-42f0-a7a6-38e6f2b4a662",
          "body": "{\n  \"pricing\": {\n    \"currency\": \"EUR\",\n    \"floating_ip\": {\n      \"price_monthly\": {\n        \"gross\": \"1.1900000000000000\",\n        \"net\": \"1.0000000000\"\n      }\n    },\n    \"floating_ips\": [\n      {\n        \"prices\": [\n          {\n            \"location\": \"fsn1\",\n            \"price_monthly\": {\n              \"gross\": \"1.1900000000000000\",\n              \"net\": \"1.0000000000\"\n            }\n          }\n        ],\n        \"type\": \"{{oneOf (array 'ipv4' 'ipv6')}}\"\n      }\n    ],\n    \"image\": {\n      \"price_per_gb_month\": {\n        \"gross\": \"1.1900000000000000\",\n        \"net\": \"1.0000000000\"\n      }\n    },\n    \"load_balancer_types\": [\n      {\n        \"id\": 1,\n        \"name\": \"lb11\",\n        \"prices\": [\n          {\n            \"location\": \"fsn1\",\n            \"price_hourly\": {\n              \"gross\": \"1.1900000000000000\",\n              \"net\": \"1.0000000000\"\n            },\n            \"price_monthly\": {\n              \"gross\": \"1.1900000000000000\",\n              \"net\": \"1.0000000000\"\n            }\n          }\n        ]\n      }\n    ],\n    \"server_backup\": {\n      \"percentage\": \"20.0000000000\"\n    },\n    \"server_types\": [\n      {\n        \"id\": 4,\n        \"name\": \"cx11\",\n        \"prices\": [\n          {\n            \"location\": \"fsn1\",\n            \"price_hourly\": {\n              \"gross\": \"1.1900000000000000\",\n              \"net\": \"1.0000000000\"\n            },\n            \"price_monthly\": {\n              \"gross\": \"1.1900000000000000\",\n              \"net\": \"1.0000000000\"\n            }\n          }\n        ]\n      }\n    ],\n    \"traffic\": {\n      \"price_per_tb\": {\n        \"gross\": \"1.1900000000000000\",\n        \"net\": \"1.0000000000\"\n      }\n    },\n    \"vat_rate\": \"19.000000\",\n    \"volume\": {\n      \"price_per_gb_month\": {\n        \"gross\": \"1.1900000000000000\",\n        \"net\": \"1.0000000000\"\n      }\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `pricing` key in the reply contains an pricing object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "88b50144-43f6-4960-93af-bee2f8adf280",
      "documentation": "Get all Server Types",
      "method": "get",
      "endpoint": "server_types",
      "responses": [
        {
          "uuid": "855d0084-42a0-4cae-a040-2653ffb277a7",
          "body": "{\n  \"server_types\": [\n    {\n      \"cores\": 1,\n      \"cpu_type\": \"{{oneOf (array 'shared' 'dedicated')}}\",\n      \"deprecated\": {{faker 'random.boolean'}},\n      \"description\": \"CX11\",\n      \"disk\": 24,\n      \"id\": 1,\n      \"memory\": 1,\n      \"name\": \"cx11\",\n      \"prices\": [\n        {\n          \"location\": \"fsn1\",\n          \"price_hourly\": {\n            \"gross\": \"1.1900000000000000\",\n            \"net\": \"1.0000000000\"\n          },\n          \"price_monthly\": {\n            \"gross\": \"1.1900000000000000\",\n            \"net\": \"1.0000000000\"\n          }\n        }\n      ],\n      \"storage_type\": \"{{oneOf (array 'local' 'network')}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `server_types` key in the reply contains an array of Server type objects with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6870891c-8073-47bb-ae69-a9c4be6aac59",
      "documentation": "Get a Server Type",
      "method": "get",
      "endpoint": "server_types/:id",
      "responses": [
        {
          "uuid": "66b73e76-0208-4dc5-9adc-2022754343a2",
          "body": "{\n  \"server_type\": {\n    \"cores\": 1,\n    \"cpu_type\": \"{{oneOf (array 'shared' 'dedicated')}}\",\n    \"deprecated\": {{faker 'random.boolean'}},\n    \"description\": \"CX11\",\n    \"disk\": 24,\n    \"id\": 1,\n    \"memory\": 1,\n    \"name\": \"cx11\",\n    \"prices\": [\n      {\n        \"location\": \"fsn1\",\n        \"price_hourly\": {\n          \"gross\": \"1.1900000000000000\",\n          \"net\": \"1.0000000000\"\n        },\n        \"price_monthly\": {\n          \"gross\": \"1.1900000000000000\",\n          \"net\": \"1.0000000000\"\n        }\n      }\n    ],\n    \"storage_type\": \"{{oneOf (array 'local' 'network')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `server_type` key in the reply contains a Server type object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d40f1084-5c65-4d6a-9f10-0b8ed707c4f7",
      "documentation": "Get all Servers",
      "method": "get",
      "endpoint": "servers",
      "responses": [
        {
          "uuid": "1cfc1f20-bad0-4f99-9b8a-a051b50b8b51",
          "body": "{\n  \"meta\": {\n    \"pagination\": {\n      \"last_page\": 4,\n      \"next_page\": 4,\n      \"page\": 3,\n      \"per_page\": 25,\n      \"previous_page\": 2,\n      \"total_entries\": 100\n    }\n  },\n  \"servers\": [\n    {\n      \"backup_window\": \"22-02\",\n      \"created\": \"2016-01-30T23:55:00+00:00\",\n      \"datacenter\": {\n        \"description\": \"Falkenstein DC Park 8\",\n        \"id\": 42,\n        \"location\": {\n          \"city\": \"Falkenstein\",\n          \"country\": \"DE\",\n          \"description\": \"Falkenstein DC Park 1\",\n          \"id\": 1,\n          \"latitude\": 50.47612,\n          \"longitude\": 12.370071,\n          \"name\": \"fsn1\",\n          \"network_zone\": \"eu-central\"\n        },\n        \"name\": \"fsn1-dc8\",\n        \"server_types\": {\n          \"available\": [\n            1,\n            2,\n            3\n          ],\n          \"available_for_migration\": [\n            1,\n            2,\n            3\n          ],\n          \"supported\": [\n            1,\n            2,\n            3\n          ]\n        }\n      },\n      \"id\": 42,\n      \"image\": {\n        \"bound_to\": {{faker 'random.number'}},\n        \"build_id\": \"c313fe40383af26094a5a92026054320ab55abc7\",\n        \"created\": \"2016-01-30T23:55:00+00:00\",\n        \"created_from\": {\n          \"id\": 1,\n          \"name\": \"Server\"\n        },\n        \"deleted\": \"\",\n        \"deprecated\": \"2018-02-28T00:00:00+00:00\",\n        \"description\": \"Ubuntu 20.04 Standard 64 bit\",\n        \"disk_size\": 10,\n        \"id\": 42,\n        \"image_size\": 2.3,\n        \"labels\": {},\n        \"name\": \"ubuntu-20.04\",\n        \"os_flavor\": \"{{oneOf (array 'ubuntu' 'centos' 'debian' 'fedora' 'unknown')}}\",\n        \"os_version\": \"20.04\",\n        \"protection\": {\n          \"delete\": {{faker 'random.boolean'}}\n        },\n        \"rapid_deploy\": {{faker 'random.boolean'}},\n        \"status\": \"{{oneOf (array 'available' 'creating' 'unavailable')}}\",\n        \"type\": \"{{oneOf (array 'system' 'app' 'snapshot' 'backup' 'temporary')}}\"\n      },\n      \"included_traffic\": 654321,\n      \"ingoing_traffic\": 123456,\n      \"iso\": {\n        \"deprecated\": \"2018-02-28T00:00:00+00:00\",\n        \"description\": \"FreeBSD 11.0 x64\",\n        \"id\": 42,\n        \"name\": \"FreeBSD-11.0-RELEASE-amd64-dvd1\",\n        \"type\": \"{{oneOf (array 'public' 'private')}}\"\n      },\n      \"labels\": {},\n      \"load_balancers\": [\n        {{faker 'random.number'}}\n      ],\n      \"locked\": {{faker 'random.boolean'}},\n      \"name\": \"my-resource\",\n      \"outgoing_traffic\": 123456,\n      \"placement_group\": {\n        \"created\": \"2016-01-30T23:55:00+00:00\",\n        \"id\": 42,\n        \"labels\": {},\n        \"name\": \"my-resource\",\n        \"servers\": [\n          42\n        ],\n        \"type\": \"{{oneOf (array 'spread')}}\"\n      },\n      \"primary_disk_size\": 50,\n      \"private_net\": [\n        {\n          \"alias_ips\": [\n            \"\"\n          ],\n          \"ip\": \"10.0.0.2\",\n          \"mac_address\": \"86:00:ff:2a:7d:e1\",\n          \"network\": 4711\n        }\n      ],\n      \"protection\": {\n        \"delete\": {{faker 'random.boolean'}},\n        \"rebuild\": {{faker 'random.boolean'}}\n      },\n      \"public_net\": {\n        \"firewalls\": [\n          {\n            \"id\": 42,\n            \"status\": \"{{oneOf (array 'applied' 'pending')}}\"\n          }\n        ],\n        \"floating_ips\": [\n          478\n        ],\n        \"ipv4\": {\n          \"blocked\": {{faker 'random.boolean'}},\n          \"dns_ptr\": \"server01.example.com\",\n          \"ip\": \"1.2.3.4\"\n        },\n        \"ipv6\": {\n          \"blocked\": {{faker 'random.boolean'}},\n          \"dns_ptr\": [\n            {\n              \"dns_ptr\": \"server.example.com\",\n              \"ip\": \"2001:db8::1\"\n            }\n          ],\n          \"ip\": \"2001:db8::/64\"\n        }\n      },\n      \"rescue_enabled\": {{faker 'random.boolean'}},\n      \"server_type\": {\n        \"cores\": 1,\n        \"cpu_type\": \"{{oneOf (array 'shared' 'dedicated')}}\",\n        \"deprecated\": {{faker 'random.boolean'}},\n        \"description\": \"CX11\",\n        \"disk\": 25,\n        \"id\": 1,\n        \"memory\": 1,\n        \"name\": \"cx11\",\n        \"prices\": [\n          {\n            \"location\": \"fsn1\",\n            \"price_hourly\": {\n              \"gross\": \"1.1900000000000000\",\n              \"net\": \"1.0000000000\"\n            },\n            \"price_monthly\": {\n              \"gross\": \"1.1900000000000000\",\n              \"net\": \"1.0000000000\"\n            }\n          }\n        ],\n        \"storage_type\": \"{{oneOf (array 'local' 'network')}}\"\n      },\n      \"status\": \"{{oneOf (array 'running' 'initializing' 'starting' 'stopping' 'off' 'deleting' 'migrating' 'rebuilding' 'unknown')}}\",\n      \"volumes\": [\n        {{faker 'random.number'}}\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A paged array of servers",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "x-next",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "35ec0544-05eb-4106-b0b4-6d256acde89e",
      "documentation": "Create a Server",
      "method": "post",
      "endpoint": "servers",
      "responses": [
        {
          "uuid": "1ccab106-7695-4653-b4fe-c9111aace801",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  },\n  \"next_actions\": [\n    {\n      \"command\": \"start_server\",\n      \"error\": {\n        \"code\": \"action_failed\",\n        \"message\": \"Action failed\"\n      },\n      \"finished\": \"2016-01-30T23:55:00+00:00\",\n      \"id\": 42,\n      \"progress\": 100,\n      \"resources\": [\n        {\n          \"id\": 42,\n          \"type\": \"server\"\n        }\n      ],\n      \"started\": \"2016-01-30T23:55:00+00:00\",\n      \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n    }\n  ],\n  \"root_password\": \"YItygq1v3GYjjMomLaKc\",\n  \"server\": {\n    \"backup_window\": \"22-02\",\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"datacenter\": {\n      \"description\": \"Falkenstein DC Park 8\",\n      \"id\": 42,\n      \"location\": {\n        \"city\": \"Falkenstein\",\n        \"country\": \"DE\",\n        \"description\": \"Falkenstein DC Park 1\",\n        \"id\": 1,\n        \"latitude\": 50.47612,\n        \"longitude\": 12.370071,\n        \"name\": \"fsn1\",\n        \"network_zone\": \"eu-central\"\n      },\n      \"name\": \"fsn1-dc8\",\n      \"server_types\": {\n        \"available\": [\n          1,\n          2,\n          3\n        ],\n        \"available_for_migration\": [\n          1,\n          2,\n          3\n        ],\n        \"supported\": [\n          1,\n          2,\n          3\n        ]\n      }\n    },\n    \"id\": 42,\n    \"image\": {\n      \"bound_to\": {{faker 'random.number'}},\n      \"build_id\": \"c313fe40383af26094a5a92026054320ab55abc7\",\n      \"created\": \"2016-01-30T23:55:00+00:00\",\n      \"created_from\": {\n        \"id\": 1,\n        \"name\": \"Server\"\n      },\n      \"deleted\": \"\",\n      \"deprecated\": \"2018-02-28T00:00:00+00:00\",\n      \"description\": \"Ubuntu 20.04 Standard 64 bit\",\n      \"disk_size\": 10,\n      \"id\": 42,\n      \"image_size\": 2.3,\n      \"labels\": {},\n      \"name\": \"ubuntu-20.04\",\n      \"os_flavor\": \"{{oneOf (array 'ubuntu' 'centos' 'debian' 'fedora' 'unknown')}}\",\n      \"os_version\": \"20.04\",\n      \"protection\": {\n        \"delete\": {{faker 'random.boolean'}}\n      },\n      \"rapid_deploy\": {{faker 'random.boolean'}},\n      \"status\": \"{{oneOf (array 'available' 'creating' 'unavailable')}}\",\n      \"type\": \"{{oneOf (array 'system' 'app' 'snapshot' 'backup' 'temporary')}}\"\n    },\n    \"included_traffic\": 654321,\n    \"ingoing_traffic\": 123456,\n    \"iso\": {\n      \"deprecated\": \"2018-02-28T00:00:00+00:00\",\n      \"description\": \"FreeBSD 11.0 x64\",\n      \"id\": 42,\n      \"name\": \"FreeBSD-11.0-RELEASE-amd64-dvd1\",\n      \"type\": \"{{oneOf (array 'public' 'private')}}\"\n    },\n    \"labels\": {},\n    \"load_balancers\": [\n      {{faker 'random.number'}}\n    ],\n    \"locked\": {{faker 'random.boolean'}},\n    \"name\": \"my-resource\",\n    \"outgoing_traffic\": 123456,\n    \"placement_group\": {\n      \"created\": \"2016-01-30T23:55:00+00:00\",\n      \"id\": 42,\n      \"labels\": {},\n      \"name\": \"my-resource\",\n      \"servers\": [\n        42\n      ],\n      \"type\": \"{{oneOf (array 'spread')}}\"\n    },\n    \"primary_disk_size\": 50,\n    \"private_net\": [\n      {\n        \"alias_ips\": [\n          \"\"\n        ],\n        \"ip\": \"10.0.0.2\",\n        \"mac_address\": \"86:00:ff:2a:7d:e1\",\n        \"network\": 4711\n      }\n    ],\n    \"protection\": {\n      \"delete\": {{faker 'random.boolean'}},\n      \"rebuild\": {{faker 'random.boolean'}}\n    },\n    \"public_net\": {\n      \"firewalls\": [\n        {\n          \"id\": 42,\n          \"status\": \"{{oneOf (array 'applied' 'pending')}}\"\n        }\n      ],\n      \"floating_ips\": [\n        478\n      ],\n      \"ipv4\": {\n        \"blocked\": {{faker 'random.boolean'}},\n        \"dns_ptr\": \"server01.example.com\",\n        \"ip\": \"1.2.3.4\"\n      },\n      \"ipv6\": {\n        \"blocked\": {{faker 'random.boolean'}},\n        \"dns_ptr\": [\n          {\n            \"dns_ptr\": \"server.example.com\",\n            \"ip\": \"2001:db8::1\"\n          }\n        ],\n        \"ip\": \"2001:db8::/64\"\n      }\n    },\n    \"rescue_enabled\": {{faker 'random.boolean'}},\n    \"server_type\": {\n      \"cores\": 1,\n      \"cpu_type\": \"{{oneOf (array 'shared' 'dedicated')}}\",\n      \"deprecated\": {{faker 'random.boolean'}},\n      \"description\": \"CX11\",\n      \"disk\": 25,\n      \"id\": 1,\n      \"memory\": 1,\n      \"name\": \"cx11\",\n      \"prices\": [\n        {\n          \"location\": \"fsn1\",\n          \"price_hourly\": {\n            \"gross\": \"1.1900000000000000\",\n            \"net\": \"1.0000000000\"\n          },\n          \"price_monthly\": {\n            \"gross\": \"1.1900000000000000\",\n            \"net\": \"1.0000000000\"\n          }\n        }\n      ],\n      \"storage_type\": \"{{oneOf (array 'local' 'network')}}\"\n    },\n    \"status\": \"{{oneOf (array 'running' 'initializing' 'starting' 'stopping' 'off' 'deleting' 'migrating' 'rebuilding' 'unknown')}}\",\n    \"volumes\": [\n      {{faker 'random.number'}}\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `server` key in the reply contains a Server object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5d74f9b4-086a-4dd0-9b1a-8e2795b85784",
      "documentation": "Delete a Server",
      "method": "delete",
      "endpoint": "servers/:id",
      "responses": [
        {
          "uuid": "22b1cc14-d97e-43bd-b535-c77982a81c9c",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `action` key in the reply contains an Action object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6c659be8-8f4b-423a-9d8d-2be1fd0fd8d1",
      "documentation": "Get a Server",
      "method": "get",
      "endpoint": "servers/:id",
      "responses": [
        {
          "uuid": "6a9264ef-cbad-4749-a78c-b77f8fd9b04d",
          "body": "{\n  \"server\": {\n    \"backup_window\": \"22-02\",\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"datacenter\": {\n      \"description\": \"Falkenstein DC Park 8\",\n      \"id\": 42,\n      \"location\": {\n        \"city\": \"Falkenstein\",\n        \"country\": \"DE\",\n        \"description\": \"Falkenstein DC Park 1\",\n        \"id\": 1,\n        \"latitude\": 50.47612,\n        \"longitude\": 12.370071,\n        \"name\": \"fsn1\",\n        \"network_zone\": \"eu-central\"\n      },\n      \"name\": \"fsn1-dc8\",\n      \"server_types\": {\n        \"available\": [\n          1,\n          2,\n          3\n        ],\n        \"available_for_migration\": [\n          1,\n          2,\n          3\n        ],\n        \"supported\": [\n          1,\n          2,\n          3\n        ]\n      }\n    },\n    \"id\": 42,\n    \"image\": {\n      \"bound_to\": {{faker 'random.number'}},\n      \"build_id\": \"c313fe40383af26094a5a92026054320ab55abc7\",\n      \"created\": \"2016-01-30T23:55:00+00:00\",\n      \"created_from\": {\n        \"id\": 1,\n        \"name\": \"Server\"\n      },\n      \"deleted\": \"\",\n      \"deprecated\": \"2018-02-28T00:00:00+00:00\",\n      \"description\": \"Ubuntu 20.04 Standard 64 bit\",\n      \"disk_size\": 10,\n      \"id\": 42,\n      \"image_size\": 2.3,\n      \"labels\": {},\n      \"name\": \"ubuntu-20.04\",\n      \"os_flavor\": \"{{oneOf (array 'ubuntu' 'centos' 'debian' 'fedora' 'unknown')}}\",\n      \"os_version\": \"20.04\",\n      \"protection\": {\n        \"delete\": {{faker 'random.boolean'}}\n      },\n      \"rapid_deploy\": {{faker 'random.boolean'}},\n      \"status\": \"{{oneOf (array 'available' 'creating' 'unavailable')}}\",\n      \"type\": \"{{oneOf (array 'system' 'app' 'snapshot' 'backup' 'temporary')}}\"\n    },\n    \"included_traffic\": 654321,\n    \"ingoing_traffic\": 123456,\n    \"iso\": {\n      \"deprecated\": \"2018-02-28T00:00:00+00:00\",\n      \"description\": \"FreeBSD 11.0 x64\",\n      \"id\": 42,\n      \"name\": \"FreeBSD-11.0-RELEASE-amd64-dvd1\",\n      \"type\": \"{{oneOf (array 'public' 'private')}}\"\n    },\n    \"labels\": {},\n    \"load_balancers\": [\n      {{faker 'random.number'}}\n    ],\n    \"locked\": {{faker 'random.boolean'}},\n    \"name\": \"my-resource\",\n    \"outgoing_traffic\": 123456,\n    \"placement_group\": {\n      \"created\": \"2016-01-30T23:55:00+00:00\",\n      \"id\": 42,\n      \"labels\": {},\n      \"name\": \"my-resource\",\n      \"servers\": [\n        42\n      ],\n      \"type\": \"{{oneOf (array 'spread')}}\"\n    },\n    \"primary_disk_size\": 50,\n    \"private_net\": [\n      {\n        \"alias_ips\": [\n          \"\"\n        ],\n        \"ip\": \"10.0.0.2\",\n        \"mac_address\": \"86:00:ff:2a:7d:e1\",\n        \"network\": 4711\n      }\n    ],\n    \"protection\": {\n      \"delete\": {{faker 'random.boolean'}},\n      \"rebuild\": {{faker 'random.boolean'}}\n    },\n    \"public_net\": {\n      \"firewalls\": [\n        {\n          \"id\": 42,\n          \"status\": \"{{oneOf (array 'applied' 'pending')}}\"\n        }\n      ],\n      \"floating_ips\": [\n        478\n      ],\n      \"ipv4\": {\n        \"blocked\": {{faker 'random.boolean'}},\n        \"dns_ptr\": \"server01.example.com\",\n        \"ip\": \"1.2.3.4\"\n      },\n      \"ipv6\": {\n        \"blocked\": {{faker 'random.boolean'}},\n        \"dns_ptr\": [\n          {\n            \"dns_ptr\": \"server.example.com\",\n            \"ip\": \"2001:db8::1\"\n          }\n        ],\n        \"ip\": \"2001:db8::/64\"\n      }\n    },\n    \"rescue_enabled\": {{faker 'random.boolean'}},\n    \"server_type\": {\n      \"cores\": 1,\n      \"cpu_type\": \"{{oneOf (array 'shared' 'dedicated')}}\",\n      \"deprecated\": {{faker 'random.boolean'}},\n      \"description\": \"CX11\",\n      \"disk\": 25,\n      \"id\": 1,\n      \"memory\": 1,\n      \"name\": \"cx11\",\n      \"prices\": [\n        {\n          \"location\": \"fsn1\",\n          \"price_hourly\": {\n            \"gross\": \"1.1900000000000000\",\n            \"net\": \"1.0000000000\"\n          },\n          \"price_monthly\": {\n            \"gross\": \"1.1900000000000000\",\n            \"net\": \"1.0000000000\"\n          }\n        }\n      ],\n      \"storage_type\": \"{{oneOf (array 'local' 'network')}}\"\n    },\n    \"status\": \"{{oneOf (array 'running' 'initializing' 'starting' 'stopping' 'off' 'deleting' 'migrating' 'rebuilding' 'unknown')}}\",\n    \"volumes\": [\n      {{faker 'random.number'}}\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `server` key in the reply contains a Server object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "51dab5e7-60bb-43a3-82e8-d257a77d743f",
      "documentation": "Update a Server",
      "method": "put",
      "endpoint": "servers/:id",
      "responses": [
        {
          "uuid": "88a361a5-b5bc-444b-bea6-7b9932baee39",
          "body": "{\n  \"server\": {\n    \"backup_window\": \"22-02\",\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"datacenter\": {\n      \"description\": \"Falkenstein DC Park 8\",\n      \"id\": 42,\n      \"location\": {\n        \"city\": \"Falkenstein\",\n        \"country\": \"DE\",\n        \"description\": \"Falkenstein DC Park 1\",\n        \"id\": 1,\n        \"latitude\": 50.47612,\n        \"longitude\": 12.370071,\n        \"name\": \"fsn1\",\n        \"network_zone\": \"eu-central\"\n      },\n      \"name\": \"fsn1-dc8\",\n      \"server_types\": {\n        \"available\": [\n          1,\n          2,\n          3\n        ],\n        \"available_for_migration\": [\n          1,\n          2,\n          3\n        ],\n        \"supported\": [\n          1,\n          2,\n          3\n        ]\n      }\n    },\n    \"id\": 42,\n    \"image\": {\n      \"bound_to\": {{faker 'random.number'}},\n      \"build_id\": \"c313fe40383af26094a5a92026054320ab55abc7\",\n      \"created\": \"2016-01-30T23:55:00+00:00\",\n      \"created_from\": {\n        \"id\": 1,\n        \"name\": \"Server\"\n      },\n      \"deleted\": \"\",\n      \"deprecated\": \"2018-02-28T00:00:00+00:00\",\n      \"description\": \"Ubuntu 20.04 Standard 64 bit\",\n      \"disk_size\": 10,\n      \"id\": 42,\n      \"image_size\": 2.3,\n      \"labels\": {},\n      \"name\": \"ubuntu-20.04\",\n      \"os_flavor\": \"{{oneOf (array 'ubuntu' 'centos' 'debian' 'fedora' 'unknown')}}\",\n      \"os_version\": \"20.04\",\n      \"protection\": {\n        \"delete\": {{faker 'random.boolean'}}\n      },\n      \"rapid_deploy\": {{faker 'random.boolean'}},\n      \"status\": \"{{oneOf (array 'available' 'creating' 'unavailable')}}\",\n      \"type\": \"{{oneOf (array 'system' 'app' 'snapshot' 'backup' 'temporary')}}\"\n    },\n    \"included_traffic\": 654321,\n    \"ingoing_traffic\": 123456,\n    \"iso\": {\n      \"deprecated\": \"2018-02-28T00:00:00+00:00\",\n      \"description\": \"FreeBSD 11.0 x64\",\n      \"id\": 42,\n      \"name\": \"FreeBSD-11.0-RELEASE-amd64-dvd1\",\n      \"type\": \"{{oneOf (array 'public' 'private')}}\"\n    },\n    \"labels\": {},\n    \"load_balancers\": [\n      {{faker 'random.number'}}\n    ],\n    \"locked\": {{faker 'random.boolean'}},\n    \"name\": \"my-resource\",\n    \"outgoing_traffic\": 123456,\n    \"placement_group\": {\n      \"created\": \"2016-01-30T23:55:00+00:00\",\n      \"id\": 42,\n      \"labels\": {},\n      \"name\": \"my-resource\",\n      \"servers\": [\n        42\n      ],\n      \"type\": \"{{oneOf (array 'spread')}}\"\n    },\n    \"primary_disk_size\": 50,\n    \"private_net\": [\n      {\n        \"alias_ips\": [\n          \"\"\n        ],\n        \"ip\": \"10.0.0.2\",\n        \"mac_address\": \"86:00:ff:2a:7d:e1\",\n        \"network\": 4711\n      }\n    ],\n    \"protection\": {\n      \"delete\": {{faker 'random.boolean'}},\n      \"rebuild\": {{faker 'random.boolean'}}\n    },\n    \"public_net\": {\n      \"firewalls\": [\n        {\n          \"id\": 42,\n          \"status\": \"{{oneOf (array 'applied' 'pending')}}\"\n        }\n      ],\n      \"floating_ips\": [\n        478\n      ],\n      \"ipv4\": {\n        \"blocked\": {{faker 'random.boolean'}},\n        \"dns_ptr\": \"server01.example.com\",\n        \"ip\": \"1.2.3.4\"\n      },\n      \"ipv6\": {\n        \"blocked\": {{faker 'random.boolean'}},\n        \"dns_ptr\": [\n          {\n            \"dns_ptr\": \"server.example.com\",\n            \"ip\": \"2001:db8::1\"\n          }\n        ],\n        \"ip\": \"2001:db8::/64\"\n      }\n    },\n    \"rescue_enabled\": {{faker 'random.boolean'}},\n    \"server_type\": {\n      \"cores\": 1,\n      \"cpu_type\": \"{{oneOf (array 'shared' 'dedicated')}}\",\n      \"deprecated\": {{faker 'random.boolean'}},\n      \"description\": \"CX11\",\n      \"disk\": 25,\n      \"id\": 1,\n      \"memory\": 1,\n      \"name\": \"cx11\",\n      \"prices\": [\n        {\n          \"location\": \"fsn1\",\n          \"price_hourly\": {\n            \"gross\": \"1.1900000000000000\",\n            \"net\": \"1.0000000000\"\n          },\n          \"price_monthly\": {\n            \"gross\": \"1.1900000000000000\",\n            \"net\": \"1.0000000000\"\n          }\n        }\n      ],\n      \"storage_type\": \"{{oneOf (array 'local' 'network')}}\"\n    },\n    \"status\": \"{{oneOf (array 'running' 'initializing' 'starting' 'stopping' 'off' 'deleting' 'migrating' 'rebuilding' 'unknown')}}\",\n    \"volumes\": [\n      {{faker 'random.number'}}\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `server` key in the reply contains the updated Server",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e7e087d3-d130-4d4d-bc71-06c902b90203",
      "documentation": "Get all Actions for a Server",
      "method": "get",
      "endpoint": "servers/:id/actions",
      "responses": [
        {
          "uuid": "25f6d5f3-7b52-46e3-810f-fcb910b29476",
          "body": "{\n  \"actions\": [\n    {\n      \"command\": \"start_server\",\n      \"error\": {\n        \"code\": \"action_failed\",\n        \"message\": \"Action failed\"\n      },\n      \"finished\": \"2016-01-30T23:55:00+00:00\",\n      \"id\": 42,\n      \"progress\": 100,\n      \"resources\": [\n        {\n          \"id\": 42,\n          \"type\": \"server\"\n        }\n      ],\n      \"started\": \"2016-01-30T23:55:00+00:00\",\n      \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n      \"last_page\": 4,\n      \"next_page\": 4,\n      \"page\": 3,\n      \"per_page\": 25,\n      \"previous_page\": 2,\n      \"total_entries\": 100\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `actions` key contains a list of Actions",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "113af296-7b4f-49b3-b331-ce350f5957d2",
      "documentation": "Add a Server to a Placement Group",
      "method": "post",
      "endpoint": "servers/:id/actions/add_to_placement_group",
      "responses": [
        {
          "uuid": "2c9833c2-86f3-4d51-9938-8fce7da318e7",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key in the reply contains an Action object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2fdd6cfc-1273-454a-8f55-9d8a9e0a65c6",
      "documentation": "Attach an ISO to a Server",
      "method": "post",
      "endpoint": "servers/:id/actions/attach_iso",
      "responses": [
        {
          "uuid": "3b483c1d-746e-4218-b8b5-db1624554b97",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key in the reply contains an Action object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d0c5b2cb-f05b-4acc-a9d7-3aad31bf8c15",
      "documentation": "Attach a Server to a Network",
      "method": "post",
      "endpoint": "servers/:id/actions/attach_to_network",
      "responses": [
        {
          "uuid": "35d5e4bd-57ac-473d-af7e-f8a56b8c9d25",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key in the reply contains an Action object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0cbea208-c63b-4016-8036-4984de3ab57c",
      "documentation": "Change alias IPs of a Network",
      "method": "post",
      "endpoint": "servers/:id/actions/change_alias_ips",
      "responses": [
        {
          "uuid": "c80a2cc0-06de-43ed-975b-c9b1d9b4de79",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key in the reply contains an Action object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "03b5219e-39a7-40e7-a840-18fb6c3c0dbd",
      "documentation": "Change reverse DNS entry for this Server",
      "method": "post",
      "endpoint": "servers/:id/actions/change_dns_ptr",
      "responses": [
        {
          "uuid": "c3b780bc-648a-4566-aa67-d1df34adb9f3",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key in the reply contains an Action object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9271e301-e7c4-4cc7-8af9-848355382440",
      "documentation": "Change Server Protection",
      "method": "post",
      "endpoint": "servers/:id/actions/change_protection",
      "responses": [
        {
          "uuid": "3a04f47a-59ce-4b79-aef3-4c453e32cebf",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key in the reply contains an Action object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8d4b20d2-5a3e-4da3-b6e0-d23e05288e47",
      "documentation": "Change the Type of a Server",
      "method": "post",
      "endpoint": "servers/:id/actions/change_type",
      "responses": [
        {
          "uuid": "3b078cd5-3a9c-42c3-88b2-819ed5804f1c",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key in the reply contains an Action object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ab262f12-04f9-4b5c-b768-ebfc813a9be5",
      "documentation": "Create Image from a Server",
      "method": "post",
      "endpoint": "servers/:id/actions/create_image",
      "responses": [
        {
          "uuid": "a5e8e516-6dd2-4da6-a637-6eccec0c2ed8",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  },\n  \"image\": {\n    \"bound_to\": {{faker 'random.number'}},\n    \"build_id\": \"c313fe40383af26094a5a92026054320ab55abc7\",\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"created_from\": {\n      \"id\": 1,\n      \"name\": \"Server\"\n    },\n    \"deleted\": \"\",\n    \"deprecated\": \"2018-02-28T00:00:00+00:00\",\n    \"description\": \"Ubuntu 20.04 Standard 64 bit\",\n    \"disk_size\": 10,\n    \"id\": 42,\n    \"image_size\": 2.3,\n    \"labels\": {},\n    \"name\": \"ubuntu-20.04\",\n    \"os_flavor\": \"{{oneOf (array 'ubuntu' 'centos' 'debian' 'fedora' 'unknown')}}\",\n    \"os_version\": \"20.04\",\n    \"protection\": {\n      \"delete\": {{faker 'random.boolean'}}\n    },\n    \"rapid_deploy\": {{faker 'random.boolean'}},\n    \"status\": \"{{oneOf (array 'available' 'creating' 'unavailable')}}\",\n    \"type\": \"{{oneOf (array 'system' 'app' 'snapshot' 'backup' 'temporary')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `image` key in the reply contains an the created Image, which is an object with this structure\n\nThe `action` key in the reply contains an Action object with this structure\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3476b55a-19bf-4100-ac5f-0e8e604760a2",
      "documentation": "Detach a Server from a Network",
      "method": "post",
      "endpoint": "servers/:id/actions/detach_from_network",
      "responses": [
        {
          "uuid": "a675f81c-5fdb-433b-af59-ebedc6f775f4",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key in the reply contains an Action object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d48b577f-d316-4571-a669-77c7418774e5",
      "documentation": "Detach an ISO from a Server",
      "method": "post",
      "endpoint": "servers/:id/actions/detach_iso",
      "responses": [
        {
          "uuid": "eec66b2d-72e1-44fd-a812-c0f2a2ffc1e6",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key in the reply contains an Action object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9b59540b-0962-46a0-917e-d298a57e1081",
      "documentation": "Disable Backups for a Server",
      "method": "post",
      "endpoint": "servers/:id/actions/disable_backup",
      "responses": [
        {
          "uuid": "825cc487-2a63-40b6-9623-c21b24b60d53",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key in the reply contains an Action object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ab415ae7-5b7d-4052-a737-fdee11a1c038",
      "documentation": "Disable Rescue Mode for a Server",
      "method": "post",
      "endpoint": "servers/:id/actions/disable_rescue",
      "responses": [
        {
          "uuid": "2f576212-54d4-4e91-8f47-ce8f640283cf",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key in the reply contains an Action object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8f3ea5ec-5740-49d6-b2b9-a509b052a901",
      "documentation": "Enable and Configure Backups for a Server",
      "method": "post",
      "endpoint": "servers/:id/actions/enable_backup",
      "responses": [
        {
          "uuid": "14d616f8-d8ae-4302-b145-224d39c6b1ee",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key in the reply contains an Action object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e2e5dc3f-dcb1-4883-b67a-ce846557c573",
      "documentation": "Enable Rescue Mode for a Server",
      "method": "post",
      "endpoint": "servers/:id/actions/enable_rescue",
      "responses": [
        {
          "uuid": "b6353a5f-5b78-46b9-9739-c900c7af21a9",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  },\n  \"root_password\": \"zCWbFhnu950dUTko5f40\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `root_password` key in the reply contains the root password that can be used to access the booted rescue system.\n\nThe `action` key in the reply contains an Action object with this structure\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d68ad0d3-6c79-49f8-801a-d2f293b59742",
      "documentation": "Power off a Server",
      "method": "post",
      "endpoint": "servers/:id/actions/poweroff",
      "responses": [
        {
          "uuid": "3f0a171b-7dcc-4da5-ada6-0f5394faba15",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key in the reply contains an Action object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "326458c3-006c-4482-9f5b-d8e21a24e571",
      "documentation": "Power on a Server",
      "method": "post",
      "endpoint": "servers/:id/actions/poweron",
      "responses": [
        {
          "uuid": "5d07bfea-3339-40d4-a894-b37dcfa7bd9a",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key in the reply contains an Action object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "78b15cea-59ea-43e4-af2a-1bcc97047654",
      "documentation": "Soft-reboot a Server",
      "method": "post",
      "endpoint": "servers/:id/actions/reboot",
      "responses": [
        {
          "uuid": "dc6e682d-9901-4973-83b2-118a445052a0",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key in the reply contains an Action object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ca11e89b-d13c-4cb6-b348-cfc1d0ef9b8e",
      "documentation": "Rebuild a Server from an Image",
      "method": "post",
      "endpoint": "servers/:id/actions/rebuild",
      "responses": [
        {
          "uuid": "c7cdf8f7-221a-4bfa-940e-2c363102d3f0",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  },\n  \"root_password\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key in the reply contains an Action object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1045796d-ef60-4f8f-971e-65f662d41906",
      "documentation": "Remove from Placement Group",
      "method": "post",
      "endpoint": "servers/:id/actions/remove_from_placement_group",
      "responses": [
        {
          "uuid": "1253e324-396f-4cdf-865e-e681ea62906a",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key in the reply contains an Action object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ee08c703-880c-4d7e-990e-420ce453fbd5",
      "documentation": "Request Console for a Server",
      "method": "post",
      "endpoint": "servers/:id/actions/request_console",
      "responses": [
        {
          "uuid": "23702e11-a017-455f-bc0a-fc09965d23f2",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  },\n  \"password\": \"9MQaTg2VAGI0FIpc10k3UpRXcHj2wQ6x\",\n  \"wss_url\": \"wss://console.hetzner.cloud/?server_id=1&token=3db32d15-af2f-459c-8bf8-dee1fd05f49c\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key in the reply contains an Action object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d164155a-9dc7-4b86-9d38-1bd949e36ff0",
      "documentation": "Reset a Server",
      "method": "post",
      "endpoint": "servers/:id/actions/reset",
      "responses": [
        {
          "uuid": "b7302ded-5243-4ebb-b3ee-7aac60986661",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key in the reply contains an Action object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a8f37b93-73bc-4769-9342-eefe9a3b0333",
      "documentation": "Reset root Password of a Server",
      "method": "post",
      "endpoint": "servers/:id/actions/reset_password",
      "responses": [
        {
          "uuid": "4ed97597-f458-489a-965e-ae25e9bed8f1",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  },\n  \"root_password\": \"zCWbFhnu950dUTko5f40\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `root_password` key in the reply contains the new root password that will be active if the Action succeeds.\n\nThe `action` key in the reply contains an Action object with this structure:\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e6115732-d2c6-4ea9-b284-100fe612acbf",
      "documentation": "Shutdown a Server",
      "method": "post",
      "endpoint": "servers/:id/actions/shutdown",
      "responses": [
        {
          "uuid": "e9130b1b-73ba-4e42-be07-3fae4ec2de5a",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key in the reply contains an Action object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9a138d51-0919-4b36-90c3-b975b98298e4",
      "documentation": "Get an Action for a Server",
      "method": "get",
      "endpoint": "servers/:id/actions/:action_id",
      "responses": [
        {
          "uuid": "4cfc1fcc-afb2-409a-8f3f-3add4cc5b36e",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `action` key in the reply has this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8f9cae88-b5dd-442a-bed3-ef7d60d8b2a8",
      "documentation": "Get Metrics for a Server",
      "method": "get",
      "endpoint": "servers/:id/metrics",
      "responses": [
        {
          "uuid": "097629d8-0c05-4c56-8dc4-8d55c115cef5",
          "body": "{\n  \"metrics\": {\n    \"end\": \"2017-01-01T23:00:00+00:00\",\n    \"start\": \"2017-01-01T00:00:00+00:00\",\n    \"step\": 60,\n    \"time_series\": {\n      \"name_of_timeseries\": {\n        \"values\": [\n          [\n            1435781470.622,\n            \"42\"\n          ],\n          [\n            1435781471.622,\n            \"43\"\n          ]\n        ]\n      }\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `metrics` key in the reply contains a metrics object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c2eb6e74-6193-4c3d-9461-3757e2faaabf",
      "documentation": "Get all SSH keys",
      "method": "get",
      "endpoint": "ssh_keys",
      "responses": [
        {
          "uuid": "2a4de3be-ed60-4407-b9a1-43b17bbf4ef1",
          "body": "{\n  \"meta\": {\n    \"pagination\": {\n      \"last_page\": 4,\n      \"next_page\": 4,\n      \"page\": 3,\n      \"per_page\": 25,\n      \"previous_page\": 2,\n      \"total_entries\": 100\n    }\n  },\n  \"ssh_keys\": [\n    {\n      \"created\": \"2016-01-30T23:55:00+00:00\",\n      \"fingerprint\": \"b7:2f:30:a0:2f:6c:58:6c:21:04:58:61:ba:06:3b:2f\",\n      \"id\": 42,\n      \"labels\": {},\n      \"name\": \"my-resource\",\n      \"public_key\": \"ssh-rsa AAAjjk76kgf...Xt\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `ssh_keys` key in the reply contains an array of SSH key objects with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a2a6f721-3492-4127-9b24-645a2ef473fc",
      "documentation": "Create an SSH key",
      "method": "post",
      "endpoint": "ssh_keys",
      "responses": [
        {
          "uuid": "591e8348-7c7f-42a6-ba26-2f86e3a78792",
          "body": "{\n  \"ssh_key\": {\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"fingerprint\": \"b7:2f:30:a0:2f:6c:58:6c:21:04:58:61:ba:06:3b:2f\",\n    \"id\": 42,\n    \"labels\": {},\n    \"name\": \"my-resource\",\n    \"public_key\": \"ssh-rsa AAAjjk76kgf...Xt\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `ssh_key` key in the reply contains the object that was just created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "082046b2-6d7e-470f-9845-151fe56b5496",
      "documentation": "Delete an SSH key",
      "method": "delete",
      "endpoint": "ssh_keys/:id",
      "responses": [
        {
          "uuid": "a5b49566-a45a-4e44-aee5-184cf632e00c",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "SSH key deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a7bab94f-2a97-4c17-b4c6-a8ba8089f508",
      "documentation": "Get a SSH key",
      "method": "get",
      "endpoint": "ssh_keys/:id",
      "responses": [
        {
          "uuid": "3e96e56b-f416-47d2-89c2-803c492998de",
          "body": "{\n  \"ssh_key\": {\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"fingerprint\": \"b7:2f:30:a0:2f:6c:58:6c:21:04:58:61:ba:06:3b:2f\",\n    \"id\": 42,\n    \"labels\": {},\n    \"name\": \"my-resource\",\n    \"public_key\": \"ssh-rsa AAAjjk76kgf...Xt\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `ssh_key` key in the reply contains an SSH key object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5b721863-265b-4268-afdb-52b5354f6bbf",
      "documentation": "Update an SSH key",
      "method": "put",
      "endpoint": "ssh_keys/:id",
      "responses": [
        {
          "uuid": "5775f7ab-2e80-434a-9fb1-bcf55ddb29c4",
          "body": "{\n  \"ssh_key\": {\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"fingerprint\": \"b7:2f:30:a0:2f:6c:58:6c:21:04:58:61:ba:06:3b:2f\",\n    \"id\": 42,\n    \"labels\": {},\n    \"name\": \"my-resource\",\n    \"public_key\": \"ssh-rsa AAAjjk76kgf...Xt\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `ssh_key` key in the reply contains the modified SSH key object with the new description",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "44da5f7a-5efc-474a-85ee-ce8946b4cdd4",
      "documentation": "Get all Volumes",
      "method": "get",
      "endpoint": "volumes",
      "responses": [
        {
          "uuid": "f15ca6f4-57da-47b5-9efd-14df71526854",
          "body": "{\n  \"meta\": {\n    \"pagination\": {\n      \"last_page\": 4,\n      \"next_page\": 4,\n      \"page\": 3,\n      \"per_page\": 25,\n      \"previous_page\": 2,\n      \"total_entries\": 100\n    }\n  },\n  \"volumes\": [\n    {\n      \"created\": \"2016-01-30T23:55:00+00:00\",\n      \"format\": \"xfs\",\n      \"id\": 42,\n      \"labels\": {},\n      \"linux_device\": \"/dev/disk/by-id/scsi-0HC_Volume_4711\",\n      \"location\": {\n        \"city\": \"Falkenstein\",\n        \"country\": \"DE\",\n        \"description\": \"Falkenstein DC Park 1\",\n        \"id\": 1,\n        \"latitude\": 50.47612,\n        \"longitude\": 12.370071,\n        \"name\": \"fsn1\",\n        \"network_zone\": \"eu-central\"\n      },\n      \"name\": \"my-resource\",\n      \"protection\": {\n        \"delete\": {{faker 'random.boolean'}}\n      },\n      \"server\": 12,\n      \"size\": 42,\n      \"status\": \"{{oneOf (array 'creating' 'available')}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `volumes` key contains a list of volumes",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "31bbd016-7db8-4c2f-b354-fdf14cd687b2",
      "documentation": "Create a Volume",
      "method": "post",
      "endpoint": "volumes",
      "responses": [
        {
          "uuid": "6c749d14-5d71-494e-871b-f9d500964ad6",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  },\n  \"next_actions\": [\n    {\n      \"command\": \"start_server\",\n      \"error\": {\n        \"code\": \"action_failed\",\n        \"message\": \"Action failed\"\n      },\n      \"finished\": \"2016-01-30T23:55:00+00:00\",\n      \"id\": 42,\n      \"progress\": 100,\n      \"resources\": [\n        {\n          \"id\": 42,\n          \"type\": \"server\"\n        }\n      ],\n      \"started\": \"2016-01-30T23:55:00+00:00\",\n      \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n    }\n  ],\n  \"volume\": {\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"format\": \"xfs\",\n    \"id\": 42,\n    \"labels\": {},\n    \"linux_device\": \"/dev/disk/by-id/scsi-0HC_Volume_4711\",\n    \"location\": {\n      \"city\": \"Falkenstein\",\n      \"country\": \"DE\",\n      \"description\": \"Falkenstein DC Park 1\",\n      \"id\": 1,\n      \"latitude\": 50.47612,\n      \"longitude\": 12.370071,\n      \"name\": \"fsn1\",\n      \"network_zone\": \"eu-central\"\n    },\n    \"name\": \"my-resource\",\n    \"protection\": {\n      \"delete\": {{faker 'random.boolean'}}\n    },\n    \"server\": 12,\n    \"size\": 42,\n    \"status\": \"{{oneOf (array 'creating' 'available')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `volume` key contains the Volume that was just created\n\nThe `action` key contains the Action tracking Volume creation\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "525db8ee-3b1a-4e55-82d2-64fc66bc9474",
      "documentation": "Delete a Volume",
      "method": "delete",
      "endpoint": "volumes/:id",
      "responses": [
        {
          "uuid": "8a7fbdfe-a53d-42ad-86ed-3e5260ac2769",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Volume deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ce3c589a-1d99-40ef-8bd7-0b5b4a2cf133",
      "documentation": "Get a Volume",
      "method": "get",
      "endpoint": "volumes/:id",
      "responses": [
        {
          "uuid": "ca382c7d-3a04-4deb-b09f-7bd48bf0eb73",
          "body": "{\n  \"volume\": {\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"format\": \"xfs\",\n    \"id\": 42,\n    \"labels\": {},\n    \"linux_device\": \"/dev/disk/by-id/scsi-0HC_Volume_4711\",\n    \"location\": {\n      \"city\": \"Falkenstein\",\n      \"country\": \"DE\",\n      \"description\": \"Falkenstein DC Park 1\",\n      \"id\": 1,\n      \"latitude\": 50.47612,\n      \"longitude\": 12.370071,\n      \"name\": \"fsn1\",\n      \"network_zone\": \"eu-central\"\n    },\n    \"name\": \"my-resource\",\n    \"protection\": {\n      \"delete\": {{faker 'random.boolean'}}\n    },\n    \"server\": 12,\n    \"size\": 42,\n    \"status\": \"{{oneOf (array 'creating' 'available')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `volume` key contains the volume",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "87ea436b-7b3d-4b72-bf88-5843f8021deb",
      "documentation": "Update a Volume",
      "method": "put",
      "endpoint": "volumes/:id",
      "responses": [
        {
          "uuid": "7f357c2e-4cfa-434a-bc7a-6cd015c5b927",
          "body": "{\n  \"volume\": {\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"format\": \"xfs\",\n    \"id\": 42,\n    \"labels\": {},\n    \"linux_device\": \"/dev/disk/by-id/scsi-0HC_Volume_4711\",\n    \"location\": {\n      \"city\": \"Falkenstein\",\n      \"country\": \"DE\",\n      \"description\": \"Falkenstein DC Park 1\",\n      \"id\": 1,\n      \"latitude\": 50.47612,\n      \"longitude\": 12.370071,\n      \"name\": \"fsn1\",\n      \"network_zone\": \"eu-central\"\n    },\n    \"name\": \"my-resource\",\n    \"protection\": {\n      \"delete\": {{faker 'random.boolean'}}\n    },\n    \"server\": 12,\n    \"size\": 42,\n    \"status\": \"{{oneOf (array 'creating' 'available')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `volume` key contains the updated volume",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d1914011-ba99-4c3a-b505-d2fc8ef8fe8e",
      "documentation": "Get all Actions for a Volume",
      "method": "get",
      "endpoint": "volumes/:id/actions",
      "responses": [
        {
          "uuid": "97d6e6b8-d0a3-4c7a-8cab-c723efe8712e",
          "body": "{\n  \"actions\": [\n    {\n      \"command\": \"start_server\",\n      \"error\": {\n        \"code\": \"action_failed\",\n        \"message\": \"Action failed\"\n      },\n      \"finished\": \"2016-01-30T23:55:00+00:00\",\n      \"id\": 42,\n      \"progress\": 100,\n      \"resources\": [\n        {\n          \"id\": 42,\n          \"type\": \"server\"\n        }\n      ],\n      \"started\": \"2016-01-30T23:55:00+00:00\",\n      \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n      \"last_page\": 4,\n      \"next_page\": 4,\n      \"page\": 3,\n      \"per_page\": 25,\n      \"previous_page\": 2,\n      \"total_entries\": 100\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `actions` key contains a list of Actions",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0fa85fc4-38b9-4229-bcf8-3c618ae7414c",
      "documentation": "Attach Volume to a Server",
      "method": "post",
      "endpoint": "volumes/:id/actions/attach",
      "responses": [
        {
          "uuid": "e35c68e8-d807-4660-9539-aa93f5d6e12c",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `attach_volume` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4c3d3f0c-9daf-4016-be75-1b91dec3aaa3",
      "documentation": "Change Volume Protection",
      "method": "post",
      "endpoint": "volumes/:id/actions/change_protection",
      "responses": [
        {
          "uuid": "f84e5dd4-3a68-4ec6-ae3e-66a23e510402",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `change_protection` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9ff5e65e-841b-4ee7-82d1-302ef6256d9a",
      "documentation": "Detach Volume",
      "method": "post",
      "endpoint": "volumes/:id/actions/detach",
      "responses": [
        {
          "uuid": "0d7057e6-400a-4062-aa74-24f5c99136ed",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `detach_volume` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6c0694c1-6999-45ee-84a0-6234832f68b2",
      "documentation": "Resize Volume",
      "method": "post",
      "endpoint": "volumes/:id/actions/resize",
      "responses": [
        {
          "uuid": "6ce6b4c9-6ec9-4e6e-855a-ab6a34d6965b",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `resize_volume` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "75671e7a-6b1a-4a93-a977-5f1ae42f7950",
      "documentation": "Get an Action for a Volume",
      "method": "get",
      "endpoint": "volumes/:id/actions/:action_id",
      "responses": [
        {
          "uuid": "f97d9d3c-4f8b-42a5-a2bf-d6da6e061a4e",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `action` key contains the Volume Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}