{
  "uuid": "027fd713-ca6f-4904-bb86-75dd6e5ab9ff",
  "lastMigration": 19,
  "name": "Hetzner Cloud API",
  "endpointPrefix": "v1",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "2e8d76c9-ace4-4f68-be66-4d6f5ff0a306",
      "documentation": "Get all Actions",
      "method": "get",
      "endpoint": "actions",
      "responses": [
        {
          "uuid": "4e134d5d-0f03-43a6-9b4f-febe10d75417",
          "body": "{\n  \"actions\": [\n    {\n      \"command\": \"start_server\",\n      \"error\": {\n        \"code\": \"action_failed\",\n        \"message\": \"Action failed\"\n      },\n      \"finished\": \"2016-01-30T23:55:00+00:00\",\n      \"id\": 42,\n      \"progress\": 100,\n      \"resources\": [\n        {\n          \"id\": 42,\n          \"type\": \"server\"\n        }\n      ],\n      \"started\": \"2016-01-30T23:55:00+00:00\",\n      \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n      \"last_page\": 4,\n      \"next_page\": 4,\n      \"page\": 3,\n      \"per_page\": 25,\n      \"previous_page\": 2,\n      \"total_entries\": 100\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `actions` key contains a list of Actions",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bea80765-834d-4628-af0e-772805350a2c",
      "documentation": "Get an Action",
      "method": "get",
      "endpoint": "actions/:id",
      "responses": [
        {
          "uuid": "2a751f21-b2f8-4806-8f02-77c236c40272",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `action` key in the reply has this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ee735c9c-6df8-4718-85a5-0956a19f7588",
      "documentation": "Get all Certificates",
      "method": "get",
      "endpoint": "certificates",
      "responses": [
        {
          "uuid": "f0077011-752d-4b62-b51a-fa562a007842",
          "body": "{\n  \"certificates\": [\n    {\n      \"certificate\": \"-----BEGIN CERTIFICATE-----\\n...\",\n      \"created\": \"2016-01-30T23:55:00+00:00\",\n      \"domain_names\": [\n        \"example.com\",\n        \"webmail.example.com\",\n        \"www.example.com\"\n      ],\n      \"fingerprint\": \"03:c7:55:9b:2a:d1:04:17:09:f6:d0:7f:18:34:63:d4:3e:5f\",\n      \"id\": 42,\n      \"labels\": {},\n      \"name\": \"my-resource\",\n      \"not_valid_after\": \"2019-07-08T09:59:59+00:00\",\n      \"not_valid_before\": \"2019-01-08T10:00:00+00:00\",\n      \"status\": {\n        \"error\": {\n          \"code\": \"\",\n          \"message\": \"\"\n        },\n        \"issuance\": \"{{oneOf (array 'pending' 'completed' 'failed')}}\",\n        \"renewal\": \"{{oneOf (array 'scheduled' 'pending' 'failed' 'unavailable')}}\"\n      },\n      \"type\": \"{{oneOf (array 'uploaded' 'managed')}}\",\n      \"used_by\": [\n        {\n          \"id\": 4711,\n          \"type\": \"load_balancer\"\n        }\n      ]\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n      \"last_page\": 4,\n      \"next_page\": 4,\n      \"page\": 3,\n      \"per_page\": 25,\n      \"previous_page\": 2,\n      \"total_entries\": 100\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `certificates` key contains an array of Certificate objects",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d873fd7f-0d11-4668-adab-d34a58ce2688",
      "documentation": "Create a Certificate",
      "method": "post",
      "endpoint": "certificates",
      "responses": [
        {
          "uuid": "dce0e1eb-c12d-4759-a3ab-9dccd4539c4a",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  },\n  \"certificate\": {\n    \"certificate\": \"-----BEGIN CERTIFICATE-----\\n...\",\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"domain_names\": [\n      \"example.com\",\n      \"webmail.example.com\",\n      \"www.example.com\"\n    ],\n    \"fingerprint\": \"03:c7:55:9b:2a:d1:04:17:09:f6:d0:7f:18:34:63:d4:3e:5f\",\n    \"id\": 42,\n    \"labels\": {},\n    \"name\": \"my-resource\",\n    \"not_valid_after\": \"2019-07-08T09:59:59+00:00\",\n    \"not_valid_before\": \"2019-01-08T10:00:00+00:00\",\n    \"status\": {\n      \"error\": {\n        \"code\": \"\",\n        \"message\": \"\"\n      },\n      \"issuance\": \"{{oneOf (array 'pending' 'completed' 'failed')}}\",\n      \"renewal\": \"{{oneOf (array 'scheduled' 'pending' 'failed' 'unavailable')}}\"\n    },\n    \"type\": \"{{oneOf (array 'uploaded' 'managed')}}\",\n    \"used_by\": [\n      {\n        \"id\": 4711,\n        \"type\": \"load_balancer\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `certificate` key contains the Certificate that was just created. For type `managed` Certificates the `action` key contains the Action that allows for tracking the issuance process. For type `uploaded` Certificates the `action` is always null.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6132de8b-dacc-4bf9-8e31-961599d9d9e3",
      "documentation": "Delete a Certificate",
      "method": "delete",
      "endpoint": "certificates/:id",
      "responses": [
        {
          "uuid": "1033a94a-e4c9-4fc5-9772-5146eca9dc96",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Certificate deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4d2f1a30-4c57-4f9d-b506-224bd6093b17",
      "documentation": "Get a Certificate",
      "method": "get",
      "endpoint": "certificates/:id",
      "responses": [
        {
          "uuid": "6722140a-46fd-41f7-bab0-a60258f1938c",
          "body": "{\n  \"certificate\": {\n    \"certificate\": \"-----BEGIN CERTIFICATE-----\\n...\",\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"domain_names\": [\n      \"example.com\",\n      \"webmail.example.com\",\n      \"www.example.com\"\n    ],\n    \"fingerprint\": \"03:c7:55:9b:2a:d1:04:17:09:f6:d0:7f:18:34:63:d4:3e:5f\",\n    \"id\": 42,\n    \"labels\": {},\n    \"name\": \"my-resource\",\n    \"not_valid_after\": \"2019-07-08T09:59:59+00:00\",\n    \"not_valid_before\": \"2019-01-08T10:00:00+00:00\",\n    \"status\": {\n      \"error\": {\n        \"code\": \"\",\n        \"message\": \"\"\n      },\n      \"issuance\": \"{{oneOf (array 'pending' 'completed' 'failed')}}\",\n      \"renewal\": \"{{oneOf (array 'scheduled' 'pending' 'failed' 'unavailable')}}\"\n    },\n    \"type\": \"{{oneOf (array 'uploaded' 'managed')}}\",\n    \"used_by\": [\n      {\n        \"id\": 4711,\n        \"type\": \"load_balancer\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `certificate` key contains a Certificate object",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "de240117-7c78-4847-bcf6-cb5d5c110a22",
      "documentation": "Update a Certificate",
      "method": "put",
      "endpoint": "certificates/:id",
      "responses": [
        {
          "uuid": "85a55853-63d0-440a-b000-e5dc60321dee",
          "body": "{\n  \"certificate\": {\n    \"certificate\": \"-----BEGIN CERTIFICATE-----\\n...\",\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"domain_names\": [\n      \"example.com\",\n      \"webmail.example.com\",\n      \"www.example.com\"\n    ],\n    \"fingerprint\": \"03:c7:55:9b:2a:d1:04:17:09:f6:d0:7f:18:34:63:d4:3e:5f\",\n    \"id\": 42,\n    \"labels\": {},\n    \"name\": \"my-resource\",\n    \"not_valid_after\": \"2019-07-08T09:59:59+00:00\",\n    \"not_valid_before\": \"2019-01-08T10:00:00+00:00\",\n    \"status\": {\n      \"error\": {\n        \"code\": \"\",\n        \"message\": \"\"\n      },\n      \"issuance\": \"{{oneOf (array 'pending' 'completed' 'failed')}}\",\n      \"renewal\": \"{{oneOf (array 'scheduled' 'pending' 'failed' 'unavailable')}}\"\n    },\n    \"type\": \"{{oneOf (array 'uploaded' 'managed')}}\",\n    \"used_by\": [\n      {\n        \"id\": 4711,\n        \"type\": \"load_balancer\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `certificate` key contains the Certificate that was just updated",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "adff3e3c-5738-4176-9b54-863aa8468346",
      "documentation": "Get all Actions for a Certificate",
      "method": "get",
      "endpoint": "certificates/:id/actions",
      "responses": [
        {
          "uuid": "bb5d4c63-ed50-4e9e-943b-2a58c3482327",
          "body": "{\n  \"actions\": [\n    {\n      \"command\": \"start_server\",\n      \"error\": {\n        \"code\": \"action_failed\",\n        \"message\": \"Action failed\"\n      },\n      \"finished\": \"2016-01-30T23:55:00+00:00\",\n      \"id\": 42,\n      \"progress\": 100,\n      \"resources\": [\n        {\n          \"id\": 42,\n          \"type\": \"server\"\n        }\n      ],\n      \"started\": \"2016-01-30T23:55:00+00:00\",\n      \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n      \"last_page\": 4,\n      \"next_page\": 4,\n      \"page\": 3,\n      \"per_page\": 25,\n      \"previous_page\": 2,\n      \"total_entries\": 100\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `actions` key contains a list of Actions",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6551bf45-c293-4de9-b4b4-98657c725e3b",
      "documentation": "Retry Issuance or Renewal",
      "method": "post",
      "endpoint": "certificates/:id/actions/retry",
      "responses": [
        {
          "uuid": "f2dc6f33-2579-43a2-8748-fa369c941564",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the resulting Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8347abd8-b4cb-42b1-96fd-ad0b2bf57c66",
      "documentation": "Get an Action for a Certificate",
      "method": "get",
      "endpoint": "certificates/:id/actions/:action_id",
      "responses": [
        {
          "uuid": "c451fcee-53d1-4d71-85ea-e6bf4dd98100",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `action` key contains the Certificate Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5a985bce-8ce5-4ede-a14c-51b78dee03d0",
      "documentation": "Get all Datacenters",
      "method": "get",
      "endpoint": "datacenters",
      "responses": [
        {
          "uuid": "23d0aca5-416b-470e-a156-ed30345e3992",
          "body": "{\n  \"datacenters\": [\n    {\n      \"description\": \"Falkenstein DC Park 8\",\n      \"id\": 42,\n      \"location\": {\n        \"city\": \"Falkenstein\",\n        \"country\": \"DE\",\n        \"description\": \"Falkenstein DC Park 1\",\n        \"id\": 1,\n        \"latitude\": 50.47612,\n        \"longitude\": 12.370071,\n        \"name\": \"fsn1\",\n        \"network_zone\": \"eu-central\"\n      },\n      \"name\": \"fsn1-dc8\",\n      \"server_types\": {\n        \"available\": [\n          1,\n          2,\n          3\n        ],\n        \"available_for_migration\": [\n          1,\n          2,\n          3\n        ],\n        \"supported\": [\n          1,\n          2,\n          3\n        ]\n      }\n    }\n  ],\n  \"recommendation\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The reply contains the `datacenters` and `recommendation` keys",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0934b3d7-2a0b-4f4c-80ce-fc5713add0c4",
      "documentation": "Get a Datacenter",
      "method": "get",
      "endpoint": "datacenters/:id",
      "responses": [
        {
          "uuid": "2c8b6516-bb21-48ab-9ac6-ed541d230cb4",
          "body": "{\n  \"datacenter\": {\n    \"description\": \"Falkenstein DC Park 8\",\n    \"id\": 42,\n    \"location\": {\n      \"city\": \"Falkenstein\",\n      \"country\": \"DE\",\n      \"description\": \"Falkenstein DC Park 1\",\n      \"id\": 1,\n      \"latitude\": 50.47612,\n      \"longitude\": 12.370071,\n      \"name\": \"fsn1\",\n      \"network_zone\": \"eu-central\"\n    },\n    \"name\": \"fsn1-dc8\",\n    \"server_types\": {\n      \"available\": [\n        1,\n        2,\n        3\n      ],\n      \"available_for_migration\": [\n        1,\n        2,\n        3\n      ],\n      \"supported\": [\n        1,\n        2,\n        3\n      ]\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `datacenter` key in the reply contains a Datacenter object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b81cf703-8e0b-4410-83c2-33350895d896",
      "documentation": "Get all Firewalls",
      "method": "get",
      "endpoint": "firewalls",
      "responses": [
        {
          "uuid": "44ce073e-12ac-4dce-9b0b-b9b4dc47b1f6",
          "body": "{\n  \"firewalls\": [\n    {\n      \"applied_to\": [\n        {\n          \"applied_to_resources\": [\n            {\n              \"server\": {\n                \"id\": 42\n              },\n              \"type\": \"{{oneOf (array 'server')}}\"\n            }\n          ],\n          \"label_selector\": {\n            \"selector\": \"env=prod\"\n          },\n          \"server\": {\n            \"id\": 42\n          },\n          \"type\": \"{{oneOf (array 'server' 'label_selector')}}\"\n        }\n      ],\n      \"created\": \"2016-01-30T23:55:00+00:00\",\n      \"id\": 42,\n      \"labels\": {},\n      \"name\": \"my-resource\",\n      \"rules\": [\n        {\n          \"description\": \"\",\n          \"destination_ips\": [\n            \"28.239.13.1/32\",\n            \"28.239.14.0/24\",\n            \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\"\n          ],\n          \"direction\": \"{{oneOf (array 'in' 'out')}}\",\n          \"port\": \"80\",\n          \"protocol\": \"{{oneOf (array 'tcp' 'udp' 'icmp' 'esp' 'gre')}}\",\n          \"source_ips\": [\n            \"28.239.13.1/32\",\n            \"28.239.14.0/24\",\n            \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\"\n          ]\n        }\n      ]\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n      \"last_page\": 4,\n      \"next_page\": 4,\n      \"page\": 3,\n      \"per_page\": 25,\n      \"previous_page\": 2,\n      \"total_entries\": 100\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `firewalls` key contains an array of Firewall objects",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bef5a7b7-25e9-49a7-ac8e-8d97a13a55a8",
      "documentation": "Create a Firewall",
      "method": "post",
      "endpoint": "firewalls",
      "responses": [
        {
          "uuid": "45b0f1d4-be40-44c8-ad4e-c73d13e5feb8",
          "body": "{\n  \"actions\": [\n    {\n      \"command\": \"set_firewall_rules\",\n      \"error\": {\n        \"code\": \"action_failed\",\n        \"message\": \"Action failed\"\n      },\n      \"finished\": \"2016-01-30T23:56:00+00:00\",\n      \"id\": 13,\n      \"progress\": 100,\n      \"resources\": [\n        {\n          \"id\": 38,\n          \"type\": \"firewall\"\n        }\n      ],\n      \"started\": \"2016-01-30T23:55:00+00:00\",\n      \"status\": \"success\"\n    },\n    {\n      \"command\": \"apply_firewall\",\n      \"error\": {\n        \"code\": \"action_failed\",\n        \"message\": \"Action failed\"\n      },\n      \"finished\": \"2016-01-30T23:56:00+00:00\",\n      \"id\": 14,\n      \"progress\": 100,\n      \"resources\": [\n        {\n          \"id\": 42,\n          \"type\": \"server\"\n        },\n        {\n          \"id\": 38,\n          \"type\": \"firewall\"\n        }\n      ],\n      \"started\": \"2016-01-30T23:55:00+00:00\",\n      \"status\": \"success\"\n    }\n  ],\n  \"firewall\": {\n    \"applied_to\": [\n      {\n        \"applied_to_resources\": [\n          {\n            \"server\": {\n              \"id\": 42\n            },\n            \"type\": \"{{oneOf (array 'server')}}\"\n          }\n        ],\n        \"label_selector\": {\n          \"selector\": \"env=prod\"\n        },\n        \"server\": {\n          \"id\": 42\n        },\n        \"type\": \"{{oneOf (array 'server' 'label_selector')}}\"\n      }\n    ],\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"labels\": {},\n    \"name\": \"my-resource\",\n    \"rules\": [\n      {\n        \"description\": \"\",\n        \"destination_ips\": [\n          \"28.239.13.1/32\",\n          \"28.239.14.0/24\",\n          \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\"\n        ],\n        \"direction\": \"{{oneOf (array 'in' 'out')}}\",\n        \"port\": \"80\",\n        \"protocol\": \"{{oneOf (array 'tcp' 'udp' 'icmp' 'esp' 'gre')}}\",\n        \"source_ips\": [\n          \"28.239.13.1/32\",\n          \"28.239.14.0/24\",\n          \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\"\n        ]\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `firewall` key contains the Firewall that was just created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "30b39ab8-6ea4-4bef-9252-95af6d0859c1",
      "documentation": "Delete a Firewall",
      "method": "delete",
      "endpoint": "firewalls/:id",
      "responses": [
        {
          "uuid": "342d4c2c-23fb-4a49-bfb2-42be437060e0",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Firewall deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b22d42ea-a9a6-4fec-8b18-db57ad41e4d2",
      "documentation": "Get a Firewall",
      "method": "get",
      "endpoint": "firewalls/:id",
      "responses": [
        {
          "uuid": "8da86244-ba5a-475c-9cb8-cba97187e710",
          "body": "{\n  \"firewall\": {\n    \"applied_to\": [\n      {\n        \"applied_to_resources\": [\n          {\n            \"server\": {\n              \"id\": 42\n            },\n            \"type\": \"{{oneOf (array 'server')}}\"\n          }\n        ],\n        \"label_selector\": {\n          \"selector\": \"env=prod\"\n        },\n        \"server\": {\n          \"id\": 42\n        },\n        \"type\": \"{{oneOf (array 'server' 'label_selector')}}\"\n      }\n    ],\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"labels\": {},\n    \"name\": \"my-resource\",\n    \"rules\": [\n      {\n        \"description\": \"\",\n        \"destination_ips\": [\n          \"28.239.13.1/32\",\n          \"28.239.14.0/24\",\n          \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\"\n        ],\n        \"direction\": \"{{oneOf (array 'in' 'out')}}\",\n        \"port\": \"80\",\n        \"protocol\": \"{{oneOf (array 'tcp' 'udp' 'icmp' 'esp' 'gre')}}\",\n        \"source_ips\": [\n          \"28.239.13.1/32\",\n          \"28.239.14.0/24\",\n          \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\"\n        ]\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `firewall` key contains a Firewall object",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "893a8fa9-085c-475c-be56-815fa454e287",
      "documentation": "Update a Firewall",
      "method": "put",
      "endpoint": "firewalls/:id",
      "responses": [
        {
          "uuid": "fa1248b9-dda7-4c7a-89ee-3326fc9c5ef3",
          "body": "{\n  \"firewall\": {\n    \"applied_to\": [\n      {\n        \"applied_to_resources\": [\n          {\n            \"server\": {\n              \"id\": 42\n            },\n            \"type\": \"{{oneOf (array 'server')}}\"\n          }\n        ],\n        \"label_selector\": {\n          \"selector\": \"env=prod\"\n        },\n        \"server\": {\n          \"id\": 42\n        },\n        \"type\": \"{{oneOf (array 'server' 'label_selector')}}\"\n      }\n    ],\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"labels\": {},\n    \"name\": \"my-resource\",\n    \"rules\": [\n      {\n        \"description\": \"\",\n        \"destination_ips\": [\n          \"28.239.13.1/32\",\n          \"28.239.14.0/24\",\n          \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\"\n        ],\n        \"direction\": \"{{oneOf (array 'in' 'out')}}\",\n        \"port\": \"80\",\n        \"protocol\": \"{{oneOf (array 'tcp' 'udp' 'icmp' 'esp' 'gre')}}\",\n        \"source_ips\": [\n          \"28.239.13.1/32\",\n          \"28.239.14.0/24\",\n          \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\"\n        ]\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `firewall` key contains the Firewall that was just updated",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "28639f34-c501-4a95-9f3d-7ce34425dd29",
      "documentation": "Get all Actions for a Firewall",
      "method": "get",
      "endpoint": "firewalls/:id/actions",
      "responses": [
        {
          "uuid": "24385511-91fb-4118-b9f9-ecbea4b7a16f",
          "body": "{\n  \"actions\": [\n    {\n      \"command\": \"start_server\",\n      \"error\": {\n        \"code\": \"action_failed\",\n        \"message\": \"Action failed\"\n      },\n      \"finished\": \"2016-01-30T23:55:00+00:00\",\n      \"id\": 42,\n      \"progress\": 100,\n      \"resources\": [\n        {\n          \"id\": 42,\n          \"type\": \"server\"\n        }\n      ],\n      \"started\": \"2016-01-30T23:55:00+00:00\",\n      \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n      \"last_page\": 4,\n      \"next_page\": 4,\n      \"page\": 3,\n      \"per_page\": 25,\n      \"previous_page\": 2,\n      \"total_entries\": 100\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `actions` key contains a list of Actions",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c57a356b-103b-4140-8d79-0393135cfd4b",
      "documentation": "Apply to Resources",
      "method": "post",
      "endpoint": "firewalls/:id/actions/apply_to_resources",
      "responses": [
        {
          "uuid": "49bfb3d2-becf-4eee-92de-18ed60ccfc49",
          "body": "{\n  \"actions\": [\n    {\n      \"command\": \"start_server\",\n      \"error\": {\n        \"code\": \"action_failed\",\n        \"message\": \"Action failed\"\n      },\n      \"finished\": \"2016-01-30T23:55:00+00:00\",\n      \"id\": 42,\n      \"progress\": 100,\n      \"resources\": [\n        {\n          \"id\": 42,\n          \"type\": \"server\"\n        }\n      ],\n      \"started\": \"2016-01-30T23:55:00+00:00\",\n      \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n      \"last_page\": 4,\n      \"next_page\": 4,\n      \"page\": 3,\n      \"per_page\": 25,\n      \"previous_page\": 2,\n      \"total_entries\": 100\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `actions` key contains multiple `apply_firewall` Actions",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f4f1be0c-06e1-4362-b24a-980bcf489533",
      "documentation": "Remove from Resources",
      "method": "post",
      "endpoint": "firewalls/:id/actions/remove_from_resources",
      "responses": [
        {
          "uuid": "eca8b4bb-1fc8-45f5-8130-de9b184f53be",
          "body": "{\n  \"actions\": [\n    {\n      \"command\": \"start_server\",\n      \"error\": {\n        \"code\": \"action_failed\",\n        \"message\": \"Action failed\"\n      },\n      \"finished\": \"2016-01-30T23:55:00+00:00\",\n      \"id\": 42,\n      \"progress\": 100,\n      \"resources\": [\n        {\n          \"id\": 42,\n          \"type\": \"server\"\n        }\n      ],\n      \"started\": \"2016-01-30T23:55:00+00:00\",\n      \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n      \"last_page\": 4,\n      \"next_page\": 4,\n      \"page\": 3,\n      \"per_page\": 25,\n      \"previous_page\": 2,\n      \"total_entries\": 100\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `actions` key contains multiple `remove_firewall` Actions",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "abe471e1-d9b7-462e-b44b-c3002cbf3e3e",
      "documentation": "Set Rules",
      "method": "post",
      "endpoint": "firewalls/:id/actions/set_rules",
      "responses": [
        {
          "uuid": "072203a2-48d9-44ce-9ba3-c2f1b668e349",
          "body": "{\n  \"actions\": [\n    {\n      \"command\": \"start_server\",\n      \"error\": {\n        \"code\": \"action_failed\",\n        \"message\": \"Action failed\"\n      },\n      \"finished\": \"2016-01-30T23:55:00+00:00\",\n      \"id\": 42,\n      \"progress\": 100,\n      \"resources\": [\n        {\n          \"id\": 42,\n          \"type\": \"server\"\n        }\n      ],\n      \"started\": \"2016-01-30T23:55:00+00:00\",\n      \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n      \"last_page\": 4,\n      \"next_page\": 4,\n      \"page\": 3,\n      \"per_page\": 25,\n      \"previous_page\": 2,\n      \"total_entries\": 100\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains one `set_firewall_rules` Action plus one `apply_firewall` Action per resource where the Firewall is active",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "32daa63a-e73b-459d-aa58-2a07bce1d383",
      "documentation": "Get an Action for a Firewall",
      "method": "get",
      "endpoint": "firewalls/:id/actions/:action_id",
      "responses": [
        {
          "uuid": "f7807265-1e90-45f9-94d2-2d6e0eda421c",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `action` key contains the Firewall Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "94c1b11e-841c-420b-96ee-4fb2a5fc641e",
      "documentation": "Get all Floating IPs",
      "method": "get",
      "endpoint": "floating_ips",
      "responses": [
        {
          "uuid": "5f11153d-2138-46db-8f02-e9e0b38d42d5",
          "body": "{\n  \"floating_ips\": [\n    {\n      \"blocked\": {{faker 'random.boolean'}},\n      \"created\": \"2016-01-30T23:55:00+00:00\",\n      \"description\": \"this describes my resource\",\n      \"dns_ptr\": [\n        {\n          \"dns_ptr\": \"server.example.com\",\n          \"ip\": \"2001:db8::1\"\n        }\n      ],\n      \"home_location\": {\n        \"city\": \"Falkenstein\",\n        \"country\": \"DE\",\n        \"description\": \"Falkenstein DC Park 1\",\n        \"id\": 1,\n        \"latitude\": 50.47612,\n        \"longitude\": 12.370071,\n        \"name\": \"fsn1\",\n        \"network_zone\": \"eu-central\"\n      },\n      \"id\": 42,\n      \"ip\": \"131.232.99.1\",\n      \"labels\": {},\n      \"name\": \"my-resource\",\n      \"protection\": {\n        \"delete\": {{faker 'random.boolean'}}\n      },\n      \"server\": 42,\n      \"type\": \"{{oneOf (array 'ipv4' 'ipv6')}}\"\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n      \"last_page\": 4,\n      \"next_page\": 4,\n      \"page\": 3,\n      \"per_page\": 25,\n      \"previous_page\": 2,\n      \"total_entries\": 100\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `floating_ips` key in the reply contains an array of Floating IP objects with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "42e6b65b-21de-4135-a0c5-64106beb5921",
      "documentation": "Create a Floating IP",
      "method": "post",
      "endpoint": "floating_ips",
      "responses": [
        {
          "uuid": "e6a3efaa-0b8b-4d3a-b03a-24699a1c5aa3",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  },\n  \"floating_ip\": {\n    \"blocked\": {{faker 'random.boolean'}},\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"description\": \"this describes my resource\",\n    \"dns_ptr\": [\n      {\n        \"dns_ptr\": \"server.example.com\",\n        \"ip\": \"2001:db8::1\"\n      }\n    ],\n    \"home_location\": {\n      \"city\": \"Falkenstein\",\n      \"country\": \"DE\",\n      \"description\": \"Falkenstein DC Park 1\",\n      \"id\": 1,\n      \"latitude\": 50.47612,\n      \"longitude\": 12.370071,\n      \"name\": \"fsn1\",\n      \"network_zone\": \"eu-central\"\n    },\n    \"id\": 42,\n    \"ip\": \"131.232.99.1\",\n    \"labels\": {},\n    \"name\": \"my-resource\",\n    \"protection\": {\n      \"delete\": {{faker 'random.boolean'}}\n    },\n    \"server\": 42,\n    \"type\": \"{{oneOf (array 'ipv4' 'ipv6')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `floating_ip` key in the reply contains the object that was just created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0b94cbb5-5a52-448a-bbf4-4be497b6810a",
      "documentation": "Delete a Floating IP",
      "method": "delete",
      "endpoint": "floating_ips/:id",
      "responses": [
        {
          "uuid": "c4896b68-5527-4ee2-bfd2-6f593eaaf979",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Floating IP deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a0f3e843-07b8-4f5f-a94a-df1ebb15e17b",
      "documentation": "Get a Floating IP",
      "method": "get",
      "endpoint": "floating_ips/:id",
      "responses": [
        {
          "uuid": "3eaa4c3d-8b67-406b-81e8-27b67e34002b",
          "body": "{\n  \"floating_ip\": {\n    \"blocked\": {{faker 'random.boolean'}},\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"description\": \"this describes my resource\",\n    \"dns_ptr\": [\n      {\n        \"dns_ptr\": \"server.example.com\",\n        \"ip\": \"2001:db8::1\"\n      }\n    ],\n    \"home_location\": {\n      \"city\": \"Falkenstein\",\n      \"country\": \"DE\",\n      \"description\": \"Falkenstein DC Park 1\",\n      \"id\": 1,\n      \"latitude\": 50.47612,\n      \"longitude\": 12.370071,\n      \"name\": \"fsn1\",\n      \"network_zone\": \"eu-central\"\n    },\n    \"id\": 42,\n    \"ip\": \"131.232.99.1\",\n    \"labels\": {},\n    \"name\": \"my-resource\",\n    \"protection\": {\n      \"delete\": {{faker 'random.boolean'}}\n    },\n    \"server\": 42,\n    \"type\": \"{{oneOf (array 'ipv4' 'ipv6')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `floating_ip` key in the reply contains a Floating IP object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ce30a44c-13dd-4d39-9dc6-da2492fa9e4e",
      "documentation": "Update a Floating IP",
      "method": "put",
      "endpoint": "floating_ips/:id",
      "responses": [
        {
          "uuid": "4d3616dc-2166-4c76-a16b-5ad5e7937839",
          "body": "{\n  \"floating_ip\": {\n    \"blocked\": {{faker 'random.boolean'}},\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"description\": \"this describes my resource\",\n    \"dns_ptr\": [\n      {\n        \"dns_ptr\": \"server.example.com\",\n        \"ip\": \"2001:db8::1\"\n      }\n    ],\n    \"home_location\": {\n      \"city\": \"Falkenstein\",\n      \"country\": \"DE\",\n      \"description\": \"Falkenstein DC Park 1\",\n      \"id\": 1,\n      \"latitude\": 50.47612,\n      \"longitude\": 12.370071,\n      \"name\": \"fsn1\",\n      \"network_zone\": \"eu-central\"\n    },\n    \"id\": 42,\n    \"ip\": \"131.232.99.1\",\n    \"labels\": {},\n    \"name\": \"my-resource\",\n    \"protection\": {\n      \"delete\": {{faker 'random.boolean'}}\n    },\n    \"server\": 42,\n    \"type\": \"{{oneOf (array 'ipv4' 'ipv6')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `floating_ip` key in the reply contains the modified Floating IP object with the new description",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "382eacc8-82c3-45fc-a162-120d20c9bf79",
      "documentation": "Get all Actions for a Floating IP",
      "method": "get",
      "endpoint": "floating_ips/:id/actions",
      "responses": [
        {
          "uuid": "65bb5dc6-c81b-4372-b816-155447d3069d",
          "body": "{\n  \"actions\": [\n    {\n      \"command\": \"start_server\",\n      \"error\": {\n        \"code\": \"action_failed\",\n        \"message\": \"Action failed\"\n      },\n      \"finished\": \"2016-01-30T23:55:00+00:00\",\n      \"id\": 42,\n      \"progress\": 100,\n      \"resources\": [\n        {\n          \"id\": 42,\n          \"type\": \"server\"\n        }\n      ],\n      \"started\": \"2016-01-30T23:55:00+00:00\",\n      \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `actions` key contains a list of Actions",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5768236c-16e3-4e17-a4ed-acfeb988c356",
      "documentation": "Assign a Floating IP to a Server",
      "method": "post",
      "endpoint": "floating_ips/:id/actions/assign",
      "responses": [
        {
          "uuid": "a65746a5-ffd3-4911-9896-fc8a9930bff2",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `assign` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ba685142-24f6-4295-856e-f20a183edb19",
      "documentation": "Change reverse DNS entry for a Floating IP",
      "method": "post",
      "endpoint": "floating_ips/:id/actions/change_dns_ptr",
      "responses": [
        {
          "uuid": "66083029-16b9-43d6-9bd5-85b2329867a9",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `change_dns_ptr` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "30d83e3e-2d57-41fe-a274-cba56d7f2063",
      "documentation": "Change Floating IP Protection",
      "method": "post",
      "endpoint": "floating_ips/:id/actions/change_protection",
      "responses": [
        {
          "uuid": "98aee922-d924-4a44-88ff-250577d5bd59",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `change_protection` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "957fe8f9-5a40-4c85-b8c9-388547835bf8",
      "documentation": "Unassign a Floating IP",
      "method": "post",
      "endpoint": "floating_ips/:id/actions/unassign",
      "responses": [
        {
          "uuid": "4e07d08a-3f2d-47b4-ad19-f7abb1522c7c",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `unassign` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dd9561c8-2938-404a-9407-84fad88f988c",
      "documentation": "Get an Action for a Floating IP",
      "method": "get",
      "endpoint": "floating_ips/:id/actions/:action_id",
      "responses": [
        {
          "uuid": "6a0598e0-ec7e-44d3-90ab-489322f4d5b8",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `action` key in the reply has this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c3eedcf5-f4ad-43bd-a3e6-4657167531a7",
      "documentation": "Get all Images",
      "method": "get",
      "endpoint": "images",
      "responses": [
        {
          "uuid": "7b0dc68c-0d44-4b7b-b87d-fa33f17d97d8",
          "body": "{\n  \"images\": [\n    {\n      \"bound_to\": {{faker 'random.number'}},\n      \"build_id\": \"c313fe40383af26094a5a92026054320ab55abc7\",\n      \"created\": \"2016-01-30T23:55:00+00:00\",\n      \"created_from\": {\n        \"id\": 1,\n        \"name\": \"Server\"\n      },\n      \"deleted\": \"\",\n      \"deprecated\": \"2018-02-28T00:00:00+00:00\",\n      \"description\": \"Ubuntu 20.04 Standard 64 bit\",\n      \"disk_size\": 10,\n      \"id\": 42,\n      \"image_size\": 2.3,\n      \"labels\": {},\n      \"name\": \"ubuntu-20.04\",\n      \"os_flavor\": \"{{oneOf (array 'ubuntu' 'centos' 'debian' 'fedora' 'unknown')}}\",\n      \"os_version\": \"20.04\",\n      \"protection\": {\n        \"delete\": {{faker 'random.boolean'}}\n      },\n      \"rapid_deploy\": {{faker 'random.boolean'}},\n      \"status\": \"{{oneOf (array 'available' 'creating' 'unavailable')}}\",\n      \"type\": \"{{oneOf (array 'system' 'app' 'snapshot' 'backup' 'temporary')}}\"\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n      \"last_page\": 4,\n      \"next_page\": 4,\n      \"page\": 3,\n      \"per_page\": 25,\n      \"previous_page\": 2,\n      \"total_entries\": 100\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `images` key in the reply contains an array of Image objects with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4cf6982b-f325-44ed-afac-3043fed5e3be",
      "documentation": "Delete an Image",
      "method": "delete",
      "endpoint": "images/:id",
      "responses": [
        {
          "uuid": "6d7fa470-0698-4a07-b9c0-2ac605d108fb",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Image deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "babc7ee3-94c9-4598-8c72-e5fa155ecbaf",
      "documentation": "Get an Image",
      "method": "get",
      "endpoint": "images/:id",
      "responses": [
        {
          "uuid": "601a350f-524d-443b-aeae-27b634bc5dae",
          "body": "{\n  \"image\": {\n    \"bound_to\": {{faker 'random.number'}},\n    \"build_id\": \"c313fe40383af26094a5a92026054320ab55abc7\",\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"created_from\": {\n      \"id\": 1,\n      \"name\": \"Server\"\n    },\n    \"deleted\": \"\",\n    \"deprecated\": \"2018-02-28T00:00:00+00:00\",\n    \"description\": \"Ubuntu 20.04 Standard 64 bit\",\n    \"disk_size\": 10,\n    \"id\": 42,\n    \"image_size\": 2.3,\n    \"labels\": {},\n    \"name\": \"ubuntu-20.04\",\n    \"os_flavor\": \"{{oneOf (array 'ubuntu' 'centos' 'debian' 'fedora' 'unknown')}}\",\n    \"os_version\": \"20.04\",\n    \"protection\": {\n      \"delete\": {{faker 'random.boolean'}}\n    },\n    \"rapid_deploy\": {{faker 'random.boolean'}},\n    \"status\": \"{{oneOf (array 'available' 'creating' 'unavailable')}}\",\n    \"type\": \"{{oneOf (array 'system' 'app' 'snapshot' 'backup' 'temporary')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `image` key in the reply contains an Image object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6efed70b-a128-4a83-8de7-75584e017e00",
      "documentation": "Update an Image",
      "method": "put",
      "endpoint": "images/:id",
      "responses": [
        {
          "uuid": "b177e7e9-c284-4b2c-b140-8b8e55226e64",
          "body": "{\n  \"image\": {\n    \"bound_to\": {{faker 'random.number'}},\n    \"build_id\": \"c313fe40383af26094a5a92026054320ab55abc7\",\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"created_from\": {\n      \"id\": 1,\n      \"name\": \"Server\"\n    },\n    \"deleted\": \"\",\n    \"deprecated\": \"2018-02-28T00:00:00+00:00\",\n    \"description\": \"Ubuntu 20.04 Standard 64 bit\",\n    \"disk_size\": 10,\n    \"id\": 42,\n    \"image_size\": 2.3,\n    \"labels\": {},\n    \"name\": \"ubuntu-20.04\",\n    \"os_flavor\": \"{{oneOf (array 'ubuntu' 'centos' 'debian' 'fedora' 'unknown')}}\",\n    \"os_version\": \"20.04\",\n    \"protection\": {\n      \"delete\": {{faker 'random.boolean'}}\n    },\n    \"rapid_deploy\": {{faker 'random.boolean'}},\n    \"status\": \"{{oneOf (array 'available' 'creating' 'unavailable')}}\",\n    \"type\": \"{{oneOf (array 'system' 'app' 'snapshot' 'backup' 'temporary')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The image key in the reply contains the modified Image object",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d591d8a2-5d69-49ef-abbe-b5f57135163d",
      "documentation": "Get all Actions for an Image",
      "method": "get",
      "endpoint": "images/:id/actions",
      "responses": [
        {
          "uuid": "8e15a959-7176-4470-be2d-d0bedf429970",
          "body": "{\n  \"actions\": [\n    {\n      \"command\": \"start_server\",\n      \"error\": {\n        \"code\": \"action_failed\",\n        \"message\": \"Action failed\"\n      },\n      \"finished\": \"2016-01-30T23:55:00+00:00\",\n      \"id\": 42,\n      \"progress\": 100,\n      \"resources\": [\n        {\n          \"id\": 42,\n          \"type\": \"server\"\n        }\n      ],\n      \"started\": \"2016-01-30T23:55:00+00:00\",\n      \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n      \"last_page\": 4,\n      \"next_page\": 4,\n      \"page\": 3,\n      \"per_page\": 25,\n      \"previous_page\": 2,\n      \"total_entries\": 100\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `actions` key contains a list of Actions",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a9ff9883-a9cb-4c61-bb08-7dba8eef2405",
      "documentation": "Change Image Protection",
      "method": "post",
      "endpoint": "images/:id/actions/change_protection",
      "responses": [
        {
          "uuid": "77e540d4-606c-4381-b5cf-ada3fdd68e63",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `change_protection` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "63d2c57d-2538-4c6e-b527-ead8bafd9159",
      "documentation": "Get an Action for an Image",
      "method": "get",
      "endpoint": "images/:id/actions/:action_id",
      "responses": [
        {
          "uuid": "41599dee-12ca-4111-be0f-f19e362036b3",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `action` key contains the Image Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c8f03ddf-0c33-4fc9-a9a8-3df4fb553656",
      "documentation": "Get all ISOs",
      "method": "get",
      "endpoint": "isos",
      "responses": [
        {
          "uuid": "f78019c9-0fea-4a16-943c-f5ba6fce11b1",
          "body": "{\n  \"isos\": [\n    {\n      \"deprecated\": \"2018-02-28T00:00:00+00:00\",\n      \"description\": \"FreeBSD 11.0 x64\",\n      \"id\": 42,\n      \"name\": \"FreeBSD-11.0-RELEASE-amd64-dvd1\",\n      \"type\": \"{{oneOf (array 'public' 'private')}}\"\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n      \"last_page\": 4,\n      \"next_page\": 4,\n      \"page\": 3,\n      \"per_page\": 25,\n      \"previous_page\": 2,\n      \"total_entries\": 100\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `isos` key in the reply contains an array of iso objects with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dccde1d7-2ef5-4059-aa61-735c030fa291",
      "documentation": "Get an ISO",
      "method": "get",
      "endpoint": "isos/:id",
      "responses": [
        {
          "uuid": "222190af-b8a4-4707-8350-09f89504d0a9",
          "body": "{\n  \"iso\": {\n    \"deprecated\": \"2018-02-28T00:00:00+00:00\",\n    \"description\": \"FreeBSD 11.0 x64\",\n    \"id\": 42,\n    \"name\": \"FreeBSD-11.0-RELEASE-amd64-dvd1\",\n    \"type\": \"{{oneOf (array 'public' 'private')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `iso` key in the reply contains an array of ISO objects with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2f9b71f3-7d6e-420d-8464-3e80f2bd9961",
      "documentation": "Get all Load Balancer Types",
      "method": "get",
      "endpoint": "load_balancer_types",
      "responses": [
        {
          "uuid": "2de2c71f-d150-4541-b6a7-b7dc78fe9164",
          "body": "{\n  \"load_balancer_types\": [\n    {\n      \"deprecated\": \"2016-01-30T23:50:00+00:00\",\n      \"description\": \"LB11\",\n      \"id\": 1,\n      \"max_assigned_certificates\": 10,\n      \"max_connections\": 20000,\n      \"max_services\": 5,\n      \"max_targets\": 25,\n      \"name\": \"lb11\",\n      \"prices\": [\n        {\n          \"location\": \"fsn1\",\n          \"price_hourly\": {\n            \"gross\": \"1.1900000000000000\",\n            \"net\": \"1.0000000000\"\n          },\n          \"price_monthly\": {\n            \"gross\": \"1.1900000000000000\",\n            \"net\": \"1.0000000000\"\n          }\n        }\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `load_balancer_types` key in the reply contains an array of Load Balancer type objects with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d79dece3-9efb-4352-b15b-a905cd954f2e",
      "documentation": "Get a Load Balancer Type",
      "method": "get",
      "endpoint": "load_balancer_types/:id",
      "responses": [
        {
          "uuid": "6dd473c9-1337-4dee-bd5b-4c5a162a0753",
          "body": "{\n  \"load_balancer_type\": {\n    \"deprecated\": \"2016-01-30T23:50:00+00:00\",\n    \"description\": \"LB11\",\n    \"id\": 1,\n    \"max_assigned_certificates\": 10,\n    \"max_connections\": 20000,\n    \"max_services\": 5,\n    \"max_targets\": 25,\n    \"name\": \"lb11\",\n    \"prices\": [\n      {\n        \"location\": \"fsn1\",\n        \"price_hourly\": {\n          \"gross\": \"1.1900000000000000\",\n          \"net\": \"1.0000000000\"\n        },\n        \"price_monthly\": {\n          \"gross\": \"1.1900000000000000\",\n          \"net\": \"1.0000000000\"\n        }\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `load_balancer_type` key in the reply contains a Load Balancer type object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "71c2da57-b803-48f3-a35f-5a1ed0735064",
      "documentation": "Get all Load Balancers",
      "method": "get",
      "endpoint": "load_balancers",
      "responses": [
        {
          "uuid": "fbf8b092-f6f3-4c5a-9865-33db131e04d6",
          "body": "{\n  \"load_balancers\": [\n    {\n      \"algorithm\": {\n        \"type\": \"{{oneOf (array 'round_robin' 'least_connections')}}\"\n      },\n      \"created\": \"2016-01-30T23:55:00+00:00\",\n      \"id\": 42,\n      \"included_traffic\": 10000,\n      \"ingoing_traffic\": {{faker 'random.number'}},\n      \"labels\": {},\n      \"load_balancer_type\": {\n        \"deprecated\": \"2016-01-30T23:50:00+00:00\",\n        \"description\": \"LB11\",\n        \"id\": 1,\n        \"max_assigned_certificates\": 10,\n        \"max_connections\": 20000,\n        \"max_services\": 5,\n        \"max_targets\": 25,\n        \"name\": \"lb11\",\n        \"prices\": [\n          {\n            \"location\": \"fsn1\",\n            \"price_hourly\": {\n              \"gross\": \"1.1900000000000000\",\n              \"net\": \"1.0000000000\"\n            },\n            \"price_monthly\": {\n              \"gross\": \"1.1900000000000000\",\n              \"net\": \"1.0000000000\"\n            }\n          }\n        ]\n      },\n      \"location\": {\n        \"city\": \"Falkenstein\",\n        \"country\": \"DE\",\n        \"description\": \"Falkenstein DC Park 1\",\n        \"id\": 1,\n        \"latitude\": 50.47612,\n        \"longitude\": 12.370071,\n        \"name\": \"fsn1\",\n        \"network_zone\": \"eu-central\"\n      },\n      \"name\": \"my-resource\",\n      \"outgoing_traffic\": {{faker 'random.number'}},\n      \"private_net\": [\n        {\n          \"ip\": \"10.0.0.2\",\n          \"network\": 4711\n        }\n      ],\n      \"protection\": {\n        \"delete\": {{faker 'random.boolean'}}\n      },\n      \"public_net\": {\n        \"enabled\": {{faker 'random.boolean'}},\n        \"ipv4\": {\n          \"dns_ptr\": \"lb1.example.com\",\n          \"ip\": \"1.2.3.4\"\n        },\n        \"ipv6\": {\n          \"dns_ptr\": \"lb1.example.com\",\n          \"ip\": \"2001:db8::1\"\n        }\n      },\n      \"services\": [\n        {\n          \"destination_port\": 80,\n          \"health_check\": {\n            \"http\": {\n              \"domain\": \"example.com\",\n              \"path\": \"/\",\n              \"response\": \"{\\\"status\\\": \\\"ok\\\"}\",\n              \"status_codes\": [\n                \"2??\",\n                \"3??\"\n              ],\n              \"tls\": {{faker 'random.boolean'}}\n            },\n            \"interval\": 15,\n            \"port\": 4711,\n            \"protocol\": \"{{oneOf (array 'tcp' 'http')}}\",\n            \"retries\": 3,\n            \"timeout\": 10\n          },\n          \"http\": {\n            \"certificates\": [\n              897\n            ],\n            \"cookie_lifetime\": 300,\n            \"cookie_name\": \"HCLBSTICKY\",\n            \"redirect_http\": true,\n            \"sticky_sessions\": true\n          },\n          \"listen_port\": 443,\n          \"protocol\": \"{{oneOf (array 'tcp' 'http' 'https')}}\",\n          \"proxyprotocol\": {{faker 'random.boolean'}}\n        }\n      ],\n      \"targets\": [\n        {\n          \"health_status\": [\n            {\n              \"listen_port\": 443,\n              \"status\": \"healthy\"\n            }\n          ],\n          \"ip\": {\n            \"ip\": \"203.0.113.1\"\n          },\n          \"label_selector\": {\n            \"selector\": \"env=prod\"\n          },\n          \"server\": {\n            \"id\": 80\n          },\n          \"targets\": [\n            {\n              \"health_status\": [\n                {\n                  \"listen_port\": 443,\n                  \"status\": \"healthy\"\n                }\n              ],\n              \"server\": {\n                \"id\": 85\n              },\n              \"type\": \"server\",\n              \"use_private_ip\": {{faker 'random.boolean'}}\n            }\n          ],\n          \"type\": \"{{oneOf (array 'server' 'label_selector' 'ip')}}\",\n          \"use_private_ip\": {{faker 'random.boolean'}}\n        }\n      ]\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n      \"last_page\": 4,\n      \"next_page\": 4,\n      \"page\": 3,\n      \"per_page\": 25,\n      \"previous_page\": 2,\n      \"total_entries\": 100\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `load_balancers` key contains a list of Load Balancers",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1e16d504-45ff-4c1b-940b-5affd4ba8592",
      "documentation": "Create a Load Balancer",
      "method": "post",
      "endpoint": "load_balancers",
      "responses": [
        {
          "uuid": "e4cafe94-5503-4e72-bb1c-6d603a87e4e1",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  },\n  \"load_balancer\": {\n    \"algorithm\": {\n      \"type\": \"{{oneOf (array 'round_robin' 'least_connections')}}\"\n    },\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"included_traffic\": 10000,\n    \"ingoing_traffic\": {{faker 'random.number'}},\n    \"labels\": {},\n    \"load_balancer_type\": {\n      \"deprecated\": \"2016-01-30T23:50:00+00:00\",\n      \"description\": \"LB11\",\n      \"id\": 1,\n      \"max_assigned_certificates\": 10,\n      \"max_connections\": 20000,\n      \"max_services\": 5,\n      \"max_targets\": 25,\n      \"name\": \"lb11\",\n      \"prices\": [\n        {\n          \"location\": \"fsn1\",\n          \"price_hourly\": {\n            \"gross\": \"1.1900000000000000\",\n            \"net\": \"1.0000000000\"\n          },\n          \"price_monthly\": {\n            \"gross\": \"1.1900000000000000\",\n            \"net\": \"1.0000000000\"\n          }\n        }\n      ]\n    },\n    \"location\": {\n      \"city\": \"Falkenstein\",\n      \"country\": \"DE\",\n      \"description\": \"Falkenstein DC Park 1\",\n      \"id\": 1,\n      \"latitude\": 50.47612,\n      \"longitude\": 12.370071,\n      \"name\": \"fsn1\",\n      \"network_zone\": \"eu-central\"\n    },\n    \"name\": \"my-resource\",\n    \"outgoing_traffic\": {{faker 'random.number'}},\n    \"private_net\": [\n      {\n        \"ip\": \"10.0.0.2\",\n        \"network\": 4711\n      }\n    ],\n    \"protection\": {\n      \"delete\": {{faker 'random.boolean'}}\n    },\n    \"public_net\": {\n      \"enabled\": {{faker 'random.boolean'}},\n      \"ipv4\": {\n        \"dns_ptr\": \"lb1.example.com\",\n        \"ip\": \"1.2.3.4\"\n      },\n      \"ipv6\": {\n        \"dns_ptr\": \"lb1.example.com\",\n        \"ip\": \"2001:db8::1\"\n      }\n    },\n    \"services\": [\n      {\n        \"destination_port\": 80,\n        \"health_check\": {\n          \"http\": {\n            \"domain\": \"example.com\",\n            \"path\": \"/\",\n            \"response\": \"{\\\"status\\\": \\\"ok\\\"}\",\n            \"status_codes\": [\n              \"2??\",\n              \"3??\"\n            ],\n            \"tls\": {{faker 'random.boolean'}}\n          },\n          \"interval\": 15,\n          \"port\": 4711,\n          \"protocol\": \"{{oneOf (array 'tcp' 'http')}}\",\n          \"retries\": 3,\n          \"timeout\": 10\n        },\n        \"http\": {\n          \"certificates\": [\n            897\n          ],\n          \"cookie_lifetime\": 300,\n          \"cookie_name\": \"HCLBSTICKY\",\n          \"redirect_http\": true,\n          \"sticky_sessions\": true\n        },\n        \"listen_port\": 443,\n        \"protocol\": \"{{oneOf (array 'tcp' 'http' 'https')}}\",\n        \"proxyprotocol\": {{faker 'random.boolean'}}\n      }\n    ],\n    \"targets\": [\n      {\n        \"health_status\": [\n          {\n            \"listen_port\": 443,\n            \"status\": \"healthy\"\n          }\n        ],\n        \"ip\": {\n          \"ip\": \"203.0.113.1\"\n        },\n        \"label_selector\": {\n          \"selector\": \"env=prod\"\n        },\n        \"server\": {\n          \"id\": 80\n        },\n        \"targets\": [\n          {\n            \"health_status\": [\n              {\n                \"listen_port\": 443,\n                \"status\": \"healthy\"\n              }\n            ],\n            \"server\": {\n              \"id\": 85\n            },\n            \"type\": \"server\",\n            \"use_private_ip\": {{faker 'random.boolean'}}\n          }\n        ],\n        \"type\": \"{{oneOf (array 'server' 'label_selector' 'ip')}}\",\n        \"use_private_ip\": {{faker 'random.boolean'}}\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `load_balancer` key contains the Load Balancer that was just created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bc81a495-33b9-4236-9edd-3f2b7743b913",
      "documentation": "Delete a Load Balancer",
      "method": "delete",
      "endpoint": "load_balancers/:id",
      "responses": [
        {
          "uuid": "07e8fc0b-d363-444e-b276-a7b378781cb8",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Load Balancer deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5b8d0c92-9483-413d-b772-de952a793429",
      "documentation": "Get a Load Balancer",
      "method": "get",
      "endpoint": "load_balancers/:id",
      "responses": [
        {
          "uuid": "22fd0b54-4df0-4fd1-a0c8-b4500e44833d",
          "body": "{\n  \"load_balancer\": {\n    \"algorithm\": {\n      \"type\": \"{{oneOf (array 'round_robin' 'least_connections')}}\"\n    },\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"included_traffic\": 10000,\n    \"ingoing_traffic\": {{faker 'random.number'}},\n    \"labels\": {},\n    \"load_balancer_type\": {\n      \"deprecated\": \"2016-01-30T23:50:00+00:00\",\n      \"description\": \"LB11\",\n      \"id\": 1,\n      \"max_assigned_certificates\": 10,\n      \"max_connections\": 20000,\n      \"max_services\": 5,\n      \"max_targets\": 25,\n      \"name\": \"lb11\",\n      \"prices\": [\n        {\n          \"location\": \"fsn1\",\n          \"price_hourly\": {\n            \"gross\": \"1.1900000000000000\",\n            \"net\": \"1.0000000000\"\n          },\n          \"price_monthly\": {\n            \"gross\": \"1.1900000000000000\",\n            \"net\": \"1.0000000000\"\n          }\n        }\n      ]\n    },\n    \"location\": {\n      \"city\": \"Falkenstein\",\n      \"country\": \"DE\",\n      \"description\": \"Falkenstein DC Park 1\",\n      \"id\": 1,\n      \"latitude\": 50.47612,\n      \"longitude\": 12.370071,\n      \"name\": \"fsn1\",\n      \"network_zone\": \"eu-central\"\n    },\n    \"name\": \"my-resource\",\n    \"outgoing_traffic\": {{faker 'random.number'}},\n    \"private_net\": [\n      {\n        \"ip\": \"10.0.0.2\",\n        \"network\": 4711\n      }\n    ],\n    \"protection\": {\n      \"delete\": {{faker 'random.boolean'}}\n    },\n    \"public_net\": {\n      \"enabled\": {{faker 'random.boolean'}},\n      \"ipv4\": {\n        \"dns_ptr\": \"lb1.example.com\",\n        \"ip\": \"1.2.3.4\"\n      },\n      \"ipv6\": {\n        \"dns_ptr\": \"lb1.example.com\",\n        \"ip\": \"2001:db8::1\"\n      }\n    },\n    \"services\": [\n      {\n        \"destination_port\": 80,\n        \"health_check\": {\n          \"http\": {\n            \"domain\": \"example.com\",\n            \"path\": \"/\",\n            \"response\": \"{\\\"status\\\": \\\"ok\\\"}\",\n            \"status_codes\": [\n              \"2??\",\n              \"3??\"\n            ],\n            \"tls\": {{faker 'random.boolean'}}\n          },\n          \"interval\": 15,\n          \"port\": 4711,\n          \"protocol\": \"{{oneOf (array 'tcp' 'http')}}\",\n          \"retries\": 3,\n          \"timeout\": 10\n        },\n        \"http\": {\n          \"certificates\": [\n            897\n          ],\n          \"cookie_lifetime\": 300,\n          \"cookie_name\": \"HCLBSTICKY\",\n          \"redirect_http\": true,\n          \"sticky_sessions\": true\n        },\n        \"listen_port\": 443,\n        \"protocol\": \"{{oneOf (array 'tcp' 'http' 'https')}}\",\n        \"proxyprotocol\": {{faker 'random.boolean'}}\n      }\n    ],\n    \"targets\": [\n      {\n        \"health_status\": [\n          {\n            \"listen_port\": 443,\n            \"status\": \"healthy\"\n          }\n        ],\n        \"ip\": {\n          \"ip\": \"203.0.113.1\"\n        },\n        \"label_selector\": {\n          \"selector\": \"env=prod\"\n        },\n        \"server\": {\n          \"id\": 80\n        },\n        \"targets\": [\n          {\n            \"health_status\": [\n              {\n                \"listen_port\": 443,\n                \"status\": \"healthy\"\n              }\n            ],\n            \"server\": {\n              \"id\": 85\n            },\n            \"type\": \"server\",\n            \"use_private_ip\": {{faker 'random.boolean'}}\n          }\n        ],\n        \"type\": \"{{oneOf (array 'server' 'label_selector' 'ip')}}\",\n        \"use_private_ip\": {{faker 'random.boolean'}}\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `load_balancer` key contains the Load Balancer",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "84c97a44-d63b-4750-8d66-31552a676757",
      "documentation": "Update a Load Balancer",
      "method": "put",
      "endpoint": "load_balancers/:id",
      "responses": [
        {
          "uuid": "a5733dec-f2b4-4f93-97c3-e9ec9ec5513e",
          "body": "{\n  \"load_balancer\": {\n    \"algorithm\": {\n      \"type\": \"{{oneOf (array 'round_robin' 'least_connections')}}\"\n    },\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"included_traffic\": 10000,\n    \"ingoing_traffic\": {{faker 'random.number'}},\n    \"labels\": {},\n    \"load_balancer_type\": {\n      \"deprecated\": \"2016-01-30T23:50:00+00:00\",\n      \"description\": \"LB11\",\n      \"id\": 1,\n      \"max_assigned_certificates\": 10,\n      \"max_connections\": 20000,\n      \"max_services\": 5,\n      \"max_targets\": 25,\n      \"name\": \"lb11\",\n      \"prices\": [\n        {\n          \"location\": \"fsn1\",\n          \"price_hourly\": {\n            \"gross\": \"1.1900000000000000\",\n            \"net\": \"1.0000000000\"\n          },\n          \"price_monthly\": {\n            \"gross\": \"1.1900000000000000\",\n            \"net\": \"1.0000000000\"\n          }\n        }\n      ]\n    },\n    \"location\": {\n      \"city\": \"Falkenstein\",\n      \"country\": \"DE\",\n      \"description\": \"Falkenstein DC Park 1\",\n      \"id\": 1,\n      \"latitude\": 50.47612,\n      \"longitude\": 12.370071,\n      \"name\": \"fsn1\",\n      \"network_zone\": \"eu-central\"\n    },\n    \"name\": \"my-resource\",\n    \"outgoing_traffic\": {{faker 'random.number'}},\n    \"private_net\": [\n      {\n        \"ip\": \"10.0.0.2\",\n        \"network\": 4711\n      }\n    ],\n    \"protection\": {\n      \"delete\": {{faker 'random.boolean'}}\n    },\n    \"public_net\": {\n      \"enabled\": {{faker 'random.boolean'}},\n      \"ipv4\": {\n        \"dns_ptr\": \"lb1.example.com\",\n        \"ip\": \"1.2.3.4\"\n      },\n      \"ipv6\": {\n        \"dns_ptr\": \"lb1.example.com\",\n        \"ip\": \"2001:db8::1\"\n      }\n    },\n    \"services\": [\n      {\n        \"destination_port\": 80,\n        \"health_check\": {\n          \"http\": {\n            \"domain\": \"example.com\",\n            \"path\": \"/\",\n            \"response\": \"{\\\"status\\\": \\\"ok\\\"}\",\n            \"status_codes\": [\n              \"2??\",\n              \"3??\"\n            ],\n            \"tls\": {{faker 'random.boolean'}}\n          },\n          \"interval\": 15,\n          \"port\": 4711,\n          \"protocol\": \"{{oneOf (array 'tcp' 'http')}}\",\n          \"retries\": 3,\n          \"timeout\": 10\n        },\n        \"http\": {\n          \"certificates\": [\n            897\n          ],\n          \"cookie_lifetime\": 300,\n          \"cookie_name\": \"HCLBSTICKY\",\n          \"redirect_http\": true,\n          \"sticky_sessions\": true\n        },\n        \"listen_port\": 443,\n        \"protocol\": \"{{oneOf (array 'tcp' 'http' 'https')}}\",\n        \"proxyprotocol\": {{faker 'random.boolean'}}\n      }\n    ],\n    \"targets\": [\n      {\n        \"health_status\": [\n          {\n            \"listen_port\": 443,\n            \"status\": \"healthy\"\n          }\n        ],\n        \"ip\": {\n          \"ip\": \"203.0.113.1\"\n        },\n        \"label_selector\": {\n          \"selector\": \"env=prod\"\n        },\n        \"server\": {\n          \"id\": 80\n        },\n        \"targets\": [\n          {\n            \"health_status\": [\n              {\n                \"listen_port\": 443,\n                \"status\": \"healthy\"\n              }\n            ],\n            \"server\": {\n              \"id\": 85\n            },\n            \"type\": \"server\",\n            \"use_private_ip\": {{faker 'random.boolean'}}\n          }\n        ],\n        \"type\": \"{{oneOf (array 'server' 'label_selector' 'ip')}}\",\n        \"use_private_ip\": {{faker 'random.boolean'}}\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `load_balancer` key contains the updated Load Balancer",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2b59c30f-8ebb-406c-8540-4e85dd044085",
      "documentation": "Get all Actions for a Load Balancer",
      "method": "get",
      "endpoint": "load_balancers/:id/actions",
      "responses": [
        {
          "uuid": "cd7e1c7e-30ef-46a0-b7d8-95f71d422c7f",
          "body": "{\n  \"actions\": [\n    {\n      \"command\": \"start_server\",\n      \"error\": {\n        \"code\": \"action_failed\",\n        \"message\": \"Action failed\"\n      },\n      \"finished\": \"2016-01-30T23:55:00+00:00\",\n      \"id\": 42,\n      \"progress\": 100,\n      \"resources\": [\n        {\n          \"id\": 42,\n          \"type\": \"server\"\n        }\n      ],\n      \"started\": \"2016-01-30T23:55:00+00:00\",\n      \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n      \"last_page\": 4,\n      \"next_page\": 4,\n      \"page\": 3,\n      \"per_page\": 25,\n      \"previous_page\": 2,\n      \"total_entries\": 100\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `actions` key contains a list of Actions",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "90f9cb1a-e001-40d9-9e0b-81261a560d76",
      "documentation": "Add Service",
      "method": "post",
      "endpoint": "load_balancers/:id/actions/add_service",
      "responses": [
        {
          "uuid": "0c16276f-cf39-4df8-913c-9f7baef47ccd",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `add_service` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "13d9ce76-32a9-45bb-9909-ccf996647d2f",
      "documentation": "Add Target",
      "method": "post",
      "endpoint": "load_balancers/:id/actions/add_target",
      "responses": [
        {
          "uuid": "3a440a42-020c-467a-9252-5f57698fd421",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `add_target` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cc69fec6-c04f-4514-b248-25446e61c3ad",
      "documentation": "Attach a Load Balancer to a Network",
      "method": "post",
      "endpoint": "load_balancers/:id/actions/attach_to_network",
      "responses": [
        {
          "uuid": "93021ce3-1dfe-4d0e-a252-02a760b79b0a",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `attach_to_network` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2cb93530-88e2-4abd-a13c-bfb167b1a5b0",
      "documentation": "Change Algorithm",
      "method": "post",
      "endpoint": "load_balancers/:id/actions/change_algorithm",
      "responses": [
        {
          "uuid": "d1329214-528b-42c2-ae32-dadecda4ee6a",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `change_algorithm` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6889414b-ea7e-4c65-8262-9dd51f10fcbe",
      "documentation": "Change reverse DNS entry for this Load Balancer",
      "method": "post",
      "endpoint": "load_balancers/:id/actions/change_dns_ptr",
      "responses": [
        {
          "uuid": "f84c58a4-e77d-45a7-9630-93238bd9e043",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key in the reply contains an Action object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "75c6d4a3-2c25-4e9e-abc3-be641093d3cc",
      "documentation": "Change Load Balancer Protection",
      "method": "post",
      "endpoint": "load_balancers/:id/actions/change_protection",
      "responses": [
        {
          "uuid": "46b5a2ab-aa2c-470f-9e63-337f2fc01e63",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `change_protection` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b0385434-9598-4baa-bbc5-bfd7a305997b",
      "documentation": "Change the Type of a Load Balancer",
      "method": "post",
      "endpoint": "load_balancers/:id/actions/change_type",
      "responses": [
        {
          "uuid": "b5c9738c-2cd3-4b06-8546-437eab9e513d",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `change_load_balancer_type` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3cbf9132-22bb-40dd-969d-a03ecfeccd82",
      "documentation": "Delete Service",
      "method": "post",
      "endpoint": "load_balancers/:id/actions/delete_service",
      "responses": [
        {
          "uuid": "b89ec65a-2aa9-442c-9c6a-36e3376714c0",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `delete_service` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7b439104-d079-45a3-967a-e863084fdcc9",
      "documentation": "Detach a Load Balancer from a Network",
      "method": "post",
      "endpoint": "load_balancers/:id/actions/detach_from_network",
      "responses": [
        {
          "uuid": "4d84017f-e256-4e2b-b2a4-c9052a2b5e2b",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `detach_from_network` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c6a06eef-fd6c-4a4c-bf60-ee3f393058bb",
      "documentation": "Disable the public interface of a Load Balancer",
      "method": "post",
      "endpoint": "load_balancers/:id/actions/disable_public_interface",
      "responses": [
        {
          "uuid": "0c501930-3a7e-4753-9f8d-e29084d53daf",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `disable_public_interface` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5efea6f3-129b-47b6-b63e-bdcdae3fe180",
      "documentation": "Enable the public interface of a Load Balancer",
      "method": "post",
      "endpoint": "load_balancers/:id/actions/enable_public_interface",
      "responses": [
        {
          "uuid": "8045adee-97d4-4f9d-8670-3709e19caa5c",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `enable_public_interface` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1cb22bb0-6da7-48ca-9878-af2b9edfe069",
      "documentation": "Remove Target",
      "method": "post",
      "endpoint": "load_balancers/:id/actions/remove_target",
      "responses": [
        {
          "uuid": "52260f52-4372-4356-b04f-5ab9d9260bbf",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `remove_target` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "543b201a-9ddf-4ee8-905d-6de2acea4953",
      "documentation": "Update Service",
      "method": "post",
      "endpoint": "load_balancers/:id/actions/update_service",
      "responses": [
        {
          "uuid": "a73fea57-cc27-4985-b6e0-57720db701f0",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `update_service` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d26b852f-cd25-4bc9-8c99-a506c2963c33",
      "documentation": "Get an Action for a Load Balancer",
      "method": "get",
      "endpoint": "load_balancers/:id/actions/:action_id",
      "responses": [
        {
          "uuid": "94b53496-36b7-462b-9df3-b5d136049755",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `action` key contains the Load Balancer Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "87a38be8-54d8-42dc-ba37-c947d7f45c23",
      "documentation": "Get Metrics for a LoadBalancer",
      "method": "get",
      "endpoint": "load_balancers/:id/metrics",
      "responses": [
        {
          "uuid": "d5bca817-ae23-49f7-b3e0-6023afa978dc",
          "body": "{\n  \"metrics\": {\n    \"end\": \"2017-01-01T23:00:00+00:00\",\n    \"start\": \"2017-01-01T00:00:00+00:00\",\n    \"step\": 60,\n    \"time_series\": {\n      \"name_of_timeseries\": {\n        \"values\": [\n          [\n            1435781470.622,\n            \"42\"\n          ],\n          [\n            1435781471.622,\n            \"43\"\n          ]\n        ]\n      }\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `metrics` key in the reply contains a metrics object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c4c8cae5-1238-4072-aa0b-802595a35192",
      "documentation": "Get all Locations",
      "method": "get",
      "endpoint": "locations",
      "responses": [
        {
          "uuid": "2bca1a8b-4072-4f5c-96c1-6f96ca6b5a5e",
          "body": "{\n  \"locations\": [\n    {\n      \"city\": \"Falkenstein\",\n      \"country\": \"DE\",\n      \"description\": \"Falkenstein DC Park 1\",\n      \"id\": 1,\n      \"latitude\": 50.47612,\n      \"longitude\": 12.370071,\n      \"name\": \"fsn1\",\n      \"network_zone\": \"eu-central\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `locations` key in the reply contains an array of Location objects with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f9d61a5b-6ae0-4764-800d-2fd4f11b5b55",
      "documentation": "Get a Location",
      "method": "get",
      "endpoint": "locations/:id",
      "responses": [
        {
          "uuid": "cebb2445-509e-4d37-aba5-f6cec2ab3902",
          "body": "{\n  \"location\": {\n    \"city\": \"Falkenstein\",\n    \"country\": \"DE\",\n    \"description\": \"Falkenstein DC Park 1\",\n    \"id\": 1,\n    \"latitude\": 50.47612,\n    \"longitude\": 12.370071,\n    \"name\": \"fsn1\",\n    \"network_zone\": \"eu-central\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `location` key in the reply contains a Location object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5bea6f53-926d-4dfb-9c51-5364582e1501",
      "documentation": "Get all Networks",
      "method": "get",
      "endpoint": "networks",
      "responses": [
        {
          "uuid": "52501f9a-2bb6-4cfd-bda1-86c1c9e2333d",
          "body": "{\n  \"meta\": {\n    \"pagination\": {\n      \"last_page\": 4,\n      \"next_page\": 4,\n      \"page\": 3,\n      \"per_page\": 25,\n      \"previous_page\": 2,\n      \"total_entries\": 100\n    }\n  },\n  \"networks\": [\n    {\n      \"created\": \"2016-01-30T23:50:00+00:00\",\n      \"id\": 4711,\n      \"ip_range\": \"10.0.0.0/16\",\n      \"labels\": {},\n      \"load_balancers\": [\n        42\n      ],\n      \"name\": \"mynet\",\n      \"protection\": {\n        \"delete\": {{faker 'random.boolean'}}\n      },\n      \"routes\": [\n        {\n          \"destination\": \"10.100.1.0/24\",\n          \"gateway\": \"10.0.1.1\"\n        }\n      ],\n      \"servers\": [\n        42\n      ],\n      \"subnets\": [\n        {\n          \"gateway\": \"10.0.0.1\",\n          \"ip_range\": \"10.0.1.0/24\",\n          \"network_zone\": \"eu-central\",\n          \"type\": \"{{oneOf (array 'cloud' 'server' 'vswitch')}}\"\n        }\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `networks` key contains a list of networks",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "73c8061f-8f49-4702-9186-eb95cf11f34f",
      "documentation": "Create a Network",
      "method": "post",
      "endpoint": "networks",
      "responses": [
        {
          "uuid": "39959ddc-16d4-4143-9287-f5f748fb354d",
          "body": "{\n  \"network\": {\n    \"created\": \"2016-01-30T23:50:00+00:00\",\n    \"id\": 4711,\n    \"ip_range\": \"10.0.0.0/16\",\n    \"labels\": {},\n    \"load_balancers\": [\n      42\n    ],\n    \"name\": \"mynet\",\n    \"protection\": {\n      \"delete\": {{faker 'random.boolean'}}\n    },\n    \"routes\": [\n      {\n        \"destination\": \"10.100.1.0/24\",\n        \"gateway\": \"10.0.1.1\"\n      }\n    ],\n    \"servers\": [\n      42\n    ],\n    \"subnets\": [\n      {\n        \"gateway\": \"10.0.0.1\",\n        \"ip_range\": \"10.0.1.0/24\",\n        \"network_zone\": \"eu-central\",\n        \"type\": \"{{oneOf (array 'cloud' 'server' 'vswitch')}}\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `network` key contains the network that was just created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d1d8003c-bc66-4c1f-b90e-636f1380855f",
      "documentation": "Delete a Network",
      "method": "delete",
      "endpoint": "networks/:id",
      "responses": [
        {
          "uuid": "525c3eba-ba60-4594-972c-3f0dcfe2061c",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Network deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fabdd879-f17d-437b-9772-bc93b3358412",
      "documentation": "Get a Network",
      "method": "get",
      "endpoint": "networks/:id",
      "responses": [
        {
          "uuid": "970fc0d8-767f-4bd9-90aa-ed7fcb68fa74",
          "body": "{\n  \"network\": {\n    \"created\": \"2016-01-30T23:50:00+00:00\",\n    \"id\": 4711,\n    \"ip_range\": \"10.0.0.0/16\",\n    \"labels\": {},\n    \"load_balancers\": [\n      42\n    ],\n    \"name\": \"mynet\",\n    \"protection\": {\n      \"delete\": {{faker 'random.boolean'}}\n    },\n    \"routes\": [\n      {\n        \"destination\": \"10.100.1.0/24\",\n        \"gateway\": \"10.0.1.1\"\n      }\n    ],\n    \"servers\": [\n      42\n    ],\n    \"subnets\": [\n      {\n        \"gateway\": \"10.0.0.1\",\n        \"ip_range\": \"10.0.1.0/24\",\n        \"network_zone\": \"eu-central\",\n        \"type\": \"{{oneOf (array 'cloud' 'server' 'vswitch')}}\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `network` key contains the network",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c60e4835-af33-4b58-bdbe-407644a79073",
      "documentation": "Update a Network",
      "method": "put",
      "endpoint": "networks/:id",
      "responses": [
        {
          "uuid": "5f331c55-84fa-4f67-abdc-04a3e2671267",
          "body": "{\n  \"network\": {\n    \"created\": \"2016-01-30T23:50:00+00:00\",\n    \"id\": 4711,\n    \"ip_range\": \"10.0.0.0/16\",\n    \"labels\": {},\n    \"load_balancers\": [\n      42\n    ],\n    \"name\": \"mynet\",\n    \"protection\": {\n      \"delete\": {{faker 'random.boolean'}}\n    },\n    \"routes\": [\n      {\n        \"destination\": \"10.100.1.0/24\",\n        \"gateway\": \"10.0.1.1\"\n      }\n    ],\n    \"servers\": [\n      42\n    ],\n    \"subnets\": [\n      {\n        \"gateway\": \"10.0.0.1\",\n        \"ip_range\": \"10.0.1.0/24\",\n        \"network_zone\": \"eu-central\",\n        \"type\": \"{{oneOf (array 'cloud' 'server' 'vswitch')}}\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `network` key contains the updated network",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "38befd93-3e2d-405e-afc4-6354f9289a73",
      "documentation": "Get all Actions for a Network",
      "method": "get",
      "endpoint": "networks/:id/actions",
      "responses": [
        {
          "uuid": "a1eb7e36-7f7e-4dd3-914c-43afb2b2bbf2",
          "body": "{\n  \"actions\": [\n    {\n      \"command\": \"start_server\",\n      \"error\": {\n        \"code\": \"action_failed\",\n        \"message\": \"Action failed\"\n      },\n      \"finished\": \"2016-01-30T23:55:00+00:00\",\n      \"id\": 42,\n      \"progress\": 100,\n      \"resources\": [\n        {\n          \"id\": 42,\n          \"type\": \"server\"\n        }\n      ],\n      \"started\": \"2016-01-30T23:55:00+00:00\",\n      \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n      \"last_page\": 4,\n      \"next_page\": 4,\n      \"page\": 3,\n      \"per_page\": 25,\n      \"previous_page\": 2,\n      \"total_entries\": 100\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `actions` key contains a list of Actions",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8740ff35-1026-47f6-8a92-4877ae8270c3",
      "documentation": "Add a route to a Network",
      "method": "post",
      "endpoint": "networks/:id/actions/add_route",
      "responses": [
        {
          "uuid": "69733981-ed04-46a4-a6f8-1dd5e2379237",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `add_route` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4cb70508-5afd-489d-a653-fa2ee487dde8",
      "documentation": "Add a subnet to a Network",
      "method": "post",
      "endpoint": "networks/:id/actions/add_subnet",
      "responses": [
        {
          "uuid": "ad7545a4-9ee8-4c6a-948b-8b8ce7a3230f",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `add_subnet` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dae0428c-d41f-4436-8097-dbcda67c9d81",
      "documentation": "Change IP range of a Network",
      "method": "post",
      "endpoint": "networks/:id/actions/change_ip_range",
      "responses": [
        {
          "uuid": "8c60e0a5-4bb0-4833-87a3-7b92145b3c04",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `change_ip_range` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4e174c62-d242-4e1a-bebf-081b6e73689f",
      "documentation": "Change Network Protection",
      "method": "post",
      "endpoint": "networks/:id/actions/change_protection",
      "responses": [
        {
          "uuid": "ee8ea623-d107-4f12-b262-c537247a768e",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `change_protection` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "81f75dbb-8c86-4a8c-b122-918d39d4dd7e",
      "documentation": "Delete a route from a Network",
      "method": "post",
      "endpoint": "networks/:id/actions/delete_route",
      "responses": [
        {
          "uuid": "80aab13a-e842-4f05-bd3a-7fb4e94045de",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `delete_route` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "625eb797-77aa-4ff5-831c-8074bee40a0f",
      "documentation": "Delete a subnet from a Network",
      "method": "post",
      "endpoint": "networks/:id/actions/delete_subnet",
      "responses": [
        {
          "uuid": "8caf2f09-f8f8-4349-ab89-b36ebff92451",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `delete_subnet` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2828f478-26ad-4819-9fca-c1ec1699ba68",
      "documentation": "Get an Action for a Network",
      "method": "get",
      "endpoint": "networks/:id/actions/:action_id",
      "responses": [
        {
          "uuid": "0bd541d8-1cad-4047-b7c0-adfb3c69baa9",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `action` key contains the Network Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0e3c9ecf-3d1d-42a3-9fae-6c4afc2adec2",
      "documentation": "Get all PlacementGroups",
      "method": "get",
      "endpoint": "placement_groups",
      "responses": [
        {
          "uuid": "eb9db496-10ad-4527-ab00-199e73d3e738",
          "body": "{\n  \"meta\": {\n    \"pagination\": {\n      \"last_page\": 4,\n      \"next_page\": 4,\n      \"page\": 3,\n      \"per_page\": 25,\n      \"previous_page\": 2,\n      \"total_entries\": 100\n    }\n  },\n  \"placement_groups\": [\n    {\n      \"created\": \"2016-01-30T23:55:00+00:00\",\n      \"id\": 42,\n      \"labels\": {},\n      \"name\": \"my-resource\",\n      \"servers\": [\n        42\n      ],\n      \"type\": \"{{oneOf (array 'spread')}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `placement_groups` key contains an array of PlacementGroup objects",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9166d7e9-d40a-4505-9747-a5e38f8ad95f",
      "documentation": "Create a PlacementGroup",
      "method": "post",
      "endpoint": "placement_groups",
      "responses": [
        {
          "uuid": "6d761d03-ae47-4c76-bf9f-174acbcf00b1",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  },\n  \"placement_group\": {\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"labels\": {},\n    \"name\": \"my-resource\",\n    \"servers\": [\n      42\n    ],\n    \"type\": \"{{oneOf (array 'spread')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `PlacementGroup` key contains the PlacementGroup that was just created.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bcc37def-555c-4949-8dc9-c3dbe7035b0d",
      "documentation": "Delete a PlacementGroup",
      "method": "delete",
      "endpoint": "placement_groups/:id",
      "responses": [
        {
          "uuid": "3b5f01e1-4aae-4a9a-b01f-6aad36b1f71c",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "PlacementGroup deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "81afb2da-11a4-4728-95f7-05c31c8313bc",
      "documentation": "Get a PlacementGroup",
      "method": "get",
      "endpoint": "placement_groups/:id",
      "responses": [
        {
          "uuid": "c2f6a787-744f-445b-b84b-938ea2eb750c",
          "body": "{\n  \"placement_group\": {\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"labels\": {},\n    \"name\": \"my-resource\",\n    \"servers\": [\n      42\n    ],\n    \"type\": \"{{oneOf (array 'spread')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `placement_group` key contains a PlacementGroup object",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2adb438a-a105-4b6c-821f-500c54f46d6f",
      "documentation": "Update a PlacementGroup",
      "method": "put",
      "endpoint": "placement_groups/:id",
      "responses": [
        {
          "uuid": "ff3dc6fe-b7ff-4655-8348-f4d28ceefae4",
          "body": "{\n  \"placement_group\": {\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"labels\": {},\n    \"name\": \"my-resource\",\n    \"servers\": [\n      42\n    ],\n    \"type\": \"{{oneOf (array 'spread')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `certificate` key contains the PlacementGroup that was just updated",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c28ae886-7e7f-425c-b14c-cf2658ca3ec6",
      "documentation": "Get all prices",
      "method": "get",
      "endpoint": "pricing",
      "responses": [
        {
          "uuid": "1061762d-c673-406f-96d4-0c508ad40723",
          "body": "{\n  \"pricing\": {\n    \"currency\": \"EUR\",\n    \"floating_ip\": {\n      \"price_monthly\": {\n        \"gross\": \"1.1900000000000000\",\n        \"net\": \"1.0000000000\"\n      }\n    },\n    \"floating_ips\": [\n      {\n        \"prices\": [\n          {\n            \"location\": \"fsn1\",\n            \"price_monthly\": {\n              \"gross\": \"1.1900000000000000\",\n              \"net\": \"1.0000000000\"\n            }\n          }\n        ],\n        \"type\": \"{{oneOf (array 'ipv4' 'ipv6')}}\"\n      }\n    ],\n    \"image\": {\n      \"price_per_gb_month\": {\n        \"gross\": \"1.1900000000000000\",\n        \"net\": \"1.0000000000\"\n      }\n    },\n    \"load_balancer_types\": [\n      {\n        \"id\": 1,\n        \"name\": \"lb11\",\n        \"prices\": [\n          {\n            \"location\": \"fsn1\",\n            \"price_hourly\": {\n              \"gross\": \"1.1900000000000000\",\n              \"net\": \"1.0000000000\"\n            },\n            \"price_monthly\": {\n              \"gross\": \"1.1900000000000000\",\n              \"net\": \"1.0000000000\"\n            }\n          }\n        ]\n      }\n    ],\n    \"server_backup\": {\n      \"percentage\": \"20.0000000000\"\n    },\n    \"server_types\": [\n      {\n        \"id\": 4,\n        \"name\": \"cx11\",\n        \"prices\": [\n          {\n            \"location\": \"fsn1\",\n            \"price_hourly\": {\n              \"gross\": \"1.1900000000000000\",\n              \"net\": \"1.0000000000\"\n            },\n            \"price_monthly\": {\n              \"gross\": \"1.1900000000000000\",\n              \"net\": \"1.0000000000\"\n            }\n          }\n        ]\n      }\n    ],\n    \"traffic\": {\n      \"price_per_tb\": {\n        \"gross\": \"1.1900000000000000\",\n        \"net\": \"1.0000000000\"\n      }\n    },\n    \"vat_rate\": \"19.000000\",\n    \"volume\": {\n      \"price_per_gb_month\": {\n        \"gross\": \"1.1900000000000000\",\n        \"net\": \"1.0000000000\"\n      }\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `pricing` key in the reply contains an pricing object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9cd4c06a-fb94-4364-ae3f-bf8dc7d87bec",
      "documentation": "Get all Server Types",
      "method": "get",
      "endpoint": "server_types",
      "responses": [
        {
          "uuid": "d5c01106-c536-4816-b41a-4e50bac24a85",
          "body": "{\n  \"server_types\": [\n    {\n      \"cores\": 1,\n      \"cpu_type\": \"{{oneOf (array 'shared' 'dedicated')}}\",\n      \"deprecated\": {{faker 'random.boolean'}},\n      \"description\": \"CX11\",\n      \"disk\": 24,\n      \"id\": 1,\n      \"memory\": 1,\n      \"name\": \"cx11\",\n      \"prices\": [\n        {\n          \"location\": \"fsn1\",\n          \"price_hourly\": {\n            \"gross\": \"1.1900000000000000\",\n            \"net\": \"1.0000000000\"\n          },\n          \"price_monthly\": {\n            \"gross\": \"1.1900000000000000\",\n            \"net\": \"1.0000000000\"\n          }\n        }\n      ],\n      \"storage_type\": \"{{oneOf (array 'local' 'network')}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `server_types` key in the reply contains an array of Server type objects with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b3bb2fa7-7788-417f-a58f-bcaef6e0303e",
      "documentation": "Get a Server Type",
      "method": "get",
      "endpoint": "server_types/:id",
      "responses": [
        {
          "uuid": "3cfc99ef-c866-4cc4-98ce-5604d52a47bc",
          "body": "{\n  \"server_type\": {\n    \"cores\": 1,\n    \"cpu_type\": \"{{oneOf (array 'shared' 'dedicated')}}\",\n    \"deprecated\": {{faker 'random.boolean'}},\n    \"description\": \"CX11\",\n    \"disk\": 24,\n    \"id\": 1,\n    \"memory\": 1,\n    \"name\": \"cx11\",\n    \"prices\": [\n      {\n        \"location\": \"fsn1\",\n        \"price_hourly\": {\n          \"gross\": \"1.1900000000000000\",\n          \"net\": \"1.0000000000\"\n        },\n        \"price_monthly\": {\n          \"gross\": \"1.1900000000000000\",\n          \"net\": \"1.0000000000\"\n        }\n      }\n    ],\n    \"storage_type\": \"{{oneOf (array 'local' 'network')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `server_type` key in the reply contains a Server type object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "05765373-52cc-4541-8957-17821005c042",
      "documentation": "Get all Servers",
      "method": "get",
      "endpoint": "servers",
      "responses": [
        {
          "uuid": "e06d5510-d67b-47ae-8d47-f5ee65243d15",
          "body": "{\n  \"meta\": {\n    \"pagination\": {\n      \"last_page\": 4,\n      \"next_page\": 4,\n      \"page\": 3,\n      \"per_page\": 25,\n      \"previous_page\": 2,\n      \"total_entries\": 100\n    }\n  },\n  \"servers\": [\n    {\n      \"backup_window\": \"22-02\",\n      \"created\": \"2016-01-30T23:55:00+00:00\",\n      \"datacenter\": {\n        \"description\": \"Falkenstein DC Park 8\",\n        \"id\": 42,\n        \"location\": {\n          \"city\": \"Falkenstein\",\n          \"country\": \"DE\",\n          \"description\": \"Falkenstein DC Park 1\",\n          \"id\": 1,\n          \"latitude\": 50.47612,\n          \"longitude\": 12.370071,\n          \"name\": \"fsn1\",\n          \"network_zone\": \"eu-central\"\n        },\n        \"name\": \"fsn1-dc8\",\n        \"server_types\": {\n          \"available\": [\n            1,\n            2,\n            3\n          ],\n          \"available_for_migration\": [\n            1,\n            2,\n            3\n          ],\n          \"supported\": [\n            1,\n            2,\n            3\n          ]\n        }\n      },\n      \"id\": 42,\n      \"image\": {\n        \"bound_to\": {{faker 'random.number'}},\n        \"build_id\": \"c313fe40383af26094a5a92026054320ab55abc7\",\n        \"created\": \"2016-01-30T23:55:00+00:00\",\n        \"created_from\": {\n          \"id\": 1,\n          \"name\": \"Server\"\n        },\n        \"deleted\": \"\",\n        \"deprecated\": \"2018-02-28T00:00:00+00:00\",\n        \"description\": \"Ubuntu 20.04 Standard 64 bit\",\n        \"disk_size\": 10,\n        \"id\": 42,\n        \"image_size\": 2.3,\n        \"labels\": {},\n        \"name\": \"ubuntu-20.04\",\n        \"os_flavor\": \"{{oneOf (array 'ubuntu' 'centos' 'debian' 'fedora' 'unknown')}}\",\n        \"os_version\": \"20.04\",\n        \"protection\": {\n          \"delete\": {{faker 'random.boolean'}}\n        },\n        \"rapid_deploy\": {{faker 'random.boolean'}},\n        \"status\": \"{{oneOf (array 'available' 'creating' 'unavailable')}}\",\n        \"type\": \"{{oneOf (array 'system' 'app' 'snapshot' 'backup' 'temporary')}}\"\n      },\n      \"included_traffic\": 654321,\n      \"ingoing_traffic\": 123456,\n      \"iso\": {\n        \"deprecated\": \"2018-02-28T00:00:00+00:00\",\n        \"description\": \"FreeBSD 11.0 x64\",\n        \"id\": 42,\n        \"name\": \"FreeBSD-11.0-RELEASE-amd64-dvd1\",\n        \"type\": \"{{oneOf (array 'public' 'private')}}\"\n      },\n      \"labels\": {},\n      \"load_balancers\": [\n        {{faker 'random.number'}}\n      ],\n      \"locked\": {{faker 'random.boolean'}},\n      \"name\": \"my-resource\",\n      \"outgoing_traffic\": 123456,\n      \"placement_group\": {\n        \"created\": \"2016-01-30T23:55:00+00:00\",\n        \"id\": 42,\n        \"labels\": {},\n        \"name\": \"my-resource\",\n        \"servers\": [\n          42\n        ],\n        \"type\": \"{{oneOf (array 'spread')}}\"\n      },\n      \"primary_disk_size\": 50,\n      \"private_net\": [\n        {\n          \"alias_ips\": [\n            \"\"\n          ],\n          \"ip\": \"10.0.0.2\",\n          \"mac_address\": \"86:00:ff:2a:7d:e1\",\n          \"network\": 4711\n        }\n      ],\n      \"protection\": {\n        \"delete\": {{faker 'random.boolean'}},\n        \"rebuild\": {{faker 'random.boolean'}}\n      },\n      \"public_net\": {\n        \"firewalls\": [\n          {\n            \"id\": 42,\n            \"status\": \"{{oneOf (array 'applied' 'pending')}}\"\n          }\n        ],\n        \"floating_ips\": [\n          478\n        ],\n        \"ipv4\": {\n          \"blocked\": {{faker 'random.boolean'}},\n          \"dns_ptr\": \"server01.example.com\",\n          \"ip\": \"1.2.3.4\"\n        },\n        \"ipv6\": {\n          \"blocked\": {{faker 'random.boolean'}},\n          \"dns_ptr\": [\n            {\n              \"dns_ptr\": \"server.example.com\",\n              \"ip\": \"2001:db8::1\"\n            }\n          ],\n          \"ip\": \"2001:db8::/64\"\n        }\n      },\n      \"rescue_enabled\": {{faker 'random.boolean'}},\n      \"server_type\": {\n        \"cores\": 1,\n        \"cpu_type\": \"{{oneOf (array 'shared' 'dedicated')}}\",\n        \"deprecated\": {{faker 'random.boolean'}},\n        \"description\": \"CX11\",\n        \"disk\": 25,\n        \"id\": 1,\n        \"memory\": 1,\n        \"name\": \"cx11\",\n        \"prices\": [\n          {\n            \"location\": \"fsn1\",\n            \"price_hourly\": {\n              \"gross\": \"1.1900000000000000\",\n              \"net\": \"1.0000000000\"\n            },\n            \"price_monthly\": {\n              \"gross\": \"1.1900000000000000\",\n              \"net\": \"1.0000000000\"\n            }\n          }\n        ],\n        \"storage_type\": \"{{oneOf (array 'local' 'network')}}\"\n      },\n      \"status\": \"{{oneOf (array 'running' 'initializing' 'starting' 'stopping' 'off' 'deleting' 'migrating' 'rebuilding' 'unknown')}}\",\n      \"volumes\": [\n        {{faker 'random.number'}}\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A paged array of servers",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "x-next",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bc3f7e32-c86f-4e57-8323-08fa86620005",
      "documentation": "Create a Server",
      "method": "post",
      "endpoint": "servers",
      "responses": [
        {
          "uuid": "6ec6696a-789c-4b20-8f30-c6338f226e37",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  },\n  \"next_actions\": [\n    {\n      \"command\": \"start_server\",\n      \"error\": {\n        \"code\": \"action_failed\",\n        \"message\": \"Action failed\"\n      },\n      \"finished\": \"2016-01-30T23:55:00+00:00\",\n      \"id\": 42,\n      \"progress\": 100,\n      \"resources\": [\n        {\n          \"id\": 42,\n          \"type\": \"server\"\n        }\n      ],\n      \"started\": \"2016-01-30T23:55:00+00:00\",\n      \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n    }\n  ],\n  \"root_password\": \"YItygq1v3GYjjMomLaKc\",\n  \"server\": {\n    \"backup_window\": \"22-02\",\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"datacenter\": {\n      \"description\": \"Falkenstein DC Park 8\",\n      \"id\": 42,\n      \"location\": {\n        \"city\": \"Falkenstein\",\n        \"country\": \"DE\",\n        \"description\": \"Falkenstein DC Park 1\",\n        \"id\": 1,\n        \"latitude\": 50.47612,\n        \"longitude\": 12.370071,\n        \"name\": \"fsn1\",\n        \"network_zone\": \"eu-central\"\n      },\n      \"name\": \"fsn1-dc8\",\n      \"server_types\": {\n        \"available\": [\n          1,\n          2,\n          3\n        ],\n        \"available_for_migration\": [\n          1,\n          2,\n          3\n        ],\n        \"supported\": [\n          1,\n          2,\n          3\n        ]\n      }\n    },\n    \"id\": 42,\n    \"image\": {\n      \"bound_to\": {{faker 'random.number'}},\n      \"build_id\": \"c313fe40383af26094a5a92026054320ab55abc7\",\n      \"created\": \"2016-01-30T23:55:00+00:00\",\n      \"created_from\": {\n        \"id\": 1,\n        \"name\": \"Server\"\n      },\n      \"deleted\": \"\",\n      \"deprecated\": \"2018-02-28T00:00:00+00:00\",\n      \"description\": \"Ubuntu 20.04 Standard 64 bit\",\n      \"disk_size\": 10,\n      \"id\": 42,\n      \"image_size\": 2.3,\n      \"labels\": {},\n      \"name\": \"ubuntu-20.04\",\n      \"os_flavor\": \"{{oneOf (array 'ubuntu' 'centos' 'debian' 'fedora' 'unknown')}}\",\n      \"os_version\": \"20.04\",\n      \"protection\": {\n        \"delete\": {{faker 'random.boolean'}}\n      },\n      \"rapid_deploy\": {{faker 'random.boolean'}},\n      \"status\": \"{{oneOf (array 'available' 'creating' 'unavailable')}}\",\n      \"type\": \"{{oneOf (array 'system' 'app' 'snapshot' 'backup' 'temporary')}}\"\n    },\n    \"included_traffic\": 654321,\n    \"ingoing_traffic\": 123456,\n    \"iso\": {\n      \"deprecated\": \"2018-02-28T00:00:00+00:00\",\n      \"description\": \"FreeBSD 11.0 x64\",\n      \"id\": 42,\n      \"name\": \"FreeBSD-11.0-RELEASE-amd64-dvd1\",\n      \"type\": \"{{oneOf (array 'public' 'private')}}\"\n    },\n    \"labels\": {},\n    \"load_balancers\": [\n      {{faker 'random.number'}}\n    ],\n    \"locked\": {{faker 'random.boolean'}},\n    \"name\": \"my-resource\",\n    \"outgoing_traffic\": 123456,\n    \"placement_group\": {\n      \"created\": \"2016-01-30T23:55:00+00:00\",\n      \"id\": 42,\n      \"labels\": {},\n      \"name\": \"my-resource\",\n      \"servers\": [\n        42\n      ],\n      \"type\": \"{{oneOf (array 'spread')}}\"\n    },\n    \"primary_disk_size\": 50,\n    \"private_net\": [\n      {\n        \"alias_ips\": [\n          \"\"\n        ],\n        \"ip\": \"10.0.0.2\",\n        \"mac_address\": \"86:00:ff:2a:7d:e1\",\n        \"network\": 4711\n      }\n    ],\n    \"protection\": {\n      \"delete\": {{faker 'random.boolean'}},\n      \"rebuild\": {{faker 'random.boolean'}}\n    },\n    \"public_net\": {\n      \"firewalls\": [\n        {\n          \"id\": 42,\n          \"status\": \"{{oneOf (array 'applied' 'pending')}}\"\n        }\n      ],\n      \"floating_ips\": [\n        478\n      ],\n      \"ipv4\": {\n        \"blocked\": {{faker 'random.boolean'}},\n        \"dns_ptr\": \"server01.example.com\",\n        \"ip\": \"1.2.3.4\"\n      },\n      \"ipv6\": {\n        \"blocked\": {{faker 'random.boolean'}},\n        \"dns_ptr\": [\n          {\n            \"dns_ptr\": \"server.example.com\",\n            \"ip\": \"2001:db8::1\"\n          }\n        ],\n        \"ip\": \"2001:db8::/64\"\n      }\n    },\n    \"rescue_enabled\": {{faker 'random.boolean'}},\n    \"server_type\": {\n      \"cores\": 1,\n      \"cpu_type\": \"{{oneOf (array 'shared' 'dedicated')}}\",\n      \"deprecated\": {{faker 'random.boolean'}},\n      \"description\": \"CX11\",\n      \"disk\": 25,\n      \"id\": 1,\n      \"memory\": 1,\n      \"name\": \"cx11\",\n      \"prices\": [\n        {\n          \"location\": \"fsn1\",\n          \"price_hourly\": {\n            \"gross\": \"1.1900000000000000\",\n            \"net\": \"1.0000000000\"\n          },\n          \"price_monthly\": {\n            \"gross\": \"1.1900000000000000\",\n            \"net\": \"1.0000000000\"\n          }\n        }\n      ],\n      \"storage_type\": \"{{oneOf (array 'local' 'network')}}\"\n    },\n    \"status\": \"{{oneOf (array 'running' 'initializing' 'starting' 'stopping' 'off' 'deleting' 'migrating' 'rebuilding' 'unknown')}}\",\n    \"volumes\": [\n      {{faker 'random.number'}}\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `server` key in the reply contains a Server object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cc34c4ac-2715-4277-b7bb-f507b8535b77",
      "documentation": "Delete a Server",
      "method": "delete",
      "endpoint": "servers/:id",
      "responses": [
        {
          "uuid": "8413970d-b6f5-4860-8a4b-e18210848d52",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `action` key in the reply contains an Action object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2cb64ccb-ba59-4a27-b576-3ea14189402f",
      "documentation": "Get a Server",
      "method": "get",
      "endpoint": "servers/:id",
      "responses": [
        {
          "uuid": "ee2a1b8b-a4b2-4b82-b73d-c9ad0aa254a2",
          "body": "{\n  \"server\": {\n    \"backup_window\": \"22-02\",\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"datacenter\": {\n      \"description\": \"Falkenstein DC Park 8\",\n      \"id\": 42,\n      \"location\": {\n        \"city\": \"Falkenstein\",\n        \"country\": \"DE\",\n        \"description\": \"Falkenstein DC Park 1\",\n        \"id\": 1,\n        \"latitude\": 50.47612,\n        \"longitude\": 12.370071,\n        \"name\": \"fsn1\",\n        \"network_zone\": \"eu-central\"\n      },\n      \"name\": \"fsn1-dc8\",\n      \"server_types\": {\n        \"available\": [\n          1,\n          2,\n          3\n        ],\n        \"available_for_migration\": [\n          1,\n          2,\n          3\n        ],\n        \"supported\": [\n          1,\n          2,\n          3\n        ]\n      }\n    },\n    \"id\": 42,\n    \"image\": {\n      \"bound_to\": {{faker 'random.number'}},\n      \"build_id\": \"c313fe40383af26094a5a92026054320ab55abc7\",\n      \"created\": \"2016-01-30T23:55:00+00:00\",\n      \"created_from\": {\n        \"id\": 1,\n        \"name\": \"Server\"\n      },\n      \"deleted\": \"\",\n      \"deprecated\": \"2018-02-28T00:00:00+00:00\",\n      \"description\": \"Ubuntu 20.04 Standard 64 bit\",\n      \"disk_size\": 10,\n      \"id\": 42,\n      \"image_size\": 2.3,\n      \"labels\": {},\n      \"name\": \"ubuntu-20.04\",\n      \"os_flavor\": \"{{oneOf (array 'ubuntu' 'centos' 'debian' 'fedora' 'unknown')}}\",\n      \"os_version\": \"20.04\",\n      \"protection\": {\n        \"delete\": {{faker 'random.boolean'}}\n      },\n      \"rapid_deploy\": {{faker 'random.boolean'}},\n      \"status\": \"{{oneOf (array 'available' 'creating' 'unavailable')}}\",\n      \"type\": \"{{oneOf (array 'system' 'app' 'snapshot' 'backup' 'temporary')}}\"\n    },\n    \"included_traffic\": 654321,\n    \"ingoing_traffic\": 123456,\n    \"iso\": {\n      \"deprecated\": \"2018-02-28T00:00:00+00:00\",\n      \"description\": \"FreeBSD 11.0 x64\",\n      \"id\": 42,\n      \"name\": \"FreeBSD-11.0-RELEASE-amd64-dvd1\",\n      \"type\": \"{{oneOf (array 'public' 'private')}}\"\n    },\n    \"labels\": {},\n    \"load_balancers\": [\n      {{faker 'random.number'}}\n    ],\n    \"locked\": {{faker 'random.boolean'}},\n    \"name\": \"my-resource\",\n    \"outgoing_traffic\": 123456,\n    \"placement_group\": {\n      \"created\": \"2016-01-30T23:55:00+00:00\",\n      \"id\": 42,\n      \"labels\": {},\n      \"name\": \"my-resource\",\n      \"servers\": [\n        42\n      ],\n      \"type\": \"{{oneOf (array 'spread')}}\"\n    },\n    \"primary_disk_size\": 50,\n    \"private_net\": [\n      {\n        \"alias_ips\": [\n          \"\"\n        ],\n        \"ip\": \"10.0.0.2\",\n        \"mac_address\": \"86:00:ff:2a:7d:e1\",\n        \"network\": 4711\n      }\n    ],\n    \"protection\": {\n      \"delete\": {{faker 'random.boolean'}},\n      \"rebuild\": {{faker 'random.boolean'}}\n    },\n    \"public_net\": {\n      \"firewalls\": [\n        {\n          \"id\": 42,\n          \"status\": \"{{oneOf (array 'applied' 'pending')}}\"\n        }\n      ],\n      \"floating_ips\": [\n        478\n      ],\n      \"ipv4\": {\n        \"blocked\": {{faker 'random.boolean'}},\n        \"dns_ptr\": \"server01.example.com\",\n        \"ip\": \"1.2.3.4\"\n      },\n      \"ipv6\": {\n        \"blocked\": {{faker 'random.boolean'}},\n        \"dns_ptr\": [\n          {\n            \"dns_ptr\": \"server.example.com\",\n            \"ip\": \"2001:db8::1\"\n          }\n        ],\n        \"ip\": \"2001:db8::/64\"\n      }\n    },\n    \"rescue_enabled\": {{faker 'random.boolean'}},\n    \"server_type\": {\n      \"cores\": 1,\n      \"cpu_type\": \"{{oneOf (array 'shared' 'dedicated')}}\",\n      \"deprecated\": {{faker 'random.boolean'}},\n      \"description\": \"CX11\",\n      \"disk\": 25,\n      \"id\": 1,\n      \"memory\": 1,\n      \"name\": \"cx11\",\n      \"prices\": [\n        {\n          \"location\": \"fsn1\",\n          \"price_hourly\": {\n            \"gross\": \"1.1900000000000000\",\n            \"net\": \"1.0000000000\"\n          },\n          \"price_monthly\": {\n            \"gross\": \"1.1900000000000000\",\n            \"net\": \"1.0000000000\"\n          }\n        }\n      ],\n      \"storage_type\": \"{{oneOf (array 'local' 'network')}}\"\n    },\n    \"status\": \"{{oneOf (array 'running' 'initializing' 'starting' 'stopping' 'off' 'deleting' 'migrating' 'rebuilding' 'unknown')}}\",\n    \"volumes\": [\n      {{faker 'random.number'}}\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `server` key in the reply contains a Server object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3cc0f6a3-ed33-4744-a20c-95c70535d657",
      "documentation": "Update a Server",
      "method": "put",
      "endpoint": "servers/:id",
      "responses": [
        {
          "uuid": "cfd7f24e-9f4a-4b2a-93b7-0c0e9503d0c1",
          "body": "{\n  \"server\": {\n    \"backup_window\": \"22-02\",\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"datacenter\": {\n      \"description\": \"Falkenstein DC Park 8\",\n      \"id\": 42,\n      \"location\": {\n        \"city\": \"Falkenstein\",\n        \"country\": \"DE\",\n        \"description\": \"Falkenstein DC Park 1\",\n        \"id\": 1,\n        \"latitude\": 50.47612,\n        \"longitude\": 12.370071,\n        \"name\": \"fsn1\",\n        \"network_zone\": \"eu-central\"\n      },\n      \"name\": \"fsn1-dc8\",\n      \"server_types\": {\n        \"available\": [\n          1,\n          2,\n          3\n        ],\n        \"available_for_migration\": [\n          1,\n          2,\n          3\n        ],\n        \"supported\": [\n          1,\n          2,\n          3\n        ]\n      }\n    },\n    \"id\": 42,\n    \"image\": {\n      \"bound_to\": {{faker 'random.number'}},\n      \"build_id\": \"c313fe40383af26094a5a92026054320ab55abc7\",\n      \"created\": \"2016-01-30T23:55:00+00:00\",\n      \"created_from\": {\n        \"id\": 1,\n        \"name\": \"Server\"\n      },\n      \"deleted\": \"\",\n      \"deprecated\": \"2018-02-28T00:00:00+00:00\",\n      \"description\": \"Ubuntu 20.04 Standard 64 bit\",\n      \"disk_size\": 10,\n      \"id\": 42,\n      \"image_size\": 2.3,\n      \"labels\": {},\n      \"name\": \"ubuntu-20.04\",\n      \"os_flavor\": \"{{oneOf (array 'ubuntu' 'centos' 'debian' 'fedora' 'unknown')}}\",\n      \"os_version\": \"20.04\",\n      \"protection\": {\n        \"delete\": {{faker 'random.boolean'}}\n      },\n      \"rapid_deploy\": {{faker 'random.boolean'}},\n      \"status\": \"{{oneOf (array 'available' 'creating' 'unavailable')}}\",\n      \"type\": \"{{oneOf (array 'system' 'app' 'snapshot' 'backup' 'temporary')}}\"\n    },\n    \"included_traffic\": 654321,\n    \"ingoing_traffic\": 123456,\n    \"iso\": {\n      \"deprecated\": \"2018-02-28T00:00:00+00:00\",\n      \"description\": \"FreeBSD 11.0 x64\",\n      \"id\": 42,\n      \"name\": \"FreeBSD-11.0-RELEASE-amd64-dvd1\",\n      \"type\": \"{{oneOf (array 'public' 'private')}}\"\n    },\n    \"labels\": {},\n    \"load_balancers\": [\n      {{faker 'random.number'}}\n    ],\n    \"locked\": {{faker 'random.boolean'}},\n    \"name\": \"my-resource\",\n    \"outgoing_traffic\": 123456,\n    \"placement_group\": {\n      \"created\": \"2016-01-30T23:55:00+00:00\",\n      \"id\": 42,\n      \"labels\": {},\n      \"name\": \"my-resource\",\n      \"servers\": [\n        42\n      ],\n      \"type\": \"{{oneOf (array 'spread')}}\"\n    },\n    \"primary_disk_size\": 50,\n    \"private_net\": [\n      {\n        \"alias_ips\": [\n          \"\"\n        ],\n        \"ip\": \"10.0.0.2\",\n        \"mac_address\": \"86:00:ff:2a:7d:e1\",\n        \"network\": 4711\n      }\n    ],\n    \"protection\": {\n      \"delete\": {{faker 'random.boolean'}},\n      \"rebuild\": {{faker 'random.boolean'}}\n    },\n    \"public_net\": {\n      \"firewalls\": [\n        {\n          \"id\": 42,\n          \"status\": \"{{oneOf (array 'applied' 'pending')}}\"\n        }\n      ],\n      \"floating_ips\": [\n        478\n      ],\n      \"ipv4\": {\n        \"blocked\": {{faker 'random.boolean'}},\n        \"dns_ptr\": \"server01.example.com\",\n        \"ip\": \"1.2.3.4\"\n      },\n      \"ipv6\": {\n        \"blocked\": {{faker 'random.boolean'}},\n        \"dns_ptr\": [\n          {\n            \"dns_ptr\": \"server.example.com\",\n            \"ip\": \"2001:db8::1\"\n          }\n        ],\n        \"ip\": \"2001:db8::/64\"\n      }\n    },\n    \"rescue_enabled\": {{faker 'random.boolean'}},\n    \"server_type\": {\n      \"cores\": 1,\n      \"cpu_type\": \"{{oneOf (array 'shared' 'dedicated')}}\",\n      \"deprecated\": {{faker 'random.boolean'}},\n      \"description\": \"CX11\",\n      \"disk\": 25,\n      \"id\": 1,\n      \"memory\": 1,\n      \"name\": \"cx11\",\n      \"prices\": [\n        {\n          \"location\": \"fsn1\",\n          \"price_hourly\": {\n            \"gross\": \"1.1900000000000000\",\n            \"net\": \"1.0000000000\"\n          },\n          \"price_monthly\": {\n            \"gross\": \"1.1900000000000000\",\n            \"net\": \"1.0000000000\"\n          }\n        }\n      ],\n      \"storage_type\": \"{{oneOf (array 'local' 'network')}}\"\n    },\n    \"status\": \"{{oneOf (array 'running' 'initializing' 'starting' 'stopping' 'off' 'deleting' 'migrating' 'rebuilding' 'unknown')}}\",\n    \"volumes\": [\n      {{faker 'random.number'}}\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `server` key in the reply contains the updated Server",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ff338ab1-dadf-4954-b71c-b499378895ac",
      "documentation": "Get all Actions for a Server",
      "method": "get",
      "endpoint": "servers/:id/actions",
      "responses": [
        {
          "uuid": "30532f0b-1181-42df-bc64-047bfca45010",
          "body": "{\n  \"actions\": [\n    {\n      \"command\": \"start_server\",\n      \"error\": {\n        \"code\": \"action_failed\",\n        \"message\": \"Action failed\"\n      },\n      \"finished\": \"2016-01-30T23:55:00+00:00\",\n      \"id\": 42,\n      \"progress\": 100,\n      \"resources\": [\n        {\n          \"id\": 42,\n          \"type\": \"server\"\n        }\n      ],\n      \"started\": \"2016-01-30T23:55:00+00:00\",\n      \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n      \"last_page\": 4,\n      \"next_page\": 4,\n      \"page\": 3,\n      \"per_page\": 25,\n      \"previous_page\": 2,\n      \"total_entries\": 100\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `actions` key contains a list of Actions",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7e43ca71-b05a-435e-a32e-71feda8484c1",
      "documentation": "Add a Server to a Placement Group",
      "method": "post",
      "endpoint": "servers/:id/actions/add_to_placement_group",
      "responses": [
        {
          "uuid": "39958497-d2eb-42ff-bb08-2c775767a013",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key in the reply contains an Action object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "78fe6b17-c507-4b2c-b079-aee9b5d540c6",
      "documentation": "Attach an ISO to a Server",
      "method": "post",
      "endpoint": "servers/:id/actions/attach_iso",
      "responses": [
        {
          "uuid": "9f6bd543-45d3-4ce7-9d95-1a69f7f7ebad",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key in the reply contains an Action object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "832dfc8d-b97d-4452-87b4-72d3e78113a7",
      "documentation": "Attach a Server to a Network",
      "method": "post",
      "endpoint": "servers/:id/actions/attach_to_network",
      "responses": [
        {
          "uuid": "0caf28a5-fcff-464a-903e-b7672e3b0811",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key in the reply contains an Action object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6c8d350f-264c-415d-8fc4-17df83f8f5a1",
      "documentation": "Change alias IPs of a Network",
      "method": "post",
      "endpoint": "servers/:id/actions/change_alias_ips",
      "responses": [
        {
          "uuid": "07e5ceb6-a654-4072-a47f-9dd7cbe9c8d2",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key in the reply contains an Action object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2a8dc957-a56a-4b56-ae21-2de244b067aa",
      "documentation": "Change reverse DNS entry for this Server",
      "method": "post",
      "endpoint": "servers/:id/actions/change_dns_ptr",
      "responses": [
        {
          "uuid": "99838216-bd7f-4ba3-98ba-b9c2cad21fee",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key in the reply contains an Action object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "32ad97da-5a13-4221-ae39-d3adbbb9ee2d",
      "documentation": "Change Server Protection",
      "method": "post",
      "endpoint": "servers/:id/actions/change_protection",
      "responses": [
        {
          "uuid": "72d62161-0533-405f-9718-4110ca073462",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key in the reply contains an Action object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "71191099-14ef-45cf-bb77-588e528fdb03",
      "documentation": "Change the Type of a Server",
      "method": "post",
      "endpoint": "servers/:id/actions/change_type",
      "responses": [
        {
          "uuid": "5b2cfd8c-e857-4ad0-958d-240311aac218",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key in the reply contains an Action object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "51d6a7dc-8f61-42ea-9a41-418bc846c1cf",
      "documentation": "Create Image from a Server",
      "method": "post",
      "endpoint": "servers/:id/actions/create_image",
      "responses": [
        {
          "uuid": "9c3d9510-68d8-4109-99a8-39668fa17eaa",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  },\n  \"image\": {\n    \"bound_to\": {{faker 'random.number'}},\n    \"build_id\": \"c313fe40383af26094a5a92026054320ab55abc7\",\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"created_from\": {\n      \"id\": 1,\n      \"name\": \"Server\"\n    },\n    \"deleted\": \"\",\n    \"deprecated\": \"2018-02-28T00:00:00+00:00\",\n    \"description\": \"Ubuntu 20.04 Standard 64 bit\",\n    \"disk_size\": 10,\n    \"id\": 42,\n    \"image_size\": 2.3,\n    \"labels\": {},\n    \"name\": \"ubuntu-20.04\",\n    \"os_flavor\": \"{{oneOf (array 'ubuntu' 'centos' 'debian' 'fedora' 'unknown')}}\",\n    \"os_version\": \"20.04\",\n    \"protection\": {\n      \"delete\": {{faker 'random.boolean'}}\n    },\n    \"rapid_deploy\": {{faker 'random.boolean'}},\n    \"status\": \"{{oneOf (array 'available' 'creating' 'unavailable')}}\",\n    \"type\": \"{{oneOf (array 'system' 'app' 'snapshot' 'backup' 'temporary')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `image` key in the reply contains an the created Image, which is an object with this structure\n\nThe `action` key in the reply contains an Action object with this structure\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "862d605c-0de3-4668-980e-7c9903022315",
      "documentation": "Detach a Server from a Network",
      "method": "post",
      "endpoint": "servers/:id/actions/detach_from_network",
      "responses": [
        {
          "uuid": "45ce7450-a7fb-46cd-967b-550d876e712e",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key in the reply contains an Action object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dea2d613-9468-4d48-aa9c-c910ff3d9038",
      "documentation": "Detach an ISO from a Server",
      "method": "post",
      "endpoint": "servers/:id/actions/detach_iso",
      "responses": [
        {
          "uuid": "db417547-2952-4efb-aef6-e80624adf774",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key in the reply contains an Action object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2a5bfd27-424c-4002-a87a-bcac3406baa7",
      "documentation": "Disable Backups for a Server",
      "method": "post",
      "endpoint": "servers/:id/actions/disable_backup",
      "responses": [
        {
          "uuid": "d76b7087-3119-4e4f-9b4f-4f18a3a5b523",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key in the reply contains an Action object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4cd0d2dd-f6c8-484f-86d3-23996b95aa08",
      "documentation": "Disable Rescue Mode for a Server",
      "method": "post",
      "endpoint": "servers/:id/actions/disable_rescue",
      "responses": [
        {
          "uuid": "f63c8f70-7c0e-48d7-af88-467604789d84",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key in the reply contains an Action object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8aee8659-62a7-496e-a169-0547adc2facc",
      "documentation": "Enable and Configure Backups for a Server",
      "method": "post",
      "endpoint": "servers/:id/actions/enable_backup",
      "responses": [
        {
          "uuid": "82772a15-0b8a-4f01-bb9c-30b704579f74",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key in the reply contains an Action object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a971ac22-6ab1-4473-9278-48aeec2b06c5",
      "documentation": "Enable Rescue Mode for a Server",
      "method": "post",
      "endpoint": "servers/:id/actions/enable_rescue",
      "responses": [
        {
          "uuid": "930f91db-9539-496c-b7b8-daf43f689881",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  },\n  \"root_password\": \"zCWbFhnu950dUTko5f40\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `root_password` key in the reply contains the root password that can be used to access the booted rescue system.\n\nThe `action` key in the reply contains an Action object with this structure\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2321a6bc-5017-4ca6-b483-ac5673a94e80",
      "documentation": "Power off a Server",
      "method": "post",
      "endpoint": "servers/:id/actions/poweroff",
      "responses": [
        {
          "uuid": "bf5434d6-82f6-4156-9b6e-59b8958ec936",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key in the reply contains an Action object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2deebd0a-22e6-4f1d-bb9b-0fb3cf49e381",
      "documentation": "Power on a Server",
      "method": "post",
      "endpoint": "servers/:id/actions/poweron",
      "responses": [
        {
          "uuid": "00d22550-9322-4726-b479-4e531dbaa4af",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key in the reply contains an Action object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e802af8f-597c-478a-b4c3-f4aba63bf86d",
      "documentation": "Soft-reboot a Server",
      "method": "post",
      "endpoint": "servers/:id/actions/reboot",
      "responses": [
        {
          "uuid": "3bfb7439-bf53-49fb-bf33-19dd7c9da90c",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key in the reply contains an Action object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ee539794-9259-4a43-9382-0b7cb9c41a13",
      "documentation": "Rebuild a Server from an Image",
      "method": "post",
      "endpoint": "servers/:id/actions/rebuild",
      "responses": [
        {
          "uuid": "064f848f-fbad-4e68-9463-1a8ab5540902",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  },\n  \"root_password\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key in the reply contains an Action object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9a62a6c2-ea34-4139-aff2-550647cba8e9",
      "documentation": "Remove from Placement Group",
      "method": "post",
      "endpoint": "servers/:id/actions/remove_from_placement_group",
      "responses": [
        {
          "uuid": "53ce0e60-4bf1-4ccf-92e7-b4fed910353d",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key in the reply contains an Action object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "817d88df-e866-4959-b623-c2cc8c1226ec",
      "documentation": "Request Console for a Server",
      "method": "post",
      "endpoint": "servers/:id/actions/request_console",
      "responses": [
        {
          "uuid": "419c3a69-e517-4071-bbe9-30e7d080969b",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  },\n  \"password\": \"9MQaTg2VAGI0FIpc10k3UpRXcHj2wQ6x\",\n  \"wss_url\": \"wss://console.hetzner.cloud/?server_id=1&token=3db32d15-af2f-459c-8bf8-dee1fd05f49c\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key in the reply contains an Action object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "680e5425-ef37-484a-b561-fce038c04d2b",
      "documentation": "Reset a Server",
      "method": "post",
      "endpoint": "servers/:id/actions/reset",
      "responses": [
        {
          "uuid": "f245ad2a-e132-4a0d-b82d-c2fc0b1291fa",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key in the reply contains an Action object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "58119930-a31a-43e5-9c75-9114069c6f9f",
      "documentation": "Reset root Password of a Server",
      "method": "post",
      "endpoint": "servers/:id/actions/reset_password",
      "responses": [
        {
          "uuid": "51e27962-0423-42b7-8212-53e877b1d6ff",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  },\n  \"root_password\": \"zCWbFhnu950dUTko5f40\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `root_password` key in the reply contains the new root password that will be active if the Action succeeds.\n\nThe `action` key in the reply contains an Action object with this structure:\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b20284d2-c8b7-485a-8aa3-1319d79fb48f",
      "documentation": "Shutdown a Server",
      "method": "post",
      "endpoint": "servers/:id/actions/shutdown",
      "responses": [
        {
          "uuid": "e241af64-8161-4be4-a3b5-a0f24cb26805",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key in the reply contains an Action object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4f50e274-9ffe-4ef1-8761-0ad12abcdc18",
      "documentation": "Get an Action for a Server",
      "method": "get",
      "endpoint": "servers/:id/actions/:action_id",
      "responses": [
        {
          "uuid": "d8a330ae-c108-406c-b3fb-f56dee277241",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `action` key in the reply has this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "874c0f41-e302-4595-b31d-eb0869ca9b88",
      "documentation": "Get Metrics for a Server",
      "method": "get",
      "endpoint": "servers/:id/metrics",
      "responses": [
        {
          "uuid": "c9f8dcb9-408e-4a18-945f-1339786f92b3",
          "body": "{\n  \"metrics\": {\n    \"end\": \"2017-01-01T23:00:00+00:00\",\n    \"start\": \"2017-01-01T00:00:00+00:00\",\n    \"step\": 60,\n    \"time_series\": {\n      \"name_of_timeseries\": {\n        \"values\": [\n          [\n            1435781470.622,\n            \"42\"\n          ],\n          [\n            1435781471.622,\n            \"43\"\n          ]\n        ]\n      }\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `metrics` key in the reply contains a metrics object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dda58331-6716-42b2-a52f-378829b613e4",
      "documentation": "Get all SSH keys",
      "method": "get",
      "endpoint": "ssh_keys",
      "responses": [
        {
          "uuid": "5537105e-5746-4b5e-bbb5-d2d43728ba4e",
          "body": "{\n  \"meta\": {\n    \"pagination\": {\n      \"last_page\": 4,\n      \"next_page\": 4,\n      \"page\": 3,\n      \"per_page\": 25,\n      \"previous_page\": 2,\n      \"total_entries\": 100\n    }\n  },\n  \"ssh_keys\": [\n    {\n      \"created\": \"2016-01-30T23:55:00+00:00\",\n      \"fingerprint\": \"b7:2f:30:a0:2f:6c:58:6c:21:04:58:61:ba:06:3b:2f\",\n      \"id\": 42,\n      \"labels\": {},\n      \"name\": \"my-resource\",\n      \"public_key\": \"ssh-rsa AAAjjk76kgf...Xt\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `ssh_keys` key in the reply contains an array of SSH key objects with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "97189c43-5894-4509-be3d-ffbb6d085f57",
      "documentation": "Create an SSH key",
      "method": "post",
      "endpoint": "ssh_keys",
      "responses": [
        {
          "uuid": "6f488834-370a-482a-8810-c3a67446afa7",
          "body": "{\n  \"ssh_key\": {\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"fingerprint\": \"b7:2f:30:a0:2f:6c:58:6c:21:04:58:61:ba:06:3b:2f\",\n    \"id\": 42,\n    \"labels\": {},\n    \"name\": \"my-resource\",\n    \"public_key\": \"ssh-rsa AAAjjk76kgf...Xt\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `ssh_key` key in the reply contains the object that was just created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c484fb52-40cf-4d2a-bc4e-629807950a9c",
      "documentation": "Delete an SSH key",
      "method": "delete",
      "endpoint": "ssh_keys/:id",
      "responses": [
        {
          "uuid": "179dc893-7e9f-423b-8cf1-4bb5550bd408",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "SSH key deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e5fc2749-da99-457e-872a-7800923744f0",
      "documentation": "Get a SSH key",
      "method": "get",
      "endpoint": "ssh_keys/:id",
      "responses": [
        {
          "uuid": "c908071b-dfca-4be1-8d60-5fc07f3b2aa6",
          "body": "{\n  \"ssh_key\": {\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"fingerprint\": \"b7:2f:30:a0:2f:6c:58:6c:21:04:58:61:ba:06:3b:2f\",\n    \"id\": 42,\n    \"labels\": {},\n    \"name\": \"my-resource\",\n    \"public_key\": \"ssh-rsa AAAjjk76kgf...Xt\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `ssh_key` key in the reply contains an SSH key object with this structure",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d6f7daf7-1d2c-46a3-ac0d-c26d19ade97c",
      "documentation": "Update an SSH key",
      "method": "put",
      "endpoint": "ssh_keys/:id",
      "responses": [
        {
          "uuid": "3d60de03-331e-4ffd-bbe8-fce5832bac74",
          "body": "{\n  \"ssh_key\": {\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"fingerprint\": \"b7:2f:30:a0:2f:6c:58:6c:21:04:58:61:ba:06:3b:2f\",\n    \"id\": 42,\n    \"labels\": {},\n    \"name\": \"my-resource\",\n    \"public_key\": \"ssh-rsa AAAjjk76kgf...Xt\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `ssh_key` key in the reply contains the modified SSH key object with the new description",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c4a4f641-b319-4740-87c3-900bcb913001",
      "documentation": "Get all Volumes",
      "method": "get",
      "endpoint": "volumes",
      "responses": [
        {
          "uuid": "eca967b1-3988-4930-be1a-1973731c9eed",
          "body": "{\n  \"meta\": {\n    \"pagination\": {\n      \"last_page\": 4,\n      \"next_page\": 4,\n      \"page\": 3,\n      \"per_page\": 25,\n      \"previous_page\": 2,\n      \"total_entries\": 100\n    }\n  },\n  \"volumes\": [\n    {\n      \"created\": \"2016-01-30T23:55:00+00:00\",\n      \"format\": \"xfs\",\n      \"id\": 42,\n      \"labels\": {},\n      \"linux_device\": \"/dev/disk/by-id/scsi-0HC_Volume_4711\",\n      \"location\": {\n        \"city\": \"Falkenstein\",\n        \"country\": \"DE\",\n        \"description\": \"Falkenstein DC Park 1\",\n        \"id\": 1,\n        \"latitude\": 50.47612,\n        \"longitude\": 12.370071,\n        \"name\": \"fsn1\",\n        \"network_zone\": \"eu-central\"\n      },\n      \"name\": \"my-resource\",\n      \"protection\": {\n        \"delete\": {{faker 'random.boolean'}}\n      },\n      \"server\": 12,\n      \"size\": 42,\n      \"status\": \"{{oneOf (array 'creating' 'available')}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `volumes` key contains a list of volumes",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8f4acc50-54a7-4a16-a3a0-cc7dedcec432",
      "documentation": "Create a Volume",
      "method": "post",
      "endpoint": "volumes",
      "responses": [
        {
          "uuid": "1533e5df-15fa-44b9-91e1-b0b897bd20fe",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  },\n  \"next_actions\": [\n    {\n      \"command\": \"start_server\",\n      \"error\": {\n        \"code\": \"action_failed\",\n        \"message\": \"Action failed\"\n      },\n      \"finished\": \"2016-01-30T23:55:00+00:00\",\n      \"id\": 42,\n      \"progress\": 100,\n      \"resources\": [\n        {\n          \"id\": 42,\n          \"type\": \"server\"\n        }\n      ],\n      \"started\": \"2016-01-30T23:55:00+00:00\",\n      \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n    }\n  ],\n  \"volume\": {\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"format\": \"xfs\",\n    \"id\": 42,\n    \"labels\": {},\n    \"linux_device\": \"/dev/disk/by-id/scsi-0HC_Volume_4711\",\n    \"location\": {\n      \"city\": \"Falkenstein\",\n      \"country\": \"DE\",\n      \"description\": \"Falkenstein DC Park 1\",\n      \"id\": 1,\n      \"latitude\": 50.47612,\n      \"longitude\": 12.370071,\n      \"name\": \"fsn1\",\n      \"network_zone\": \"eu-central\"\n    },\n    \"name\": \"my-resource\",\n    \"protection\": {\n      \"delete\": {{faker 'random.boolean'}}\n    },\n    \"server\": 12,\n    \"size\": 42,\n    \"status\": \"{{oneOf (array 'creating' 'available')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `volume` key contains the Volume that was just created\n\nThe `action` key contains the Action tracking Volume creation\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "28665009-6ca5-4747-810a-5220d1c1da9b",
      "documentation": "Delete a Volume",
      "method": "delete",
      "endpoint": "volumes/:id",
      "responses": [
        {
          "uuid": "0b0047c3-e8d1-4cea-8061-ebd4827f125c",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Volume deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "16e1177e-9433-43da-baf5-ebefde9d0c0a",
      "documentation": "Get a Volume",
      "method": "get",
      "endpoint": "volumes/:id",
      "responses": [
        {
          "uuid": "02d04f27-d4e2-4703-a1fa-371658ea1582",
          "body": "{\n  \"volume\": {\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"format\": \"xfs\",\n    \"id\": 42,\n    \"labels\": {},\n    \"linux_device\": \"/dev/disk/by-id/scsi-0HC_Volume_4711\",\n    \"location\": {\n      \"city\": \"Falkenstein\",\n      \"country\": \"DE\",\n      \"description\": \"Falkenstein DC Park 1\",\n      \"id\": 1,\n      \"latitude\": 50.47612,\n      \"longitude\": 12.370071,\n      \"name\": \"fsn1\",\n      \"network_zone\": \"eu-central\"\n    },\n    \"name\": \"my-resource\",\n    \"protection\": {\n      \"delete\": {{faker 'random.boolean'}}\n    },\n    \"server\": 12,\n    \"size\": 42,\n    \"status\": \"{{oneOf (array 'creating' 'available')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `volume` key contains the volume",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5312b784-7912-477d-99a6-907e8b895864",
      "documentation": "Update a Volume",
      "method": "put",
      "endpoint": "volumes/:id",
      "responses": [
        {
          "uuid": "ca32a73c-93fa-45e5-87dc-6fd450b830db",
          "body": "{\n  \"volume\": {\n    \"created\": \"2016-01-30T23:55:00+00:00\",\n    \"format\": \"xfs\",\n    \"id\": 42,\n    \"labels\": {},\n    \"linux_device\": \"/dev/disk/by-id/scsi-0HC_Volume_4711\",\n    \"location\": {\n      \"city\": \"Falkenstein\",\n      \"country\": \"DE\",\n      \"description\": \"Falkenstein DC Park 1\",\n      \"id\": 1,\n      \"latitude\": 50.47612,\n      \"longitude\": 12.370071,\n      \"name\": \"fsn1\",\n      \"network_zone\": \"eu-central\"\n    },\n    \"name\": \"my-resource\",\n    \"protection\": {\n      \"delete\": {{faker 'random.boolean'}}\n    },\n    \"server\": 12,\n    \"size\": 42,\n    \"status\": \"{{oneOf (array 'creating' 'available')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `volume` key contains the updated volume",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c27f4511-9940-4c82-8831-64dac67a5a59",
      "documentation": "Get all Actions for a Volume",
      "method": "get",
      "endpoint": "volumes/:id/actions",
      "responses": [
        {
          "uuid": "cc26fe0d-6111-43dd-83cf-ae768219373c",
          "body": "{\n  \"actions\": [\n    {\n      \"command\": \"start_server\",\n      \"error\": {\n        \"code\": \"action_failed\",\n        \"message\": \"Action failed\"\n      },\n      \"finished\": \"2016-01-30T23:55:00+00:00\",\n      \"id\": 42,\n      \"progress\": 100,\n      \"resources\": [\n        {\n          \"id\": 42,\n          \"type\": \"server\"\n        }\n      ],\n      \"started\": \"2016-01-30T23:55:00+00:00\",\n      \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n      \"last_page\": 4,\n      \"next_page\": 4,\n      \"page\": 3,\n      \"per_page\": 25,\n      \"previous_page\": 2,\n      \"total_entries\": 100\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `actions` key contains a list of Actions",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "94abb65f-ae10-45c1-bd63-03efe04a74a2",
      "documentation": "Attach Volume to a Server",
      "method": "post",
      "endpoint": "volumes/:id/actions/attach",
      "responses": [
        {
          "uuid": "a7ea9f2c-18b2-4143-b7c4-fba580cc8186",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `attach_volume` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5bb326a2-c325-4d31-a045-681b5aadee4f",
      "documentation": "Change Volume Protection",
      "method": "post",
      "endpoint": "volumes/:id/actions/change_protection",
      "responses": [
        {
          "uuid": "e21e5da9-bd8e-4fa2-8717-4137dcb6619f",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `change_protection` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "902a82b9-9505-42f0-92f3-3bdcc929c727",
      "documentation": "Detach Volume",
      "method": "post",
      "endpoint": "volumes/:id/actions/detach",
      "responses": [
        {
          "uuid": "1259301c-195c-4578-a218-814ea707d2be",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `detach_volume` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "66d7f506-afc2-4754-a507-ce1de27a12b4",
      "documentation": "Resize Volume",
      "method": "post",
      "endpoint": "volumes/:id/actions/resize",
      "responses": [
        {
          "uuid": "7fbcb868-6ea4-40c0-83e4-1d8f25497376",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The `action` key contains the `resize_volume` Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "56a784cd-2228-4a91-90bb-6dee742db520",
      "documentation": "Get an Action for a Volume",
      "method": "get",
      "endpoint": "volumes/:id/actions/:action_id",
      "responses": [
        {
          "uuid": "e31a666f-603e-4e44-b869-7a3d5003f01c",
          "body": "{\n  \"action\": {\n    \"command\": \"start_server\",\n    \"error\": {\n      \"code\": \"action_failed\",\n      \"message\": \"Action failed\"\n    },\n    \"finished\": \"2016-01-30T23:55:00+00:00\",\n    \"id\": 42,\n    \"progress\": 100,\n    \"resources\": [\n      {\n        \"id\": 42,\n        \"type\": \"server\"\n      }\n    ],\n    \"started\": \"2016-01-30T23:55:00+00:00\",\n    \"status\": \"{{oneOf (array 'success' 'running' 'error')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The `action` key contains the Volume Action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}