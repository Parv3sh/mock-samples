{
  "uuid": "c2a2276e-87ce-4da6-bd7c-f4a393b67597",
  "lastMigration": 19,
  "name": "Managed Service for Microsoft Active Directory API",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "97e5ab41-ceab-4066-bed0-20099cddc449",
      "documentation": "Deletes identified Peering.",
      "method": "delete",
      "endpoint": "v1beta1/:name",
      "responses": [
        {
          "uuid": "dac4a39a-1ad8-4a6c-925d-6f4c108cb80c",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "be12243b-c255-4255-9c20-c20836efd735",
      "documentation": "Gets details of a single Peering.",
      "method": "get",
      "endpoint": "v1beta1/:name",
      "responses": [
        {
          "uuid": "afb4a8dc-39fc-4b9e-b3cd-9b9ce9fb624c",
          "body": "{\n  \"authorizedNetwork\": \"\",\n  \"createTime\": \"\",\n  \"domainResource\": \"\",\n  \"labels\": {},\n  \"name\": \"\",\n  \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'CREATING' 'CONNECTED' 'DISCONNECTED' 'DELETING')}}\",\n  \"statusMessage\": \"\",\n  \"updateTime\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "58c4f597-c64b-4cbe-9855-2e4d6e341198",
      "documentation": "Updates the labels for specified Peering.",
      "method": "patch",
      "endpoint": "v1beta1/:name",
      "responses": [
        {
          "uuid": "89ded828-0528-4ac0-a73c-a14dca183c6b",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4d1a6427-ae7a-4d0a-8ef3-b8fe80f1e5d5",
      "documentation": "Gets the domain ldaps settings.",
      "method": "get",
      "endpoint": "v1beta1/:name/ldapssettings",
      "responses": [
        {
          "uuid": "72c31666-aaaa-403b-84bb-9819f3105b3a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e28a592d-e5cc-4518-8939-6e15ecf10b7f",
      "documentation": "Patches a single ldaps settings.",
      "method": "patch",
      "endpoint": "v1beta1/:name/ldapssettings",
      "responses": [
        {
          "uuid": "3784de48-36e1-43e3-8d66-fbb4e192795c",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "76ceaa44-d2af-4a05-a1b1-ce780d4f910d",
      "documentation": "Lists information about the supported locations for this service.",
      "method": "get",
      "endpoint": "v1beta1/:name/locations",
      "responses": [
        {
          "uuid": "f3251711-8deb-4438-9a01-391f00238c88",
          "body": "{\n  \"locations\": [\n    {\n      \"displayName\": \"\",\n      \"labels\": {},\n      \"locationId\": \"\",\n      \"metadata\": {},\n      \"name\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bde72ef8-bfde-46fa-abd6-5137af2c9298",
      "documentation": "Adds an AD trust to a domain.",
      "method": "post",
      "endpoint": "v1beta1/:name:attachTrust",
      "responses": [
        {
          "uuid": "799910fa-7433-46d9-a967-1d40506b0c58",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bff7bef1-c4a0-4505-9495-5eab54ce063a",
      "documentation": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
      "method": "post",
      "endpoint": "v1beta1/:name:cancel",
      "responses": [
        {
          "uuid": "7345d59a-9a93-473e-b402-1c44da8704aa",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "17d3e502-afcf-41e9-a833-d0bd9c6aee4d",
      "documentation": "Removes an AD trust.",
      "method": "post",
      "endpoint": "v1beta1/:name:detachTrust",
      "responses": [
        {
          "uuid": "2a7f77af-d3bb-4b4d-87e3-049d0ec3bedf",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8c2469bb-a145-4c12-b839-e8ab296bb6e3",
      "documentation": "Updates the DNS conditional forwarder.",
      "method": "post",
      "endpoint": "v1beta1/:name:reconfigureTrust",
      "responses": [
        {
          "uuid": "7d11880b-d8af-4abd-809f-f90eb2a45398",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a3e7acc1-7eb4-448f-9225-fd7e4fe646c1",
      "documentation": "Resets a domain's administrator password.",
      "method": "post",
      "endpoint": "v1beta1/:name:resetAdminPassword",
      "responses": [
        {
          "uuid": "2a7d26cf-40bc-48fd-9925-d257550818c3",
          "body": "{\n  \"password\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d910fe2e-6843-4dee-ae29-b05d87c26ad5",
      "documentation": "RestoreBackup restores domain mentioned in the RestoreBackupRequest",
      "method": "post",
      "endpoint": "v1beta1/:name:restore",
      "responses": [
        {
          "uuid": "229caea1-0705-420e-997a-b82f8248eb6c",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "de86c486-f54d-44ee-9346-fd4b678c1815",
      "documentation": "Validates a trust state, that the target domain is reachable, and that the target domain is able to accept incoming trust requests.",
      "method": "post",
      "endpoint": "v1beta1/:name:validateTrust",
      "responses": [
        {
          "uuid": "ebd2a029-1283-46a3-8200-a4da15b80df1",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2d9e0178-4942-4720-9b87-3094c03aff49",
      "documentation": "Lists Backup in a given project.",
      "method": "get",
      "endpoint": "v1beta1/:parent/backups",
      "responses": [
        {
          "uuid": "1eaf085b-521a-45fb-8d3a-80c82d23fece",
          "body": "{\n  \"backups\": [\n    {\n      \"createTime\": \"\",\n      \"labels\": {},\n      \"name\": \"\",\n      \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'CREATING' 'ACTIVE' 'FAILED' 'DELETING')}}\",\n      \"statusMessage\": \"\",\n      \"type\": \"{{oneOf (array 'TYPE_UNSPECIFIED' 'ON_DEMAND' 'SCHEDULED')}}\",\n      \"updateTime\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\",\n  \"unreachable\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "53c34317-c0e0-4d6c-91d4-35c65ec8c2a4",
      "documentation": "Creates a Backup for a domain.",
      "method": "post",
      "endpoint": "v1beta1/:parent/backups",
      "responses": [
        {
          "uuid": "bded034e-91b5-4d42-b886-bebff83274b0",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d90e1277-a4c2-4492-a0cb-50d077529f44",
      "documentation": "Lists domains in a project.",
      "method": "get",
      "endpoint": "v1beta1/:parent/domains",
      "responses": [
        {
          "uuid": "185ff440-872f-4546-94af-afdb1fc5a88d",
          "body": "{\n  \"domains\": [\n    {\n      \"admin\": \"\",\n      \"auditLogsEnabled\": {{faker 'random.boolean'}},\n      \"authorizedNetworks\": [\n        \"\"\n      ],\n      \"createTime\": \"\",\n      \"fqdn\": \"\",\n      \"labels\": {},\n      \"locations\": [\n        \"\"\n      ],\n      \"name\": \"\",\n      \"reservedIpRange\": \"\",\n      \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'CREATING' 'READY' 'UPDATING' 'DELETING' 'REPAIRING' 'PERFORMING_MAINTENANCE' 'UNAVAILABLE')}}\",\n      \"statusMessage\": \"\",\n      \"trusts\": [\n        {\n          \"createTime\": \"\",\n          \"lastTrustHeartbeatTime\": \"\",\n          \"selectiveAuthentication\": {{faker 'random.boolean'}},\n          \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'CREATING' 'UPDATING' 'DELETING' 'CONNECTED' 'DISCONNECTED')}}\",\n          \"stateDescription\": \"\",\n          \"targetDnsIpAddresses\": [\n            \"\"\n          ],\n          \"targetDomainName\": \"\",\n          \"trustDirection\": \"{{oneOf (array 'TRUST_DIRECTION_UNSPECIFIED' 'INBOUND' 'OUTBOUND' 'BIDIRECTIONAL')}}\",\n          \"trustHandshakeSecret\": \"\",\n          \"trustType\": \"{{oneOf (array 'TRUST_TYPE_UNSPECIFIED' 'FOREST' 'EXTERNAL')}}\",\n          \"updateTime\": \"\"\n        }\n      ],\n      \"updateTime\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\",\n  \"unreachable\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4a062d8b-2e6d-4397-9d29-0f26f73cb670",
      "documentation": "Creates a Microsoft AD domain.",
      "method": "post",
      "endpoint": "v1beta1/:parent/domains",
      "responses": [
        {
          "uuid": "a9f55da6-422e-49e1-95e1-0cbb21d1146d",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "329c8cf9-8d8b-49c9-9b5d-2c650de64c3d",
      "documentation": "Lists Peerings in a given project.",
      "method": "get",
      "endpoint": "v1beta1/:parent/peerings",
      "responses": [
        {
          "uuid": "f6dbdcd1-4f1e-4e57-ab7c-16b21c40a9ab",
          "body": "{\n  \"nextPageToken\": \"\",\n  \"peerings\": [\n    {\n      \"authorizedNetwork\": \"\",\n      \"createTime\": \"\",\n      \"domainResource\": \"\",\n      \"labels\": {},\n      \"name\": \"\",\n      \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'CREATING' 'CONNECTED' 'DISCONNECTED' 'DELETING')}}\",\n      \"statusMessage\": \"\",\n      \"updateTime\": \"\"\n    }\n  ],\n  \"unreachable\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7ded983c-c7d4-4950-a765-e50ca7076966",
      "documentation": "Creates a Peering for Managed AD instance.",
      "method": "post",
      "endpoint": "v1beta1/:parent/peerings",
      "responses": [
        {
          "uuid": "b8f8bd75-28e0-4b30-aa1c-5388f31f69f5",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4f0c1254-a0ac-409d-81bd-a45c91b6d4ad",
      "documentation": "Lists SqlIntegrations in a given domain.",
      "method": "get",
      "endpoint": "v1beta1/:parent/sqlIntegrations",
      "responses": [
        {
          "uuid": "328c9173-93a5-460a-a0d2-78e34bb73358",
          "body": "{\n  \"nextPageToken\": \"\",\n  \"sqlIntegrations\": [\n    {\n      \"createTime\": \"\",\n      \"name\": \"\",\n      \"sqlInstance\": \"\",\n      \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'CREATING' 'DELETING' 'READY')}}\",\n      \"updateTime\": \"\"\n    }\n  ],\n  \"unreachable\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c9c5663c-4e35-4080-87e2-70cc46628923",
      "documentation": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
      "method": "get",
      "endpoint": "v1beta1/:resource:getIamPolicy",
      "responses": [
        {
          "uuid": "0d181156-430c-46a1-988b-1bc096175d92",
          "body": "{\n  \"bindings\": [\n    {\n      \"condition\": {\n        \"description\": \"\",\n        \"expression\": \"\",\n        \"location\": \"\",\n        \"title\": \"\"\n      },\n      \"members\": [\n        \"\"\n      ],\n      \"role\": \"\"\n    }\n  ],\n  \"etag\": \"\",\n  \"version\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bf3c184a-52b2-485e-97ad-ba6898b61d81",
      "documentation": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
      "method": "post",
      "endpoint": "v1beta1/:resource:setIamPolicy",
      "responses": [
        {
          "uuid": "a8384829-df19-44bb-81f3-c12dc0e24b90",
          "body": "{\n  \"bindings\": [\n    {\n      \"condition\": {\n        \"description\": \"\",\n        \"expression\": \"\",\n        \"location\": \"\",\n        \"title\": \"\"\n      },\n      \"members\": [\n        \"\"\n      ],\n      \"role\": \"\"\n    }\n  ],\n  \"etag\": \"\",\n  \"version\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6df23c73-ce2c-4351-9ac4-242b3726eeed",
      "documentation": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
      "method": "post",
      "endpoint": "v1beta1/:resource:testIamPermissions",
      "responses": [
        {
          "uuid": "600b6f76-50b5-47ad-8566-8e93b9650bb3",
          "body": "{\n  \"permissions\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}