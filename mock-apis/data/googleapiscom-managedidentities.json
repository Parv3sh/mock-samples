{
  "uuid": "340452ee-1b4f-41d0-8a1a-eb28d3f47afb",
  "lastMigration": 19,
  "name": "Managed Service for Microsoft Active Directory API",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "5ec7d05e-1957-464c-8242-70b4f9c59089",
      "documentation": "Deletes identified Peering.",
      "method": "delete",
      "endpoint": "v1beta1/:name",
      "responses": [
        {
          "uuid": "932b6ed0-874a-470a-bbff-194d7e8a465a",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ccadd4ac-53d0-48e0-838b-70ecf382692d",
      "documentation": "Gets details of a single Peering.",
      "method": "get",
      "endpoint": "v1beta1/:name",
      "responses": [
        {
          "uuid": "e9db9045-7bb4-4f59-81e9-220fc18fb5cb",
          "body": "{\n  \"authorizedNetwork\": \"\",\n  \"createTime\": \"\",\n  \"domainResource\": \"\",\n  \"labels\": {},\n  \"name\": \"\",\n  \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'CREATING' 'CONNECTED' 'DISCONNECTED' 'DELETING')}}\",\n  \"statusMessage\": \"\",\n  \"updateTime\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e73fa35a-0167-416a-ae39-0b390fd843e3",
      "documentation": "Updates the labels for specified Peering.",
      "method": "patch",
      "endpoint": "v1beta1/:name",
      "responses": [
        {
          "uuid": "dacf6906-ce7b-4d2a-89bf-dd42625a77fb",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "86669642-02a0-4062-a81b-6a1496b51c10",
      "documentation": "Gets the domain ldaps settings.",
      "method": "get",
      "endpoint": "v1beta1/:name/ldapssettings",
      "responses": [
        {
          "uuid": "a3c0c161-aeeb-4d6b-b88c-e3e34f4175b5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "80ae34da-7f1e-43d9-963b-2e187d9b4f6f",
      "documentation": "Patches a single ldaps settings.",
      "method": "patch",
      "endpoint": "v1beta1/:name/ldapssettings",
      "responses": [
        {
          "uuid": "dd845a6c-1a14-4c90-8aa7-d22047b0e3a4",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3abd5816-11ed-4ebc-b159-4f955767dd57",
      "documentation": "Lists information about the supported locations for this service.",
      "method": "get",
      "endpoint": "v1beta1/:name/locations",
      "responses": [
        {
          "uuid": "5d1e5a51-fecc-4f28-ae42-5e7bd5cc9fff",
          "body": "{\n  \"locations\": [\n    {\n      \"displayName\": \"\",\n      \"labels\": {},\n      \"locationId\": \"\",\n      \"metadata\": {},\n      \"name\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6746ed46-2bf6-4719-9123-fa8ebcca8a8a",
      "documentation": "Adds an AD trust to a domain.",
      "method": "post",
      "endpoint": "v1beta1/:name:attachTrust",
      "responses": [
        {
          "uuid": "441ff412-e4f4-4a3f-a9d8-f063b6bbc97d",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6ee2c8a7-1249-4f8d-9024-6d75926d8bd3",
      "documentation": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
      "method": "post",
      "endpoint": "v1beta1/:name:cancel",
      "responses": [
        {
          "uuid": "6e228c5d-f6f0-40a5-804b-d2424e330c8d",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7b232028-2679-4a33-bf6b-5f3cb0ca716b",
      "documentation": "Removes an AD trust.",
      "method": "post",
      "endpoint": "v1beta1/:name:detachTrust",
      "responses": [
        {
          "uuid": "6a1988b6-b762-4d4b-a297-97917674c4c4",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "752e49b5-1a40-4605-a435-68a3551c67e4",
      "documentation": "Updates the DNS conditional forwarder.",
      "method": "post",
      "endpoint": "v1beta1/:name:reconfigureTrust",
      "responses": [
        {
          "uuid": "285c1cc3-3630-4de8-994a-1f848b07744e",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3d3f1faf-e854-41c1-86d2-9b1c55f1def8",
      "documentation": "Resets a domain's administrator password.",
      "method": "post",
      "endpoint": "v1beta1/:name:resetAdminPassword",
      "responses": [
        {
          "uuid": "15f27fc2-94c4-4807-9621-d732b3ca64e3",
          "body": "{\n  \"password\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ab23048a-a682-45e8-bf31-e761acfa6f63",
      "documentation": "RestoreBackup restores domain mentioned in the RestoreBackupRequest",
      "method": "post",
      "endpoint": "v1beta1/:name:restore",
      "responses": [
        {
          "uuid": "7cfaf915-7ee9-4d00-8280-d2199c9292f4",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c7d0be73-9ac2-400b-b3a1-90ca6eae0f03",
      "documentation": "Validates a trust state, that the target domain is reachable, and that the target domain is able to accept incoming trust requests.",
      "method": "post",
      "endpoint": "v1beta1/:name:validateTrust",
      "responses": [
        {
          "uuid": "9a18c501-955d-4f1a-bd1a-9619ee22a620",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "30e48c21-471c-4173-98a6-192f6f8a2a14",
      "documentation": "Lists Backup in a given project.",
      "method": "get",
      "endpoint": "v1beta1/:parent/backups",
      "responses": [
        {
          "uuid": "146be776-a4c5-4c90-b52b-3807d950801a",
          "body": "{\n  \"backups\": [\n    {\n      \"createTime\": \"\",\n      \"labels\": {},\n      \"name\": \"\",\n      \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'CREATING' 'ACTIVE' 'FAILED' 'DELETING')}}\",\n      \"statusMessage\": \"\",\n      \"type\": \"{{oneOf (array 'TYPE_UNSPECIFIED' 'ON_DEMAND' 'SCHEDULED')}}\",\n      \"updateTime\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\",\n  \"unreachable\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c1148210-86d1-4e6c-8faf-0721b0daddd3",
      "documentation": "Creates a Backup for a domain.",
      "method": "post",
      "endpoint": "v1beta1/:parent/backups",
      "responses": [
        {
          "uuid": "8d570c11-2e68-4254-a1bd-19f3093fe6aa",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5bd70ec9-1470-4bb7-8086-ba1a4c23b07b",
      "documentation": "Lists domains in a project.",
      "method": "get",
      "endpoint": "v1beta1/:parent/domains",
      "responses": [
        {
          "uuid": "96bf2ab5-e5a6-4946-9193-cc29f83cb12c",
          "body": "{\n  \"domains\": [\n    {\n      \"admin\": \"\",\n      \"auditLogsEnabled\": {{faker 'random.boolean'}},\n      \"authorizedNetworks\": [\n        \"\"\n      ],\n      \"createTime\": \"\",\n      \"fqdn\": \"\",\n      \"labels\": {},\n      \"locations\": [\n        \"\"\n      ],\n      \"name\": \"\",\n      \"reservedIpRange\": \"\",\n      \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'CREATING' 'READY' 'UPDATING' 'DELETING' 'REPAIRING' 'PERFORMING_MAINTENANCE' 'UNAVAILABLE')}}\",\n      \"statusMessage\": \"\",\n      \"trusts\": [\n        {\n          \"createTime\": \"\",\n          \"lastTrustHeartbeatTime\": \"\",\n          \"selectiveAuthentication\": {{faker 'random.boolean'}},\n          \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'CREATING' 'UPDATING' 'DELETING' 'CONNECTED' 'DISCONNECTED')}}\",\n          \"stateDescription\": \"\",\n          \"targetDnsIpAddresses\": [\n            \"\"\n          ],\n          \"targetDomainName\": \"\",\n          \"trustDirection\": \"{{oneOf (array 'TRUST_DIRECTION_UNSPECIFIED' 'INBOUND' 'OUTBOUND' 'BIDIRECTIONAL')}}\",\n          \"trustHandshakeSecret\": \"\",\n          \"trustType\": \"{{oneOf (array 'TRUST_TYPE_UNSPECIFIED' 'FOREST' 'EXTERNAL')}}\",\n          \"updateTime\": \"\"\n        }\n      ],\n      \"updateTime\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\",\n  \"unreachable\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f3f47cb5-be0b-4021-aa20-7bfa2ae4e7a5",
      "documentation": "Creates a Microsoft AD domain.",
      "method": "post",
      "endpoint": "v1beta1/:parent/domains",
      "responses": [
        {
          "uuid": "2c8d77bb-6a28-466e-82ef-3b371b968928",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7b1494c3-f245-4e63-b5f9-c71d47583cac",
      "documentation": "Lists Peerings in a given project.",
      "method": "get",
      "endpoint": "v1beta1/:parent/peerings",
      "responses": [
        {
          "uuid": "e486644f-9bec-4ad3-a715-52a13a091c1e",
          "body": "{\n  \"nextPageToken\": \"\",\n  \"peerings\": [\n    {\n      \"authorizedNetwork\": \"\",\n      \"createTime\": \"\",\n      \"domainResource\": \"\",\n      \"labels\": {},\n      \"name\": \"\",\n      \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'CREATING' 'CONNECTED' 'DISCONNECTED' 'DELETING')}}\",\n      \"statusMessage\": \"\",\n      \"updateTime\": \"\"\n    }\n  ],\n  \"unreachable\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fdb9f4b7-f75e-4631-a606-306129d90fbe",
      "documentation": "Creates a Peering for Managed AD instance.",
      "method": "post",
      "endpoint": "v1beta1/:parent/peerings",
      "responses": [
        {
          "uuid": "8883b3da-ed8b-4ad4-9f5e-922d5409d632",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3773e1e3-aa06-40af-a02b-6b5d3ba8fa09",
      "documentation": "Lists SqlIntegrations in a given domain.",
      "method": "get",
      "endpoint": "v1beta1/:parent/sqlIntegrations",
      "responses": [
        {
          "uuid": "4c82fe8f-7261-4a01-a05c-57cf57a0ec38",
          "body": "{\n  \"nextPageToken\": \"\",\n  \"sqlIntegrations\": [\n    {\n      \"createTime\": \"\",\n      \"name\": \"\",\n      \"sqlInstance\": \"\",\n      \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'CREATING' 'DELETING' 'READY')}}\",\n      \"updateTime\": \"\"\n    }\n  ],\n  \"unreachable\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c51ed76f-d2cc-409d-bb96-ae9e5b0468f8",
      "documentation": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
      "method": "get",
      "endpoint": "v1beta1/:resource:getIamPolicy",
      "responses": [
        {
          "uuid": "ab217b58-5e0e-4759-9a81-b065cb801b3f",
          "body": "{\n  \"bindings\": [\n    {\n      \"condition\": {\n        \"description\": \"\",\n        \"expression\": \"\",\n        \"location\": \"\",\n        \"title\": \"\"\n      },\n      \"members\": [\n        \"\"\n      ],\n      \"role\": \"\"\n    }\n  ],\n  \"etag\": \"\",\n  \"version\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "84b3bd65-8934-4780-875a-02cd75cc22a9",
      "documentation": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
      "method": "post",
      "endpoint": "v1beta1/:resource:setIamPolicy",
      "responses": [
        {
          "uuid": "5c237b0f-bd28-483e-b426-72905caa9690",
          "body": "{\n  \"bindings\": [\n    {\n      \"condition\": {\n        \"description\": \"\",\n        \"expression\": \"\",\n        \"location\": \"\",\n        \"title\": \"\"\n      },\n      \"members\": [\n        \"\"\n      ],\n      \"role\": \"\"\n    }\n  ],\n  \"etag\": \"\",\n  \"version\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7c683183-6a74-4655-818b-61528edf3e47",
      "documentation": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
      "method": "post",
      "endpoint": "v1beta1/:resource:testIamPermissions",
      "responses": [
        {
          "uuid": "22bed3e2-03a9-47e1-a80a-84122274bc21",
          "body": "{\n  \"permissions\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}